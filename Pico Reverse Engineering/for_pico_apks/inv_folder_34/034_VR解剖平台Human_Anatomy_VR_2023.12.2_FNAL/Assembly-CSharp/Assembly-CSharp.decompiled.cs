using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Diagnostics;
using System.Globalization;
using System.IO;
using System.Net;
using System.Net.Sockets;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Text;
using System.Threading;
using System.Threading.Tasks;
using Systems;
using Avatars;
using Awaiters;
using Cadaver;
using Cadaver.Model;
using CloudService;
using CloudServiceClient;
using CloudServiceContract;
using CloudServiceContract.Data.QuizStorage;
using Common;
using Common.Modules;
using DG.Tweening;
using DG.Tweening.Core;
using DG.Tweening.Plugins.Options;
using DICOM.Networking;
using Database;
using Database.Animation;
using Database.Cadaver;
using Dicom.Modules;
using Dicom.Modules.Networking;
using Dicom.Networking;
using Dicom.Scene;
using Dicom.Scene.Networking;
using Dicom.Utilities;
using Dicom.Views;
using DigitalRubyShared;
using Drawing;
using Drawing.Model;
using Eneter.Common.Collections;
using Eneter.Dicom.Reader.Model;
using FellowOakDicom;
using FellowOakDicom.Imaging;
using FellowOakDicom.Imaging.Render;
using FellowOakDicom.Network;
using FellowOakDicom.Network.Client;
using FunctionStack;
using FunctionsStack;
using Il2CppDummyDll;
using Interaction.Raycast;
using Labels;
using LeTai.Asset.TranslucentImage;
using LicenseManager;
using Localization;
using Login;
using MRTK.Extensions;
using MatchUp;
using Microsoft.MixedReality.Toolkit;
using Microsoft.MixedReality.Toolkit.Input;
using Microsoft.MixedReality.Toolkit.Physics;
using Microsoft.MixedReality.Toolkit.Teleport;
using Microsoft.MixedReality.Toolkit.UI;
using Microsoft.MixedReality.Toolkit.Utilities;
using Microsoft.MixedReality.Toolkit.Utilities.Solvers;
using Min_Max_Slider;
using Mirror;
using Mirror.Discovery;
using MixedReality.Generated.Extensions;
using Mobile;
using Mobile.Actions.Anatomy;
using Mobile.Actions.Interaction;
using Mobile.IAP;
using Mobile.Models;
using Mobile.Modules;
using Mobile.Networking;
using Mobile.Networking.Modules;
using Mobile.Presenters;
using Mobile.UI;
using Mobile.Views;
using Modules;
using Networking;
using Networking.Components;
using Networking.Matchmaking;
using NobleConnect.Ice;
using NobleConnect.Mirror;
using ObjectSpawner;
using Oculus.Platform.Models;
using Platforms;
using Presenters;
using Smooth;
using TMPro;
using Testing;
using UI;
using UI.Utilities;
using UniRx;
using Unity.Burst;
using Unity.Collections;
using Unity.Jobs;
using Unity.Mathematics;
using Unity.Profiling;
using Unity.VectorGraphics;
using UnityEngine;
using UnityEngine.AI;
using UnityEngine.Animations;
using UnityEngine.EventSystems;
using UnityEngine.Events;
using UnityEngine.Networking;
using UnityEngine.Rendering;
using UnityEngine.ResourceManagement.AsyncOperations;
using UnityEngine.SceneManagement;
using UnityEngine.UI;
using UnityEngine.UI.Extensions;
using UnityEngine.UI.Extensions.ColorPicker;
using UnityEngine.Video;
using UnityEngine.XR;
using UnityEngine.XR.ARFoundation;
using UnityEngine.XR.ARSubsystems;
using UnityVolumeRendering;
using Utilities;
using Utilities.CameraFade;
using Utils;
using VE.IAP;
using VE.IAP.View;
using VM.LicenseManager;
using VR.DICOM;
using VR.Drawing;
using VR.FileBrowser;
using VR.FuncCommands;
using VR.HandMenu;
using VR.Input;
using VR.Licensing;
using VR.Localization;
using VR.MRTK;
using VR.Models;
using VR.Modules;
using VR.Networking;
using VR.Networking.Modules;
using VR.PACS;
using VR.Presenters;
using VR.QuizUtilities.UI;
using VR.Search;
using VR.Tutorial;
using VR.UI;
using VR.Utilities;
using VR.Utils;
using VR.Views;
using Views;
using Views.Keyboard;
using Views.UI;
using VivoxUnity;
using VoiceChat.Vivox;
using _2D.UI;

[assembly: AssemblyVersion("0.0.0.0")]
[Token(Token = "0x2000002")]
public class GUILabelFromText : MonoBehaviour
{
	[Token(Token = "0x4000001")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextAsset textFile;

	[Token(Token = "0x4000002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Texture2D textBackground;

	[Token(Token = "0x4000003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector2 position;

	[Token(Token = "0x4000004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string text;

	[Token(Token = "0x6000001")]
	[Address(RVA = "0x1571D84", Offset = "0x1571D84", VA = "0x1571D84")]
	private void Start()
	{
	}

	[Token(Token = "0x6000002")]
	[Address(RVA = "0x1571DB4", Offset = "0x1571DB4", VA = "0x1571DB4")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000003")]
	[Address(RVA = "0x1571FD0", Offset = "0x1571FD0", VA = "0x1571FD0")]
	public GUILabelFromText()
	{
	}
}
[Serializable]
[Token(Token = "0x2000003")]
public class AnimationControllerModuleSettings
{
	[Token(Token = "0x4000005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject AnimationModelParent;

	[Token(Token = "0x4000006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject ModelParent;

	[Token(Token = "0x6000004")]
	[Address(RVA = "0x1571FD8", Offset = "0x1571FD8", VA = "0x1571FD8")]
	public AnimationControllerModuleSettings()
	{
	}
}
[Token(Token = "0x2000004")]
public class AnimationControllerModule : IAnimationModule<AnimationItemInstance>
{
	[StructLayout(3)]
	[Token(Token = "0x2000005")]
	[CompilerGenerated]
	private struct <SetActiveAnimation>d__12 : IAsyncStateMachine
	{
		[Token(Token = "0x400000B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x400000C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncTaskMethodBuilder <>t__builder;

		[Token(Token = "0x400000D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AnimationControllerModule <>4__this;

		[Token(Token = "0x400000E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string value;

		[Token(Token = "0x400000F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private TaskAwaiter<GameObject> <>u__1;

		[Token(Token = "0x600000E")]
		[Address(RVA = "0x157248C", Offset = "0x157248C", VA = "0x157248C", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x600000F")]
		[Address(RVA = "0x1572944", Offset = "0x1572944", VA = "0x1572944", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[Token(Token = "0x4000007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private AsyncOperationHandle<GameObject> _aktHandle;

	[Token(Token = "0x4000008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Mobile.Modules.ISystemsContainerModule _systemsContainerModule;

	[Token(Token = "0x4000009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly AnimationControllerModuleSettings _settings;

	[Token(Token = "0x17000001")]
	public AnimationItemInstance ActiveAnimation
	{
		[Token(Token = "0x6000006")]
		[Address(RVA = "0x1572024", Offset = "0x1572024", VA = "0x1572024", Slot = "4")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000007")]
		[Address(RVA = "0x157202C", Offset = "0x157202C", VA = "0x157202C")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000002")]
	public float AnimationTime
	{
		[Token(Token = "0x6000008")]
		[Address(RVA = "0x1572034", Offset = "0x1572034", VA = "0x1572034", Slot = "5")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000003")]
	public float AnimationSpeed
	{
		[Token(Token = "0x6000009")]
		[Address(RVA = "0x15720F4", Offset = "0x15720F4", VA = "0x15720F4", Slot = "6")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x6000005")]
	[Address(RVA = "0x1571FE0", Offset = "0x1571FE0", VA = "0x1571FE0")]
	public AnimationControllerModule(Mobile.Modules.ISystemsContainerModule systemsContainerModule, AnimationControllerModuleSettings settings)
	{
	}

	[Token(Token = "0x600000A")]
	[Address(RVA = "0x1572180", Offset = "0x1572180", VA = "0x1572180", Slot = "7")]
	[AsyncStateMachine(typeof(<SetActiveAnimation>d__12))]
	public Task SetActiveAnimation(string value)
	{
		return null;
	}

	[Token(Token = "0x600000B")]
	[Address(RVA = "0x1572284", Offset = "0x1572284", VA = "0x1572284", Slot = "8")]
	public void SetAnimationSpeed(float val)
	{
	}

	[Token(Token = "0x600000C")]
	[Address(RVA = "0x1572318", Offset = "0x1572318", VA = "0x1572318", Slot = "9")]
	public void SetAnimationTime(float val)
	{
	}

	[Token(Token = "0x600000D")]
	[Address(RVA = "0x15723AC", Offset = "0x15723AC", VA = "0x15723AC")]
	private void RemoveAnimation(AsyncOperationHandle<GameObject> aktHandle, AnimationItemInstance animationGameObject)
	{
	}
}
[Token(Token = "0x2000006")]
public static class ServerInfoExtensions
{
	[Token(Token = "0x6000010")]
	[Address(RVA = "0x1572950", Offset = "0x1572950", VA = "0x1572950")]
	public static string ToString(this IServerInfo serverInfo)
	{
		return null;
	}
}
[Token(Token = "0x2000007")]
public class AnimatorTimelineController : MonoBehaviour
{
	[Token(Token = "0x4000010")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Animator _animator;

	[Token(Token = "0x6000011")]
	[Address(RVA = "0x1572EB4", Offset = "0x1572EB4", VA = "0x1572EB4")]
	public void SetTrigger(string trigger)
	{
	}

	[Token(Token = "0x6000012")]
	[Address(RVA = "0x1572ED0", Offset = "0x1572ED0", VA = "0x1572ED0")]
	public void SetBool(string name)
	{
	}

	[Token(Token = "0x6000013")]
	[Address(RVA = "0x1572F1C", Offset = "0x1572F1C", VA = "0x1572F1C")]
	public void SetBoolToFalse(string name)
	{
	}

	[Token(Token = "0x6000014")]
	[Address(RVA = "0x1572F3C", Offset = "0x1572F3C", VA = "0x1572F3C")]
	public void SetBoolToTrue(string name)
	{
	}

	[Token(Token = "0x6000015")]
	[Address(RVA = "0x1572F5C", Offset = "0x1572F5C", VA = "0x1572F5C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000016")]
	[Address(RVA = "0x1572FA4", Offset = "0x1572FA4", VA = "0x1572FA4")]
	public AnimatorTimelineController()
	{
	}
}
[Token(Token = "0x2000008")]
public class ARCompatibilityCheck : MonoBehaviour
{
	[Token(Token = "0x2000009")]
	[CompilerGenerated]
	private sealed class <StartCompatibilityCheck>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000012")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000013")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000014")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ARCompatibilityCheck <>4__this;

		[Token(Token = "0x4000015")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Promise<SessionAvailability> <request>5__2;

		[Token(Token = "0x17000004")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600001F")]
			[Address(RVA = "0x15733C8", Offset = "0x15733C8", VA = "0x15733C8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000005")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000021")]
			[Address(RVA = "0x1573410", Offset = "0x1573410", VA = "0x1573410", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600001C")]
		[Address(RVA = "0x1573210", Offset = "0x1573210", VA = "0x1573210")]
		[DebuggerHidden]
		public <StartCompatibilityCheck>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x600001D")]
		[Address(RVA = "0x1573240", Offset = "0x1573240", VA = "0x1573240", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600001E")]
		[Address(RVA = "0x1573244", Offset = "0x1573244", VA = "0x1573244", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000020")]
		[Address(RVA = "0x15733D0", Offset = "0x15733D0", VA = "0x15733D0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x14000001")]
	public event Action<SessionAvailability> ArAvailability
	{
		[Token(Token = "0x6000017")]
		[Address(RVA = "0x1572FAC", Offset = "0x1572FAC", VA = "0x1572FAC")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000018")]
		[Address(RVA = "0x157305C", Offset = "0x157305C", VA = "0x157305C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000019")]
	[Address(RVA = "0x157310C", Offset = "0x157310C", VA = "0x157310C")]
	public void StartCheck()
	{
	}

	[Token(Token = "0x600001A")]
	[Address(RVA = "0x157319C", Offset = "0x157319C", VA = "0x157319C")]
	[IteratorStateMachine(typeof(<StartCompatibilityCheck>d__4))]
	private IEnumerator StartCompatibilityCheck()
	{
		return null;
	}

	[Token(Token = "0x600001B")]
	[Address(RVA = "0x1573238", Offset = "0x1573238", VA = "0x1573238")]
	public ARCompatibilityCheck()
	{
	}
}
[Token(Token = "0x200000A")]
public class ARPlaceOnTap : MonoBehaviour
{
	[Token(Token = "0x4000016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private ARRaycastManager _arRaycastManager;

	[Token(Token = "0x4000017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Vector3ReactiveProperty _placeReactiveProperty;

	[Token(Token = "0x4000018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool IsRaycastActive;

	[Token(Token = "0x4000019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector2 _touchPos;

	[Token(Token = "0x400001A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static List<ARRaycastHit> _hits;

	[Token(Token = "0x17000006")]
	public IObservable<Vector3> ObjectPlacementObservable
	{
		[Token(Token = "0x6000022")]
		[Address(RVA = "0x1573418", Offset = "0x1573418", VA = "0x1573418")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000023")]
	[Address(RVA = "0x1573420", Offset = "0x1573420", VA = "0x1573420")]
	private bool TryGetTouchPosition(out Vector2 touchPosition)
	{
		return default(bool);
	}

	[Token(Token = "0x6000024")]
	[Address(RVA = "0x1573498", Offset = "0x1573498", VA = "0x1573498")]
	private void Update()
	{
	}

	[Token(Token = "0x6000025")]
	[Address(RVA = "0x1573674", Offset = "0x1573674", VA = "0x1573674")]
	public ARPlaceOnTap()
	{
	}
}
[Token(Token = "0x200000B")]
public enum AppMode
{
	[Token(Token = "0x400001C")]
	Normal,
	[Token(Token = "0x400001D")]
	AR
}
[Token(Token = "0x200000C")]
public enum AppState
{
	[Token(Token = "0x400001F")]
	Normal_2D,
	[Token(Token = "0x4000020")]
	Content_Loading,
	[Token(Token = "0x4000021")]
	AR_Running
}
[Token(Token = "0x200000D")]
public class ARSwitcher : MonoBehaviour
{
	[Token(Token = "0x200000E")]
	public enum ARState
	{
		[Token(Token = "0x4000043")]
		Scanning,
		[Token(Token = "0x4000044")]
		WaitingForPlacement,
		[Token(Token = "0x4000045")]
		Placed,
		[Token(Token = "0x4000046")]
		NotInAR
	}

	[Serializable]
	[Token(Token = "0x200000F")]
	public class SwitchableObjects
	{
		[Token(Token = "0x4000047")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private List<GameObject> _gameObjects;

		[Token(Token = "0x6000042")]
		[Address(RVA = "0x157472C", Offset = "0x157472C", VA = "0x157472C")]
		public void SetActive(bool val)
		{
		}

		[Token(Token = "0x6000043")]
		[Address(RVA = "0x1574C1C", Offset = "0x1574C1C", VA = "0x1574C1C")]
		public SwitchableObjects()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000011")]
	public class ARIcons
	{
		[Token(Token = "0x4000049")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private GameObject _iconsParent;

		[Token(Token = "0x400004A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Subject<ARState> _arStateReactiveProperty;

		[Token(Token = "0x1700000E")]
		public IObservable<ARState> ArStateObservable
		{
			[Token(Token = "0x6000046")]
			[Address(RVA = "0x1574CB8", Offset = "0x1574CB8", VA = "0x1574CB8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000047")]
		[Address(RVA = "0x1574290", Offset = "0x1574290", VA = "0x1574290")]
		public void OnPlaneFound(bool isContentPlaced)
		{
		}

		[Token(Token = "0x6000048")]
		[Address(RVA = "0x15749CC", Offset = "0x15749CC", VA = "0x15749CC")]
		public void OnArStarted()
		{
		}

		[Token(Token = "0x6000049")]
		[Address(RVA = "0x15739C0", Offset = "0x15739C0", VA = "0x15739C0")]
		public void Init(CompositeDisposable disposable)
		{
		}

		[Token(Token = "0x600004A")]
		[Address(RVA = "0x15745AC", Offset = "0x15745AC", VA = "0x15745AC")]
		public void OnPlaced()
		{
		}

		[Token(Token = "0x600004B")]
		[Address(RVA = "0x157480C", Offset = "0x157480C", VA = "0x157480C")]
		public void OnARDisabled()
		{
		}

		[Token(Token = "0x600004C")]
		[Address(RVA = "0x1574D44", Offset = "0x1574D44", VA = "0x1574D44")]
		public ARIcons()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000012")]
	private class OrbiterSettings
	{
		[Token(Token = "0x400004B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform OrbiterTransform;

		[Token(Token = "0x400004C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform OrbitTargetTransform;

		[Token(Token = "0x400004D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int YSpeed;

		[Token(Token = "0x400004E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool UseOneAxis;

		[Token(Token = "0x400004F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		public bool UsePanning;

		[Token(Token = "0x4000050")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
		public bool UseScaling;

		[Token(Token = "0x600004D")]
		[Address(RVA = "0x1574D4C", Offset = "0x1574D4C", VA = "0x1574D4C")]
		public OrbiterSettings()
		{
		}
	}

	[Token(Token = "0x4000022")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private CameraSetup _cameraSetup;

	[Token(Token = "0x4000023")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private UISpawnerController _uiSpawnerController;

	[Token(Token = "0x4000024")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private SwitchableObjects _arGameObjects;

	[Token(Token = "0x4000025")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private SwitchableObjects _2dGameObjects;

	[Token(Token = "0x4000026")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private ARIcons _arIcons;

	[Token(Token = "0x4000027")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private GameObject _arCheckGameObject;

	[Token(Token = "0x4000028")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Transform _2dContentParentTransform;

	[Token(Token = "0x4000029")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Transform _arContentParentTransform;

	[Token(Token = "0x400002A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private GameObject _contentGameObject;

	[Token(Token = "0x400002B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private GameObject _scaleGameobject;

	[Token(Token = "0x400002C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private ARPlaneManager _arPlaneManager;

	[Token(Token = "0x400002D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private HorizontalPlacement _horizontalPlacement;

	[Token(Token = "0x400002E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private ARPlaceOnTap _arPlaceOnTap;

	[Token(Token = "0x400002F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private UnityEvent _planesDetectedEvent;

	[Token(Token = "0x4000030")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private float _maxScale;

	[Token(Token = "0x4000031")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	[SerializeField]
	private float _minScale;

	[Token(Token = "0x4000032")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private OrbiterSettings _2dOrbiterSettings;

	[Token(Token = "0x4000033")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private OrbiterSettings _arOrbiterSettings;

	[Token(Token = "0x4000034")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private TranslucentImageSource _mainImageSource;

	[Token(Token = "0x4000035")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private TranslucentImageSource _arImageSource;

	[Token(Token = "0x4000036")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private List<TranslucentImage> _translucentImages;

	[Token(Token = "0x4000037")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private bool _planeFound;

	[Token(Token = "0x4000038")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB9")]
	private bool _isContentPlaced;

	[Token(Token = "0x4000039")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBA")]
	[SerializeField]
	private bool _isContentHorizontal;

	[Token(Token = "0x400003A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBB")]
	[SerializeField]
	private bool _debugMode;

	[Token(Token = "0x400003B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	[SerializeField]
	private bool _isARSupported;

	[Token(Token = "0x400003C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SerializeField]
	private ReactiveProperty<AppMode> _applicationMode;

	[Token(Token = "0x400003D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[SerializeField]
	private AppState _appState;

	[Token(Token = "0x400003E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[SerializeField]
	private ReactiveProperty<AppState> _appStateReactiveProperty;

	[Token(Token = "0x400003F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[SerializeField]
	private ARCompatibilityCheck _arCompatibilityCheck;

	[Token(Token = "0x4000040")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private readonly CompositeDisposable _disposable;

	[Token(Token = "0x4000041")]
	private const string AR_CHECK = "ARCheck";

	[Token(Token = "0x17000007")]
	public ARCompatibilityCheck ARCompatibilityCheck
	{
		[Token(Token = "0x6000027")]
		[Address(RVA = "0x1573714", Offset = "0x1573714", VA = "0x1573714")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000008")]
	public ARIcons ARPopUpsAndIcons
	{
		[Token(Token = "0x6000028")]
		[Address(RVA = "0x157371C", Offset = "0x157371C", VA = "0x157371C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000009")]
	public bool IsContentHorizontal
	{
		[Token(Token = "0x6000029")]
		[Address(RVA = "0x1573724", Offset = "0x1573724", VA = "0x1573724")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700000A")]
	public HorizontalPlacement HorizontalPlacement
	{
		[Token(Token = "0x600002A")]
		[Address(RVA = "0x157372C", Offset = "0x157372C", VA = "0x157372C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700000B")]
	public AppMode CurrentAppMode
	{
		[Token(Token = "0x600002B")]
		[Address(RVA = "0x15737DC", Offset = "0x15737DC", VA = "0x15737DC")]
		get
		{
			return default(AppMode);
		}
	}

	[Token(Token = "0x1700000C")]
	public IObservable<AppMode> ApplicationMode
	{
		[Token(Token = "0x600002C")]
		[Address(RVA = "0x1573828", Offset = "0x1573828", VA = "0x1573828")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700000D")]
	public AppState ApplicationState
	{
		[Token(Token = "0x6000038")]
		[Address(RVA = "0x1574614", Offset = "0x1574614", VA = "0x1574614")]
		get
		{
			return default(AppState);
		}
		[Token(Token = "0x6000039")]
		[Address(RVA = "0x157461C", Offset = "0x157461C", VA = "0x157461C")]
		set
		{
		}
	}

	[Token(Token = "0x600002D")]
	[Address(RVA = "0x15738B8", Offset = "0x15738B8", VA = "0x15738B8")]
	private void Awake()
	{
	}

	[Token(Token = "0x600002E")]
	[Address(RVA = "0x1573AA8", Offset = "0x1573AA8", VA = "0x1573AA8")]
	private void Start()
	{
	}

	[Token(Token = "0x600002F")]
	[Address(RVA = "0x1573B40", Offset = "0x1573B40", VA = "0x1573B40")]
	private void OnUiInitialized()
	{
	}

	[Token(Token = "0x6000030")]
	[Address(RVA = "0x1573CEC", Offset = "0x1573CEC", VA = "0x1573CEC")]
	public void ChangeARMode(bool val)
	{
	}

	[Token(Token = "0x6000031")]
	[Address(RVA = "0x15740C4", Offset = "0x15740C4", VA = "0x15740C4")]
	public void EnableARContentPlacement(bool val)
	{
	}

	[Token(Token = "0x6000032")]
	[Address(RVA = "0x1573BDC", Offset = "0x1573BDC", VA = "0x1573BDC")]
	private void InitArPlacement()
	{
	}

	[Token(Token = "0x6000033")]
	[Address(RVA = "0x15740E4", Offset = "0x15740E4", VA = "0x15740E4")]
	public void OnPlaneFoundSetCompatibility()
	{
	}

	[Token(Token = "0x6000034")]
	[Address(RVA = "0x1574178", Offset = "0x1574178", VA = "0x1574178")]
	protected void OnEnable()
	{
	}

	[Token(Token = "0x6000035")]
	[Address(RVA = "0x1574204", Offset = "0x1574204", VA = "0x1574204")]
	private void OnPlanesChanged(ARPlanesChangedEventArgs planes)
	{
	}

	[Token(Token = "0x6000036")]
	[Address(RVA = "0x15742F8", Offset = "0x15742F8", VA = "0x15742F8")]
	protected void OnDisable()
	{
	}

	[Token(Token = "0x6000037")]
	[Address(RVA = "0x157438C", Offset = "0x157438C", VA = "0x157438C")]
	private void PlaceContentOnPosition(Vector3 position)
	{
	}

	[Token(Token = "0x600003A")]
	[Address(RVA = "0x1574678", Offset = "0x1574678", VA = "0x1574678")]
	public void SetApplicationMode(AppMode mode)
	{
	}

	[Token(Token = "0x600003B")]
	[Address(RVA = "0x1573D68", Offset = "0x1573D68", VA = "0x1573D68")]
	public void SwitchMode(bool isArOn)
	{
	}

	[Token(Token = "0x600003C")]
	[Address(RVA = "0x1574860", Offset = "0x1574860", VA = "0x1574860")]
	private void SetTranslucentSource(TranslucentImageSource source)
	{
	}

	[Token(Token = "0x600003D")]
	[Address(RVA = "0x1574A68", Offset = "0x1574A68", VA = "0x1574A68")]
	public void SetContentPosition(bool isHorizontal)
	{
	}

	[Token(Token = "0x600003E")]
	[Address(RVA = "0x1574AAC", Offset = "0x1574AAC", VA = "0x1574AAC")]
	public void ScaleSystems(float value)
	{
	}

	[Token(Token = "0x600003F")]
	[Address(RVA = "0x1574B64", Offset = "0x1574B64", VA = "0x1574B64")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000040")]
	[Address(RVA = "0x1574B78", Offset = "0x1574B78", VA = "0x1574B78")]
	public ARSwitcher()
	{
	}
}
[Token(Token = "0x2000013")]
public class HorizontalPlacement : MonoBehaviour
{
	[Token(Token = "0x4000051")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject _content;

	[Token(Token = "0x4000052")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform _verticalTransform;

	[Token(Token = "0x4000053")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Transform _horizontalContentCenter;

	[Token(Token = "0x4000054")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float _animationTime;

	[Token(Token = "0x4000055")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private Ease _ease;

	[Token(Token = "0x600004E")]
	[Address(RVA = "0x1574A34", Offset = "0x1574A34", VA = "0x1574A34")]
	public void Init()
	{
	}

	[Token(Token = "0x600004F")]
	[Address(RVA = "0x15749B8", Offset = "0x15749B8", VA = "0x15749B8")]
	public void SetContentOrientation(bool isHorizontal, bool animated = false)
	{
	}

	[Token(Token = "0x6000050")]
	[Address(RVA = "0x1574D64", Offset = "0x1574D64", VA = "0x1574D64")]
	private void SetContentOrientationToHorizontal(bool animated)
	{
	}

	[Token(Token = "0x6000051")]
	[Address(RVA = "0x1574DB0", Offset = "0x1574DB0", VA = "0x1574DB0")]
	private void SetContentOrientationToVertical(bool animated)
	{
	}

	[Token(Token = "0x6000052")]
	[Address(RVA = "0x1574DF8", Offset = "0x1574DF8", VA = "0x1574DF8")]
	private void AnimateOrientation(bool animated)
	{
	}

	[Token(Token = "0x6000053")]
	[Address(RVA = "0x1574F48", Offset = "0x1574F48", VA = "0x1574F48")]
	public HorizontalPlacement()
	{
	}
}
[Token(Token = "0x2000014")]
public class AnimationUiPresenter : MonoBehaviour
{
	[Token(Token = "0x2000015")]
	[CompilerGenerated]
	private sealed class <GetCategoryToggles>d__21 : IEnumerable<(Category, Toggle)>, IEnumerable, IEnumerator<(Category, Toggle)>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400006B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400006C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private (Category Category, Toggle toggle) <>2__current;

		[Token(Token = "0x400006D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <>l__initialThreadId;

		[Token(Token = "0x400006E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AnimationUiPresenter <>4__this;

		[Token(Token = "0x1700000F")]
		private (Category, Toggle) System.Collections.Generic.IEnumerator<(Database.Animation.CategoryCategory,UnityEngine.UI.Toggletoggle)>.Current
		{
			[Token(Token = "0x600005F")]
			[Address(RVA = "0x1576118", Offset = "0x1576118", VA = "0x1576118", Slot = "6")]
			[DebuggerHidden]
			get
			{
				return default((Category, Toggle));
			}
		}

		[Token(Token = "0x17000010")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000061")]
			[Address(RVA = "0x1576164", Offset = "0x1576164", VA = "0x1576164", Slot = "9")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600005C")]
		[Address(RVA = "0x1574FE0", Offset = "0x1574FE0", VA = "0x1574FE0")]
		[DebuggerHidden]
		public <GetCategoryToggles>d__21(int <>1__state)
		{
		}

		[Token(Token = "0x600005D")]
		[Address(RVA = "0x1575FAC", Offset = "0x1575FAC", VA = "0x1575FAC", Slot = "7")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600005E")]
		[Address(RVA = "0x1575FB0", Offset = "0x1575FB0", VA = "0x1575FB0", Slot = "8")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000060")]
		[Address(RVA = "0x1576124", Offset = "0x1576124", VA = "0x1576124", Slot = "10")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}

		[Token(Token = "0x6000062")]
		[Address(RVA = "0x15761C0", Offset = "0x15761C0", VA = "0x15761C0", Slot = "4")]
		[DebuggerHidden]
		private IEnumerator<(Category, Toggle)> System.Collections.Generic.IEnumerable<(Database.Animation.CategoryCategory,UnityEngine.UI.Toggletoggle)>.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6000063")]
		[Address(RVA = "0x157626C", Offset = "0x157626C", VA = "0x157626C", Slot = "5")]
		[DebuggerHidden]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}
	}

	[StructLayout(3)]
	[Token(Token = "0x200001A")]
	[CompilerGenerated]
	private struct <SetAnimationPanelActive>d__26 : IAsyncStateMachine
	{
		[Token(Token = "0x4000079")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x400007A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncVoidMethodBuilder <>t__builder;

		[Token(Token = "0x400007B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AnimationUiPresenter <>4__this;

		[Token(Token = "0x400007C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool state;

		[Token(Token = "0x400007D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TaskAwaiter <>u__1;

		[Token(Token = "0x6000077")]
		[Address(RVA = "0x1576C34", Offset = "0x1576C34", VA = "0x1576C34", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x6000078")]
		[Address(RVA = "0x1577938", Offset = "0x1577938", VA = "0x1577938", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[Token(Token = "0x4000056")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Slider _slider;

	[Token(Token = "0x4000057")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject _buttonsParent;

	[Token(Token = "0x4000058")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject _animationPlayPanel;

	[Token(Token = "0x4000059")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject _animationButtonsPanel;

	[Token(Token = "0x400005A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Toggle _buttonPrefab;

	[Token(Token = "0x400005B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Toggle _slowSpeed;

	[Token(Token = "0x400005C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Toggle _normalSpeed;

	[Token(Token = "0x400005D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Toggle _fastSpeed;

	[Token(Token = "0x400005E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Toggle _playStopToggle;

	[Token(Token = "0x400005F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private int _maxSlotCount;

	[Token(Token = "0x4000060")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private List<Toggle> _animationsButtons;

	[Token(Token = "0x4000061")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private SerializableAnimationDatabase _animationDatabase;

	[Token(Token = "0x4000062")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private List<Sprite> _animationsIcons;

	[Token(Token = "0x4000063")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private ToggleGroup _togleGroup;

	[Token(Token = "0x4000064")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private Toggle _head;

	[Token(Token = "0x4000065")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private Toggle _torso;

	[Token(Token = "0x4000066")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private Toggle _hand;

	[Token(Token = "0x4000067")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private Toggle _leg;

	[Token(Token = "0x4000068")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private INetworkModuleProviderFactory _moduleProviderFactory;

	[Token(Token = "0x4000069")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private CompositeDisposable _animationPanelDisposable;

	[Token(Token = "0x400006A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private ReactiveProperty<float> _speedMultiply;

	[Token(Token = "0x6000054")]
	[Address(RVA = "0x1574F5C", Offset = "0x1574F5C", VA = "0x1574F5C")]
	[IteratorStateMachine(typeof(<GetCategoryToggles>d__21))]
	public IEnumerable<(Category, Toggle)> GetCategoryToggles()
	{
		return null;
	}

	[Token(Token = "0x6000055")]
	[Address(RVA = "0x1575014", Offset = "0x1575014", VA = "0x1575014")]
	public void Init(INetworkModuleProviderFactory moduleProviderFactory)
	{
	}

	[Token(Token = "0x6000056")]
	[Address(RVA = "0x1575444", Offset = "0x1575444", VA = "0x1575444")]
	private void SetCategoryToggles(Category category)
	{
	}

	[Token(Token = "0x6000057")]
	[Address(RVA = "0x15756C0", Offset = "0x15756C0", VA = "0x15756C0")]
	public void SetAnimationsButtonsActive(bool state)
	{
	}

	[Token(Token = "0x6000058")]
	[Address(RVA = "0x15756E0", Offset = "0x15756E0", VA = "0x15756E0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000059")]
	[Address(RVA = "0x157576C", Offset = "0x157576C", VA = "0x157576C")]
	[AsyncStateMachine(typeof(<SetAnimationPanelActive>d__26))]
	public void SetAnimationPanelActive(bool state)
	{
	}

	[Token(Token = "0x600005A")]
	[Address(RVA = "0x1575828", Offset = "0x1575828", VA = "0x1575828")]
	[ContextMenu("InitializeItems")]
	private void InitializeItems()
	{
	}

	[Token(Token = "0x600005B")]
	[Address(RVA = "0x1575E3C", Offset = "0x1575E3C", VA = "0x1575E3C")]
	public AnimationUiPresenter()
	{
	}
}
[Token(Token = "0x200001D")]
public class EnterpriseOfferView : SubscriptionOfferView
{
	[Token(Token = "0x600007E")]
	[Address(RVA = "0x1577A78", Offset = "0x1577A78", VA = "0x1577A78")]
	public EnterpriseOfferView()
	{
	}
}
[Token(Token = "0x200001E")]
public class InteractiveSlider2D : MonoBehaviour
{
	[Token(Token = "0x4000081")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Slider _slider;

	[Token(Token = "0x4000082")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Button _increaseButton;

	[Token(Token = "0x4000083")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Button _decreaseButton;

	[Token(Token = "0x4000084")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private bool _smoothIncrement;

	[Token(Token = "0x4000085")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private float _animationTime;

	[Token(Token = "0x4000086")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private float _increment;

	[Token(Token = "0x4000087")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private FloatReactiveProperty _sliderValueReactiveProperty;

	[Token(Token = "0x4000088")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private readonly CompositeDisposable _disposable;

	[Token(Token = "0x17000011")]
	public IObservable<float> SliderValueObservable
	{
		[Token(Token = "0x600007F")]
		[Address(RVA = "0x1577A80", Offset = "0x1577A80", VA = "0x1577A80")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000080")]
	[Address(RVA = "0x1577A88", Offset = "0x1577A88", VA = "0x1577A88")]
	private void Start()
	{
	}

	[Token(Token = "0x6000081")]
	[Address(RVA = "0x1577DCC", Offset = "0x1577DCC", VA = "0x1577DCC")]
	private void SmoothIncrement(float value)
	{
	}

	[Token(Token = "0x6000082")]
	[Address(RVA = "0x1577DE4", Offset = "0x1577DE4", VA = "0x1577DE4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000083")]
	[Address(RVA = "0x1577DF8", Offset = "0x1577DF8", VA = "0x1577DF8")]
	public InteractiveSlider2D()
	{
	}
}
[Token(Token = "0x200001F")]
public class ItemFunctionsManager : MonoBehaviour
{
	[Token(Token = "0x2000020")]
	public enum ItemFunctionState
	{
		[Token(Token = "0x4000090")]
		None,
		[Token(Token = "0x4000091")]
		Isolated,
		[Token(Token = "0x4000092")]
		Faded,
		[Token(Token = "0x4000093")]
		FadedOthers,
		[Token(Token = "0x4000094")]
		Hidden
	}

	[Token(Token = "0x4000089")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private InteractiveToggle2D _isolateToggle;

	[Token(Token = "0x400008A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private InteractiveToggle2D _fadeOthersToggle;

	[Token(Token = "0x400008B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private InteractiveToggle2D _fadeToggle;

	[Token(Token = "0x400008C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private InteractiveToggle2D _hideToggle;

	[Token(Token = "0x400008D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly CompositeDisposable _disposable;

	[Token(Token = "0x400008E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<InteractiveToggle2D> _toggles;

	[Token(Token = "0x6000089")]
	[Address(RVA = "0x1578024", Offset = "0x1578024", VA = "0x1578024")]
	private void Start()
	{
	}

	[Token(Token = "0x600008A")]
	[Address(RVA = "0x15786B0", Offset = "0x15786B0", VA = "0x15786B0")]
	private void SetToggles(ItemFunctionState val)
	{
	}

	[Token(Token = "0x600008B")]
	[Address(RVA = "0x1578788", Offset = "0x1578788", VA = "0x1578788")]
	private void SetInteractabilityOfAllToggles(bool val)
	{
	}

	[Token(Token = "0x600008C")]
	[Address(RVA = "0x15788F0", Offset = "0x15788F0", VA = "0x15788F0")]
	private void SetToggleInteractability(InteractiveToggle2D toggle, bool val)
	{
	}

	[Token(Token = "0x600008D")]
	[Address(RVA = "0x1578AE0", Offset = "0x1578AE0", VA = "0x1578AE0")]
	private void SetFunctionState(bool val, ItemFunctionState state)
	{
	}

	[Token(Token = "0x600008E")]
	[Address(RVA = "0x1578AF8", Offset = "0x1578AF8", VA = "0x1578AF8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600008F")]
	[Address(RVA = "0x1578B0C", Offset = "0x1578B0C", VA = "0x1578B0C")]
	public ItemFunctionsManager()
	{
	}
}
[Token(Token = "0x2000022")]
public class LongClickButton : Button
{
	[Token(Token = "0x400009A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private bool _pointerDown;

	[Token(Token = "0x400009B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private float _pointerDownTimer;

	[Token(Token = "0x400009C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private float requiredHoldTime;

	[Token(Token = "0x14000002")]
	public event Action OnLongClick
	{
		[Token(Token = "0x600009A")]
		[Address(RVA = "0x1578CC0", Offset = "0x1578CC0", VA = "0x1578CC0")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x600009B")]
		[Address(RVA = "0x1578D60", Offset = "0x1578D60", VA = "0x1578D60")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x600009C")]
	[Address(RVA = "0x1578E00", Offset = "0x1578E00", VA = "0x1578E00", Slot = "32")]
	public override void OnPointerDown(PointerEventData eventData)
	{
	}

	[Token(Token = "0x600009D")]
	[Address(RVA = "0x1578E20", Offset = "0x1578E20", VA = "0x1578E20", Slot = "33")]
	public override void OnPointerUp(PointerEventData eventData)
	{
	}

	[Token(Token = "0x600009E")]
	[Address(RVA = "0x1578E4C", Offset = "0x1578E4C", VA = "0x1578E4C")]
	private void Update()
	{
	}

	[Token(Token = "0x600009F")]
	[Address(RVA = "0x1578E40", Offset = "0x1578E40", VA = "0x1578E40")]
	private void ResetImg()
	{
	}

	[Token(Token = "0x60000A0")]
	[Address(RVA = "0x1578EAC", Offset = "0x1578EAC", VA = "0x1578EAC")]
	public LongClickButton()
	{
	}
}
[Token(Token = "0x2000023")]
public class ScrollRectController : MonoBehaviour
{
	[Token(Token = "0x400009E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private ScrollRect _rect;

	[Token(Token = "0x400009F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Image _raycastImage;

	[Token(Token = "0x40000A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private List<Image> _raycastImages;

	[Token(Token = "0x40000A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private bool _isClicked;

	[Token(Token = "0x60000A1")]
	[Address(RVA = "0x1578EC0", Offset = "0x1578EC0", VA = "0x1578EC0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000A2")]
	[Address(RVA = "0x1578F3C", Offset = "0x1578F3C", VA = "0x1578F3C")]
	private void Start()
	{
	}

	[Token(Token = "0x60000A3")]
	[Address(RVA = "0x157907C", Offset = "0x157907C", VA = "0x157907C")]
	private void Update()
	{
	}

	[Token(Token = "0x60000A4")]
	[Address(RVA = "0x15790F8", Offset = "0x15790F8", VA = "0x15790F8")]
	private void SetImagesRaycastTargets(bool value)
	{
	}

	[Token(Token = "0x60000A5")]
	[Address(RVA = "0x15791E0", Offset = "0x15791E0", VA = "0x15791E0")]
	public ScrollRectController()
	{
	}
}
[Token(Token = "0x2000025")]
public class UiAnimationHandler : MonoBehaviour
{
	[Token(Token = "0x40000A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private RectTransform _uiElement;

	[Token(Token = "0x40000A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform _offPosition;

	[Token(Token = "0x40000A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Transform _onPosition;

	[Token(Token = "0x40000A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Ease _ease;

	[Token(Token = "0x40000A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private float _animationTime;

	[Token(Token = "0x40000A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private bool _hideOnStart;

	[Token(Token = "0x40000A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private TweenerCore<Vector3, Vector3, VectorOptions> anim;

	[Token(Token = "0x60000AA")]
	[Address(RVA = "0x1579228", Offset = "0x1579228", VA = "0x1579228")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000AB")]
	[Address(RVA = "0x1579280", Offset = "0x1579280", VA = "0x1579280")]
	public void SetElementVisibility(bool val)
	{
	}

	[Token(Token = "0x60000AC")]
	[Address(RVA = "0x1579334", Offset = "0x1579334", VA = "0x1579334")]
	public UiAnimationHandler()
	{
	}
}
[Token(Token = "0x2000026")]
public class UiButtonToggle : MonoBehaviour
{
	[Token(Token = "0x40000AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Button _button;

	[Token(Token = "0x40000AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private BoolReactiveProperty _isOn;

	[Token(Token = "0x40000AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Image _checkbox;

	[Token(Token = "0x40000AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private bool _switchIcon;

	[Token(Token = "0x40000AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	[SerializeField]
	private bool _showCheckbox;

	[Token(Token = "0x40000AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Image _offImage;

	[Token(Token = "0x40000B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Image _onImage;

	[Token(Token = "0x40000B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private IDisposable _disposable;

	[Token(Token = "0x17000012")]
	public bool IsOn
	{
		[Token(Token = "0x60000AD")]
		[Address(RVA = "0x1579350", Offset = "0x1579350", VA = "0x1579350")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000013")]
	public IObservable<bool> OnValueChangedAsObservable
	{
		[Token(Token = "0x60000AE")]
		[Address(RVA = "0x1579398", Offset = "0x1579398", VA = "0x1579398")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000014")]
	public Button Button
	{
		[Token(Token = "0x60000AF")]
		[Address(RVA = "0x15793A0", Offset = "0x15793A0", VA = "0x15793A0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000015")]
	public bool Interactable
	{
		[Token(Token = "0x60000B0")]
		[Address(RVA = "0x15793A8", Offset = "0x15793A8", VA = "0x15793A8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60000B1")]
		[Address(RVA = "0x15793C4", Offset = "0x15793C4", VA = "0x15793C4")]
		set
		{
		}
	}

	[Token(Token = "0x60000B2")]
	[Address(RVA = "0x15793E4", Offset = "0x15793E4", VA = "0x15793E4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000B3")]
	[Address(RVA = "0x1579520", Offset = "0x1579520", VA = "0x1579520")]
	private void Toggle()
	{
	}

	[Token(Token = "0x60000B4")]
	[Address(RVA = "0x1579590", Offset = "0x1579590", VA = "0x1579590")]
	private void SetVisuals()
	{
	}

	[Token(Token = "0x60000B5")]
	[Address(RVA = "0x1579664", Offset = "0x1579664", VA = "0x1579664")]
	public void SetState(bool val)
	{
	}

	[Token(Token = "0x60000B6")]
	[Address(RVA = "0x15796E4", Offset = "0x15796E4", VA = "0x15796E4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60000B7")]
	[Address(RVA = "0x15797B0", Offset = "0x15797B0", VA = "0x15797B0")]
	public UiButtonToggle()
	{
	}
}
[Token(Token = "0x2000027")]
public class DemoHandler : MonoBehaviour
{
	[Token(Token = "0x40000B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private int _minute;

	[Token(Token = "0x40000B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private int _hour;

	[Token(Token = "0x40000B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private int _day;

	[Token(Token = "0x40000B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private int _month;

	[Token(Token = "0x40000B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private int _year;

	[Token(Token = "0x40000B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private string _mainScene;

	[Token(Token = "0x40000B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject _demoEndedText;

	[Token(Token = "0x60000B9")]
	[Address(RVA = "0x15797BC", Offset = "0x15797BC", VA = "0x15797BC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000BA")]
	[Address(RVA = "0x15797C0", Offset = "0x15797C0", VA = "0x15797C0")]
	private void CheckExpiration()
	{
	}

	[Token(Token = "0x60000BB")]
	[Address(RVA = "0x157996C", Offset = "0x157996C", VA = "0x157996C")]
	public DemoHandler()
	{
	}
}
[Token(Token = "0x2000028")]
public static class DeviceTypeIdentifier
{
	[Token(Token = "0x60000BC")]
	[Address(RVA = "0x15799C4", Offset = "0x15799C4", VA = "0x15799C4")]
	private static float DeviceDiagonalSizeInInches()
	{
		return default(float);
	}

	[Token(Token = "0x60000BD")]
	[Address(RVA = "0x1579A2C", Offset = "0x1579A2C", VA = "0x1579A2C")]
	public static float GetAspectRatio()
	{
		return default(float);
	}

	[Token(Token = "0x60000BE")]
	[Address(RVA = "0x1579A68", Offset = "0x1579A68", VA = "0x1579A68")]
	public static bool IsDeviceATablet()
	{
		return default(bool);
	}

	[Token(Token = "0x60000BF")]
	[Address(RVA = "0x1579AC8", Offset = "0x1579AC8", VA = "0x1579AC8")]
	public static void SetDeviceOrientation(bool isTablet)
	{
	}

	[Token(Token = "0x60000C0")]
	[Address(RVA = "0x1579B18", Offset = "0x1579B18", VA = "0x1579B18")]
	public static bool IsScreenHorizontal()
	{
		return default(bool);
	}
}
[Token(Token = "0x2000029")]
public static class MobileExtensions
{
	[Token(Token = "0x60000C1")]
	public static List<T> FindObjectsOfTypeAll<T>()
	{
		return null;
	}

	[Token(Token = "0x60000C2")]
	[Address(RVA = "0x1574B48", Offset = "0x1574B48", VA = "0x1574B48")]
	public static float Remap(this float value, float from1, float to1, float from2, float to2)
	{
		return default(float);
	}

	[Token(Token = "0x60000C3")]
	[Address(RVA = "0x1579B40", Offset = "0x1579B40", VA = "0x1579B40")]
	public static float Remap(this int value, float from1, float to1, float from2, float to2)
	{
		return default(float);
	}
}
[Token(Token = "0x200002A")]
public class HighlightItem : MonoBehaviour
{
	[Token(Token = "0x40000B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private MeshFilter _meshFilter;

	[Token(Token = "0x40000BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private MeshRenderer _meshRenderer;

	[Token(Token = "0x40000BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Sequence _highlightAnim;

	[Token(Token = "0x17000016")]
	public MeshFilter MeshFilter
	{
		[Token(Token = "0x60000C4")]
		[Address(RVA = "0x1579B60", Offset = "0x1579B60", VA = "0x1579B60")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000017")]
	public MeshRenderer Renderer
	{
		[Token(Token = "0x60000C5")]
		[Address(RVA = "0x1579B68", Offset = "0x1579B68", VA = "0x1579B68")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60000C6")]
	[Address(RVA = "0x1579B70", Offset = "0x1579B70", VA = "0x1579B70")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000C7")]
	[Address(RVA = "0x1579BF8", Offset = "0x1579BF8", VA = "0x1579BF8")]
	public void StartAnimation(Color hlColor, int emissionProperty, float delay = 0.5f)
	{
	}

	[Token(Token = "0x60000C8")]
	[Address(RVA = "0x1579F18", Offset = "0x1579F18", VA = "0x1579F18")]
	public void StopAnimation()
	{
	}

	[Token(Token = "0x60000C9")]
	[Address(RVA = "0x1579F28", Offset = "0x1579F28", VA = "0x1579F28")]
	public HighlightItem()
	{
	}
}
[Token(Token = "0x200002C")]
public class ScreenshotTaker : MonoBehaviour
{
	[Token(Token = "0x200002D")]
	public enum iOSDevice
	{
		[Token(Token = "0x40000C4")]
		iPhone65,
		[Token(Token = "0x40000C5")]
		iPhone61,
		[Token(Token = "0x40000C6")]
		iPhone58,
		[Token(Token = "0x40000C7")]
		iPhone55,
		[Token(Token = "0x40000C8")]
		iPhone47,
		[Token(Token = "0x40000C9")]
		iPad129,
		[Token(Token = "0x40000CA")]
		iPad11,
		[Token(Token = "0x40000CB")]
		iPad105,
		[Token(Token = "0x40000CC")]
		iPad97
	}

	[Serializable]
	[Token(Token = "0x200002E")]
	public class iOSDeviceResolution
	{
		[Token(Token = "0x40000CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[HideInInspector]
		public string Name;

		[Token(Token = "0x40000CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public iOSDevice Device;

		[Token(Token = "0x40000CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector2 Resolution;

		[Token(Token = "0x40000D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool IsIpad;

		[Token(Token = "0x40000D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		public bool IsNewIphone;

		[Token(Token = "0x60000D6")]
		[Address(RVA = "0x157A9C0", Offset = "0x157A9C0", VA = "0x157A9C0")]
		public iOSDeviceResolution(int screenSize)
		{
		}
	}

	[Token(Token = "0x40000BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string path;

	[Token(Token = "0x40000C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string _completePath;

	[Token(Token = "0x40000C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private List<iOSDeviceResolution> _devices;

	[Token(Token = "0x40000C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private int _index;

	[Token(Token = "0x60000CD")]
	[Address(RVA = "0x1579FDC", Offset = "0x1579FDC", VA = "0x1579FDC")]
	private void Start()
	{
	}

	[Token(Token = "0x60000CE")]
	[Address(RVA = "0x157A00C", Offset = "0x157A00C", VA = "0x157A00C")]
	[ContextMenu("Take Screenshot")]
	private void TakeScreenshot()
	{
	}

	[Token(Token = "0x60000CF")]
	[Address(RVA = "0x157A510", Offset = "0x157A510", VA = "0x157A510")]
	private void TakeNewIphoneScreenshots()
	{
	}

	[Token(Token = "0x60000D0")]
	[Address(RVA = "0x157A3CC", Offset = "0x157A3CC", VA = "0x157A3CC")]
	private void TakeOldIphoneScreenshots()
	{
	}

	[Token(Token = "0x60000D1")]
	[Address(RVA = "0x157A288", Offset = "0x157A288", VA = "0x157A288")]
	private void TakeIpadScreenshot()
	{
	}

	[Token(Token = "0x60000D2")]
	[Address(RVA = "0x157A654", Offset = "0x157A654", VA = "0x157A654")]
	private void TakeScreenshot(string path, iOSDeviceResolution device)
	{
	}

	[Token(Token = "0x60000D3")]
	[Address(RVA = "0x157A174", Offset = "0x157A174", VA = "0x157A174")]
	public static Vector2 GetMainGameViewSize()
	{
		return default(Vector2);
	}

	[Token(Token = "0x60000D4")]
	[Address(RVA = "0x157A8C8", Offset = "0x157A8C8", VA = "0x157A8C8")]
	[ContextMenu("Create list")]
	public void CreateList()
	{
	}

	[Token(Token = "0x60000D5")]
	[Address(RVA = "0x157AA60", Offset = "0x157AA60", VA = "0x157AA60")]
	public ScreenshotTaker()
	{
	}
}
[Token(Token = "0x2000030")]
[CreateAssetMenu]
public class VisualSettings : ScriptableObject
{
	[Serializable]
	[Token(Token = "0x2000031")]
	private class HighlightShaderSettings
	{
		[Token(Token = "0x40000E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Color HighlightColor;

		[Token(Token = "0x40000E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float Power;

		[Token(Token = "0x40000E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float Scale;

		[Token(Token = "0x40000EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float Bias;

		[Token(Token = "0x40000EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float Intensity;

		[Token(Token = "0x60000F2")]
		[Address(RVA = "0x157BBE4", Offset = "0x157BBE4", VA = "0x157BBE4")]
		public HighlightShaderSettings()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000032")]
	public class MaterialSettings
	{
		[Token(Token = "0x40000EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Color MainColor;

		[Token(Token = "0x40000ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Texture MainTexture2D;

		[Token(Token = "0x40000EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Texture NormalMap;

		[Token(Token = "0x40000EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Color EmissionColor;

		[Token(Token = "0x40000F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float Metallic;

		[Token(Token = "0x40000F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float Smoothness;

		[Token(Token = "0x40000F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[Header("Subparts")]
		public Texture SubpartTexture;

		[Token(Token = "0x40000F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Texture ColorMap;

		[Token(Token = "0x40000F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float EmissionThreshold;

		[Token(Token = "0x40000F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float BlendAlpha;

		[Token(Token = "0x60000F3")]
		[Address(RVA = "0x157BC00", Offset = "0x157BC00", VA = "0x157BC00")]
		public MaterialSettings(Color main, Texture mainTexture, Texture normalMap, Color emissionColor, float metallic, float smoothness)
		{
		}

		[Token(Token = "0x60000F4")]
		[Address(RVA = "0x157BCB4", Offset = "0x157BCB4", VA = "0x157BCB4")]
		public MaterialSettings(Material material)
		{
		}

		[Token(Token = "0x60000F5")]
		[Address(RVA = "0x157B2B0", Offset = "0x157B2B0", VA = "0x157B2B0")]
		public void GetMaterialValues(Material material, bool isBone = false)
		{
		}

		[Token(Token = "0x60000F6")]
		[Address(RVA = "0x157B768", Offset = "0x157B768", VA = "0x157B768")]
		public void SetMaterialValues(Material material, bool isBone = false)
		{
		}
	}

	[Token(Token = "0x40000D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Shader _baseHighlightShader;

	[Token(Token = "0x40000D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Shader _subPartHighlightShader;

	[Token(Token = "0x40000D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Shader _globalFadeShader;

	[Token(Token = "0x40000D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float _fadeTimer;

	[Token(Token = "0x40000DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Material _transparentMaterial;

	[Token(Token = "0x40000DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Material _fadeMaterial;

	[Token(Token = "0x40000DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Material _highlightMaterial;

	[Token(Token = "0x40000DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Material _transparentHighlightMaterial;

	[Token(Token = "0x40000DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Material _subPartHighlightMaterial;

	[Token(Token = "0x40000DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Shader _baseShader;

	[Token(Token = "0x40000E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private Shader _baseSubpartShader;

	[Token(Token = "0x40000E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private HighlightShaderSettings _highlightShaderSettings;

	[Token(Token = "0x40000E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private GameObject _highlightPrefab;

	[Token(Token = "0x40000E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private HighlightItem _currentHighlightGameObject;

	[Token(Token = "0x40000E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private MaterialSettings _materialSettings;

	[Token(Token = "0x40000E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private Shader _transparentShader;

	[Token(Token = "0x40000E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private Shader _shieldShader;

	[Token(Token = "0x17000018")]
	public Shader BaseHighlightShader
	{
		[Token(Token = "0x60000DC")]
		[Address(RVA = "0x157AB90", Offset = "0x157AB90", VA = "0x157AB90")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000019")]
	public Shader SubPartHighlightShader
	{
		[Token(Token = "0x60000DD")]
		[Address(RVA = "0x157AB98", Offset = "0x157AB98", VA = "0x157AB98")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700001A")]
	public Shader BaseShader
	{
		[Token(Token = "0x60000DE")]
		[Address(RVA = "0x157ABA0", Offset = "0x157ABA0", VA = "0x157ABA0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700001B")]
	public Shader SubPartShader
	{
		[Token(Token = "0x60000DF")]
		[Address(RVA = "0x157ABA8", Offset = "0x157ABA8", VA = "0x157ABA8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700001C")]
	public Shader TransparentShader
	{
		[Token(Token = "0x60000E0")]
		[Address(RVA = "0x157ABB0", Offset = "0x157ABB0", VA = "0x157ABB0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700001D")]
	public Shader ShieldShader
	{
		[Token(Token = "0x60000E1")]
		[Address(RVA = "0x157ABB8", Offset = "0x157ABB8", VA = "0x157ABB8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700001E")]
	public Material HighlightMaterial
	{
		[Token(Token = "0x60000E2")]
		[Address(RVA = "0x157ABC0", Offset = "0x157ABC0", VA = "0x157ABC0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700001F")]
	public Material TransparentHighlightMaterial
	{
		[Token(Token = "0x60000E3")]
		[Address(RVA = "0x157ABC8", Offset = "0x157ABC8", VA = "0x157ABC8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000020")]
	public Material FadeMaterial
	{
		[Token(Token = "0x60000E4")]
		[Address(RVA = "0x157ABD0", Offset = "0x157ABD0", VA = "0x157ABD0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000021")]
	public Shader FadeShader
	{
		[Token(Token = "0x60000E5")]
		[Address(RVA = "0x157ABD8", Offset = "0x157ABD8", VA = "0x157ABD8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000022")]
	public float FadeTimer
	{
		[Token(Token = "0x60000E6")]
		[Address(RVA = "0x157ABE0", Offset = "0x157ABE0", VA = "0x157ABE0")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000023")]
	public Material TransparentMaterial
	{
		[Token(Token = "0x60000E7")]
		[Address(RVA = "0x157ABE8", Offset = "0x157ABE8", VA = "0x157ABE8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60000E8")]
	[Address(RVA = "0x157ABF0", Offset = "0x157ABF0", VA = "0x157ABF0")]
	private void Start()
	{
	}

	[Token(Token = "0x60000E9")]
	[Address(RVA = "0x157ABFC", Offset = "0x157ABFC", VA = "0x157ABFC")]
	public void ShowSystemThroughFade(Database.SystemType system = Database.SystemType.None)
	{
	}

	[Token(Token = "0x60000EA")]
	[Address(RVA = "0x157AE34", Offset = "0x157AE34", VA = "0x157AE34")]
	public void OnSystemHide(Database.SystemType system = Database.SystemType.None)
	{
	}

	[Token(Token = "0x60000EB")]
	[Address(RVA = "0x157AEDC", Offset = "0x157AEDC", VA = "0x157AEDC")]
	public void SetHighlight(Material instance)
	{
	}

	[Token(Token = "0x60000EC")]
	[Address(RVA = "0x157AFF4", Offset = "0x157AFF4", VA = "0x157AFF4")]
	public void SetHighlight(MeshRenderer itemToBeHighlighted, Mesh mesh, Color highlightColor, bool isTransparent = false, bool isBone = false, bool isSubpart = false, float thresholdColor = 0f)
	{
	}

	[Token(Token = "0x60000ED")]
	[Address(RVA = "0x157BB10", Offset = "0x157BB10", VA = "0x157BB10")]
	public void SetHighlightMeshRenderer(bool val)
	{
	}

	[Token(Token = "0x60000EE")]
	[Address(RVA = "0x157BB3C", Offset = "0x157BB3C", VA = "0x157BB3C")]
	public void UnHighlight()
	{
	}

	[Token(Token = "0x60000EF")]
	[Address(RVA = "0x157B688", Offset = "0x157B688", VA = "0x157B688")]
	private HighlightItem GetHighlightItem()
	{
		return null;
	}

	[Token(Token = "0x60000F0")]
	[Address(RVA = "0x157BBAC", Offset = "0x157BBAC", VA = "0x157BBAC")]
	public void OnSelectedItemFaded()
	{
	}

	[Token(Token = "0x60000F1")]
	[Address(RVA = "0x157BBD4", Offset = "0x157BBD4", VA = "0x157BBD4")]
	public VisualSettings()
	{
	}
}
[Token(Token = "0x2000035")]
public class ColourPicker : MonoBehaviour
{
	[Token(Token = "0x40000F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text Label;

	[Token(Token = "0x60000FC")]
	[Address(RVA = "0x157BFE4", Offset = "0x157BFE4", VA = "0x157BFE4")]
	public ColourPicker()
	{
	}
}
[Token(Token = "0x2000036")]
public class SerializableDictionary<TKey, TValue> : Dictionary<TKey, TValue>, ISerializationCallbackReceiver
{
	[Token(Token = "0x40000FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[SerializeField]
	[HideInInspector]
	private List<TKey> _serializedKeys;

	[Token(Token = "0x40000FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[HideInInspector]
	[SerializeField]
	private List<TValue> _serializedValues;

	[Token(Token = "0x40000FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[SerializeField]
	[HideInInspector]
	private int _serializedCount;

	[Token(Token = "0x60000FD")]
	[Obsolete("Manual call not supported.", true)]
	public void OnBeforeSerialize()
	{
	}

	[Token(Token = "0x60000FE")]
	[Obsolete("Manual call not supported.", true)]
	public void OnAfterDeserialize()
	{
	}

	[Token(Token = "0x60000FF")]
	public SerializableDictionary()
	{
	}
}
[Token(Token = "0x2000037")]
public class AutoTestFPS : MonoBehaviour
{
	[StructLayout(3)]
	[Token(Token = "0x2000038")]
	[CompilerGenerated]
	private struct <Awake>d__9 : IAsyncStateMachine
	{
		[Token(Token = "0x4000106")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x4000107")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncVoidMethodBuilder <>t__builder;

		[Token(Token = "0x4000108")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AutoTestFPS <>4__this;

		[Token(Token = "0x4000109")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private InteractiveSystemContainer <systemContainer>5__2;

		[Token(Token = "0x400010A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private ILocationModule <locationModule>5__3;

		[Token(Token = "0x400010B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private TaskAwaiter <>u__1;

		[Token(Token = "0x400010C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private TaskAwaiter<bool> <>u__2;

		[Token(Token = "0x6000108")]
		[Address(RVA = "0x157C4D0", Offset = "0x157C4D0", VA = "0x157C4D0", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x6000109")]
		[Address(RVA = "0x157DA40", Offset = "0x157DA40", VA = "0x157DA40", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[StructLayout(3)]
	[Token(Token = "0x2000039")]
	[CompilerGenerated]
	private struct <TestSystem>d__10 : IAsyncStateMachine
	{
		[Token(Token = "0x400010D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x400010E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncTaskMethodBuilder<bool> <>t__builder;

		[Token(Token = "0x400010F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AutoTestFPS <>4__this;

		[Token(Token = "0x4000110")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TaskAwaiter <>u__1;

		[Token(Token = "0x600010A")]
		[Address(RVA = "0x157DA4C", Offset = "0x157DA4C", VA = "0x157DA4C", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x600010B")]
		[Address(RVA = "0x157FBAC", Offset = "0x157FBAC", VA = "0x157FBAC", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[StructLayout(3)]
	[Token(Token = "0x200003A")]
	[CompilerGenerated]
	private struct <SetSystemActive>d__11 : IAsyncStateMachine
	{
		[Token(Token = "0x4000111")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x4000112")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncTaskMethodBuilder <>t__builder;

		[Token(Token = "0x4000113")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AutoTestFPS <>4__this;

		[Token(Token = "0x4000114")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Database.SystemType systemType;

		[Token(Token = "0x4000115")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool state;

		[Token(Token = "0x4000116")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private TaskAwaiter <>u__1;

		[Token(Token = "0x600010C")]
		[Address(RVA = "0x157FC04", Offset = "0x157FC04", VA = "0x157FC04", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x600010D")]
		[Address(RVA = "0x157FEE0", Offset = "0x157FEE0", VA = "0x157FEE0", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[Token(Token = "0x40000FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private NetworkModuleProviderFactory _moduleProviderFactory;

	[Token(Token = "0x40000FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform _playerResetPosition;

	[Token(Token = "0x40000FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject _handMenuReference;

	[Token(Token = "0x4000100")]
	private const float UPDATE_INTERVAL = 2f;

	[Token(Token = "0x4000101")]
	private const int WAIT_INTERVAL = 4000;

	[Token(Token = "0x4000102")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int _framesCount;

	[Token(Token = "0x4000103")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float _lastFps;

	[Token(Token = "0x4000104")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private StringBuilder sb;

	[Token(Token = "0x4000105")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private readonly CompositeDisposable _disposable;

	[Token(Token = "0x6000100")]
	[Address(RVA = "0x157BFEC", Offset = "0x157BFEC", VA = "0x157BFEC")]
	[AsyncStateMachine(typeof(<Awake>d__9))]
	private void Awake()
	{
	}

	[Token(Token = "0x6000101")]
	[Address(RVA = "0x157C0A4", Offset = "0x157C0A4", VA = "0x157C0A4")]
	[AsyncStateMachine(typeof(<TestSystem>d__10))]
	private Task<bool> TestSystem()
	{
		return null;
	}

	[Token(Token = "0x6000102")]
	[Address(RVA = "0x157C1B8", Offset = "0x157C1B8", VA = "0x157C1B8")]
	[AsyncStateMachine(typeof(<SetSystemActive>d__11))]
	public Task SetSystemActive(Database.SystemType systemType, bool state)
	{
		return null;
	}

	[Token(Token = "0x6000103")]
	[Address(RVA = "0x157C2C0", Offset = "0x157C2C0", VA = "0x157C2C0")]
	private string GetPath()
	{
		return null;
	}

	[Token(Token = "0x6000104")]
	[Address(RVA = "0x157C3F0", Offset = "0x157C3F0", VA = "0x157C3F0")]
	public AutoTestFPS()
	{
	}
}
[Token(Token = "0x200003B")]
public class CadaverCategory
{
	[Token(Token = "0x17000024")]
	public CategoryElement MainCategoryElement
	{
		[Token(Token = "0x600010E")]
		[Address(RVA = "0x157FEEC", Offset = "0x157FEEC", VA = "0x157FEEC")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x600010F")]
		[Address(RVA = "0x157FEF4", Offset = "0x157FEF4", VA = "0x157FEF4")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x17000025")]
	public List<CategoryElement> SubCategories
	{
		[Token(Token = "0x6000110")]
		[Address(RVA = "0x157FEFC", Offset = "0x157FEFC", VA = "0x157FEFC")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000111")]
		[Address(RVA = "0x157FF04", Offset = "0x157FF04", VA = "0x157FF04")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x6000112")]
	[Address(RVA = "0x157FF0C", Offset = "0x157FF0C", VA = "0x157FF0C")]
	public CadaverCategory()
	{
	}
}
[Token(Token = "0x200003C")]
public static class CadaverBrowserExtensions
{
	[Token(Token = "0x200003D")]
	[CompilerGenerated]
	private sealed class <Yield>d__0<T> : IEnumerable<T>, IEnumerable, IEnumerator<T>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400011C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x400011D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T <>2__current;

		[Token(Token = "0x400011E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>l__initialThreadId;

		[Token(Token = "0x400011F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T value;

		[Token(Token = "0x4000120")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public T <>3__value;

		[Token(Token = "0x17000026")]
		private T System.Collections.Generic.IEnumerator<T>.Current
		{
			[Token(Token = "0x6000124")]
			[DebuggerHidden]
			get
			{
				return (T)null;
			}
		}

		[Token(Token = "0x17000027")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000126")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000121")]
		[DebuggerHidden]
		public <Yield>d__0(int <>1__state)
		{
		}

		[Token(Token = "0x6000122")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000123")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000125")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}

		[Token(Token = "0x6000127")]
		[DebuggerHidden]
		private IEnumerator<T> System.Collections.Generic.IEnumerable<T>.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6000128")]
		[DebuggerHidden]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}
	}

	[Token(Token = "0x200004B")]
	[CompilerGenerated]
	private sealed class <>c__DisplayClass4_0
	{
		[Token(Token = "0x4000167")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public INetworkModuleProviderFactory moduleProviderFactory;

		[Token(Token = "0x600015D")]
		[Address(RVA = "0x158896C", Offset = "0x158896C", VA = "0x158896C")]
		public <>c__DisplayClass4_0()
		{
		}
	}

	[Token(Token = "0x200004C")]
	[CompilerGenerated]
	private sealed class <>c__DisplayClass4_1
	{
		[StructLayout(3)]
		[Token(Token = "0x200004D")]
		private struct <<SpawnResults>b__0>d : IAsyncStateMachine
		{
			[Token(Token = "0x400016A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x400016B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x400016C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public <>c__DisplayClass4_1 <>4__this;

			[Token(Token = "0x400016D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TaskAwaiter<ICadaverInstance> <>u__1;

			[Token(Token = "0x6000160")]
			[Address(RVA = "0x1588A34", Offset = "0x1588A34", VA = "0x1588A34", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000161")]
			[Address(RVA = "0x1588C88", Offset = "0x1588C88", VA = "0x1588C88", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4000168")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public UiElementReferences element;

		[Token(Token = "0x4000169")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public <>c__DisplayClass4_0 CS$<>8__locals1;

		[Token(Token = "0x600015E")]
		[Address(RVA = "0x1588974", Offset = "0x1588974", VA = "0x1588974")]
		public <>c__DisplayClass4_1()
		{
		}

		[Token(Token = "0x600015F")]
		[Address(RVA = "0x158897C", Offset = "0x158897C", VA = "0x158897C")]
		[AsyncStateMachine(typeof(<<SpawnResults>b__0>d))]
		internal void <SpawnResults>b__0(Unit _)
		{
		}
	}

	[StructLayout(3)]
	[Token(Token = "0x200004E")]
	[CompilerGenerated]
	private struct <SpawnResults>d__4 : IAsyncStateMachine
	{
		[Token(Token = "0x400016E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x400016F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncTaskMethodBuilder<List<UiElementReferences>> <>t__builder;

		[Token(Token = "0x4000170")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public INetworkModuleProviderFactory moduleProviderFactory;

		[Token(Token = "0x4000171")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public IEnumerable<CadaverItem> results;

		[Token(Token = "0x4000172")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private <>c__DisplayClass4_0 <>8__1;

		[Token(Token = "0x4000173")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public CancellationToken cancellationToken;

		[Token(Token = "0x4000174")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private <>c__DisplayClass4_1 <>8__2;

		[Token(Token = "0x4000175")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public UiElementReferences resultPrefab;

		[Token(Token = "0x4000176")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Transform resultsParent;

		[Token(Token = "0x4000177")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private List<UiElementReferences> <spawnedElements>5__2;

		[Token(Token = "0x4000178")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private IEnumerator<CadaverItem> <>7__wrap2;

		[Token(Token = "0x4000179")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private CadaverItem <item>5__4;

		[Token(Token = "0x400017A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private TaskAwaiter<IEnumerable<LoadedAsset<Sprite>>> <>u__1;

		[Token(Token = "0x6000162")]
		[Address(RVA = "0x1588C94", Offset = "0x1588C94", VA = "0x1588C94", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x6000163")]
		[Address(RVA = "0x1589C44", Offset = "0x1589C44", VA = "0x1589C44", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[Token(Token = "0x4000119")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly string[] GeneralTerms;

	[Token(Token = "0x400011A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static readonly string[] ConArt;

	[Token(Token = "0x400011B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static readonly Dictionary<LocationType, string[]> KeywordLocations;

	[Token(Token = "0x6000113")]
	[IteratorStateMachine(typeof(<Yield>d__0<>))]
	public static IEnumerable<T> Yield<T>(T value)
	{
		return null;
	}

	[Token(Token = "0x6000114")]
	[Address(RVA = "0x157FF14", Offset = "0x157FF14", VA = "0x157FF14")]
	public static CompositeDisposable Initialize(this CadaverBrowserReferences cadaverBrowserReferences, INetworkModuleProviderFactory moduleProviderFactory, Action<string, string, Dictionary<string, object>> logAnalyticsAction, out Func<string, LocationType, Task> orderAndSpawnResults)
	{
		return null;
	}

	[Token(Token = "0x6000115")]
	[Address(RVA = "0x158235C", Offset = "0x158235C", VA = "0x158235C")]
	public static void InitializeHierarchyDisplay(this HierarchyDrawer hierarchyDrawer, List<CadaverCategory> results, SVGImage svgImage)
	{
	}

	[Token(Token = "0x6000116")]
	[Address(RVA = "0x1582B94", Offset = "0x1582B94", VA = "0x1582B94")]
	public static void DestroyResults(Transform resultsParent)
	{
	}

	[Token(Token = "0x6000117")]
	[Address(RVA = "0x1582FD8", Offset = "0x1582FD8", VA = "0x1582FD8")]
	[AsyncStateMachine(typeof(<SpawnResults>d__4))]
	private static Task<List<UiElementReferences>> SpawnResults(IEnumerable<CadaverItem> results, INetworkModuleProviderFactory moduleProviderFactory, UiElementReferences resultPrefab, Transform resultsParent, CancellationToken cancellationToken)
	{
		return null;
	}

	[Token(Token = "0x6000118")]
	[Address(RVA = "0x1583150", Offset = "0x1583150", VA = "0x1583150")]
	public static bool ContainsNegationWord(string item)
	{
		return default(bool);
	}

	[Token(Token = "0x6000119")]
	[Address(RVA = "0x158322C", Offset = "0x158322C", VA = "0x158322C")]
	public static float GetQueryRelevance(this CadaverItem cadaverItem, string query, LocationType location = LocationType.None)
	{
		return default(float);
	}

	[Token(Token = "0x600011A")]
	[Address(RVA = "0x1583890", Offset = "0x1583890", VA = "0x1583890")]
	public static IEnumerable<(CadaverItem, float)> OrderByRelevance(this IEnumerable<CadaverItem> items, string query, float relevanceTreshold = 0f, LocationType location = LocationType.None)
	{
		return null;
	}

	[Token(Token = "0x600011B")]
	[Address(RVA = "0x1583B54", Offset = "0x1583B54", VA = "0x1583B54")]
	public static void SetLeft(RectTransform rt, float left)
	{
	}

	[Token(Token = "0x600011C")]
	[Address(RVA = "0x1583B8C", Offset = "0x1583B8C", VA = "0x1583B8C")]
	public static void SetRight(RectTransform rt, float right)
	{
	}

	[Token(Token = "0x600011D")]
	[Address(RVA = "0x1583BC4", Offset = "0x1583BC4", VA = "0x1583BC4")]
	public static void SetTop(RectTransform rt, float top)
	{
	}

	[Token(Token = "0x600011E")]
	[Address(RVA = "0x1583BFC", Offset = "0x1583BFC", VA = "0x1583BFC")]
	public static void SetBottom(RectTransform rt, float bottom)
	{
	}

	[Token(Token = "0x600011F")]
	[Address(RVA = "0x1583C34", Offset = "0x1583C34", VA = "0x1583C34")]
	public static CompositeDisposable InitAnalytics(IEnumerable<UiElementReferences> uiElementReferences, Action<string, string, Dictionary<string, object>> logAnalyticsAction)
	{
		return null;
	}
}
[Token(Token = "0x2000055")]
public static class CadaverPanelExtensions
{
	[Token(Token = "0x4000185")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int PANELMINWIDTH;

	[Token(Token = "0x4000186")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static int PANELMAXHEIGHT;

	[Token(Token = "0x4000187")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int IMAGESPACING;

	[Token(Token = "0x4000188")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static int COLLIDEROFFSET;

	[Token(Token = "0x4000189")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static int LESSINFOMAXHEIGHT;

	[Token(Token = "0x400018A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static RectOffset LESSVIEWOFFSET;

	[Token(Token = "0x400018B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static RectOffset MOREVIEWOFFSET;

	[Token(Token = "0x6000172")]
	[Address(RVA = "0x158A02C", Offset = "0x158A02C", VA = "0x158A02C")]
	public static CompositeDisposable InitializeCadaverPanels(this NetworkModuleProviderFactory moduleProviderFactory, Transform spawnReferenceTransform, bool singleuser, bool isTeacher)
	{
		return null;
	}

	[Token(Token = "0x6000173")]
	[Address(RVA = "0x158A414", Offset = "0x158A414", VA = "0x158A414")]
	public static CompositeDisposable Initialize(this CadaverPanelReference cadaverPanelReferences, NetworkModuleProviderFactory moduleProviderFactory, ICadaverInstance cadaverInstance)
	{
		return null;
	}

	[Token(Token = "0x6000174")]
	[Address(RVA = "0x158ACDC", Offset = "0x158ACDC", VA = "0x158ACDC")]
	public static Sequence SetPanelState(bool val, float duration, Vector2 defaultPanelSize, float defaultImageMinHeight, float defaultContentSpacing, CadaverPanelReference cadaverPanelReferences, Sequence sequence)
	{
		return null;
	}

	[Token(Token = "0x6000175")]
	[Address(RVA = "0x158B440", Offset = "0x158B440", VA = "0x158B440")]
	private static void SetSizeFromChildCanvasWithOffset(BoxCollider boxCollider, RectTransform rectTransform, float offset)
	{
	}
}
[Token(Token = "0x200005D")]
public class CategoryElement : MonoBehaviour
{
	[Token(Token = "0x40001AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshProUGUI Name;

	[Token(Token = "0x40001AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public RowElement RowElement;

	[Token(Token = "0x6000191")]
	[Address(RVA = "0x158CF50", Offset = "0x158CF50", VA = "0x158CF50")]
	public CategoryElement()
	{
	}
}
[Token(Token = "0x200005E")]
public class CreditsScript : MonoBehaviour
{
	[Token(Token = "0x40001AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float _creditsDuration;

	[Token(Token = "0x40001AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform _credits;

	[Token(Token = "0x40001AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject _creditsCanvas;

	[Token(Token = "0x40001AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private LoginUiPresenter _uiPresenter;

	[Token(Token = "0x40001B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Image _logo;

	[Token(Token = "0x40001B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Button _stopCredits;

	[Token(Token = "0x40001B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Transform _creditsEnd;

	[Token(Token = "0x40001B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private IDisposable _logoFadeInDisposable;

	[Token(Token = "0x40001B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private IDisposable _stopCreditsDisposable;

	[Token(Token = "0x40001B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool _isScrolling;

	[Token(Token = "0x40001B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private Vector3 _originalPosition;

	[Token(Token = "0x40001B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Sequence _creditsSequence;

	[Token(Token = "0x40001B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private readonly CompositeDisposable _disposable;

	[Token(Token = "0x17000028")]
	public Button StopCredits
	{
		[Token(Token = "0x6000192")]
		[Address(RVA = "0x158CF58", Offset = "0x158CF58", VA = "0x158CF58")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000193")]
	[Address(RVA = "0x158CF60", Offset = "0x158CF60", VA = "0x158CF60")]
	private void Start()
	{
	}

	[Token(Token = "0x6000194")]
	[Address(RVA = "0x158CF80", Offset = "0x158CF80", VA = "0x158CF80")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000195")]
	[Address(RVA = "0x158CF9C", Offset = "0x158CF9C", VA = "0x158CF9C")]
	public void StartCredits()
	{
	}

	[Token(Token = "0x6000196")]
	[Address(RVA = "0x158D1B0", Offset = "0x158D1B0", VA = "0x158D1B0")]
	public void DisableCredits()
	{
	}

	[Token(Token = "0x6000197")]
	[Address(RVA = "0x158D1D0", Offset = "0x158D1D0", VA = "0x158D1D0")]
	public CreditsScript()
	{
	}
}
[Token(Token = "0x2000060")]
public class DicomColorPresets : MonoBehaviour
{
	[Token(Token = "0x2000061")]
	public enum SaveType
	{
		[Token(Token = "0x40001C1")]
		None,
		[Token(Token = "0x40001C2")]
		PlayerPrefs,
		[Token(Token = "0x40001C3")]
		JsonFile
	}

	[Token(Token = "0x2000062")]
	protected class JsonColor
	{
		[Token(Token = "0x40001C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public UnityEngine.Gradient[] gradients;

		[Token(Token = "0x60001A5")]
		[Address(RVA = "0x158DBC8", Offset = "0x158DBC8", VA = "0x158DBC8")]
		public void SetColors(UnityEngine.Gradient[] gradientIn)
		{
		}

		[Token(Token = "0x60001A6")]
		[Address(RVA = "0x158D7C8", Offset = "0x158D7C8", VA = "0x158D7C8")]
		public UnityEngine.Gradient[] GetColors()
		{
			return null;
		}

		[Token(Token = "0x60001A7")]
		[Address(RVA = "0x158DBC0", Offset = "0x158DBC0", VA = "0x158DBC0")]
		public JsonColor()
		{
		}
	}

	[Token(Token = "0x40001BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	protected GameObject presetPrefab;

	[Token(Token = "0x40001BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	protected UnityEngine.Gradient[] predefinedPresets;

	[Token(Token = "0x40001BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	protected Toggle _editPressets;

	[Token(Token = "0x40001BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected List<UnityEngine.Gradient> presets;

	[Token(Token = "0x40001BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	public SaveType saveMode;

	[Token(Token = "0x40001BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	protected string playerPrefsKey;

	[Token(Token = "0x17000029")]
	public virtual string JsonFilePath
	{
		[Token(Token = "0x600019B")]
		[Address(RVA = "0x158D2AC", Offset = "0x158D2AC", VA = "0x158D2AC", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600019C")]
	[Address(RVA = "0x158D320", Offset = "0x158D320", VA = "0x158D320", Slot = "5")]
	protected virtual void Reset()
	{
	}

	[Token(Token = "0x600019D")]
	[Address(RVA = "0x158D3A8", Offset = "0x158D3A8", VA = "0x158D3A8", Slot = "6")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x600019E")]
	[Address(RVA = "0x158D424", Offset = "0x158D424", VA = "0x158D424", Slot = "7")]
	public virtual void CreatePresetButton()
	{
	}

	[Token(Token = "0x600019F")]
	[Address(RVA = "0x158D490", Offset = "0x158D490", VA = "0x158D490", Slot = "8")]
	public virtual void LoadPresets(SaveType saveType)
	{
	}

	[Token(Token = "0x60001A0")]
	[Address(RVA = "0x158D8C0", Offset = "0x158D8C0", VA = "0x158D8C0", Slot = "9")]
	public virtual void SavePresets(SaveType saveType)
	{
	}

	[Token(Token = "0x60001A1")]
	[Address(RVA = "0x158DCC4", Offset = "0x158DCC4", VA = "0x158DCC4", Slot = "10")]
	public virtual void CreatePreset(UnityEngine.Gradient gradient, bool loading)
	{
	}

	[Token(Token = "0x60001A2")]
	[Address(RVA = "0x158DF84", Offset = "0x158DF84", VA = "0x158DF84", Slot = "11")]
	public virtual void CreatePreset(UnityEngine.Gradient gradient)
	{
	}

	[Token(Token = "0x60001A3")]
	[Address(RVA = "0x158DF94", Offset = "0x158DF94", VA = "0x158DF94", Slot = "12")]
	public virtual void PresetSelect(Texture2D sender, UnityEngine.Gradient gradient)
	{
	}

	[Token(Token = "0x60001A4")]
	[Address(RVA = "0x158DF98", Offset = "0x158DF98", VA = "0x158DF98")]
	public DicomColorPresets()
	{
	}
}
[Token(Token = "0x2000064")]
public class DicomPOC : MonoBehaviour
{
	[Token(Token = "0x200006A")]
	[CompilerGenerated]
	private sealed class <RangeIterator>d__10 : IEnumerable<float>, IEnumerable, IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40001DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40001DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x40001E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int <>l__initialThreadId;

		[Token(Token = "0x40001E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float start;

		[Token(Token = "0x40001E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float <>3__start;

		[Token(Token = "0x40001E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float step;

		[Token(Token = "0x40001E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float <>3__step;

		[Token(Token = "0x40001E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float end;

		[Token(Token = "0x40001E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float <>3__end;

		[Token(Token = "0x40001E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <i>5__2;

		[Token(Token = "0x1700002A")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x60001C0")]
			[Address(RVA = "0x158F19C", Offset = "0x158F19C", VA = "0x158F19C", Slot = "6")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700002B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60001C2")]
			[Address(RVA = "0x158F1E4", Offset = "0x158F1E4", VA = "0x158F1E4", Slot = "9")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60001BD")]
		[Address(RVA = "0x158EC70", Offset = "0x158EC70", VA = "0x158EC70")]
		[DebuggerHidden]
		public <RangeIterator>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x60001BE")]
		[Address(RVA = "0x158F130", Offset = "0x158F130", VA = "0x158F130", Slot = "7")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60001BF")]
		[Address(RVA = "0x158F134", Offset = "0x158F134", VA = "0x158F134", Slot = "8")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60001C1")]
		[Address(RVA = "0x158F1A4", Offset = "0x158F1A4", VA = "0x158F1A4", Slot = "10")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}

		[Token(Token = "0x60001C3")]
		[Address(RVA = "0x158F240", Offset = "0x158F240", VA = "0x158F240", Slot = "4")]
		[DebuggerHidden]
		private IEnumerator<float> System.Collections.Generic.IEnumerable<System.Single>.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x60001C4")]
		[Address(RVA = "0x158F2F4", Offset = "0x158F2F4", VA = "0x158F2F4", Slot = "5")]
		[DebuggerHidden]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}
	}

	[Token(Token = "0x40001C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float _range;

	[Token(Token = "0x40001C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float _step;

	[Token(Token = "0x40001CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Vector3 Offset;

	[Token(Token = "0x40001CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private readonly Collider[] _results;

	[Token(Token = "0x40001CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int _resultCount;

	[Token(Token = "0x40001CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private DicomVrInstance _dicomVrInstance;

	[Token(Token = "0x40001CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector2 _windowing;

	[Token(Token = "0x60001AA")]
	[Address(RVA = "0x158E0F8", Offset = "0x158E0F8", VA = "0x158E0F8")]
	private void Update()
	{
	}

	[Token(Token = "0x60001AB")]
	[Address(RVA = "0x158E724", Offset = "0x158E724", VA = "0x158E724")]
	private static IEnumerable<Color> GetSurroundingValues(Texture3D texture3d, Vector3 source, float range, float step)
	{
		return null;
	}

	[Token(Token = "0x60001AC")]
	[Address(RVA = "0x158E8A0", Offset = "0x158E8A0", VA = "0x158E8A0")]
	private static float GetMiddleValue(IReadOnlyList<float> values)
	{
		return default(float);
	}

	[Token(Token = "0x60001AD")]
	[Address(RVA = "0x158EBD8", Offset = "0x158EBD8", VA = "0x158EBD8")]
	[IteratorStateMachine(typeof(<RangeIterator>d__10))]
	private static IEnumerable<float> RangeIterator(float start, float end, float step)
	{
		return null;
	}

	[Token(Token = "0x60001AE")]
	[Address(RVA = "0x158ECA4", Offset = "0x158ECA4", VA = "0x158ECA4")]
	public void Toggle()
	{
	}

	[Token(Token = "0x60001AF")]
	[Address(RVA = "0x158ECCC", Offset = "0x158ECCC", VA = "0x158ECCC")]
	public DicomPOC()
	{
	}
}
[Token(Token = "0x200006B")]
public class MRTKActionEvent : InputSystemGlobalHandlerListener, IMixedRealityInputActionHandler, IMixedRealityBaseInputHandler, IEventSystemHandler
{
	[Token(Token = "0x40001E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MixedRealityInputAction Action;

	[Token(Token = "0x40001E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public UnityEvent<BaseInputEventData> ActionStarted;

	[Token(Token = "0x40001EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public UnityEvent<BaseInputEventData> ActionEnded;

	[Token(Token = "0x60001C5")]
	[Address(RVA = "0x158F2F8", Offset = "0x158F2F8", VA = "0x158F2F8", Slot = "7")]
	protected override void RegisterHandlers()
	{
	}

	[Token(Token = "0x60001C6")]
	[Address(RVA = "0x158F3E8", Offset = "0x158F3E8", VA = "0x158F3E8", Slot = "8")]
	protected override void UnregisterHandlers()
	{
	}

	[Token(Token = "0x60001C7")]
	[Address(RVA = "0x158F4D8", Offset = "0x158F4D8", VA = "0x158F4D8", Slot = "9")]
	public void OnActionStarted(BaseInputEventData eventData)
	{
	}

	[Token(Token = "0x60001C8")]
	[Address(RVA = "0x158F5B8", Offset = "0x158F5B8", VA = "0x158F5B8", Slot = "10")]
	public void OnActionEnded(BaseInputEventData eventData)
	{
	}

	[Token(Token = "0x60001C9")]
	[Address(RVA = "0x158F698", Offset = "0x158F698", VA = "0x158F698")]
	public MRTKActionEvent()
	{
	}
}
[Token(Token = "0x200006C")]
public class EnviromentTeleportHandler : MonoBehaviour
{
	[StructLayout(3)]
	[Token(Token = "0x2000072")]
	[CompilerGenerated]
	private struct <Teleport>d__4 : IAsyncStateMachine
	{
		[Token(Token = "0x40001F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x40001F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncVoidMethodBuilder <>t__builder;

		[Token(Token = "0x40001F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 spotPosition;

		[Token(Token = "0x40001FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TaskAwaiter <>u__1;

		[Token(Token = "0x60001DE")]
		[Address(RVA = "0x1590C00", Offset = "0x1590C00", VA = "0x1590C00", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x60001DF")]
		[Address(RVA = "0x1590F48", Offset = "0x1590F48", VA = "0x1590F48", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[Token(Token = "0x40001EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private List<ClickableItemBehaviour> _teleportSpots;

	[Token(Token = "0x40001EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private ClickableItemBehaviour _prefab;

	[Token(Token = "0x40001ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private NetworkModuleProviderFactory moduleProviderFactory;

	[Token(Token = "0x60001CA")]
	[Address(RVA = "0x158F750", Offset = "0x158F750", VA = "0x158F750")]
	private void Start()
	{
	}

	[Token(Token = "0x60001CB")]
	[Address(RVA = "0x158FFD0", Offset = "0x158FFD0", VA = "0x158FFD0")]
	[AsyncStateMachine(typeof(<Teleport>d__4))]
	private static void Teleport(Vector3 spotPosition)
	{
	}

	[Token(Token = "0x60001CC")]
	[Address(RVA = "0x159008C", Offset = "0x159008C", VA = "0x159008C")]
	[ContextMenu("CreateTeleportSpots")]
	private void CreateTeleportSpots()
	{
	}

	[Token(Token = "0x60001CD")]
	[Address(RVA = "0x1590460", Offset = "0x1590460", VA = "0x1590460")]
	private static double DegreeToRadian(double angle)
	{
		return default(double);
	}

	[Token(Token = "0x60001CE")]
	[Address(RVA = "0x159047C", Offset = "0x159047C", VA = "0x159047C")]
	public EnviromentTeleportHandler()
	{
	}
}
[Token(Token = "0x2000073")]
public class FollowCamera : MonoBehaviour
{
	[Token(Token = "0x40001FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform _transformToFollow;

	[Token(Token = "0x40001FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float _speed;

	[Token(Token = "0x1700002C")]
	private Transform BodyTransform
	{
		[Token(Token = "0x60001E0")]
		[Address(RVA = "0x1590F54", Offset = "0x1590F54", VA = "0x1590F54")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700002D")]
	public Transform TransformToFollow
	{
		[Token(Token = "0x60001E1")]
		[Address(RVA = "0x1590F5C", Offset = "0x1590F5C", VA = "0x1590F5C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60001E2")]
		[Address(RVA = "0x1590F64", Offset = "0x1590F64", VA = "0x1590F64")]
		set
		{
		}
	}

	[Token(Token = "0x60001E3")]
	[Address(RVA = "0x1590F6C", Offset = "0x1590F6C", VA = "0x1590F6C")]
	private void Update()
	{
	}

	[Token(Token = "0x60001E4")]
	[Address(RVA = "0x15910F4", Offset = "0x15910F4", VA = "0x15910F4")]
	public FollowCamera()
	{
	}
}
[Token(Token = "0x2000074")]
public enum ButtonVisualType
{
	[Token(Token = "0x40001FE")]
	Default,
	[Token(Token = "0x40001FF")]
	Opaque
}
[Token(Token = "0x2000075")]
public class InfoBubbleButtonDefinition
{
	[Token(Token = "0x1700002E")]
	public Action Action
	{
		[Token(Token = "0x60001E5")]
		[Address(RVA = "0x1591108", Offset = "0x1591108", VA = "0x1591108")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x60001E6")]
		[Address(RVA = "0x1591110", Offset = "0x1591110", VA = "0x1591110")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x1700002F")]
	public string Text
	{
		[Token(Token = "0x60001E7")]
		[Address(RVA = "0x1591118", Offset = "0x1591118", VA = "0x1591118")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x60001E8")]
		[Address(RVA = "0x1591120", Offset = "0x1591120", VA = "0x1591120")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x17000030")]
	public Color? Color
	{
		[Token(Token = "0x60001E9")]
		[Address(RVA = "0x1591128", Offset = "0x1591128", VA = "0x1591128")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x60001EA")]
		[Address(RVA = "0x159113C", Offset = "0x159113C", VA = "0x159113C")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x17000031")]
	public Color? TextColor
	{
		[Token(Token = "0x60001EB")]
		[Address(RVA = "0x1591150", Offset = "0x1591150", VA = "0x1591150")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x60001EC")]
		[Address(RVA = "0x1591164", Offset = "0x1591164", VA = "0x1591164")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x17000032")]
	public Color? EdgeColor
	{
		[Token(Token = "0x60001ED")]
		[Address(RVA = "0x1591178", Offset = "0x1591178", VA = "0x1591178")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x60001EE")]
		[Address(RVA = "0x159118C", Offset = "0x159118C", VA = "0x159118C")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x17000033")]
	public ButtonVisualType ButtonVisualType
	{
		[Token(Token = "0x60001EF")]
		[Address(RVA = "0x15911A0", Offset = "0x15911A0", VA = "0x15911A0")]
		[CompilerGenerated]
		get
		{
			return default(ButtonVisualType);
		}
		[Token(Token = "0x60001F0")]
		[Address(RVA = "0x15911A8", Offset = "0x15911A8", VA = "0x15911A8")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x60001F1")]
	[Address(RVA = "0x15911B0", Offset = "0x15911B0", VA = "0x15911B0")]
	public InfoBubbleButtonDefinition()
	{
	}
}
[Token(Token = "0x2000076")]
public class InfoBubbleDefinition
{
	[Token(Token = "0x17000034")]
	public string HeaderText
	{
		[Token(Token = "0x60001F2")]
		[Address(RVA = "0x15911B8", Offset = "0x15911B8", VA = "0x15911B8")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x60001F3")]
		[Address(RVA = "0x15911C0", Offset = "0x15911C0", VA = "0x15911C0")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x17000035")]
	public string ContentText
	{
		[Token(Token = "0x60001F4")]
		[Address(RVA = "0x15911C8", Offset = "0x15911C8", VA = "0x15911C8")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x60001F5")]
		[Address(RVA = "0x15911D0", Offset = "0x15911D0", VA = "0x15911D0")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x17000036")]
	public InfoBubbleButtonDefinition YesButton
	{
		[Token(Token = "0x60001F6")]
		[Address(RVA = "0x15911D8", Offset = "0x15911D8", VA = "0x15911D8")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x60001F7")]
		[Address(RVA = "0x15911E0", Offset = "0x15911E0", VA = "0x15911E0")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x17000037")]
	public InfoBubbleButtonDefinition NoButton
	{
		[Token(Token = "0x60001F8")]
		[Address(RVA = "0x15911E8", Offset = "0x15911E8", VA = "0x15911E8")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x60001F9")]
		[Address(RVA = "0x15911F0", Offset = "0x15911F0", VA = "0x15911F0")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x17000038")]
	public Action OnExit
	{
		[Token(Token = "0x60001FA")]
		[Address(RVA = "0x15911F8", Offset = "0x15911F8", VA = "0x15911F8")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x60001FB")]
		[Address(RVA = "0x1591200", Offset = "0x1591200", VA = "0x1591200")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x17000039")]
	public Vector2 AnchorMin
	{
		[Token(Token = "0x60001FC")]
		[Address(RVA = "0x1591208", Offset = "0x1591208", VA = "0x1591208")]
		[CompilerGenerated]
		get
		{
			return default(Vector2);
		}
		[Token(Token = "0x60001FD")]
		[Address(RVA = "0x1591210", Offset = "0x1591210", VA = "0x1591210")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x1700003A")]
	public Vector2 AnchorMax
	{
		[Token(Token = "0x60001FE")]
		[Address(RVA = "0x1591218", Offset = "0x1591218", VA = "0x1591218")]
		[CompilerGenerated]
		get
		{
			return default(Vector2);
		}
		[Token(Token = "0x60001FF")]
		[Address(RVA = "0x1591220", Offset = "0x1591220", VA = "0x1591220")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x1700003B")]
	public int Duration
	{
		[Token(Token = "0x6000200")]
		[Address(RVA = "0x1591228", Offset = "0x1591228", VA = "0x1591228")]
		[CompilerGenerated]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000201")]
		[Address(RVA = "0x1591230", Offset = "0x1591230", VA = "0x1591230")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x1700003C")]
	public bool CloseEnabled
	{
		[Token(Token = "0x6000202")]
		[Address(RVA = "0x1591238", Offset = "0x1591238", VA = "0x1591238")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000203")]
		[Address(RVA = "0x1591240", Offset = "0x1591240", VA = "0x1591240")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x1700003D")]
	public float ScaleFactor
	{
		[Token(Token = "0x6000204")]
		[Address(RVA = "0x159124C", Offset = "0x159124C", VA = "0x159124C")]
		[CompilerGenerated]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000205")]
		[Address(RVA = "0x1591254", Offset = "0x1591254", VA = "0x1591254")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x6000206")]
	[Address(RVA = "0x159125C", Offset = "0x159125C", VA = "0x159125C")]
	public InfoBubbleDefinition()
	{
	}
}
[Token(Token = "0x2000077")]
public class InfoBubbleHandler : MonoBehaviour
{
	[Token(Token = "0x4000210")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private TextMeshProUGUI _infoBubbleContent;

	[Token(Token = "0x4000211")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private TextMeshProUGUI _headerText;

	[Token(Token = "0x4000212")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Button _yesButton;

	[Token(Token = "0x4000213")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Button _noButton;

	[Token(Token = "0x4000214")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Button _closeButton;

	[Token(Token = "0x4000215")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Button _closeButtonOutside;

	[Token(Token = "0x4000216")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private RectTransform _contentTransform;

	[Token(Token = "0x4000217")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private TextMeshProUGUI _yesButtonText;

	[Token(Token = "0x4000218")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private TextMeshProUGUI _noButtonText;

	[Token(Token = "0x4000219")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private HorizontalLayoutGroup _buttonsLayoutGroup;

	[Token(Token = "0x400021A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private VerticalLayoutGroup _verticalLayoutGroup;

	[Token(Token = "0x400021B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private ButtonColorTransition _yesButtonSpriteTransition;

	[Token(Token = "0x400021C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private ButtonColorTransition _noButtonSpriteTransition;

	[Token(Token = "0x400021D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private float _ppuCoef1;

	[Token(Token = "0x400021E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[SerializeField]
	private float _ppuCoef2;

	[Token(Token = "0x400021F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private float _paddingX;

	[Token(Token = "0x4000220")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	[SerializeField]
	private float _paddingY;

	[Token(Token = "0x4000221")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private float _headerFontSizeMultiplier;

	[Token(Token = "0x4000222")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	[SerializeField]
	private float _contentFontSizeMultiplier;

	[Token(Token = "0x4000223")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private float _buttonFontSizeMultiplier;

	[Token(Token = "0x4000224")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	[SerializeField]
	private float _buttonFontSizeOffset;

	[Token(Token = "0x4000225")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private float _closeButtonSizeMultiplier;

	[Token(Token = "0x4000226")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	[SerializeField]
	private float _closeButtonOffsetMultiplier;

	[Token(Token = "0x4000227")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private float _verticalSpacingMultiplier;

	[Token(Token = "0x4000228")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private Sprite _buttonOpaqueSprite;

	[Token(Token = "0x4000229")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	private AudioClip _audioClip;

	[Token(Token = "0x400022A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private IDisposable _timerDisposable;

	[Token(Token = "0x400022B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private IDisposable _yesButtonDisposable;

	[Token(Token = "0x400022C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private IDisposable _noButtonDisposable;

	[Token(Token = "0x400022D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private RectTransform _rectTransform;

	[Token(Token = "0x400022E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private readonly CompositeDisposable _disposable;

	[Token(Token = "0x400022F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private readonly List<Canvas> _canvasList;

	[Token(Token = "0x4000230")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private readonly List<GameObject> _activatedGameObjects;

	[Token(Token = "0x4000231")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private Canvas _tempCanvas;

	[Token(Token = "0x4000232")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private Color _defaultButtonColor;

	[Token(Token = "0x4000233")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private Color _defaultTextColor;

	[Token(Token = "0x4000234")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private Color _defaultEdgeColor;

	[Token(Token = "0x4000235")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private Sprite _defaultButtonSprite;

	[Token(Token = "0x4000236")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private float _defaultButtonFade;

	[Token(Token = "0x4000238")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Vector2 DefaultAnchorMin;

	[Token(Token = "0x4000239")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly Vector2 DefaultAnchorMax;

	[Token(Token = "0x400023A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static InfoBubbleHandler _instance;

	[Token(Token = "0x1700003E")]
	private TextMeshProUGUI TextBubble
	{
		[Token(Token = "0x6000207")]
		[Address(RVA = "0x159126C", Offset = "0x159126C", VA = "0x159126C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700003F")]
	private RectTransform RectTransform
	{
		[Token(Token = "0x6000208")]
		[Address(RVA = "0x1591274", Offset = "0x1591274", VA = "0x1591274")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000040")]
	public InfoBubbleDefinition LastDefinition
	{
		[Token(Token = "0x600020B")]
		[Address(RVA = "0x1591480", Offset = "0x1591480", VA = "0x1591480")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x600020C")]
		[Address(RVA = "0x1591488", Offset = "0x1591488", VA = "0x1591488")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000041")]
	public static InfoBubbleHandler Instance
	{
		[Token(Token = "0x600020D")]
		[Address(RVA = "0x1591498", Offset = "0x1591498", VA = "0x1591498")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x14000003")]
	private event Action OnHide
	{
		[Token(Token = "0x6000209")]
		[Address(RVA = "0x1591340", Offset = "0x1591340", VA = "0x1591340")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x600020A")]
		[Address(RVA = "0x15913E0", Offset = "0x15913E0", VA = "0x15913E0")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x600020E")]
	[Address(RVA = "0x15917A8", Offset = "0x15917A8", VA = "0x15917A8")]
	private void Start()
	{
	}

	[Token(Token = "0x600020F")]
	[Address(RVA = "0x15918D8", Offset = "0x15918D8", VA = "0x15918D8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000210")]
	[Address(RVA = "0x1591A08", Offset = "0x1591A08", VA = "0x1591A08")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000211")]
	[Address(RVA = "0x1591B68", Offset = "0x1591B68", VA = "0x1591B68")]
	private void OnNoClicked()
	{
	}

	[Token(Token = "0x6000212")]
	[Address(RVA = "0x1591B6C", Offset = "0x1591B6C", VA = "0x1591B6C")]
	private void OnCloseClicked()
	{
	}

	[Token(Token = "0x6000213")]
	[Address(RVA = "0x1591A40", Offset = "0x1591A40", VA = "0x1591A40")]
	public void HideInfoBubble()
	{
	}

	[Token(Token = "0x6000214")]
	[Address(RVA = "0x1591B70", Offset = "0x1591B70", VA = "0x1591B70")]
	public void DisplayModalInfoBubble(string info, Transform parent, float duration = 3f, [Optional] Action onExit)
	{
	}

	[Token(Token = "0x6000215")]
	[Address(RVA = "0x159268C", Offset = "0x159268C", VA = "0x159268C")]
	public void DisplayInfoBuble(string info, Transform parent, [Optional] Action yesAction, [Optional] Action noAction, int duration = 0, string yesButtonOverrideText = "", [Optional] string headerOverrideText, string noButtonOverrideText = "", [Optional] Action onExit, bool closeEnable = true, bool maxScale = false)
	{
	}

	[Token(Token = "0x6000216")]
	[Address(RVA = "0x159287C", Offset = "0x159287C", VA = "0x159287C")]
	public void DisplayInfoBubble(Transform parent, InfoBubbleDefinition definition)
	{
	}

	[Token(Token = "0x6000217")]
	[Address(RVA = "0x1591E90", Offset = "0x1591E90", VA = "0x1591E90")]
	private void SetLayout(Transform parent, Vector2 anchorMin, Vector2 anchorMax, float scaleFactor)
	{
	}

	[Token(Token = "0x6000218")]
	[Address(RVA = "0x1593708", Offset = "0x1593708", VA = "0x1593708")]
	private static void FixCanvasReference(Component graphic, List<Canvas> canvasList, ICollection<GameObject> activatedGameObjects)
	{
	}

	[Token(Token = "0x6000219")]
	[Address(RVA = "0x159343C", Offset = "0x159343C", VA = "0x159343C")]
	private void SetButtonSpriteTransition(ButtonColorTransition buttonColorTransition, InfoBubbleButtonDefinition definition)
	{
	}

	[Token(Token = "0x600021A")]
	[Address(RVA = "0x1593954", Offset = "0x1593954", VA = "0x1593954")]
	public InfoBubbleHandler()
	{
	}
}
[Token(Token = "0x200007C")]
public class InputFieldKeyboardHandler : MonoBehaviour
{
	[Token(Token = "0x4000243")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private TMP_InputField _input;

	[Token(Token = "0x4000244")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private InteractiveKeyboard _keyboard;

	[Token(Token = "0x4000245")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private InteractiveKeyboard.KeyboardState _keyboardDefaultState;

	[Token(Token = "0x600022B")]
	[Address(RVA = "0x1593D10", Offset = "0x1593D10", VA = "0x1593D10")]
	private void Start()
	{
	}

	[Token(Token = "0x600022C")]
	[Address(RVA = "0x1593EC8", Offset = "0x1593EC8", VA = "0x1593EC8")]
	public InputFieldKeyboardHandler()
	{
	}
}
[Token(Token = "0x200007D")]
public class PACSSettingsReferences : MonoBehaviour
{
	[Token(Token = "0x4000246")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private TMP_InputField _hostInputField;

	[Token(Token = "0x4000247")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private TMP_InputField _portInputField;

	[Token(Token = "0x4000248")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private TMP_InputField _callingAeInputField;

	[Token(Token = "0x4000249")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private TMP_InputField _calledAeInputField;

	[Token(Token = "0x400024A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Toggle _tlsToggle;

	[Token(Token = "0x400024B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Button _saveButton;

	[Token(Token = "0x400024C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Button _backButton;

	[Token(Token = "0x400024D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private GameObject _infoTextParrent;

	[Token(Token = "0x17000042")]
	public Button SaveButton
	{
		[Token(Token = "0x600022E")]
		[Address(RVA = "0x1593F20", Offset = "0x1593F20", VA = "0x1593F20")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000043")]
	public Toggle TlsToggle
	{
		[Token(Token = "0x600022F")]
		[Address(RVA = "0x1593F28", Offset = "0x1593F28", VA = "0x1593F28")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000044")]
	public TMP_InputField HostInputField
	{
		[Token(Token = "0x6000230")]
		[Address(RVA = "0x1593F30", Offset = "0x1593F30", VA = "0x1593F30")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000045")]
	public TMP_InputField PortInputField
	{
		[Token(Token = "0x6000231")]
		[Address(RVA = "0x1593F38", Offset = "0x1593F38", VA = "0x1593F38")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000046")]
	public TMP_InputField CallingAeInputField
	{
		[Token(Token = "0x6000232")]
		[Address(RVA = "0x1593F40", Offset = "0x1593F40", VA = "0x1593F40")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000047")]
	public TMP_InputField CalledAeInputField
	{
		[Token(Token = "0x6000233")]
		[Address(RVA = "0x1593F48", Offset = "0x1593F48", VA = "0x1593F48")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000048")]
	public Button BackButton
	{
		[Token(Token = "0x6000234")]
		[Address(RVA = "0x1593F50", Offset = "0x1593F50", VA = "0x1593F50")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000049")]
	public GameObject InfoTextParrent
	{
		[Token(Token = "0x6000235")]
		[Address(RVA = "0x1593F58", Offset = "0x1593F58", VA = "0x1593F58")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000236")]
	[Address(RVA = "0x1593F60", Offset = "0x1593F60", VA = "0x1593F60")]
	public PACSSettingsReferences()
	{
	}
}
[Token(Token = "0x200007E")]
public class NetworkPlayersPresenter : MonoBehaviour
{
	[Token(Token = "0x400024E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private StudentRow _studentRowPrefab;

	[Token(Token = "0x400024F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Toggle _disableAllInteraction;

	[Token(Token = "0x4000250")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Toggle _disableAllAvatars;

	[Token(Token = "0x4000251")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject _contentParrent;

	[Token(Token = "0x6000237")]
	[Address(RVA = "0x1593F68", Offset = "0x1593F68", VA = "0x1593F68")]
	public void RefreshPanel()
	{
	}

	[Token(Token = "0x6000238")]
	[Address(RVA = "0x15945C8", Offset = "0x15945C8", VA = "0x15945C8")]
	public NetworkPlayersPresenter()
	{
	}
}
[Token(Token = "0x2000080")]
public class RotateObject : MonoBehaviour
{
	[Token(Token = "0x4000254")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Vector3 _axis;

	[Token(Token = "0x4000255")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float _speed;

	[Token(Token = "0x4000256")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float _minSize;

	[Token(Token = "0x4000257")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private bool _rotate;

	[Token(Token = "0x4000258")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
	[SerializeField]
	private bool _scale;

	[Token(Token = "0x1700004A")]
	public bool Rotate
	{
		[Token(Token = "0x600023C")]
		[Address(RVA = "0x1594668", Offset = "0x1594668", VA = "0x1594668")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600023D")]
		[Address(RVA = "0x1594670", Offset = "0x1594670", VA = "0x1594670")]
		set
		{
		}
	}

	[Token(Token = "0x1700004B")]
	public float Speed
	{
		[Token(Token = "0x600023E")]
		[Address(RVA = "0x159467C", Offset = "0x159467C", VA = "0x159467C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600023F")]
		[Address(RVA = "0x1594684", Offset = "0x1594684", VA = "0x1594684")]
		set
		{
		}
	}

	[Token(Token = "0x6000240")]
	[Address(RVA = "0x159468C", Offset = "0x159468C", VA = "0x159468C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000241")]
	[Address(RVA = "0x1594770", Offset = "0x1594770", VA = "0x1594770")]
	public void Update()
	{
	}

	[Token(Token = "0x6000242")]
	[Address(RVA = "0x159469C", Offset = "0x159469C", VA = "0x159469C")]
	private void Scale()
	{
	}

	[Token(Token = "0x6000243")]
	[Address(RVA = "0x15947E8", Offset = "0x15947E8", VA = "0x15947E8")]
	public Tweener ChangeSpeed(float value, float time, Ease ease = Ease.Linear)
	{
		return null;
	}

	[Token(Token = "0x6000244")]
	[Address(RVA = "0x1594924", Offset = "0x1594924", VA = "0x1594924")]
	public RotateObject()
	{
	}
}
[Token(Token = "0x2000081")]
public class SceneLoader : MonoBehaviour
{
	[Token(Token = "0x2000082")]
	public class SlotData
	{
		[Token(Token = "0x4000270")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public FileInfo FileInfo;

		[Token(Token = "0x4000271")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public byte[] ThumbnailData;

		[Token(Token = "0x4000272")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AnatomyModel AnatomyModel;

		[Token(Token = "0x4000273")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public DrawingObjectsModel DrawingObjectsModel;

		[Token(Token = "0x4000274")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public CadaverObjectsModel CadaverObjectsModel;

		[Token(Token = "0x4000275")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public PlayerModel PlayerModel;

		[Token(Token = "0x6000265")]
		[Address(RVA = "0x1598FF4", Offset = "0x1598FF4", VA = "0x1598FF4")]
		public SlotData()
		{
		}
	}

	[Token(Token = "0x2000084")]
	[CompilerGenerated]
	private sealed class <>c__DisplayClass29_0
	{
		[Token(Token = "0x4000287")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public IAnatomyDatabase anatomyDatabase;

		[Token(Token = "0x4000288")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SceneLoader <>4__this;

		[Token(Token = "0x4000289")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool locationsEnabled;

		[Token(Token = "0x6000278")]
		[Address(RVA = "0x1599590", Offset = "0x1599590", VA = "0x1599590")]
		public <>c__DisplayClass29_0()
		{
		}

		[Token(Token = "0x6000279")]
		[Address(RVA = "0x1599598", Offset = "0x1599598", VA = "0x1599598")]
		internal (SlotData, bool) <LoadSlots>b__2(SlotData val)
		{
			return default((SlotData, bool));
		}
	}

	[StructLayout(3)]
	[Token(Token = "0x2000085")]
	[CompilerGenerated]
	private struct <LoadSlots>d__29 : IAsyncStateMachine
	{
		[Token(Token = "0x400028A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x400028B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncTaskMethodBuilder <>t__builder;

		[Token(Token = "0x400028C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SceneLoader <>4__this;

		[Token(Token = "0x400028D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private <>c__DisplayClass29_0 <>8__1;

		[Token(Token = "0x400028E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private TaskAwaiter<SlotData[]> <>u__1;

		[Token(Token = "0x600027A")]
		[Address(RVA = "0x1599790", Offset = "0x1599790", VA = "0x1599790", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x600027B")]
		[Address(RVA = "0x159A330", Offset = "0x159A330", VA = "0x159A330", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[StructLayout(3)]
	[Token(Token = "0x2000086")]
	[CompilerGenerated]
	private struct <ReadSlotDataAsync>d__31 : IAsyncStateMachine
	{
		[Token(Token = "0x400028F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x4000290")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncTaskMethodBuilder<SlotData> <>t__builder;

		[Token(Token = "0x4000291")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FileInfo fileInfo;

		[Token(Token = "0x4000292")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private SlotData <slotData>5__2;

		[Token(Token = "0x4000293")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private FileStream <stream>5__3;

		[Token(Token = "0x4000294")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TaskAwaiter<int> <>u__1;

		[Token(Token = "0x600027C")]
		[Address(RVA = "0x159A33C", Offset = "0x159A33C", VA = "0x159A33C", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x600027D")]
		[Address(RVA = "0x159A900", Offset = "0x159A900", VA = "0x159A900", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[Token(Token = "0x2000088")]
	[CompilerGenerated]
	private sealed class <>c__DisplayClass39_0
	{
		[Token(Token = "0x4000297")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public IDrawingObjectFactory<IDrawingObjectInstance> drawingObjectFactory;

		[Token(Token = "0x4000298")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SceneLoader <>4__this;

		[Token(Token = "0x4000299")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ICadaverInstanceFactory<ICadaverInstance> cadaverObjectFactory;

		[Token(Token = "0x6000280")]
		[Address(RVA = "0x159A97C", Offset = "0x159A97C", VA = "0x159A97C")]
		public <>c__DisplayClass39_0()
		{
		}

		[Token(Token = "0x6000281")]
		[Address(RVA = "0x159A984", Offset = "0x159A984", VA = "0x159A984")]
		internal Task<IDrawingObjectInstance> <LoadScene>b__3(IDrawingObjectData obj)
		{
			return null;
		}

		[Token(Token = "0x6000282")]
		[Address(RVA = "0x159AA4C", Offset = "0x159AA4C", VA = "0x159AA4C")]
		internal Task<ICadaverInstance> <LoadScene>b__4(CadaverObjectModel obj)
		{
			return null;
		}
	}

	[StructLayout(3)]
	[Token(Token = "0x2000089")]
	[CompilerGenerated]
	private struct <LoadScene>d__39 : IAsyncStateMachine
	{
		[Token(Token = "0x400029A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x400029B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncVoidMethodBuilder <>t__builder;

		[Token(Token = "0x400029C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SceneLoader <>4__this;

		[Token(Token = "0x400029D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AnatomyModel anatomyModel;

		[Token(Token = "0x400029E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public CadaverObjectsModel cadaversModel;

		[Token(Token = "0x400029F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public DrawingObjectsModel drawingsModel;

		[Token(Token = "0x40002A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private <>c__DisplayClass39_0 <>8__1;

		[Token(Token = "0x40002A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public PlayerModel playerModel;

		[Token(Token = "0x40002A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private IModelLoaderModule<IAnatomyModel<IInteractiveAnatomyItemInstance>> <anatomyModelLoader>5__2;

		[Token(Token = "0x40002A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private IResolver<IInteractiveAnatomyItemInstance, int> <resolver>5__3;

		[Token(Token = "0x40002A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private ISceneManager<IDrawingObjectInstance> <drawingSceneManager>5__4;

		[Token(Token = "0x40002A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private ISceneManager<ICadaverInstance> <cadaverSceneManager>5__5;

		[Token(Token = "0x40002A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private AnatomyModel<int> <modelToLoad>5__6;

		[Token(Token = "0x40002A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private ICollection<IDrawingObjectData> <drawingObjectModels>5__7;

		[Token(Token = "0x40002A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private TaskAwaiter <>u__1;

		[Token(Token = "0x40002A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private TaskAwaiter<IDrawingObjectInstance[]> <>u__2;

		[Token(Token = "0x40002AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private CadaverObjectModel[] <cadaverInstanceModels>5__8;

		[Token(Token = "0x40002AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private TaskAwaiter<ICadaverInstance[]> <>u__3;

		[Token(Token = "0x6000283")]
		[Address(RVA = "0x159AB1C", Offset = "0x159AB1C", VA = "0x159AB1C", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x6000284")]
		[Address(RVA = "0x159CE0C", Offset = "0x159CE0C", VA = "0x159CE0C", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[Token(Token = "0x4000259")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject _content;

	[Token(Token = "0x400025A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private SceneLoaderSlotReferences _gameSlotPrefab;

	[Token(Token = "0x400025B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private ToggleGroup _toggleGroup;

	[Token(Token = "0x400025C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Button _loadButton;

	[Token(Token = "0x400025D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Button _createSlot;

	[Token(Token = "0x400025E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Button _deleteSlotButton;

	[Token(Token = "0x400025F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private TextMeshProUGUI _defaultText;

	[Token(Token = "0x4000260")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Camera _snapshotCamera;

	[Token(Token = "0x4000261")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private NetworkModuleProviderFactory _moduleProviderFactory;

	[Token(Token = "0x4000262")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private NetworkAnatomyServer _networkAnatomyServer;

	[Token(Token = "0x4000263")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private AnatomyConfiguration _anatomyConfiguration;

	[Token(Token = "0x4000264")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private AnatomyLicenseValidatorBehaviour _anatomyLicenseValidator;

	[Token(Token = "0x4000265")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private StorePanel _storePanel;

	[Token(Token = "0x4000266")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private Sprite _lockedSprite;

	[Token(Token = "0x4000267")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private readonly CompositeDisposable _disposable;

	[Token(Token = "0x4000268")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private SceneLoaderSlotReferences _selectedSlot;

	[Token(Token = "0x4000269")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private CancellationTokenSource _loadCancellationTokenSource;

	[Token(Token = "0x400026A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private readonly Dictionary<SceneLoaderSlotReferences, SceneLoaderModel> _exampleSlots;

	[Token(Token = "0x400026B")]
	private const string FILE_FORMAT = ".json";

	[Token(Token = "0x400026C")]
	private const string FILE_FOLDER = "/Save";

	[Token(Token = "0x400026D")]
	private const int ICONSIZEWIDTH = 1024;

	[Token(Token = "0x400026E")]
	private const int ICONSIZEHEIGHT = 716;

	[Token(Token = "0x400026F")]
	private const int ANISO_LEVEL = 1;

	[Token(Token = "0x6000248")]
	[Address(RVA = "0x1594A14", Offset = "0x1594A14", VA = "0x1594A14")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000249")]
	[Address(RVA = "0x1594BC8", Offset = "0x1594BC8", VA = "0x1594BC8")]
	private void Start()
	{
	}

	[Token(Token = "0x600024A")]
	[Address(RVA = "0x1594D7C", Offset = "0x1594D7C", VA = "0x1594D7C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600024B")]
	[Address(RVA = "0x1594DC0", Offset = "0x1594DC0", VA = "0x1594DC0")]
	public void LoadExampleSlots()
	{
	}

	[Token(Token = "0x600024C")]
	[Address(RVA = "0x1595344", Offset = "0x1595344", VA = "0x1595344")]
	private static bool GetLocationsEnabled()
	{
		return default(bool);
	}

	[Token(Token = "0x600024D")]
	[Address(RVA = "0x1595988", Offset = "0x1595988", VA = "0x1595988")]
	[AsyncStateMachine(typeof(<LoadSlots>d__29))]
	public Task LoadSlots()
	{
		return null;
	}

	[Token(Token = "0x600024E")]
	[Address(RVA = "0x159576C", Offset = "0x159576C", VA = "0x159576C")]
	private static bool IsModelValid(AnatomyModel anatomyModel, CadaverObjectsModel cadaverObjectModel, EducationLevel educationLevel, IReadOnlyCollection<ILicenseValidatorProvider> licenseValidatorProviders, bool locationsEnabled)
	{
		return default(bool);
	}

	[Token(Token = "0x600024F")]
	[Address(RVA = "0x1595C6C", Offset = "0x1595C6C", VA = "0x1595C6C")]
	[AsyncStateMachine(typeof(<ReadSlotDataAsync>d__31))]
	public static Task<SlotData> ReadSlotDataAsync(FileInfo fileInfo)
	{
		return null;
	}

	[Token(Token = "0x6000250")]
	[Address(RVA = "0x15953F0", Offset = "0x15953F0", VA = "0x15953F0")]
	private SceneLoaderSlotReferences CreateSlot()
	{
		return null;
	}

	[Token(Token = "0x6000251")]
	[Address(RVA = "0x1595D80", Offset = "0x1595D80", VA = "0x1595D80")]
	private void SetupSlot(SceneLoaderSlotReferences slot, string fileName, byte[] thumbnailData, bool isValid)
	{
	}

	[Token(Token = "0x6000252")]
	[Address(RVA = "0x1595E4C", Offset = "0x1595E4C", VA = "0x1595E4C")]
	public static Texture2D GetTexture2D(byte[] data)
	{
		return null;
	}

	[Token(Token = "0x6000253")]
	[Address(RVA = "0x15957EC", Offset = "0x15957EC", VA = "0x15957EC")]
	private void SetupSlot(SceneLoaderSlotReferences slot, string fileName, Sprite sprite, bool isValid)
	{
	}

	[Token(Token = "0x6000254")]
	[Address(RVA = "0x1595EE0", Offset = "0x1595EE0", VA = "0x1595EE0")]
	private void SaveScene(string fileName)
	{
	}

	[Token(Token = "0x6000255")]
	[Address(RVA = "0x15961FC", Offset = "0x15961FC", VA = "0x15961FC")]
	private void SaveScene(string filePath, byte[] bytes)
	{
	}

	[Token(Token = "0x6000256")]
	[Address(RVA = "0x159600C", Offset = "0x159600C", VA = "0x159600C")]
	private byte[] CreateScreenshot()
	{
		return null;
	}

	[Token(Token = "0x6000257")]
	[Address(RVA = "0x1596E7C", Offset = "0x1596E7C", VA = "0x1596E7C")]
	[AsyncStateMachine(typeof(<LoadScene>d__39))]
	private void LoadScene(AnatomyModel anatomyModel, DrawingObjectsModel drawingsModel, PlayerModel playerModel, CadaverObjectsModel cadaversModel)
	{
	}

	[Token(Token = "0x6000258")]
	[Address(RVA = "0x1595A78", Offset = "0x1595A78", VA = "0x1595A78")]
	private static bool IsValidForLicense(AnatomyModel anatomyModel, CadaverObjectsModel cadaverObjectsModel, IReadOnlyCollection<ILicenseValidatorProvider> licenseValidatorProviders)
	{
		return default(bool);
	}

	[Token(Token = "0x6000259")]
	[Address(RVA = "0x1596FA8", Offset = "0x1596FA8", VA = "0x1596FA8")]
	private static bool TryReadModels(string path, out AnatomyModel anatomyModel, out DrawingObjectsModel drawingObjectsModel, out PlayerModel playerModel, out CadaverObjectsModel cadaverObjectsModel)
	{
		return default(bool);
	}

	[Token(Token = "0x600025A")]
	[Address(RVA = "0x1596D14", Offset = "0x1596D14", VA = "0x1596D14")]
	public static PlayerModel GetPlayerModel(IPlayerHandler playerHandler)
	{
		return null;
	}

	[Token(Token = "0x600025B")]
	[Address(RVA = "0x1597384", Offset = "0x1597384", VA = "0x1597384")]
	public static void LoadPlayerModel(IPlayerHandler playerHandler, PlayerModel value)
	{
	}

	[Token(Token = "0x600025C")]
	[Address(RVA = "0x1597400", Offset = "0x1597400", VA = "0x1597400")]
	public void OnLicenseStatusChanged()
	{
	}

	[Token(Token = "0x600025D")]
	[Address(RVA = "0x1597CF0", Offset = "0x1597CF0", VA = "0x1597CF0")]
	public static void RemoveItemsMissingInDatabase(AnatomyModel<int> model, IAnatomyDatabase anatomyDatabase, EducationLevel educationLevel)
	{
	}

	[Token(Token = "0x600025E")]
	[Address(RVA = "0x1598190", Offset = "0x1598190", VA = "0x1598190")]
	public static bool ItemExistsInDatabase(int id, IAnatomyDatabaseData databaseData)
	{
		return default(bool);
	}

	[Token(Token = "0x600025F")]
	[Address(RVA = "0x1598348", Offset = "0x1598348", VA = "0x1598348")]
	public SceneLoader()
	{
	}
}
[Token(Token = "0x200008C")]
public static class ShaderProps
{
	[Token(Token = "0x40002AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly int Color;

	[Token(Token = "0x40002B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static readonly int EmissionThreshold;

	[Token(Token = "0x40002B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static readonly int EmissionColor;

	[Token(Token = "0x40002B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static readonly int SubPartEmissionColor;

	[Token(Token = "0x40002B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static readonly int ColorMap;

	[Token(Token = "0x40002B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public static readonly int BlendAlpha;

	[Token(Token = "0x40002B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static readonly int PlanePoint;

	[Token(Token = "0x40002B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public static readonly int PlaneNormal;

	[Token(Token = "0x40002B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static readonly int SubPartTex;

	[Token(Token = "0x40002B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public static readonly int SliceAmount;

	[Token(Token = "0x40002B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static readonly int Rotation;

	[Token(Token = "0x40002BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public static readonly int SubPartsVisible;

	[Token(Token = "0x40002BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static readonly int SubPartType;

	[Token(Token = "0x40002BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public static readonly int SliceEnable;

	[Token(Token = "0x40002BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static readonly int Cull;

	[Token(Token = "0x40002BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public static readonly int BackFaceColor;

	[Token(Token = "0x40002BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static readonly int Outline;

	[Token(Token = "0x40002C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public static readonly int OutlineColor;

	[Token(Token = "0x40002C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public static readonly int ZTest;

	[Token(Token = "0x40002C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public static readonly int Width;

	[Token(Token = "0x40002C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public static readonly int Glossiness;

	[Token(Token = "0x40002C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public static readonly int BumpMap;

	[Token(Token = "0x40002C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public static readonly int MetallicMap;

	[Token(Token = "0x40002C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public static readonly int MainTex;

	[Token(Token = "0x40002C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public static readonly int Metallic;

	[Token(Token = "0x40002C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public static readonly int NormalMap;

	[Token(Token = "0x40002C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public static readonly int GlossMapScale;

	[Token(Token = "0x40002CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public static readonly int ZWrite;

	[Token(Token = "0x40002CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public static readonly int XRayColor;

	[Token(Token = "0x40002CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public static readonly int XRayPower;

	[Token(Token = "0x40002CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public static readonly int XRayScale;

	[Token(Token = "0x40002CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public static readonly int XRayBias;

	[Token(Token = "0x40002CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public static readonly int XRayIntensity;

	[Token(Token = "0x40002D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public static readonly int Rim;

	[Token(Token = "0x40002D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public static readonly int Scale;

	[Token(Token = "0x40002D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public static readonly int Bias;

	[Token(Token = "0x40002D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public static readonly int Power;

	[Token(Token = "0x40002D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public static readonly int Intensity;

	[Token(Token = "0x40002D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public static readonly int Opacity;
}
[Token(Token = "0x200008D")]
public static class SettingsPanelExtensions
{
	[StructLayout(3)]
	[Token(Token = "0x2000094")]
	[CompilerGenerated]
	private struct <ReloadScene>d__2 : IAsyncStateMachine
	{
		[Token(Token = "0x40002F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x40002F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncVoidMethodBuilder <>t__builder;

		[Token(Token = "0x40002F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TaskAwaiter <>u__1;

		[Token(Token = "0x40002F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private object <>u__2;

		[Token(Token = "0x60002AE")]
		[Address(RVA = "0x15A09A8", Offset = "0x15A09A8", VA = "0x15A09A8", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x60002AF")]
		[Address(RVA = "0x15A0E90", Offset = "0x15A0E90", VA = "0x15A0E90", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[Token(Token = "0x600028F")]
	[Address(RVA = "0x159D6CC", Offset = "0x159D6CC", VA = "0x159D6CC")]
	public static CompositeDisposable Initialize(this SettingsPanelReferences settingsPanel, ILicenseManager licenseManager, INetworkModuleProviderFactory moduleProviderFactory, SceneEnvironmentsScriptableObject sceneEnvironmentsScriptableObject)
	{
		return null;
	}

	[Token(Token = "0x6000290")]
	[Address(RVA = "0x159E4DC", Offset = "0x159E4DC", VA = "0x159E4DC")]
	public static LocalizationLanguage GetNextLanguage(IEnumerable<LocalizationLanguage> supportedLanguages, LocalizationLanguage currentLanguage)
	{
		return default(LocalizationLanguage);
	}

	[Token(Token = "0x6000291")]
	[Address(RVA = "0x159E628", Offset = "0x159E628", VA = "0x159E628")]
	[AsyncStateMachine(typeof(<ReloadScene>d__2))]
	public static void ReloadScene()
	{
	}
}
[Token(Token = "0x2000095")]
public class SettingsPanelReferences : MonoBehaviour
{
	[Token(Token = "0x40002F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Buttons")]
	[SerializeField]
	private Button _languageButton;

	[Token(Token = "0x40002F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Button _languageUiButton;

	[Token(Token = "0x40002F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Button _movementButton;

	[Token(Token = "0x40002F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Button _locationButton;

	[Token(Token = "0x40002F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Button _enviromentButton;

	[Token(Token = "0x40002FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	[Header("Others")]
	private LocalizedTextMeshProGui _languageName;

	[Token(Token = "0x40002FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private LocalizedTextMeshProGui _languageUiName;

	[Token(Token = "0x40002FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private LocalizedTextMeshProGui _movementName;

	[Token(Token = "0x40002FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private LocalizedTextMeshProGui _locationName;

	[Token(Token = "0x40002FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private LocalizedTextMeshProGui _enviromentName;

	[Token(Token = "0x40002FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[Header("Settings")]
	[SerializeField]
	private bool _reloadAfterCadaverTypeChanged;

	[Token(Token = "0x4000300")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private AnatomyLocalizationSettingsScriptableObject _anatomyLocalizationSettings;

	[Token(Token = "0x1700004C")]
	public Button LanguageButton
	{
		[Token(Token = "0x60002B0")]
		[Address(RVA = "0x15A0E9C", Offset = "0x15A0E9C", VA = "0x15A0E9C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700004D")]
	public Button LanguageUiButton
	{
		[Token(Token = "0x60002B1")]
		[Address(RVA = "0x15A0EA4", Offset = "0x15A0EA4", VA = "0x15A0EA4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700004E")]
	public Button MovementButton
	{
		[Token(Token = "0x60002B2")]
		[Address(RVA = "0x15A0EAC", Offset = "0x15A0EAC", VA = "0x15A0EAC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700004F")]
	public Button LocationButton
	{
		[Token(Token = "0x60002B3")]
		[Address(RVA = "0x15A0EB4", Offset = "0x15A0EB4", VA = "0x15A0EB4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000050")]
	public Button EnvironmentButton
	{
		[Token(Token = "0x60002B4")]
		[Address(RVA = "0x15A0EBC", Offset = "0x15A0EBC", VA = "0x15A0EBC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000051")]
	public LocalizedTextMeshProGui LanguageName
	{
		[Token(Token = "0x60002B5")]
		[Address(RVA = "0x15A0EC4", Offset = "0x15A0EC4", VA = "0x15A0EC4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000052")]
	public LocalizedTextMeshProGui LanguageUiName
	{
		[Token(Token = "0x60002B6")]
		[Address(RVA = "0x15A0ECC", Offset = "0x15A0ECC", VA = "0x15A0ECC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000053")]
	public LocalizedTextMeshProGui MovementName
	{
		[Token(Token = "0x60002B7")]
		[Address(RVA = "0x15A0ED4", Offset = "0x15A0ED4", VA = "0x15A0ED4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000054")]
	public LocalizedTextMeshProGui LocationName
	{
		[Token(Token = "0x60002B8")]
		[Address(RVA = "0x15A0EDC", Offset = "0x15A0EDC", VA = "0x15A0EDC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000055")]
	public LocalizedTextMeshProGui EnvironmentName
	{
		[Token(Token = "0x60002B9")]
		[Address(RVA = "0x15A0EE4", Offset = "0x15A0EE4", VA = "0x15A0EE4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000056")]
	public bool ReloadAfterCadaverTypeChanged
	{
		[Token(Token = "0x60002BA")]
		[Address(RVA = "0x15A0EEC", Offset = "0x15A0EEC", VA = "0x15A0EEC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000057")]
	public AnatomyLocalizationSettingsScriptableObject AnatomyLocalizationSettings
	{
		[Token(Token = "0x60002BB")]
		[Address(RVA = "0x15A0EF4", Offset = "0x15A0EF4", VA = "0x15A0EF4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60002BC")]
	[Address(RVA = "0x15A0EFC", Offset = "0x15A0EFC", VA = "0x15A0EFC")]
	public SettingsPanelReferences()
	{
	}
}
[Token(Token = "0x2000096")]
public class SmoothCameraHandler : MonoBehaviour
{
	[Token(Token = "0x60002BD")]
	[Address(RVA = "0x15A0F04", Offset = "0x15A0F04", VA = "0x15A0F04")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002BE")]
	[Address(RVA = "0x15A0F78", Offset = "0x15A0F78", VA = "0x15A0F78")]
	public SmoothCameraHandler()
	{
	}
}
[Token(Token = "0x2000097")]
public class StudentRow : MonoBehaviour
{
	[Token(Token = "0x4000301")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private TextMeshProUGUI _counterText;

	[Token(Token = "0x4000302")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private TextMeshProUGUI _nameText;

	[Token(Token = "0x4000303")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private UiElementReferences _firstButton;

	[Token(Token = "0x4000304")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private UiElementReferences _secoundButton;

	[Token(Token = "0x17000058")]
	public TextMeshProUGUI CounterText
	{
		[Token(Token = "0x60002BF")]
		[Address(RVA = "0x15A0F80", Offset = "0x15A0F80", VA = "0x15A0F80")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000059")]
	public TextMeshProUGUI NameText
	{
		[Token(Token = "0x60002C0")]
		[Address(RVA = "0x15A0F88", Offset = "0x15A0F88", VA = "0x15A0F88")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700005A")]
	public UiElementReferences FirstButton
	{
		[Token(Token = "0x60002C1")]
		[Address(RVA = "0x15A0F90", Offset = "0x15A0F90", VA = "0x15A0F90")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700005B")]
	public UiElementReferences SecondButton
	{
		[Token(Token = "0x60002C2")]
		[Address(RVA = "0x15A0F98", Offset = "0x15A0F98", VA = "0x15A0F98")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60002C3")]
	[Address(RVA = "0x15A0FA0", Offset = "0x15A0FA0", VA = "0x15A0FA0")]
	public StudentRow()
	{
	}
}
[Token(Token = "0x2000098")]
public class PlayerResultRow : MonoBehaviour
{
	[Token(Token = "0x4000305")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private TextMeshProUGUI _index;

	[Token(Token = "0x4000306")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private TextMeshProUGUI _playerName;

	[Token(Token = "0x4000307")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private TextMeshProUGUI _playerScore;

	[Token(Token = "0x4000308")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private TextMeshProUGUI _playerTime;

	[Token(Token = "0x4000309")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Button _showPlayerResults;

	[Token(Token = "0x1700005C")]
	public TextMeshProUGUI Index
	{
		[Token(Token = "0x60002C4")]
		[Address(RVA = "0x15A0FA8", Offset = "0x15A0FA8", VA = "0x15A0FA8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700005D")]
	public TextMeshProUGUI PlayerName
	{
		[Token(Token = "0x60002C5")]
		[Address(RVA = "0x15A0FB0", Offset = "0x15A0FB0", VA = "0x15A0FB0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700005E")]
	public TextMeshProUGUI PlayerScore
	{
		[Token(Token = "0x60002C6")]
		[Address(RVA = "0x15A0FB8", Offset = "0x15A0FB8", VA = "0x15A0FB8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700005F")]
	public TextMeshProUGUI PlayerTime
	{
		[Token(Token = "0x60002C7")]
		[Address(RVA = "0x15A0FC0", Offset = "0x15A0FC0", VA = "0x15A0FC0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000060")]
	public Button ShowPlayerResults
	{
		[Token(Token = "0x60002C8")]
		[Address(RVA = "0x15A0FC8", Offset = "0x15A0FC8", VA = "0x15A0FC8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60002C9")]
	[Address(RVA = "0x15A0FD0", Offset = "0x15A0FD0", VA = "0x15A0FD0")]
	public PlayerResultRow()
	{
	}
}
[Token(Token = "0x2000099")]
public class QuizResultsRow : MonoBehaviour
{
	[Token(Token = "0x400030A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private TextMeshProUGUI _counterText;

	[Token(Token = "0x400030B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private UiElementReferences _firstButton;

	[Token(Token = "0x400030C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private UiElementReferences _secoundButton;

	[Token(Token = "0x17000061")]
	public TextMeshProUGUI CounterText
	{
		[Token(Token = "0x60002CA")]
		[Address(RVA = "0x15A0FD8", Offset = "0x15A0FD8", VA = "0x15A0FD8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000062")]
	public UiElementReferences FirstButton
	{
		[Token(Token = "0x60002CB")]
		[Address(RVA = "0x15A0FE0", Offset = "0x15A0FE0", VA = "0x15A0FE0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000063")]
	public UiElementReferences SecondButton
	{
		[Token(Token = "0x60002CC")]
		[Address(RVA = "0x15A0FE8", Offset = "0x15A0FE8", VA = "0x15A0FE8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000064")]
	public int QuestionItem
	{
		[Token(Token = "0x60002CD")]
		[Address(RVA = "0x15A0FF0", Offset = "0x15A0FF0", VA = "0x15A0FF0")]
		[CompilerGenerated]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60002CE")]
		[Address(RVA = "0x15A0FF8", Offset = "0x15A0FF8", VA = "0x15A0FF8")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x60002CF")]
	[Address(RVA = "0x15A1000", Offset = "0x15A1000", VA = "0x15A1000")]
	public QuizResultsRow()
	{
	}
}
[Serializable]
[Token(Token = "0x200009A")]
public class TutorialDubbingDefinition
{
	[Token(Token = "0x400030E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[HideInInspector]
	public string Name;

	[Token(Token = "0x400030F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string LocalizationId;

	[Token(Token = "0x4000310")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioClip EnglishAudioClip;

	[Token(Token = "0x4000311")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioClip SlovakAudioClip;

	[Token(Token = "0x60002D0")]
	[Address(RVA = "0x15A1008", Offset = "0x15A1008", VA = "0x15A1008")]
	public TutorialDubbingDefinition()
	{
	}
}
[Serializable]
[Token(Token = "0x200009B")]
public class LocalizationId
{
	[Token(Token = "0x4000312")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string localizationId;

	[Token(Token = "0x60002D1")]
	[Address(RVA = "0x15A1010", Offset = "0x15A1010", VA = "0x15A1010")]
	public LocalizationId()
	{
	}
}
[Serializable]
[Token(Token = "0x200009C")]
public class Ids
{
	[Token(Token = "0x4000313")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public LocalizationId[] ids;

	[Token(Token = "0x60002D2")]
	[Address(RVA = "0x15A1018", Offset = "0x15A1018", VA = "0x15A1018")]
	public Ids()
	{
	}
}
[Token(Token = "0x200009D")]
[CreateAssetMenu(fileName = "TutorialDubbingDatabase", menuName = "Utilities/TutorialDubbingDatabase")]
public class TutorialDubbingDatabase : ScriptableObject
{
	[Token(Token = "0x4000314")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private List<TutorialDubbingDefinition> _tutorialDubbingDatabase;

	[Token(Token = "0x4000315")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private List<AudioClip> _englishVoiceOvers;

	[Token(Token = "0x17000065")]
	public List<TutorialDubbingDefinition> TutorialVoiceOverDatabase
	{
		[Token(Token = "0x60002D3")]
		[Address(RVA = "0x15A1020", Offset = "0x15A1020", VA = "0x15A1020")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60002D4")]
	[Address(RVA = "0x15A1028", Offset = "0x15A1028", VA = "0x15A1028")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x60002D5")]
	[Address(RVA = "0x15A1130", Offset = "0x15A1130", VA = "0x15A1130")]
	public AudioClip GetAudioClip(string voiceOverId, LocalizationLanguage languageId)
	{
		return null;
	}

	[Token(Token = "0x60002D6")]
	[Address(RVA = "0x15A12E0", Offset = "0x15A12E0", VA = "0x15A12E0")]
	[ContextMenu("Load English Voice Overs")]
	private void LoadEnglishVoiceOvers()
	{
	}

	[Token(Token = "0x60002D7")]
	[Address(RVA = "0x15A1380", Offset = "0x15A1380", VA = "0x15A1380")]
	public TutorialDubbingDatabase()
	{
	}
}
[Token(Token = "0x20000A1")]
public class ContextPanelHandler : MonoBehaviour
{
	[StructLayout(3)]
	[Token(Token = "0x20000A4")]
	[CompilerGenerated]
	private struct <ResetPosition>d__28 : IAsyncStateMachine
	{
		[Token(Token = "0x4000329")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x400032A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncVoidMethodBuilder <>t__builder;

		[Token(Token = "0x400032B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ContextPanelHandler <>4__this;

		[Token(Token = "0x400032C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <maxViewDegre>5__2;

		[Token(Token = "0x400032D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TaskAwaiter <>u__1;

		[Token(Token = "0x60002F9")]
		[Address(RVA = "0x15A26D0", Offset = "0x15A26D0", VA = "0x15A26D0", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x60002FA")]
		[Address(RVA = "0x15A28C8", Offset = "0x15A28C8", VA = "0x15A28C8", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[Token(Token = "0x400031A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Button _closeButton;

	[Token(Token = "0x400031B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Toggle _pinToggle;

	[Token(Token = "0x400031C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject _host;

	[Token(Token = "0x400031D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private RadialView _radialView;

	[Token(Token = "0x400031E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private NetworkModuleProviderFactory _networkModuleProviderFactory;

	[Token(Token = "0x400031F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private UiPanelTriggerStay _uiPanelTriggerStay;

	[Token(Token = "0x4000320")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private LoadingProgressBar _loadingPanel;

	[Token(Token = "0x4000321")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private AudioClip _pinPanelSound;

	[Token(Token = "0x4000322")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private AudioClip _unPinPanelSound;

	[Token(Token = "0x4000323")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private AudioClip _closePanelSound;

	[Token(Token = "0x4000324")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private AudioClip _openPanelSound;

	[Token(Token = "0x4000325")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private readonly CompositeDisposable _disposable;

	[Token(Token = "0x17000066")]
	public bool IsPined
	{
		[Token(Token = "0x60002E0")]
		[Address(RVA = "0x15A1630", Offset = "0x15A1630", VA = "0x15A1630")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000067")]
	public GameObject Host
	{
		[Token(Token = "0x60002E2")]
		[Address(RVA = "0x15A166C", Offset = "0x15A166C", VA = "0x15A166C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60002E3")]
		[Address(RVA = "0x15A1674", Offset = "0x15A1674", VA = "0x15A1674")]
		set
		{
		}
	}

	[Token(Token = "0x17000068")]
	public LoadingProgressBar LoadingPanel
	{
		[Token(Token = "0x60002E4")]
		[Address(RVA = "0x15A167C", Offset = "0x15A167C", VA = "0x15A167C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000069")]
	public Button CloseButton
	{
		[Token(Token = "0x60002E5")]
		[Address(RVA = "0x15A1684", Offset = "0x15A1684", VA = "0x15A1684")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60002E1")]
	[Address(RVA = "0x15A164C", Offset = "0x15A164C", VA = "0x15A164C")]
	public void SetPined(bool val)
	{
	}

	[Token(Token = "0x60002E6")]
	[Address(RVA = "0x15A168C", Offset = "0x15A168C", VA = "0x15A168C")]
	private void Start()
	{
	}

	[Token(Token = "0x60002E7")]
	[Address(RVA = "0x15A1CAC", Offset = "0x15A1CAC", VA = "0x15A1CAC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60002E8")]
	[Address(RVA = "0x15A1CC8", Offset = "0x15A1CC8", VA = "0x15A1CC8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60002E9")]
	[Address(RVA = "0x15A2064", Offset = "0x15A2064", VA = "0x15A2064")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60002EA")]
	[Address(RVA = "0x15A1D88", Offset = "0x15A1D88", VA = "0x15A1D88")]
	public void ShowPanel()
	{
	}

	[Token(Token = "0x60002EB")]
	[Address(RVA = "0x15A2124", Offset = "0x15A2124", VA = "0x15A2124")]
	public static void ForceUpdate(Solver solver)
	{
	}

	[Token(Token = "0x60002EC")]
	[Address(RVA = "0x15A2160", Offset = "0x15A2160", VA = "0x15A2160")]
	[AsyncStateMachine(typeof(<ResetPosition>d__28))]
	public void ResetPosition()
	{
	}

	[Token(Token = "0x60002ED")]
	[Address(RVA = "0x15A2214", Offset = "0x15A2214", VA = "0x15A2214")]
	public ContextPanelHandler()
	{
	}
}
[Token(Token = "0x20000A5")]
public class ScrollViewButtonHandler : MonoBehaviour
{
	[Token(Token = "0x400032E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Button _lowButton;

	[Token(Token = "0x400032F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Button _highButton;

	[Token(Token = "0x4000330")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private RectTransform _content;

	[Token(Token = "0x4000331")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private int _contentSize;

	[Token(Token = "0x4000332")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private int _contentSpacing;

	[Token(Token = "0x4000333")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private ScrollRect _scrollRect;

	[Token(Token = "0x4000334")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private HorizontalScrollSnap _horizontalScrollSnap;

	[Token(Token = "0x4000335")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private bool _hideOnVertical;

	[Token(Token = "0x4000336")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private RectTransform _thisRectTransform;

	[Token(Token = "0x4000337")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private readonly CompositeDisposable _disposable;

	[Token(Token = "0x60002FB")]
	[Address(RVA = "0x15A28D4", Offset = "0x15A28D4", VA = "0x15A28D4")]
	private void OnSelectionPageChange(int i)
	{
	}

	[Token(Token = "0x60002FC")]
	[Address(RVA = "0x15A296C", Offset = "0x15A296C", VA = "0x15A296C")]
	private void Start()
	{
	}

	[Token(Token = "0x60002FD")]
	[Address(RVA = "0x15A2DF0", Offset = "0x15A2DF0", VA = "0x15A2DF0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60002FE")]
	[Address(RVA = "0x15A2E0C", Offset = "0x15A2E0C", VA = "0x15A2E0C")]
	public ScrollViewButtonHandler()
	{
	}
}
[Token(Token = "0x20000A7")]
public class SliderCnopValueSetter : MonoBehaviour
{
	[Token(Token = "0x400033B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Slider _slider;

	[Token(Token = "0x400033C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private TextMeshProUGUI _valueText;

	[Token(Token = "0x6000307")]
	[Address(RVA = "0x16C6478", Offset = "0x16C6478", VA = "0x16C6478")]
	private void Start()
	{
	}

	[Token(Token = "0x6000308")]
	[Address(RVA = "0x16C6624", Offset = "0x16C6624", VA = "0x16C6624")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000309")]
	[Address(RVA = "0x16C6540", Offset = "0x16C6540", VA = "0x16C6540")]
	private void OnSliderValueChanged(float value)
	{
	}

	[Token(Token = "0x600030A")]
	[Address(RVA = "0x16C66CC", Offset = "0x16C66CC", VA = "0x16C66CC")]
	public SliderCnopValueSetter()
	{
	}
}
[Token(Token = "0x20000A8")]
public class SliderWithNumberSetNumbers : MonoBehaviour
{
	[Token(Token = "0x400033D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Text _third;

	[Token(Token = "0x400033E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Text _fifth;

	[Token(Token = "0x400033F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Slider _slider;

	[Token(Token = "0x600030B")]
	[Address(RVA = "0x16C66D4", Offset = "0x16C66D4", VA = "0x16C66D4")]
	private void Awake()
	{
	}

	[Token(Token = "0x600030C")]
	[Address(RVA = "0x16C6874", Offset = "0x16C6874", VA = "0x16C6874")]
	public SliderWithNumberSetNumbers()
	{
	}
}
[Token(Token = "0x20000AA")]
public class StructureLayerUiReference : MonoBehaviour
{
	[Token(Token = "0x4000342")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private LocalizedTextMeshProGui _label;

	[Token(Token = "0x4000343")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Button _lvlMinus;

	[Token(Token = "0x4000344")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Button _lvlPlus;

	[Token(Token = "0x4000345")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private CanvasGroup _detailPartUi;

	[Token(Token = "0x4000346")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Toggle _unfoldToggle;

	[Token(Token = "0x4000347")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private float _offset;

	[Token(Token = "0x4000348")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Renderer ObjectToFollow;

	[Token(Token = "0x1700006A")]
	public Toggle UnfoldToggle
	{
		[Token(Token = "0x6000311")]
		[Address(RVA = "0x16C69C8", Offset = "0x16C69C8", VA = "0x16C69C8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700006B")]
	public LocalizedTextMeshProGui Label
	{
		[Token(Token = "0x6000312")]
		[Address(RVA = "0x16C69D0", Offset = "0x16C69D0", VA = "0x16C69D0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700006C")]
	public Button lvlMinus
	{
		[Token(Token = "0x6000313")]
		[Address(RVA = "0x16C69D8", Offset = "0x16C69D8", VA = "0x16C69D8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700006D")]
	public Button lvlPlus
	{
		[Token(Token = "0x6000314")]
		[Address(RVA = "0x16C69E0", Offset = "0x16C69E0", VA = "0x16C69E0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700006E")]
	public CanvasGroup DetailPartUi
	{
		[Token(Token = "0x6000315")]
		[Address(RVA = "0x16C69E8", Offset = "0x16C69E8", VA = "0x16C69E8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700006F")]
	public float Offset
	{
		[Token(Token = "0x6000316")]
		[Address(RVA = "0x16C69F0", Offset = "0x16C69F0", VA = "0x16C69F0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000317")]
		[Address(RVA = "0x16C69F8", Offset = "0x16C69F8", VA = "0x16C69F8")]
		set
		{
		}
	}

	[Token(Token = "0x6000318")]
	[Address(RVA = "0x16C6A00", Offset = "0x16C6A00", VA = "0x16C6A00")]
	private void Update()
	{
	}

	[Token(Token = "0x6000319")]
	[Address(RVA = "0x16C6C64", Offset = "0x16C6C64", VA = "0x16C6C64")]
	public StructureLayerUiReference()
	{
	}
}
[Token(Token = "0x20000AB")]
public class ToolTipPanel : MonoBehaviour
{
	[Token(Token = "0x4000349")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private TextMeshProUGUI Text;

	[Token(Token = "0x400034A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject Content;

	[Token(Token = "0x400034B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private CanvasGroup _canvasGroup;

	[Token(Token = "0x400034C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private IPlayerHandler _playerHandler;

	[Token(Token = "0x400034D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Sequence _sequence;

	[Token(Token = "0x400034E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private CompositeDisposable _disposable;

	[Token(Token = "0x400034F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ToolTipPanel _instance;

	[Token(Token = "0x17000070")]
	public IPlayerHandler PlayerHandler
	{
		[Token(Token = "0x600031A")]
		[Address(RVA = "0x16C6C78", Offset = "0x16C6C78", VA = "0x16C6C78")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000071")]
	public static ToolTipPanel Instance
	{
		[Token(Token = "0x600031B")]
		[Address(RVA = "0x16C6D7C", Offset = "0x16C6D7C", VA = "0x16C6D7C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600031C")]
	[Address(RVA = "0x16C6ECC", Offset = "0x16C6ECC", VA = "0x16C6ECC")]
	public void Display(string text, Transform trans, bool lookAt, [Optional] Vector3 offset)
	{
	}

	[Token(Token = "0x600031D")]
	[Address(RVA = "0x16C71C4", Offset = "0x16C71C4", VA = "0x16C71C4")]
	private void SetPosition(bool lookAt, Transform trans, [Optional] Vector3 offset)
	{
	}

	[Token(Token = "0x600031E")]
	[Address(RVA = "0x16C73D0", Offset = "0x16C73D0", VA = "0x16C73D0")]
	public void Hide()
	{
	}

	[Token(Token = "0x600031F")]
	[Address(RVA = "0x16C756C", Offset = "0x16C756C", VA = "0x16C756C")]
	public ToolTipPanel()
	{
	}
}
[Token(Token = "0x20000AE")]
public class ToolTipUiComponent : MonoBehaviour
{
	[StructLayout(3)]
	[Token(Token = "0x20000AF")]
	[CompilerGenerated]
	private struct <DisplayToolTip>d__8 : IAsyncStateMachine
	{
		[Token(Token = "0x400035C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x400035D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncVoidMethodBuilder <>t__builder;

		[Token(Token = "0x400035E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ToolTipUiComponent <>4__this;

		[Token(Token = "0x400035F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private CancellationToken <token>5__2;

		[Token(Token = "0x4000360")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TaskAwaiter <>u__1;

		[Token(Token = "0x600032A")]
		[Address(RVA = "0x16C7978", Offset = "0x16C7978", VA = "0x16C7978", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x600032B")]
		[Address(RVA = "0x16C7D3C", Offset = "0x16C7D3C", VA = "0x16C7D3C", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[Token(Token = "0x4000356")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Selectable _selectable;

	[Token(Token = "0x4000357")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private string _text;

	[Token(Token = "0x4000358")]
	private const int _waitingTime = 1000;

	[Token(Token = "0x4000359")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private SelectionState _lastSelectionState;

	[Token(Token = "0x400035A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private CancellationTokenSource _cancellationTokenSource;

	[Token(Token = "0x400035B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private ToolTipPanel _toolTipPanel;

	[Token(Token = "0x6000326")]
	[Address(RVA = "0x16C7760", Offset = "0x16C7760", VA = "0x16C7760")]
	private void Start()
	{
	}

	[Token(Token = "0x6000327")]
	[Address(RVA = "0x16C77D8", Offset = "0x16C77D8", VA = "0x16C77D8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000328")]
	[Address(RVA = "0x16C78BC", Offset = "0x16C78BC", VA = "0x16C78BC")]
	[AsyncStateMachine(typeof(<DisplayToolTip>d__8))]
	public void DisplayToolTip()
	{
	}

	[Token(Token = "0x6000329")]
	[Address(RVA = "0x16C7970", Offset = "0x16C7970", VA = "0x16C7970")]
	public ToolTipUiComponent()
	{
	}
}
[Token(Token = "0x20000B0")]
public class UiPanelTriggerStay : MonoBehaviour
{
	[Token(Token = "0x4000361")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float LastTimeTriggerStay;

	[Token(Token = "0x600032C")]
	[Address(RVA = "0x16C7D48", Offset = "0x16C7D48", VA = "0x16C7D48")]
	private void OnTriggerStay(Collider col)
	{
	}

	[Token(Token = "0x600032D")]
	[Address(RVA = "0x16C7D64", Offset = "0x16C7D64", VA = "0x16C7D64")]
	public UiPanelTriggerStay()
	{
	}
}
[Token(Token = "0x20000B1")]
public static class AnatomyExtensions
{
	[StructLayout(3)]
	[Token(Token = "0x20000B3")]
	[CompilerGenerated]
	private struct <InitializeModuleProviderWithEducationLevel>d__2<TCollection, TCollectionImpl> : IAsyncStateMachine where TCollection : ISystemPart where TCollectionImpl : TCollection
	{
		[Token(Token = "0x4000367")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x4000368")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public AsyncTaskMethodBuilder <>t__builder;

		[Token(Token = "0x4000369")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IModuleProvider moduleProvider;

		[Token(Token = "0x400036A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public AnatomyInstanceProviderSettings settings;

		[Token(Token = "0x400036B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public EducationLevel educationLevel;

		[Token(Token = "0x400036C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public LocalizationManager localizationManager;

		[Token(Token = "0x400036D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public AnatomyLocalizationSettings localizationSettings;

		[Token(Token = "0x400036E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private AnatomyDatabase <anatomyDatabase>5__2;

		[Token(Token = "0x400036F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private AnatomyInstanceProvider<TCollection, TCollectionImpl> <instanceProvider>5__3;

		[Token(Token = "0x4000370")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private TaskAwaiter<Dictionary<DatabaseType, System.Collections.Generic.IReadOnlyDictionary<string, ItemPoseData>>> <>u__1;

		[Token(Token = "0x4000371")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private TaskAwaiter <>u__2;

		[Token(Token = "0x6000342")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x6000343")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[StructLayout(3)]
	[Token(Token = "0x20000B5")]
	[CompilerGenerated]
	private struct <RequestPoseDatabasesAsync>d__3 : IAsyncStateMachine
	{
		[Token(Token = "0x4000378")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x4000379")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncTaskMethodBuilder<Dictionary<DatabaseType, System.Collections.Generic.IReadOnlyDictionary<string, ItemPoseData>>> <>t__builder;

		[Token(Token = "0x400037A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EducationLevel educationLevel;

		[Token(Token = "0x400037B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public IAssetInstanceProvider<ItemPoseDatabase> assetInstanceProvider;

		[Token(Token = "0x400037C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private TaskAwaiter<IEnumerable<LoadedAsset<ItemPoseDatabase>>> <>u__1;

		[Token(Token = "0x600034B")]
		[Address(RVA = "0x16C8F6C", Offset = "0x16C8F6C", VA = "0x16C8F6C", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x600034C")]
		[Address(RVA = "0x16C9568", Offset = "0x16C9568", VA = "0x16C9568", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[Token(Token = "0x4000362")]
	public const LocationTypeApplication DefaultLocationType = LocationTypeApplication.FullBody;

	[Token(Token = "0x4000363")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Dictionary<string, string> DiacriticsCache;

	[Token(Token = "0x600032E")]
	public static void UnloadAllAssets<TCollection, TCollectionImpl>(IModuleProvider moduleProvider) where TCollection : ISystemPart where TCollectionImpl : TCollection
	{
	}

	[Token(Token = "0x600032F")]
	[AsyncStateMachine(typeof(<InitializeModuleProviderWithEducationLevel>d__2<, >))]
	public static Task InitializeModuleProviderWithEducationLevel<TCollection, TCollectionImpl>(this IModuleProvider moduleProvider, EducationLevel educationLevel, AnatomyInstanceProviderSettings settings, AnatomyLocalizationSettings localizationSettings, LocalizationManager localizationManager) where TCollection : ISystemPart where TCollectionImpl : TCollection
	{
		return null;
	}

	[Token(Token = "0x6000330")]
	[Address(RVA = "0x16C7D6C", Offset = "0x16C7D6C", VA = "0x16C7D6C")]
	[AsyncStateMachine(typeof(<RequestPoseDatabasesAsync>d__3))]
	public static Task<Dictionary<DatabaseType, System.Collections.Generic.IReadOnlyDictionary<string, ItemPoseData>>> RequestPoseDatabasesAsync(this IAssetInstanceProvider<ItemPoseDatabase> assetInstanceProvider, EducationLevel educationLevel)
	{
		return null;
	}

	[Token(Token = "0x6000331")]
	[Address(RVA = "0x16C7E8C", Offset = "0x16C7E8C", VA = "0x16C7E8C")]
	public static int GetId(this IAnatomyItemInstance item)
	{
		return default(int);
	}

	[Token(Token = "0x6000332")]
	[Address(RVA = "0x16C7FAC", Offset = "0x16C7FAC", VA = "0x16C7FAC")]
	public static string RandomString(int length)
	{
		return null;
	}

	[Token(Token = "0x6000333")]
	[Address(RVA = "0x16C8130", Offset = "0x16C8130", VA = "0x16C8130")]
	public static string RemoveDiacritics(this string text)
	{
		return null;
	}

	[Token(Token = "0x6000334")]
	[Address(RVA = "0x16C8328", Offset = "0x16C8328", VA = "0x16C8328")]
	public static bool IsNullOrEmpty(this string value)
	{
		return default(bool);
	}

	[Token(Token = "0x6000335")]
	public static List<T> FindObjectsOfTypeAll<T>()
	{
		return null;
	}

	[Token(Token = "0x6000336")]
	[Address(RVA = "0x16C8344", Offset = "0x16C8344", VA = "0x16C8344")]
	public static string GetPath(this Component component)
	{
		return null;
	}

	[Token(Token = "0x6000337")]
	[Address(RVA = "0x16C8478", Offset = "0x16C8478", VA = "0x16C8478")]
	public static void DumpErrorLog(this List<string> errors, string fileName)
	{
	}

	[Token(Token = "0x6000338")]
	[Address(RVA = "0x16C874C", Offset = "0x16C874C", VA = "0x16C874C")]
	public static void ClearErrors()
	{
	}

	[Token(Token = "0x6000339")]
	[Address(RVA = "0x16C8A70", Offset = "0x16C8A70", VA = "0x16C8A70")]
	public static string GetDescription(this Enum value)
	{
		return null;
	}

	[Token(Token = "0x600033A")]
	public static T GetOrAddComponent<T>(this GameObject gameObject) where T : Component
	{
		return null;
	}

	[Token(Token = "0x600033B")]
	public static T GetComponentOrMonoBehaviourObject<T>(this GameObject gameObject)
	{
		return (T)null;
	}

	[Token(Token = "0x600033C")]
	public static IEnumerable<T> GetComponentsOrMonoBehaviourObjects<T>(this GameObject gameObject)
	{
		return null;
	}
}
[Token(Token = "0x20000B9")]
public static class DoTweenExtensions
{
	[Token(Token = "0x6000355")]
	[Address(RVA = "0x16C95FC", Offset = "0x16C95FC", VA = "0x16C95FC")]
	public static TweenerCore<float, float, FloatOptions> DoRotateAround(this Transform transform, Vector3 point, Vector3 axis, float angle, float duration)
	{
		return null;
	}

	[Token(Token = "0x6000356")]
	[Address(RVA = "0x16C9794", Offset = "0x16C9794", VA = "0x16C9794")]
	public static TweenerCore<float, float, FloatOptions> DOBaseOffset(this NavMeshAgent navMeshAgent, float endValue, float duration)
	{
		return null;
	}

	[Token(Token = "0x6000357")]
	[Address(RVA = "0x16C98E8", Offset = "0x16C98E8", VA = "0x16C98E8")]
	public static void AppendStrobeSequence(this Sequence sequence, Func<float, IEnumerable<Tween>> getTweens, int strobeCount, float oneStrobeDuration, float strobeInterval)
	{
	}
}
[Token(Token = "0x20000BC")]
public class ObjectTransformManipulator
{
	[Token(Token = "0x4000387")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private float _rotationSpeed;

	[Token(Token = "0x4000388")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[SerializeField]
	private float _upDownSpeed;

	[Token(Token = "0x4000389")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float _minLimit;

	[Token(Token = "0x400038A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float _maxLimit;

	[Token(Token = "0x17000072")]
	public Vector2 MoveVelocity
	{
		[Token(Token = "0x600035E")]
		[Address(RVA = "0x16C9D14", Offset = "0x16C9D14", VA = "0x16C9D14")]
		[CompilerGenerated]
		get
		{
			return default(Vector2);
		}
		[Token(Token = "0x600035F")]
		[Address(RVA = "0x16C9D1C", Offset = "0x16C9D1C", VA = "0x16C9D1C")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x17000073")]
	public Transform TargetObject
	{
		[Token(Token = "0x6000360")]
		[Address(RVA = "0x16C9D24", Offset = "0x16C9D24", VA = "0x16C9D24")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000361")]
		[Address(RVA = "0x16C9D2C", Offset = "0x16C9D2C", VA = "0x16C9D2C")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x6000362")]
	[Address(RVA = "0x16C9D34", Offset = "0x16C9D34", VA = "0x16C9D34")]
	public void Update()
	{
	}

	[Token(Token = "0x6000363")]
	[Address(RVA = "0x16C9F34", Offset = "0x16C9F34", VA = "0x16C9F34")]
	public ObjectTransformManipulator()
	{
	}
}
[Token(Token = "0x20000BD")]
public class OculusPauseHandller : MonoBehaviour
{
	[Token(Token = "0x6000364")]
	[Address(RVA = "0x16C9F48", Offset = "0x16C9F48", VA = "0x16C9F48")]
	private void Update()
	{
	}

	[Token(Token = "0x6000365")]
	[Address(RVA = "0x16C9F94", Offset = "0x16C9F94", VA = "0x16C9F94")]
	public OculusPauseHandller()
	{
	}
}
[Token(Token = "0x20000BE")]
public class ServerAuthorityExamplePlayerController : NetworkBehaviour
{
	[Token(Token = "0x400038D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Rigidbody rb;

	[Token(Token = "0x400038E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float transformMovementSpeed;

	[Token(Token = "0x400038F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float rigidbodyMovementForce;

	[Token(Token = "0x4000390")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private SmoothSyncMirror smoothSync;

	[Token(Token = "0x6000366")]
	[Address(RVA = "0x16C9F9C", Offset = "0x16C9F9C", VA = "0x16C9F9C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000367")]
	[Address(RVA = "0x16CA02C", Offset = "0x16CA02C", VA = "0x16CA02C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000368")]
	[Address(RVA = "0x16CA2A4", Offset = "0x16CA2A4", VA = "0x16CA2A4")]
	[Command]
	private void CmdTeleport()
	{
	}

	[Token(Token = "0x6000369")]
	[Address(RVA = "0x16CA0D4", Offset = "0x16CA0D4", VA = "0x16CA0D4")]
	[Command]
	private void CmdMove(KeyCode keyCode)
	{
	}

	[Token(Token = "0x600036A")]
	[Address(RVA = "0x16CA460", Offset = "0x16CA460", VA = "0x16CA460")]
	public ServerAuthorityExamplePlayerController()
	{
	}

	[Token(Token = "0x600036B")]
	[Address(RVA = "0x16CA474", Offset = "0x16CA474", VA = "0x16CA474")]
	private void MirrorProcessed()
	{
	}

	[Token(Token = "0x600036C")]
	[Address(RVA = "0x16CA478", Offset = "0x16CA478", VA = "0x16CA478")]
	protected void UserCode_CmdTeleport()
	{
	}

	[Token(Token = "0x600036D")]
	[Address(RVA = "0x16CA7C0", Offset = "0x16CA7C0", VA = "0x16CA7C0")]
	protected static void InvokeUserCode_CmdTeleport(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x600036E")]
	[Address(RVA = "0x16CA8F0", Offset = "0x16CA8F0", VA = "0x16CA8F0")]
	protected void UserCode_CmdMove__KeyCode(KeyCode keyCode)
	{
	}

	[Token(Token = "0x600036F")]
	[Address(RVA = "0x16CA9AC", Offset = "0x16CA9AC", VA = "0x16CA9AC")]
	protected static void InvokeUserCode_CmdMove__KeyCode(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x6000370")]
	[Address(RVA = "0x16CAB00", Offset = "0x16CAB00", VA = "0x16CAB00")]
	static ServerAuthorityExamplePlayerController()
	{
	}
}
[Token(Token = "0x20000BF")]
public class SmoothSyncMirrorExamplePlayerController : NetworkBehaviour
{
	[Token(Token = "0x4000391")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Rigidbody rb;

	[Token(Token = "0x4000392")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Rigidbody2D rb2D;

	[Token(Token = "0x4000393")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private SmoothSyncMirror smoothSync;

	[Token(Token = "0x4000394")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float transformMovementSpeed;

	[Token(Token = "0x4000395")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float rigidbodyMovementForce;

	[Token(Token = "0x4000396")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject childObjectToControl;

	[Token(Token = "0x6000371")]
	[Address(RVA = "0x16CAC94", Offset = "0x16CAC94", VA = "0x16CAC94")]
	private void Start()
	{
	}

	[Token(Token = "0x6000372")]
	[Address(RVA = "0x16CAF48", Offset = "0x16CAF48", VA = "0x16CAF48")]
	private void Update()
	{
	}

	[Token(Token = "0x6000373")]
	[Address(RVA = "0x16CBDC0", Offset = "0x16CBDC0", VA = "0x16CBDC0")]
	public static bool validateStateOfPlayer(StateMirror latestReceivedState, StateMirror latestValidatedState)
	{
		return default(bool);
	}

	[Token(Token = "0x6000374")]
	[Address(RVA = "0x16CBE94", Offset = "0x16CBE94", VA = "0x16CBE94")]
	public SmoothSyncMirrorExamplePlayerController()
	{
	}

	[Token(Token = "0x6000375")]
	[Address(RVA = "0x16CBEA8", Offset = "0x16CBEA8", VA = "0x16CBEA8")]
	private void MirrorProcessed()
	{
	}
}
namespace Smooth
{
	[Token(Token = "0x20000C0")]
	public class MsgType
	{
		[Token(Token = "0x4000397")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static short SmoothSyncFromServerToNonOwners;

		[Token(Token = "0x4000398")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
		public static short SmoothSyncFromOwnerToServer;

		[Token(Token = "0x6000376")]
		[Address(RVA = "0x16CBEAC", Offset = "0x16CBEAC", VA = "0x16CBEAC")]
		public MsgType()
		{
		}
	}
	[Token(Token = "0x20000C1")]
	public enum SyncMode
	{
		[Token(Token = "0x400039A")]
		XYZ,
		[Token(Token = "0x400039B")]
		XY,
		[Token(Token = "0x400039C")]
		XZ,
		[Token(Token = "0x400039D")]
		YZ,
		[Token(Token = "0x400039E")]
		X,
		[Token(Token = "0x400039F")]
		Y,
		[Token(Token = "0x40003A0")]
		Z,
		[Token(Token = "0x40003A1")]
		NONE
	}
	[Token(Token = "0x20000C2")]
	public class SmoothSyncMirror : NetworkBehaviour
	{
		[Token(Token = "0x20000C3")]
		public enum ExtrapolationMode
		{
			[Token(Token = "0x400040C")]
			None,
			[Token(Token = "0x400040D")]
			Limited,
			[Token(Token = "0x400040E")]
			Unlimited
		}

		[Token(Token = "0x20000C4")]
		public enum TransformSource
		{
			[Token(Token = "0x4000410")]
			Owner,
			[Token(Token = "0x4000411")]
			Server
		}

		[Token(Token = "0x20000C5")]
		public enum WhenToUpdateTransform
		{
			[Token(Token = "0x4000413")]
			Update,
			[Token(Token = "0x4000414")]
			FixedUpdate
		}

		[Token(Token = "0x20000C6")]
		public delegate bool validateStateDelegate(StateMirror receivedState, StateMirror latestVerifiedState);

		[Token(Token = "0x20000C7")]
		private enum RestState
		{
			[Token(Token = "0x4000416")]
			AT_REST,
			[Token(Token = "0x4000417")]
			JUST_STARTED_MOVING,
			[Token(Token = "0x4000418")]
			MOVING
		}

		[Token(Token = "0x40003A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float interpolationBackTime;

		[Token(Token = "0x40003A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public ExtrapolationMode extrapolationMode;

		[Token(Token = "0x40003A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public bool useExtrapolationTimeLimit;

		[Token(Token = "0x40003A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public float extrapolationTimeLimit;

		[Token(Token = "0x40003A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public bool useExtrapolationDistanceLimit;

		[Token(Token = "0x40003A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public float extrapolationDistanceLimit;

		[Token(Token = "0x40003A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public float sendPositionThreshold;

		[Token(Token = "0x40003A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public float sendRotationThreshold;

		[Token(Token = "0x40003AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public float sendScaleThreshold;

		[Token(Token = "0x40003AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public float sendVelocityThreshold;

		[Token(Token = "0x40003AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public float sendAngularVelocityThreshold;

		[Token(Token = "0x40003AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public float receivedPositionThreshold;

		[Token(Token = "0x40003AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float receivedRotationThreshold;

		[Token(Token = "0x40003AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public float snapPositionThreshold;

		[Token(Token = "0x40003B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float snapRotationThreshold;

		[Token(Token = "0x40003B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public float snapScaleThreshold;

		[Token(Token = "0x40003B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[Range(0f, 1f)]
		public float positionLerpSpeed;

		[Token(Token = "0x40003B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[Range(0f, 1f)]
		public float rotationLerpSpeed;

		[Token(Token = "0x40003B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[Range(0f, 1f)]
		public float scaleLerpSpeed;

		[Token(Token = "0x40003B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[Range(0f, 5f)]
		public float timeCorrectionSpeed;

		[Token(Token = "0x40003B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public float snapTimeThreshold;

		[Token(Token = "0x40003B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		public SyncMode syncPosition;

		[Token(Token = "0x40003B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public SyncMode syncRotation;

		[Token(Token = "0x40003B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		public SyncMode syncScale;

		[Token(Token = "0x40003BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public SyncMode syncVelocity;

		[Token(Token = "0x40003BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		public SyncMode syncAngularVelocity;

		[Token(Token = "0x40003BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public bool isPositionCompressed;

		[Token(Token = "0x40003BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC1")]
		public bool isRotationCompressed;

		[Token(Token = "0x40003BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC2")]
		public bool isScaleCompressed;

		[Token(Token = "0x40003BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC3")]
		public bool isVelocityCompressed;

		[Token(Token = "0x40003C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		public bool isAngularVelocityCompressed;

		[Token(Token = "0x40003C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC5")]
		public bool automaticallyResetTime;

		[Token(Token = "0x40003C3")]
		private const int maxTimePower = 12;

		[Token(Token = "0x40003C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private readonly float maxLocalTime;

		[Token(Token = "0x40003C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private readonly float minTimePrecision;

		[NonSerialized]
		[Token(Token = "0x40003C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		public int localTimeResetIndicator;

		[Token(Token = "0x40003C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public bool isSmoothingAuthorityChanges;

		[Token(Token = "0x40003C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		public TransformSource transformSource;

		[Token(Token = "0x40003C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public WhenToUpdateTransform whenToUpdateTransform;

		[Token(Token = "0x40003CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		public float sendRate;

		[Token(Token = "0x40003CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public int networkChannel;

		[Token(Token = "0x40003CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public GameObject childObjectToSync;

		[NonSerialized]
		[Token(Token = "0x40003CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public bool isSyncingChild;

		[NonSerialized]
		[Token(Token = "0x40003CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public validateStateDelegate validateStateMethod;

		[Token(Token = "0x40003CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private StateMirror latestValidatedState;

		[Token(Token = "0x40003D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public bool setVelocityInsteadOfPositionOnNonOwners;

		[Token(Token = "0x40003D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		public float maxPositionDifferenceForVelocitySyncing;

		[Token(Token = "0x40003D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public bool useLocalTransformOnly;

		[NonSerialized]
		[Token(Token = "0x40003D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public StateMirror[] stateBuffer;

		[NonSerialized]
		[Token(Token = "0x40003D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public int stateCount;

		[NonSerialized]
		[Token(Token = "0x40003D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public Rigidbody rb;

		[NonSerialized]
		[Token(Token = "0x40003D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public bool hasRigidbody;

		[NonSerialized]
		[Token(Token = "0x40003D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public Rigidbody2D rb2D;

		[NonSerialized]
		[Token(Token = "0x40003D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		public bool hasRigidbody2D;

		[Token(Token = "0x40003D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x149")]
		private bool dontEasePosition;

		[Token(Token = "0x40003DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14A")]
		private bool dontEaseScale;

		[Token(Token = "0x40003DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14B")]
		private bool dontEaseRotation;

		[Token(Token = "0x40003DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
		private float firstReceivedMessageZeroTime;

		[NonSerialized]
		[Token(Token = "0x40003DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		public float lastTimeStateWasSent;

		[NonSerialized]
		[Token(Token = "0x40003DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
		public Vector3 lastPositionWhenStateWasSent;

		[NonSerialized]
		[Token(Token = "0x40003DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		public Quaternion lastRotationWhenStateWasSent;

		[NonSerialized]
		[Token(Token = "0x40003E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		public Vector3 lastScaleWhenStateWasSent;

		[NonSerialized]
		[Token(Token = "0x40003E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
		public Vector3 lastVelocityWhenStateWasSent;

		[NonSerialized]
		[Token(Token = "0x40003E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		public Vector3 lastAngularVelocityWhenStateWasSent;

		[NonSerialized]
		[Token(Token = "0x40003E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		public NetworkIdentity netID;

		[NonSerialized]
		[Token(Token = "0x40003E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		public GameObject realObjectToSync;

		[NonSerialized]
		[Token(Token = "0x40003E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		public int syncIndex;

		[NonSerialized]
		[Token(Token = "0x40003E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		public SmoothSyncMirror[] childObjectSmoothSyncs;

		[NonSerialized]
		[Token(Token = "0x40003E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		public bool forceStateSend;

		[NonSerialized]
		[Token(Token = "0x40003E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B9")]
		public bool sendAtPositionalRestMessage;

		[NonSerialized]
		[Token(Token = "0x40003E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1BA")]
		public bool sendAtRotationalRestMessage;

		[NonSerialized]
		[Token(Token = "0x40003EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1BB")]
		public bool sendPosition;

		[NonSerialized]
		[Token(Token = "0x40003EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1BC")]
		public bool sendRotation;

		[NonSerialized]
		[Token(Token = "0x40003EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1BD")]
		public bool sendScale;

		[NonSerialized]
		[Token(Token = "0x40003ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1BE")]
		public bool sendVelocity;

		[NonSerialized]
		[Token(Token = "0x40003EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1BF")]
		public bool sendAngularVelocity;

		[Token(Token = "0x40003EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		private StateMirror targetTempState;

		[Token(Token = "0x40003F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		private NetworkStateMirror sendingTempState;

		[NonSerialized]
		[Token(Token = "0x40003F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		public Vector3 latestReceivedVelocity;

		[NonSerialized]
		[Token(Token = "0x40003F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
		public Vector3 latestReceivedAngularVelocity;

		[Token(Token = "0x40003F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		private float timeSpentExtrapolating;

		[Token(Token = "0x40003F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F4")]
		private bool extrapolatedLastFrame;

		[Token(Token = "0x40003F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		private Vector3 positionLastFrame;

		[Token(Token = "0x40003F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x204")]
		private bool changedPositionLastFrame;

		[Token(Token = "0x40003F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		private Quaternion rotationLastFrame;

		[Token(Token = "0x40003F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		private bool changedRotationLastFrame;

		[Token(Token = "0x40003F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21C")]
		private int atRestThresholdCount;

		[Token(Token = "0x40003FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		private int samePositionCount;

		[Token(Token = "0x40003FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x224")]
		private int sameRotationCount;

		[Token(Token = "0x40003FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		private RestState restStatePosition;

		[Token(Token = "0x40003FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22C")]
		private RestState restStateRotation;

		[Token(Token = "0x40003FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		private bool hadAuthorityLastFrame;

		[Token(Token = "0x40003FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
		private StateMirror latestEndStateUsed;

		[Token(Token = "0x4000400")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
		private Vector3 latestTeleportedFromPosition;

		[Token(Token = "0x4000401")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24C")]
		private Quaternion latestTeleportedFromRotation;

		[Token(Token = "0x4000402")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25C")]
		private bool hasCachedNetID;

		[Token(Token = "0x4000403")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
		private NetworkIdentity cachedNetIdentity;

		[Token(Token = "0x4000404")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
		private bool triedToExtrapolateTooFar;

		[Token(Token = "0x4000405")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x26C")]
		private float _ownerTime;

		[Token(Token = "0x4000406")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
		private float lastTimeOwnerTimeWasSet;

		[Token(Token = "0x4000407")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x274")]
		private float latestAuthorityChangeZeroTime;

		[Token(Token = "0x4000408")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
		private int previousReceivedOwnerInt;

		[Token(Token = "0x4000409")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x27C")]
		public int ownerChangeIndicator;

		[Token(Token = "0x400040A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
		public int receivedStatesCounter;

		[Token(Token = "0x17000074")]
		public float localTime
		{
			[Token(Token = "0x6000378")]
			[Address(RVA = "0x16CBF04", Offset = "0x16CBF04", VA = "0x16CBF04")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000379")]
			[Address(RVA = "0x16CBF0C", Offset = "0x16CBF0C", VA = "0x16CBF0C")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000075")]
		public new NetworkIdentity netIdentity
		{
			[Token(Token = "0x600037B")]
			[Address(RVA = "0x16CBF1C", Offset = "0x16CBF1C", VA = "0x16CBF1C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000076")]
		public bool hasAuthorityOrUnownedOnServer
		{
			[Token(Token = "0x600037C")]
			[Address(RVA = "0x16CBF8C", Offset = "0x16CBF8C", VA = "0x16CBF8C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000077")]
		public bool hasControl
		{
			[Token(Token = "0x600037D")]
			[Address(RVA = "0x16CC05C", Offset = "0x16CC05C", VA = "0x16CC05C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000078")]
		public bool isSyncingXPosition
		{
			[Token(Token = "0x60003AB")]
			[Address(RVA = "0x16CFC98", Offset = "0x16CFC98", VA = "0x16CFC98")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000079")]
		public bool isSyncingYPosition
		{
			[Token(Token = "0x60003AC")]
			[Address(RVA = "0x16CFCC0", Offset = "0x16CFCC0", VA = "0x16CFCC0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700007A")]
		public bool isSyncingZPosition
		{
			[Token(Token = "0x60003AD")]
			[Address(RVA = "0x16CFCEC", Offset = "0x16CFCEC", VA = "0x16CFCEC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700007B")]
		public bool isSyncingXRotation
		{
			[Token(Token = "0x60003AE")]
			[Address(RVA = "0x16CFF40", Offset = "0x16CFF40", VA = "0x16CFF40")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700007C")]
		public bool isSyncingYRotation
		{
			[Token(Token = "0x60003AF")]
			[Address(RVA = "0x16CFF68", Offset = "0x16CFF68", VA = "0x16CFF68")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700007D")]
		public bool isSyncingZRotation
		{
			[Token(Token = "0x60003B0")]
			[Address(RVA = "0x16CFF94", Offset = "0x16CFF94", VA = "0x16CFF94")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700007E")]
		public bool isSyncingXScale
		{
			[Token(Token = "0x60003B1")]
			[Address(RVA = "0x16D026C", Offset = "0x16D026C", VA = "0x16D026C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700007F")]
		public bool isSyncingYScale
		{
			[Token(Token = "0x60003B2")]
			[Address(RVA = "0x16D0294", Offset = "0x16D0294", VA = "0x16D0294")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000080")]
		public bool isSyncingZScale
		{
			[Token(Token = "0x60003B3")]
			[Address(RVA = "0x16D02C0", Offset = "0x16D02C0", VA = "0x16D02C0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000081")]
		public bool isSyncingXVelocity
		{
			[Token(Token = "0x60003B4")]
			[Address(RVA = "0x16D1444", Offset = "0x16D1444", VA = "0x16D1444")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000082")]
		public bool isSyncingYVelocity
		{
			[Token(Token = "0x60003B5")]
			[Address(RVA = "0x16D146C", Offset = "0x16D146C", VA = "0x16D146C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000083")]
		public bool isSyncingZVelocity
		{
			[Token(Token = "0x60003B6")]
			[Address(RVA = "0x16D1498", Offset = "0x16D1498", VA = "0x16D1498")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000084")]
		public bool isSyncingXAngularVelocity
		{
			[Token(Token = "0x60003B7")]
			[Address(RVA = "0x16D14C8", Offset = "0x16D14C8", VA = "0x16D14C8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000085")]
		public bool isSyncingYAngularVelocity
		{
			[Token(Token = "0x60003B8")]
			[Address(RVA = "0x16D14F0", Offset = "0x16D14F0", VA = "0x16D14F0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000086")]
		public bool isSyncingZAngularVelocity
		{
			[Token(Token = "0x60003B9")]
			[Address(RVA = "0x16D151C", Offset = "0x16D151C", VA = "0x16D151C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000087")]
		public float approximateNetworkTimeOnOwner
		{
			[Token(Token = "0x60003BE")]
			[Address(RVA = "0x16CE2BC", Offset = "0x16CE2BC", VA = "0x16CE2BC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60003BF")]
			[Address(RVA = "0x16CE2D4", Offset = "0x16CE2D4", VA = "0x16CE2D4")]
			set
			{
			}
		}

		[Token(Token = "0x600037A")]
		[Address(RVA = "0x16CBF14", Offset = "0x16CBF14", VA = "0x16CBF14")]
		public static bool validateState(StateMirror latestReceivedState, StateMirror latestValidatedState)
		{
			return default(bool);
		}

		[Token(Token = "0x600037E")]
		[Address(RVA = "0x16CC118", Offset = "0x16CC118", VA = "0x16CC118")]
		public void Awake()
		{
		}

		[Token(Token = "0x600037F")]
		[Address(RVA = "0x16CC774", Offset = "0x16CC774", VA = "0x16CC774")]
		public void OnDestroy()
		{
		}

		[Token(Token = "0x6000380")]
		[Address(RVA = "0x16CC2A8", Offset = "0x16CC2A8", VA = "0x16CC2A8")]
		public void SetObjectToSync(GameObject childObjectToSync)
		{
		}

		[Token(Token = "0x6000381")]
		[Address(RVA = "0x16CC818", Offset = "0x16CC818", VA = "0x16CC818")]
		private void Update()
		{
		}

		[Token(Token = "0x6000382")]
		[Address(RVA = "0x16CC9D4", Offset = "0x16CC9D4", VA = "0x16CC9D4")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000383")]
		[Address(RVA = "0x16CC84C", Offset = "0x16CC84C", VA = "0x16CC84C")]
		private void SmoothSyncUpdate()
		{
		}

		[Token(Token = "0x6000384")]
		[Address(RVA = "0x16CDF18", Offset = "0x16CDF18", VA = "0x16CDF18")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x6000385")]
		[Address(RVA = "0x16CE164", Offset = "0x16CE164", VA = "0x16CE164")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x6000386")]
		[Address(RVA = "0x16CE208", Offset = "0x16CE208", VA = "0x16CE208")]
		public void OnSceneLoaded(UnityEngine.SceneManagement.Scene scene, LoadSceneMode mode)
		{
		}

		[Token(Token = "0x6000387")]
		[Address(RVA = "0x16CE218", Offset = "0x16CE218", VA = "0x16CE218", Slot = "14")]
		public override void OnStartAuthority()
		{
		}

		[Token(Token = "0x6000388")]
		[Address(RVA = "0x16CD2A8", Offset = "0x16CD2A8", VA = "0x16CD2A8")]
		public void ResetLocalTime()
		{
		}

		[Token(Token = "0x6000389")]
		[Address(RVA = "0x16CE234", Offset = "0x16CE234", VA = "0x16CE234")]
		public void OnRemoteTimeReset()
		{
		}

		[Token(Token = "0x600038A")]
		[Address(RVA = "0x16CCA34", Offset = "0x16CCA34", VA = "0x16CCA34")]
		private void sendState()
		{
		}

		[Token(Token = "0x600038B")]
		[Address(RVA = "0x16CC8B8", Offset = "0x16CC8B8", VA = "0x16CC8B8")]
		private void authorityChangeUpdate()
		{
		}

		[Token(Token = "0x600038C")]
		[Address(RVA = "0x16CD448", Offset = "0x16CD448", VA = "0x16CD448")]
		private void applyInterpolationOrExtrapolation()
		{
		}

		[Token(Token = "0x600038D")]
		[Address(RVA = "0x16CEE64", Offset = "0x16CEE64", VA = "0x16CEE64")]
		private void interpolate(float interpolationTime)
		{
		}

		[Token(Token = "0x600038E")]
		[Address(RVA = "0x16CF338", Offset = "0x16CF338", VA = "0x16CF338")]
		private bool extrapolate(float interpolationTime)
		{
			return default(bool);
		}

		[Token(Token = "0x600038F")]
		[Address(RVA = "0x16D0340", Offset = "0x16D0340", VA = "0x16D0340")]
		private void shouldTeleport(StateMirror start, ref StateMirror end, float interpolationTime, ref float t)
		{
		}

		[Token(Token = "0x6000390")]
		[Address(RVA = "0x16CD1EC", Offset = "0x16CD1EC", VA = "0x16CD1EC")]
		public Vector3 getPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000391")]
		[Address(RVA = "0x16CD244", Offset = "0x16CD244", VA = "0x16CD244")]
		public Quaternion getRotation()
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000392")]
		[Address(RVA = "0x16CFC70", Offset = "0x16CFC70", VA = "0x16CFC70")]
		public Vector3 getScale()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000393")]
		[Address(RVA = "0x16CFD1C", Offset = "0x16CFD1C", VA = "0x16CFD1C")]
		public void setPosition(Vector3 position, bool isTeleporting)
		{
		}

		[Token(Token = "0x6000394")]
		[Address(RVA = "0x16CFFC4", Offset = "0x16CFFC4", VA = "0x16CFFC4")]
		public void setRotation(Quaternion rotation, bool isTeleporting)
		{
		}

		[Token(Token = "0x6000395")]
		[Address(RVA = "0x16D02F0", Offset = "0x16D02F0", VA = "0x16D02F0")]
		public void setScale(Vector3 scale)
		{
		}

		[Token(Token = "0x6000396")]
		[Address(RVA = "0x16CD29C", Offset = "0x16CD29C", VA = "0x16CD29C")]
		private void resetFlags()
		{
		}

		[Token(Token = "0x6000397")]
		[Address(RVA = "0x16D061C", Offset = "0x16D061C", VA = "0x16D061C")]
		public void addState(StateMirror state)
		{
		}

		[Token(Token = "0x6000398")]
		[Address(RVA = "0x16D0604", Offset = "0x16D0604", VA = "0x16D0604")]
		public void stopEasing()
		{
		}

		[Token(Token = "0x6000399")]
		[Address(RVA = "0x16CED38", Offset = "0x16CED38", VA = "0x16CED38")]
		public void clearBuffer()
		{
		}

		[Token(Token = "0x600039A")]
		[Address(RVA = "0x16D0790", Offset = "0x16D0790", VA = "0x16D0790")]
		public void teleport()
		{
		}

		[Token(Token = "0x600039B")]
		[Address(RVA = "0x16CBAE4", Offset = "0x16CBAE4", VA = "0x16CBAE4")]
		public void teleportOwnedObjectFromOwner()
		{
		}

		[Token(Token = "0x600039C")]
		[Address(RVA = "0x16CA5A8", Offset = "0x16CA5A8", VA = "0x16CA5A8")]
		public void teleportAnyObjectFromServer(Vector3 newPosition, Quaternion newRotation, Vector3 newScale)
		{
		}

		[Token(Token = "0x600039D")]
		[Address(RVA = "0x16D0C9C", Offset = "0x16D0C9C", VA = "0x16D0C9C")]
		[ClientRpc]
		public void RpcNonServerOwnedTeleportFromServer(Vector3 newPosition, Vector3 newRotation, Vector3 newScale)
		{
		}

		[Token(Token = "0x600039E")]
		[Address(RVA = "0x16D0A18", Offset = "0x16D0A18", VA = "0x16D0A18")]
		[Command]
		public void CmdTeleport(Vector3 position, Vector3 rotation, Vector3 scale, float tempOwnerTime)
		{
		}

		[Token(Token = "0x600039F")]
		[Address(RVA = "0x16D0794", Offset = "0x16D0794", VA = "0x16D0794")]
		[ClientRpc]
		public void RpcTeleport(Vector3 position, Vector3 rotation, Vector3 scale, float tempOwnerTime)
		{
		}

		[Token(Token = "0x60003A0")]
		[Address(RVA = "0x16D0F08", Offset = "0x16D0F08", VA = "0x16D0F08")]
		private void addTeleportState(StateMirror teleportState)
		{
		}

		[Token(Token = "0x60003A1")]
		[Address(RVA = "0x16CBDB4", Offset = "0x16CBDB4", VA = "0x16CBDB4")]
		public void forceStateSendNextFixedUpdate()
		{
		}

		[Token(Token = "0x60003A2")]
		[Address(RVA = "0x16D118C", Offset = "0x16D118C", VA = "0x16D118C")]
		public void AssignAuthorityCallback(NetworkConnection conn, NetworkIdentity theNetID, bool authorityState)
		{
		}

		[Token(Token = "0x60003A3")]
		[Address(RVA = "0x16D1388", Offset = "0x16D1388", VA = "0x16D1388", Slot = "8")]
		public override void OnStartServer()
		{
		}

		[Token(Token = "0x60003A4")]
		[Address(RVA = "0x16D1440", Offset = "0x16D1440", VA = "0x16D1440", Slot = "10")]
		public override void OnStartClient()
		{
		}

		[Token(Token = "0x60003A5")]
		[Address(RVA = "0x16CE03C", Offset = "0x16CE03C", VA = "0x16CE03C")]
		public void registerClientHandlers()
		{
		}

		[Token(Token = "0x60003A6")]
		[Address(RVA = "0x16CE300", Offset = "0x16CE300", VA = "0x16CE300")]
		public bool shouldSendPosition()
		{
			return default(bool);
		}

		[Token(Token = "0x60003A7")]
		[Address(RVA = "0x16CE420", Offset = "0x16CE420", VA = "0x16CE420")]
		public bool shouldSendRotation()
		{
			return default(bool);
		}

		[Token(Token = "0x60003A8")]
		[Address(RVA = "0x16CE518", Offset = "0x16CE518", VA = "0x16CE518")]
		public bool shouldSendScale()
		{
			return default(bool);
		}

		[Token(Token = "0x60003A9")]
		[Address(RVA = "0x16CE638", Offset = "0x16CE638", VA = "0x16CE638")]
		public bool shouldSendVelocity()
		{
			return default(bool);
		}

		[Token(Token = "0x60003AA")]
		[Address(RVA = "0x16CE854", Offset = "0x16CE854", VA = "0x16CE854")]
		public bool shouldSendAngularVelocity()
		{
			return default(bool);
		}

		[Token(Token = "0x60003BA")]
		[Address(RVA = "0x16CEA34", Offset = "0x16CEA34", VA = "0x16CEA34")]
		[Server]
		private void SendStateToNonOwners(NetworkStateMirror state)
		{
		}

		[Token(Token = "0x60003BB")]
		[Address(RVA = "0x16D154C", Offset = "0x16D154C", VA = "0x16D154C")]
		private static void HandleSync(NetworkConnection conn, NetworkStateMirror networkState)
		{
		}

		[Token(Token = "0x60003BC")]
		[Address(RVA = "0x16D16E0", Offset = "0x16D16E0", VA = "0x16D16E0")]
		public void checkIfOwnerHasChanged(StateMirror newState)
		{
		}

		[Token(Token = "0x60003BD")]
		[Address(RVA = "0x16CE2E4", Offset = "0x16CE2E4", VA = "0x16CE2E4")]
		public float GetNetworkSendInterval()
		{
			return default(float);
		}

		[Token(Token = "0x60003C0")]
		[Address(RVA = "0x16CD344", Offset = "0x16CD344", VA = "0x16CD344")]
		private void adjustOwnerTime()
		{
		}

		[Token(Token = "0x60003C1")]
		[Address(RVA = "0x16D17FC", Offset = "0x16D17FC", VA = "0x16D17FC")]
		public SmoothSyncMirror()
		{
		}

		[Token(Token = "0x60003C2")]
		[Address(RVA = "0x16D196C", Offset = "0x16D196C", VA = "0x16D196C")]
		private void MirrorProcessed()
		{
		}

		[Token(Token = "0x60003C3")]
		[Address(RVA = "0x16D1970", Offset = "0x16D1970", VA = "0x16D1970")]
		protected void UserCode_RpcNonServerOwnedTeleportFromServer__Vector3__Vector3__Vector3(Vector3 newPosition, Vector3 newRotation, Vector3 newScale)
		{
		}

		[Token(Token = "0x60003C4")]
		[Address(RVA = "0x16D1A48", Offset = "0x16D1A48", VA = "0x16D1A48")]
		protected static void InvokeUserCode_RpcNonServerOwnedTeleportFromServer__Vector3__Vector3__Vector3(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x60003C5")]
		[Address(RVA = "0x16D1C08", Offset = "0x16D1C08", VA = "0x16D1C08")]
		protected void UserCode_CmdTeleport__Vector3__Vector3__Vector3__Single(Vector3 position, Vector3 rotation, Vector3 scale, float tempOwnerTime)
		{
		}

		[Token(Token = "0x60003C6")]
		[Address(RVA = "0x16D1E88", Offset = "0x16D1E88", VA = "0x16D1E88")]
		protected static void InvokeUserCode_CmdTeleport__Vector3__Vector3__Vector3__Single(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x60003C7")]
		[Address(RVA = "0x16D20A4", Offset = "0x16D20A4", VA = "0x16D20A4")]
		protected void UserCode_RpcTeleport__Vector3__Vector3__Vector3__Single(Vector3 position, Vector3 rotation, Vector3 scale, float tempOwnerTime)
		{
		}

		[Token(Token = "0x60003C8")]
		[Address(RVA = "0x16D221C", Offset = "0x16D221C", VA = "0x16D221C")]
		protected static void InvokeUserCode_RpcTeleport__Vector3__Vector3__Vector3__Single(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x60003C9")]
		[Address(RVA = "0x16D23E4", Offset = "0x16D23E4", VA = "0x16D23E4")]
		static SmoothSyncMirror()
		{
		}
	}
	[Token(Token = "0x20000C8")]
	public class StateMirror
	{
		[Token(Token = "0x4000419")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float ownerTimestamp;

		[Token(Token = "0x400041A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Vector3 position;

		[Token(Token = "0x400041B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Quaternion rotation;

		[Token(Token = "0x400041C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 scale;

		[Token(Token = "0x400041D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Vector3 velocity;

		[Token(Token = "0x400041E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Vector3 angularVelocity;

		[Token(Token = "0x400041F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public bool teleport;

		[Token(Token = "0x4000420")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
		public bool atPositionalRest;

		[Token(Token = "0x4000421")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x56")]
		public bool atRotationalRest;

		[Token(Token = "0x4000422")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float receivedOnServerTimestamp;

		[Token(Token = "0x4000423")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float receivedTimestamp;

		[Token(Token = "0x4000424")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public int localTimeResetIndicator;

		[Token(Token = "0x4000425")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public Vector3 reusableRotationVector;

		[Token(Token = "0x4000426")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public bool serverShouldRelayPosition;

		[Token(Token = "0x4000427")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		public bool serverShouldRelayRotation;

		[Token(Token = "0x4000428")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x72")]
		public bool serverShouldRelayScale;

		[Token(Token = "0x4000429")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x73")]
		public bool serverShouldRelayVelocity;

		[Token(Token = "0x400042A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public bool serverShouldRelayAngularVelocity;

		[Token(Token = "0x60003CE")]
		[Address(RVA = "0x16CC76C", Offset = "0x16CC76C", VA = "0x16CC76C")]
		public StateMirror()
		{
		}

		[Token(Token = "0x60003CF")]
		[Address(RVA = "0x16CF2CC", Offset = "0x16CF2CC", VA = "0x16CF2CC")]
		public StateMirror copyFromState(StateMirror state)
		{
			return null;
		}

		[Token(Token = "0x60003D0")]
		[Address(RVA = "0x16D04A8", Offset = "0x16D04A8", VA = "0x16D04A8")]
		public static StateMirror Lerp(StateMirror targetTempStateMirror, StateMirror start, StateMirror end, float t)
		{
			return null;
		}

		[Token(Token = "0x60003D1")]
		[Address(RVA = "0x16CED4C", Offset = "0x16CED4C", VA = "0x16CED4C")]
		public void resetTheVariables()
		{
		}

		[Token(Token = "0x60003D2")]
		[Address(RVA = "0x16D1D44", Offset = "0x16D1D44", VA = "0x16D1D44")]
		public void copyFromSmoothSync(SmoothSyncMirror smoothSyncScript)
		{
		}
	}
	[Token(Token = "0x20000C9")]
	public struct NetworkStateMirror : NetworkMessage
	{
		[Token(Token = "0x400042B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public SmoothSyncMirror smoothSync;

		[Token(Token = "0x400042C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public StateMirror state;

		[Token(Token = "0x60003D3")]
		[Address(RVA = "0x16CEA00", Offset = "0x16CEA00", VA = "0x16CEA00")]
		public void copyFromSmoothSync(SmoothSyncMirror smoothSyncScript)
		{
		}
	}
	[Token(Token = "0x20000CA")]
	public static class SyncProjectilesMessageFunctions
	{
		[Token(Token = "0x400042D")]
		private const byte positionMask = 1;

		[Token(Token = "0x400042E")]
		private const byte rotationMask = 2;

		[Token(Token = "0x400042F")]
		private const byte scaleMask = 4;

		[Token(Token = "0x4000430")]
		private const byte velocityMask = 8;

		[Token(Token = "0x4000431")]
		private const byte angularVelocityMask = 16;

		[Token(Token = "0x4000432")]
		private const byte atPositionalRestMask = 64;

		[Token(Token = "0x4000433")]
		private const byte atRotationalRestMask = 128;

		[Token(Token = "0x60003D4")]
		[Address(RVA = "0x16D2648", Offset = "0x16D2648", VA = "0x16D2648")]
		public static void Serialize(this NetworkWriter writer, NetworkStateMirror msg)
		{
		}

		[Token(Token = "0x60003D5")]
		[Address(RVA = "0x16D3504", Offset = "0x16D3504", VA = "0x16D3504")]
		public static NetworkStateMirror Deserialize(this NetworkReader reader)
		{
			return default(NetworkStateMirror);
		}

		[Token(Token = "0x60003D6")]
		[Address(RVA = "0x16D33F8", Offset = "0x16D33F8", VA = "0x16D33F8")]
		private static byte encodeSyncInformation(bool sendPosition, bool sendRotation, bool sendScale, bool sendVelocity, bool sendAngularVelocity, bool atPositionalRest, bool atRotationalRest)
		{
			return default(byte);
		}

		[Token(Token = "0x60003D7")]
		[Address(RVA = "0x16D44EC", Offset = "0x16D44EC", VA = "0x16D44EC")]
		private static bool shouldSyncPosition(byte syncInformation)
		{
			return default(bool);
		}

		[Token(Token = "0x60003D8")]
		[Address(RVA = "0x16D44F4", Offset = "0x16D44F4", VA = "0x16D44F4")]
		private static bool shouldSyncRotation(byte syncInformation)
		{
			return default(bool);
		}

		[Token(Token = "0x60003D9")]
		[Address(RVA = "0x16D44FC", Offset = "0x16D44FC", VA = "0x16D44FC")]
		private static bool shouldSyncScale(byte syncInformation)
		{
			return default(bool);
		}

		[Token(Token = "0x60003DA")]
		[Address(RVA = "0x16D4504", Offset = "0x16D4504", VA = "0x16D4504")]
		private static bool shouldSyncVelocity(byte syncInformation)
		{
			return default(bool);
		}

		[Token(Token = "0x60003DB")]
		[Address(RVA = "0x16D450C", Offset = "0x16D450C", VA = "0x16D450C")]
		private static bool shouldSyncAngularVelocity(byte syncInformation)
		{
			return default(bool);
		}

		[Token(Token = "0x60003DC")]
		[Address(RVA = "0x16D4514", Offset = "0x16D4514", VA = "0x16D4514")]
		private static bool shouldBeAtPositionalRest(byte syncInformation)
		{
			return default(bool);
		}

		[Token(Token = "0x60003DD")]
		[Address(RVA = "0x16D451C", Offset = "0x16D451C", VA = "0x16D451C")]
		private static bool shouldBeAtRotationalRest(byte syncInformation)
		{
			return default(bool);
		}
	}
}
namespace System
{
	[Serializable]
	[Token(Token = "0x20000CB")]
	public struct Half : IComparable, IFormattable, IConvertible, IComparable<Half>, IEquatable<Half>
	{
		[Token(Token = "0x4000434")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[DebuggerBrowsable(DebuggerBrowsableState.Never)]
		public ushort internalValue;

		[Token(Token = "0x4000435")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Half Epsilon;

		[Token(Token = "0x4000436")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
		public static readonly Half MaxValue;

		[Token(Token = "0x4000437")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static readonly Half MinValue;

		[Token(Token = "0x4000438")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6")]
		public static readonly Half NaN;

		[Token(Token = "0x4000439")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly Half NegativeInfinity;

		[Token(Token = "0x400043A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA")]
		public static readonly Half PositiveInfinity;

		[Token(Token = "0x60003DE")]
		[Address(RVA = "0x16D45F0", Offset = "0x16D45F0", VA = "0x16D45F0")]
		public Half(float value)
		{
		}

		[Token(Token = "0x60003DF")]
		[Address(RVA = "0x16D473C", Offset = "0x16D473C", VA = "0x16D473C")]
		public Half(int value)
		{
		}

		[Token(Token = "0x60003E0")]
		[Address(RVA = "0x16D4744", Offset = "0x16D4744", VA = "0x16D4744")]
		public Half(long value)
		{
		}

		[Token(Token = "0x60003E1")]
		[Address(RVA = "0x16D474C", Offset = "0x16D474C", VA = "0x16D474C")]
		public Half(double value)
		{
		}

		[Token(Token = "0x60003E2")]
		[Address(RVA = "0x16D4754", Offset = "0x16D4754", VA = "0x16D4754")]
		public Half(decimal value)
		{
		}

		[Token(Token = "0x60003E3")]
		[Address(RVA = "0x16D47C8", Offset = "0x16D47C8", VA = "0x16D47C8")]
		public Half(uint value)
		{
		}

		[Token(Token = "0x60003E4")]
		[Address(RVA = "0x16D47D4", Offset = "0x16D47D4", VA = "0x16D47D4")]
		public Half(ulong value)
		{
		}

		[Token(Token = "0x60003E5")]
		[Address(RVA = "0x16D47E0", Offset = "0x16D47E0", VA = "0x16D47E0")]
		public static Half Negate(Half half)
		{
			return default(Half);
		}

		[Token(Token = "0x60003E6")]
		[Address(RVA = "0x16D4898", Offset = "0x16D4898", VA = "0x16D4898")]
		public static Half Add(Half half1, Half half2)
		{
			return default(Half);
		}

		[Token(Token = "0x60003E7")]
		[Address(RVA = "0x16D4998", Offset = "0x16D4998", VA = "0x16D4998")]
		public static Half Subtract(Half half1, Half half2)
		{
			return default(Half);
		}

		[Token(Token = "0x60003E8")]
		[Address(RVA = "0x16D4A98", Offset = "0x16D4A98", VA = "0x16D4A98")]
		public static Half Multiply(Half half1, Half half2)
		{
			return default(Half);
		}

		[Token(Token = "0x60003E9")]
		[Address(RVA = "0x16D4B98", Offset = "0x16D4B98", VA = "0x16D4B98")]
		public static Half Divide(Half half1, Half half2)
		{
			return default(Half);
		}

		[Token(Token = "0x60003EA")]
		[Address(RVA = "0x16D4C98", Offset = "0x16D4C98", VA = "0x16D4C98")]
		public static Half operator +(Half half)
		{
			return default(Half);
		}

		[Token(Token = "0x60003EB")]
		[Address(RVA = "0x16D483C", Offset = "0x16D483C", VA = "0x16D483C")]
		public static Half operator -(Half half)
		{
			return default(Half);
		}

		[Token(Token = "0x60003EC")]
		[Address(RVA = "0x16D4CF8", Offset = "0x16D4CF8", VA = "0x16D4CF8")]
		public static Half operator ++(Half half)
		{
			return default(Half);
		}

		[Token(Token = "0x60003ED")]
		[Address(RVA = "0x16D4DE0", Offset = "0x16D4DE0", VA = "0x16D4DE0")]
		public static Half operator --(Half half)
		{
			return default(Half);
		}

		[Token(Token = "0x60003EE")]
		[Address(RVA = "0x16D4904", Offset = "0x16D4904", VA = "0x16D4904")]
		public static Half operator +(Half half1, Half half2)
		{
			return default(Half);
		}

		[Token(Token = "0x60003EF")]
		[Address(RVA = "0x16D4A04", Offset = "0x16D4A04", VA = "0x16D4A04")]
		public static Half operator -(Half half1, Half half2)
		{
			return default(Half);
		}

		[Token(Token = "0x60003F0")]
		[Address(RVA = "0x16D4B04", Offset = "0x16D4B04", VA = "0x16D4B04")]
		public static Half operator *(Half half1, Half half2)
		{
			return default(Half);
		}

		[Token(Token = "0x60003F1")]
		[Address(RVA = "0x16D4C04", Offset = "0x16D4C04", VA = "0x16D4C04")]
		public static Half operator /(Half half1, Half half2)
		{
			return default(Half);
		}

		[Token(Token = "0x60003F2")]
		[Address(RVA = "0x16D4E58", Offset = "0x16D4E58", VA = "0x16D4E58")]
		public static bool operator ==(Half half1, Half half2)
		{
			return default(bool);
		}

		[Token(Token = "0x60003F3")]
		[Address(RVA = "0x16D4F34", Offset = "0x16D4F34", VA = "0x16D4F34")]
		public static bool operator !=(Half half1, Half half2)
		{
			return default(bool);
		}

		[Token(Token = "0x60003F4")]
		[Address(RVA = "0x16D4F44", Offset = "0x16D4F44", VA = "0x16D4F44")]
		public static bool operator <(Half half1, Half half2)
		{
			return default(bool);
		}

		[Token(Token = "0x60003F5")]
		[Address(RVA = "0x16D4FC4", Offset = "0x16D4FC4", VA = "0x16D4FC4")]
		public static bool operator >(Half half1, Half half2)
		{
			return default(bool);
		}

		[Token(Token = "0x60003F6")]
		[Address(RVA = "0x16D5044", Offset = "0x16D5044", VA = "0x16D5044")]
		public static bool operator <=(Half half1, Half half2)
		{
			return default(bool);
		}

		[Token(Token = "0x60003F7")]
		[Address(RVA = "0x16D50E4", Offset = "0x16D50E4", VA = "0x16D50E4")]
		public static bool operator >=(Half half1, Half half2)
		{
			return default(bool);
		}

		[Token(Token = "0x60003F8")]
		[Address(RVA = "0x16D5184", Offset = "0x16D5184", VA = "0x16D5184")]
		public static implicit operator Half(byte value)
		{
			return default(Half);
		}

		[Token(Token = "0x60003F9")]
		[Address(RVA = "0x16D51A8", Offset = "0x16D51A8", VA = "0x16D51A8")]
		public static implicit operator Half(short value)
		{
			return default(Half);
		}

		[Token(Token = "0x60003FA")]
		[Address(RVA = "0x16D51CC", Offset = "0x16D51CC", VA = "0x16D51CC")]
		public static implicit operator Half(char value)
		{
			return default(Half);
		}

		[Token(Token = "0x60003FB")]
		[Address(RVA = "0x16D51F0", Offset = "0x16D51F0", VA = "0x16D51F0")]
		public static implicit operator Half(int value)
		{
			return default(Half);
		}

		[Token(Token = "0x60003FC")]
		[Address(RVA = "0x16D5210", Offset = "0x16D5210", VA = "0x16D5210")]
		public static implicit operator Half(long value)
		{
			return default(Half);
		}

		[Token(Token = "0x60003FD")]
		[Address(RVA = "0x16D4DC4", Offset = "0x16D4DC4", VA = "0x16D4DC4")]
		public static explicit operator Half(float value)
		{
			return default(Half);
		}

		[Token(Token = "0x60003FE")]
		[Address(RVA = "0x16D5230", Offset = "0x16D5230", VA = "0x16D5230")]
		public static explicit operator Half(double value)
		{
			return default(Half);
		}

		[Token(Token = "0x60003FF")]
		[Address(RVA = "0x16D5250", Offset = "0x16D5250", VA = "0x16D5250")]
		public static explicit operator Half(decimal value)
		{
			return default(Half);
		}

		[Token(Token = "0x6000400")]
		[Address(RVA = "0x16D52CC", Offset = "0x16D52CC", VA = "0x16D52CC")]
		public static explicit operator byte(Half value)
		{
			return default(byte);
		}

		[Token(Token = "0x6000401")]
		[Address(RVA = "0x16D5330", Offset = "0x16D5330", VA = "0x16D5330")]
		public static explicit operator char(Half value)
		{
			return default(char);
		}

		[Token(Token = "0x6000402")]
		[Address(RVA = "0x16D5394", Offset = "0x16D5394", VA = "0x16D5394")]
		public static explicit operator short(Half value)
		{
			return default(short);
		}

		[Token(Token = "0x6000403")]
		[Address(RVA = "0x16D5400", Offset = "0x16D5400", VA = "0x16D5400")]
		public static explicit operator int(Half value)
		{
			return default(int);
		}

		[Token(Token = "0x6000404")]
		[Address(RVA = "0x16D5470", Offset = "0x16D5470", VA = "0x16D5470")]
		public static explicit operator long(Half value)
		{
			return default(long);
		}

		[Token(Token = "0x6000405")]
		[Address(RVA = "0x16D4D70", Offset = "0x16D4D70", VA = "0x16D4D70")]
		public static implicit operator float(Half value)
		{
			return default(float);
		}

		[Token(Token = "0x6000406")]
		[Address(RVA = "0x16D55A4", Offset = "0x16D55A4", VA = "0x16D55A4")]
		public static implicit operator double(Half value)
		{
			return default(double);
		}

		[Token(Token = "0x6000407")]
		[Address(RVA = "0x16D5600", Offset = "0x16D5600", VA = "0x16D5600")]
		public static explicit operator decimal(Half value)
		{
			return default(decimal);
		}

		[Token(Token = "0x6000408")]
		[Address(RVA = "0x16D5690", Offset = "0x16D5690", VA = "0x16D5690")]
		public static implicit operator Half(sbyte value)
		{
			return default(Half);
		}

		[Token(Token = "0x6000409")]
		[Address(RVA = "0x16D56B4", Offset = "0x16D56B4", VA = "0x16D56B4")]
		public static implicit operator Half(ushort value)
		{
			return default(Half);
		}

		[Token(Token = "0x600040A")]
		[Address(RVA = "0x16D56D8", Offset = "0x16D56D8", VA = "0x16D56D8")]
		public static implicit operator Half(uint value)
		{
			return default(Half);
		}

		[Token(Token = "0x600040B")]
		[Address(RVA = "0x16D56FC", Offset = "0x16D56FC", VA = "0x16D56FC")]
		public static implicit operator Half(ulong value)
		{
			return default(Half);
		}

		[Token(Token = "0x600040C")]
		[Address(RVA = "0x16D5720", Offset = "0x16D5720", VA = "0x16D5720")]
		public static explicit operator sbyte(Half value)
		{
			return default(sbyte);
		}

		[Token(Token = "0x600040D")]
		[Address(RVA = "0x16D578C", Offset = "0x16D578C", VA = "0x16D578C")]
		public static explicit operator ushort(Half value)
		{
			return default(ushort);
		}

		[Token(Token = "0x600040E")]
		[Address(RVA = "0x16D57F0", Offset = "0x16D57F0", VA = "0x16D57F0")]
		public static explicit operator uint(Half value)
		{
			return default(uint);
		}

		[Token(Token = "0x600040F")]
		[Address(RVA = "0x16D5858", Offset = "0x16D5858", VA = "0x16D5858")]
		public static explicit operator ulong(Half value)
		{
			return default(ulong);
		}

		[Token(Token = "0x6000410")]
		[Address(RVA = "0x16D58C0", Offset = "0x16D58C0", VA = "0x16D58C0", Slot = "23")]
		public int CompareTo(Half other)
		{
			return default(int);
		}

		[Token(Token = "0x6000411")]
		[Address(RVA = "0x16D59CC", Offset = "0x16D59CC", VA = "0x16D59CC", Slot = "4")]
		public int CompareTo(object obj)
		{
			return default(int);
		}

		[Token(Token = "0x6000412")]
		[Address(RVA = "0x16D5A90", Offset = "0x16D5A90", VA = "0x16D5A90", Slot = "24")]
		public bool Equals(Half other)
		{
			return default(bool);
		}

		[Token(Token = "0x6000413")]
		[Address(RVA = "0x16D5B54", Offset = "0x16D5B54", VA = "0x16D5B54", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000414")]
		[Address(RVA = "0x16D5C34", Offset = "0x16D5C34", VA = "0x16D5C34", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6000415")]
		[Address(RVA = "0x16D5C3C", Offset = "0x16D5C3C", VA = "0x16D5C3C")]
		public TypeCode GetTypeCode()
		{
			return default(TypeCode);
		}

		[Token(Token = "0x6000416")]
		[Address(RVA = "0x16D5C44", Offset = "0x16D5C44", VA = "0x16D5C44")]
		public static byte[] GetBytes(Half value)
		{
			return null;
		}

		[Token(Token = "0x6000417")]
		[Address(RVA = "0x16D5C9C", Offset = "0x16D5C9C", VA = "0x16D5C9C")]
		public static ushort GetBits(Half value)
		{
			return default(ushort);
		}

		[Token(Token = "0x6000418")]
		[Address(RVA = "0x16D5CA0", Offset = "0x16D5CA0", VA = "0x16D5CA0")]
		public static Half ToHalf(byte[] value, int startIndex)
		{
			return default(Half);
		}

		[Token(Token = "0x6000419")]
		[Address(RVA = "0x16D5D3C", Offset = "0x16D5D3C", VA = "0x16D5D3C")]
		public static Half ToHalf(ushort bits)
		{
			return default(Half);
		}

		[Token(Token = "0x600041A")]
		[Address(RVA = "0x16D5D44", Offset = "0x16D5D44", VA = "0x16D5D44")]
		public static int Sign(Half value)
		{
			return default(int);
		}

		[Token(Token = "0x600041B")]
		[Address(RVA = "0x16D5E7C", Offset = "0x16D5E7C", VA = "0x16D5E7C")]
		public static Half Abs(Half value)
		{
			return default(Half);
		}

		[Token(Token = "0x600041C")]
		[Address(RVA = "0x16D5F2C", Offset = "0x16D5F2C", VA = "0x16D5F2C")]
		public static Half Max(Half value1, Half value2)
		{
			return default(Half);
		}

		[Token(Token = "0x600041D")]
		[Address(RVA = "0x16D5FA0", Offset = "0x16D5FA0", VA = "0x16D5FA0")]
		public static Half Min(Half value1, Half value2)
		{
			return default(Half);
		}

		[Token(Token = "0x600041E")]
		[Address(RVA = "0x16D4ED4", Offset = "0x16D4ED4", VA = "0x16D4ED4")]
		public static bool IsNaN(Half half)
		{
			return default(bool);
		}

		[Token(Token = "0x600041F")]
		[Address(RVA = "0x16D6028", Offset = "0x16D6028", VA = "0x16D6028")]
		public static bool IsInfinity(Half half)
		{
			return default(bool);
		}

		[Token(Token = "0x6000420")]
		[Address(RVA = "0x16D609C", Offset = "0x16D609C", VA = "0x16D609C")]
		public static bool IsNegativeInfinity(Half half)
		{
			return default(bool);
		}

		[Token(Token = "0x6000421")]
		[Address(RVA = "0x16D6108", Offset = "0x16D6108", VA = "0x16D6108")]
		public static bool IsPositiveInfinity(Half half)
		{
			return default(bool);
		}

		[Token(Token = "0x6000422")]
		[Address(RVA = "0x16D6174", Offset = "0x16D6174", VA = "0x16D6174")]
		public static Half Parse(string value)
		{
			return default(Half);
		}

		[Token(Token = "0x6000423")]
		[Address(RVA = "0x16D6220", Offset = "0x16D6220", VA = "0x16D6220")]
		public static Half Parse(string value, IFormatProvider provider)
		{
			return default(Half);
		}

		[Token(Token = "0x6000424")]
		[Address(RVA = "0x16D62B4", Offset = "0x16D62B4", VA = "0x16D62B4")]
		public static Half Parse(string value, NumberStyles style)
		{
			return default(Half);
		}

		[Token(Token = "0x6000425")]
		[Address(RVA = "0x16D6378", Offset = "0x16D6378", VA = "0x16D6378")]
		public static Half Parse(string value, NumberStyles style, IFormatProvider provider)
		{
			return default(Half);
		}

		[Token(Token = "0x6000426")]
		[Address(RVA = "0x16D640C", Offset = "0x16D640C", VA = "0x16D640C")]
		public static bool TryParse(string value, out Half result)
		{
			return default(bool);
		}

		[Token(Token = "0x6000427")]
		[Address(RVA = "0x16D64AC", Offset = "0x16D64AC", VA = "0x16D64AC")]
		public static bool TryParse(string value, NumberStyles style, IFormatProvider provider, out Half result)
		{
			return default(bool);
		}

		[Token(Token = "0x6000428")]
		[Address(RVA = "0x16D6564", Offset = "0x16D6564", VA = "0x16D6564", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6000429")]
		[Address(RVA = "0x16D660C", Offset = "0x16D660C", VA = "0x16D660C")]
		public string ToString(IFormatProvider formatProvider)
		{
			return null;
		}

		[Token(Token = "0x600042A")]
		[Address(RVA = "0x16D668C", Offset = "0x16D668C", VA = "0x16D668C")]
		public string ToString(string format)
		{
			return null;
		}

		[Token(Token = "0x600042B")]
		[Address(RVA = "0x16D673C", Offset = "0x16D673C", VA = "0x16D673C", Slot = "5")]
		public string ToString(string format, IFormatProvider formatProvider)
		{
			return null;
		}

		[Token(Token = "0x600042C")]
		[Address(RVA = "0x16D67CC", Offset = "0x16D67CC", VA = "0x16D67CC", Slot = "17")]
		private float System.IConvertible.ToSingle(IFormatProvider provider)
		{
			return default(float);
		}

		[Token(Token = "0x600042D")]
		[Address(RVA = "0x16D6824", Offset = "0x16D6824", VA = "0x16D6824", Slot = "6")]
		private TypeCode System.IConvertible.GetTypeCode()
		{
			return default(TypeCode);
		}

		[Token(Token = "0x600042E")]
		[Address(RVA = "0x16D682C", Offset = "0x16D682C", VA = "0x16D682C", Slot = "7")]
		private bool System.IConvertible.ToBoolean(IFormatProvider provider)
		{
			return default(bool);
		}

		[Token(Token = "0x600042F")]
		[Address(RVA = "0x16D68C0", Offset = "0x16D68C0", VA = "0x16D68C0", Slot = "10")]
		private byte System.IConvertible.ToByte(IFormatProvider provider)
		{
			return default(byte);
		}

		[Token(Token = "0x6000430")]
		[Address(RVA = "0x16D6954", Offset = "0x16D6954", VA = "0x16D6954", Slot = "8")]
		private char System.IConvertible.ToChar(IFormatProvider provider)
		{
			return default(char);
		}

		[Token(Token = "0x6000431")]
		[Address(RVA = "0x16D6A00", Offset = "0x16D6A00", VA = "0x16D6A00", Slot = "20")]
		private DateTime System.IConvertible.ToDateTime(IFormatProvider provider)
		{
			return default(DateTime);
		}

		[Token(Token = "0x6000432")]
		[Address(RVA = "0x16D6AAC", Offset = "0x16D6AAC", VA = "0x16D6AAC", Slot = "19")]
		private decimal System.IConvertible.ToDecimal(IFormatProvider provider)
		{
			return default(decimal);
		}

		[Token(Token = "0x6000433")]
		[Address(RVA = "0x16D6B40", Offset = "0x16D6B40", VA = "0x16D6B40", Slot = "18")]
		private double System.IConvertible.ToDouble(IFormatProvider provider)
		{
			return default(double);
		}

		[Token(Token = "0x6000434")]
		[Address(RVA = "0x16D6BD4", Offset = "0x16D6BD4", VA = "0x16D6BD4", Slot = "11")]
		private short System.IConvertible.ToInt16(IFormatProvider provider)
		{
			return default(short);
		}

		[Token(Token = "0x6000435")]
		[Address(RVA = "0x16D6C68", Offset = "0x16D6C68", VA = "0x16D6C68", Slot = "13")]
		private int System.IConvertible.ToInt32(IFormatProvider provider)
		{
			return default(int);
		}

		[Token(Token = "0x6000436")]
		[Address(RVA = "0x16D6CFC", Offset = "0x16D6CFC", VA = "0x16D6CFC", Slot = "15")]
		private long System.IConvertible.ToInt64(IFormatProvider provider)
		{
			return default(long);
		}

		[Token(Token = "0x6000437")]
		[Address(RVA = "0x16D6D90", Offset = "0x16D6D90", VA = "0x16D6D90", Slot = "9")]
		private sbyte System.IConvertible.ToSByte(IFormatProvider provider)
		{
			return default(sbyte);
		}

		[Token(Token = "0x6000438")]
		[Address(RVA = "0x16D6E24", Offset = "0x16D6E24", VA = "0x16D6E24", Slot = "21")]
		private string System.IConvertible.ToString(IFormatProvider provider)
		{
			return null;
		}

		[Token(Token = "0x6000439")]
		[Address(RVA = "0x16D6EF0", Offset = "0x16D6EF0", VA = "0x16D6EF0", Slot = "22")]
		private object System.IConvertible.ToType(Type conversionType, IFormatProvider provider)
		{
			return null;
		}

		[Token(Token = "0x600043A")]
		[Address(RVA = "0x16D6FC0", Offset = "0x16D6FC0", VA = "0x16D6FC0", Slot = "12")]
		private ushort System.IConvertible.ToUInt16(IFormatProvider provider)
		{
			return default(ushort);
		}

		[Token(Token = "0x600043B")]
		[Address(RVA = "0x16D7054", Offset = "0x16D7054", VA = "0x16D7054", Slot = "14")]
		private uint System.IConvertible.ToUInt32(IFormatProvider provider)
		{
			return default(uint);
		}

		[Token(Token = "0x600043C")]
		[Address(RVA = "0x16D70E8", Offset = "0x16D70E8", VA = "0x16D70E8", Slot = "16")]
		private ulong System.IConvertible.ToUInt64(IFormatProvider provider)
		{
			return default(ulong);
		}
	}
	[Token(Token = "0x20000CC")]
	public static class HalfHelper
	{
		[StructLayout(2)]
		[Token(Token = "0x20000CD")]
		private struct UIntFloat
		{
			[Token(Token = "0x4000441")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public uint UIntValue;

			[Token(Token = "0x4000442")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float FloatValue;
		}

		[Token(Token = "0x400043B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static uint[] mantissaTable;

		[Token(Token = "0x400043C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static uint[] exponentTable;

		[Token(Token = "0x400043D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static ushort[] offsetTable;

		[Token(Token = "0x400043E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static ushort[] baseTable;

		[Token(Token = "0x400043F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static sbyte[] shiftTable;

		[Token(Token = "0x4000440")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static UIntFloat floatToIntConverter;

		[Token(Token = "0x600043E")]
		[Address(RVA = "0x16D7214", Offset = "0x16D7214", VA = "0x16D7214")]
		private static uint FloatToUInt(float v)
		{
			return default(uint);
		}

		[Token(Token = "0x600043F")]
		[Address(RVA = "0x16D7280", Offset = "0x16D7280", VA = "0x16D7280")]
		private static float UIntToFloat(uint v)
		{
			return default(float);
		}

		[Token(Token = "0x6000440")]
		[Address(RVA = "0x16D72E4", Offset = "0x16D72E4", VA = "0x16D72E4")]
		private static uint ConvertMantissa(int i)
		{
			return default(uint);
		}

		[Token(Token = "0x6000441")]
		[Address(RVA = "0x16D7314", Offset = "0x16D7314", VA = "0x16D7314")]
		private static uint[] GenerateMantissaTable()
		{
			return null;
		}

		[Token(Token = "0x6000442")]
		[Address(RVA = "0x16D7428", Offset = "0x16D7428", VA = "0x16D7428")]
		private static uint[] GenerateExponentTable()
		{
			return null;
		}

		[Token(Token = "0x6000443")]
		[Address(RVA = "0x16D7518", Offset = "0x16D7518", VA = "0x16D7518")]
		private static ushort[] GenerateOffsetTable()
		{
			return null;
		}

		[Token(Token = "0x6000444")]
		[Address(RVA = "0x16D75DC", Offset = "0x16D75DC", VA = "0x16D75DC")]
		private static ushort[] GenerateBaseTable()
		{
			return null;
		}

		[Token(Token = "0x6000445")]
		[Address(RVA = "0x16D771C", Offset = "0x16D771C", VA = "0x16D771C")]
		private static sbyte[] GenerateShiftTable()
		{
			return null;
		}

		[Token(Token = "0x6000446")]
		[Address(RVA = "0x16D54E0", Offset = "0x16D54E0", VA = "0x16D54E0")]
		public static float HalfToSingle(Half half)
		{
			return default(float);
		}

		[Token(Token = "0x6000447")]
		[Address(RVA = "0x16D4658", Offset = "0x16D4658", VA = "0x16D4658")]
		public static Half SingleToHalf(float single)
		{
			return default(Half);
		}

		[Token(Token = "0x6000448")]
		[Address(RVA = "0x16D452C", Offset = "0x16D452C", VA = "0x16D452C")]
		public static float Decompress(ushort compressedFloat)
		{
			return default(float);
		}

		[Token(Token = "0x6000449")]
		[Address(RVA = "0x16D344C", Offset = "0x16D344C", VA = "0x16D344C")]
		public static ushort Compress(float uncompressedFloat)
		{
			return default(ushort);
		}

		[Token(Token = "0x600044A")]
		[Address(RVA = "0x16D4CA0", Offset = "0x16D4CA0", VA = "0x16D4CA0")]
		public static Half Negate(Half half)
		{
			return default(Half);
		}

		[Token(Token = "0x600044B")]
		[Address(RVA = "0x16D5ED8", Offset = "0x16D5ED8", VA = "0x16D5ED8")]
		public static Half Abs(Half half)
		{
			return default(Half);
		}

		[Token(Token = "0x600044C")]
		[Address(RVA = "0x16D6014", Offset = "0x16D6014", VA = "0x16D6014")]
		public static bool IsNaN(Half half)
		{
			return default(bool);
		}

		[Token(Token = "0x600044D")]
		[Address(RVA = "0x16D6088", Offset = "0x16D6088", VA = "0x16D6088")]
		public static bool IsInfinity(Half half)
		{
			return default(bool);
		}

		[Token(Token = "0x600044E")]
		[Address(RVA = "0x16D6164", Offset = "0x16D6164", VA = "0x16D6164")]
		public static bool IsPositiveInfinity(Half half)
		{
			return default(bool);
		}

		[Token(Token = "0x600044F")]
		[Address(RVA = "0x16D60F8", Offset = "0x16D60F8", VA = "0x16D60F8")]
		public static bool IsNegativeInfinity(Half half)
		{
			return default(bool);
		}
	}
}
namespace Systems
{
	[Token(Token = "0x20000CE")]
	public class InteractiveSystemContainer : MonoBehaviour
	{
		[Token(Token = "0x4000443")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Networking.Components.NetworkTransformChild _networkSystemContainer;

		[Token(Token = "0x4000444")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform _upperLimit;

		[Token(Token = "0x4000445")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform _systems;

		[Token(Token = "0x4000446")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Transform _lowerLimit;

		[Token(Token = "0x4000447")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private float _rotationSpeed;

		[Token(Token = "0x4000448")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private float _upDownSpeed;

		[Token(Token = "0x4000449")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private float _maxScale;

		[Token(Token = "0x400044A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private TransformContainer _originalTransform;

		[Token(Token = "0x400044B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private TransformContainer _originalSystemsTransform;

		[Token(Token = "0x400044C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private Tween _bodyRotationTweener;

		[Token(Token = "0x400044D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private TweenerCore<Quaternion, Quaternion, NoOptions> _rotateTweener;

		[Token(Token = "0x400044E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private TweenerCore<Vector3, Vector3, VectorOptions> _moveTweener;

		[Token(Token = "0x400044F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private TweenerCore<Vector3, Vector3, VectorOptions> _scaleTweener;

		[Token(Token = "0x4000450")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private Sequence _poseSequence;

		[Token(Token = "0x17000088")]
		public Networking.Components.NetworkTransformChild NetworkSystemContainer
		{
			[Token(Token = "0x6000451")]
			[Address(RVA = "0x16D791C", Offset = "0x16D791C", VA = "0x16D791C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000089")]
		public Vector2 MoveVelocity
		{
			[Token(Token = "0x6000452")]
			[Address(RVA = "0x16D7924", Offset = "0x16D7924", VA = "0x16D7924")]
			[CompilerGenerated]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x6000453")]
			[Address(RVA = "0x16D7930", Offset = "0x16D7930", VA = "0x16D7930")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700008A")]
		public float SpinVelocity
		{
			[Token(Token = "0x6000454")]
			[Address(RVA = "0x16D793C", Offset = "0x16D793C", VA = "0x16D793C")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000455")]
			[Address(RVA = "0x16D7944", Offset = "0x16D7944", VA = "0x16D7944")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700008B")]
		public float SpeedFactor
		{
			[Token(Token = "0x6000456")]
			[Address(RVA = "0x16D794C", Offset = "0x16D794C", VA = "0x16D794C")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000457")]
			[Address(RVA = "0x16D7954", Offset = "0x16D7954", VA = "0x16D7954")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700008C")]
		public float Scale
		{
			[Token(Token = "0x6000458")]
			[Address(RVA = "0x16D795C", Offset = "0x16D795C", VA = "0x16D795C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700008D")]
		public float VerticalPositionOffset
		{
			[Token(Token = "0x6000459")]
			[Address(RVA = "0x16D798C", Offset = "0x16D798C", VA = "0x16D798C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700008E")]
		public Transform Systems
		{
			[Token(Token = "0x600045A")]
			[Address(RVA = "0x16D79BC", Offset = "0x16D79BC", VA = "0x16D79BC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600045B")]
		[Address(RVA = "0x16D79C4", Offset = "0x16D79C4", VA = "0x16D79C4")]
		protected void Awake()
		{
		}

		[Token(Token = "0x600045C")]
		[Address(RVA = "0x16D7A6C", Offset = "0x16D7A6C", VA = "0x16D7A6C")]
		private void Update()
		{
		}

		[Token(Token = "0x600045D")]
		[Address(RVA = "0x16D7DF0", Offset = "0x16D7DF0", VA = "0x16D7DF0")]
		public void StopSpinning()
		{
		}

		[Token(Token = "0x600045E")]
		[Address(RVA = "0x16D7DF8", Offset = "0x16D7DF8", VA = "0x16D7DF8")]
		public void StopMoving()
		{
		}

		[Token(Token = "0x600045F")]
		[Address(RVA = "0x16D7E48", Offset = "0x16D7E48", VA = "0x16D7E48")]
		public void ResetContainer()
		{
		}

		[Token(Token = "0x6000460")]
		[Address(RVA = "0x16D7EB4", Offset = "0x16D7EB4", VA = "0x16D7EB4")]
		public void CenterSystemsAround(Transform value)
		{
		}

		[Token(Token = "0x6000461")]
		[Address(RVA = "0x16D813C", Offset = "0x16D813C", VA = "0x16D813C")]
		public void ResetSystemsTransform()
		{
		}

		[Token(Token = "0x6000462")]
		[Address(RVA = "0x16D81B0", Offset = "0x16D81B0", VA = "0x16D81B0")]
		public void ToggleRotation(bool value)
		{
		}

		[Token(Token = "0x6000463")]
		[Address(RVA = "0x16D8280", Offset = "0x16D8280", VA = "0x16D8280")]
		public TweenerCore<Vector3, Vector3, VectorOptions> DoAddMoveUp(float value)
		{
			return null;
		}

		[Token(Token = "0x6000464")]
		[Address(RVA = "0x16D8390", Offset = "0x16D8390", VA = "0x16D8390")]
		public TweenerCore<Vector3, Vector3, VectorOptions> DoAddScale(float value)
		{
			return null;
		}

		[Token(Token = "0x6000465")]
		[Address(RVA = "0x16D8478", Offset = "0x16D8478", VA = "0x16D8478")]
		public Sequence DoSetPose(float verticalPositionOffset, Vector3 rotation, float scale)
		{
			return null;
		}

		[Token(Token = "0x6000466")]
		[Address(RVA = "0x16D86DC", Offset = "0x16D86DC", VA = "0x16D86DC")]
		public TweenerCore<Quaternion, Quaternion, NoOptions> DoAddRotate(float value)
		{
			return null;
		}

		[Token(Token = "0x6000467")]
		[Address(RVA = "0x16D8814", Offset = "0x16D8814", VA = "0x16D8814")]
		public InteractiveSystemContainer()
		{
		}
	}
}
namespace Testing
{
	[Token(Token = "0x20000CF")]
	public static class TextExtension
	{
		[Token(Token = "0x6000468")]
		public static void Shuffle<T>(this List<T> items, [Optional] int? max)
		{
		}
	}
	[Token(Token = "0x20000D0")]
	public class TestController : MonoBehaviour
	{
		[Token(Token = "0x20000D1")]
		public class TestAnswerButton
		{
			[Token(Token = "0x17000090")]
			public UiElementReferences UiElementReferences
			{
				[Token(Token = "0x6000488")]
				[Address(RVA = "0x174AAA0", Offset = "0x174AAA0", VA = "0x174AAA0")]
				[CompilerGenerated]
				get
				{
					return null;
				}
				[Token(Token = "0x6000489")]
				[Address(RVA = "0x174AAA8", Offset = "0x174AAA8", VA = "0x174AAA8")]
				[CompilerGenerated]
				set
				{
				}
			}

			[Token(Token = "0x17000091")]
			public int AnatomyItemId
			{
				[Token(Token = "0x600048A")]
				[Address(RVA = "0x174AAB0", Offset = "0x174AAB0", VA = "0x174AAB0")]
				[CompilerGenerated]
				get
				{
					return default(int);
				}
				[Token(Token = "0x600048B")]
				[Address(RVA = "0x174AAB8", Offset = "0x174AAB8", VA = "0x174AAB8")]
				[CompilerGenerated]
				set
				{
				}
			}

			[Token(Token = "0x600048C")]
			[Address(RVA = "0x174AAC0", Offset = "0x174AAC0", VA = "0x174AAC0")]
			public TestAnswerButton()
			{
			}
		}

		[Token(Token = "0x20000D2")]
		public struct ResultsMessage : NetworkMessage
		{
			[Token(Token = "0x400048A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string Name;

			[Token(Token = "0x400048B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int Score;

			[Token(Token = "0x400048C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public float Time;

			[Token(Token = "0x400048D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int[] Answers;

			[Token(Token = "0x600048D")]
			[Address(RVA = "0x174AAC8", Offset = "0x174AAC8", VA = "0x174AAC8")]
			public ResultsMessage(string name, int score, float time, int[] answers)
			{
			}
		}

		[Token(Token = "0x20000D3")]
		private enum TestModelPanels
		{
			[Token(Token = "0x400048F")]
			None,
			[Token(Token = "0x4000490")]
			Questions,
			[Token(Token = "0x4000491")]
			Results,
			[Token(Token = "0x4000492")]
			StudentsOverview
		}

		[StructLayout(3)]
		[Token(Token = "0x20000D9")]
		[CompilerGenerated]
		private struct <HighlightAnatomyItem>d__69 : IAsyncStateMachine
		{
			[Token(Token = "0x40004A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40004A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x40004A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public TestController <>4__this;

			[Token(Token = "0x40004A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public AnatomyItem item;

			[Token(Token = "0x40004A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x60004A1")]
			[Address(RVA = "0x174B4A0", Offset = "0x174B4A0", VA = "0x174B4A0", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60004A2")]
			[Address(RVA = "0x174B9FC", Offset = "0x174B9FC", VA = "0x174B9FC", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20000DA")]
		[CompilerGenerated]
		private struct <UnhighlightAnatomyItem>d__70 : IAsyncStateMachine
		{
			[Token(Token = "0x40004A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40004AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x40004AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public TestController <>4__this;

			[Token(Token = "0x40004AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x60004A3")]
			[Address(RVA = "0x174BA08", Offset = "0x174BA08", VA = "0x174BA08", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60004A4")]
			[Address(RVA = "0x174BD58", Offset = "0x174BD58", VA = "0x174BD58", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20000DE")]
		[CompilerGenerated]
		private struct <CancelTest>d__80 : IAsyncStateMachine
		{
			[Token(Token = "0x40004B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40004B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x40004B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public TestController <>4__this;

			[Token(Token = "0x40004B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x60004AC")]
			[Address(RVA = "0x174C114", Offset = "0x174C114", VA = "0x174C114", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60004AD")]
			[Address(RVA = "0x174C97C", Offset = "0x174C97C", VA = "0x174C97C", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4000454")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private int _numberOfQuestions;

		[Token(Token = "0x4000455")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private int _timeForAnswer;

		[Token(Token = "0x4000456")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private int _optionsOnQuestionCount;

		[Token(Token = "0x4000457")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private PlayerResultRow _playerRowPrefab;

		[Token(Token = "0x4000458")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Button _studentResults;

		[Token(Token = "0x4000459")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Button _backToStudentOverview;

		[Token(Token = "0x400045A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Button _showTestQuestions;

		[Token(Token = "0x400045B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Button _restartTest;

		[Token(Token = "0x400045C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Button _closeTest;

		[Token(Token = "0x400045D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private UiElementReferences _answerButtonPrefab;

		[Token(Token = "0x400045E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private QuizResultsRow _quizResultsRowPrefab;

		[Token(Token = "0x400045F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private GameObject _panelQuestion;

		[Token(Token = "0x4000460")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private GameObject _panelStudentResults;

		[Token(Token = "0x4000461")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private GameObject _panelResults;

		[Token(Token = "0x4000462")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private GameObject _answersFooter;

		[Token(Token = "0x4000463")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private Transform _panelTestContent;

		[Token(Token = "0x4000464")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private Transform _playerContentParent;

		[Token(Token = "0x4000465")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private Transform _quizResultRowParent;

		[Token(Token = "0x4000466")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private LocalizedTextMeshProGui _timeText;

		[Token(Token = "0x4000467")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private TextMeshProUGUI _questionNumberText;

		[Token(Token = "0x4000468")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private LocalizedTextMeshProGui _studentAnswerLabel;

		[Token(Token = "0x4000469")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private LocalizedTextMeshProGui _youreTime;

		[Token(Token = "0x400046A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private LocalizedTextMeshProGui _youreScore;

		[Token(Token = "0x400046B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private GameObject _correctSymbol;

		[Token(Token = "0x400046C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private GameObject _wrongSymbol;

		[Token(Token = "0x400046D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private GameObject _studentResultsFooter;

		[Token(Token = "0x400046E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private GameObject _studentPlaceholderResults;

		[Token(Token = "0x400046F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		private HighlightController _markSphere;

		[Token(Token = "0x4000470")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		private NetworkTestController _networkTestController;

		[Token(Token = "0x4000471")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		private NetworkModuleProviderFactory _moduleProviderFactory;

		[Token(Token = "0x4000472")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		private PartsPanel _partsPanel;

		[Token(Token = "0x4000473")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[SerializeField]
		private NetworkAnatomyServer _networkAnatomyServer;

		[Token(Token = "0x4000474")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[SerializeField]
		private NetworkModuleProviderFactory _networkModuleProviderFactory;

		[Token(Token = "0x4000475")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[SerializeField]
		private HandMenuHandler _handMenuHandler;

		[Token(Token = "0x4000476")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[SerializeField]
		private AudioClip _correctSound;

		[Token(Token = "0x4000477")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[SerializeField]
		private AudioClip _wrongSound;

		[Token(Token = "0x4000478")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private float _startTime;

		[Token(Token = "0x4000479")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		private int _currentQuestionNumber;

		[Token(Token = "0x400047A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private int FinalScore;

		[Token(Token = "0x400047B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		private int _finishedPlayers;

		[Token(Token = "0x400047C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private bool _initialized;

		[Token(Token = "0x400047D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private TestModel _testModel;

		[Token(Token = "0x400047E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private readonly List<QuizResultsRow> _quizResultsRows;

		[Token(Token = "0x400047F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private readonly List<TestResponse> _userAnswers;

		[Token(Token = "0x4000480")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private readonly List<PlayerResultRow> _playersResult;

		[Token(Token = "0x4000481")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private readonly List<TestAnswerButton> _answerButtons;

		[Token(Token = "0x4000482")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private readonly CompositeDisposable _disposable;

		[Token(Token = "0x4000483")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		private readonly CompositeDisposable _resultDisposable;

		[Token(Token = "0x4000484")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private readonly CompositeDisposable _intervalDisposable;

		[Token(Token = "0x4000486")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
		private int _currentItemId;

		[Token(Token = "0x4000487")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		private CancellationTokenSource _loadCancellationTokenSource;

		[Token(Token = "0x1700008F")]
		public bool TestOngoing
		{
			[Token(Token = "0x600046A")]
			[Address(RVA = "0x16D8B78", Offset = "0x16D8B78", VA = "0x16D8B78")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600046B")]
			[Address(RVA = "0x16D8B80", Offset = "0x16D8B80", VA = "0x16D8B80")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6000469")]
		[Address(RVA = "0x16D8830", Offset = "0x16D8830", VA = "0x16D8830")]
		private void NetworkServerOnScore(NetworkConnection connection, ResultsMessage msg)
		{
		}

		[Token(Token = "0x600046C")]
		[Address(RVA = "0x16D8B8C", Offset = "0x16D8B8C", VA = "0x16D8B8C")]
		public void Start()
		{
		}

		[Token(Token = "0x600046D")]
		[Address(RVA = "0x16D8FE4", Offset = "0x16D8FE4", VA = "0x16D8FE4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600046E")]
		[Address(RVA = "0x16D9024", Offset = "0x16D9024", VA = "0x16D9024")]
		public TestModel GenerateTest(List<int> items)
		{
			return null;
		}

		[Token(Token = "0x600046F")]
		[Address(RVA = "0x16D94B0", Offset = "0x16D94B0", VA = "0x16D94B0")]
		public void StartTest(TestModel testModel)
		{
		}

		[Token(Token = "0x6000470")]
		[Address(RVA = "0x16DA40C", Offset = "0x16DA40C", VA = "0x16DA40C")]
		public void SendResults(ResultsMessage results)
		{
		}

		[Token(Token = "0x6000471")]
		[Address(RVA = "0x16D98BC", Offset = "0x16D98BC", VA = "0x16D98BC")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6000472")]
		[Address(RVA = "0x16D885C", Offset = "0x16D885C", VA = "0x16D885C")]
		private void ReceiveResultFromStudent(ResultsMessage msg)
		{
		}

		[Token(Token = "0x6000473")]
		[Address(RVA = "0x16DA54C", Offset = "0x16DA54C", VA = "0x16DA54C")]
		private void ShowScore(ResultsMessage result)
		{
		}

		[Token(Token = "0x6000474")]
		[Address(RVA = "0x16DA9DC", Offset = "0x16DA9DC", VA = "0x16DA9DC")]
		public bool IsAnswerCorrect(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x6000475")]
		[Address(RVA = "0x16D9E64", Offset = "0x16D9E64", VA = "0x16D9E64")]
		private void WriteQuestionItems(List<int> questions)
		{
		}

		[Token(Token = "0x6000476")]
		[Address(RVA = "0x16DA71C", Offset = "0x16DA71C", VA = "0x16DA71C")]
		public void WriteStudentResponse(int[] items, string studenName)
		{
		}

		[Token(Token = "0x6000477")]
		[Address(RVA = "0x16DABB8", Offset = "0x16DABB8", VA = "0x16DABB8")]
		[AsyncStateMachine(typeof(<HighlightAnatomyItem>d__69))]
		public void HighlightAnatomyItem(AnatomyItem item)
		{
		}

		[Token(Token = "0x6000478")]
		[Address(RVA = "0x16DAC8C", Offset = "0x16DAC8C", VA = "0x16DAC8C")]
		[AsyncStateMachine(typeof(<UnhighlightAnatomyItem>d__70))]
		public void UnhighlightAnatomyItem()
		{
		}

		[Token(Token = "0x6000479")]
		[Address(RVA = "0x16DAA04", Offset = "0x16DAA04", VA = "0x16DAA04")]
		private void InstantiateResult(AnatomyItem item, UiElementReferences uiElement)
		{
		}

		[Token(Token = "0x600047A")]
		[Address(RVA = "0x16DAD44", Offset = "0x16DAD44", VA = "0x16DAD44")]
		private void ClearAnswers()
		{
		}

		[Token(Token = "0x600047B")]
		[Address(RVA = "0x16DA070", Offset = "0x16DA070", VA = "0x16DA070")]
		private void ShowPanel(TestModelPanels panels)
		{
		}

		[Token(Token = "0x600047C")]
		[Address(RVA = "0x16DAF6C", Offset = "0x16DAF6C", VA = "0x16DAF6C")]
		private void CreateQuestion()
		{
		}

		[Token(Token = "0x600047D")]
		[Address(RVA = "0x16DBB0C", Offset = "0x16DBB0C", VA = "0x16DBB0C")]
		public bool? AnswerClicked(int index)
		{
			return null;
		}

		[Token(Token = "0x600047E")]
		[Address(RVA = "0x16DA108", Offset = "0x16DA108", VA = "0x16DA108")]
		private void DoNextQuestion()
		{
		}

		[Token(Token = "0x600047F")]
		[Address(RVA = "0x16DB98C", Offset = "0x16DB98C", VA = "0x16DB98C")]
		public void StartQuestionTimer()
		{
		}

		[Token(Token = "0x6000480")]
		[Address(RVA = "0x16DBEC8", Offset = "0x16DBEC8", VA = "0x16DBEC8")]
		private void FinishTest()
		{
		}

		[Token(Token = "0x6000481")]
		[Address(RVA = "0x16DC0F0", Offset = "0x16DC0F0", VA = "0x16DC0F0")]
		[AsyncStateMachine(typeof(<CancelTest>d__80))]
		public void CancelTest()
		{
		}

		[Token(Token = "0x6000482")]
		[Address(RVA = "0x16DC1A8", Offset = "0x16DC1A8", VA = "0x16DC1A8")]
		public bool CmdStartTest()
		{
			return default(bool);
		}

		[Token(Token = "0x6000483")]
		[Address(RVA = "0x16DC974", Offset = "0x16DC974", VA = "0x16DC974")]
		public void CmdCancelTest()
		{
		}

		[Token(Token = "0x6000484")]
		[Address(RVA = "0x16DC9AC", Offset = "0x16DC9AC", VA = "0x16DC9AC")]
		public TestController()
		{
		}
	}
	[Token(Token = "0x20000E0")]
	public static class TestControllerExtensions
	{
		[Token(Token = "0x60004B1")]
		[Address(RVA = "0x174CAF0", Offset = "0x174CAF0", VA = "0x174CAF0")]
		public static Sequence GetSlowPunchScaleSequence(this Transform transform)
		{
			return null;
		}
	}
	[Token(Token = "0x20000E1")]
	internal class TestResponse
	{
		[Token(Token = "0x40004BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly int ItemId;

		[Token(Token = "0x40004BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public readonly bool Correct;

		[Token(Token = "0x60004B2")]
		[Address(RVA = "0x174C0E4", Offset = "0x174C0E4", VA = "0x174C0E4")]
		public TestResponse(int itemId, bool correct)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000E2")]
	public class AnswersModel
	{
		[Token(Token = "0x17000092")]
		public List<int> Answers
		{
			[Token(Token = "0x60004B3")]
			[Address(RVA = "0x174CCE4", Offset = "0x174CCE4", VA = "0x174CCE4")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60004B4")]
			[Address(RVA = "0x174CCEC", Offset = "0x174CCEC", VA = "0x174CCEC")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x60004B5")]
		[Address(RVA = "0x174CCF4", Offset = "0x174CCF4", VA = "0x174CCF4")]
		public AnswersModel()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000E3")]
	public class TestModel
	{
		[Token(Token = "0x17000093")]
		public List<int> Questions
		{
			[Token(Token = "0x60004B6")]
			[Address(RVA = "0x174CCFC", Offset = "0x174CCFC", VA = "0x174CCFC")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60004B7")]
			[Address(RVA = "0x174CD04", Offset = "0x174CD04", VA = "0x174CD04")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000094")]
		public List<AnswersModel> Answers
		{
			[Token(Token = "0x60004B8")]
			[Address(RVA = "0x174CD0C", Offset = "0x174CD0C", VA = "0x174CD0C")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60004B9")]
			[Address(RVA = "0x174CD14", Offset = "0x174CD14", VA = "0x174CD14")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000095")]
		public int NumberOfQuestions
		{
			[Token(Token = "0x60004BA")]
			[Address(RVA = "0x174CD1C", Offset = "0x174CD1C", VA = "0x174CD1C")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60004BB")]
			[Address(RVA = "0x174CD24", Offset = "0x174CD24", VA = "0x174CD24")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000096")]
		public int TimeForAnswer
		{
			[Token(Token = "0x60004BC")]
			[Address(RVA = "0x174CD2C", Offset = "0x174CD2C", VA = "0x174CD2C")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60004BD")]
			[Address(RVA = "0x174CD34", Offset = "0x174CD34", VA = "0x174CD34")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x60004BE")]
		[Address(RVA = "0x174CD3C", Offset = "0x174CD3C", VA = "0x174CD3C")]
		public int GetQuestion(int index)
		{
			return default(int);
		}

		[Token(Token = "0x60004BF")]
		[Address(RVA = "0x174CD94", Offset = "0x174CD94", VA = "0x174CD94")]
		public AnswersModel GetAnswersModel(int index)
		{
			return null;
		}

		[Token(Token = "0x60004C0")]
		[Address(RVA = "0x174CDEC", Offset = "0x174CDEC", VA = "0x174CDEC")]
		public TestModel()
		{
		}
	}
}
namespace Presenters
{
	[Token(Token = "0x20000E4")]
	public class LoginUiPresenter : MonoBehaviour
	{
		[StructLayout(3)]
		[Token(Token = "0x20000E5")]
		[CompilerGenerated]
		private struct <Start>d__117 : IAsyncStateMachine
		{
			[Token(Token = "0x400052F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000530")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4000531")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public LoginUiPresenter <>4__this;

			[Token(Token = "0x4000532")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x60004EA")]
			[Address(RVA = "0x1752BF4", Offset = "0x1752BF4", VA = "0x1752BF4", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60004EB")]
			[Address(RVA = "0x1752DF8", Offset = "0x1752DF8", VA = "0x1752DF8", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20000E6")]
		[CompilerGenerated]
		private struct <CheckEducationLevel>d__119 : IAsyncStateMachine
		{
			[Token(Token = "0x4000533")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000534")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4000535")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LoginUiPresenter <>4__this;

			[Token(Token = "0x4000536")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private EducationLevel <educationLevel>5__2;

			[Token(Token = "0x4000537")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private IAnatomyModuleProvider <anatomyModuleProvider>5__3;

			[Token(Token = "0x4000538")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x60004EC")]
			[Address(RVA = "0x1752E04", Offset = "0x1752E04", VA = "0x1752E04", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60004ED")]
			[Address(RVA = "0x1753394", Offset = "0x1753394", VA = "0x1753394", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20000E7")]
		[CompilerGenerated]
		private struct <StartLogin>d__120 : IAsyncStateMachine
		{
			[Token(Token = "0x4000539")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x400053A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x400053B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public LoginUiPresenter <>4__this;

			[Token(Token = "0x400053C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private StoredLicenseData <storedLicenseData>5__2;

			[Token(Token = "0x400053D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private Sprite <originalSprite>5__3;

			[Token(Token = "0x400053E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Sequence <sequence>5__4;

			[Token(Token = "0x400053F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private CancellationToken <cancellationToken>5__5;

			[Token(Token = "0x4000540")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x60004EE")]
			[Address(RVA = "0x17533A0", Offset = "0x17533A0", VA = "0x17533A0", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60004EF")]
			[Address(RVA = "0x1754074", Offset = "0x1754074", VA = "0x1754074", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20000E8")]
		[CompilerGenerated]
		private struct <LoadSelectedEnvironment>d__124 : IAsyncStateMachine
		{
			[Token(Token = "0x4000541")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000542")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4000543")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public LoginUiPresenter <>4__this;

			[Token(Token = "0x4000544")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private object <>u__1;

			[Token(Token = "0x60004F0")]
			[Address(RVA = "0x1754080", Offset = "0x1754080", VA = "0x1754080", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60004F1")]
			[Address(RVA = "0x17544B8", Offset = "0x17544B8", VA = "0x17544B8", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20000EA")]
		[CompilerGenerated]
		private struct <LoginViewOnLoginClicked>d__127 : IAsyncStateMachine
		{
			[Token(Token = "0x4000555")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000556")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4000557")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public LoginUiPresenter <>4__this;

			[Token(Token = "0x4000558")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private LicenseData <licenseData>5__2;

			[Token(Token = "0x4000559")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private TaskAwaiter<LicenseData> <>u__1;

			[Token(Token = "0x6000503")]
			[Address(RVA = "0x17548C8", Offset = "0x17548C8", VA = "0x17548C8", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000504")]
			[Address(RVA = "0x1755334", Offset = "0x1755334", VA = "0x1755334", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20000EF")]
		[CompilerGenerated]
		private struct <StartSinglePlayer>d__137 : IAsyncStateMachine
		{
			[Token(Token = "0x4000569")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x400056A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x400056B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public LoginUiPresenter <>4__this;

			[Token(Token = "0x400056C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x6000539")]
			[Address(RVA = "0x1757C60", Offset = "0x1757C60", VA = "0x1757C60", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x600053A")]
			[Address(RVA = "0x1757F88", Offset = "0x1757F88", VA = "0x1757F88", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20000F0")]
		[CompilerGenerated]
		private struct <EnsureEducationLevel>d__139 : IAsyncStateMachine
		{
			[Token(Token = "0x400056D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x400056E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x400056F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LoginUiPresenter <>4__this;

			[Token(Token = "0x4000570")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public EducationLevel educationLevel;

			[Token(Token = "0x4000571")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x600053B")]
			[Address(RVA = "0x1757F94", Offset = "0x1757F94", VA = "0x1757F94", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x600053C")]
			[Address(RVA = "0x17583D0", Offset = "0x17583D0", VA = "0x17583D0", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20000F1")]
		[CompilerGenerated]
		private struct <GetMaxSeats>d__140 : IAsyncStateMachine
		{
			[Token(Token = "0x4000572")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000573")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder<int> <>t__builder;

			[Token(Token = "0x4000574")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LoginUiPresenter <>4__this;

			[Token(Token = "0x4000575")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public LicenseData licenseData;

			[Token(Token = "0x4000576")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public CancellationToken cancellationToken;

			[Token(Token = "0x4000577")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private TaskAwaiter<int> <>u__1;

			[Token(Token = "0x600053D")]
			[Address(RVA = "0x17583DC", Offset = "0x17583DC", VA = "0x17583DC", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x600053E")]
			[Address(RVA = "0x1758660", Offset = "0x1758660", VA = "0x1758660", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20000F2")]
		[CompilerGenerated]
		private struct <InitCreateRoomPanel>d__141 : IAsyncStateMachine
		{
			[Token(Token = "0x4000578")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000579")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x400057A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public LoginUiPresenter <>4__this;

			[Token(Token = "0x400057B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public LicenseData licenseData;

			[Token(Token = "0x400057C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private Slider <>7__wrap1;

			[Token(Token = "0x400057D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private TaskAwaiter<int> <>u__1;

			[Token(Token = "0x600053F")]
			[Address(RVA = "0x17586B8", Offset = "0x17586B8", VA = "0x17586B8", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000540")]
			[Address(RVA = "0x1758954", Offset = "0x1758954", VA = "0x1758954", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20000F3")]
		[CompilerGenerated]
		private struct <OnCreateRoomClicked>d__142 : IAsyncStateMachine
		{
			[Token(Token = "0x400057E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x400057F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4000580")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public LoginUiPresenter <>4__this;

			[Token(Token = "0x4000581")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private CancellationToken <cancellationToken>5__2;

			[Token(Token = "0x4000582")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private ServerInfo <serverInfo>5__3;

			[Token(Token = "0x4000583")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private TaskAwaiter<int> <>u__1;

			[Token(Token = "0x4000584")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private TaskAwaiter<LicenseManagerNetworkExtensions.RequestResult> <>u__2;

			[Token(Token = "0x4000585")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private TaskAwaiter <>u__3;

			[Token(Token = "0x6000541")]
			[Address(RVA = "0x1758960", Offset = "0x1758960", VA = "0x1758960", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000542")]
			[Address(RVA = "0x1759898", Offset = "0x1759898", VA = "0x1759898", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20000F4")]
		[CompilerGenerated]
		private struct <OnJoinRoomClicked>d__143 : IAsyncStateMachine
		{
			[Token(Token = "0x4000586")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000587")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4000588")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public LoginUiPresenter <>4__this;

			[Token(Token = "0x4000589")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private IServerInfo <serverInfo>5__2;

			[Token(Token = "0x400058A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private CancellationToken <cancellationToken>5__3;

			[Token(Token = "0x400058B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private TaskAwaiter<LicenseManagerNetworkExtensions.RequestResult> <>u__1;

			[Token(Token = "0x400058C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private IPlayerHandler <playerHandler>5__4;

			[Token(Token = "0x400058D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private TaskAwaiter <>u__2;

			[Token(Token = "0x400058E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private TaskAwaiter<bool> <>u__3;

			[Token(Token = "0x6000543")]
			[Address(RVA = "0x17598A4", Offset = "0x17598A4", VA = "0x17598A4", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000544")]
			[Address(RVA = "0x175A6E0", Offset = "0x175A6E0", VA = "0x175A6E0", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20000F9")]
		[CompilerGenerated]
		private struct <AddPanelToStack>d__145 : IAsyncStateMachine
		{
			[Token(Token = "0x4000593")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000594")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4000595")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public LoginUiPresenter <>4__this;

			[Token(Token = "0x4000596")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public GameObject panel;

			[Token(Token = "0x4000597")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private GameObject <previousPanel>5__2;

			[Token(Token = "0x4000598")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x6000553")]
			[Address(RVA = "0x175A8E4", Offset = "0x175A8E4", VA = "0x175A8E4", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000554")]
			[Address(RVA = "0x175B5B0", Offset = "0x175B5B0", VA = "0x175B5B0", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20000FE")]
		[CompilerGenerated]
		private struct <RemovePanelFromStack>d__146 : IAsyncStateMachine
		{
			[Token(Token = "0x400059D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x400059E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x400059F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public LoginUiPresenter <>4__this;

			[Token(Token = "0x40005A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private GameObject <oldPanel>5__2;

			[Token(Token = "0x40005A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x6000563")]
			[Address(RVA = "0x175B7B4", Offset = "0x175B7B4", VA = "0x175B7B4", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000564")]
			[Address(RVA = "0x175C3E0", Offset = "0x175C3E0", VA = "0x175C3E0", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000101")]
		[CompilerGenerated]
		private struct <StartTutorialFrom>d__149 : IAsyncStateMachine
		{
			[Token(Token = "0x40005A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40005A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x40005A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public LoginUiPresenter <>4__this;

			[Token(Token = "0x40005A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public int value;

			[Token(Token = "0x40005A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private EducationLevel <educationLevel>5__2;

			[Token(Token = "0x40005AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private IPlayerHandler <playerHandler>5__3;

			[Token(Token = "0x40005AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private FadeAggregator.FadeAggregatorFader <fader>5__4;

			[Token(Token = "0x40005AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x600056A")]
			[Address(RVA = "0x175C4C0", Offset = "0x175C4C0", VA = "0x175C4C0", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x600056B")]
			[Address(RVA = "0x175CBEC", Offset = "0x175CBEC", VA = "0x175CBEC", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x40004C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("Buttons")]
		[SerializeField]
		private Button _backButton;

		[Token(Token = "0x40004C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Button _tutorialButton;

		[Token(Token = "0x40004C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Button _singleplayerButton;

		[Token(Token = "0x40004C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Button _institutionalButton;

		[Token(Token = "0x40004C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Button _settingsButton;

		[Token(Token = "0x40004C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Button _creditsButton;

		[Token(Token = "0x40004C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Button _openCreateRoomButton;

		[Token(Token = "0x40004C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Button _openJoinRoomButton;

		[Token(Token = "0x40004C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Button _languageButton;

		[Token(Token = "0x40004CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Button _languageUiButton;

		[Token(Token = "0x40004CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Button _movementButton;

		[Token(Token = "0x40004CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Button _locationButton;

		[Token(Token = "0x40004CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private Button _enviromentButton;

		[Token(Token = "0x40004CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private Button _presentationButton;

		[Token(Token = "0x40004CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private Button _handtrackingButton;

		[Token(Token = "0x40004D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private Button _educationLevel;

		[Token(Token = "0x40004D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private UiElementReferences _accountButton;

		[Token(Token = "0x40004D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private Button _shopButton;

		[Token(Token = "0x40004D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private Button _hsMoreDetail;

		[Token(Token = "0x40004D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private Button _uniMoreDetail;

		[Token(Token = "0x40004D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[Header("Toggles")]
		[SerializeField]
		private Toggle _userInterfaceToggle;

		[Token(Token = "0x40004D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private Toggle _acesibilityToggle;

		[Token(Token = "0x40004D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private Toggle _avatarToggle;

		[Token(Token = "0x40004D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private Toggle _accountToggle;

		[Token(Token = "0x40004D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private Toggle _tutorialController;

		[Token(Token = "0x40004DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private Toggle _tutorialHandTracking;

		[Token(Token = "0x40004DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[Header("Panels")]
		[SerializeField]
		private GameObject _mainPanel;

		[Token(Token = "0x40004DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		private SettingsPanelReferences _settingsPanel;

		[Token(Token = "0x40004DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		private GameObject _multiUserPanel;

		[Token(Token = "0x40004DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		private GameObject _tutorialPanel;

		[Token(Token = "0x40004DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[SerializeField]
		private CreateRoomPanel _createRoomPanel;

		[Token(Token = "0x40004E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[SerializeField]
		private GameObject _userInterfaceSubPanel;

		[Token(Token = "0x40004E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[SerializeField]
		private GameObject _acessibilitySubPanel;

		[Token(Token = "0x40004E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[SerializeField]
		private GameObject _avatarSubPanel;

		[Token(Token = "0x40004E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[SerializeField]
		private GameObject _accountSubPanel;

		[Token(Token = "0x40004E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[SerializeField]
		private GameObject _uiPanel;

		[Token(Token = "0x40004E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[SerializeField]
		private GameObject _creditsPanel;

		[Token(Token = "0x40004E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[SerializeField]
		private EducationLevelPanel _educationLevelPanel;

		[Token(Token = "0x40004E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[SerializeField]
		private StorePanel _storePanel;

		[Token(Token = "0x40004E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[SerializeField]
		private GameObject _tutorialControllersPanel;

		[Token(Token = "0x40004E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		[SerializeField]
		private GameObject _tutorialHandTrackingPanel;

		[Token(Token = "0x40004EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		[SerializeField]
		private GameObject _tutorialVideoPanel;

		[Token(Token = "0x40004EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		[SerializeField]
		private GameObject _loginFailInfo;

		[Token(Token = "0x40004EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		[SerializeField]
		private GameObject _presentationRow;

		[Token(Token = "0x40004ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		[Header("Others")]
		[SerializeField]
		private LocalizedTextMeshProGui _languageName;

		[Token(Token = "0x40004EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		[SerializeField]
		private LocalizedTextMeshProGui _version;

		[Token(Token = "0x40004EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		[SerializeField]
		private LocalizedTextMeshProGui _languageUiName;

		[Token(Token = "0x40004F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		[SerializeField]
		private LocalizedTextMeshProGui _movementName;

		[Token(Token = "0x40004F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		[SerializeField]
		private LocalizedTextMeshProGui _locationName;

		[Token(Token = "0x40004F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		[SerializeField]
		private LocalizedTextMeshProGui _enviromentName;

		[Token(Token = "0x40004F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		[SerializeField]
		private LocalizedTextMeshProGui _presentationButtonName;

		[Token(Token = "0x40004F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		[SerializeField]
		private TextMeshProUGUI _handTrackingName;

		[Token(Token = "0x40004F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		[SerializeField]
		private LocalizedTextMeshProGui _educationLevelName;

		[Token(Token = "0x40004F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		[SerializeField]
		private Sprite _loadingSprite;

		[Token(Token = "0x40004F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		[SerializeField]
		private Slider _soundSlider;

		[Token(Token = "0x40004F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		[SerializeField]
		private TMP_InputField _serverNameInput;

		[Token(Token = "0x40004F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		[SerializeField]
		private TMP_InputField _playerNameInput;

		[Token(Token = "0x40004FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		[SerializeField]
		private Image _connectingAccountImage;

		[Token(Token = "0x40004FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		[SerializeField]
		private VrMatchmakerView _matchmakerView;

		[Token(Token = "0x40004FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		[SerializeField]
		private InteractiveKeyboard _keyboard;

		[Token(Token = "0x40004FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		[SerializeField]
		private AvatarCreatorUI _avatarCreatorUI;

		[Token(Token = "0x40004FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		[SerializeField]
		private NetworkModuleProviderFactory _moduleProviderFactory;

		[Token(Token = "0x40004FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		[SerializeField]
		private AnatomyConfiguration _anatomyConfiguration;

		[Token(Token = "0x4000500")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		[SerializeField]
		private AudioHandler _audioHandler;

		[Token(Token = "0x4000501")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		[SerializeField]
		private OculusIAPHandler _oculusIAPHandler;

		[Token(Token = "0x4000502")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		[SerializeField]
		private AnatomyLocalizationSettingsScriptableObject _anatomyLocalizationSettings;

		[Token(Token = "0x4000503")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		[SerializeField]
		[Header("Tutorial")]
		private TutorialPresenter _tutorialPresenter;

		[Token(Token = "0x4000504")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		[SerializeField]
		private RectTransform _controllersContent;

		[Token(Token = "0x4000505")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
		[SerializeField]
		private UiElementReferences _controllersButtonPrefab;

		[Token(Token = "0x4000506")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
		[SerializeField]
		private Sprite _spriteCompleted;

		[Token(Token = "0x4000507")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
		[SerializeField]
		private Sprite _spriteIncomplete;

		[Token(Token = "0x4000508")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
		[SerializeField]
		private Button _handTrackinglecture1;

		[Token(Token = "0x4000509")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
		[SerializeField]
		private Button _handTrackinglecture2;

		[Token(Token = "0x400050A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
		[SerializeField]
		private Button _handTrackinglecture3;

		[Token(Token = "0x400050B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
		[SerializeField]
		private Button _handTrackinglecture4;

		[Token(Token = "0x400050C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
		[SerializeField]
		private Button _handTrackinglecture5;

		[Token(Token = "0x400050D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
		[SerializeField]
		private Button _handTrackinglecture6;

		[Token(Token = "0x400050E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
		[SerializeField]
		private Button _handTrackinglecture7;

		[Token(Token = "0x400050F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
		[SerializeField]
		private Button _handTrackinglecture8;

		[Token(Token = "0x4000510")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
		[SerializeField]
		private Button _handTrackingVideoClose;

		[Token(Token = "0x4000511")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
		[SerializeField]
		private Button _handTrackingVideoNext;

		[Token(Token = "0x4000512")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
		[SerializeField]
		private Button _handTrackingVideoPrev;

		[Token(Token = "0x4000513")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
		[SerializeField]
		private VideoPlayer _videoPlayer;

		[Token(Token = "0x4000514")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
		[SerializeField]
		private VideoClip _handTrackingVideoClipGrabFromDistance;

		[Token(Token = "0x4000515")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
		[SerializeField]
		private VideoClip _handTrackingVideoClipGrab;

		[Token(Token = "0x4000516")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
		[SerializeField]
		private VideoClip _handTrackingVideoClipHandMenuTouch;

		[Token(Token = "0x4000517")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
		[SerializeField]
		private VideoClip _handTrackingVideoClipHandMenudistance;

		[Token(Token = "0x4000518")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
		[SerializeField]
		private VideoClip _handTrackingVideoClipLocomotion;

		[Token(Token = "0x4000519")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
		[SerializeField]
		private VideoClip _handTrackingVideoClipPanelInteraction;

		[Token(Token = "0x400051A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
		[SerializeField]
		private VideoClip _handTrackingVideoClipTeleport;

		[Token(Token = "0x400051B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
		[SerializeField]
		private VideoClip _handTrackingVideoClipZoom;

		[Token(Token = "0x400051C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F0")]
		[SerializeField]
		private TextMeshProUGUI _videoPlayerHeader;

		[Token(Token = "0x400051D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F8")]
		[Header("Login")]
		[SerializeField]
		private Login.LoginView _loginView;

		[Token(Token = "0x400051E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x300")]
		[SerializeField]
		private LicenseManagerBehaviour _licenseManager;

		[Token(Token = "0x400051F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x308")]
		[Scene]
		[SerializeField]
		private string _mainScene;

		[Token(Token = "0x4000520")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x310")]
		[SerializeField]
		[Header("Scene Management")]
		private SceneEnvironmentsScriptableObject _sceneEnvironmentsScriptableObject;

		[Token(Token = "0x4000521")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x318")]
		private GameObject _activeDefaultPanel;

		[Token(Token = "0x4000522")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x320")]
		private readonly Stack<GameObject> _panelsStack;

		[Token(Token = "0x4000523")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x328")]
		private readonly CompositeDisposable _disposable;

		[Token(Token = "0x4000524")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x330")]
		private readonly CancellationTokenSource _disposeCancellationTokenSource;

		[Token(Token = "0x4000525")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x338")]
		private CancellationTokenSource _loginLoopCancellationTokenSource;

		[Token(Token = "0x4000526")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x340")]
		private CancellationTokenSource _loginCancellationTokenSource;

		[Token(Token = "0x4000527")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x348")]
		private CancellationTokenSource _createServerCancellationTokenSource;

		[Token(Token = "0x4000528")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x350")]
		private CancellationTokenSource _joinServerCancellationTokenSource;

		[Token(Token = "0x4000529")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x358")]
		private readonly MatchmakerRefreshHelper _matchmakerRefreshHelper;

		[Token(Token = "0x400052A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x360")]
		private SmoothCameraHandler _smoothCameraHandler;

		[Token(Token = "0x400052C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x369")]
		private bool _loginLoopRunning;

		[Token(Token = "0x400052D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x36C")]
		private int _curentHandTrackingVideo;

		[Token(Token = "0x400052E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x370")]
		private EnvironmentReferenceProvider _environmentReference;

		[Token(Token = "0x17000097")]
		private SmoothCameraHandler SmoothCameraHandler
		{
			[Token(Token = "0x60004C1")]
			[Address(RVA = "0x174CDF4", Offset = "0x174CDF4", VA = "0x174CDF4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000098")]
		private ServerType ServerType
		{
			[Token(Token = "0x60004C2")]
			[Address(RVA = "0x174CEB0", Offset = "0x174CEB0", VA = "0x174CEB0")]
			get
			{
				return default(ServerType);
			}
		}

		[Token(Token = "0x17000099")]
		public bool Initialized
		{
			[Token(Token = "0x60004C3")]
			[Address(RVA = "0x174CED4", Offset = "0x174CED4", VA = "0x174CED4")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60004C4")]
			[Address(RVA = "0x174CEDC", Offset = "0x174CEDC", VA = "0x174CEDC")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x60004C5")]
		[Address(RVA = "0x174CEE8", Offset = "0x174CEE8", VA = "0x174CEE8")]
		[AsyncStateMachine(typeof(<Start>d__117))]
		private void Start()
		{
		}

		[Token(Token = "0x60004C6")]
		[Address(RVA = "0x174CFA0", Offset = "0x174CFA0", VA = "0x174CFA0")]
		private void SetActiveDefaultPanel(GameObject value)
		{
		}

		[Token(Token = "0x60004C7")]
		[Address(RVA = "0x174D0A4", Offset = "0x174D0A4", VA = "0x174D0A4")]
		[AsyncStateMachine(typeof(<CheckEducationLevel>d__119))]
		private Task CheckEducationLevel()
		{
			return null;
		}

		[Token(Token = "0x60004C8")]
		[Address(RVA = "0x174D190", Offset = "0x174D190", VA = "0x174D190")]
		[AsyncStateMachine(typeof(<StartLogin>d__120))]
		private void StartLogin()
		{
		}

		[Token(Token = "0x60004C9")]
		[Address(RVA = "0x174D24C", Offset = "0x174D24C", VA = "0x174D24C")]
		private void SetEducationLevel(EducationLevel educationLevel)
		{
		}

		[Token(Token = "0x60004CA")]
		[Address(RVA = "0x174D3F4", Offset = "0x174D3F4", VA = "0x174D3F4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60004CB")]
		[Address(RVA = "0x174D4AC", Offset = "0x174D4AC", VA = "0x174D4AC")]
		private void CheckAndAddDefaultAvatarValue()
		{
		}

		[Token(Token = "0x60004CC")]
		[Address(RVA = "0x174D5E8", Offset = "0x174D5E8", VA = "0x174D5E8")]
		[AsyncStateMachine(typeof(<LoadSelectedEnvironment>d__124))]
		private void LoadSelectedEnvironment()
		{
		}

		[Token(Token = "0x60004CD")]
		[Address(RVA = "0x174D6A0", Offset = "0x174D6A0", VA = "0x174D6A0")]
		private void AddLoginListeners()
		{
		}

		[Token(Token = "0x60004CE")]
		[Address(RVA = "0x174D7D0", Offset = "0x174D7D0", VA = "0x174D7D0")]
		private void RemoveLoginListeners()
		{
		}

		[Token(Token = "0x60004CF")]
		[Address(RVA = "0x174D8F8", Offset = "0x174D8F8", VA = "0x174D8F8")]
		[AsyncStateMachine(typeof(<LoginViewOnLoginClicked>d__127))]
		private void LoginViewOnLoginClicked()
		{
		}

		[Token(Token = "0x60004D0")]
		[Address(RVA = "0x174D9AC", Offset = "0x174D9AC", VA = "0x174D9AC")]
		private static void OnLoginError(Exception exception, Transform transform)
		{
		}

		[Token(Token = "0x60004D1")]
		[Address(RVA = "0x174D494", Offset = "0x174D494", VA = "0x174D494")]
		private void RemoveListeners()
		{
		}

		[Token(Token = "0x60004D2")]
		[Address(RVA = "0x174E1C0", Offset = "0x174E1C0", VA = "0x174E1C0")]
		private void AddMatchmakingListeners()
		{
		}

		[Token(Token = "0x60004D3")]
		[Address(RVA = "0x174E264", Offset = "0x174E264", VA = "0x174E264")]
		private static void DisplayResult(LicenseManagerNetworkExtensions.RequestResult result, Transform transform)
		{
		}

		[Token(Token = "0x60004D4")]
		[Address(RVA = "0x174E124", Offset = "0x174E124", VA = "0x174E124")]
		private void RemoveMatchmakingListeners()
		{
		}

		[Token(Token = "0x60004D5")]
		[Address(RVA = "0x174E46C", Offset = "0x174E46C", VA = "0x174E46C")]
		private void SetupLoginViews(LicenseData licenseData, StoredLicenseData storedLicenseData)
		{
		}

		[Token(Token = "0x60004D6")]
		[Address(RVA = "0x174EA68", Offset = "0x174EA68", VA = "0x174EA68")]
		private void Initialize()
		{
		}

		[Token(Token = "0x60004D7")]
		[Address(RVA = "0x174E884", Offset = "0x174E884", VA = "0x174E884")]
		public static bool IsStoreActive()
		{
			return default(bool);
		}

		[Token(Token = "0x60004D8")]
		[Address(RVA = "0x1751554", Offset = "0x1751554", VA = "0x1751554")]
		private void LogAnalyticsAction(string actionId, [Optional] Dictionary<string, object> additionalData)
		{
		}

		[Token(Token = "0x60004D9")]
		[Address(RVA = "0x1751744", Offset = "0x1751744", VA = "0x1751744")]
		[AsyncStateMachine(typeof(<StartSinglePlayer>d__137))]
		private void StartSinglePlayer()
		{
		}

		[Token(Token = "0x60004DA")]
		[Address(RVA = "0x17517FC", Offset = "0x17517FC", VA = "0x17517FC")]
		private bool IsEducationLevelValid(EducationLevel educationLevel, IAnatomyDatabase anatomyDatabase, IAnatomyModuleProvider anatomyModuleProvider)
		{
			return default(bool);
		}

		[Token(Token = "0x60004DB")]
		[Address(RVA = "0x1751938", Offset = "0x1751938", VA = "0x1751938")]
		[AsyncStateMachine(typeof(<EnsureEducationLevel>d__139))]
		private Task EnsureEducationLevel(EducationLevel educationLevel)
		{
			return null;
		}

		[Token(Token = "0x60004DC")]
		[Address(RVA = "0x1751A30", Offset = "0x1751A30", VA = "0x1751A30")]
		[AsyncStateMachine(typeof(<GetMaxSeats>d__140))]
		private Task<int> GetMaxSeats(LicenseData licenseData, CancellationToken cancellationToken)
		{
			return null;
		}

		[Token(Token = "0x60004DD")]
		[Address(RVA = "0x174E990", Offset = "0x174E990", VA = "0x174E990")]
		[AsyncStateMachine(typeof(<InitCreateRoomPanel>d__141))]
		private void InitCreateRoomPanel(LicenseData licenseData)
		{
		}

		[Token(Token = "0x60004DE")]
		[Address(RVA = "0x1751B74", Offset = "0x1751B74", VA = "0x1751B74")]
		[AsyncStateMachine(typeof(<OnCreateRoomClicked>d__142))]
		private void OnCreateRoomClicked()
		{
		}

		[Token(Token = "0x60004DF")]
		[Address(RVA = "0x1751C30", Offset = "0x1751C30", VA = "0x1751C30")]
		[AsyncStateMachine(typeof(<OnJoinRoomClicked>d__143))]
		private void OnJoinRoomClicked()
		{
		}

		[Token(Token = "0x60004E0")]
		[Address(RVA = "0x1751CE8", Offset = "0x1751CE8", VA = "0x1751CE8")]
		private void OnNetworkStateChanged(AnatomyNetworkManager.State newValue)
		{
		}

		[Token(Token = "0x60004E1")]
		[Address(RVA = "0x175208C", Offset = "0x175208C", VA = "0x175208C")]
		[AsyncStateMachine(typeof(<AddPanelToStack>d__145))]
		private void AddPanelToStack(GameObject panel)
		{
		}

		[Token(Token = "0x60004E2")]
		[Address(RVA = "0x1752164", Offset = "0x1752164", VA = "0x1752164")]
		[AsyncStateMachine(typeof(<RemovePanelFromStack>d__146))]
		private void RemovePanelFromStack()
		{
		}

		[Token(Token = "0x60004E3")]
		[Address(RVA = "0x1752218", Offset = "0x1752218", VA = "0x1752218")]
		private void StartHandTrackingVideoFromLecture(int value)
		{
		}

		[Token(Token = "0x60004E4")]
		[Address(RVA = "0x1752520", Offset = "0x1752520", VA = "0x1752520")]
		private void StartTutorialFromLecture(int value)
		{
		}

		[Token(Token = "0x60004E5")]
		[Address(RVA = "0x17527C0", Offset = "0x17527C0", VA = "0x17527C0")]
		[AsyncStateMachine(typeof(<StartTutorialFrom>d__149))]
		private void StartTutorialFrom(int value)
		{
		}

		[Token(Token = "0x60004E6")]
		[Address(RVA = "0x1752880", Offset = "0x1752880", VA = "0x1752880")]
		private static bool IsNameValid(string value)
		{
			return default(bool);
		}

		[Token(Token = "0x60004E7")]
		[Address(RVA = "0x1752920", Offset = "0x1752920", VA = "0x1752920")]
		public LoginUiPresenter()
		{
		}
	}
	[Token(Token = "0x2000103")]
	public class UiPresenter : MonoBehaviour
	{
		[StructLayout(3)]
		[Token(Token = "0x2000112")]
		[CompilerGenerated]
		private struct <LoadSelectedEnvironment>d__46 : IAsyncStateMachine
		{
			[Token(Token = "0x4000631")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000632")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4000633")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public UiPresenter <>4__this;

			[Token(Token = "0x4000634")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private EnvironmentType? <loadedEnvironment>5__2;

			[Token(Token = "0x4000635")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private EnvironmentType <selectedEnvironment>5__3;

			[Token(Token = "0x4000636")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x4000637")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private object <>u__2;

			[Token(Token = "0x600060C")]
			[Address(RVA = "0x176D7B0", Offset = "0x176D7B0", VA = "0x176D7B0", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x600060D")]
			[Address(RVA = "0x176DF88", Offset = "0x176DF88", VA = "0x176DF88", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x2000113")]
		[CompilerGenerated]
		private sealed class <>c__DisplayClass48_0
		{
			[Token(Token = "0x4000638")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ILicenseManager licenseManager;

			[Token(Token = "0x4000639")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public UiPresenter <>4__this;

			[Token(Token = "0x400063A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Func<string, LocationType, Task> orderAndSpawnResults;

			[Token(Token = "0x400063B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public EducationLevel educationLevel;

			[Token(Token = "0x400063C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Dictionary<string, UiElementActionDefinition> actionDefinitions;

			[Token(Token = "0x400063D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public bool isStudent;

			[Token(Token = "0x400063E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public VivoxNetworkHandler vivoxNetworkHandler;

			[Token(Token = "0x400063F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public IDrawingObjectFactoryEvents<IDrawingObjectInstance> drawingObjectEvents;

			[Token(Token = "0x4000640")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public Action onLicenseStatusChanged;

			[Token(Token = "0x600060E")]
			[Address(RVA = "0x176DF94", Offset = "0x176DF94", VA = "0x176DF94")]
			public <>c__DisplayClass48_0()
			{
			}

			[Token(Token = "0x600060F")]
			[Address(RVA = "0x176DF9C", Offset = "0x176DF9C", VA = "0x176DF9C")]
			internal bool <Initialize>b__0()
			{
				return default(bool);
			}

			[Token(Token = "0x6000610")]
			[Address(RVA = "0x176E04C", Offset = "0x176E04C", VA = "0x176E04C")]
			internal bool <Initialize>b__1()
			{
				return default(bool);
			}

			[Token(Token = "0x6000612")]
			[Address(RVA = "0x176E1F8", Offset = "0x176E1F8", VA = "0x176E1F8")]
			internal bool <Initialize>b__13(Database.SystemType systemType)
			{
				return default(bool);
			}

			[Token(Token = "0x6000613")]
			[Address(RVA = "0x176E284", Offset = "0x176E284", VA = "0x176E284")]
			internal bool <Initialize>b__20(string animationId)
			{
				return default(bool);
			}

			[Token(Token = "0x6000614")]
			[Address(RVA = "0x176E308", Offset = "0x176E308", VA = "0x176E308")]
			internal void <Initialize>b__21(HandMenuUiElementHelpers.SpawnedUiElement spawnedUiElement)
			{
			}

			[Token(Token = "0x6000615")]
			[Address(RVA = "0x176E3BC", Offset = "0x176E3BC", VA = "0x176E3BC")]
			internal void <Initialize>b__4(HandMenuUiElementHelpers.SpawnedUiElement spawnedUiElement)
			{
			}

			[Token(Token = "0x6000616")]
			[Address(RVA = "0x176E470", Offset = "0x176E470", VA = "0x176E470")]
			internal void <Initialize>b__5(HandMenuUiElementHelpers.SpawnedUiElement spawnedUiElement)
			{
			}

			[Token(Token = "0x6000617")]
			[Address(RVA = "0x176E528", Offset = "0x176E528", VA = "0x176E528")]
			internal void <Initialize>b__7(bool val)
			{
			}

			[Token(Token = "0x6000618")]
			[Address(RVA = "0x176E55C", Offset = "0x176E55C", VA = "0x176E55C")]
			internal void <Initialize>b__28(Action<(Vector3 Position, float Rotation)> val)
			{
			}

			[Token(Token = "0x6000619")]
			[Address(RVA = "0x176E580", Offset = "0x176E580", VA = "0x176E580")]
			internal void <Initialize>b__29(Action<(Vector3 Position, float Rotation)> val)
			{
			}

			[Token(Token = "0x600061A")]
			[Address(RVA = "0x176E5A4", Offset = "0x176E5A4", VA = "0x176E5A4")]
			internal void <Initialize>b__32(bool val)
			{
			}

			[Token(Token = "0x600061B")]
			[Address(RVA = "0x176E948", Offset = "0x176E948", VA = "0x176E948")]
			internal void <Initialize>b__34(bool val)
			{
			}

			[Token(Token = "0x600061C")]
			[Address(RVA = "0x176E974", Offset = "0x176E974", VA = "0x176E974")]
			internal void <Initialize>b__8(Action<IDrawingObjectInstance> val)
			{
			}

			[Token(Token = "0x600061D")]
			[Address(RVA = "0x176EA1C", Offset = "0x176EA1C", VA = "0x176EA1C")]
			internal void <Initialize>b__9(Action<IDrawingObjectInstance> val)
			{
			}

			[Token(Token = "0x600061E")]
			[Address(RVA = "0x176EAC8", Offset = "0x176EAC8", VA = "0x176EAC8")]
			internal void <Initialize>b__10(IDrawingObjectInstance val)
			{
			}

			[Token(Token = "0x600061F")]
			[Address(RVA = "0x176EE08", Offset = "0x176EE08", VA = "0x176EE08")]
			internal void <Initialize>b__11(Unit _)
			{
			}

			[Token(Token = "0x6000620")]
			[Address(RVA = "0x176EE2C", Offset = "0x176EE2C", VA = "0x176EE2C")]
			internal void <Initialize>b__12(Purchase _)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200011A")]
		[CompilerGenerated]
		private struct <Initialize>d__48 : IAsyncStateMachine
		{
			[Token(Token = "0x4000654")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000655")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4000656")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public UiPresenter <>4__this;

			[Token(Token = "0x4000657")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private <>c__DisplayClass48_0 <>8__1;

			[Token(Token = "0x4000658")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private IAnatomyModuleProvider <anatomyModuleProvider>5__2;

			[Token(Token = "0x4000659")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private bool <singleuser>5__3;

			[Token(Token = "0x400065A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
			private bool <multiuser>5__4;

			[Token(Token = "0x400065B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
			private bool <isTeacher>5__5;

			[Token(Token = "0x400065C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x600062F")]
			[Address(RVA = "0x176F8E0", Offset = "0x176F8E0", VA = "0x176F8E0", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000630")]
			[Address(RVA = "0x1773924", Offset = "0x1773924", VA = "0x1773924", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000122")]
		[CompilerGenerated]
		private struct <StartLogin>d__57 : IAsyncStateMachine
		{
			[Token(Token = "0x4000678")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000679")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x400067A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Action onCompleted;

			[Token(Token = "0x400067B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public UiPresenter <>4__this;

			[Token(Token = "0x400067C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x6000655")]
			[Address(RVA = "0x1776AD4", Offset = "0x1776AD4", VA = "0x1776AD4", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000656")]
			[Address(RVA = "0x1776E08", Offset = "0x1776E08", VA = "0x1776E08", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000123")]
		[CompilerGenerated]
		private struct <CheckInternetConnection>d__58 : IAsyncStateMachine
		{
			[Token(Token = "0x400067D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x400067E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x400067F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Action<bool> onResult;

			[Token(Token = "0x4000680")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UnityWebRequest <request>5__2;

			[Token(Token = "0x4000681")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private UnityWebRequestAsyncOperationAwaiter <>u__1;

			[Token(Token = "0x6000657")]
			[Address(RVA = "0x1776E14", Offset = "0x1776E14", VA = "0x1776E14", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000658")]
			[Address(RVA = "0x1777330", Offset = "0x1777330", VA = "0x1777330", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x40005B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private NetworkUiPresenter _networkUiPresenter;

		[Token(Token = "0x40005B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private TestController _testController;

		[Token(Token = "0x40005B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private InfomonitorHandler _infomonitorHandler;

		[Token(Token = "0x40005B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private NetworkModuleProviderFactory _moduleProviderFactory;

		[Token(Token = "0x40005B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private SceneLoader _sceneLoader;

		[Token(Token = "0x40005B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private VR.Search.Search _search;

		[Token(Token = "0x40005B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private QuizPanelHandler _quizPanelHandler;

		[Token(Token = "0x40005B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private NetworkPlayersPresenter _networkPlayersPresenter;

		[Token(Token = "0x40005B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private HandMenuReferences _handMenuReferences;

		[Token(Token = "0x40005B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private InteractionModelBehaviour _interactionModelBehaviour;

		[Token(Token = "0x40005BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private FunctionStackBehaviour _functionStackBehaviour;

		[Token(Token = "0x40005BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private DicomPanelReferences _dicomPanelReferences;

		[Token(Token = "0x40005BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private Sprite[] _animationIcons;

		[Token(Token = "0x40005BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private AnatomyConfiguration _anatomyConfiguration;

		[Token(Token = "0x40005BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private SceneEnvironmentsScriptableObject _sceneEnvironmentsScriptableObject;

		[Token(Token = "0x40005BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private DrawingPanel _drawingHandler;

		[Token(Token = "0x40005C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private Transform _playerResetPosition;

		[Token(Token = "0x40005C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private Camera _screenshotCamera;

		[Token(Token = "0x40005C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private AnatomyLicenseValidatorBehaviour _anatomyLicenseValidatorBehaviour;

		[Token(Token = "0x40005C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private StorePanel _storePanel;

		[Token(Token = "0x40005C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private TextMeshProUGUI _licenceInfoEnviroment;

		[Token(Token = "0x40005C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private SettingsPanelReferences _settingsPanel;

		[Token(Token = "0x40005C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private DicomLoadPanelReferences _dicomLoadPanelReferences;

		[Token(Token = "0x40005C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private CadaverBrowserReferences _cadaverBrowserReferences;

		[Token(Token = "0x40005C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private StructureLayerUiReference _subPartParentUiPrefab;

		[Token(Token = "0x40005CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private SystemUiComponent[] _systemUiComponents;

		[Token(Token = "0x40005CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private Dictionary<string, UiElementReferences> _animationToggles;

		[Token(Token = "0x40005CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private readonly CompositeDisposable _disposable;

		[Token(Token = "0x40005CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private readonly CancellationTokenSource _disposeCancellationTokenSource;

		[Token(Token = "0x40005CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[SerializeField]
		private UiElementDatabase _uiElementDatabase;

		[Token(Token = "0x40005CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[SerializeField]
		private string _defaultQuickActions;

		[Token(Token = "0x40005D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[SerializeField]
		private ToggleGroup _contextPanelToggleGroup;

		[Token(Token = "0x40005D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private CancellationTokenSource _loginLoopCancellationTokenSource;

		[Token(Token = "0x1700009A")]
		private InteractionModel InteractionModel
		{
			[Token(Token = "0x600056E")]
			[Address(RVA = "0x175CF2C", Offset = "0x175CF2C", VA = "0x175CF2C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700009B")]
		public bool Initialized
		{
			[Token(Token = "0x600056F")]
			[Address(RVA = "0x175CFA8", Offset = "0x175CFA8", VA = "0x175CFA8")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000570")]
			[Address(RVA = "0x175CFB0", Offset = "0x175CFB0", VA = "0x175CFB0")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6000571")]
		[Address(RVA = "0x175CFBC", Offset = "0x175CFBC", VA = "0x175CFBC")]
		private void InitToolsActions(IDictionary<string, UiElementActionDefinition> actions, INetworkModuleProviderFactory moduleProviderFactory, InteractionModel interactionModel)
		{
		}

		[Token(Token = "0x6000572")]
		[Address(RVA = "0x175FEF4", Offset = "0x175FEF4", VA = "0x175FEF4")]
		public static void InitUserActions(IDictionary<string, UiElementActionDefinition> actions, INetworkModuleProviderFactory moduleProviderFactory, Transform playerResetPosition)
		{
		}

		[Token(Token = "0x6000573")]
		[Address(RVA = "0x1760408", Offset = "0x1760408", VA = "0x1760408")]
		private void InitMultiplayerActions(IDictionary<string, UiElementActionDefinition> actions, NetworkUiPresenter networkUiPresenter, NetworkPlayersPresenter networkPlayersPresenter, VivoxNetworkHandler vivoxNetworkHandler, bool isStudent, Transform modalDisplayTransform)
		{
		}

		[Token(Token = "0x6000574")]
		[Address(RVA = "0x1760CC4", Offset = "0x1760CC4", VA = "0x1760CC4")]
		private CompositeDisposable InitAnalytics(IEnumerable<HandMenuUiElementHelpers.SpawnedUiElement> uiElements, string userActionElementCategory)
		{
			return null;
		}

		[Token(Token = "0x6000575")]
		[Address(RVA = "0x17612E8", Offset = "0x17612E8", VA = "0x17612E8")]
		private CompositeDisposable InitAnalytics(IEnumerable<SystemUiComponent> systemUiComponents, INetworkModuleProviderFactory moduleProviderFactory)
		{
			return null;
		}

		[Token(Token = "0x6000576")]
		[Address(RVA = "0x1761AF4", Offset = "0x1761AF4", VA = "0x1761AF4")]
		private void LogAnalyticsAction(string actionId, string userActionElementCategory, [Optional] Dictionary<string, object> additionalData)
		{
		}

		[Token(Token = "0x6000577")]
		[Address(RVA = "0x1761D78", Offset = "0x1761D78", VA = "0x1761D78")]
		private void Start()
		{
		}

		[Token(Token = "0x6000578")]
		[Address(RVA = "0x1762028", Offset = "0x1762028", VA = "0x1762028")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000579")]
		[Address(RVA = "0x1761D98", Offset = "0x1761D98", VA = "0x1761D98")]
		[AsyncStateMachine(typeof(<LoadSelectedEnvironment>d__46))]
		private void LoadSelectedEnvironment()
		{
		}

		[Token(Token = "0x600057A")]
		[Address(RVA = "0x1762068", Offset = "0x1762068", VA = "0x1762068")]
		private static void SetPassthroughEnvironment(EnvironmentReferenceProvider environmentReferenceProvider, bool value)
		{
		}

		[Token(Token = "0x600057B")]
		[Address(RVA = "0x1761F70", Offset = "0x1761F70", VA = "0x1761F70")]
		[AsyncStateMachine(typeof(<Initialize>d__48))]
		private void Initialize()
		{
		}

		[Token(Token = "0x600057C")]
		[Address(RVA = "0x17620F8", Offset = "0x17620F8", VA = "0x17620F8")]
		private void DisplayInvalidLicenseModal()
		{
		}

		[Token(Token = "0x600057D")]
		[Address(RVA = "0x176222C", Offset = "0x176222C", VA = "0x176222C")]
		private void OnLicenseStatusChanged()
		{
		}

		[Token(Token = "0x600057E")]
		[Address(RVA = "0x1762C7C", Offset = "0x1762C7C", VA = "0x1762C7C")]
		public static CompositeDisposable InitInfomonitor(InfomonitorHandler infomonitorHandler, INetworkModuleProviderFactory moduleProviderFactory, CadaverBrowserReferences cadaverBrowserReferences, Func<string, LocationType, Task> orderAndSpawnCadaverResults)
		{
			return null;
		}

		[Token(Token = "0x600057F")]
		[Address(RVA = "0x1763D7C", Offset = "0x1763D7C", VA = "0x1763D7C")]
		public static Utils.IPresentable ResolvePresentable(object value)
		{
			return null;
		}

		[Token(Token = "0x6000580")]
		[Address(RVA = "0x17636D8", Offset = "0x17636D8", VA = "0x17636D8")]
		public static void InitStructureLayerUi(INetworkModuleProviderFactory moduleProviderFactory, StructureLayerUiReference ui, Func<IInteractiveAnatomyItemInstance> getInstance)
		{
		}

		[Token(Token = "0x6000581")]
		[Address(RVA = "0x17641C4", Offset = "0x17641C4", VA = "0x17641C4")]
		public static CompositeDisposable InitSubPartParentUi(InteractionModel interactionModel, INetworkModuleProviderFactory moduleProviderFactory, StructureLayerUiReference prefab)
		{
			return null;
		}

		[Token(Token = "0x6000582")]
		[Address(RVA = "0x1761E50", Offset = "0x1761E50", VA = "0x1761E50")]
		private void StartSession()
		{
		}

		[Token(Token = "0x6000583")]
		[Address(RVA = "0x1764954", Offset = "0x1764954", VA = "0x1764954")]
		[AsyncStateMachine(typeof(<StartLogin>d__57))]
		private void StartLogin(Action onCompleted)
		{
		}

		[Token(Token = "0x6000584")]
		[Address(RVA = "0x1764A28", Offset = "0x1764A28", VA = "0x1764A28")]
		[AsyncStateMachine(typeof(<CheckInternetConnection>d__58))]
		private static void CheckInternetConnection(Action<bool> onResult)
		{
		}

		[Token(Token = "0x6000585")]
		[Address(RVA = "0x1764AE0", Offset = "0x1764AE0", VA = "0x1764AE0")]
		private void LogSessionStarted(bool internetAvailable)
		{
		}

		[Token(Token = "0x6000586")]
		[Address(RVA = "0x1764F8C", Offset = "0x1764F8C", VA = "0x1764F8C")]
		public static void GatherStudents(Vector3 position, float rotation)
		{
		}

		[Token(Token = "0x6000587")]
		[Address(RVA = "0x1765118", Offset = "0x1765118", VA = "0x1765118")]
		public UiPresenter()
		{
		}
	}
}
namespace Login
{
	[Token(Token = "0x2000125")]
	public class LoginView : MonoBehaviour
	{
		[Token(Token = "0x4000687")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TMP_InputField _issuerInputField;

		[Token(Token = "0x4000688")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private TMP_InputField _keyInputField;

		[Token(Token = "0x4000689")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private TMP_InputField _usernameInputField;

		[Token(Token = "0x400068A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private UiElementReferences _loginButton;

		[Token(Token = "0x400068B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private InteractiveKeyboard _keyboard;

		[Token(Token = "0x400068C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private LocalizedTextMeshProGui _validUntilText;

		[Token(Token = "0x400068D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private readonly CompositeDisposable _disposable;

		[Token(Token = "0x1700009C")]
		public TMP_InputField IssuerInputField
		{
			[Token(Token = "0x600065B")]
			[Address(RVA = "0x17776F8", Offset = "0x17776F8", VA = "0x17776F8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700009D")]
		public TMP_InputField KeyInputField
		{
			[Token(Token = "0x600065C")]
			[Address(RVA = "0x1777700", Offset = "0x1777700", VA = "0x1777700")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700009E")]
		public TMP_InputField UsernameInputField
		{
			[Token(Token = "0x600065D")]
			[Address(RVA = "0x1777708", Offset = "0x1777708", VA = "0x1777708")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700009F")]
		public LocalizedTextMeshProGui ValidUntilText
		{
			[Token(Token = "0x600065E")]
			[Address(RVA = "0x1777710", Offset = "0x1777710", VA = "0x1777710")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A0")]
		public UiElementReferences LoginButton
		{
			[Token(Token = "0x600065F")]
			[Address(RVA = "0x1777718", Offset = "0x1777718", VA = "0x1777718")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A1")]
		public string Issuer
		{
			[Token(Token = "0x6000660")]
			[Address(RVA = "0x1777720", Offset = "0x1777720", VA = "0x1777720")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A2")]
		public string Key
		{
			[Token(Token = "0x6000661")]
			[Address(RVA = "0x177773C", Offset = "0x177773C", VA = "0x177773C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A3")]
		public string Username
		{
			[Token(Token = "0x6000662")]
			[Address(RVA = "0x1777758", Offset = "0x1777758", VA = "0x1777758")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000663")]
		[Address(RVA = "0x1777774", Offset = "0x1777774", VA = "0x1777774")]
		private void Start()
		{
		}

		[Token(Token = "0x6000664")]
		[Address(RVA = "0x1777B2C", Offset = "0x1777B2C", VA = "0x1777B2C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000665")]
		[Address(RVA = "0x1777B48", Offset = "0x1777B48", VA = "0x1777B48")]
		public LoginView()
		{
		}
	}
	[Token(Token = "0x2000126")]
	public class PlayerIdentity
	{
		[Token(Token = "0x400068E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Lazy<PlayerIdentity> Lazy;

		[Token(Token = "0x170000A4")]
		public static PlayerIdentity Instance
		{
			[Token(Token = "0x600066E")]
			[Address(RVA = "0x1777D84", Offset = "0x1777D84", VA = "0x1777D84")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A5")]
		public string Name
		{
			[Token(Token = "0x600066F")]
			[Address(RVA = "0x1777DFC", Offset = "0x1777DFC", VA = "0x1777DFC")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6000670")]
			[Address(RVA = "0x1777E04", Offset = "0x1777E04", VA = "0x1777E04")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x600066D")]
		[Address(RVA = "0x1777D2C", Offset = "0x1777D2C", VA = "0x1777D2C")]
		private PlayerIdentity()
		{
		}
	}
}
namespace Labels
{
	[Token(Token = "0x2000128")]
	public class LabelHandler : MonoBehaviour
	{
		[StructLayout(3)]
		[Token(Token = "0x2000129")]
		[CompilerGenerated]
		private struct <CreateLabel>d__7 : IAsyncStateMachine
		{
			[Token(Token = "0x4000695")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000696")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4000697")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public LabelHandler <>4__this;

			[Token(Token = "0x4000698")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Func<Transform> getTransform;

			[Token(Token = "0x4000699")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public string text;

			[Token(Token = "0x400069A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public string underlineText;

			[Token(Token = "0x400069B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public Func<Vector3> getPosition;

			[Token(Token = "0x400069C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public Transform playerCameraTransform;

			[Token(Token = "0x400069D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public Action onLabelCreated;

			[Token(Token = "0x400069E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private CancellationToken <token>5__2;

			[Token(Token = "0x400069F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			private Transform <itemTransform>5__3;

			[Token(Token = "0x40006A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x600067A")]
			[Address(RVA = "0x17785DC", Offset = "0x17785DC", VA = "0x17785DC", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x600067B")]
			[Address(RVA = "0x1779054", Offset = "0x1779054", VA = "0x1779054", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4000691")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private LabelObject _labelPrefab;

		[Token(Token = "0x4000692")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly Dictionary<Transform, LabelObject> _labelItems;

		[Token(Token = "0x4000693")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly HashSet<LabelObject> _labelsBeingDestroyed;

		[Token(Token = "0x4000694")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private CancellationTokenSource _cancellationTokenSource;

		[Token(Token = "0x170000A6")]
		public System.Collections.Generic.IReadOnlyDictionary<Transform, LabelObject> LabelObjects
		{
			[Token(Token = "0x6000675")]
			[Address(RVA = "0x1777FF0", Offset = "0x1777FF0", VA = "0x1777FF0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000676")]
		[Address(RVA = "0x1777FF8", Offset = "0x1777FF8", VA = "0x1777FF8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000677")]
		[Address(RVA = "0x177800C", Offset = "0x177800C", VA = "0x177800C")]
		[AsyncStateMachine(typeof(<CreateLabel>d__7))]
		public void CreateLabel(Func<Transform> getTransform, string text, string underlineText, Func<Vector3> getPosition, Transform playerCameraTransform, [Optional] Action onLabelCreated)
		{
		}

		[Token(Token = "0x6000678")]
		[Address(RVA = "0x1778168", Offset = "0x1778168", VA = "0x1778168")]
		public void DestroyLabel(LabelObject labelObject)
		{
		}

		[Token(Token = "0x6000679")]
		[Address(RVA = "0x1778504", Offset = "0x1778504", VA = "0x1778504")]
		public LabelHandler()
		{
		}
	}
	[Token(Token = "0x200012B")]
	public class LabelObject : MonoBehaviour
	{
		[Token(Token = "0x40006A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _midTextPoint;

		[Token(Token = "0x40006A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MeshRenderer _endTextPoint;

		[Token(Token = "0x40006A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private TextMeshPro _textMeshPro;

		[Token(Token = "0x40006A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private TextMeshPro _underlineTextMeshPro;

		[Token(Token = "0x40006A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private LineRenderer _line;

		[Token(Token = "0x40006A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private int _defaultFontSize;

		[Token(Token = "0x40006A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private int _defaultFontWidth;

		[Token(Token = "0x40006AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private float _textVerticalOffsetMultiplier;

		[Token(Token = "0x40006AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		private float _underLineTextVerticalOffsetMultiplier;

		[Token(Token = "0x40006AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private float _defaultLineWidth;

		[Token(Token = "0x40006AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		private int _defaultUnderlineFontSize;

		[Token(Token = "0x40006AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private float _sphereSizeMultiplier;

		[Token(Token = "0x40006AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[SerializeField]
		private float _shortLabelOverflowMultiplier;

		[Token(Token = "0x40006B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Func<Vector3> _getPosition;

		[Token(Token = "0x40006B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Sequence _setVisibleSequence;

		[Token(Token = "0x40006B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Vector3 _lastPosition;

		[Token(Token = "0x40006B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private Vector3 _positionOffset;

		[Token(Token = "0x40006B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Bounds _lastBounds;

		[Token(Token = "0x170000A7")]
		public TextMeshPro TextMeshPro
		{
			[Token(Token = "0x600067F")]
			[Address(RVA = "0x1779208", Offset = "0x1779208", VA = "0x1779208")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A8")]
		public TextMeshPro UnderlineTextMeshPro
		{
			[Token(Token = "0x6000680")]
			[Address(RVA = "0x1779210", Offset = "0x1779210", VA = "0x1779210")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A9")]
		public Transform PlayerCameraTransform
		{
			[Token(Token = "0x6000681")]
			[Address(RVA = "0x1779218", Offset = "0x1779218", VA = "0x1779218")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6000682")]
			[Address(RVA = "0x1779220", Offset = "0x1779220", VA = "0x1779220")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170000AA")]
		public Func<Vector3> GetPosition
		{
			[Token(Token = "0x6000683")]
			[Address(RVA = "0x1779228", Offset = "0x1779228", VA = "0x1779228")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000684")]
			[Address(RVA = "0x1778FCC", Offset = "0x1778FCC", VA = "0x1778FCC")]
			set
			{
			}
		}

		[Token(Token = "0x170000AB")]
		public Transform ItemTransform
		{
			[Token(Token = "0x6000685")]
			[Address(RVA = "0x1779230", Offset = "0x1779230", VA = "0x1779230")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6000686")]
			[Address(RVA = "0x1779238", Offset = "0x1779238", VA = "0x1779238")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6000687")]
		[Address(RVA = "0x1779240", Offset = "0x1779240", VA = "0x1779240")]
		public void Update()
		{
		}

		[Token(Token = "0x6000688")]
		[Address(RVA = "0x1779A44", Offset = "0x1779A44", VA = "0x1779A44")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000689")]
		[Address(RVA = "0x1778348", Offset = "0x1778348", VA = "0x1778348")]
		public Sequence SetVisible(bool value, float duration)
		{
			return null;
		}

		[Token(Token = "0x600068A")]
		[Address(RVA = "0x1779A5C", Offset = "0x1779A5C", VA = "0x1779A5C")]
		public LabelObject()
		{
		}
	}
}
namespace Cadaver
{
	[Token(Token = "0x200012C")]
	public class CadaverBrowserReferences : MonoBehaviour
	{
		[Token(Token = "0x40006B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform _resultsParent;

		[Token(Token = "0x40006B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private ScrollRect _scroll;

		[Token(Token = "0x40006B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private UiElementReferences _imgPrefab;

		[Token(Token = "0x40006BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private TMP_InputField _input;

		[Token(Token = "0x40006BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private UiElementReferences _leftPanelToggle;

		[Token(Token = "0x40006BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private LayoutElement _resultsPanel;

		[Token(Token = "0x40006BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Transform _categoryParent;

		[Token(Token = "0x40006BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private CategoryElement _mainCategoryElementPrefab;

		[Token(Token = "0x40006BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private CategoryElement _subCategoryElementPrefab;

		[Token(Token = "0x40006C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private ToggleGroup _toggleGroup;

		[Token(Token = "0x40006C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private ToggleGroup _mainCategoryToggleGroup;

		[Token(Token = "0x40006C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private SVGImage _svgImage;

		[Token(Token = "0x40006C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private CanvasGroup _leftPanelCanvasGroup;

		[Token(Token = "0x40006C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private LocalizedTextMeshProGui _resultsCount;

		[Token(Token = "0x40006C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private GameObject _noResultsText;

		[Token(Token = "0x170000AC")]
		public TMP_InputField Input
		{
			[Token(Token = "0x600068B")]
			[Address(RVA = "0x1779A90", Offset = "0x1779A90", VA = "0x1779A90")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000AD")]
		public ScrollRect Scroll
		{
			[Token(Token = "0x600068C")]
			[Address(RVA = "0x1779A98", Offset = "0x1779A98", VA = "0x1779A98")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000AE")]
		public Transform ResultsParent
		{
			[Token(Token = "0x600068D")]
			[Address(RVA = "0x1779AA0", Offset = "0x1779AA0", VA = "0x1779AA0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000AF")]
		public UiElementReferences CadaverResultPrefab
		{
			[Token(Token = "0x600068E")]
			[Address(RVA = "0x1779AA8", Offset = "0x1779AA8", VA = "0x1779AA8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B0")]
		public UiElementReferences LeftPanelToggle
		{
			[Token(Token = "0x600068F")]
			[Address(RVA = "0x1779AB0", Offset = "0x1779AB0", VA = "0x1779AB0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B1")]
		public LayoutElement ResultsPanel
		{
			[Token(Token = "0x6000690")]
			[Address(RVA = "0x1779AB8", Offset = "0x1779AB8", VA = "0x1779AB8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B2")]
		public Transform CategoryParent
		{
			[Token(Token = "0x6000691")]
			[Address(RVA = "0x1779AC0", Offset = "0x1779AC0", VA = "0x1779AC0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B3")]
		public CategoryElement MainCategoryElementPrefab
		{
			[Token(Token = "0x6000692")]
			[Address(RVA = "0x1779AC8", Offset = "0x1779AC8", VA = "0x1779AC8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B4")]
		public CategoryElement SubCategoryElementPrefab
		{
			[Token(Token = "0x6000693")]
			[Address(RVA = "0x1779AD0", Offset = "0x1779AD0", VA = "0x1779AD0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B5")]
		public ToggleGroup ToggleGroup
		{
			[Token(Token = "0x6000694")]
			[Address(RVA = "0x1779AD8", Offset = "0x1779AD8", VA = "0x1779AD8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B6")]
		public ToggleGroup MainCategoryToggleGroup
		{
			[Token(Token = "0x6000695")]
			[Address(RVA = "0x1779AE0", Offset = "0x1779AE0", VA = "0x1779AE0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B7")]
		public SVGImage SVGImage
		{
			[Token(Token = "0x6000696")]
			[Address(RVA = "0x1779AE8", Offset = "0x1779AE8", VA = "0x1779AE8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B8")]
		public CanvasGroup LeftPanelCanvasGroup
		{
			[Token(Token = "0x6000697")]
			[Address(RVA = "0x1779AF0", Offset = "0x1779AF0", VA = "0x1779AF0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B9")]
		public LocalizedTextMeshProGui ResultsCount
		{
			[Token(Token = "0x6000698")]
			[Address(RVA = "0x1779AF8", Offset = "0x1779AF8", VA = "0x1779AF8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000BA")]
		public GameObject NoResultsText
		{
			[Token(Token = "0x6000699")]
			[Address(RVA = "0x1779B00", Offset = "0x1779B00", VA = "0x1779B00")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600069A")]
		[Address(RVA = "0x1779B08", Offset = "0x1779B08", VA = "0x1779B08")]
		public CadaverBrowserReferences()
		{
		}
	}
	[Token(Token = "0x200012D")]
	public static class CadaverExtensions
	{
		[StructLayout(3)]
		[Token(Token = "0x200012E")]
		[CompilerGenerated]
		private struct <CreateCadavers>d__0<T> : IAsyncStateMachine
		{
			[Token(Token = "0x40006C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40006C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public AsyncTaskMethodBuilder<T> <>t__builder;

			[Token(Token = "0x40006C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public INetworkModuleProviderFactory moduleProviderFactory;

			[Token(Token = "0x40006C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string cadaverObjectId;

			[Token(Token = "0x40006CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public CancellationToken cancellationToken;

			[Token(Token = "0x40006CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private TaskAwaiter<T> <>u__1;

			[Token(Token = "0x600069E")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x600069F")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200012F")]
		[CompilerGenerated]
		private struct <DestroyCadaver>d__1<T> : IAsyncStateMachine
		{
			[Token(Token = "0x40006CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40006CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x40006CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public INetworkModuleProviderFactory moduleProviderFactory;

			[Token(Token = "0x40006CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T cadaverObjectInstance;

			[Token(Token = "0x40006D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public CancellationToken cancellationToken;

			[Token(Token = "0x40006D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x60006A0")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60006A1")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000130")]
		[CompilerGenerated]
		private struct <DestroyCadavers>d__2<T> : IAsyncStateMachine
		{
			[Token(Token = "0x40006D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40006D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x40006D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public INetworkModuleProviderFactory moduleProviderFactory;

			[Token(Token = "0x40006D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IReadOnlyCollection<T> cadaverObjectInstances;

			[Token(Token = "0x40006D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public CancellationToken cancellationToken;

			[Token(Token = "0x40006D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x60006A2")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60006A3")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x600069B")]
		[AsyncStateMachine(typeof(<CreateCadavers>d__0<>))]
		public static Task<T> CreateCadavers<T>(this INetworkModuleProviderFactory moduleProviderFactory, string cadaverObjectId, CancellationToken cancellationToken)
		{
			return null;
		}

		[Token(Token = "0x600069C")]
		[AsyncStateMachine(typeof(<DestroyCadaver>d__1<>))]
		public static Task DestroyCadaver<T>(this INetworkModuleProviderFactory moduleProviderFactory, T cadaverObjectInstance, CancellationToken cancellationToken)
		{
			return null;
		}

		[Token(Token = "0x600069D")]
		[AsyncStateMachine(typeof(<DestroyCadavers>d__2<>))]
		public static Task DestroyCadavers<T>(this INetworkModuleProviderFactory moduleProviderFactory, IReadOnlyCollection<T> cadaverObjectInstances, CancellationToken cancellationToken)
		{
			return null;
		}
	}
	[Token(Token = "0x2000131")]
	public class CadaverInstance : ICadaverInstance
	{
		[Token(Token = "0x170000BB")]
		public string CadaverItemId
		{
			[Token(Token = "0x60006A4")]
			[Address(RVA = "0x1779B10", Offset = "0x1779B10", VA = "0x1779B10", Slot = "4")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60006A5")]
			[Address(RVA = "0x1779B18", Offset = "0x1779B18", VA = "0x1779B18")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170000BC")]
		public CadaverPanelReference CadaverPanelReferences
		{
			[Token(Token = "0x60006A6")]
			[Address(RVA = "0x1779B20", Offset = "0x1779B20", VA = "0x1779B20", Slot = "5")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60006A7")]
			[Address(RVA = "0x1779B28", Offset = "0x1779B28", VA = "0x1779B28")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x60006A8")]
		[Address(RVA = "0x1779B30", Offset = "0x1779B30", VA = "0x1779B30")]
		public CadaverInstance()
		{
		}
	}
	[Token(Token = "0x2000132")]
	public class CadaverModuleProvider : MonoBehaviour
	{
		[StructLayout(3)]
		[Token(Token = "0x2000134")]
		[CompilerGenerated]
		private struct <Awake>d__4 : IAsyncStateMachine
		{
			[Token(Token = "0x40006E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40006E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x40006E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public CadaverModuleProvider <>4__this;

			[Token(Token = "0x40006E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x60006B0")]
			[Address(RVA = "0x1779F40", Offset = "0x1779F40", VA = "0x1779F40", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60006B1")]
			[Address(RVA = "0x177A25C", Offset = "0x177A25C", VA = "0x177A25C", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x40006DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private CadaverObjectFactorySettings _cadaverModuleSettings;

		[Token(Token = "0x40006DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private SerializableCadaverDatabase _serializableCadaverDatabase;

		[Token(Token = "0x40006DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ModuleProviderBehaviour _moduleProviderBehaviour;

		[Token(Token = "0x40006DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly CancellationTokenSource _disposeCancellationTokenSource;

		[Token(Token = "0x60006A9")]
		[Address(RVA = "0x1779B38", Offset = "0x1779B38", VA = "0x1779B38")]
		[AsyncStateMachine(typeof(<Awake>d__4))]
		private void Awake()
		{
		}

		[Token(Token = "0x60006AA")]
		[Address(RVA = "0x1779BF0", Offset = "0x1779BF0", VA = "0x1779BF0")]
		private void RegisterModules(ModuleProvider moduleProvider)
		{
		}

		[Token(Token = "0x60006AB")]
		[Address(RVA = "0x1779DB8", Offset = "0x1779DB8", VA = "0x1779DB8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60006AC")]
		[Address(RVA = "0x1779DCC", Offset = "0x1779DCC", VA = "0x1779DCC")]
		public CadaverModuleProvider()
		{
		}
	}
	[Token(Token = "0x2000135")]
	public class CadaverNetworkModuleProvider : NetworkBehaviour
	{
		[StructLayout(3)]
		[Token(Token = "0x2000136")]
		[CompilerGenerated]
		private struct <LoadClient>d__11 : IAsyncStateMachine
		{
			[Token(Token = "0x40006EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40006EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x40006ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public CadaverNetworkModuleProvider <>4__this;

			[Token(Token = "0x40006EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public CancellationToken cancellationToken;

			[Token(Token = "0x40006EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private ICadaverInstanceFactory<ICadaverInstance> <factory>5__2;

			[Token(Token = "0x40006F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private ISceneManager<int, ICadaverInstance> <sceneManager>5__3;

			[Token(Token = "0x40006F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x40006F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private TaskAwaiter<object> <>u__2;

			[Token(Token = "0x40006F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private KeyValuePair<int, ICadaverInstance>[] <>7__wrap3;

			[Token(Token = "0x40006F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private int <>7__wrap4;

			[Token(Token = "0x40006F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			private int <id>5__6;

			[Token(Token = "0x40006F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			private TaskAwaiter<ICadaverInstance> <>u__3;

			[Token(Token = "0x60006C3")]
			[Address(RVA = "0x177B2BC", Offset = "0x177B2BC", VA = "0x177B2BC", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60006C4")]
			[Address(RVA = "0x177BAC8", Offset = "0x177BAC8", VA = "0x177BAC8", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x40006E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private ModuleProviderBehaviour _singlePlayerModuleProvider;

		[Token(Token = "0x40006E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private ModuleProviderBehaviour _networkModuleProvider;

		[Token(Token = "0x40006E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private NetworkRequestHandler _networkRequestHandler;

		[Token(Token = "0x40006E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private NetworkCadaverObjectsDispatcher _networkCadaverObjectsDispatcher;

		[Token(Token = "0x40006E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private readonly List<IDisposable> _disposables;

		[Token(Token = "0x40006E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private bool _networkModuleProviderInitialized;

		[Token(Token = "0x40006EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private readonly CancellationTokenSource _disposeCancellationTokenSource;

		[Token(Token = "0x170000BD")]
		private IModuleProvider NetworkModuleProvider
		{
			[Token(Token = "0x60006B2")]
			[Address(RVA = "0x177A268", Offset = "0x177A268", VA = "0x177A268")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60006B3")]
		[Address(RVA = "0x177A3D8", Offset = "0x177A3D8", VA = "0x177A3D8", Slot = "10")]
		public override void OnStartClient()
		{
		}

		[Token(Token = "0x60006B4")]
		[Address(RVA = "0x177A4E0", Offset = "0x177A4E0", VA = "0x177A4E0", Slot = "8")]
		public override void OnStartServer()
		{
		}

		[Token(Token = "0x60006B5")]
		[Address(RVA = "0x177A404", Offset = "0x177A404", VA = "0x177A404")]
		[AsyncStateMachine(typeof(<LoadClient>d__11))]
		private void LoadClient(CancellationToken cancellationToken)
		{
		}

		[Token(Token = "0x60006B6")]
		[Address(RVA = "0x177A4E8", Offset = "0x177A4E8", VA = "0x177A4E8")]
		[Command(requiresAuthority = false)]
		private void CmdGetCadaverObjects(byte requestId, [Optional] NetworkConnectionToClient sender)
		{
		}

		[Token(Token = "0x60006B7")]
		[Address(RVA = "0x177A6DC", Offset = "0x177A6DC", VA = "0x177A6DC")]
		[TargetRpc]
		private void TargetGetCadaverObjects(NetworkConnection target, byte requestId, int senderConnectionId, KeyValuePair<int, ICadaverInstance>[] cadavers)
		{
		}

		[Token(Token = "0x60006B8")]
		[Address(RVA = "0x177A2A8", Offset = "0x177A2A8", VA = "0x177A2A8")]
		private void RegisterModules()
		{
		}

		[Token(Token = "0x60006B9")]
		[Address(RVA = "0x177A984", Offset = "0x177A984", VA = "0x177A984")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60006BA")]
		[Address(RVA = "0x177AA8C", Offset = "0x177AA8C", VA = "0x177AA8C")]
		public CadaverNetworkModuleProvider()
		{
		}

		[Token(Token = "0x60006BD")]
		[Address(RVA = "0x177AB70", Offset = "0x177AB70", VA = "0x177AB70")]
		private void MirrorProcessed()
		{
		}

		[Token(Token = "0x60006BE")]
		[Address(RVA = "0x177AB74", Offset = "0x177AB74", VA = "0x177AB74")]
		protected void UserCode_CmdGetCadaverObjects__Byte__NetworkConnectionToClient(byte requestId, NetworkConnectionToClient sender)
		{
		}

		[Token(Token = "0x60006BF")]
		[Address(RVA = "0x177AD78", Offset = "0x177AD78", VA = "0x177AD78")]
		protected static void InvokeUserCode_CmdGetCadaverObjects__Byte__NetworkConnectionToClient(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x60006C0")]
		[Address(RVA = "0x177AEF8", Offset = "0x177AEF8", VA = "0x177AEF8")]
		protected void UserCode_TargetGetCadaverObjects__NetworkConnection__Byte__Int32__KeyValuePair`2[](NetworkConnection target, byte requestId, int senderConnectionId, KeyValuePair<int, ICadaverInstance>[] cadavers)
		{
		}

		[Token(Token = "0x60006C1")]
		[Address(RVA = "0x177AF14", Offset = "0x177AF14", VA = "0x177AF14")]
		protected static void InvokeUserCode_TargetGetCadaverObjects__NetworkConnection__Byte__Int32__KeyValuePair`2[](NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x60006C2")]
		[Address(RVA = "0x177B12C", Offset = "0x177B12C", VA = "0x177B12C")]
		static CadaverNetworkModuleProvider()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000139")]
	public class CadaverObjectFactorySettings
	{
		[Token(Token = "0x40006FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public CadaverPanelReference CadaverPanelPrefab;

		[Token(Token = "0x40006FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform CadaverPanelsParent;

		[Token(Token = "0x40006FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Shader StereoscopicImageShader;

		[Token(Token = "0x60006CA")]
		[Address(RVA = "0x177BCD4", Offset = "0x177BCD4", VA = "0x177BCD4")]
		public CadaverObjectFactorySettings()
		{
		}
	}
	[Token(Token = "0x200013A")]
	public class CadaverObjectFactory : ICadaverInstanceFactory<ICadaverInstance>, ICadaverFactoryEvents<ICadaverInstance>
	{
		[StructLayout(3)]
		[Token(Token = "0x200013B")]
		[CompilerGenerated]
		private struct <Create>d__7 : IAsyncStateMachine
		{
			[Token(Token = "0x4000701")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000702")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder<ICadaverInstance> <>t__builder;

			[Token(Token = "0x4000703")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CadaverObjectFactory <>4__this;

			[Token(Token = "0x4000704")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string cadaverObjectId;

			[Token(Token = "0x4000705")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private CadaverItem <cadaverItem>5__2;

			[Token(Token = "0x4000706")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private Material <material>5__3;

			[Token(Token = "0x4000707")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Sprite <imgL>5__4;

			[Token(Token = "0x4000708")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private Sprite <imgR>5__5;

			[Token(Token = "0x4000709")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private TaskAwaiter<IEnumerable<LoadedAsset<Sprite>>> <>u__1;

			[Token(Token = "0x60006D2")]
			[Address(RVA = "0x177C628", Offset = "0x177C628", VA = "0x177C628", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60006D3")]
			[Address(RVA = "0x177D730", Offset = "0x177D730", VA = "0x177D730", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x200013C")]
		[CompilerGenerated]
		private sealed class <Yield>d__10<T> : IEnumerable<T>, IEnumerable, IEnumerator<T>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400070A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x400070B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private T <>2__current;

			[Token(Token = "0x400070C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>l__initialThreadId;

			[Token(Token = "0x400070D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private T value;

			[Token(Token = "0x400070E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T <>3__value;

			[Token(Token = "0x170000BE")]
			private T System.Collections.Generic.IEnumerator<T>.Current
			{
				[Token(Token = "0x60006D7")]
				[DebuggerHidden]
				get
				{
					return (T)null;
				}
			}

			[Token(Token = "0x170000BF")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60006D9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60006D4")]
			[DebuggerHidden]
			public <Yield>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x60006D5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60006D6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60006D8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x60006DA")]
			[DebuggerHidden]
			private IEnumerator<T> System.Collections.Generic.IEnumerable<T>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x60006DB")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x40006FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly CadaverObjectFactorySettings _factorySettings;

		[Token(Token = "0x40006FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CadaverDatabase _cadaverDatabase;

		[Token(Token = "0x40006FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private IAssetInstanceProvider<Sprite> _assetInstanceProvider;

		[Token(Token = "0x14000004")]
		public event Action<ICadaverInstance> ObjectCreated
		{
			[Token(Token = "0x60006CB")]
			[Address(RVA = "0x177BCDC", Offset = "0x177BCDC", VA = "0x177BCDC", Slot = "7")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60006CC")]
			[Address(RVA = "0x177BD8C", Offset = "0x177BD8C", VA = "0x177BD8C", Slot = "8")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x60006CD")]
		[Address(RVA = "0x1779D58", Offset = "0x1779D58", VA = "0x1779D58")]
		public CadaverObjectFactory(CadaverObjectFactorySettings settings, CadaverDatabase cadaverDatabase, IAssetInstanceProvider<Sprite> assetInstanceProvider)
		{
		}

		[Token(Token = "0x60006CE")]
		[Address(RVA = "0x177BE3C", Offset = "0x177BE3C", VA = "0x177BE3C", Slot = "4")]
		[AsyncStateMachine(typeof(<Create>d__7))]
		public Task<ICadaverInstance> Create(string cadaverObjectId, CancellationToken cancellationToken)
		{
			return null;
		}

		[Token(Token = "0x60006CF")]
		[Address(RVA = "0x177BF6C", Offset = "0x177BF6C", VA = "0x177BF6C", Slot = "5")]
		public Task Destroy(ICadaverInstance cadaverObject, CancellationToken cancellationToken)
		{
			return null;
		}

		[Token(Token = "0x60006D0")]
		[Address(RVA = "0x177C2CC", Offset = "0x177C2CC", VA = "0x177C2CC", Slot = "6")]
		public Task Destroy(IEnumerable<ICadaverInstance> objectsForDestroy, CancellationToken cancellationToken)
		{
			return null;
		}

		[Token(Token = "0x60006D1")]
		[IteratorStateMachine(typeof(<Yield>d__10<>))]
		public static IEnumerable<T> Yield<T>(T value)
		{
			return null;
		}
	}
	[Token(Token = "0x200013D")]
	public class CadaverObjectNetworkFactory<TId, TObj> : IResolver<TObj, TId>, ICadaverInstanceFactory<TObj>, ISceneManager<TId, TObj>, IDisposable where TObj : ICadaverInstance
	{
		[StructLayout(3)]
		[Token(Token = "0x200013E")]
		[CompilerGenerated]
		private struct <DispatcherOnNetworkInstancesDestroyed>d__6 : IAsyncStateMachine
		{
			[Token(Token = "0x4000714")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000715")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4000716")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IEnumerable<TId> ids;

			[Token(Token = "0x4000717")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public CadaverObjectNetworkFactory<TId, TObj> <>4__this;

			[Token(Token = "0x4000718")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private List<TObj> <objects>5__2;

			[Token(Token = "0x4000719")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x60006EB")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60006EC")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200013F")]
		[CompilerGenerated]
		private struct <DispatcherOnNetworkInstanceDestroyed>d__7 : IAsyncStateMachine
		{
			[Token(Token = "0x400071A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x400071B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x400071C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public CadaverObjectNetworkFactory<TId, TObj> <>4__this;

			[Token(Token = "0x400071D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public TId id;

			[Token(Token = "0x400071E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x60006ED")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60006EE")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000140")]
		[CompilerGenerated]
		private struct <DispatcherOnNetworkInstanceCreated>d__8 : IAsyncStateMachine
		{
			[Token(Token = "0x400071F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000720")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4000721")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public CadaverObjectNetworkFactory<TId, TObj> <>4__this;

			[Token(Token = "0x4000722")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string cadaverObjectId;

			[Token(Token = "0x4000723")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public TId id;

			[Token(Token = "0x4000724")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private TaskAwaiter<TObj> <>u__1;

			[Token(Token = "0x60006EF")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60006F0")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000141")]
		[CompilerGenerated]
		private struct <Create>d__11 : IAsyncStateMachine
		{
			[Token(Token = "0x4000725")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000726")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public AsyncTaskMethodBuilder<TObj> <>t__builder;

			[Token(Token = "0x4000727")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public CadaverObjectNetworkFactory<TId, TObj> <>4__this;

			[Token(Token = "0x4000728")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string cadaverObjectId;

			[Token(Token = "0x4000729")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public CancellationToken cancellationToken;

			[Token(Token = "0x400072A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private TId <id>5__2;

			[Token(Token = "0x400072B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private TaskAwaiter<TId> <>u__1;

			[Token(Token = "0x400072C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private TaskAwaiter<TObj> <>u__2;

			[Token(Token = "0x60006F1")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60006F2")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000142")]
		[CompilerGenerated]
		private struct <Destroy>d__12 : IAsyncStateMachine
		{
			[Token(Token = "0x400072D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x400072E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x400072F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public CadaverObjectNetworkFactory<TId, TObj> <>4__this;

			[Token(Token = "0x4000730")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public TObj cadaverObject;

			[Token(Token = "0x4000731")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public CancellationToken cancellationToken;

			[Token(Token = "0x4000732")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x60006F3")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60006F4")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000143")]
		[CompilerGenerated]
		private struct <Destroy>d__13 : IAsyncStateMachine
		{
			[Token(Token = "0x4000733")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000734")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4000735")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IEnumerable<TObj> objectsForSlaughter;

			[Token(Token = "0x4000736")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public CadaverObjectNetworkFactory<TId, TObj> <>4__this;

			[Token(Token = "0x4000737")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public CancellationToken cancellationToken;

			[Token(Token = "0x4000738")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x60006F5")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60006F6")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x400070F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private BidirectionalDictionary<TId, TObj> _cadaverObjects;

		[Token(Token = "0x4000710")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly ICadaverInstanceFactory<TObj> _cadaverObjectFactory;

		[Token(Token = "0x4000711")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly INetworkCadaverObjectsDispatcher<TId> _dispatcher;

		[Token(Token = "0x4000712")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly ISceneManager<TObj> _sceneManager;

		[Token(Token = "0x4000713")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private CancellationTokenSource _cancellationTokenSource;

		[Token(Token = "0x170000C0")]
		public System.Collections.Generic.IReadOnlyDictionary<TId, TObj> Objects
		{
			[Token(Token = "0x60006E5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60006DC")]
		public CadaverObjectNetworkFactory(ICadaverInstanceFactory<TObj> cadaverObjectFactory, INetworkCadaverObjectsDispatcher<TId> dispatcher, ISceneManager<TObj> sceneManager)
		{
		}

		[Token(Token = "0x60006DD")]
		[AsyncStateMachine(typeof(CadaverObjectNetworkFactory<, >.<DispatcherOnNetworkInstancesDestroyed>d__6))]
		private void DispatcherOnNetworkInstancesDestroyed(IEnumerable<TId> ids)
		{
		}

		[Token(Token = "0x60006DE")]
		[AsyncStateMachine(typeof(CadaverObjectNetworkFactory<, >.<DispatcherOnNetworkInstanceDestroyed>d__7))]
		private void DispatcherOnNetworkInstanceDestroyed(TId id)
		{
		}

		[Token(Token = "0x60006DF")]
		[AsyncStateMachine(typeof(CadaverObjectNetworkFactory<, >.<DispatcherOnNetworkInstanceCreated>d__8))]
		public void DispatcherOnNetworkInstanceCreated(TId id, string cadaverObjectId)
		{
		}

		[Token(Token = "0x60006E0")]
		public TId GetId(TObj obj)
		{
			return (TId)null;
		}

		[Token(Token = "0x60006E1")]
		public TObj ResolveFromId(TId id)
		{
			return (TObj)null;
		}

		[Token(Token = "0x60006E2")]
		[AsyncStateMachine(typeof(CadaverObjectNetworkFactory<, >.<Create>d__11))]
		public Task<TObj> Create(string cadaverObjectId, CancellationToken cancellationToken)
		{
			return null;
		}

		[Token(Token = "0x60006E3")]
		[AsyncStateMachine(typeof(CadaverObjectNetworkFactory<, >.<Destroy>d__12))]
		public Task Destroy(TObj cadaverObject, CancellationToken cancellationToken)
		{
			return null;
		}

		[Token(Token = "0x60006E4")]
		[AsyncStateMachine(typeof(CadaverObjectNetworkFactory<, >.<Destroy>d__13))]
		public Task Destroy(IEnumerable<TObj> objectsForSlaughter, CancellationToken cancellationToken)
		{
			return null;
		}

		[Token(Token = "0x60006E6")]
		public void Add(TId id, TObj obj)
		{
		}

		[Token(Token = "0x60006E7")]
		public void Remove(TId id)
		{
		}

		[Token(Token = "0x60006E8")]
		public void Dispose()
		{
		}
	}
	[Token(Token = "0x2000144")]
	public class CadaverPanelReference : MonoBehaviour
	{
		[Token(Token = "0x4000739")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TextMeshProUGUI _labelPrefab;

		[Token(Token = "0x400073A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private TextMeshProUGUI _title;

		[Token(Token = "0x400073B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private TextMeshProUGUI _subTitle;

		[Token(Token = "0x400073C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private TextMeshProUGUI _description;

		[Token(Token = "0x400073D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Image _imageContent;

		[Token(Token = "0x400073E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Image _diagramContent;

		[Token(Token = "0x400073F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Transform _labelsParrentTransform;

		[Token(Token = "0x4000740")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private LayoutElement _descriptionParent;

		[Token(Token = "0x4000741")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private LayoutElement _textsParent;

		[Token(Token = "0x4000742")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private VerticalLayoutGroup _contentVerticalLayoutGroup;

		[Token(Token = "0x4000743")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private RectTransform _panelTransform;

		[Token(Token = "0x4000744")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private RectTransform _grabableHeader;

		[Token(Token = "0x4000745")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private LayoutElement _imagesLayoutElement;

		[Token(Token = "0x4000746")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private Toggle _modeToggle;

		[Token(Token = "0x4000747")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private Toggle _stereoToggle;

		[Token(Token = "0x4000748")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private Toggle _favoriteToggle;

		[Token(Token = "0x4000749")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private Button _closeButton;

		[Token(Token = "0x170000C1")]
		public TextMeshProUGUI LabelPrefab
		{
			[Token(Token = "0x60006F7")]
			[Address(RVA = "0x177D788", Offset = "0x177D788", VA = "0x177D788")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C2")]
		public TextMeshProUGUI Title
		{
			[Token(Token = "0x60006F8")]
			[Address(RVA = "0x177D790", Offset = "0x177D790", VA = "0x177D790")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C3")]
		public TextMeshProUGUI SubTitle
		{
			[Token(Token = "0x60006F9")]
			[Address(RVA = "0x177D798", Offset = "0x177D798", VA = "0x177D798")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C4")]
		public TextMeshProUGUI Description
		{
			[Token(Token = "0x60006FA")]
			[Address(RVA = "0x177D7A0", Offset = "0x177D7A0", VA = "0x177D7A0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C5")]
		public Image Image
		{
			[Token(Token = "0x60006FB")]
			[Address(RVA = "0x177D7A8", Offset = "0x177D7A8", VA = "0x177D7A8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C6")]
		public Image Diagram
		{
			[Token(Token = "0x60006FC")]
			[Address(RVA = "0x177D7B0", Offset = "0x177D7B0", VA = "0x177D7B0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C7")]
		public Transform LabelsParentTransform
		{
			[Token(Token = "0x60006FD")]
			[Address(RVA = "0x177D7B8", Offset = "0x177D7B8", VA = "0x177D7B8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C8")]
		public LayoutElement DescriptionParent
		{
			[Token(Token = "0x60006FE")]
			[Address(RVA = "0x177D7C0", Offset = "0x177D7C0", VA = "0x177D7C0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C9")]
		public LayoutElement TextsParent
		{
			[Token(Token = "0x60006FF")]
			[Address(RVA = "0x177D7C8", Offset = "0x177D7C8", VA = "0x177D7C8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000CA")]
		public VerticalLayoutGroup ContentVerticalLayoutGroup
		{
			[Token(Token = "0x6000700")]
			[Address(RVA = "0x177D7D0", Offset = "0x177D7D0", VA = "0x177D7D0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000CB")]
		public RectTransform PaneRectTransform
		{
			[Token(Token = "0x6000701")]
			[Address(RVA = "0x177D7D8", Offset = "0x177D7D8", VA = "0x177D7D8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000CC")]
		public RectTransform GrabableHeader
		{
			[Token(Token = "0x6000702")]
			[Address(RVA = "0x177D7E0", Offset = "0x177D7E0", VA = "0x177D7E0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000CD")]
		public LayoutElement ImagesLayoutElement
		{
			[Token(Token = "0x6000703")]
			[Address(RVA = "0x177D7E8", Offset = "0x177D7E8", VA = "0x177D7E8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000CE")]
		public Toggle ModeToggle
		{
			[Token(Token = "0x6000704")]
			[Address(RVA = "0x177D7F0", Offset = "0x177D7F0", VA = "0x177D7F0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000CF")]
		public Toggle StereoToggle
		{
			[Token(Token = "0x6000705")]
			[Address(RVA = "0x177D7F8", Offset = "0x177D7F8", VA = "0x177D7F8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D0")]
		public Button CloseButton
		{
			[Token(Token = "0x6000706")]
			[Address(RVA = "0x177D800", Offset = "0x177D800", VA = "0x177D800")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000707")]
		[Address(RVA = "0x177D808", Offset = "0x177D808", VA = "0x177D808")]
		public CadaverPanelReference()
		{
		}
	}
	[Token(Token = "0x2000145")]
	public interface ICadaverInstance
	{
		[Token(Token = "0x170000D1")]
		string CadaverItemId
		{
			[Token(Token = "0x6000708")]
			get;
		}

		[Token(Token = "0x170000D2")]
		CadaverPanelReference CadaverPanelReferences
		{
			[Token(Token = "0x6000709")]
			get;
		}
	}
	[Token(Token = "0x2000146")]
	public interface ICadaverInstanceFactory<TObj>
	{
		[Token(Token = "0x600070A")]
		Task<TObj> Create(string cadaverObjectId, CancellationToken cancellationToken);

		[Token(Token = "0x600070B")]
		Task Destroy(TObj cadaverObject, CancellationToken cancellationToken);

		[Token(Token = "0x600070C")]
		Task Destroy(IEnumerable<TObj> objectsForDestroy, CancellationToken cancellationToken);
	}
	[Token(Token = "0x2000147")]
	public interface ICadaverFactoryEvents<out TObj>
	{
		[Token(Token = "0x14000005")]
		event Action<TObj> ObjectCreated;
	}
	[Token(Token = "0x2000148")]
	public interface INetworkCadaverObjectsDispatcher<T>
	{
		[Token(Token = "0x14000006")]
		event Action<T, string> NetworkInstanceCreated;

		[Token(Token = "0x14000007")]
		event Action<T> NetworkInstanceDestroyed;

		[Token(Token = "0x14000008")]
		event Action<IEnumerable<T>> NetworkInstancesDestroyed;

		[Token(Token = "0x600070F")]
		Task<T> CreateInstance(string cadaverObjectId, CancellationToken cancellationToken);

		[Token(Token = "0x6000710")]
		Task DestroyInstance(T id, CancellationToken cancellationToken);

		[Token(Token = "0x6000711")]
		Task DestroyInstances(IEnumerable<T> ids, CancellationToken cancellationToken);
	}
	[Token(Token = "0x2000149")]
	public class NetworkCadaverObjectsDispatcher : NetworkBehaviour, INetworkCadaverObjectsDispatcher<int>
	{
		[StructLayout(3)]
		[Token(Token = "0x200014D")]
		[CompilerGenerated]
		private struct <CreateInstance>d__18 : IAsyncStateMachine
		{
			[Token(Token = "0x4000757")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000758")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder<int> <>t__builder;

			[Token(Token = "0x4000759")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public NetworkCadaverObjectsDispatcher <>4__this;

			[Token(Token = "0x400075A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string cadaverObjectId;

			[Token(Token = "0x400075B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public CancellationToken cancellationToken;

			[Token(Token = "0x400075C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private TaskAwaiter<object> <>u__1;

			[Token(Token = "0x6000743")]
			[Address(RVA = "0x17807C8", Offset = "0x17807C8", VA = "0x17807C8", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000744")]
			[Address(RVA = "0x1780AC8", Offset = "0x1780AC8", VA = "0x1780AC8", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x400074A")]
		private const int MinCadaverObjectId = 0;

		[Token(Token = "0x400074B")]
		private const int MaxCadaverObjectId = 10000;

		[Token(Token = "0x400074C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int _lastCadaverObjectId;

		[Token(Token = "0x400074D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private NetworkRequestHandler _networkRequestHandler;

		[Token(Token = "0x14000009")]
		public event Action<int, string> NetworkInstanceCreated
		{
			[Token(Token = "0x600071D")]
			[Address(RVA = "0x177E15C", Offset = "0x177E15C", VA = "0x177E15C", Slot = "19")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x600071E")]
			[Address(RVA = "0x177E20C", Offset = "0x177E20C", VA = "0x177E20C", Slot = "20")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400000A")]
		public event Action<int> NetworkInstanceDestroyed
		{
			[Token(Token = "0x600071F")]
			[Address(RVA = "0x177E2BC", Offset = "0x177E2BC", VA = "0x177E2BC", Slot = "21")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6000720")]
			[Address(RVA = "0x177E36C", Offset = "0x177E36C", VA = "0x177E36C", Slot = "22")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400000B")]
		public event Action<IEnumerable<int>> NetworkInstancesDestroyed
		{
			[Token(Token = "0x6000721")]
			[Address(RVA = "0x177E41C", Offset = "0x177E41C", VA = "0x177E41C", Slot = "23")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6000722")]
			[Address(RVA = "0x177E4CC", Offset = "0x177E4CC", VA = "0x177E4CC", Slot = "24")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6000718")]
		[Address(RVA = "0x177D810", Offset = "0x177D810", VA = "0x177D810", Slot = "18")]
		public Task DestroyInstances(IEnumerable<int> ids, CancellationToken cancellationToken)
		{
			return null;
		}

		[Token(Token = "0x6000719")]
		[Address(RVA = "0x177D904", Offset = "0x177D904", VA = "0x177D904")]
		[Command(requiresAuthority = false)]
		private void CmdDestroyInstances(byte requestId, IEnumerable<int> ids, [Optional] NetworkConnectionToClient sender)
		{
		}

		[Token(Token = "0x600071A")]
		[Address(RVA = "0x177DB14", Offset = "0x177DB14", VA = "0x177DB14")]
		[ClientRpc]
		private void RpcDestroyInstances(byte requestId, int senderConnectionId, IEnumerable<int> ids)
		{
		}

		[Token(Token = "0x600071B")]
		[Address(RVA = "0x177DD38", Offset = "0x177DD38", VA = "0x177DD38")]
		[Command(requiresAuthority = false)]
		private void CmdCreateId(byte requestId, [Optional] NetworkConnectionToClient sender)
		{
		}

		[Token(Token = "0x600071C")]
		[Address(RVA = "0x177DF2C", Offset = "0x177DF2C", VA = "0x177DF2C")]
		[TargetRpc]
		private void TargetCreateId(NetworkConnection target, byte requestId, int connectionId, int id)
		{
		}

		[Token(Token = "0x6000723")]
		[Address(RVA = "0x177E57C", Offset = "0x177E57C", VA = "0x177E57C", Slot = "16")]
		[AsyncStateMachine(typeof(<CreateInstance>d__18))]
		public Task<int> CreateInstance(string cadaverObjectId, CancellationToken cancellationToken)
		{
			return null;
		}

		[Token(Token = "0x6000724")]
		[Address(RVA = "0x177E6C0", Offset = "0x177E6C0", VA = "0x177E6C0", Slot = "17")]
		public Task DestroyInstance(int id, CancellationToken cancellationToken)
		{
			return null;
		}

		[Token(Token = "0x6000725")]
		[Address(RVA = "0x177E7B4", Offset = "0x177E7B4", VA = "0x177E7B4")]
		[Command(requiresAuthority = false)]
		private void CmdCreateInstance(byte requestId, string cadaverObjectId, [Optional] NetworkConnectionToClient sender)
		{
		}

		[Token(Token = "0x6000726")]
		[Address(RVA = "0x177E9C4", Offset = "0x177E9C4", VA = "0x177E9C4")]
		[ClientRpc]
		private void RpcCreateInstance(byte requestId, int senderConnectionId, string cadaverObjectId, int id)
		{
		}

		[Token(Token = "0x6000727")]
		[Address(RVA = "0x177EC04", Offset = "0x177EC04", VA = "0x177EC04")]
		[Command(requiresAuthority = false)]
		private void CmdDestroyInstance(byte requestId, int id, [Optional] NetworkConnectionToClient sender)
		{
		}

		[Token(Token = "0x6000728")]
		[Address(RVA = "0x177EE14", Offset = "0x177EE14", VA = "0x177EE14")]
		[ClientRpc]
		private void RpcDestroyInstance(byte requestId, int senderConnectionId, int id)
		{
		}

		[Token(Token = "0x6000729")]
		[Address(RVA = "0x177F038", Offset = "0x177F038", VA = "0x177F038")]
		[Server]
		private bool ServerHasAuthority(NetworkConnectionToClient sender)
		{
			return default(bool);
		}

		[Token(Token = "0x600072A")]
		[Address(RVA = "0x177F114", Offset = "0x177F114", VA = "0x177F114")]
		public NetworkCadaverObjectsDispatcher()
		{
		}

		[Token(Token = "0x600072B")]
		[Address(RVA = "0x177F11C", Offset = "0x177F11C", VA = "0x177F11C")]
		private void MirrorProcessed()
		{
		}

		[Token(Token = "0x600072C")]
		[Address(RVA = "0x177F120", Offset = "0x177F120", VA = "0x177F120")]
		protected void UserCode_CmdDestroyInstances__Byte__IEnumerable`1__NetworkConnectionToClient(byte requestId, IEnumerable<int> ids, NetworkConnectionToClient sender)
		{
		}

		[Token(Token = "0x600072D")]
		[Address(RVA = "0x177F190", Offset = "0x177F190", VA = "0x177F190")]
		protected static void InvokeUserCode_CmdDestroyInstances__Byte__IEnumerable`1__NetworkConnectionToClient(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x600072E")]
		[Address(RVA = "0x177F320", Offset = "0x177F320", VA = "0x177F320")]
		protected void UserCode_RpcDestroyInstances__Byte__Int32__IEnumerable`1(byte requestId, int senderConnectionId, IEnumerable<int> ids)
		{
		}

		[Token(Token = "0x600072F")]
		[Address(RVA = "0x177F424", Offset = "0x177F424", VA = "0x177F424")]
		protected static void InvokeUserCode_RpcDestroyInstances__Byte__Int32__IEnumerable`1(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x6000730")]
		[Address(RVA = "0x177F58C", Offset = "0x177F58C", VA = "0x177F58C")]
		protected void UserCode_CmdCreateId__Byte__NetworkConnectionToClient(byte requestId, NetworkConnectionToClient sender)
		{
		}

		[Token(Token = "0x6000731")]
		[Address(RVA = "0x177F608", Offset = "0x177F608", VA = "0x177F608")]
		protected static void InvokeUserCode_CmdCreateId__Byte__NetworkConnectionToClient(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x6000732")]
		[Address(RVA = "0x177F788", Offset = "0x177F788", VA = "0x177F788")]
		protected void UserCode_TargetCreateId__NetworkConnection__Byte__Int32__Int32(NetworkConnection target, byte requestId, int connectionId, int id)
		{
		}

		[Token(Token = "0x6000733")]
		[Address(RVA = "0x177F814", Offset = "0x177F814", VA = "0x177F814")]
		protected static void InvokeUserCode_TargetCreateId__NetworkConnection__Byte__Int32__Int32(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x6000734")]
		[Address(RVA = "0x177F9BC", Offset = "0x177F9BC", VA = "0x177F9BC")]
		protected void UserCode_CmdCreateInstance__Byte__String__NetworkConnectionToClient(byte requestId, string cadaverObjectId, NetworkConnectionToClient sender)
		{
		}

		[Token(Token = "0x6000735")]
		[Address(RVA = "0x177FA48", Offset = "0x177FA48", VA = "0x177FA48")]
		protected static void InvokeUserCode_CmdCreateInstance__Byte__String__NetworkConnectionToClient(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x6000736")]
		[Address(RVA = "0x177FBD8", Offset = "0x177FBD8", VA = "0x177FBD8")]
		protected void UserCode_RpcCreateInstance__Byte__Int32__String__Int32(byte requestId, int senderConnectionId, string cadaverObjectId, int id)
		{
		}

		[Token(Token = "0x6000737")]
		[Address(RVA = "0x177FD2C", Offset = "0x177FD2C", VA = "0x177FD2C")]
		protected static void InvokeUserCode_RpcCreateInstance__Byte__Int32__String__Int32(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x6000738")]
		[Address(RVA = "0x177FEA8", Offset = "0x177FEA8", VA = "0x177FEA8")]
		protected void UserCode_CmdDestroyInstance__Byte__Int32__NetworkConnectionToClient(byte requestId, int id, NetworkConnectionToClient sender)
		{
		}

		[Token(Token = "0x6000739")]
		[Address(RVA = "0x177FF18", Offset = "0x177FF18", VA = "0x177FF18")]
		protected static void InvokeUserCode_CmdDestroyInstance__Byte__Int32__NetworkConnectionToClient(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x600073A")]
		[Address(RVA = "0x17800A8", Offset = "0x17800A8", VA = "0x17800A8")]
		protected void UserCode_RpcDestroyInstance__Byte__Int32__Int32(byte requestId, int senderConnectionId, int id)
		{
		}

		[Token(Token = "0x600073B")]
		[Address(RVA = "0x17801A4", Offset = "0x17801A4", VA = "0x17801A4")]
		protected static void InvokeUserCode_RpcDestroyInstance__Byte__Int32__Int32(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x600073C")]
		[Address(RVA = "0x178030C", Offset = "0x178030C", VA = "0x178030C")]
		static NetworkCadaverObjectsDispatcher()
		{
		}
	}
	[Token(Token = "0x2000151")]
	public static class CadaverDispatcherSerializer
	{
		[Token(Token = "0x600074B")]
		public static void WriteArray2D<T>(this NetworkWriter writer, T[][] array)
		{
		}

		[Token(Token = "0x600074C")]
		public static T[][] ReadArray2D<T>(this NetworkReader reader)
		{
			return null;
		}

		[Token(Token = "0x600074D")]
		[Address(RVA = "0x1780BB4", Offset = "0x1780BB4", VA = "0x1780BB4")]
		public static void WriteCadaverObjectData(this NetworkWriter writer, ICadaverInstance cadaverObjectData)
		{
		}

		[Token(Token = "0x600074E")]
		[Address(RVA = "0x1780C90", Offset = "0x1780C90", VA = "0x1780C90")]
		public static void WriteKeyValuePairIdCadaverObjectData(this NetworkWriter writer, KeyValuePair<int, ICadaverInstance> data)
		{
		}

		[Token(Token = "0x600074F")]
		[Address(RVA = "0x177A908", Offset = "0x177A908", VA = "0x177A908")]
		public static void WriteKeyValuePairIdCadaverObjectDataArray(this NetworkWriter writer, KeyValuePair<int, ICadaverInstance>[] data)
		{
		}

		[Token(Token = "0x6000750")]
		[Address(RVA = "0x1780D20", Offset = "0x1780D20", VA = "0x1780D20")]
		public static void WriteIEnumerableInt(this NetworkWriter writer, IEnumerable<int> data)
		{
		}

		[Token(Token = "0x6000751")]
		[Address(RVA = "0x1780DC4", Offset = "0x1780DC4", VA = "0x1780DC4")]
		public static ICadaverInstance ReadCadaverObjectData(this NetworkReader reader)
		{
			return null;
		}

		[Token(Token = "0x6000752")]
		[Address(RVA = "0x1780E64", Offset = "0x1780E64", VA = "0x1780E64")]
		public static KeyValuePair<int, ICadaverInstance> ReadKeyValuePairIdCadaverObjectData(this NetworkReader reader)
		{
			return default(KeyValuePair<int, ICadaverInstance>);
		}

		[Token(Token = "0x6000753")]
		[Address(RVA = "0x177B0C0", Offset = "0x177B0C0", VA = "0x177B0C0")]
		public static KeyValuePair<int, ICadaverInstance>[] ReadKeyValuePairIdCadaverObjectDataArray(this NetworkReader reader)
		{
			return null;
		}

		[Token(Token = "0x6000754")]
		[Address(RVA = "0x1780F04", Offset = "0x1780F04", VA = "0x1780F04")]
		public static IEnumerable<int> ReadIEnumerableInt(this NetworkReader reader)
		{
			return null;
		}
	}
}
namespace Cadaver.Model
{
	[Serializable]
	[Token(Token = "0x2000152")]
	public class CadaverObjectModel
	{
		[Token(Token = "0x4000764")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private string _cadaverItemId;

		[Token(Token = "0x4000765")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool _stereoMode;

		[Token(Token = "0x4000766")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[SerializeField]
		private bool _detailMode;

		[Token(Token = "0x4000767")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private SerializablePoseData _poseData;

		[Token(Token = "0x170000D3")]
		public bool StereoMode
		{
			[Token(Token = "0x6000755")]
			[Address(RVA = "0x1780F70", Offset = "0x1780F70", VA = "0x1780F70")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000756")]
			[Address(RVA = "0x1780F78", Offset = "0x1780F78", VA = "0x1780F78")]
			set
			{
			}
		}

		[Token(Token = "0x170000D4")]
		public bool DetailMode
		{
			[Token(Token = "0x6000757")]
			[Address(RVA = "0x1780F84", Offset = "0x1780F84", VA = "0x1780F84")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000758")]
			[Address(RVA = "0x1780F8C", Offset = "0x1780F8C", VA = "0x1780F8C")]
			set
			{
			}
		}

		[Token(Token = "0x170000D5")]
		public string CadaverItemId
		{
			[Token(Token = "0x6000759")]
			[Address(RVA = "0x1780F98", Offset = "0x1780F98", VA = "0x1780F98")]
			get
			{
				return null;
			}
			[Token(Token = "0x600075A")]
			[Address(RVA = "0x1780FA0", Offset = "0x1780FA0", VA = "0x1780FA0")]
			set
			{
			}
		}

		[Token(Token = "0x170000D6")]
		public SerializablePoseData PoseData
		{
			[Token(Token = "0x600075B")]
			[Address(RVA = "0x1780FA8", Offset = "0x1780FA8", VA = "0x1780FA8")]
			get
			{
				return default(SerializablePoseData);
			}
			[Token(Token = "0x600075C")]
			[Address(RVA = "0x1780FC0", Offset = "0x1780FC0", VA = "0x1780FC0")]
			set
			{
			}
		}

		[Token(Token = "0x600075D")]
		[Address(RVA = "0x1780FD8", Offset = "0x1780FD8", VA = "0x1780FD8")]
		public CadaverObjectModel()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000153")]
	public class CadaverObjectsModel
	{
		[Token(Token = "0x4000768")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private CadaverObjectModel[] _objectModels;

		[Token(Token = "0x170000D7")]
		public CadaverObjectModel[] GetObjectModels
		{
			[Token(Token = "0x600075F")]
			[Address(RVA = "0x17814B8", Offset = "0x17814B8", VA = "0x17814B8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600075E")]
		[Address(RVA = "0x1780FE0", Offset = "0x1780FE0", VA = "0x1780FE0")]
		public CadaverObjectsModel(List<ICadaverInstance> objectsData)
		{
		}
	}
}
namespace _2D.Presenters
{
	[Token(Token = "0x2000154")]
	public class UiPresenter : MonoBehaviour
	{
		[Token(Token = "0x4000769")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[Header("Buttons")]
		private Button _logOut;

		[Token(Token = "0x400076A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[Header("Toggle")]
		private Toggle _infoMonitorToggle;

		[Token(Token = "0x400076B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Header("Other")]
		[SerializeField]
		private Text _labelTextPrimary;

		[Token(Token = "0x400076C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Text _labelTextSecondary;

		[Token(Token = "0x400076D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private TextMeshProUGUI _detailText;

		[Token(Token = "0x400076E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private RectTransform _infoMonitor;

		[Token(Token = "0x400076F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private RectTransform _bottomPanel;

		[Token(Token = "0x4000770")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private RectTransform _infoPanelMask;

		[Token(Token = "0x4000771")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Scrollbar _infoMonitorScrollBar;

		[Token(Token = "0x4000772")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Image _scrollBarHandle;

		[Token(Token = "0x4000773")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Image _labelImage;

		[Token(Token = "0x4000774")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[Header("Multisystems")]
		private Vector3 _bottomPanelOnPos;

		[Token(Token = "0x4000775")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private Vector3 _bottomPanelOffPos;

		[Token(Token = "0x4000776")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Vector2 _infoPanelOffPos;

		[Token(Token = "0x4000777")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Vector2 _infoPanelMidPos;

		[Token(Token = "0x4000778")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Vector2 _infoPanelOnPos;

		[Token(Token = "0x400077A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private CompositeDisposable _presenterDisposable;

		[Token(Token = "0x400077B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private CompositeDisposable _uiDisposable;

		[Token(Token = "0x400077C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private readonly CompositeDisposable _disposable;

		[Token(Token = "0x170000D8")]
		public bool CenterEnabled
		{
			[Token(Token = "0x6000760")]
			[Address(RVA = "0x17814C0", Offset = "0x17814C0", VA = "0x17814C0")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000761")]
			[Address(RVA = "0x17814C8", Offset = "0x17814C8", VA = "0x17814C8")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6000762")]
		[Address(RVA = "0x17814D4", Offset = "0x17814D4", VA = "0x17814D4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000763")]
		[Address(RVA = "0x1781594", Offset = "0x1781594", VA = "0x1781594")]
		private void Start()
		{
		}

		[Token(Token = "0x6000764")]
		[Address(RVA = "0x1781A5C", Offset = "0x1781A5C", VA = "0x1781A5C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000765")]
		[Address(RVA = "0x1781598", Offset = "0x1781598", VA = "0x1781598")]
		private void InitUiRx()
		{
		}

		[Token(Token = "0x6000766")]
		[Address(RVA = "0x1781A78", Offset = "0x1781A78", VA = "0x1781A78")]
		public Tween EnablePanel(RectTransform panel, Vector2 position, bool val = true, float duration = 0.5f)
		{
			return null;
		}

		[Token(Token = "0x6000767")]
		[Address(RVA = "0x1781B58", Offset = "0x1781B58", VA = "0x1781B58")]
		public UiPresenter()
		{
		}
	}
}
namespace _2D.Ui
{
	[Token(Token = "0x2000156")]
	public class ObserverUIManager : DisposableMonoBehaviour
	{
		[Token(Token = "0x4000781")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private BoolReactiveProperty _isHorizontal;

		[Token(Token = "0x4000782")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private BackgroundImageController _backgroundImageController;

		[Token(Token = "0x4000783")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private RectTransform _verticalSafaArea;

		[Token(Token = "0x4000784")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private RectTransform _horizontalSaveArea;

		[Token(Token = "0x4000785")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private RectTransform _infoMonitorPanel;

		[Token(Token = "0x4000786")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private RectTransform _logoutButton;

		[Token(Token = "0x4000787")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Vector2 _logoutButtonPosition;

		[Token(Token = "0x600076F")]
		[Address(RVA = "0x1781DD4", Offset = "0x1781DD4", VA = "0x1781DD4")]
		private void Start()
		{
		}

		[Token(Token = "0x6000770")]
		[Address(RVA = "0x1782010", Offset = "0x1782010", VA = "0x1782010")]
		private void SetInfoMonitorParent(bool isHorizontal)
		{
		}

		[Token(Token = "0x6000771")]
		[Address(RVA = "0x178213C", Offset = "0x178213C", VA = "0x178213C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000772")]
		[Address(RVA = "0x178219C", Offset = "0x178219C", VA = "0x178219C")]
		public ObserverUIManager()
		{
		}
	}
}
namespace _2D.UI
{
	[Token(Token = "0x2000157")]
	public class BackgroundImageController : MonoBehaviour
	{
		[Token(Token = "0x4000788")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Sprite _phoneBackgroundSprite;

		[Token(Token = "0x4000789")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Sprite _tabletBackgroundSprite;

		[Token(Token = "0x400078A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Image _backgroundImage;

		[Token(Token = "0x6000775")]
		[Address(RVA = "0x178325C", Offset = "0x178325C", VA = "0x178325C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000776")]
		[Address(RVA = "0x178327C", Offset = "0x178327C", VA = "0x178327C")]
		public void SetImageBasedOnOrientation(bool isHorizontal)
		{
		}

		[Token(Token = "0x6000777")]
		[Address(RVA = "0x17832B0", Offset = "0x17832B0", VA = "0x17832B0")]
		public BackgroundImageController()
		{
		}
	}
	[Token(Token = "0x2000158")]
	public class LoadingSpriteAnimation : MonoBehaviour
	{
		[Token(Token = "0x400078B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Image _image;

		[Token(Token = "0x400078C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Range(0.01f, 10f)]
		[SerializeField]
		private float _speed;

		[Token(Token = "0x400078D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Sequence _imageSequence;

		[Token(Token = "0x400078E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Sequence _scaleSequence;

		[Token(Token = "0x6000778")]
		[Address(RVA = "0x17832B8", Offset = "0x17832B8", VA = "0x17832B8")]
		private void Update()
		{
		}

		[Token(Token = "0x6000779")]
		[Address(RVA = "0x178336C", Offset = "0x178336C", VA = "0x178336C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600077A")]
		[Address(RVA = "0x17833E8", Offset = "0x17833E8", VA = "0x17833E8")]
		[ContextMenu("StartAnimation")]
		public void StartAnimation()
		{
		}

		[Token(Token = "0x600077B")]
		[Address(RVA = "0x1783370", Offset = "0x1783370", VA = "0x1783370")]
		[ContextMenu("StopAnimation")]
		public void StopAnimation()
		{
		}

		[Token(Token = "0x600077C")]
		[Address(RVA = "0x17836A4", Offset = "0x17836A4", VA = "0x17836A4")]
		public LoadingSpriteAnimation()
		{
		}
	}
	[Token(Token = "0x2000159")]
	public class LoginView : MonoBehaviour
	{
		[Token(Token = "0x400078F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private InputField _issuerInputField;

		[Token(Token = "0x4000790")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private InputField _keyInputField;

		[Token(Token = "0x4000791")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private InputField _usernameInputField;

		[Token(Token = "0x4000792")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Button _loginButton;

		[Token(Token = "0x4000793")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Button _closeButton;

		[Token(Token = "0x170000D9")]
		public string Issuer
		{
			[Token(Token = "0x600077F")]
			[Address(RVA = "0x1783724", Offset = "0x1783724", VA = "0x1783724")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000DA")]
		public string Key
		{
			[Token(Token = "0x6000780")]
			[Address(RVA = "0x1783740", Offset = "0x1783740", VA = "0x1783740")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000DB")]
		public string Username
		{
			[Token(Token = "0x6000781")]
			[Address(RVA = "0x178375C", Offset = "0x178375C", VA = "0x178375C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000DC")]
		public Button LoginButton
		{
			[Token(Token = "0x6000782")]
			[Address(RVA = "0x1783778", Offset = "0x1783778", VA = "0x1783778")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000DD")]
		public Button CloseButton
		{
			[Token(Token = "0x6000783")]
			[Address(RVA = "0x1783780", Offset = "0x1783780", VA = "0x1783780")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000784")]
		[Address(RVA = "0x1783788", Offset = "0x1783788", VA = "0x1783788")]
		public LoginView()
		{
		}
	}
	[Token(Token = "0x200015A")]
	public class ObserverMatchmakerView : MonoBehaviour
	{
		[Token(Token = "0x4000794")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Text _text;

		[Token(Token = "0x4000795")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private LoadingSpriteAnimation _loadingSpriteAnimation;

		[Token(Token = "0x4000796")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform _content;

		[Token(Token = "0x4000797")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject _serverFieldPrefab;

		[Token(Token = "0x4000798")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Transform _connectionPanel;

		[Token(Token = "0x4000799")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Text _noServersFoundText;

		[Token(Token = "0x6000785")]
		[Address(RVA = "0x1783790", Offset = "0x1783790", VA = "0x1783790")]
		public void OnStateChanged(AnatomyNetworkManager.State state)
		{
		}

		[Token(Token = "0x6000786")]
		[Address(RVA = "0x17839C4", Offset = "0x17839C4", VA = "0x17839C4")]
		private void DisplayInfo(string text)
		{
		}

		[Token(Token = "0x6000787")]
		[Address(RVA = "0x1783994", Offset = "0x1783994", VA = "0x1783994")]
		private void ToggleConnectionPanel(bool value)
		{
		}

		[Token(Token = "0x6000788")]
		[Address(RVA = "0x1783A24", Offset = "0x1783A24", VA = "0x1783A24")]
		public void DisplayServerInfos(IServerInfo[] serverInfos, Action<IServerInfo> onServerSelected)
		{
		}

		[Token(Token = "0x6000789")]
		[Address(RVA = "0x1784154", Offset = "0x1784154", VA = "0x1784154")]
		public ObserverMatchmakerView()
		{
		}
	}
	[Token(Token = "0x200015D")]
	public class ServerField : MonoBehaviour
	{
		[Token(Token = "0x400079D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TextMeshProUGUI _nameText;

		[Token(Token = "0x400079E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private TextMeshProUGUI _seats;

		[Token(Token = "0x400079F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private TextMeshProUGUI _sessionTypeText;

		[Token(Token = "0x40007A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Toggle _toggle;

		[Token(Token = "0x40007A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private byte _activeConnections;

		[Token(Token = "0x40007A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		private byte _maxConnections;

		[Token(Token = "0x40007A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Uri Uri;

		[Token(Token = "0x170000DE")]
		public string Name
		{
			[Token(Token = "0x600078D")]
			[Address(RVA = "0x1784198", Offset = "0x1784198", VA = "0x1784198")]
			set
			{
			}
		}

		[Token(Token = "0x170000DF")]
		public string ServerType
		{
			[Token(Token = "0x600078E")]
			[Address(RVA = "0x17841BC", Offset = "0x17841BC", VA = "0x17841BC")]
			set
			{
			}
		}

		[Token(Token = "0x170000E0")]
		public byte ActiveConnections
		{
			[Token(Token = "0x600078F")]
			[Address(RVA = "0x178414C", Offset = "0x178414C", VA = "0x178414C")]
			set
			{
			}
		}

		[Token(Token = "0x170000E1")]
		public byte MaxConnections
		{
			[Token(Token = "0x6000790")]
			[Address(RVA = "0x1784144", Offset = "0x1784144", VA = "0x1784144")]
			set
			{
			}
		}

		[Token(Token = "0x170000E2")]
		public Toggle ServerToggle
		{
			[Token(Token = "0x6000791")]
			[Address(RVA = "0x17842E4", Offset = "0x17842E4", VA = "0x17842E4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000792")]
		[Address(RVA = "0x17841E0", Offset = "0x17841E0", VA = "0x17841E0")]
		private void SetUsersText()
		{
		}

		[Token(Token = "0x6000793")]
		[Address(RVA = "0x17842EC", Offset = "0x17842EC", VA = "0x17842EC")]
		public ServerField()
		{
		}
	}
	[Token(Token = "0x200015E")]
	public class ToggleWithoutDeselect : Toggle
	{
		[Token(Token = "0x6000794")]
		[Address(RVA = "0x17842F4", Offset = "0x17842F4", VA = "0x17842F4", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000795")]
		[Address(RVA = "0x17843A0", Offset = "0x17843A0", VA = "0x17843A0")]
		private void OnValueChanged(bool value)
		{
		}

		[Token(Token = "0x6000796")]
		[Address(RVA = "0x178445C", Offset = "0x178445C", VA = "0x178445C", Slot = "37")]
		public override void OnDeselect(BaseEventData eventData)
		{
		}

		[Token(Token = "0x6000797")]
		[Address(RVA = "0x1784470", Offset = "0x1784470", VA = "0x1784470")]
		public ToggleWithoutDeselect()
		{
		}
	}
}
namespace ObjectSpawner
{
	[Token(Token = "0x200015F")]
	public struct BakeJob : IJobParallelFor
	{
		[Token(Token = "0x40007A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private NativeArray<int> _meshIds;

		[Token(Token = "0x6000798")]
		[Address(RVA = "0x1784478", Offset = "0x1784478", VA = "0x1784478")]
		public BakeJob(NativeArray<int> meshIds)
		{
		}

		[Token(Token = "0x6000799")]
		[Address(RVA = "0x1784480", Offset = "0x1784480", VA = "0x1784480", Slot = "4")]
		public void Execute(int index)
		{
		}
	}
	[Token(Token = "0x2000160")]
	public class AnatomyAssetPreloader : MonoBehaviour
	{
		[Token(Token = "0x2000161")]
		public enum PreloadMethod
		{
			[Token(Token = "0x40007AC")]
			Disabled,
			[Token(Token = "0x40007AD")]
			FirstAssetOnly,
			[Token(Token = "0x40007AE")]
			All
		}

		[Token(Token = "0x2000162")]
		public class Parameters
		{
			[Token(Token = "0x40007AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public EducationLevel EducationLevel;

			[Token(Token = "0x40007B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public PreloadMethod MeshPreloadMethod;

			[Token(Token = "0x40007B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public PreloadMethod MaterialPreloadMethod;

			[Token(Token = "0x40007B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public bool BakeMeshes;

			[Token(Token = "0x60007A6")]
			[Address(RVA = "0x17850F8", Offset = "0x17850F8", VA = "0x17850F8")]
			public Parameters()
			{
			}
		}

		[Token(Token = "0x2000163")]
		public readonly struct JobHandleAwaiter : INotifyCompletion
		{
			[Token(Token = "0x40007B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly JobHandle _jobHandle;

			[Token(Token = "0x170000E5")]
			public bool IsCompleted
			{
				[Token(Token = "0x60007A9")]
				[Address(RVA = "0x1785114", Offset = "0x1785114", VA = "0x1785114")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x60007A7")]
			[Address(RVA = "0x1785100", Offset = "0x1785100", VA = "0x1785100")]
			public JobHandleAwaiter(JobHandle jobHandle)
			{
			}

			[Token(Token = "0x60007A8")]
			[Address(RVA = "0x1785108", Offset = "0x1785108", VA = "0x1785108")]
			public JobHandleAwaiter GetAwaiter()
			{
				return default(JobHandleAwaiter);
			}

			[Token(Token = "0x60007AA")]
			[Address(RVA = "0x1785140", Offset = "0x1785140", VA = "0x1785140", Slot = "4")]
			public void OnCompleted(Action continuation)
			{
			}

			[Token(Token = "0x60007AB")]
			[Address(RVA = "0x1785184", Offset = "0x1785184", VA = "0x1785184")]
			public void GetResult()
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000164")]
		[CompilerGenerated]
		private struct <Preload>d__14 : IAsyncStateMachine
		{
			[Token(Token = "0x40007B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40007B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x40007B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public AnatomyAssetPreloader <>4__this;

			[Token(Token = "0x40007B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Parameters parameters;

			[Token(Token = "0x40007B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x60007AC")]
			[Address(RVA = "0x1785188", Offset = "0x1785188", VA = "0x1785188", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60007AD")]
			[Address(RVA = "0x1785378", Offset = "0x1785378", VA = "0x1785378", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000166")]
		[CompilerGenerated]
		private struct <PreloadInternal>d__15 : IAsyncStateMachine
		{
			[Token(Token = "0x40007BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40007BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x40007C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Parameters parameters;

			[Token(Token = "0x40007C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public AnatomyAssetPreloader <>4__this;

			[Token(Token = "0x40007C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TaskAwaiter<IEnumerable<LoadedAsset<ItemPoseDatabase>>> <>u__1;

			[Token(Token = "0x40007C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private TaskAwaiter <>u__2;

			[Token(Token = "0x60007B4")]
			[Address(RVA = "0x1785534", Offset = "0x1785534", VA = "0x1785534", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60007B5")]
			[Address(RVA = "0x1785FE8", Offset = "0x1785FE8", VA = "0x1785FE8", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000167")]
		[CompilerGenerated]
		private struct <PreloadAnimations>d__16 : IAsyncStateMachine
		{
			[Token(Token = "0x40007C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40007C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x40007C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public IAssetInstanceProvider<GameObject> animationInstanceProvider;

			[Token(Token = "0x40007C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private TaskAwaiter<IEnumerable<LoadedAsset<GameObject>>> <>u__1;

			[Token(Token = "0x60007B6")]
			[Address(RVA = "0x1785FF4", Offset = "0x1785FF4", VA = "0x1785FF4", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60007B7")]
			[Address(RVA = "0x17862CC", Offset = "0x17862CC", VA = "0x17862CC", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000168")]
		[CompilerGenerated]
		private struct <PreloadSpawnables>d__17 : IAsyncStateMachine
		{
			[Token(Token = "0x40007C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40007C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x40007CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public IAssetInstanceProvider<ItemMeshDatabase> meshInstanceProvider;

			[Token(Token = "0x40007CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public IEnumerable<string> meshSpawnableIds;

			[Token(Token = "0x40007CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public IAssetInstanceProvider<ItemMaterialDatabase> materialInstanceProvider;

			[Token(Token = "0x40007CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public IEnumerable<string> materialSpawnableIds;

			[Token(Token = "0x40007CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public bool bakeMeshes;

			[Token(Token = "0x40007CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public int meshesPerJob;

			[Token(Token = "0x40007D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private Task<IEnumerable<LoadedAsset<ItemMeshDatabase>>> <meshesTask>5__2;

			[Token(Token = "0x40007D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x40007D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private NativeArray<int> <meshIds>5__3;

			[Token(Token = "0x40007D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			private JobHandleAwaiter <>u__2;

			[Token(Token = "0x60007B8")]
			[Address(RVA = "0x17862D8", Offset = "0x17862D8", VA = "0x17862D8", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60007B9")]
			[Address(RVA = "0x1786CA0", Offset = "0x1786CA0", VA = "0x1786CA0", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x40007A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AnatomySpawnableObjectProvider _anatomySpawnableObjectProvider;

		[Token(Token = "0x40007A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private SerializableAnatomyDatabaseFactory _databaseFactory;

		[Token(Token = "0x40007A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private List<DatabaseType> _databaseTypes;

		[Token(Token = "0x40007A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private int _meshesPerJob;

		[Token(Token = "0x170000E3")]
		public Task PreloadTask
		{
			[Token(Token = "0x600079A")]
			[Address(RVA = "0x1784494", Offset = "0x1784494", VA = "0x1784494")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600079B")]
			[Address(RVA = "0x178449C", Offset = "0x178449C", VA = "0x178449C")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x170000E4")]
		public Parameters CurrentPreloadParameters
		{
			[Token(Token = "0x600079C")]
			[Address(RVA = "0x17844A4", Offset = "0x17844A4", VA = "0x17844A4")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600079D")]
			[Address(RVA = "0x17844AC", Offset = "0x17844AC", VA = "0x17844AC")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x600079E")]
		[Address(RVA = "0x17844B4", Offset = "0x17844B4", VA = "0x17844B4")]
		[AsyncStateMachine(typeof(<Preload>d__14))]
		public void Preload(Parameters parameters)
		{
		}

		[Token(Token = "0x600079F")]
		[Address(RVA = "0x1784588", Offset = "0x1784588", VA = "0x1784588")]
		[AsyncStateMachine(typeof(<PreloadInternal>d__15))]
		private Task PreloadInternal(Parameters parameters)
		{
			return null;
		}

		[Token(Token = "0x60007A0")]
		[Address(RVA = "0x1784688", Offset = "0x1784688", VA = "0x1784688")]
		[AsyncStateMachine(typeof(<PreloadAnimations>d__16))]
		private static Task PreloadAnimations(IAssetInstanceProvider<GameObject> animationInstanceProvider)
		{
			return null;
		}

		[Token(Token = "0x60007A1")]
		[Address(RVA = "0x1784774", Offset = "0x1784774", VA = "0x1784774")]
		[AsyncStateMachine(typeof(<PreloadSpawnables>d__17))]
		private static Task PreloadSpawnables(IAssetInstanceProvider<ItemMeshDatabase> meshInstanceProvider, IAssetInstanceProvider<ItemMaterialDatabase> materialInstanceProvider, IEnumerable<string> meshSpawnableIds, IEnumerable<string> materialSpawnableIds, bool bakeMeshes, int meshesPerJob)
		{
			return null;
		}

		[Token(Token = "0x60007A2")]
		[Address(RVA = "0x17848D4", Offset = "0x17848D4", VA = "0x17848D4")]
		private static IEnumerable<string> GetSpawnableIds(IAnatomyDatabase anatomyDatabase, PreloadMethod preloadMethod)
		{
			return null;
		}

		[Token(Token = "0x60007A3")]
		[Address(RVA = "0x1784C1C", Offset = "0x1784C1C", VA = "0x1784C1C")]
		public static string GetFirstSpawnableId(IAnatomyDatabase anatomyDatabase, DatabaseType databaseType)
		{
			return null;
		}

		[Token(Token = "0x60007A4")]
		[Address(RVA = "0x1784EB4", Offset = "0x1784EB4", VA = "0x1784EB4")]
		private static IEnumerable<string> GetAllAvailableSpawnables(IAnatomyDatabase anatomyDatabase, DatabaseType databaseType)
		{
			return null;
		}

		[Token(Token = "0x60007A5")]
		[Address(RVA = "0x17850E8", Offset = "0x17850E8", VA = "0x17850E8")]
		public AnatomyAssetPreloader()
		{
		}
	}
	[Token(Token = "0x200016A")]
	public class AnatomySpawnableObjectProvider : MonoBehaviour
	{
		[Token(Token = "0x40007D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private SpawnableDatabase _itemMeshDatabase;

		[Token(Token = "0x40007D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private SpawnableDatabase _itemMaterialDatabase;

		[Token(Token = "0x40007D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private SpawnableDatabase _itemPoseDatabase;

		[Token(Token = "0x40007D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private SpawnableDatabase _animationSpawnableDatabase;

		[Token(Token = "0x40007D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private SpawnableDatabase _cadaverSpawnableDatabase;

		[Token(Token = "0x40007DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private AssetInstanceProvider<ItemMeshDatabase> _meshDatabaseProvider;

		[Token(Token = "0x40007DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private AssetInstanceProvider<ItemMaterialDatabase> _materialDatabaseProvider;

		[Token(Token = "0x40007DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private AssetInstanceProvider<ItemPoseDatabase> _poseDatabaseProvider;

		[Token(Token = "0x40007DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private AssetInstanceProvider<GameObject> _animationSpawnableProvider;

		[Token(Token = "0x40007DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private AssetInstanceProvider<Sprite> _cadaverSpawnableProvider;

		[Token(Token = "0x170000E6")]
		public AssetInstanceProvider<ItemMeshDatabase> MeshDatabaseProvider
		{
			[Token(Token = "0x60007BD")]
			[Address(RVA = "0x1785D3C", Offset = "0x1785D3C", VA = "0x1785D3C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E7")]
		public AssetInstanceProvider<ItemMaterialDatabase> MaterialDatabaseProvider
		{
			[Token(Token = "0x60007BE")]
			[Address(RVA = "0x1785E20", Offset = "0x1785E20", VA = "0x1785E20")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E8")]
		public AssetInstanceProvider<ItemPoseDatabase> PoseDatabaseProvider
		{
			[Token(Token = "0x60007BF")]
			[Address(RVA = "0x1785C58", Offset = "0x1785C58", VA = "0x1785C58")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E9")]
		public AssetInstanceProvider<GameObject> AnimationSpawnableProvider
		{
			[Token(Token = "0x60007C0")]
			[Address(RVA = "0x1785F04", Offset = "0x1785F04", VA = "0x1785F04")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000EA")]
		public AssetInstanceProvider<Sprite> CadaverSpawnableProvider
		{
			[Token(Token = "0x60007C1")]
			[Address(RVA = "0x1786CBC", Offset = "0x1786CBC", VA = "0x1786CBC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000EB")]
		public static AnatomySpawnableObjectProvider Instance
		{
			[Token(Token = "0x60007C2")]
			[Address(RVA = "0x1786DA0", Offset = "0x1786DA0", VA = "0x1786DA0")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60007C3")]
			[Address(RVA = "0x1786DE8", Offset = "0x1786DE8", VA = "0x1786DE8")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x60007C4")]
		[Address(RVA = "0x1786E40", Offset = "0x1786E40", VA = "0x1786E40")]
		private void Awake()
		{
		}

		[Token(Token = "0x60007C5")]
		[Address(RVA = "0x1786FB8", Offset = "0x1786FB8", VA = "0x1786FB8")]
		public AnatomySpawnableObjectProvider()
		{
		}
	}
}
namespace VoiceChat.Vivox
{
	[Token(Token = "0x200016B")]
	public class VivoxNetworkHandlerMobile : NetworkBehaviour
	{
		[Token(Token = "0x40007E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SyncVar]
		private string _channelId;

		[Token(Token = "0x40007E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool _initialized;

		[Token(Token = "0x40007E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private VivoxVoiceManager _vivoxVoiceManager;

		[Token(Token = "0x170000EC")]
		private VivoxVoiceManager VivoxVoiceManager
		{
			[Token(Token = "0x60007C6")]
			[Address(RVA = "0x1786FC0", Offset = "0x1786FC0", VA = "0x1786FC0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000ED")]
		public string ParticipantId
		{
			[Token(Token = "0x60007C7")]
			[Address(RVA = "0x1787070", Offset = "0x1787070", VA = "0x1787070")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60007C8")]
			[Address(RVA = "0x1787078", Offset = "0x1787078", VA = "0x1787078")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x170000EE")]
		public string Network_channelId
		{
			[Token(Token = "0x60007D6")]
			[Address(RVA = "0x1787A88", Offset = "0x1787A88", VA = "0x1787A88")]
			get
			{
				return null;
			}
			[Token(Token = "0x60007D7")]
			[Address(RVA = "0x1787184", Offset = "0x1787184", VA = "0x1787184")]
			[param: In]
			set
			{
			}
		}

		[Token(Token = "0x170000EF")]
		public string Network<ParticipantId>k__BackingField
		{
			[Token(Token = "0x60007D8")]
			[Address(RVA = "0x1787A90", Offset = "0x1787A90", VA = "0x1787A90")]
			get
			{
				return null;
			}
			[Token(Token = "0x60007D9")]
			[Address(RVA = "0x178707C", Offset = "0x178707C", VA = "0x178707C")]
			[param: In]
			set
			{
			}
		}

		[Token(Token = "0x60007C9")]
		[Address(RVA = "0x1787138", Offset = "0x1787138", VA = "0x1787138", Slot = "8")]
		public override void OnStartServer()
		{
		}

		[Token(Token = "0x60007CA")]
		[Address(RVA = "0x1787240", Offset = "0x1787240", VA = "0x1787240")]
		private void Start()
		{
		}

		[Token(Token = "0x60007CB")]
		[Address(RVA = "0x178733C", Offset = "0x178733C", VA = "0x178733C")]
		private void Initialize()
		{
		}

		[Token(Token = "0x60007CC")]
		[Address(RVA = "0x178747C", Offset = "0x178747C", VA = "0x178747C")]
		private void Uninitialize()
		{
		}

		[Token(Token = "0x60007CD")]
		[Address(RVA = "0x17875AC", Offset = "0x17875AC", VA = "0x17875AC")]
		private void OnParticipantAdded(string username, ChannelId channel, IParticipant participant)
		{
		}

		[Token(Token = "0x60007CE")]
		[Address(RVA = "0x178794C", Offset = "0x178794C", VA = "0x178794C")]
		private void OnLoggedIn()
		{
		}

		[Token(Token = "0x60007CF")]
		[Address(RVA = "0x178770C", Offset = "0x178770C", VA = "0x178770C")]
		private string GetChannelName()
		{
			return null;
		}

		[Token(Token = "0x60007D0")]
		[Address(RVA = "0x17879A0", Offset = "0x17879A0", VA = "0x17879A0")]
		private Channel3DProperties GetChannelProperties()
		{
			return null;
		}

		[Token(Token = "0x60007D1")]
		[Address(RVA = "0x17879FC", Offset = "0x17879FC", VA = "0x17879FC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60007D2")]
		[Address(RVA = "0x1787A70", Offset = "0x1787A70", VA = "0x1787A70")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x60007D3")]
		[Address(RVA = "0x1787758", Offset = "0x1787758", VA = "0x1787758")]
		[Command]
		private void CmdSetParticipantId(string value)
		{
		}

		[Token(Token = "0x60007D4")]
		[Address(RVA = "0x1787A7C", Offset = "0x1787A7C", VA = "0x1787A7C")]
		public VivoxNetworkHandlerMobile()
		{
		}

		[Token(Token = "0x60007D5")]
		[Address(RVA = "0x1787A84", Offset = "0x1787A84", VA = "0x1787A84")]
		private void MirrorProcessed()
		{
		}

		[Token(Token = "0x60007DA")]
		[Address(RVA = "0x1787A98", Offset = "0x1787A98", VA = "0x1787A98")]
		protected void UserCode_CmdSetParticipantId__String(string value)
		{
		}

		[Token(Token = "0x60007DB")]
		[Address(RVA = "0x1787A9C", Offset = "0x1787A9C", VA = "0x1787A9C")]
		protected static void InvokeUserCode_CmdSetParticipantId__String(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x60007DC")]
		[Address(RVA = "0x1787C14", Offset = "0x1787C14", VA = "0x1787C14")]
		static VivoxNetworkHandlerMobile()
		{
		}

		[Token(Token = "0x60007DD")]
		[Address(RVA = "0x1787D2C", Offset = "0x1787D2C", VA = "0x1787D2C", Slot = "6")]
		public override bool SerializeSyncVars(NetworkWriter writer, bool forceAll)
		{
			return default(bool);
		}

		[Token(Token = "0x60007DE")]
		[Address(RVA = "0x1787E4C", Offset = "0x1787E4C", VA = "0x1787E4C", Slot = "7")]
		public override void DeserializeSyncVars(NetworkReader reader, bool initialState)
		{
		}
	}
	[Token(Token = "0x200016C")]
	public class VivoxNetworkHandler : NetworkBehaviour
	{
		[StructLayout(3)]
		[Token(Token = "0x200016F")]
		[CompilerGenerated]
		private struct <OnLoggedIn>d__22 : IAsyncStateMachine
		{
			[Token(Token = "0x40007F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40007F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x40007F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public VivoxNetworkHandler <>4__this;

			[Token(Token = "0x40007F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x60007FB")]
			[Address(RVA = "0x17896B4", Offset = "0x17896B4", VA = "0x17896B4", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60007FC")]
			[Address(RVA = "0x1789A20", Offset = "0x1789A20", VA = "0x1789A20", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x40007E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private NetworkPlayerHandler _networkPlayerHandler;

		[Token(Token = "0x40007E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private SpriteRenderer _speakingIndicator;

		[Token(Token = "0x40007E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private GameObject _positionalGameObjectOverride;

		[Token(Token = "0x40007E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SyncVar]
		private string _channelId;

		[Token(Token = "0x40007E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private VivoxVoiceManager _vivoxVoiceManager;

		[Token(Token = "0x40007E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private PositionalVoice _positionalVoice;

		[Token(Token = "0x40007EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private bool _initialized;

		[Token(Token = "0x40007EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private ChannelId _channel;

		[Token(Token = "0x170000F0")]
		public GameObject PositionalGameObjectOverride
		{
			[Token(Token = "0x60007DF")]
			[Address(RVA = "0x1787F8C", Offset = "0x1787F8C", VA = "0x1787F8C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60007E0")]
			[Address(RVA = "0x1787F94", Offset = "0x1787F94", VA = "0x1787F94")]
			set
			{
			}
		}

		[Token(Token = "0x170000F1")]
		private VivoxVoiceManager VivoxVoiceManager
		{
			[Token(Token = "0x60007E1")]
			[Address(RVA = "0x1788028", Offset = "0x1788028", VA = "0x1788028")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F2")]
		public bool IsLocalPlayerMuted
		{
			[Token(Token = "0x60007E2")]
			[Address(RVA = "0x17880D8", Offset = "0x17880D8", VA = "0x17880D8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000F3")]
		public string Network_channelId
		{
			[Token(Token = "0x60007F0")]
			[Address(RVA = "0x1788EC4", Offset = "0x1788EC4", VA = "0x1788EC4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60007F1")]
			[Address(RVA = "0x1788230", Offset = "0x1788230", VA = "0x1788230")]
			[param: In]
			set
			{
			}
		}

		[Token(Token = "0x60007E3")]
		[Address(RVA = "0x17881E4", Offset = "0x17881E4", VA = "0x17881E4", Slot = "8")]
		public override void OnStartServer()
		{
		}

		[Token(Token = "0x60007E4")]
		[Address(RVA = "0x17882EC", Offset = "0x17882EC", VA = "0x17882EC")]
		private void Start()
		{
		}

		[Token(Token = "0x60007E5")]
		[Address(RVA = "0x17885D8", Offset = "0x17885D8", VA = "0x17885D8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60007E6")]
		[Address(RVA = "0x178890C", Offset = "0x178890C", VA = "0x178890C")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x60007E7")]
		[Address(RVA = "0x1788918", Offset = "0x1788918", VA = "0x1788918")]
		public void SetLocalPlayerMuted(bool value)
		{
		}

		[Token(Token = "0x60007E8")]
		[Address(RVA = "0x17883E8", Offset = "0x17883E8", VA = "0x17883E8")]
		private void Initialize()
		{
		}

		[Token(Token = "0x60007E9")]
		[Address(RVA = "0x178864C", Offset = "0x178864C", VA = "0x178864C")]
		private void Uninitialize()
		{
		}

		[Token(Token = "0x60007EA")]
		[Address(RVA = "0x1788A34", Offset = "0x1788A34", VA = "0x1788A34")]
		[AsyncStateMachine(typeof(<OnLoggedIn>d__22))]
		private void OnLoggedIn()
		{
		}

		[Token(Token = "0x60007EB")]
		[Address(RVA = "0x1788AEC", Offset = "0x1788AEC", VA = "0x1788AEC")]
		private void OnParticipantAdded(string username, ChannelId channel, IParticipant participant)
		{
		}

		[Token(Token = "0x60007EC")]
		[Address(RVA = "0x1788DFC", Offset = "0x1788DFC", VA = "0x1788DFC")]
		private string GetChannelName()
		{
			return null;
		}

		[Token(Token = "0x60007ED")]
		[Address(RVA = "0x1788E48", Offset = "0x1788E48", VA = "0x1788E48")]
		private Channel3DProperties GetChannelProperties()
		{
			return null;
		}

		[Token(Token = "0x60007EE")]
		[Address(RVA = "0x1788EB8", Offset = "0x1788EB8", VA = "0x1788EB8")]
		public VivoxNetworkHandler()
		{
		}

		[Token(Token = "0x60007EF")]
		[Address(RVA = "0x1788EC0", Offset = "0x1788EC0", VA = "0x1788EC0")]
		private void MirrorProcessed()
		{
		}

		[Token(Token = "0x60007F2")]
		[Address(RVA = "0x1788ECC", Offset = "0x1788ECC", VA = "0x1788ECC", Slot = "6")]
		public override bool SerializeSyncVars(NetworkWriter writer, bool forceAll)
		{
			return default(bool);
		}

		[Token(Token = "0x60007F3")]
		[Address(RVA = "0x1788F90", Offset = "0x1788F90", VA = "0x1788F90", Slot = "7")]
		public override void DeserializeSyncVars(NetworkReader reader, bool initialState)
		{
		}
	}
}
namespace Utils
{
	[Token(Token = "0x2000170")]
	public class OverlayScreen : MonoBehaviour
	{
		[Token(Token = "0x40007F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Text _text;

		[Token(Token = "0x40007F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private LocalizedTextMeshProGui _localizedText;

		[Token(Token = "0x60007FD")]
		[Address(RVA = "0x1789A2C", Offset = "0x1789A2C", VA = "0x1789A2C")]
		public void StartLoading(bool val, string localizedText = "labelloading")
		{
		}

		[Token(Token = "0x60007FE")]
		[Address(RVA = "0x1789BD4", Offset = "0x1789BD4", VA = "0x1789BD4")]
		public void StopLoading()
		{
		}

		[Token(Token = "0x60007FF")]
		[Address(RVA = "0x1789A94", Offset = "0x1789A94", VA = "0x1789A94")]
		private void DoPingPong(float value = 0f)
		{
		}

		[Token(Token = "0x6000800")]
		[Address(RVA = "0x1789C58", Offset = "0x1789C58", VA = "0x1789C58")]
		public OverlayScreen()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000172")]
	public class FingersPanOrbitHelperSettings
	{
		[Token(Token = "0x40007F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[Range(0.01f, 1f)]
		public float MinimalDistanceMultiplier;

		[Token(Token = "0x40007FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float MoveSpeed;

		[Token(Token = "0x40007FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool UsePanning;

		[Token(Token = "0x40007FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool UseScaling;

		[Token(Token = "0x6000803")]
		[Address(RVA = "0x1789C94", Offset = "0x1789C94", VA = "0x1789C94")]
		public FingersPanOrbitHelperSettings()
		{
		}
	}
	[Token(Token = "0x2000173")]
	public class FingersPanOrbitHelper
	{
		[Token(Token = "0x40007FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly FingersPanOrbitHelperSettings _settings;

		[Token(Token = "0x40007FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly float _defaultDistance;

		[Token(Token = "0x40007FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly IReadOnlyProperty<Transform> _selectedItemProperty;

		[Token(Token = "0x4000800")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float CurrentDistance;

		[Token(Token = "0x4000801")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private bool _onlyRotateInOneAxis;

		[Token(Token = "0x4000802")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float _previousOrbitXSpeed;

		[Token(Token = "0x4000804")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public readonly FingersPanOrbitComponentScript FingersPanOrbitComponentScript;

		[Token(Token = "0x170000F4")]
		private PanGestureRecognizer PanGestureMove
		{
			[Token(Token = "0x6000804")]
			[Address(RVA = "0x1789CAC", Offset = "0x1789CAC", VA = "0x1789CAC")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6000805")]
			[Address(RVA = "0x1789CB4", Offset = "0x1789CB4", VA = "0x1789CB4")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170000F5")]
		public bool UsePanning
		{
			[Token(Token = "0x6000806")]
			[Address(RVA = "0x1789CBC", Offset = "0x1789CBC", VA = "0x1789CBC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000807")]
			[Address(RVA = "0x1789CD8", Offset = "0x1789CD8", VA = "0x1789CD8")]
			set
			{
			}
		}

		[Token(Token = "0x170000F6")]
		public bool UseScaling
		{
			[Token(Token = "0x6000808")]
			[Address(RVA = "0x1789CF8", Offset = "0x1789CF8", VA = "0x1789CF8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000809")]
			[Address(RVA = "0x1789D14", Offset = "0x1789D14", VA = "0x1789D14")]
			set
			{
			}
		}

		[Token(Token = "0x170000F7")]
		private Transform Orbiter
		{
			[Token(Token = "0x600080A")]
			[Address(RVA = "0x1789D34", Offset = "0x1789D34", VA = "0x1789D34")]
			get
			{
				return null;
			}
			[Token(Token = "0x600080B")]
			[Address(RVA = "0x1789D50", Offset = "0x1789D50", VA = "0x1789D50")]
			set
			{
			}
		}

		[Token(Token = "0x170000F8")]
		public float OrbiterYSpeed
		{
			[Token(Token = "0x600080C")]
			[Address(RVA = "0x1789D6C", Offset = "0x1789D6C", VA = "0x1789D6C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600080D")]
			[Address(RVA = "0x1789D88", Offset = "0x1789D88", VA = "0x1789D88")]
			set
			{
			}
		}

		[Token(Token = "0x170000F9")]
		private Transform OrbitTarget
		{
			[Token(Token = "0x600080E")]
			[Address(RVA = "0x1789DA4", Offset = "0x1789DA4", VA = "0x1789DA4")]
			get
			{
				return null;
			}
			[Token(Token = "0x600080F")]
			[Address(RVA = "0x1789DC0", Offset = "0x1789DC0", VA = "0x1789DC0")]
			set
			{
			}
		}

		[Token(Token = "0x170000FA")]
		private float zoomSpeed
		{
			[Token(Token = "0x6000810")]
			[Address(RVA = "0x1789DDC", Offset = "0x1789DDC", VA = "0x1789DDC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000811")]
			[Address(RVA = "0x1789DF8", Offset = "0x1789DF8", VA = "0x1789DF8")]
			set
			{
			}
		}

		[Token(Token = "0x170000FB")]
		private float ZoomSpeed
		{
			[Token(Token = "0x6000812")]
			[Address(RVA = "0x1789E14", Offset = "0x1789E14", VA = "0x1789E14")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000813")]
			[Address(RVA = "0x1789E30", Offset = "0x1789E30", VA = "0x1789E30")]
			set
			{
			}
		}

		[Token(Token = "0x170000FC")]
		private ScaleGestureRecognizer ScaleGesture
		{
			[Token(Token = "0x6000814")]
			[Address(RVA = "0x1789E4C", Offset = "0x1789E4C", VA = "0x1789E4C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000FD")]
		public bool OnlyRotateInOneAxis
		{
			[Token(Token = "0x6000815")]
			[Address(RVA = "0x1789E68", Offset = "0x1789E68", VA = "0x1789E68")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000816")]
			[Address(RVA = "0x1789E70", Offset = "0x1789E70", VA = "0x1789E70")]
			set
			{
			}
		}

		[Token(Token = "0x6000817")]
		[Address(RVA = "0x1789EB0", Offset = "0x1789EB0", VA = "0x1789EB0")]
		public FingersPanOrbitHelper(FingersPanOrbitComponentScript fingersPanOrbitComponentScript, IReadOnlyProperty<Transform> selectedItemProperty, FingersPanOrbitHelperSettings settings)
		{
		}

		[Token(Token = "0x6000818")]
		[Address(RVA = "0x178A4E0", Offset = "0x178A4E0", VA = "0x178A4E0")]
		private void OnAllowOrbitWhileZoomingChanged(bool value)
		{
		}

		[Token(Token = "0x6000819")]
		[Address(RVA = "0x178A220", Offset = "0x178A220", VA = "0x178A220")]
		private void OnFingersPanOrbitScriptEnabled(bool value)
		{
		}

		[Token(Token = "0x600081A")]
		[Address(RVA = "0x178A524", Offset = "0x178A524", VA = "0x178A524")]
		private void ScaleGesture_Updated(GestureRecognizer gesture)
		{
		}

		[Token(Token = "0x600081B")]
		[Address(RVA = "0x178A5EC", Offset = "0x178A5EC", VA = "0x178A5EC")]
		private void UpdateZoom()
		{
		}

		[Token(Token = "0x600081C")]
		[Address(RVA = "0x178AA50", Offset = "0x178AA50", VA = "0x178AA50")]
		private void PanGestureCallback(GestureRecognizer gesture)
		{
		}
	}
	[Token(Token = "0x2000175")]
	public static class NetworkTime
	{
		[StructLayout(3)]
		[Token(Token = "0x2000176")]
		[CompilerGenerated]
		private struct <Start>d__6 : IAsyncStateMachine
		{
			[Token(Token = "0x400080A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x400080B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x400080C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private CancellationToken <token>5__2;

			[Token(Token = "0x400080D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TaskAwaiter<DateTime> <>u__1;

			[Token(Token = "0x400080E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private TaskAwaiter <>u__2;

			[Token(Token = "0x6000826")]
			[Address(RVA = "0x178B1F8", Offset = "0x178B1F8", VA = "0x178B1F8", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000827")]
			[Address(RVA = "0x178B6C4", Offset = "0x178B6C4", VA = "0x178B6C4", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000177")]
		[CompilerGenerated]
		private struct <GetNetworkTime>d__8 : IAsyncStateMachine
		{
			[Token(Token = "0x400080F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000810")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder<DateTime> <>t__builder;

			[Token(Token = "0x4000811")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private TaskAwaiter<DateTime> <>u__1;

			[Token(Token = "0x6000828")]
			[Address(RVA = "0x178B6D0", Offset = "0x178B6D0", VA = "0x178B6D0", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000829")]
			[Address(RVA = "0x178B8C0", Offset = "0x178B8C0", VA = "0x178B8C0", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000178")]
		[CompilerGenerated]
		private struct <GetNetworkTime>d__9 : IAsyncStateMachine
		{
			[Token(Token = "0x4000812")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000813")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder<DateTime> <>t__builder;

			[Token(Token = "0x4000814")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string url;

			[Token(Token = "0x4000815")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private TaskAwaiter<WebResponse> <>u__1;

			[Token(Token = "0x600082A")]
			[Address(RVA = "0x178B918", Offset = "0x178B918", VA = "0x178B918", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x600082B")]
			[Address(RVA = "0x178BCC4", Offset = "0x178BCC4", VA = "0x178BCC4", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4000808")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static CancellationTokenSource _source;

		[Token(Token = "0x4000809")]
		private const int INTERVAL = 5000;

		[Token(Token = "0x170000FE")]
		public static TimeSpan Offset
		{
			[Token(Token = "0x6000820")]
			[Address(RVA = "0x178AE64", Offset = "0x178AE64", VA = "0x178AE64")]
			[CompilerGenerated]
			get
			{
				return default(TimeSpan);
			}
			[Token(Token = "0x6000821")]
			[Address(RVA = "0x178AEAC", Offset = "0x178AEAC", VA = "0x178AEAC")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6000822")]
		[Address(RVA = "0x178AEF8", Offset = "0x178AEF8", VA = "0x178AEF8")]
		[AsyncStateMachine(typeof(<Start>d__6))]
		public static void Start()
		{
		}

		[Token(Token = "0x6000823")]
		[Address(RVA = "0x178AF90", Offset = "0x178AF90", VA = "0x178AF90")]
		public static void Stop()
		{
		}

		[Token(Token = "0x6000824")]
		[Address(RVA = "0x178AFEC", Offset = "0x178AFEC", VA = "0x178AFEC")]
		[AsyncStateMachine(typeof(<GetNetworkTime>d__8))]
		public static Task<DateTime> GetNetworkTime()
		{
			return null;
		}

		[Token(Token = "0x6000825")]
		[Address(RVA = "0x178B0E4", Offset = "0x178B0E4", VA = "0x178B0E4")]
		[AsyncStateMachine(typeof(<GetNetworkTime>d__9))]
		public static Task<DateTime> GetNetworkTime(string url)
		{
			return null;
		}
	}
	[Token(Token = "0x2000179")]
	public class ScrollRectMod : ScrollRect
	{
		[Token(Token = "0x600082C")]
		[Address(RVA = "0x178BD1C", Offset = "0x178BD1C", VA = "0x178BD1C", Slot = "44")]
		public override void OnBeginDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600082D")]
		[Address(RVA = "0x178BD20", Offset = "0x178BD20", VA = "0x178BD20", Slot = "46")]
		public override void OnDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600082E")]
		[Address(RVA = "0x178BD24", Offset = "0x178BD24", VA = "0x178BD24", Slot = "45")]
		public override void OnEndDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600082F")]
		[Address(RVA = "0x178BD28", Offset = "0x178BD28", VA = "0x178BD28")]
		public ScrollRectMod()
		{
		}
	}
	[Token(Token = "0x200017A")]
	public class AudioHandler : MonoBehaviour
	{
		[Token(Token = "0x4000816")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioSource _musicAudioSource;

		[Token(Token = "0x4000817")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioSource _soundAudioSource;

		[Token(Token = "0x170000FF")]
		public static AudioHandler Instance
		{
			[Token(Token = "0x6000830")]
			[Address(RVA = "0x178BD30", Offset = "0x178BD30", VA = "0x178BD30")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000100")]
		public AudioSource MusicAudioSource
		{
			[Token(Token = "0x6000831")]
			[Address(RVA = "0x178BE08", Offset = "0x178BE08", VA = "0x178BE08")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000101")]
		public AudioSource SoundAudioSource
		{
			[Token(Token = "0x6000832")]
			[Address(RVA = "0x178BE10", Offset = "0x178BE10", VA = "0x178BE10")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000833")]
		[Address(RVA = "0x178BE18", Offset = "0x178BE18", VA = "0x178BE18")]
		private void Start()
		{
		}

		[Token(Token = "0x6000834")]
		[Address(RVA = "0x178BF04", Offset = "0x178BF04", VA = "0x178BF04")]
		public void PlaySpatialSound(AudioClip clip, Vector3 position)
		{
		}

		[Token(Token = "0x6000835")]
		[Address(RVA = "0x178BF78", Offset = "0x178BF78", VA = "0x178BF78")]
		public AudioHandler()
		{
		}
	}
	[Token(Token = "0x200017B")]
	public class CaptureScreenShot : MonoBehaviour
	{
		[Token(Token = "0x4000818")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int _resWidth;

		[Token(Token = "0x4000819")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private int _resHeight;

		[Token(Token = "0x400081A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Camera _camera;

		[Token(Token = "0x6000836")]
		[Address(RVA = "0x178BF80", Offset = "0x178BF80", VA = "0x178BF80")]
		public string ScreenShotName(int width, int height)
		{
			return null;
		}

		[Token(Token = "0x6000837")]
		[Address(RVA = "0x178C1F8", Offset = "0x178C1F8", VA = "0x178C1F8")]
		public void TakeShot()
		{
		}

		[Token(Token = "0x6000838")]
		[Address(RVA = "0x178C400", Offset = "0x178C400", VA = "0x178C400")]
		public void SetFov(float value)
		{
		}

		[Token(Token = "0x6000839")]
		[Address(RVA = "0x178C43C", Offset = "0x178C43C", VA = "0x178C43C")]
		public CaptureScreenShot()
		{
		}
	}
	[Token(Token = "0x200017C")]
	public class EntitlementCheck : MonoBehaviour
	{
		[Token(Token = "0x600083A")]
		[Address(RVA = "0x178C450", Offset = "0x178C450", VA = "0x178C450")]
		private void Start()
		{
		}

		[Token(Token = "0x600083B")]
		[Address(RVA = "0x178C7D0", Offset = "0x178C7D0", VA = "0x178C7D0")]
		public EntitlementCheck()
		{
		}
	}
	[Token(Token = "0x200017E")]
	public static class GridLayoutGroupExtensions
	{
		[Token(Token = "0x600083F")]
		[Address(RVA = "0x178C974", Offset = "0x178C974", VA = "0x178C974")]
		public static GameObject GetElement(this GridLayoutGroup gridLayoutGroup, uint x, uint y)
		{
			return null;
		}

		[Token(Token = "0x6000840")]
		[Address(RVA = "0x178CCCC", Offset = "0x178CCCC", VA = "0x178CCCC")]
		public static int RowCount(this GridLayoutGroup gridLayoutGroup)
		{
			return default(int);
		}

		[Token(Token = "0x6000841")]
		[Address(RVA = "0x178CE34", Offset = "0x178CE34", VA = "0x178CE34")]
		public static int ColumnCount(this GridLayoutGroup gridLayoutGroup)
		{
			return default(int);
		}

		[Token(Token = "0x6000842")]
		[Address(RVA = "0x178CF9C", Offset = "0x178CF9C", VA = "0x178CF9C")]
		public static GridLayoutGroupSelectionHandler GetSelectionHandler(this GridLayoutGroup gridLayoutGroup)
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x2000180")]
	public struct UIntTuple
	{
		[Token(Token = "0x4000822")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint Item1;

		[Token(Token = "0x4000823")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public uint Item2;

		[Token(Token = "0x6000849")]
		[Address(RVA = "0x178D144", Offset = "0x178D144", VA = "0x178D144")]
		public UIntTuple(uint item1, uint item2)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000181")]
	public class GridLayoutGroupSelectionHandler
	{
		[Token(Token = "0x4000824")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private GridLayoutGroup _gridLayoutGroup;

		[Token(Token = "0x4000825")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private UIntTuple _index;

		[Token(Token = "0x17000102")]
		public GameObject SelectedElement
		{
			[Token(Token = "0x600084A")]
			[Address(RVA = "0x178D14C", Offset = "0x178D14C", VA = "0x178D14C")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600084B")]
			[Address(RVA = "0x178D154", Offset = "0x178D154", VA = "0x178D154")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000103")]
		public UIntTuple SelectedIndex
		{
			[Token(Token = "0x600084C")]
			[Address(RVA = "0x178D15C", Offset = "0x178D15C", VA = "0x178D15C")]
			get
			{
				return default(UIntTuple);
			}
		}

		[Token(Token = "0x600084D")]
		[Address(RVA = "0x178D00C", Offset = "0x178D00C", VA = "0x178D00C")]
		public GridLayoutGroupSelectionHandler(GridLayoutGroup gridLayoutGroup)
		{
		}

		[Token(Token = "0x600084E")]
		[Address(RVA = "0x178D164", Offset = "0x178D164", VA = "0x178D164")]
		public GameObject MoveTo(uint x, uint y)
		{
			return null;
		}

		[Token(Token = "0x600084F")]
		[Address(RVA = "0x178D20C", Offset = "0x178D20C", VA = "0x178D20C")]
		public GameObject GetElement(uint x, uint y)
		{
			return null;
		}

		[Token(Token = "0x6000850")]
		[Address(RVA = "0x178D214", Offset = "0x178D214", VA = "0x178D214")]
		public GameObject MoveRight()
		{
			return null;
		}

		[Token(Token = "0x6000851")]
		[Address(RVA = "0x178D220", Offset = "0x178D220", VA = "0x178D220")]
		public GameObject MoveLeft()
		{
			return null;
		}

		[Token(Token = "0x6000852")]
		[Address(RVA = "0x178D22C", Offset = "0x178D22C", VA = "0x178D22C")]
		public GameObject MoveUp()
		{
			return null;
		}

		[Token(Token = "0x6000853")]
		[Address(RVA = "0x178D238", Offset = "0x178D238", VA = "0x178D238")]
		public GameObject MoveDown()
		{
			return null;
		}
	}
	[Token(Token = "0x2000182")]
	public interface IPresentable
	{
		[Token(Token = "0x17000104")]
		string Name
		{
			[Token(Token = "0x6000854")]
			get;
		}

		[Token(Token = "0x17000105")]
		string NameLat
		{
			[Token(Token = "0x6000855")]
			get;
		}

		[Token(Token = "0x17000106")]
		string Description
		{
			[Token(Token = "0x6000856")]
			get;
		}
	}
	[Token(Token = "0x2000183")]
	public class Presentable : IPresentable
	{
		[Token(Token = "0x17000107")]
		public string Name
		{
			[Token(Token = "0x6000857")]
			[Address(RVA = "0x178D244", Offset = "0x178D244", VA = "0x178D244", Slot = "4")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6000858")]
			[Address(RVA = "0x178D24C", Offset = "0x178D24C", VA = "0x178D24C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000108")]
		public string NameLat
		{
			[Token(Token = "0x6000859")]
			[Address(RVA = "0x178D254", Offset = "0x178D254", VA = "0x178D254", Slot = "5")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600085A")]
			[Address(RVA = "0x178D25C", Offset = "0x178D25C", VA = "0x178D25C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000109")]
		public string Description
		{
			[Token(Token = "0x600085B")]
			[Address(RVA = "0x178D264", Offset = "0x178D264", VA = "0x178D264", Slot = "6")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600085C")]
			[Address(RVA = "0x178D26C", Offset = "0x178D26C", VA = "0x178D26C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x600085D")]
		[Address(RVA = "0x178D274", Offset = "0x178D274", VA = "0x178D274")]
		public Presentable()
		{
		}
	}
	[Token(Token = "0x2000184")]
	public class LocalizedPresentable : IPresentable
	{
		[Token(Token = "0x400082A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly LocalizationManager _localizationManager;

		[Token(Token = "0x400082B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly string _id;

		[Token(Token = "0x1700010A")]
		public string NameLat
		{
			[Token(Token = "0x600085F")]
			[Address(RVA = "0x178D2DC", Offset = "0x178D2DC", VA = "0x178D2DC", Slot = "5")]
			[CompilerGenerated]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700010B")]
		public string Name
		{
			[Token(Token = "0x6000860")]
			[Address(RVA = "0x178D2E4", Offset = "0x178D2E4", VA = "0x178D2E4", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700010C")]
		public string Description
		{
			[Token(Token = "0x6000861")]
			[Address(RVA = "0x178D308", Offset = "0x178D308", VA = "0x178D308", Slot = "6")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600085E")]
		[Address(RVA = "0x178D27C", Offset = "0x178D27C", VA = "0x178D27C")]
		public LocalizedPresentable(string id, string latinName, LocalizationManager localizationManager)
		{
		}
	}
	[Token(Token = "0x2000185")]
	public class InfomonitorHandler : MonoBehaviour
	{
		[Token(Token = "0x400082D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Button _textPlus;

		[Token(Token = "0x400082E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Button _textMinus;

		[Token(Token = "0x400082F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Toggle _toggleEn;

		[Token(Token = "0x4000830")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Toggle _toggleLat;

		[Token(Token = "0x4000831")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Button _infoMonitorCadaverButton;

		[Token(Token = "0x4000832")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private TextMeshProUGUI _labelTextPrimary;

		[Token(Token = "0x4000833")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private TextMeshProUGUI _labelTextSecondary;

		[Token(Token = "0x4000834")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private TextMeshProUGUI _contentText;

		[Token(Token = "0x4000835")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Image _infoMonitorBgImage;

		[Token(Token = "0x4000836")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private NetworkModuleProviderFactory _moduleProviderFactory;

		[Token(Token = "0x4000837")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private StructureLayerUiReference _structureLayerUiReference;

		[Token(Token = "0x4000839")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private TweenerCore<Color, Color, ColorOptions> _backgroundFadeTweener;

		[Token(Token = "0x1700010D")]
		public bool LatEnabled
		{
			[Token(Token = "0x6000862")]
			[Address(RVA = "0x178D36C", Offset = "0x178D36C", VA = "0x178D36C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700010E")]
		public Button InfoMonitorCadaverButton
		{
			[Token(Token = "0x6000863")]
			[Address(RVA = "0x178D3F0", Offset = "0x178D3F0", VA = "0x178D3F0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700010F")]
		public IPresentable DisplayedPresentable
		{
			[Token(Token = "0x6000864")]
			[Address(RVA = "0x178D3F8", Offset = "0x178D3F8", VA = "0x178D3F8")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6000865")]
			[Address(RVA = "0x178D400", Offset = "0x178D400", VA = "0x178D400")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000110")]
		public StructureLayerUiReference StructureLayerUiReference
		{
			[Token(Token = "0x6000866")]
			[Address(RVA = "0x178D408", Offset = "0x178D408", VA = "0x178D408")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000867")]
		[Address(RVA = "0x178D410", Offset = "0x178D410", VA = "0x178D410")]
		private void Start()
		{
		}

		[Token(Token = "0x6000868")]
		[Address(RVA = "0x178D938", Offset = "0x178D938", VA = "0x178D938")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000869")]
		[Address(RVA = "0x178DB34", Offset = "0x178DB34", VA = "0x178DB34")]
		private void OnToggleLatValueChanged(bool value)
		{
		}

		[Token(Token = "0x600086A")]
		[Address(RVA = "0x178DE44", Offset = "0x178DE44", VA = "0x178DE44")]
		private void OnMinusClicked()
		{
		}

		[Token(Token = "0x600086B")]
		[Address(RVA = "0x178DE80", Offset = "0x178DE80", VA = "0x178DE80")]
		private void OnPlusClicked()
		{
		}

		[Token(Token = "0x600086C")]
		[Address(RVA = "0x178DB3C", Offset = "0x178DB3C", VA = "0x178DB3C")]
		public void SetDisplayedPresentable(IPresentable presentable)
		{
		}

		[Token(Token = "0x600086D")]
		[Address(RVA = "0x178D840", Offset = "0x178D840", VA = "0x178D840")]
		public void Clear()
		{
		}

		[Token(Token = "0x600086E")]
		[Address(RVA = "0x178DEC0", Offset = "0x178DEC0", VA = "0x178DEC0")]
		public TweenerCore<Color, Color, ColorOptions> SetBackgroundFade(float value, float duration)
		{
			return null;
		}

		[Token(Token = "0x600086F")]
		[Address(RVA = "0x178DF2C", Offset = "0x178DF2C", VA = "0x178DF2C")]
		public InfomonitorHandler()
		{
		}
	}
	[Token(Token = "0x2000187")]
	public class ObjectThrowHelper
	{
		[Token(Token = "0x2000188")]
		[CompilerGenerated]
		private sealed class <ThrowCoroutine>d__25 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000842")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000843")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000844")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ObjectThrowHelper objectThrowHelper;

			[Token(Token = "0x4000845")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vector3 torque;

			[Token(Token = "0x4000846")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public Vector3 force;

			[Token(Token = "0x4000847")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public Func<bool> isCompleted;

			[Token(Token = "0x4000848")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public Action onComplete;

			[Token(Token = "0x17000116")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000886")]
				[Address(RVA = "0x178E8CC", Offset = "0x178E8CC", VA = "0x178E8CC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000117")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000888")]
				[Address(RVA = "0x178E914", Offset = "0x178E914", VA = "0x178E914", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000883")]
			[Address(RVA = "0x178E76C", Offset = "0x178E76C", VA = "0x178E76C")]
			[DebuggerHidden]
			public <ThrowCoroutine>d__25(int <>1__state)
			{
			}

			[Token(Token = "0x6000884")]
			[Address(RVA = "0x178E794", Offset = "0x178E794", VA = "0x178E794", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000885")]
			[Address(RVA = "0x178E798", Offset = "0x178E798", VA = "0x178E798", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000887")]
			[Address(RVA = "0x178E8D4", Offset = "0x178E8D4", VA = "0x178E8D4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400083C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly Transform Transform;

		[Token(Token = "0x17000111")]
		public float Mass
		{
			[Token(Token = "0x6000874")]
			[Address(RVA = "0x178E118", Offset = "0x178E118", VA = "0x178E118")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000875")]
			[Address(RVA = "0x178E120", Offset = "0x178E120", VA = "0x178E120")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000112")]
		public float Drag
		{
			[Token(Token = "0x6000876")]
			[Address(RVA = "0x178E128", Offset = "0x178E128", VA = "0x178E128")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000877")]
			[Address(RVA = "0x178E130", Offset = "0x178E130", VA = "0x178E130")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000113")]
		public float AngularDrag
		{
			[Token(Token = "0x6000878")]
			[Address(RVA = "0x178E138", Offset = "0x178E138", VA = "0x178E138")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000879")]
			[Address(RVA = "0x178E140", Offset = "0x178E140", VA = "0x178E140")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000114")]
		public Vector3 AngularVelocity
		{
			[Token(Token = "0x600087A")]
			[Address(RVA = "0x178E148", Offset = "0x178E148", VA = "0x178E148")]
			[CompilerGenerated]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x600087B")]
			[Address(RVA = "0x178E154", Offset = "0x178E154", VA = "0x178E154")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000115")]
		public Vector3 Velocity
		{
			[Token(Token = "0x600087C")]
			[Address(RVA = "0x178E160", Offset = "0x178E160", VA = "0x178E160")]
			[CompilerGenerated]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x600087D")]
			[Address(RVA = "0x178E16C", Offset = "0x178E16C", VA = "0x178E16C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x600087E")]
		[Address(RVA = "0x178E178", Offset = "0x178E178", VA = "0x178E178")]
		public ObjectThrowHelper(Transform transform)
		{
		}

		[Token(Token = "0x600087F")]
		[Address(RVA = "0x178E1BC", Offset = "0x178E1BC", VA = "0x178E1BC")]
		public void Update()
		{
		}

		[Token(Token = "0x6000880")]
		[Address(RVA = "0x178E394", Offset = "0x178E394", VA = "0x178E394")]
		public void AddForce(Vector3 force, ForceMode mode = ForceMode.Force)
		{
		}

		[Token(Token = "0x6000881")]
		[Address(RVA = "0x178E510", Offset = "0x178E510", VA = "0x178E510")]
		public void AddTorque(Vector3 torque, ForceMode mode = ForceMode.Force)
		{
		}

		[Token(Token = "0x6000882")]
		[Address(RVA = "0x178E68C", Offset = "0x178E68C", VA = "0x178E68C")]
		[IteratorStateMachine(typeof(<ThrowCoroutine>d__25))]
		public static IEnumerator ThrowCoroutine(ObjectThrowHelper objectThrowHelper, Vector3 force, Vector3 torque, Func<bool> isCompleted, [Optional] Action onComplete)
		{
			return null;
		}
	}
	[Token(Token = "0x2000189")]
	public class TextFPSCounter : MonoBehaviour
	{
		[Token(Token = "0x4000849")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Text _text;

		[Token(Token = "0x400084A")]
		private const int TargetFps = 60;

		[Token(Token = "0x400084B")]
		private const float UPDATE_INTERVAL = 1f;

		[Token(Token = "0x400084C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int _framesCount;

		[Token(Token = "0x400084D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly CompositeDisposable _disposable;

		[Token(Token = "0x6000889")]
		[Address(RVA = "0x178E91C", Offset = "0x178E91C", VA = "0x178E91C")]
		private void Awake()
		{
		}

		[Token(Token = "0x600088A")]
		[Address(RVA = "0x178EC68", Offset = "0x178EC68", VA = "0x178EC68")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600088B")]
		[Address(RVA = "0x178EC84", Offset = "0x178EC84", VA = "0x178EC84")]
		public TextFPSCounter()
		{
		}
	}
}
namespace UnityEngine.UI
{
	[Token(Token = "0x200018A")]
	[AddComponentMenu("UI/Custom Toggle Group", 32)]
	[DisallowMultipleComponent]
	public class CustomToggleGroup : UIBehaviour
	{
		[Token(Token = "0x400084E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool m_AllowSwitchOff;

		[Token(Token = "0x400084F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected List<Toggle> m_Toggles;

		[Token(Token = "0x17000118")]
		public bool allowSwitchOff
		{
			[Token(Token = "0x600088F")]
			[Address(RVA = "0x178EE10", Offset = "0x178EE10", VA = "0x178EE10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000890")]
			[Address(RVA = "0x178EE18", Offset = "0x178EE18", VA = "0x178EE18")]
			set
			{
			}
		}

		[Token(Token = "0x6000891")]
		[Address(RVA = "0x178EE24", Offset = "0x178EE24", VA = "0x178EE24")]
		protected CustomToggleGroup()
		{
		}

		[Token(Token = "0x6000892")]
		[Address(RVA = "0x178EEAC", Offset = "0x178EEAC", VA = "0x178EEAC", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000893")]
		[Address(RVA = "0x178EF84", Offset = "0x178EF84", VA = "0x178EF84")]
		private void ValidateToggleIsInGroup(Toggle toggle)
		{
		}

		[Token(Token = "0x6000894")]
		[Address(RVA = "0x178F0DC", Offset = "0x178F0DC", VA = "0x178F0DC")]
		public void NotifyToggleOn(Toggle toggle, bool sendCallback = true)
		{
		}

		[Token(Token = "0x6000895")]
		[Address(RVA = "0x178F1F0", Offset = "0x178F1F0", VA = "0x178F1F0")]
		public void UnregisterToggle(Toggle toggle)
		{
		}

		[Token(Token = "0x6000896")]
		[Address(RVA = "0x178F280", Offset = "0x178F280", VA = "0x178F280")]
		public void RegisterToggle(Toggle toggle)
		{
		}

		[Token(Token = "0x6000897")]
		[Address(RVA = "0x178EEC8", Offset = "0x178EEC8", VA = "0x178EEC8")]
		public void EnsureValidState()
		{
		}

		[Token(Token = "0x6000898")]
		[Address(RVA = "0x178F368", Offset = "0x178F368", VA = "0x178F368")]
		public bool AnyTogglesOn()
		{
			return default(bool);
		}

		[Token(Token = "0x6000899")]
		[Address(RVA = "0x178F4AC", Offset = "0x178F4AC", VA = "0x178F4AC")]
		public IEnumerable<Toggle> ActiveToggles()
		{
			return null;
		}

		[Token(Token = "0x600089A")]
		[Address(RVA = "0x178F5B0", Offset = "0x178F5B0", VA = "0x178F5B0")]
		public void SetAllTogglesOff(bool sendCallback = true)
		{
		}
	}
	[Token(Token = "0x200018C")]
	[RequireComponent(typeof(RectTransform))]
	[ExecuteAlways]
	public class MultiHandleRect : Selectable, IDragHandler, IEventSystemHandler, IInitializePotentialDragHandler, ICanvasElement
	{
		[Serializable]
		[Token(Token = "0x200018D")]
		public class Handle
		{
			[Token(Token = "0x4000864")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform RectTransform;

			[Token(Token = "0x4000865")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector2 Value;

			[Token(Token = "0x60008C6")]
			[Address(RVA = "0x1790AAC", Offset = "0x1790AAC", VA = "0x1790AAC")]
			public Handle()
			{
			}
		}

		[Token(Token = "0x200018E")]
		public class InternalHandleData
		{
			[Token(Token = "0x4000866")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Handle Handle;

			[Token(Token = "0x4000867")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public MonoEventHandler MonoEventHandler;

			[Token(Token = "0x4000868")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool IsRegistered;

			[Token(Token = "0x4000869")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public UnityAction<bool> OnEnabledChangedAction;

			[Token(Token = "0x400086A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public UnityAction OnDestroyAction;

			[Token(Token = "0x60008C7")]
			[Address(RVA = "0x1790AA4", Offset = "0x1790AA4", VA = "0x1790AA4")]
			public InternalHandleData()
			{
			}
		}

		[Token(Token = "0x200018F")]
		public enum PointerDownMode
		{
			[Token(Token = "0x400086C")]
			FindClosestHandle,
			[Token(Token = "0x400086D")]
			CreateNewHandle,
			[Token(Token = "0x400086E")]
			CustomFunction
		}

		[Token(Token = "0x4000853")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		private Vector2 _dimensions;

		[Token(Token = "0x4000854")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		private Vector2 _origin;

		[Token(Token = "0x4000855")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[SerializeField]
		private Vector4 _handleLimits;

		[Token(Token = "0x4000856")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[SerializeField]
		public PointerDownMode[] PointerDownPriority;

		[Token(Token = "0x4000857")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[SerializeField]
		private int _handleCreateLimit;

		[Token(Token = "0x4000858")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[SerializeField]
		private List<Handle> _handles;

		[Token(Token = "0x4000859")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[SerializeField]
		private RectTransform _handleContainerRect;

		[Token(Token = "0x400085A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[SerializeField]
		private RectTransform _handlePrefab;

		[Token(Token = "0x400085B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[SerializeField]
		private float _dragTimeThreshold;

		[Token(Token = "0x400085C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[SerializeField]
		private UnityEvent<RectTransform, bool> _onHandleBecameAvailable;

		[Token(Token = "0x400085D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[SerializeField]
		private UnityEvent<RectTransform, Vector2> _onValueChanged;

		[Token(Token = "0x400085E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private Vector2 _offset;

		[Token(Token = "0x400085F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private DrivenRectTransformTracker _tracker;

		[Token(Token = "0x4000860")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x161")]
		private bool _delayedUpdateVisuals;

		[Token(Token = "0x4000861")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private readonly Dictionary<int, InternalHandleData> _handleData;

		[Token(Token = "0x4000863")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		public Func<Vector2, bool> CustomFunction;

		[Token(Token = "0x17000119")]
		public Vector2 Dimensions
		{
			[Token(Token = "0x600089F")]
			[Address(RVA = "0x178F748", Offset = "0x178F748", VA = "0x178F748")]
			get
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x1700011A")]
		public Vector2 Origin
		{
			[Token(Token = "0x60008A1")]
			[Address(RVA = "0x178FBD0", Offset = "0x178FBD0", VA = "0x178FBD0")]
			get
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x1700011B")]
		public Vector4 HandleLimits
		{
			[Token(Token = "0x60008A3")]
			[Address(RVA = "0x178FC74", Offset = "0x178FC74", VA = "0x178FC74")]
			get
			{
				return default(Vector4);
			}
		}

		[Token(Token = "0x1700011C")]
		public int HandleCreateLimit
		{
			[Token(Token = "0x60008A5")]
			[Address(RVA = "0x178FD3C", Offset = "0x178FD3C", VA = "0x178FD3C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60008A6")]
			[Address(RVA = "0x178FD44", Offset = "0x178FD44", VA = "0x178FD44")]
			set
			{
			}
		}

		[Token(Token = "0x1700011D")]
		public IReadOnlyList<Handle> Handles
		{
			[Token(Token = "0x60008A7")]
			[Address(RVA = "0x178FD4C", Offset = "0x178FD4C", VA = "0x178FD4C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700011E")]
		public UnityEvent<RectTransform, bool> OnHandleBecameAvailable
		{
			[Token(Token = "0x60008A8")]
			[Address(RVA = "0x178FD54", Offset = "0x178FD54", VA = "0x178FD54")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700011F")]
		public UnityEvent<RectTransform, Vector2> OnValueChanged
		{
			[Token(Token = "0x60008A9")]
			[Address(RVA = "0x178FD5C", Offset = "0x178FD5C", VA = "0x178FD5C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000120")]
		public RectTransform HandleContainerRect
		{
			[Token(Token = "0x60008AA")]
			[Address(RVA = "0x178FD64", Offset = "0x178FD64", VA = "0x178FD64")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000121")]
		public RectTransform HandlePrefab
		{
			[Token(Token = "0x60008AB")]
			[Address(RVA = "0x178FD6C", Offset = "0x178FD6C", VA = "0x178FD6C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000122")]
		public Handle ActiveHandle
		{
			[Token(Token = "0x60008AC")]
			[Address(RVA = "0x178FD74", Offset = "0x178FD74", VA = "0x178FD74")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60008AD")]
			[Address(RVA = "0x178FD7C", Offset = "0x178FD7C", VA = "0x178FD7C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x60008A0")]
		[Address(RVA = "0x178F750", Offset = "0x178F750", VA = "0x178F750")]
		public void SetDimensions(Vector2 value, bool update = true, bool notify = true)
		{
		}

		[Token(Token = "0x60008A2")]
		[Address(RVA = "0x178FBDC", Offset = "0x178FBDC", VA = "0x178FBDC")]
		public void SetOrigin(Vector2 value, bool update = true, bool notify = true)
		{
		}

		[Token(Token = "0x60008A4")]
		[Address(RVA = "0x178FC88", Offset = "0x178FC88", VA = "0x178FC88")]
		public void SetHandleLimits(Vector4 value, bool update = true, bool notify = true)
		{
		}

		[Token(Token = "0x60008AE")]
		[Address(RVA = "0x178FD8C", Offset = "0x178FD8C", VA = "0x178FD8C")]
		protected MultiHandleRect()
		{
		}

		[Token(Token = "0x60008AF")]
		[Address(RVA = "0x178FFC8", Offset = "0x178FFC8", VA = "0x178FFC8", Slot = "46")]
		public virtual void Rebuild(CanvasUpdate executing)
		{
		}

		[Token(Token = "0x60008B0")]
		[Address(RVA = "0x178FFCC", Offset = "0x178FFCC", VA = "0x178FFCC", Slot = "47")]
		public virtual void LayoutComplete()
		{
		}

		[Token(Token = "0x60008B1")]
		[Address(RVA = "0x178FFD0", Offset = "0x178FFD0", VA = "0x178FFD0", Slot = "48")]
		public virtual void GraphicUpdateComplete()
		{
		}

		[Token(Token = "0x60008B2")]
		[Address(RVA = "0x178FFD4", Offset = "0x178FFD4", VA = "0x178FFD4", Slot = "5")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x60008B3")]
		[Address(RVA = "0x1790564", Offset = "0x1790564", VA = "0x1790564", Slot = "7")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x60008B4")]
		[Address(RVA = "0x1790588", Offset = "0x1790588", VA = "0x1790588", Slot = "49")]
		public virtual Handle RegisterHandle(RectTransform handle, bool notify = true)
		{
			return null;
		}

		[Token(Token = "0x60008B5")]
		[Address(RVA = "0x1790AB4", Offset = "0x1790AB4", VA = "0x1790AB4", Slot = "50")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x60008B6")]
		[Address(RVA = "0x1790ACC", Offset = "0x1790ACC", VA = "0x1790ACC", Slot = "51")]
		public virtual void Set(Handle handle, Vector2 input, bool sendCallback = true)
		{
		}

		[Token(Token = "0x60008B7")]
		[Address(RVA = "0x178F7E8", Offset = "0x178F7E8", VA = "0x178F7E8")]
		public void Refresh(bool notify)
		{
		}

		[Token(Token = "0x60008B8")]
		[Address(RVA = "0x1790BCC", Offset = "0x1790BCC", VA = "0x1790BCC", Slot = "10")]
		protected override void OnRectTransformDimensionsChange()
		{
		}

		[Token(Token = "0x60008B9")]
		[Address(RVA = "0x17903DC", Offset = "0x17903DC", VA = "0x17903DC")]
		private void UpdateVisuals(Handle handle)
		{
		}

		[Token(Token = "0x60008BA")]
		[Address(RVA = "0x1790F90", Offset = "0x1790F90", VA = "0x1790F90")]
		private void UpdateDrag(PointerEventData eventData, Camera cam)
		{
		}

		[Token(Token = "0x60008BB")]
		[Address(RVA = "0x1791048", Offset = "0x1791048", VA = "0x1791048")]
		private bool TryGetPointerValue(PointerEventData eventData, Camera cam, out Vector2 value)
		{
			return default(bool);
		}

		[Token(Token = "0x60008BC")]
		[Address(RVA = "0x17912F0", Offset = "0x17912F0", VA = "0x17912F0")]
		private bool MayDrag(PointerEventData eventData)
		{
			return default(bool);
		}

		[Token(Token = "0x60008BD")]
		[Address(RVA = "0x1791354", Offset = "0x1791354", VA = "0x1791354", Slot = "32")]
		public override void OnPointerDown(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60008BE")]
		[Address(RVA = "0x1791EE4", Offset = "0x1791EE4", VA = "0x1791EE4", Slot = "33")]
		public override void OnPointerUp(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60008BF")]
		[Address(RVA = "0x1791F18", Offset = "0x1791F18", VA = "0x1791F18", Slot = "52")]
		public virtual void OnInitializePotentialDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60008C0")]
		[Address(RVA = "0x1791F30", Offset = "0x1791F30", VA = "0x1791F30", Slot = "53")]
		public virtual void OnDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60008C1")]
		[Address(RVA = "0x1791E04", Offset = "0x1791E04", VA = "0x1791E04")]
		public Handle CreateNewHandle(Vector2 value, bool notify = true)
		{
			return null;
		}

		[Token(Token = "0x60008C2")]
		[Address(RVA = "0x1791FA4", Offset = "0x1791FA4", VA = "0x1791FA4")]
		public void DestroyHandle(RectTransform handle, bool notify = true)
		{
		}

		[Token(Token = "0x60008C3")]
		[Address(RVA = "0x1792210", Offset = "0x1792210", VA = "0x1792210")]
		public void Clear(bool notify = true)
		{
		}

		[Token(Token = "0x60008C4")]
		public static T GetOrAddComponent<T>(Component source) where T : Component
		{
			return null;
		}

		[SpecialName]
		[Token(Token = "0x60008C5")]
		[Address(RVA = "0x17927B4", Offset = "0x17927B4", VA = "0x17927B4", Slot = "42")]
		private Transform UnityEngine.UI.ICanvasElement.get_transform()
		{
			return null;
		}
	}
	[Token(Token = "0x2000194")]
	internal static class MultipleDisplayUtilities
	{
		[Token(Token = "0x60008D9")]
		[Address(RVA = "0x1791280", Offset = "0x1791280", VA = "0x1791280")]
		public static bool GetRelativeMousePositionForDrag(PointerEventData eventData, ref Vector2 position)
		{
			return default(bool);
		}

		[Token(Token = "0x60008DA")]
		[Address(RVA = "0x1792DA0", Offset = "0x1792DA0", VA = "0x1792DA0")]
		public static Vector3 RelativeMouseAtScaled(Vector2 position)
		{
			return default(Vector3);
		}
	}
	[Token(Token = "0x2000195")]
	internal static class SetPropertyUtility
	{
		[Token(Token = "0x60008DB")]
		[Address(RVA = "0x1793130", Offset = "0x1793130", VA = "0x1793130")]
		public static bool SetColor(ref Color currentValue, Color newValue)
		{
			return default(bool);
		}

		[Token(Token = "0x60008DC")]
		public static bool SetStruct<T>(ref T currentValue, T newValue) where T : struct
		{
			return default(bool);
		}

		[Token(Token = "0x60008DD")]
		public static bool SetClass<T>(ref T currentValue, T newValue) where T : class
		{
			return default(bool);
		}

		[Token(Token = "0x60008DE")]
		public static bool SetValue<T>(ref T currentValue, ref T newValue)
		{
			return default(bool);
		}
	}
}
namespace UI
{
	[Token(Token = "0x2000196")]
	public class CameraSetup : MonoBehaviour, ICameraSetup
	{
		[Serializable]
		[Token(Token = "0x2000197")]
		public class CameraSettings
		{
			[Token(Token = "0x4000892")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool IsPhysical;

			[Token(Token = "0x4000893")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float FieldOfView;

			[Token(Token = "0x4000894")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float FocalLength;

			[Token(Token = "0x600090E")]
			[Address(RVA = "0x179377C", Offset = "0x179377C", VA = "0x179377C")]
			public void SetSettings(Camera camera)
			{
			}

			[Token(Token = "0x600090F")]
			[Address(RVA = "0x1795ED0", Offset = "0x1795ED0", VA = "0x1795ED0")]
			public float GetFocalLenghtBasedOnAspectRatio(float aspect)
			{
				return default(float);
			}

			[Token(Token = "0x6000910")]
			[Address(RVA = "0x1795F00", Offset = "0x1795F00", VA = "0x1795F00")]
			public CameraSettings()
			{
			}
		}

		[Token(Token = "0x400087A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Camera _camera;

		[Token(Token = "0x400087B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private CameraSettings _phoneSettings;

		[Token(Token = "0x400087C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private CameraSettings _tabletSettings;

		[Token(Token = "0x400087D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private FingersPanOrbitComponentScript _fingersPanOrbitComponent;

		[Token(Token = "0x400087E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Transform _cameraOrbit;

		[Token(Token = "0x400087F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Transform _negativeIsolateReturnPosition;

		[Token(Token = "0x4000880")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Transform _positiveIsolateReturnPosition;

		[Token(Token = "0x4000881")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private FingersPanOrbitHelperSettings _fingersPanOrbitHelperSettings;

		[Token(Token = "0x4000882")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private ModuleProviderBehaviour _singlePlayerModuleProvider;

		[Token(Token = "0x4000883")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private UISpawnerController _uiSpawnerController;

		[Token(Token = "0x4000884")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Vector2 _animationOffset;

		[Token(Token = "0x4000885")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private float _animationTime;

		[Token(Token = "0x4000886")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private FingersPanOrbitHelper _fingersPanOrbitHelper;

		[Token(Token = "0x4000887")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Vector3 _beforeCenterPosition;

		[Token(Token = "0x4000888")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private float _oldMaxXDegrees;

		[Token(Token = "0x4000889")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private float _oldMaxYDegrees;

		[Token(Token = "0x400088A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private Vector3 _orbitTargetOriginalPosition;

		[Token(Token = "0x400088B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Vector3 _orbitCameraOriginalPosition;

		[Token(Token = "0x400088C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private Vector3 _orbitTargetOriginalLocalPosition;

		[Token(Token = "0x400088D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private IModuleProvider _moduleProvider;

		[Token(Token = "0x400088E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private Tween _offsetCameraTween;

		[Token(Token = "0x400088F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Tween _recenter;

		[Token(Token = "0x4000890")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private IDisposable _recenterKillDisposable;

		[Token(Token = "0x17000123")]
		private Transform Orbiter
		{
			[Token(Token = "0x60008DF")]
			[Address(RVA = "0x1793178", Offset = "0x1793178", VA = "0x1793178")]
			get
			{
				return null;
			}
			[Token(Token = "0x60008E0")]
			[Address(RVA = "0x1793194", Offset = "0x1793194", VA = "0x1793194")]
			set
			{
			}
		}

		[Token(Token = "0x17000124")]
		private Transform OrbitTarget
		{
			[Token(Token = "0x60008E1")]
			[Address(RVA = "0x17931B0", Offset = "0x17931B0", VA = "0x17931B0")]
			get
			{
				return null;
			}
			[Token(Token = "0x60008E2")]
			[Address(RVA = "0x17931CC", Offset = "0x17931CC", VA = "0x17931CC")]
			set
			{
			}
		}

		[Token(Token = "0x17000125")]
		public Camera Camera
		{
			[Token(Token = "0x60008E3")]
			[Address(RVA = "0x17931E8", Offset = "0x17931E8", VA = "0x17931E8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000126")]
		public bool MovementEnabled
		{
			[Token(Token = "0x60008E4")]
			[Address(RVA = "0x17931F0", Offset = "0x17931F0", VA = "0x17931F0")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60008E5")]
			[Address(RVA = "0x17931F8", Offset = "0x17931F8", VA = "0x17931F8")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x60008E6")]
		[Address(RVA = "0x1793204", Offset = "0x1793204", VA = "0x1793204")]
		private void Start()
		{
		}

		[Token(Token = "0x60008E7")]
		[Address(RVA = "0x1793810", Offset = "0x1793810", VA = "0x1793810")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60008E8")]
		[Address(RVA = "0x179397C", Offset = "0x179397C", VA = "0x179397C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60008E9")]
		[Address(RVA = "0x1793A24", Offset = "0x1793A24", VA = "0x1793A24")]
		public void SetMovementEnabled(bool value)
		{
		}

		[Token(Token = "0x60008EA")]
		[Address(RVA = "0x1793A6C", Offset = "0x1793A6C", VA = "0x1793A6C", Slot = "4")]
		public Vector3 GetCameraPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60008EB")]
		[Address(RVA = "0x1793A94", Offset = "0x1793A94", VA = "0x1793A94", Slot = "5")]
		public void CenterCamera(Transform transform)
		{
		}

		[Token(Token = "0x60008EC")]
		[Address(RVA = "0x1793F30", Offset = "0x1793F30", VA = "0x1793F30")]
		public void CenterCamera(Vector3 position, float parentSize)
		{
		}

		[Token(Token = "0x60008ED")]
		[Address(RVA = "0x17942F0", Offset = "0x17942F0", VA = "0x17942F0", Slot = "6")]
		public void ResetTransform()
		{
		}

		[Token(Token = "0x60008EE")]
		[Address(RVA = "0x17942F8", Offset = "0x17942F8", VA = "0x17942F8")]
		public void ResetTransform(float duration)
		{
		}

		[Token(Token = "0x60008EF")]
		[Address(RVA = "0x1794E20", Offset = "0x1794E20", VA = "0x1794E20")]
		public void ResetTransformNoAnimations()
		{
		}

		[Token(Token = "0x60008F0")]
		[Address(RVA = "0x1794ECC", Offset = "0x1794ECC", VA = "0x1794ECC")]
		public Tweener MoveCameraBack()
		{
			return null;
		}

		[Token(Token = "0x60008F1")]
		[Address(RVA = "0x17952A0", Offset = "0x17952A0", VA = "0x17952A0", Slot = "7")]
		public void RestrictCameraRotation(bool value)
		{
		}

		[Token(Token = "0x60008F2")]
		[Address(RVA = "0x17952DC", Offset = "0x17952DC", VA = "0x17952DC", Slot = "9")]
		public void OffsetCamera(bool val)
		{
		}

		[Token(Token = "0x60008F3")]
		[Address(RVA = "0x1795474", Offset = "0x1795474", VA = "0x1795474", Slot = "10")]
		public void OffsetCameraNoAnimation(bool val)
		{
		}

		[Token(Token = "0x60008F4")]
		[Address(RVA = "0x1795508", Offset = "0x1795508", VA = "0x1795508")]
		public void SwapOrbiters(Transform newOrbiter, Transform newOrbitTarget, bool useOneAxis, bool usePanning, bool useScaling, float ySpeed)
		{
		}

		[Token(Token = "0x60008F5")]
		[Address(RVA = "0x17955A8", Offset = "0x17955A8", VA = "0x17955A8", Slot = "8")]
		public void SetRotationPivot(Transform item)
		{
		}

		[Token(Token = "0x60008F6")]
		[Address(RVA = "0x17955F4", Offset = "0x17955F4", VA = "0x17955F4")]
		private void DoRotateModel1420962548(float angle)
		{
		}

		[Token(Token = "0x60008F7")]
		[Address(RVA = "0x1795614", Offset = "0x1795614", VA = "0x1795614")]
		private static Tweener DoRotateAroundUp(Transform t, Transform point, float angle, float duration)
		{
			return null;
		}

		[Token(Token = "0x60008F8")]
		[Address(RVA = "0x179577C", Offset = "0x179577C", VA = "0x179577C")]
		private static void SetRotateAroundUpAngle(Transform t, Transform point, float angle)
		{
		}

		[Token(Token = "0x60008F9")]
		[Address(RVA = "0x179594C", Offset = "0x179594C", VA = "0x179594C")]
		public void FocusOnObject(Vector3 position)
		{
		}

		[Token(Token = "0x60008FA")]
		[Address(RVA = "0x17959A4", Offset = "0x17959A4", VA = "0x17959A4")]
		private void DoRotateModel(float angle)
		{
		}

		[Token(Token = "0x60008FB")]
		[Address(RVA = "0x17959C4", Offset = "0x17959C4", VA = "0x17959C4")]
		public CameraSetup()
		{
		}
	}
	[Token(Token = "0x200019E")]
	public interface ICameraSetup
	{
		[Token(Token = "0x6000928")]
		Vector3 GetCameraPosition();

		[Token(Token = "0x6000929")]
		void CenterCamera(Transform transform);

		[Token(Token = "0x600092A")]
		void ResetTransform();

		[Token(Token = "0x600092B")]
		void RestrictCameraRotation(bool value);

		[Token(Token = "0x600092C")]
		void SetRotationPivot(Transform transform);

		[Token(Token = "0x600092D")]
		void OffsetCamera(bool value);

		[Token(Token = "0x600092E")]
		void OffsetCameraNoAnimation(bool value);
	}
	[Token(Token = "0x200019F")]
	public class InteractiveButton2D : MonoBehaviour
	{
		[Token(Token = "0x40008AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Button _button;

		[Token(Token = "0x600092F")]
		[Address(RVA = "0x1796BD8", Offset = "0x1796BD8", VA = "0x1796BD8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000930")]
		[Address(RVA = "0x1796CB0", Offset = "0x1796CB0", VA = "0x1796CB0")]
		private void OnButtonClick()
		{
		}

		[Token(Token = "0x6000931")]
		[Address(RVA = "0x1796CB8", Offset = "0x1796CB8", VA = "0x1796CB8")]
		private void OnClick()
		{
		}

		[Token(Token = "0x6000932")]
		[Address(RVA = "0x1796CB4", Offset = "0x1796CB4", VA = "0x1796CB4")]
		private void SetVisual()
		{
		}

		[Token(Token = "0x6000933")]
		[Address(RVA = "0x1796CBC", Offset = "0x1796CBC", VA = "0x1796CBC")]
		public void SetGraphicsVisibility(bool val)
		{
		}

		[Token(Token = "0x6000934")]
		[Address(RVA = "0x1796DD8", Offset = "0x1796DD8", VA = "0x1796DD8")]
		public InteractiveButton2D()
		{
		}
	}
	[Token(Token = "0x20001A0")]
	public class InteractiveToggle2D : MonoBehaviour
	{
		[Token(Token = "0x40008AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Toggle _toggle;

		[Token(Token = "0x40008AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Image _ramik;

		[Token(Token = "0x40008B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Image _toggleBackground;

		[Token(Token = "0x40008B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Sprite _toggleOnButton;

		[Token(Token = "0x40008B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Sprite _toggleOffButton;

		[Token(Token = "0x40008B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private bool _changeCollor;

		[Token(Token = "0x40008B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private Color _toggleOffCollor;

		[Token(Token = "0x40008B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		private Color _toggleOnCollor;

		[Token(Token = "0x40008B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Text _text;

		[Token(Token = "0x40008B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private string _textOn;

		[Token(Token = "0x40008B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private string _textOff;

		[Token(Token = "0x40008B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private Image _icon;

		[Token(Token = "0x40008BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private bool _useCustomToggleGroup;

		[Token(Token = "0x40008BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private Image _baseImage;

		[Token(Token = "0x40008BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float _baseAlpha;

		[Token(Token = "0x40008BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private bool _lastToggleValue;

		[Token(Token = "0x40008BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private ToggleGroup _toggleGroup;

		[Token(Token = "0x17000127")]
		public Toggle Toggle
		{
			[Token(Token = "0x6000935")]
			[Address(RVA = "0x1796DE0", Offset = "0x1796DE0", VA = "0x1796DE0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000936")]
		[Address(RVA = "0x1796DE8", Offset = "0x1796DE8", VA = "0x1796DE8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000937")]
		[Address(RVA = "0x1796EA8", Offset = "0x1796EA8", VA = "0x1796EA8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000938")]
		[Address(RVA = "0x179725C", Offset = "0x179725C", VA = "0x179725C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000939")]
		[Address(RVA = "0x17972A8", Offset = "0x17972A8", VA = "0x17972A8")]
		private void OnToggleValueChanged(bool value)
		{
		}

		[Token(Token = "0x600093A")]
		[Address(RVA = "0x1797068", Offset = "0x1797068", VA = "0x1797068")]
		private void SetVisual()
		{
		}

		[Token(Token = "0x600093B")]
		[Address(RVA = "0x1797388", Offset = "0x1797388", VA = "0x1797388")]
		public void SetInteractability(bool val, float amount = 0.1f)
		{
		}

		[Token(Token = "0x600093C")]
		[Address(RVA = "0x1796F60", Offset = "0x1796F60", VA = "0x1796F60")]
		private void SetToggleGroup(Toggle toggle, ToggleGroup newGroup)
		{
		}

		[Token(Token = "0x600093D")]
		[Address(RVA = "0x17974FC", Offset = "0x17974FC", VA = "0x17974FC")]
		public InteractiveToggle2D()
		{
		}
	}
	[Token(Token = "0x20001A1")]
	public class SubscriptionOfferView : MonoBehaviour
	{
		[Token(Token = "0x40008BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Text _titleText;

		[Token(Token = "0x40008C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Text _subtitleText;

		[Token(Token = "0x40008C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Text _contentText;

		[Token(Token = "0x40008C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private TextMeshProUGUI _originalPriceText;

		[Token(Token = "0x40008C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Text _specialPriceTitleText;

		[Token(Token = "0x40008C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Text _specialPricePriceText;

		[Token(Token = "0x40008C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Text _specialPriceCustomPriceText;

		[Token(Token = "0x40008C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Button _button;

		[Token(Token = "0x40008C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Text _buttonText;

		[Token(Token = "0x17000128")]
		public Text TitleText
		{
			[Token(Token = "0x600093E")]
			[Address(RVA = "0x1797504", Offset = "0x1797504", VA = "0x1797504")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000129")]
		public Text SubtitleText
		{
			[Token(Token = "0x600093F")]
			[Address(RVA = "0x179750C", Offset = "0x179750C", VA = "0x179750C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700012A")]
		public Text ContentText
		{
			[Token(Token = "0x6000940")]
			[Address(RVA = "0x1797514", Offset = "0x1797514", VA = "0x1797514")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700012B")]
		public Text SpecialPriceTitleText
		{
			[Token(Token = "0x6000941")]
			[Address(RVA = "0x179751C", Offset = "0x179751C", VA = "0x179751C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700012C")]
		public Text SpecialPricePriceText
		{
			[Token(Token = "0x6000942")]
			[Address(RVA = "0x1797524", Offset = "0x1797524", VA = "0x1797524")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700012D")]
		public Text SpecialPriceCustomPriceText
		{
			[Token(Token = "0x6000943")]
			[Address(RVA = "0x179752C", Offset = "0x179752C", VA = "0x179752C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700012E")]
		public TextMeshProUGUI OriginalPriceText
		{
			[Token(Token = "0x6000944")]
			[Address(RVA = "0x1797534", Offset = "0x1797534", VA = "0x1797534")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700012F")]
		public Text ButtonText
		{
			[Token(Token = "0x6000945")]
			[Address(RVA = "0x179753C", Offset = "0x179753C", VA = "0x179753C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000130")]
		public Button Button
		{
			[Token(Token = "0x6000946")]
			[Address(RVA = "0x1797544", Offset = "0x1797544", VA = "0x1797544")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000947")]
		[Address(RVA = "0x179754C", Offset = "0x179754C", VA = "0x179754C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000948")]
		[Address(RVA = "0x17975BC", Offset = "0x17975BC", VA = "0x17975BC")]
		public SubscriptionOfferView()
		{
		}
	}
	[Token(Token = "0x20001A2")]
	public class AnimatedSpriteSwap : MonoBehaviour
	{
		[Token(Token = "0x40008C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Selectable _selectable;

		[Token(Token = "0x40008C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Image _idleImage;

		[Token(Token = "0x40008CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Image _stateImage;

		[Token(Token = "0x40008CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Image _stateImage2;

		[Token(Token = "0x40008CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Sprite _idle;

		[Token(Token = "0x40008CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Sprite _highlighted;

		[Token(Token = "0x40008CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Sprite _pressed;

		[Token(Token = "0x40008CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private float _duration;

		[Token(Token = "0x40008D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private SelectionState _lastSelectionState;

		[Token(Token = "0x40008D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private SpriteSwapHelper _spriteSwapHelper;

		[Token(Token = "0x6000949")]
		[Address(RVA = "0x17975C4", Offset = "0x17975C4", VA = "0x17975C4")]
		private void Start()
		{
		}

		[Token(Token = "0x600094A")]
		[Address(RVA = "0x1797704", Offset = "0x1797704", VA = "0x1797704")]
		private void Update()
		{
		}

		[Token(Token = "0x600094B")]
		[Address(RVA = "0x1797784", Offset = "0x1797784", VA = "0x1797784")]
		private void OnCurrentSelectionStateChanged(SelectionState value)
		{
		}

		[Token(Token = "0x600094C")]
		[Address(RVA = "0x17978A0", Offset = "0x17978A0", VA = "0x17978A0")]
		private Sprite GetSprite(SelectionState selectionState)
		{
			return null;
		}

		[Token(Token = "0x600094D")]
		[Address(RVA = "0x1797BAC", Offset = "0x1797BAC", VA = "0x1797BAC")]
		public AnimatedSpriteSwap()
		{
		}
	}
	[Token(Token = "0x20001A3")]
	public class ButtonPressSound : MonoBehaviour
	{
		[Token(Token = "0x40008D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Button _button;

		[Token(Token = "0x40008D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioClip _audioClip;

		[Token(Token = "0x600094E")]
		[Address(RVA = "0x1797BC0", Offset = "0x1797BC0", VA = "0x1797BC0")]
		private void Start()
		{
		}

		[Token(Token = "0x600094F")]
		[Address(RVA = "0x1797C54", Offset = "0x1797C54", VA = "0x1797C54")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000950")]
		[Address(RVA = "0x1797CE8", Offset = "0x1797CE8", VA = "0x1797CE8")]
		private void OnClick()
		{
		}

		[Token(Token = "0x6000951")]
		[Address(RVA = "0x1797D3C", Offset = "0x1797D3C", VA = "0x1797D3C")]
		public ButtonPressSound()
		{
		}
	}
	[Token(Token = "0x20001A4")]
	public class ColorPointInstance : MonoBehaviour
	{
		[Token(Token = "0x40008D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Image Image;

		[Token(Token = "0x40008D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RectTransform MenuPosition;

		[Token(Token = "0x6000952")]
		[Address(RVA = "0x1797D44", Offset = "0x1797D44", VA = "0x1797D44")]
		public ColorPointInstance()
		{
		}
	}
	[Token(Token = "0x20001A5")]
	public class Ruler : MonoBehaviour
	{
		[Token(Token = "0x40008D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private RectTransform _segmentsContent;

		[Token(Token = "0x40008D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private RectTransform _textsContent;

		[Token(Token = "0x40008D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private RectTransform _segmentsParent;

		[Token(Token = "0x40008D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private RectTransform _textsParent;

		[Token(Token = "0x40008DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private List<Image> _segmentElements;

		[Token(Token = "0x40008DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private List<TextMeshProUGUI> _texts;

		[Token(Token = "0x40008DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Vector2 _range;

		[Token(Token = "0x40008DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Vector2 _scale;

		[Token(Token = "0x40008DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private float _rescaleThreshold;

		[Token(Token = "0x40008DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private string _numberFormat;

		[Token(Token = "0x40008E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		[Header("Generation Parameters")]
		private int _segmentElementCount;

		[Token(Token = "0x40008E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[SerializeField]
		private int _segmentCount;

		[Token(Token = "0x40008E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private float _segmentElementWidth;

		[Token(Token = "0x40008E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[SerializeField]
		private float _segmentElementHeightAnchor;

		[Token(Token = "0x17000131")]
		public Vector2 Range
		{
			[Token(Token = "0x6000953")]
			[Address(RVA = "0x1797D4C", Offset = "0x1797D4C", VA = "0x1797D4C")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x6000954")]
			[Address(RVA = "0x1797D54", Offset = "0x1797D54", VA = "0x1797D54")]
			set
			{
			}
		}

		[Token(Token = "0x17000132")]
		public Vector2 Scale
		{
			[Token(Token = "0x6000955")]
			[Address(RVA = "0x17982AC", Offset = "0x17982AC", VA = "0x17982AC")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x6000956")]
			[Address(RVA = "0x17982B4", Offset = "0x17982B4", VA = "0x17982B4")]
			set
			{
			}
		}

		[Token(Token = "0x17000133")]
		public string NumberFormat
		{
			[Token(Token = "0x6000957")]
			[Address(RVA = "0x1798330", Offset = "0x1798330", VA = "0x1798330")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000958")]
			[Address(RVA = "0x1798338", Offset = "0x1798338", VA = "0x1798338")]
			set
			{
			}
		}

		[Token(Token = "0x6000959")]
		[Address(RVA = "0x1797DD0", Offset = "0x1797DD0", VA = "0x1797DD0")]
		public void UpdateVisual()
		{
		}

		[Token(Token = "0x600095A")]
		[Address(RVA = "0x17983A0", Offset = "0x17983A0", VA = "0x17983A0")]
		public Ruler()
		{
		}
	}
	[Token(Token = "0x20001A6")]
	public class SelectableScaleAnimation : MonoBehaviour
	{
		[Token(Token = "0x40008E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Selectable _selectable;

		[Token(Token = "0x40008E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _scale;

		[Token(Token = "0x40008E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float _duration;

		[Token(Token = "0x40008E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private SelectionState _lastSelectionState;

		[Token(Token = "0x40008E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private TweenerCore<Vector3, Vector3, VectorOptions> _tweener;

		[Token(Token = "0x40008E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 _zOriginalScale;

		[Token(Token = "0x600095B")]
		[Address(RVA = "0x17984B8", Offset = "0x17984B8", VA = "0x17984B8")]
		private void Awake()
		{
		}

		[Token(Token = "0x600095C")]
		[Address(RVA = "0x17984F0", Offset = "0x17984F0", VA = "0x17984F0")]
		private void Update()
		{
		}

		[Token(Token = "0x600095D")]
		[Address(RVA = "0x179869C", Offset = "0x179869C", VA = "0x179869C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600095E")]
		[Address(RVA = "0x1798574", Offset = "0x1798574", VA = "0x1798574")]
		private void OnCurrentSelectionStateChanged(SelectionState value, float duration)
		{
		}

		[Token(Token = "0x600095F")]
		[Address(RVA = "0x1798714", Offset = "0x1798714", VA = "0x1798714")]
		public SelectableScaleAnimation()
		{
		}
	}
	[Token(Token = "0x20001A7")]
	public class SpatialPressAnimation : MonoBehaviour
	{
		[Token(Token = "0x40008EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Selectable _selectable;

		[Token(Token = "0x40008EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _zOffset;

		[Token(Token = "0x40008EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float _duration;

		[Token(Token = "0x40008ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private SelectionState _lastSelectionState;

		[Token(Token = "0x40008EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private TweenerCore<Vector3, Vector3, VectorOptions> _tweener;

		[Token(Token = "0x40008EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float _zOriginal;

		[Token(Token = "0x6000960")]
		[Address(RVA = "0x1798728", Offset = "0x1798728", VA = "0x1798728")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000961")]
		[Address(RVA = "0x179875C", Offset = "0x179875C", VA = "0x179875C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000962")]
		[Address(RVA = "0x179894C", Offset = "0x179894C", VA = "0x179894C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000963")]
		[Address(RVA = "0x17987E0", Offset = "0x17987E0", VA = "0x17987E0")]
		private void OnCurrentSelectionStateChanged(SelectionState value, float duration)
		{
		}

		[Token(Token = "0x6000964")]
		[Address(RVA = "0x17989C4", Offset = "0x17989C4", VA = "0x17989C4")]
		public SpatialPressAnimation()
		{
		}
	}
	[Token(Token = "0x20001A8")]
	public class SpatialToggleAnimation : MonoBehaviour
	{
		[Token(Token = "0x40008F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Toggle _toggle;

		[Token(Token = "0x40008F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Axis _axis;

		[Token(Token = "0x40008F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float _axisOffset;

		[Token(Token = "0x40008F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float _duration;

		[Token(Token = "0x40008F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private TweenerCore<Vector3, Vector3, VectorOptions> _tweener;

		[Token(Token = "0x40008F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float _axisOriginal;

		[Token(Token = "0x40008F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private IDisposable _disposable;

		[Token(Token = "0x6000965")]
		[Address(RVA = "0x17989D8", Offset = "0x17989D8", VA = "0x17989D8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000966")]
		[Address(RVA = "0x1798BEC", Offset = "0x1798BEC", VA = "0x1798BEC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000967")]
		[Address(RVA = "0x1798C94", Offset = "0x1798C94", VA = "0x1798C94")]
		private void OnStateChanged(bool state)
		{
		}

		[Token(Token = "0x6000968")]
		[Address(RVA = "0x1798DA4", Offset = "0x1798DA4", VA = "0x1798DA4")]
		public SpatialToggleAnimation()
		{
		}
	}
	[Token(Token = "0x20001AA")]
	public class SpriteSwapHelper
	{
		[Token(Token = "0x40008F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly Image _image1;

		[Token(Token = "0x40008FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly Image _image2;

		[Token(Token = "0x40008FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly Dictionary<Image, TweenerCore<Color, Color, ColorOptions>> _tweeners;

		[Token(Token = "0x17000134")]
		public Image CurrentImage
		{
			[Token(Token = "0x600096C")]
			[Address(RVA = "0x1798E50", Offset = "0x1798E50", VA = "0x1798E50")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600096D")]
			[Address(RVA = "0x1798E58", Offset = "0x1798E58", VA = "0x1798E58")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000135")]
		public float Fade
		{
			[Token(Token = "0x600096E")]
			[Address(RVA = "0x1798E60", Offset = "0x1798E60", VA = "0x1798E60")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600096F")]
			[Address(RVA = "0x1798E68", Offset = "0x1798E68", VA = "0x1798E68")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000136")]
		public System.Collections.Generic.IReadOnlyDictionary<Image, TweenerCore<Color, Color, ColorOptions>> Tweeners
		{
			[Token(Token = "0x6000970")]
			[Address(RVA = "0x1798E70", Offset = "0x1798E70", VA = "0x1798E70")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000971")]
		[Address(RVA = "0x179763C", Offset = "0x179763C", VA = "0x179763C")]
		public SpriteSwapHelper(Image image1, Image image2)
		{
		}

		[Token(Token = "0x6000972")]
		[Address(RVA = "0x17979C0", Offset = "0x17979C0", VA = "0x17979C0")]
		public TweenerCore<Color, Color, ColorOptions> DoSwapSprite(Sprite sprite, float duration)
		{
			return null;
		}

		[Token(Token = "0x6000973")]
		[Address(RVA = "0x17978CC", Offset = "0x17978CC", VA = "0x17978CC")]
		public TweenerCore<Color, Color, ColorOptions> DoFade(float endValue, float duration)
		{
			return null;
		}
	}
	[Token(Token = "0x20001AB")]
	public class ToggleAnimatedSpriteSwap : MonoBehaviour
	{
		[Token(Token = "0x40008FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Toggle _toggle;

		[Token(Token = "0x40008FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Image _idleImage;

		[Token(Token = "0x4000900")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Image _stateImage;

		[Token(Token = "0x4000901")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Image _stateImage2;

		[Token(Token = "0x4000902")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Sprite _idle;

		[Token(Token = "0x4000903")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Sprite _highlighted;

		[Token(Token = "0x4000904")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Sprite _pressed;

		[Token(Token = "0x4000905")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Sprite _isOn;

		[Token(Token = "0x4000906")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private float _duration;

		[Token(Token = "0x4000907")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private SelectionState _lastSelectionState;

		[Token(Token = "0x4000908")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool _lastIsOn;

		[Token(Token = "0x4000909")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private SpriteSwapHelper _spriteSwapHelper;

		[Token(Token = "0x6000974")]
		[Address(RVA = "0x1799E80", Offset = "0x1799E80", VA = "0x1799E80")]
		private void Start()
		{
		}

		[Token(Token = "0x6000975")]
		[Address(RVA = "0x1799EFC", Offset = "0x1799EFC", VA = "0x1799EFC")]
		private void Update()
		{
		}

		[Token(Token = "0x6000976")]
		[Address(RVA = "0x179A024", Offset = "0x179A024", VA = "0x179A024")]
		private void SetSelectionState(SelectionState selectionState, bool isOn)
		{
		}

		[Token(Token = "0x6000977")]
		[Address(RVA = "0x179A16C", Offset = "0x179A16C", VA = "0x179A16C")]
		private Sprite GetSprite(SelectionState selectionState, bool isOn)
		{
			return null;
		}

		[Token(Token = "0x6000978")]
		[Address(RVA = "0x179A1A4", Offset = "0x179A1A4", VA = "0x179A1A4")]
		public ToggleAnimatedSpriteSwap()
		{
		}
	}
	[Token(Token = "0x20001AC")]
	public class ToggleIconSpriteSwap : MonoBehaviour
	{
		[Token(Token = "0x400090A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Toggle _toggle;

		[Token(Token = "0x400090B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Image _icon;

		[Token(Token = "0x400090C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Sprite _idle;

		[Token(Token = "0x400090D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Sprite _isOn;

		[Token(Token = "0x400090E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool _lastIsOn;

		[Token(Token = "0x6000979")]
		[Address(RVA = "0x179A1B8", Offset = "0x179A1B8", VA = "0x179A1B8")]
		private void Update()
		{
		}

		[Token(Token = "0x600097A")]
		[Address(RVA = "0x179A218", Offset = "0x179A218", VA = "0x179A218")]
		public ToggleIconSpriteSwap()
		{
		}
	}
	[Token(Token = "0x20001AD")]
	public class TogglePressSound : MonoBehaviour
	{
		[Token(Token = "0x400090F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Toggle _toggle;

		[Token(Token = "0x4000910")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioClip _audioClip;

		[Token(Token = "0x600097B")]
		[Address(RVA = "0x179A220", Offset = "0x179A220", VA = "0x179A220")]
		private void Start()
		{
		}

		[Token(Token = "0x600097C")]
		[Address(RVA = "0x179A2C8", Offset = "0x179A2C8", VA = "0x179A2C8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600097D")]
		[Address(RVA = "0x179A370", Offset = "0x179A370", VA = "0x179A370")]
		private void OnValueChanged(bool value)
		{
		}

		[Token(Token = "0x600097E")]
		[Address(RVA = "0x179A3CC", Offset = "0x179A3CC", VA = "0x179A3CC")]
		public TogglePressSound()
		{
		}
	}
	[Token(Token = "0x20001AE")]
	public class UiEventSoundHandler : MonoBehaviour, IPointerDownHandler, IEventSystemHandler, IPointerUpHandler
	{
		[Token(Token = "0x4000911")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Selectable _selectable;

		[Token(Token = "0x4000912")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioClip _buttonDown;

		[Token(Token = "0x4000913")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AudioClip _buttonUp;

		[Token(Token = "0x600097F")]
		[Address(RVA = "0x179A3D4", Offset = "0x179A3D4", VA = "0x179A3D4", Slot = "4")]
		public void OnPointerDown(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000980")]
		[Address(RVA = "0x179A490", Offset = "0x179A490", VA = "0x179A490", Slot = "5")]
		public void OnPointerUp(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000981")]
		[Address(RVA = "0x179A54C", Offset = "0x179A54C", VA = "0x179A54C")]
		public UiEventSoundHandler()
		{
		}
	}
	[Token(Token = "0x20001AF")]
	public class ButtonColorTransition : MonoBehaviour
	{
		[Token(Token = "0x4000914")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Selectable _selectable;

		[Token(Token = "0x4000915")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Image _idleImage;

		[Token(Token = "0x4000916")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Image _pressedImage;

		[Token(Token = "0x4000917")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Image _highlightImage;

		[Token(Token = "0x4000918")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Image _iconImage;

		[Token(Token = "0x4000919")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private TextMeshProUGUI _text;

		[Token(Token = "0x400091A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private float _duration;

		[Token(Token = "0x400091B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private SelectionState _lastSelectionState;

		[Token(Token = "0x17000137")]
		public TextMeshProUGUI Text
		{
			[Token(Token = "0x6000982")]
			[Address(RVA = "0x179A554", Offset = "0x179A554", VA = "0x179A554")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000983")]
			[Address(RVA = "0x179A55C", Offset = "0x179A55C", VA = "0x179A55C")]
			set
			{
			}
		}

		[Token(Token = "0x17000138")]
		public Image IdleImage
		{
			[Token(Token = "0x6000984")]
			[Address(RVA = "0x179A564", Offset = "0x179A564", VA = "0x179A564")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000139")]
		public Image PressedImage
		{
			[Token(Token = "0x6000985")]
			[Address(RVA = "0x179A56C", Offset = "0x179A56C", VA = "0x179A56C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700013A")]
		public Image HighlightImage
		{
			[Token(Token = "0x6000986")]
			[Address(RVA = "0x179A574", Offset = "0x179A574", VA = "0x179A574")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700013B")]
		public Image IconImage
		{
			[Token(Token = "0x6000987")]
			[Address(RVA = "0x179A57C", Offset = "0x179A57C", VA = "0x179A57C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700013C")]
		public float IdleBaseFade
		{
			[Token(Token = "0x6000988")]
			[Address(RVA = "0x179A584", Offset = "0x179A584", VA = "0x179A584")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000989")]
			[Address(RVA = "0x179A58C", Offset = "0x179A58C", VA = "0x179A58C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700013D")]
		public float IconBaseFade
		{
			[Token(Token = "0x600098A")]
			[Address(RVA = "0x179A594", Offset = "0x179A594", VA = "0x179A594")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600098B")]
			[Address(RVA = "0x179A59C", Offset = "0x179A59C", VA = "0x179A59C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x600098C")]
		[Address(RVA = "0x179A5A4", Offset = "0x179A5A4", VA = "0x179A5A4")]
		private void Awake()
		{
		}

		[Token(Token = "0x600098D")]
		[Address(RVA = "0x179A668", Offset = "0x179A668", VA = "0x179A668")]
		private void Update()
		{
		}

		[Token(Token = "0x600098E")]
		[Address(RVA = "0x179AA9C", Offset = "0x179AA9C", VA = "0x179AA9C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600098F")]
		[Address(RVA = "0x179AAA4", Offset = "0x179AAA4", VA = "0x179AAA4")]
		public void ForceUpdate(float duration)
		{
		}

		[Token(Token = "0x6000990")]
		[Address(RVA = "0x179A6E8", Offset = "0x179A6E8", VA = "0x179A6E8")]
		private void SetSelectionState(SelectionState selectionState, float duration)
		{
		}

		[Token(Token = "0x6000991")]
		[Address(RVA = "0x179AB24", Offset = "0x179AB24", VA = "0x179AB24")]
		public ButtonColorTransition()
		{
		}
	}
	[Token(Token = "0x20001B0")]
	public class ToggleSpriteTransition : MonoBehaviour
	{
		[Token(Token = "0x400091E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Toggle _toggle;

		[Token(Token = "0x400091F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Image _idleImage;

		[Token(Token = "0x4000920")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Image _isOnImage;

		[Token(Token = "0x4000921")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Image _pressedImage;

		[Token(Token = "0x4000922")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Image _highlightImage;

		[Token(Token = "0x4000923")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Image _iconImage;

		[Token(Token = "0x4000924")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private float _duration;

		[Token(Token = "0x4000925")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private bool _lastIsOn;

		[Token(Token = "0x1700013E")]
		public Toggle Toggle
		{
			[Token(Token = "0x6000992")]
			[Address(RVA = "0x179AB38", Offset = "0x179AB38", VA = "0x179AB38")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700013F")]
		public Image IdleImage
		{
			[Token(Token = "0x6000993")]
			[Address(RVA = "0x179AB40", Offset = "0x179AB40", VA = "0x179AB40")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000140")]
		public Image IsOnImage
		{
			[Token(Token = "0x6000994")]
			[Address(RVA = "0x179AB48", Offset = "0x179AB48", VA = "0x179AB48")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000141")]
		public Image PressedImage
		{
			[Token(Token = "0x6000995")]
			[Address(RVA = "0x179AB50", Offset = "0x179AB50", VA = "0x179AB50")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000142")]
		public Image HighlightImage
		{
			[Token(Token = "0x6000996")]
			[Address(RVA = "0x179AB58", Offset = "0x179AB58", VA = "0x179AB58")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000143")]
		public Image IconImage
		{
			[Token(Token = "0x6000997")]
			[Address(RVA = "0x179AB60", Offset = "0x179AB60", VA = "0x179AB60")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000144")]
		public SelectionState LastSelectionState
		{
			[Token(Token = "0x6000998")]
			[Address(RVA = "0x179AB68", Offset = "0x179AB68", VA = "0x179AB68")]
			[CompilerGenerated]
			get
			{
				return default(SelectionState);
			}
			[Token(Token = "0x6000999")]
			[Address(RVA = "0x179AB70", Offset = "0x179AB70", VA = "0x179AB70")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x600099A")]
		[Address(RVA = "0x179AB78", Offset = "0x179AB78", VA = "0x179AB78")]
		private void Update()
		{
		}

		[Token(Token = "0x600099B")]
		[Address(RVA = "0x179AF5C", Offset = "0x179AF5C", VA = "0x179AF5C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600099C")]
		[Address(RVA = "0x179AF64", Offset = "0x179AF64", VA = "0x179AF64")]
		public void ForceUpdate(float duration)
		{
		}

		[Token(Token = "0x600099D")]
		[Address(RVA = "0x179AC30", Offset = "0x179AC30", VA = "0x179AC30")]
		private void SetSelectionState(SelectionState selectionState, bool isOn, float duration)
		{
		}

		[Token(Token = "0x600099E")]
		[Address(RVA = "0x179B004", Offset = "0x179B004", VA = "0x179B004")]
		public ToggleSpriteTransition()
		{
		}
	}
	[Token(Token = "0x20001B1")]
	public class UiElementToolTip : MonoBehaviour
	{
		[StructLayout(3)]
		[Token(Token = "0x20001B2")]
		[CompilerGenerated]
		private struct <DisplayToolTip>d__11 : IAsyncStateMachine
		{
			[Token(Token = "0x400092D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x400092E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x400092F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public UiElementToolTip <>4__this;

			[Token(Token = "0x4000930")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private CancellationToken <token>5__2;

			[Token(Token = "0x4000931")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x60009A6")]
			[Address(RVA = "0x179B268", Offset = "0x179B268", VA = "0x179B268", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60009A7")]
			[Address(RVA = "0x179B538", Offset = "0x179B538", VA = "0x179B538", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4000927")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Selectable _selectable;

		[Token(Token = "0x4000928")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 Offset;

		[Token(Token = "0x4000929")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string Text;

		[Token(Token = "0x400092A")]
		private const int _waitingTime = 150;

		[Token(Token = "0x400092B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private CancellationTokenSource _cancellationTokenSource;

		[Token(Token = "0x400092C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private SelectionState _lastSelectionState;

		[Token(Token = "0x600099F")]
		[Address(RVA = "0x179B018", Offset = "0x179B018", VA = "0x179B018")]
		private void Update()
		{
		}

		[Token(Token = "0x60009A0")]
		[Address(RVA = "0x179B108", Offset = "0x179B108", VA = "0x179B108")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60009A1")]
		[Address(RVA = "0x179B17C", Offset = "0x179B17C", VA = "0x179B17C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60009A2")]
		[Address(RVA = "0x179B10C", Offset = "0x179B10C", VA = "0x179B10C")]
		public void ForceUpdate()
		{
		}

		[Token(Token = "0x60009A3")]
		[Address(RVA = "0x179B094", Offset = "0x179B094", VA = "0x179B094")]
		private void SetSelectionState(SelectionState selectionState)
		{
		}

		[Token(Token = "0x60009A4")]
		[Address(RVA = "0x179B1AC", Offset = "0x179B1AC", VA = "0x179B1AC")]
		[AsyncStateMachine(typeof(<DisplayToolTip>d__11))]
		public void DisplayToolTip()
		{
		}

		[Token(Token = "0x60009A5")]
		[Address(RVA = "0x179B260", Offset = "0x179B260", VA = "0x179B260")]
		public UiElementToolTip()
		{
		}
	}
}
namespace UI.Utilities
{
	[Token(Token = "0x20001B3")]
	public interface IToggle
	{
		[Token(Token = "0x1400000C")]
		event Action<bool> ValueChanged;

		[Token(Token = "0x60009AA")]
		void SetValue(bool value, bool notify);
	}
	[Token(Token = "0x20001B4")]
	public class MinMaxSliderRangeLimiter : IDisposable
	{
		[Token(Token = "0x4000932")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly MinMaxSlider _minMaxSlider;

		[Token(Token = "0x4000933")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float _lastMin;

		[Token(Token = "0x4000934")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float _lastMax;

		[Token(Token = "0x17000145")]
		public float Range
		{
			[Token(Token = "0x60009AB")]
			[Address(RVA = "0x179B544", Offset = "0x179B544", VA = "0x179B544")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60009AC")]
			[Address(RVA = "0x179B54C", Offset = "0x179B54C", VA = "0x179B54C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x60009AD")]
		[Address(RVA = "0x179B554", Offset = "0x179B554", VA = "0x179B554")]
		public MinMaxSliderRangeLimiter(MinMaxSlider minMaxSlider, float range)
		{
		}

		[Token(Token = "0x60009AE")]
		[Address(RVA = "0x179B630", Offset = "0x179B630", VA = "0x179B630")]
		private void OnValueChanged(float min, float max)
		{
		}

		[Token(Token = "0x60009AF")]
		[Address(RVA = "0x179B6D0", Offset = "0x179B6D0", VA = "0x179B6D0", Slot = "4")]
		public void Dispose()
		{
		}
	}
	[Token(Token = "0x20001B5")]
	public class MinMaxSliderValueDisplay : MonoBehaviour
	{
		[Token(Token = "0x4000936")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MinMaxSlider _minMaxSlider;

		[Token(Token = "0x4000937")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private TextMeshProUGUI _minValueText;

		[Token(Token = "0x4000938")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private TextMeshProUGUI _maxValueText;

		[Token(Token = "0x4000939")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Vector2 _valueRange;

		[Token(Token = "0x400093A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private bool _onlyWholeNumbers;

		[Token(Token = "0x400093B")]
		public const string FloatingPointFormat = "0.##";

		[Token(Token = "0x400093C")]
		public const string WholeNumberFormat = "0";

		[Token(Token = "0x17000146")]
		public bool OnlyWholeNumbers
		{
			[Token(Token = "0x60009B0")]
			[Address(RVA = "0x179B778", Offset = "0x179B778", VA = "0x179B778")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000147")]
		public Vector2 DisplayValueRange
		{
			[Token(Token = "0x60009B1")]
			[Address(RVA = "0x179B780", Offset = "0x179B780", VA = "0x179B780")]
			get
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x60009B2")]
		[Address(RVA = "0x179B788", Offset = "0x179B788", VA = "0x179B788")]
		private void Update()
		{
		}

		[Token(Token = "0x60009B3")]
		[Address(RVA = "0x179B8D0", Offset = "0x179B8D0", VA = "0x179B8D0")]
		public void SetDisplayValueRange(float min, float max)
		{
		}

		[Token(Token = "0x60009B4")]
		[Address(RVA = "0x179B8D8", Offset = "0x179B8D8", VA = "0x179B8D8")]
		public void SetDisplayValueRange(Vector2 value)
		{
		}

		[Token(Token = "0x60009B5")]
		[Address(RVA = "0x179B8E0", Offset = "0x179B8E0", VA = "0x179B8E0")]
		public void SetOnlyWholeNumbers(bool value)
		{
		}

		[Token(Token = "0x60009B6")]
		[Address(RVA = "0x179B8EC", Offset = "0x179B8EC", VA = "0x179B8EC")]
		public MinMaxSliderValueDisplay()
		{
		}
	}
	[Token(Token = "0x20001B6")]
	public class MonoEventHandler : MonoBehaviour
	{
		[Token(Token = "0x400093D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private UnityEvent<bool> _onEnabledChanged;

		[Token(Token = "0x400093E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private UnityEvent _onDestroy;

		[Token(Token = "0x17000148")]
		public UnityEvent<bool> OnEnabledChanged
		{
			[Token(Token = "0x60009B7")]
			[Address(RVA = "0x179B94C", Offset = "0x179B94C", VA = "0x179B94C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000149")]
		public UnityEvent OnDestroyed
		{
			[Token(Token = "0x60009B8")]
			[Address(RVA = "0x179B954", Offset = "0x179B954", VA = "0x179B954")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60009B9")]
		[Address(RVA = "0x179B95C", Offset = "0x179B95C", VA = "0x179B95C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60009BA")]
		[Address(RVA = "0x179B9B0", Offset = "0x179B9B0", VA = "0x179B9B0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60009BB")]
		[Address(RVA = "0x179BA04", Offset = "0x179BA04", VA = "0x179BA04")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60009BC")]
		[Address(RVA = "0x179BA20", Offset = "0x179BA20", VA = "0x179BA20")]
		public MonoEventHandler()
		{
		}
	}
	[Token(Token = "0x20001B7")]
	public class ScrollRectVerticalPositionSetter : MonoBehaviour
	{
		[Token(Token = "0x400093F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private ScrollRect _scrollRect;

		[Token(Token = "0x4000940")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Vector2 _lastSizeDelta;

		[Token(Token = "0x4000941")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float _lastVerticalNormalizedPosition;

		[Token(Token = "0x4000942")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private bool _shouldFixVerticalPosition;

		[Token(Token = "0x60009BD")]
		[Address(RVA = "0x179BAE4", Offset = "0x179BAE4", VA = "0x179BAE4")]
		private void Update()
		{
		}

		[Token(Token = "0x60009BE")]
		[Address(RVA = "0x179BBF8", Offset = "0x179BBF8", VA = "0x179BBF8")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60009BF")]
		[Address(RVA = "0x179BC48", Offset = "0x179BC48", VA = "0x179BC48")]
		public ScrollRectVerticalPositionSetter()
		{
		}
	}
	[Token(Token = "0x20001B8")]
	public enum SelectionState
	{
		[Token(Token = "0x4000944")]
		Normal,
		[Token(Token = "0x4000945")]
		Highlighted,
		[Token(Token = "0x4000946")]
		Pressed,
		[Token(Token = "0x4000947")]
		Selected,
		[Token(Token = "0x4000948")]
		Disabled
	}
	[Token(Token = "0x20001B9")]
	public static class SelectableExtensions
	{
		[Token(Token = "0x4000949")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly PropertyInfo SelectableStateInfo;

		[Token(Token = "0x400094A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly Func<Selectable, int> CurrentSelectionStateGetter;

		[Token(Token = "0x60009C0")]
		[Address(RVA = "0x1799FB0", Offset = "0x1799FB0", VA = "0x1799FB0")]
		public static SelectionState GetCurrentSelectionState(this Selectable selectable)
		{
			return default(SelectionState);
		}
	}
	[Token(Token = "0x20001BA")]
	public static class UGUIExtensions
	{
		[Token(Token = "0x60009C2")]
		[Address(RVA = "0x179BE04", Offset = "0x179BE04", VA = "0x179BE04")]
		public static void SetInteractable(this IEnumerable<Selectable> selectables, bool value)
		{
		}
	}
	[Token(Token = "0x20001BB")]
	public class ValueToggleGroup<T> : IDisposable
	{
		[Token(Token = "0x400094B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly Action<T> _onValueChanged;

		[Token(Token = "0x400094C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly Dictionary<T, IToggle> _dictionary;

		[Token(Token = "0x400094D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Action _disposeAction;

		[Token(Token = "0x1700014A")]
		public System.Collections.Generic.IReadOnlyDictionary<T, IToggle> Dictionary
		{
			[Token(Token = "0x60009C3")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700014B")]
		public bool AllowSwitchOff
		{
			[Token(Token = "0x60009C4")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60009C5")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700014C")]
		public bool SetWithoutNotifyOnValueChanged
		{
			[Token(Token = "0x60009C6")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60009C7")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x60009C8")]
		public ValueToggleGroup(IDictionary<T, IToggle> dictionary, [Optional] Action<T> onValueChanged)
		{
		}

		[Token(Token = "0x60009C9")]
		private void SubscribeOnValueChangedEvent(T value, IToggle toggle)
		{
		}

		[Token(Token = "0x60009CA")]
		public void SetValueWithoutNotify(T value)
		{
		}

		[Token(Token = "0x60009CB")]
		public void Dispose()
		{
		}
	}
}
namespace Localization
{
	[Serializable]
	[Token(Token = "0x20001BD")]
	public class AnatomyLocalizationValue
	{
		[Token(Token = "0x4000953")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LocalizationLanguage Code;

		[Token(Token = "0x4000954")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string Value;

		[Token(Token = "0x60009CF")]
		[Address(RVA = "0x179C0EC", Offset = "0x179C0EC", VA = "0x179C0EC")]
		public AnatomyLocalizationValue()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001BE")]
	public class AnatomyLocalizationItem
	{
		[Token(Token = "0x4000955")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string[] Ids;

		[Token(Token = "0x4000956")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AnatomyLocalizationValue[] Values;

		[Token(Token = "0x60009D0")]
		[Address(RVA = "0x179C0F4", Offset = "0x179C0F4", VA = "0x179C0F4")]
		public AnatomyLocalizationItem()
		{
		}
	}
	[Token(Token = "0x20001BF")]
	public class AnatomyLocalizationDatabase : ScriptableObject
	{
		[Token(Token = "0x4000957")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AnatomyLocalizationItem[] Items;

		[Token(Token = "0x60009D1")]
		[Address(RVA = "0x179C0FC", Offset = "0x179C0FC", VA = "0x179C0FC")]
		public AnatomyLocalizationDatabase()
		{
		}
	}
	[Token(Token = "0x20001C0")]
	public interface ILocalized
	{
		[Token(Token = "0x1700014D")]
		string Key
		{
			[Token(Token = "0x60009D2")]
			get;
		}

		[Token(Token = "0x60009D3")]
		void UpdateText(string value);
	}
	[Token(Token = "0x20001C1")]
	public class LocalizationManagerBehaviour : Singleton<LocalizationManagerBehaviour>
	{
		[Token(Token = "0x4000958")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private LocalizationManagerSettings _localizationManagerSettings;

		[Token(Token = "0x4000959")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AnatomyLocalizationDatabase _localization;

		[Token(Token = "0x400095A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AnatomyLocalizationDatabase _localizationUi;

		[Token(Token = "0x400095B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private LocalizationManager _localizationManager;

		[Token(Token = "0x1700014E")]
		public LocalizationManager LocalizationManager
		{
			[Token(Token = "0x60009D4")]
			[Address(RVA = "0x179C190", Offset = "0x179C190", VA = "0x179C190")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60009D5")]
		[Address(RVA = "0x179C1D0", Offset = "0x179C1D0", VA = "0x179C1D0")]
		private LocalizationManager Create()
		{
			return null;
		}

		[Token(Token = "0x60009D6")]
		[Address(RVA = "0x179C4CC", Offset = "0x179C4CC", VA = "0x179C4CC", Slot = "5")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x60009D7")]
		[Address(RVA = "0x179C540", Offset = "0x179C540", VA = "0x179C540")]
		public LocalizationManagerBehaviour()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001C2")]
	public class LocalizationManagerSettings
	{
		[Token(Token = "0x400095C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LocalizationLanguage FallbackLanguage;

		[Token(Token = "0x60009D8")]
		[Address(RVA = "0x179C5AC", Offset = "0x179C5AC", VA = "0x179C5AC")]
		public LocalizationManagerSettings()
		{
		}
	}
	[Token(Token = "0x20001C3")]
	public enum LocalizationLanguage
	{
		[Token(Token = "0x400095E")]
		Unknown = -1,
		[Token(Token = "0x400095F")]
		EN,
		[Token(Token = "0x4000960")]
		SK,
		[Token(Token = "0x4000961")]
		CZ,
		[Token(Token = "0x4000962")]
		DE,
		[Token(Token = "0x4000963")]
		ES,
		[Token(Token = "0x4000964")]
		FR,
		[Token(Token = "0x4000965")]
		IT
	}
	[Token(Token = "0x20001C4")]
	public class LocalizationManager : IDisposable
	{
		[StructLayout(3)]
		[Token(Token = "0x20001C5")]
		[CompilerGenerated]
		private struct <UpdateItems>d__25 : IAsyncStateMachine
		{
			[Token(Token = "0x400096D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x400096E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x400096F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LocalizationManager <>4__this;

			[Token(Token = "0x4000970")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private CancellationToken <cancellationToken>5__2;

			[Token(Token = "0x4000971")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <i>5__3;

			[Token(Token = "0x4000972")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private List<ILocalized>.Enumerator <>7__wrap3;

			[Token(Token = "0x4000973")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private YieldAwaitable.YieldAwaiter <>u__1;

			[Token(Token = "0x60009EB")]
			[Address(RVA = "0x179D9A0", Offset = "0x179D9A0", VA = "0x179D9A0", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60009EC")]
			[Address(RVA = "0x179DF64", Offset = "0x179DF64", VA = "0x179DF64", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4000966")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly LocalizationLanguage[] Languages;

		[Token(Token = "0x4000967")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly LocalizationManagerSettings _settings;

		[Token(Token = "0x4000968")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly Dictionary<string, Dictionary<LocalizationLanguage, string>> _localizedTextUi;

		[Token(Token = "0x4000969")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly Dictionary<string, Dictionary<LocalizationLanguage, string>> _localizedText;

		[Token(Token = "0x400096C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private CancellationTokenSource _updateItemsCancellationTokenSource;

		[Token(Token = "0x1700014F")]
		public static LocalizationManager Instance
		{
			[Token(Token = "0x60009D9")]
			[Address(RVA = "0x179C5B4", Offset = "0x179C5B4", VA = "0x179C5B4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000150")]
		public IReadOnlyCollection<System.Collections.Generic.IReadOnlyDictionary<LocalizationLanguage, string>> UiItems
		{
			[Token(Token = "0x60009DA")]
			[Address(RVA = "0x179C624", Offset = "0x179C624", VA = "0x179C624")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000151")]
		public IReadOnlyCollection<System.Collections.Generic.IReadOnlyDictionary<LocalizationLanguage, string>> Items
		{
			[Token(Token = "0x60009DB")]
			[Address(RVA = "0x179C674", Offset = "0x179C674", VA = "0x179C674")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000152")]
		public bool Initialized
		{
			[Token(Token = "0x60009DC")]
			[Address(RVA = "0x179C6C4", Offset = "0x179C6C4", VA = "0x179C6C4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000153")]
		public LocalizationLanguage Language
		{
			[Token(Token = "0x60009DD")]
			[Address(RVA = "0x179C740", Offset = "0x179C740", VA = "0x179C740")]
			[CompilerGenerated]
			get
			{
				return default(LocalizationLanguage);
			}
			[Token(Token = "0x60009DE")]
			[Address(RVA = "0x179C748", Offset = "0x179C748", VA = "0x179C748")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000154")]
		public LocalizationLanguage LanguageUi
		{
			[Token(Token = "0x60009DF")]
			[Address(RVA = "0x179C750", Offset = "0x179C750", VA = "0x179C750")]
			[CompilerGenerated]
			get
			{
				return default(LocalizationLanguage);
			}
			[Token(Token = "0x60009E0")]
			[Address(RVA = "0x179C758", Offset = "0x179C758", VA = "0x179C758")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x60009E1")]
		[Address(RVA = "0x179C330", Offset = "0x179C330", VA = "0x179C330")]
		public LocalizationManager(LocalizationManagerSettings settings)
		{
		}

		[Token(Token = "0x60009E2")]
		[Address(RVA = "0x179C52C", Offset = "0x179C52C", VA = "0x179C52C", Slot = "4")]
		public void Dispose()
		{
		}

		[Token(Token = "0x60009E3")]
		[Address(RVA = "0x179C3FC", Offset = "0x179C3FC", VA = "0x179C3FC")]
		public void LoadLocalizationData(IEnumerable<AnatomyLocalizationItem> items)
		{
		}

		[Token(Token = "0x60009E4")]
		[Address(RVA = "0x179C464", Offset = "0x179C464", VA = "0x179C464")]
		public void LoadLocalizationUiData(IEnumerable<AnatomyLocalizationItem> items)
		{
		}

		[Token(Token = "0x60009E5")]
		[Address(RVA = "0x179D2F4", Offset = "0x179D2F4", VA = "0x179D2F4")]
		[AsyncStateMachine(typeof(<UpdateItems>d__25))]
		public Task UpdateItems()
		{
			return null;
		}

		[Token(Token = "0x60009E6")]
		[Address(RVA = "0x179C760", Offset = "0x179C760", VA = "0x179C760")]
		private static void LoadLocalizedText(IEnumerable<AnatomyLocalizationItem> items, IDictionary<string, Dictionary<LocalizationLanguage, string>> localizedText)
		{
		}

		[Token(Token = "0x60009E7")]
		[Address(RVA = "0x179D3E8", Offset = "0x179D3E8", VA = "0x179D3E8")]
		public bool HasValue(string key)
		{
			return default(bool);
		}

		[Token(Token = "0x60009E8")]
		[Address(RVA = "0x179D5A4", Offset = "0x179D5A4", VA = "0x179D5A4")]
		public string GetRawValue(string key)
		{
			return null;
		}

		[Token(Token = "0x60009E9")]
		[Address(RVA = "0x179D6BC", Offset = "0x179D6BC", VA = "0x179D6BC")]
		public string GetValue(string key)
		{
			return null;
		}
	}
	[Token(Token = "0x20001C7")]
	public static class LocalizationManagerExtensions
	{
		[Token(Token = "0x60009F0")]
		[Address(RVA = "0x179E010", Offset = "0x179E010", VA = "0x179E010")]
		public static Task WaitForInitialize(this LocalizationManager localizationManager, int timeout)
		{
			return null;
		}
	}
	[Token(Token = "0x20001C9")]
	[RequireComponent(typeof(TextMeshProUGUI))]
	public class LocalizedTextMeshProGui : MonoBehaviour, ILocalized
	{
		[StructLayout(3)]
		[Token(Token = "0x20001CA")]
		[CompilerGenerated]
		private struct <OnEnable>d__18 : IAsyncStateMachine
		{
			[Token(Token = "0x400097C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x400097D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x400097E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public LocalizedTextMeshProGui <>4__this;

			[Token(Token = "0x400097F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x6000A01")]
			[Address(RVA = "0x179E514", Offset = "0x179E514", VA = "0x179E514", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000A02")]
			[Address(RVA = "0x179E7A4", Offset = "0x179E7A4", VA = "0x179E7A4", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20001CB")]
		[CompilerGenerated]
		private struct <SetKeyAndUpdate>d__19 : IAsyncStateMachine
		{
			[Token(Token = "0x4000980")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000981")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4000982")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public LocalizedTextMeshProGui <>4__this;

			[Token(Token = "0x4000983")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public string value;

			[Token(Token = "0x4000984")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x6000A03")]
			[Address(RVA = "0x179E7B0", Offset = "0x179E7B0", VA = "0x179E7B0", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000A04")]
			[Address(RVA = "0x179EA54", Offset = "0x179EA54", VA = "0x179EA54", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4000977")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string _key;

		[Token(Token = "0x4000978")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private TextMeshProUGUI _textMeshProUGUI;

		[Token(Token = "0x4000979")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private string _prefix;

		[Token(Token = "0x400097A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private string _postfix;

		[Token(Token = "0x17000155")]
		public string Key
		{
			[Token(Token = "0x60009F3")]
			[Address(RVA = "0x179E138", Offset = "0x179E138", VA = "0x179E138", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000156")]
		public string Value
		{
			[Token(Token = "0x60009F4")]
			[Address(RVA = "0x179E140", Offset = "0x179E140", VA = "0x179E140")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60009F5")]
			[Address(RVA = "0x179E148", Offset = "0x179E148", VA = "0x179E148")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000157")]
		public TextMeshProUGUI TextMeshProUGUI
		{
			[Token(Token = "0x60009F6")]
			[Address(RVA = "0x179E150", Offset = "0x179E150", VA = "0x179E150")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000158")]
		public string Prefix
		{
			[Token(Token = "0x60009F7")]
			[Address(RVA = "0x179E200", Offset = "0x179E200", VA = "0x179E200")]
			get
			{
				return null;
			}
			[Token(Token = "0x60009F8")]
			[Address(RVA = "0x179E208", Offset = "0x179E208", VA = "0x179E208")]
			set
			{
			}
		}

		[Token(Token = "0x17000159")]
		public string Postfix
		{
			[Token(Token = "0x60009F9")]
			[Address(RVA = "0x179E298", Offset = "0x179E298", VA = "0x179E298")]
			get
			{
				return null;
			}
			[Token(Token = "0x60009FA")]
			[Address(RVA = "0x179E2A0", Offset = "0x179E2A0", VA = "0x179E2A0")]
			set
			{
			}
		}

		[Token(Token = "0x60009FB")]
		[Address(RVA = "0x179E2D4", Offset = "0x179E2D4", VA = "0x179E2D4")]
		[AsyncStateMachine(typeof(<OnEnable>d__18))]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60009FC")]
		[Address(RVA = "0x179E38C", Offset = "0x179E38C", VA = "0x179E38C")]
		[AsyncStateMachine(typeof(<SetKeyAndUpdate>d__19))]
		public void SetKeyAndUpdate(string value)
		{
		}

		[Token(Token = "0x60009FD")]
		[Address(RVA = "0x179E460", Offset = "0x179E460", VA = "0x179E460", Slot = "5")]
		public void UpdateText(string value)
		{
		}

		[Token(Token = "0x60009FE")]
		[Address(RVA = "0x179E238", Offset = "0x179E238", VA = "0x179E238")]
		public void SetTextWithPrefixAndPostfix(string value, string prefix, string postfix)
		{
		}

		[Token(Token = "0x60009FF")]
		[Address(RVA = "0x179E504", Offset = "0x179E504", VA = "0x179E504")]
		public void SetKey(string key)
		{
		}

		[Token(Token = "0x6000A00")]
		[Address(RVA = "0x179E50C", Offset = "0x179E50C", VA = "0x179E50C")]
		public LocalizedTextMeshProGui()
		{
		}
	}
	[Token(Token = "0x20001CC")]
	[RequireComponent(typeof(TextMeshProUGUI))]
	public class ToggleLocalizedTextMeshProGui : MonoBehaviour, ILocalized
	{
		[StructLayout(3)]
		[Token(Token = "0x20001CD")]
		[CompilerGenerated]
		private struct <OnEnable>d__7 : IAsyncStateMachine
		{
			[Token(Token = "0x400098A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x400098B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x400098C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public ToggleLocalizedTextMeshProGui <>4__this;

			[Token(Token = "0x400098D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x6000A0B")]
			[Address(RVA = "0x179EC5C", Offset = "0x179EC5C", VA = "0x179EC5C", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000A0C")]
			[Address(RVA = "0x179EF7C", Offset = "0x179EF7C", VA = "0x179EF7C", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4000985")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string _keyOn;

		[Token(Token = "0x4000986")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private string _keyIdle;

		[Token(Token = "0x4000987")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Toggle _toggle;

		[Token(Token = "0x4000988")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private TextMeshProUGUI _text;

		[Token(Token = "0x4000989")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool _lastIsOn;

		[Token(Token = "0x1700015A")]
		public string Key
		{
			[Token(Token = "0x6000A05")]
			[Address(RVA = "0x179EA60", Offset = "0x179EA60", VA = "0x179EA60", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A06")]
		[Address(RVA = "0x179EA90", Offset = "0x179EA90", VA = "0x179EA90")]
		[AsyncStateMachine(typeof(<OnEnable>d__7))]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000A07")]
		[Address(RVA = "0x179EB48", Offset = "0x179EB48", VA = "0x179EB48")]
		private void Update()
		{
		}

		[Token(Token = "0x6000A08")]
		[Address(RVA = "0x179EB94", Offset = "0x179EB94", VA = "0x179EB94")]
		private void OnStateChanged(bool value)
		{
		}

		[Token(Token = "0x6000A09")]
		[Address(RVA = "0x179EC30", Offset = "0x179EC30", VA = "0x179EC30", Slot = "5")]
		public void UpdateText(string value)
		{
		}

		[Token(Token = "0x6000A0A")]
		[Address(RVA = "0x179EC54", Offset = "0x179EC54", VA = "0x179EC54")]
		public ToggleLocalizedTextMeshProGui()
		{
		}
	}
}
namespace LicenseManager
{
	[Token(Token = "0x20001CE")]
	public class LicenseManagerBehaviour : MonoBehaviour
	{
		[StructLayout(3)]
		[Token(Token = "0x20001CF")]
		[CompilerGenerated]
		private struct <Test>d__4 : IAsyncStateMachine
		{
			[Token(Token = "0x4000990")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000991")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4000992")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public LicenseManagerBehaviour <>4__this;

			[Token(Token = "0x4000993")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TaskAwaiter<bool> <>u__1;

			[Token(Token = "0x6000A10")]
			[Address(RVA = "0x179F134", Offset = "0x179F134", VA = "0x179F134", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000A11")]
			[Address(RVA = "0x179F468", Offset = "0x179F468", VA = "0x179F468", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x400098E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private ScriptableObject<ILicenseManagerFactory> _licenseManagerFactory;

		[Token(Token = "0x400098F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ILicenseManager _licenseManager;

		[Token(Token = "0x1700015B")]
		public ILicenseManager LicenseManager
		{
			[Token(Token = "0x6000A0D")]
			[Address(RVA = "0x179EF88", Offset = "0x179EF88", VA = "0x179EF88")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A0E")]
		[Address(RVA = "0x179F074", Offset = "0x179F074", VA = "0x179F074")]
		[ContextMenu("Test")]
		[AsyncStateMachine(typeof(<Test>d__4))]
		private void Test()
		{
		}

		[Token(Token = "0x6000A0F")]
		[Address(RVA = "0x179F12C", Offset = "0x179F12C", VA = "0x179F12C")]
		public LicenseManagerBehaviour()
		{
		}
	}
	[Token(Token = "0x20001D0")]
	[CreateAssetMenu(fileName = "ScriptableLicenseManagerFactory", menuName = "LicenseManager/ScriptableLicenseManagerFactory")]
	public class ScriptableLicenseManagerFactory : ScriptableObject<ILicenseManagerFactory>
	{
		[Token(Token = "0x4000994")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private LicenseManagerFactorySettings _settings;

		[Token(Token = "0x6000A12")]
		[Address(RVA = "0x179F474", Offset = "0x179F474", VA = "0x179F474", Slot = "4")]
		protected override ILicenseManagerFactory CreateInstance()
		{
			return null;
		}

		[Token(Token = "0x6000A13")]
		[Address(RVA = "0x179F4DC", Offset = "0x179F4DC", VA = "0x179F4DC")]
		public ScriptableLicenseManagerFactory()
		{
		}
	}
}
namespace FunctionStack
{
	[Token(Token = "0x20001D1")]
	public class FunctionStackBehaviour : MonoBehaviour
	{
		[Token(Token = "0x4000995")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly FunctionsStack.FunctionStack FunctionStack;

		[Token(Token = "0x6000A14")]
		[Address(RVA = "0x179F524", Offset = "0x179F524", VA = "0x179F524")]
		public FunctionStackBehaviour()
		{
		}
	}
	[Token(Token = "0x20001D2")]
	public static class FunctionStackExtensions
	{
		[Token(Token = "0x6000A15")]
		public static void RemoveAllFunctionsOfType<T>(this IFunctionStack functionStack) where T : IFuncCommand
		{
		}

		[Token(Token = "0x6000A16")]
		public static void RemoveAllRedoFunctionsOfType<T>(this IFunctionStack functionStack) where T : IFuncCommand
		{
		}

		[Token(Token = "0x6000A17")]
		public static void RemoveAllUndoFunctionsOfType<T>(this IFunctionStack functionStack) where T : IFuncCommand
		{
		}
	}
}
namespace Drawing
{
	[Token(Token = "0x20001D3")]
	public static class DrawingExtensions
	{
		[StructLayout(3)]
		[Token(Token = "0x20001D4")]
		[CompilerGenerated]
		private struct <CreateDrawing>d__0<T> : IAsyncStateMachine
		{
			[Token(Token = "0x4000996")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000997")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public AsyncTaskMethodBuilder<T> <>t__builder;

			[Token(Token = "0x4000998")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public INetworkModuleProviderFactory moduleProviderFactory;

			[Token(Token = "0x4000999")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IDrawingObjectData drawingObjectData;

			[Token(Token = "0x400099A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public CancellationToken cancellationToken;

			[Token(Token = "0x400099B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private TaskAwaiter<T> <>u__1;

			[Token(Token = "0x6000A1B")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000A1C")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20001D5")]
		[CompilerGenerated]
		private struct <DestroyDrawing>d__1<T> : IAsyncStateMachine
		{
			[Token(Token = "0x400099C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x400099D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x400099E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public INetworkModuleProviderFactory moduleProviderFactory;

			[Token(Token = "0x400099F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T drawingObjectInstance;

			[Token(Token = "0x40009A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public CancellationToken cancellationToken;

			[Token(Token = "0x40009A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x6000A1D")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000A1E")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20001D6")]
		[CompilerGenerated]
		private struct <DestroyDrawings>d__2<T> : IAsyncStateMachine
		{
			[Token(Token = "0x40009A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40009A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x40009A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public INetworkModuleProviderFactory moduleProviderFactory;

			[Token(Token = "0x40009A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IReadOnlyCollection<T> drawingObjectInstances;

			[Token(Token = "0x40009A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public CancellationToken cancellationToken;

			[Token(Token = "0x40009A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x6000A1F")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000A20")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x6000A18")]
		[AsyncStateMachine(typeof(<CreateDrawing>d__0<>))]
		public static Task<T> CreateDrawing<T>(this INetworkModuleProviderFactory moduleProviderFactory, IDrawingObjectData drawingObjectData, CancellationToken cancellationToken)
		{
			return null;
		}

		[Token(Token = "0x6000A19")]
		[AsyncStateMachine(typeof(<DestroyDrawing>d__1<>))]
		public static Task DestroyDrawing<T>(this INetworkModuleProviderFactory moduleProviderFactory, T drawingObjectInstance, CancellationToken cancellationToken)
		{
			return null;
		}

		[Token(Token = "0x6000A1A")]
		[AsyncStateMachine(typeof(<DestroyDrawings>d__2<>))]
		public static Task DestroyDrawings<T>(this INetworkModuleProviderFactory moduleProviderFactory, IReadOnlyCollection<T> drawingObjectInstances, CancellationToken cancellationToken)
		{
			return null;
		}
	}
	[Token(Token = "0x20001D7")]
	public class DrawingModuleProvider : MonoBehaviour
	{
		[Token(Token = "0x40009A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private DrawingManagerSettings _drawingManagerSettings;

		[Token(Token = "0x40009A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private DrawingObjectFactorySettings _drawingObjectFactorySettings;

		[Token(Token = "0x40009AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ModuleProviderBehaviour _moduleProviderBehaviour;

		[Token(Token = "0x6000A21")]
		[Address(RVA = "0x179F59C", Offset = "0x179F59C", VA = "0x179F59C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000A22")]
		[Address(RVA = "0x179F5B8", Offset = "0x179F5B8", VA = "0x179F5B8")]
		private void RegisterModules(ModuleProvider moduleProvider)
		{
		}

		[Token(Token = "0x6000A23")]
		[Address(RVA = "0x179F708", Offset = "0x179F708", VA = "0x179F708")]
		public DrawingModuleProvider()
		{
		}
	}
	[Token(Token = "0x20001D8")]
	public class DrawingNetworkModuleProvider : NetworkBehaviour
	{
		[StructLayout(3)]
		[Token(Token = "0x20001D9")]
		[CompilerGenerated]
		private struct <LoadClient>d__11 : IAsyncStateMachine
		{
			[Token(Token = "0x40009B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40009B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x40009B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public DrawingNetworkModuleProvider <>4__this;

			[Token(Token = "0x40009B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public CancellationToken cancellationToken;

			[Token(Token = "0x40009B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x40009B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private TaskAwaiter<object> <>u__2;

			[Token(Token = "0x40009B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private IDrawingObjectFactory<IDrawingObjectInstance> <factory>5__2;

			[Token(Token = "0x40009B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private ISceneManager<int, IDrawingObjectInstance> <sceneManager>5__3;

			[Token(Token = "0x40009BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private KeyValuePair<int, IDrawingObjectData>[] <>7__wrap3;

			[Token(Token = "0x40009BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private int <>7__wrap4;

			[Token(Token = "0x40009BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			private int <id>5__6;

			[Token(Token = "0x40009BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			private TaskAwaiter<IDrawingObjectInstance> <>u__3;

			[Token(Token = "0x6000A35")]
			[Address(RVA = "0x17A0764", Offset = "0x17A0764", VA = "0x17A0764", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000A36")]
			[Address(RVA = "0x17A0ED8", Offset = "0x17A0ED8", VA = "0x17A0ED8", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x40009AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private ModuleProviderBehaviour _singlePlayerModuleProvider;

		[Token(Token = "0x40009AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private ModuleProviderBehaviour _networkModuleProvider;

		[Token(Token = "0x40009AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private NetworkRequestHandler _networkRequestHandler;

		[Token(Token = "0x40009AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private NetworkDrawingObjectsDispatcher _networkDrawingObjectsDispatcher;

		[Token(Token = "0x40009AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private readonly List<IDisposable> _disposables;

		[Token(Token = "0x40009B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private bool _networkModuleProviderInitialized;

		[Token(Token = "0x40009B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private readonly CancellationTokenSource _disposeCancellationTokenSource;

		[Token(Token = "0x1700015C")]
		private IModuleProvider NetworkModuleProvider
		{
			[Token(Token = "0x6000A24")]
			[Address(RVA = "0x179F710", Offset = "0x179F710", VA = "0x179F710")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A25")]
		[Address(RVA = "0x179F880", Offset = "0x179F880", VA = "0x179F880", Slot = "10")]
		public override void OnStartClient()
		{
		}

		[Token(Token = "0x6000A26")]
		[Address(RVA = "0x179F988", Offset = "0x179F988", VA = "0x179F988", Slot = "8")]
		public override void OnStartServer()
		{
		}

		[Token(Token = "0x6000A27")]
		[Address(RVA = "0x179F8AC", Offset = "0x179F8AC", VA = "0x179F8AC")]
		[AsyncStateMachine(typeof(<LoadClient>d__11))]
		private void LoadClient(CancellationToken cancellationToken)
		{
		}

		[Token(Token = "0x6000A28")]
		[Address(RVA = "0x179F990", Offset = "0x179F990", VA = "0x179F990")]
		[Command(requiresAuthority = false)]
		private void CmdGetDrawnObjects(byte requestId, [Optional] NetworkConnectionToClient sender)
		{
		}

		[Token(Token = "0x6000A29")]
		[Address(RVA = "0x179FB84", Offset = "0x179FB84", VA = "0x179FB84")]
		[TargetRpc]
		private void TargetGetDrawnObjects(NetworkConnection target, byte requestId, int senderConnectionId, KeyValuePair<int, IDrawingObjectData>[] drawings)
		{
		}

		[Token(Token = "0x6000A2A")]
		[Address(RVA = "0x179F750", Offset = "0x179F750", VA = "0x179F750")]
		private void RegisterModules()
		{
		}

		[Token(Token = "0x6000A2B")]
		[Address(RVA = "0x179FE2C", Offset = "0x179FE2C", VA = "0x179FE2C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000A2C")]
		[Address(RVA = "0x179FF34", Offset = "0x179FF34", VA = "0x179FF34")]
		public DrawingNetworkModuleProvider()
		{
		}

		[Token(Token = "0x6000A2F")]
		[Address(RVA = "0x17A0018", Offset = "0x17A0018", VA = "0x17A0018")]
		private void MirrorProcessed()
		{
		}

		[Token(Token = "0x6000A30")]
		[Address(RVA = "0x17A001C", Offset = "0x17A001C", VA = "0x17A001C")]
		protected void UserCode_CmdGetDrawnObjects__Byte__NetworkConnectionToClient(byte requestId, NetworkConnectionToClient sender)
		{
		}

		[Token(Token = "0x6000A31")]
		[Address(RVA = "0x17A0220", Offset = "0x17A0220", VA = "0x17A0220")]
		protected static void InvokeUserCode_CmdGetDrawnObjects__Byte__NetworkConnectionToClient(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x6000A32")]
		[Address(RVA = "0x17A03A0", Offset = "0x17A03A0", VA = "0x17A03A0")]
		protected void UserCode_TargetGetDrawnObjects__NetworkConnection__Byte__Int32__KeyValuePair`2[](NetworkConnection target, byte requestId, int senderConnectionId, KeyValuePair<int, IDrawingObjectData>[] drawings)
		{
		}

		[Token(Token = "0x6000A33")]
		[Address(RVA = "0x17A03BC", Offset = "0x17A03BC", VA = "0x17A03BC")]
		protected static void InvokeUserCode_TargetGetDrawnObjects__NetworkConnection__Byte__Int32__KeyValuePair`2[](NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x6000A34")]
		[Address(RVA = "0x17A05D4", Offset = "0x17A05D4", VA = "0x17A05D4")]
		static DrawingNetworkModuleProvider()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001DC")]
	public class DrawingObjectFactorySettings
	{
		[Token(Token = "0x40009C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LineRenderer DrawingLineRendererPrefab;

		[Token(Token = "0x40009C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public DrawingObjectReferences DrawingObjectPrefab;

		[Token(Token = "0x40009C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform DrawingObjectParent;

		[Token(Token = "0x6000A3C")]
		[Address(RVA = "0x17A1158", Offset = "0x17A1158", VA = "0x17A1158")]
		public DrawingObjectFactorySettings()
		{
		}
	}
	[Token(Token = "0x20001DD")]
	public class DrawingObjectFactory : IDrawingObjectFactory<IDrawingObjectInstance>, IDrawingObjectFactoryEvents<IDrawingObjectInstance>
	{
		[Token(Token = "0x40009C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly DrawingObjectFactorySettings _factorySettings;

		[Token(Token = "0x1400000D")]
		public event Action<IDrawingObjectInstance> ObjectCreated
		{
			[Token(Token = "0x6000A3D")]
			[Address(RVA = "0x17A1160", Offset = "0x17A1160", VA = "0x17A1160", Slot = "7")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6000A3E")]
			[Address(RVA = "0x17A1210", Offset = "0x17A1210", VA = "0x17A1210", Slot = "8")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6000A3F")]
		[Address(RVA = "0x179F6D8", Offset = "0x179F6D8", VA = "0x179F6D8")]
		public DrawingObjectFactory(DrawingObjectFactorySettings settings)
		{
		}

		[Token(Token = "0x6000A40")]
		[Address(RVA = "0x17A12C0", Offset = "0x17A12C0", VA = "0x17A12C0", Slot = "4")]
		public Task<IDrawingObjectInstance> Create(IDrawingObjectData drawingObjectData, CancellationToken cancellationToken)
		{
			return null;
		}

		[Token(Token = "0x6000A41")]
		[Address(RVA = "0x17A1BC8", Offset = "0x17A1BC8", VA = "0x17A1BC8", Slot = "5")]
		public Task Destroy(IDrawingObjectInstance drawingObjectInstance, CancellationToken cancellationToken)
		{
			return null;
		}

		[Token(Token = "0x6000A42")]
		[Address(RVA = "0x17A1D44", Offset = "0x17A1D44", VA = "0x17A1D44", Slot = "6")]
		public Task Destroy(IEnumerable<IDrawingObjectInstance> objectsForSlaughter, CancellationToken cancellationToken)
		{
			return null;
		}
	}
	[Token(Token = "0x20001DE")]
	public class DrawingObjectInstance : IDrawingObjectInstance
	{
		[Token(Token = "0x1700015D")]
		public IDrawingObjectData DrawingObjectData
		{
			[Token(Token = "0x6000A43")]
			[Address(RVA = "0x17A20E8", Offset = "0x17A20E8", VA = "0x17A20E8", Slot = "4")]
			[CompilerGenerated]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700015E")]
		public DrawingObjectReferences DrawingObjectReferences
		{
			[Token(Token = "0x6000A44")]
			[Address(RVA = "0x17A20F0", Offset = "0x17A20F0", VA = "0x17A20F0")]
			[CompilerGenerated]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700015F")]
		private List<LineRenderer> Lines
		{
			[Token(Token = "0x6000A45")]
			[Address(RVA = "0x17A20F8", Offset = "0x17A20F8", VA = "0x17A20F8")]
			[CompilerGenerated]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A46")]
		[Address(RVA = "0x17A1B68", Offset = "0x17A1B68", VA = "0x17A1B68")]
		public DrawingObjectInstance(IDrawingObjectData drawingObjectData, DrawingObjectReferences drawingObjectReferences, List<LineRenderer> lines)
		{
		}

		[Token(Token = "0x6000A47")]
		[Address(RVA = "0x17A2100", Offset = "0x17A2100", VA = "0x17A2100")]
		public void SetFocused(bool state)
		{
		}
	}
	[Token(Token = "0x20001DF")]
	public class DrawingObjectReferences : MonoBehaviour
	{
		[Token(Token = "0x40009C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Button _removeButton;

		[Token(Token = "0x40009CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AssignableMonoBehaviourObject _assignableMonoBehaviourObject;

		[Token(Token = "0x40009CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MeshCollider _meshCollider;

		[Token(Token = "0x17000160")]
		public Button RemoveButton
		{
			[Token(Token = "0x6000A48")]
			[Address(RVA = "0x17A25C4", Offset = "0x17A25C4", VA = "0x17A25C4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000161")]
		public AssignableMonoBehaviourObject AssignableMonoBehaviourObject
		{
			[Token(Token = "0x6000A49")]
			[Address(RVA = "0x17A25CC", Offset = "0x17A25CC", VA = "0x17A25CC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000162")]
		public MeshCollider MeshCollider
		{
			[Token(Token = "0x6000A4A")]
			[Address(RVA = "0x17A25D4", Offset = "0x17A25D4", VA = "0x17A25D4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A4B")]
		[Address(RVA = "0x17A25DC", Offset = "0x17A25DC", VA = "0x17A25DC")]
		public DrawingObjectReferences()
		{
		}
	}
	[Token(Token = "0x20001E0")]
	public class NetworkDrawingObjectsDispatcher : NetworkBehaviour, INetworkDrawingObjectsDispatcher<int>
	{
		[StructLayout(3)]
		[Token(Token = "0x20001E1")]
		[CompilerGenerated]
		private struct <GenerateID>d__4 : IAsyncStateMachine
		{
			[Token(Token = "0x40009D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40009D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder<int> <>t__builder;

			[Token(Token = "0x40009D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public NetworkDrawingObjectsDispatcher <>4__this;

			[Token(Token = "0x40009D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public CancellationToken cancellationToken;

			[Token(Token = "0x40009D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TaskAwaiter<object> <>u__1;

			[Token(Token = "0x6000A73")]
			[Address(RVA = "0x17A5A70", Offset = "0x17A5A70", VA = "0x17A5A70", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000A74")]
			[Address(RVA = "0x17A5D10", Offset = "0x17A5D10", VA = "0x17A5D10", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20001E5")]
		[CompilerGenerated]
		private struct <CreateInstance>d__19 : IAsyncStateMachine
		{
			[Token(Token = "0x40009DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40009DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder<int> <>t__builder;

			[Token(Token = "0x40009E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public NetworkDrawingObjectsDispatcher <>4__this;

			[Token(Token = "0x40009E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public IDrawingObjectData drawingObjectData;

			[Token(Token = "0x40009E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public CancellationToken cancellationToken;

			[Token(Token = "0x40009E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private TaskAwaiter<object> <>u__1;

			[Token(Token = "0x6000A7B")]
			[Address(RVA = "0x17A5DE8", Offset = "0x17A5DE8", VA = "0x17A5DE8", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000A7C")]
			[Address(RVA = "0x17A60E8", Offset = "0x17A60E8", VA = "0x17A60E8", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x40009CC")]
		private const int MinDrawingObjectId = 0;

		[Token(Token = "0x40009CD")]
		private const int MaxDrawingObjectId = 10000;

		[Token(Token = "0x40009CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int _lastDicomObjectId;

		[Token(Token = "0x40009CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private NetworkRequestHandler _networkRequestHandler;

		[Token(Token = "0x1400000E")]
		public event Action<int, IDrawingObjectData> NetworkInstanceCreated
		{
			[Token(Token = "0x6000A52")]
			[Address(RVA = "0x17A3100", Offset = "0x17A3100", VA = "0x17A3100", Slot = "19")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6000A53")]
			[Address(RVA = "0x17A31B0", Offset = "0x17A31B0", VA = "0x17A31B0", Slot = "20")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400000F")]
		public event Action<int> NetworkInstanceDestroyed
		{
			[Token(Token = "0x6000A54")]
			[Address(RVA = "0x17A3260", Offset = "0x17A3260", VA = "0x17A3260", Slot = "21")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6000A55")]
			[Address(RVA = "0x17A3310", Offset = "0x17A3310", VA = "0x17A3310", Slot = "22")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000010")]
		public event Action<IEnumerable<int>> NetworkInstancesDestroyed
		{
			[Token(Token = "0x6000A56")]
			[Address(RVA = "0x17A33C0", Offset = "0x17A33C0", VA = "0x17A33C0", Slot = "23")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6000A57")]
			[Address(RVA = "0x17A3470", Offset = "0x17A3470", VA = "0x17A3470", Slot = "24")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6000A4C")]
		[Address(RVA = "0x17A25E4", Offset = "0x17A25E4", VA = "0x17A25E4")]
		[AsyncStateMachine(typeof(<GenerateID>d__4))]
		public Task<int> GenerateID(CancellationToken cancellationToken)
		{
			return null;
		}

		[Token(Token = "0x6000A4D")]
		[Address(RVA = "0x17A2718", Offset = "0x17A2718", VA = "0x17A2718", Slot = "18")]
		public Task DestroyInstances(IEnumerable<int> ids, CancellationToken cancellationToken)
		{
			return null;
		}

		[Token(Token = "0x6000A4E")]
		[Address(RVA = "0x17A280C", Offset = "0x17A280C", VA = "0x17A280C")]
		[Command(requiresAuthority = false)]
		private void CmdDestroyInstances(byte requestId, IEnumerable<int> ids, [Optional] NetworkConnectionToClient sender)
		{
		}

		[Token(Token = "0x6000A4F")]
		[Address(RVA = "0x17A2ABC", Offset = "0x17A2ABC", VA = "0x17A2ABC")]
		[ClientRpc]
		private void RpcDestroyInstances(byte requestId, int senderConnectionId, IEnumerable<int> ids)
		{
		}

		[Token(Token = "0x6000A50")]
		[Address(RVA = "0x17A2CDC", Offset = "0x17A2CDC", VA = "0x17A2CDC")]
		[Command(requiresAuthority = false)]
		private void CmdCreateId(byte requestId, [Optional] NetworkConnectionToClient sender)
		{
		}

		[Token(Token = "0x6000A51")]
		[Address(RVA = "0x17A2ED0", Offset = "0x17A2ED0", VA = "0x17A2ED0")]
		[TargetRpc]
		private void TargetCreateId(NetworkConnection target, byte requestId, int connectionId, int id)
		{
		}

		[Token(Token = "0x6000A58")]
		[Address(RVA = "0x17A3520", Offset = "0x17A3520", VA = "0x17A3520", Slot = "16")]
		[AsyncStateMachine(typeof(<CreateInstance>d__19))]
		public Task<int> CreateInstance(IDrawingObjectData drawingObjectData, CancellationToken cancellationToken)
		{
			return null;
		}

		[Token(Token = "0x6000A59")]
		[Address(RVA = "0x17A3664", Offset = "0x17A3664", VA = "0x17A3664", Slot = "17")]
		public Task DestroyInstance(int id, CancellationToken cancellationToken)
		{
			return null;
		}

		[Token(Token = "0x6000A5A")]
		[Address(RVA = "0x17A3758", Offset = "0x17A3758", VA = "0x17A3758")]
		[Command(requiresAuthority = false)]
		private void CmdCreateInstance(byte requestId, IDrawingObjectData drawingObjectData, [Optional] NetworkConnectionToClient sender)
		{
		}

		[Token(Token = "0x6000A5B")]
		[Address(RVA = "0x17A3B9C", Offset = "0x17A3B9C", VA = "0x17A3B9C")]
		[ClientRpc]
		private void RpcCreateInstance(byte requestId, int senderConnectionId, IDrawingObjectData drawingObjectData, int id)
		{
		}

		[Token(Token = "0x6000A5C")]
		[Address(RVA = "0x17A3DD8", Offset = "0x17A3DD8", VA = "0x17A3DD8")]
		[Command(requiresAuthority = false)]
		private void CmdDestroyInstance(byte requestId, int id, [Optional] NetworkConnectionToClient sender)
		{
		}

		[Token(Token = "0x6000A5D")]
		[Address(RVA = "0x17A3FE8", Offset = "0x17A3FE8", VA = "0x17A3FE8")]
		[ClientRpc]
		private void RpcDestroyInstance(byte requestId, int senderConnectionId, int id)
		{
		}

		[Token(Token = "0x6000A5E")]
		[Address(RVA = "0x17A420C", Offset = "0x17A420C", VA = "0x17A420C")]
		[Server]
		private bool ServerHasAuthority(NetworkConnectionToClient sender)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A5F")]
		[Address(RVA = "0x17A42E8", Offset = "0x17A42E8", VA = "0x17A42E8")]
		public NetworkDrawingObjectsDispatcher()
		{
		}

		[Token(Token = "0x6000A61")]
		[Address(RVA = "0x17A42F4", Offset = "0x17A42F4", VA = "0x17A42F4")]
		private void MirrorProcessed()
		{
		}

		[Token(Token = "0x6000A62")]
		[Address(RVA = "0x17A42F8", Offset = "0x17A42F8", VA = "0x17A42F8")]
		protected void UserCode_CmdDestroyInstances__Byte__IEnumerable`1__NetworkConnectionToClient(byte requestId, IEnumerable<int> ids, NetworkConnectionToClient sender)
		{
		}

		[Token(Token = "0x6000A63")]
		[Address(RVA = "0x17A4368", Offset = "0x17A4368", VA = "0x17A4368")]
		protected static void InvokeUserCode_CmdDestroyInstances__Byte__IEnumerable`1__NetworkConnectionToClient(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x6000A64")]
		[Address(RVA = "0x17A4560", Offset = "0x17A4560", VA = "0x17A4560")]
		protected void UserCode_RpcDestroyInstances__Byte__Int32__IEnumerable`1(byte requestId, int senderConnectionId, IEnumerable<int> ids)
		{
		}

		[Token(Token = "0x6000A65")]
		[Address(RVA = "0x17A4664", Offset = "0x17A4664", VA = "0x17A4664")]
		protected static void InvokeUserCode_RpcDestroyInstances__Byte__Int32__IEnumerable`1(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x6000A66")]
		[Address(RVA = "0x17A47C8", Offset = "0x17A47C8", VA = "0x17A47C8")]
		protected void UserCode_CmdCreateId__Byte__NetworkConnectionToClient(byte requestId, NetworkConnectionToClient sender)
		{
		}

		[Token(Token = "0x6000A67")]
		[Address(RVA = "0x17A4844", Offset = "0x17A4844", VA = "0x17A4844")]
		protected static void InvokeUserCode_CmdCreateId__Byte__NetworkConnectionToClient(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x6000A68")]
		[Address(RVA = "0x17A49C4", Offset = "0x17A49C4", VA = "0x17A49C4")]
		protected void UserCode_TargetCreateId__NetworkConnection__Byte__Int32__Int32(NetworkConnection target, byte requestId, int connectionId, int id)
		{
		}

		[Token(Token = "0x6000A69")]
		[Address(RVA = "0x17A4A50", Offset = "0x17A4A50", VA = "0x17A4A50")]
		protected static void InvokeUserCode_TargetCreateId__NetworkConnection__Byte__Int32__Int32(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x6000A6A")]
		[Address(RVA = "0x17A4BF8", Offset = "0x17A4BF8", VA = "0x17A4BF8")]
		protected void UserCode_CmdCreateInstance__Byte__IDrawingObjectData__NetworkConnectionToClient(byte requestId, IDrawingObjectData drawingObjectData, NetworkConnectionToClient sender)
		{
		}

		[Token(Token = "0x6000A6B")]
		[Address(RVA = "0x17A4C84", Offset = "0x17A4C84", VA = "0x17A4C84")]
		protected static void InvokeUserCode_CmdCreateInstance__Byte__IDrawingObjectData__NetworkConnectionToClient(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x6000A6C")]
		[Address(RVA = "0x17A4F04", Offset = "0x17A4F04", VA = "0x17A4F04")]
		protected void UserCode_RpcCreateInstance__Byte__Int32__IDrawingObjectData__Int32(byte requestId, int senderConnectionId, IDrawingObjectData drawingObjectData, int id)
		{
		}

		[Token(Token = "0x6000A6D")]
		[Address(RVA = "0x17A5058", Offset = "0x17A5058", VA = "0x17A5058")]
		protected static void InvokeUserCode_RpcCreateInstance__Byte__Int32__IDrawingObjectData__Int32(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x6000A6E")]
		[Address(RVA = "0x17A51D0", Offset = "0x17A51D0", VA = "0x17A51D0")]
		protected void UserCode_CmdDestroyInstance__Byte__Int32__NetworkConnectionToClient(byte requestId, int id, NetworkConnectionToClient sender)
		{
		}

		[Token(Token = "0x6000A6F")]
		[Address(RVA = "0x17A5240", Offset = "0x17A5240", VA = "0x17A5240")]
		protected static void InvokeUserCode_CmdDestroyInstance__Byte__Int32__NetworkConnectionToClient(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x6000A70")]
		[Address(RVA = "0x17A53D0", Offset = "0x17A53D0", VA = "0x17A53D0")]
		protected void UserCode_RpcDestroyInstance__Byte__Int32__Int32(byte requestId, int senderConnectionId, int id)
		{
		}

		[Token(Token = "0x6000A71")]
		[Address(RVA = "0x17A54CC", Offset = "0x17A54CC", VA = "0x17A54CC")]
		protected static void InvokeUserCode_RpcDestroyInstance__Byte__Int32__Int32(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x6000A72")]
		[Address(RVA = "0x17A5634", Offset = "0x17A5634", VA = "0x17A5634")]
		static NetworkDrawingObjectsDispatcher()
		{
		}
	}
	[Token(Token = "0x20001E9")]
	public static class DrawingDispatcherSerializer
	{
		[Token(Token = "0x6000A83")]
		public static void WriteArray2D<T>(this NetworkWriter writer, T[][] array)
		{
		}

		[Token(Token = "0x6000A84")]
		public static T[][] ReadArray2D<T>(this NetworkReader reader)
		{
			return null;
		}

		[Token(Token = "0x6000A85")]
		[Address(RVA = "0x17A3964", Offset = "0x17A3964", VA = "0x17A3964")]
		public static void WriteDrawingObjectData(this NetworkWriter writer, IDrawingObjectData drawingObjectData)
		{
		}

		[Token(Token = "0x6000A86")]
		[Address(RVA = "0x17A61D4", Offset = "0x17A61D4", VA = "0x17A61D4")]
		public static void WriteKeyValuePairIdDrawingObjectData(this NetworkWriter writer, KeyValuePair<int, IDrawingObjectData> data)
		{
		}

		[Token(Token = "0x6000A87")]
		[Address(RVA = "0x179FDB0", Offset = "0x179FDB0", VA = "0x179FDB0")]
		public static void WriteKeyValuePairIdDrawingObjectDataArray(this NetworkWriter writer, KeyValuePair<int, IDrawingObjectData>[] data)
		{
		}

		[Token(Token = "0x6000A88")]
		[Address(RVA = "0x17A2A18", Offset = "0x17A2A18", VA = "0x17A2A18")]
		public static void WriteIEnumerableInt(this NetworkWriter writer, IEnumerable<int> data)
		{
		}

		[Token(Token = "0x6000A89")]
		[Address(RVA = "0x17A4E10", Offset = "0x17A4E10", VA = "0x17A4E10")]
		public static IDrawingObjectData ReadDrawingObjectData(this NetworkReader reader)
		{
			return null;
		}

		[Token(Token = "0x6000A8A")]
		[Address(RVA = "0x17A6264", Offset = "0x17A6264", VA = "0x17A6264")]
		public static KeyValuePair<int, IDrawingObjectData> ReadKeyValuePairIdDrawingObjectData(this NetworkReader reader)
		{
			return default(KeyValuePair<int, IDrawingObjectData>);
		}

		[Token(Token = "0x6000A8B")]
		[Address(RVA = "0x17A0568", Offset = "0x17A0568", VA = "0x17A0568")]
		public static KeyValuePair<int, IDrawingObjectData>[] ReadKeyValuePairIdDrawingObjectDataArray(this NetworkReader reader)
		{
			return null;
		}

		[Token(Token = "0x6000A8C")]
		[Address(RVA = "0x17A44F4", Offset = "0x17A44F4", VA = "0x17A44F4")]
		public static IEnumerable<int> ReadIEnumerableInt(this NetworkReader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x20001EA")]
	public class DrawingPointerVisual : MonoBehaviour
	{
		[Token(Token = "0x40009EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Renderer _brushRenderer;

		[Token(Token = "0x40009EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private DrawingSettings _drawingSettings;

		[Token(Token = "0x40009ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float _invalidAlpha;

		[Token(Token = "0x40009EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private TweenerCore<Color, Color, ColorOptions> _fadeTweener;

		[Token(Token = "0x40009EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TweenerCore<Color, Color, ColorOptions> _colorTweener;

		[Token(Token = "0x40009F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private TweenerCore<Vector3, Vector3, VectorOptions> _sizeTweener;

		[Token(Token = "0x40009F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Color _lastColor;

		[Token(Token = "0x40009F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float _lastWidth;

		[Token(Token = "0x40009F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private bool _lastValidForDrawing;

		[Token(Token = "0x40009F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Func<Vector3> GetPosition;

		[Token(Token = "0x40009F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Func<bool> IsValidForDrawing;

		[Token(Token = "0x40009F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Func<bool> IsActive;

		[Token(Token = "0x17000163")]
		public DrawingSettings DrawingSettings
		{
			[Token(Token = "0x6000A8D")]
			[Address(RVA = "0x17A6304", Offset = "0x17A6304", VA = "0x17A6304")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000A8E")]
			[Address(RVA = "0x17A630C", Offset = "0x17A630C", VA = "0x17A630C")]
			set
			{
			}
		}

		[Token(Token = "0x6000A8F")]
		[Address(RVA = "0x17A6314", Offset = "0x17A6314", VA = "0x17A6314")]
		private void Update()
		{
		}

		[Token(Token = "0x6000A90")]
		[Address(RVA = "0x17A65C0", Offset = "0x17A65C0", VA = "0x17A65C0")]
		private void OnIsValidForDrawingChanged(bool value)
		{
		}

		[Token(Token = "0x6000A91")]
		[Address(RVA = "0x17A64C0", Offset = "0x17A64C0", VA = "0x17A64C0")]
		private void OnColorChanged(Color value)
		{
		}

		[Token(Token = "0x6000A92")]
		[Address(RVA = "0x17A6550", Offset = "0x17A6550", VA = "0x17A6550")]
		private void OnLineWidthChanged(float value)
		{
		}

		[Token(Token = "0x6000A93")]
		[Address(RVA = "0x17A6634", Offset = "0x17A6634", VA = "0x17A6634")]
		public DrawingPointerVisual()
		{
		}
	}
}
namespace DICOM.Networking
{
	[Token(Token = "0x20001EB")]
	public class NetworkDicomSceneDispatcher : NetworkBehaviour, INetworkDicomSceneDispatcher, ISliceDispatcher<byte>, IWindowingDispatcher<byte>, IColoringModuleDispatcher<byte>, IResetDispatcher<byte>
	{
		[StructLayout(3)]
		[Token(Token = "0x20001ED")]
		[CompilerGenerated]
		private struct <AddInstance>d__9 : IAsyncStateMachine
		{
			[Token(Token = "0x4000A06")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000A07")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder<byte> <>t__builder;

			[Token(Token = "0x4000A08")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public NetworkDicomSceneDispatcher <>4__this;

			[Token(Token = "0x4000A09")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public IDicom3dData value;

			[Token(Token = "0x4000A0A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public CancellationToken cancellationToken;

			[Token(Token = "0x4000A0B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private TaskAwaiter<object> <>u__1;

			[Token(Token = "0x6000AF6")]
			[Address(RVA = "0x17AED44", Offset = "0x17AED44", VA = "0x17AED44", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000AF7")]
			[Address(RVA = "0x17AF044", Offset = "0x17AF044", VA = "0x17AF044", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x40009F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private NetworkRequestHandler _networkRequestHandler;

		[Token(Token = "0x40009F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private readonly SyncDictionary<byte, IDicom3dData> _instances;

		[Token(Token = "0x40009F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private readonly DicomInstanceIdFactory _dicomInstanceIdFactory;

		[Token(Token = "0x14000011")]
		public event Action<byte, IDicom3dData> NetworkInstanceAdded
		{
			[Token(Token = "0x6000A94")]
			[Address(RVA = "0x17A663C", Offset = "0x17A663C", VA = "0x17A663C", Slot = "18")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6000A95")]
			[Address(RVA = "0x17A66EC", Offset = "0x17A66EC", VA = "0x17A66EC", Slot = "19")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000012")]
		public event Action<byte> NetworkInstanceRemoved
		{
			[Token(Token = "0x6000A96")]
			[Address(RVA = "0x17A679C", Offset = "0x17A679C", VA = "0x17A679C", Slot = "20")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6000A97")]
			[Address(RVA = "0x17A684C", Offset = "0x17A684C", VA = "0x17A684C", Slot = "21")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000013")]
		public event Action<byte, bool?> SliceEnabledChanged
		{
			[Token(Token = "0x6000AA1")]
			[Address(RVA = "0x17A7934", Offset = "0x17A7934", VA = "0x17A7934", Slot = "25")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6000AA2")]
			[Address(RVA = "0x17A79E4", Offset = "0x17A79E4", VA = "0x17A79E4", Slot = "26")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000014")]
		public event Action<byte, Vector2> VisibilityWindowChanged
		{
			[Token(Token = "0x6000AA6")]
			[Address(RVA = "0x17A807C", Offset = "0x17A807C", VA = "0x17A807C", Slot = "28")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6000AA7")]
			[Address(RVA = "0x17A812C", Offset = "0x17A812C", VA = "0x17A812C", Slot = "29")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000015")]
		public event Action<byte, GradientKey<float>> KeyAdded
		{
			[Token(Token = "0x6000AAB")]
			[Address(RVA = "0x17A8760", Offset = "0x17A8760", VA = "0x17A8760", Slot = "35")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6000AAC")]
			[Address(RVA = "0x17A8810", Offset = "0x17A8810", VA = "0x17A8810", Slot = "36")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000016")]
		public event Action<byte, IEnumerable<KeyValuePair<byte, GradientKey<float>>>> TransferFunctionSet
		{
			[Token(Token = "0x6000AAD")]
			[Address(RVA = "0x17A88C0", Offset = "0x17A88C0", VA = "0x17A88C0", Slot = "37")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6000AAE")]
			[Address(RVA = "0x17A8970", Offset = "0x17A8970", VA = "0x17A8970", Slot = "38")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000017")]
		public event Action<byte, byte, GradientKey<float>> KeySet
		{
			[Token(Token = "0x6000AAF")]
			[Address(RVA = "0x17A8A20", Offset = "0x17A8A20", VA = "0x17A8A20", Slot = "39")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6000AB0")]
			[Address(RVA = "0x17A8AD0", Offset = "0x17A8AD0", VA = "0x17A8AD0", Slot = "40")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000018")]
		public event Action<byte, byte> KeyRemoved
		{
			[Token(Token = "0x6000AB1")]
			[Address(RVA = "0x17A8B80", Offset = "0x17A8B80", VA = "0x17A8B80", Slot = "41")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6000AB2")]
			[Address(RVA = "0x17A8C30", Offset = "0x17A8C30", VA = "0x17A8C30", Slot = "42")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000019")]
		public event Action<byte, bool> RelativeEnabledSet
		{
			[Token(Token = "0x6000AB3")]
			[Address(RVA = "0x17A8CE0", Offset = "0x17A8CE0", VA = "0x17A8CE0", Slot = "43")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6000AB4")]
			[Address(RVA = "0x17A8D90", Offset = "0x17A8D90", VA = "0x17A8D90", Slot = "44")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400001A")]
		public event Action<byte> ModulesResetForObject
		{
			[Token(Token = "0x6000AC4")]
			[Address(RVA = "0x17AA9F4", Offset = "0x17AA9F4", VA = "0x17AA9F4", Slot = "46")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6000AC5")]
			[Address(RVA = "0x17AAAA4", Offset = "0x17AAAA4", VA = "0x17AAAA4", Slot = "47")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6000A98")]
		[Address(RVA = "0x17A68FC", Offset = "0x17A68FC", VA = "0x17A68FC", Slot = "16")]
		[AsyncStateMachine(typeof(<AddInstance>d__9))]
		public Task<byte> AddInstance(IDicom3dData value, CancellationToken cancellationToken)
		{
			return null;
		}

		[Token(Token = "0x6000A99")]
		[Address(RVA = "0x17A6A40", Offset = "0x17A6A40", VA = "0x17A6A40", Slot = "17")]
		public Task RemoveInstance(byte value, CancellationToken cancellationToken)
		{
			return null;
		}

		[Token(Token = "0x6000A9A")]
		[Address(RVA = "0x17A6B34", Offset = "0x17A6B34", VA = "0x17A6B34", Slot = "22")]
		public IEnumerable<KeyValuePair<byte, IDicom3dData>> GetInstances()
		{
			return null;
		}

		[Token(Token = "0x6000A9B")]
		[Address(RVA = "0x17A6B3C", Offset = "0x17A6B3C", VA = "0x17A6B3C", Slot = "23")]
		public bool ContainsInstance(byte value)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A9C")]
		[Address(RVA = "0x17A6B94", Offset = "0x17A6B94", VA = "0x17A6B94")]
		[Server]
		private bool ServerHasAuthority(NetworkConnectionToClient sender)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A9D")]
		[Address(RVA = "0x17A6C70", Offset = "0x17A6C70", VA = "0x17A6C70")]
		[Command(requiresAuthority = false)]
		private void CmdAddInstanceId(byte requestId, IDicom3dData value, [Optional] NetworkConnectionToClient sender)
		{
		}

		[Token(Token = "0x6000A9E")]
		[Address(RVA = "0x17A72C4", Offset = "0x17A72C4", VA = "0x17A72C4")]
		[Command(requiresAuthority = false)]
		private void CmdRemoveInstanceId(byte requestId, byte value, [Optional] NetworkConnectionToClient sender)
		{
		}

		[Token(Token = "0x6000A9F")]
		[Address(RVA = "0x17A74D4", Offset = "0x17A74D4", VA = "0x17A74D4")]
		[ClientRpc]
		private void RpcAddInstanceId(byte requestId, int connectionId, byte id, IDicom3dData dicom3dData)
		{
		}

		[Token(Token = "0x6000AA0")]
		[Address(RVA = "0x17A7710", Offset = "0x17A7710", VA = "0x17A7710")]
		[ClientRpc]
		private void RpcRemoveInstanceId(byte requestId, int connectionId, byte value)
		{
		}

		[Token(Token = "0x6000AA3")]
		[Address(RVA = "0x17A7A94", Offset = "0x17A7A94", VA = "0x17A7A94", Slot = "24")]
		public Task SetSliceEnabled(byte obj, bool? value, CancellationToken cancellationToken)
		{
			return null;
		}

		[Token(Token = "0x6000AA4")]
		[Address(RVA = "0x17A7B90", Offset = "0x17A7B90", VA = "0x17A7B90")]
		[Command(requiresAuthority = false)]
		private void CmdSetSliceTarget(byte requestId, byte obj, bool? value, [Optional] NetworkConnectionToClient sender)
		{
		}

		[Token(Token = "0x6000AA5")]
		[Address(RVA = "0x17A7E40", Offset = "0x17A7E40", VA = "0x17A7E40")]
		[ClientRpc]
		private void RpcSetSliceTarget(byte requestId, int connectionId, byte obj, bool? value)
		{
		}

		[Token(Token = "0x6000AA8")]
		[Address(RVA = "0x17A81DC", Offset = "0x17A81DC", VA = "0x17A81DC", Slot = "27")]
		public Task SetVisibilityWindow(byte item, Vector2 value, CancellationToken cancellationToken)
		{
			return null;
		}

		[Token(Token = "0x6000AA9")]
		[Address(RVA = "0x17A82E4", Offset = "0x17A82E4", VA = "0x17A82E4")]
		[Command(requiresAuthority = false)]
		private void CmdSetVisibilityWindow(byte requestId, byte item, Vector2 value, [Optional] NetworkConnectionToClient sender)
		{
		}

		[Token(Token = "0x6000AAA")]
		[Address(RVA = "0x17A8518", Offset = "0x17A8518", VA = "0x17A8518")]
		[ClientRpc]
		private void RpcSetVisibilityWindow(byte requestId, int connectionId, byte item, Vector2 value)
		{
		}

		[Token(Token = "0x6000AB5")]
		[Address(RVA = "0x17A8E40", Offset = "0x17A8E40", VA = "0x17A8E40", Slot = "30")]
		public Task AddKey(byte item, GradientKey<float> value, CancellationToken cancellationToken)
		{
			return null;
		}

		[Token(Token = "0x6000AB6")]
		[Address(RVA = "0x17A8F48", Offset = "0x17A8F48", VA = "0x17A8F48")]
		[Command(requiresAuthority = false)]
		public void CmdAddKey(byte requestId, byte item, GradientKey<float> value, [Optional] NetworkConnectionToClient sender)
		{
		}

		[Token(Token = "0x6000AB7")]
		[Address(RVA = "0x17A9188", Offset = "0x17A9188", VA = "0x17A9188")]
		[ClientRpc]
		public void RpcAddKey(byte requestId, int connectionId, byte item, GradientKey<float> value)
		{
		}

		[Token(Token = "0x6000AB8")]
		[Address(RVA = "0x17A93E4", Offset = "0x17A93E4", VA = "0x17A93E4", Slot = "31")]
		public Task SetTransferFunction(byte obj, IEnumerable<KeyValuePair<byte, GradientKey<float>>> keys, CancellationToken cancellationToken)
		{
			return null;
		}

		[Token(Token = "0x6000AB9")]
		[Address(RVA = "0x17A94E8", Offset = "0x17A94E8", VA = "0x17A94E8")]
		[Command(requiresAuthority = false)]
		public void CmdSetTransferFunction(byte requestId, byte obj, KeyValuePair<byte, GradientKey<float>>[] keys, [Optional] NetworkConnectionToClient sender)
		{
		}

		[Token(Token = "0x6000ABA")]
		[Address(RVA = "0x17A970C", Offset = "0x17A970C", VA = "0x17A970C")]
		[ClientRpc]
		public void RpcSetTransferFunction(byte requestId, int connectionId, byte obj, KeyValuePair<byte, GradientKey<float>>[] keys)
		{
		}

		[Token(Token = "0x6000ABB")]
		[Address(RVA = "0x17A994C", Offset = "0x17A994C", VA = "0x17A994C", Slot = "32")]
		public Task SetKey(byte obj, byte keyId, GradientKey<float> value, CancellationToken cancellationToken)
		{
			return null;
		}

		[Token(Token = "0x6000ABC")]
		[Address(RVA = "0x17A9A64", Offset = "0x17A9A64", VA = "0x17A9A64")]
		[Command(requiresAuthority = false)]
		public void CmdSetKey(byte requestId, byte obj, byte keyId, GradientKey<float> value, [Optional] NetworkConnectionToClient sender)
		{
		}

		[Token(Token = "0x6000ABD")]
		[Address(RVA = "0x17A9CC0", Offset = "0x17A9CC0", VA = "0x17A9CC0")]
		[ClientRpc]
		public void RpcSetKey(byte requestId, int connectionId, byte obj, byte keyId, GradientKey<float> value)
		{
		}

		[Token(Token = "0x6000ABE")]
		[Address(RVA = "0x17A9F30", Offset = "0x17A9F30", VA = "0x17A9F30", Slot = "33")]
		public Task RemoveKey(byte obj, byte keyId, CancellationToken cancellationToken)
		{
			return null;
		}

		[Token(Token = "0x6000ABF")]
		[Address(RVA = "0x17AA02C", Offset = "0x17AA02C", VA = "0x17AA02C")]
		[Command(requiresAuthority = false)]
		public void CmdRemoveKey(byte requestId, byte obj, byte keyId, [Optional] NetworkConnectionToClient sender)
		{
		}

		[Token(Token = "0x6000AC0")]
		[Address(RVA = "0x17AA250", Offset = "0x17AA250", VA = "0x17AA250")]
		[ClientRpc]
		public void RpcRemoveKey(byte requestId, int connectionId, byte obj, byte keyId)
		{
		}

		[Token(Token = "0x6000AC1")]
		[Address(RVA = "0x17AA490", Offset = "0x17AA490", VA = "0x17AA490", Slot = "34")]
		public Task SetRelativeEnabled(byte obj, bool value, CancellationToken cancellationToken)
		{
			return null;
		}

		[Token(Token = "0x6000AC2")]
		[Address(RVA = "0x17AA590", Offset = "0x17AA590", VA = "0x17AA590")]
		[Command(requiresAuthority = false)]
		public void CmdSetRelativeEnabled(byte requestId, byte obj, bool value, [Optional] NetworkConnectionToClient sender)
		{
		}

		[Token(Token = "0x6000AC3")]
		[Address(RVA = "0x17AA7B4", Offset = "0x17AA7B4", VA = "0x17AA7B4")]
		[ClientRpc]
		public void RpcSetRelativeEnabled(byte requestId, int connectionId, byte obj, bool value)
		{
		}

		[Token(Token = "0x6000AC6")]
		[Address(RVA = "0x17AAB54", Offset = "0x17AAB54", VA = "0x17AAB54", Slot = "45")]
		public Task ResetModulesForObject(byte value, CancellationToken cancellationToken)
		{
			return null;
		}

		[Token(Token = "0x6000AC7")]
		[Address(RVA = "0x17AAC48", Offset = "0x17AAC48", VA = "0x17AAC48")]
		[Command(requiresAuthority = false)]
		private void CmdResetModulesForObject(byte requestId, byte value, [Optional] NetworkConnectionToClient sender)
		{
		}

		[Token(Token = "0x6000AC8")]
		[Address(RVA = "0x17AAE58", Offset = "0x17AAE58", VA = "0x17AAE58")]
		[ClientRpc]
		private void RpcResetModulesForObject(byte requestId, int connectionId, byte value)
		{
		}

		[Token(Token = "0x6000AC9")]
		[Address(RVA = "0x17AB07C", Offset = "0x17AB07C", VA = "0x17AB07C")]
		public NetworkDicomSceneDispatcher()
		{
		}

		[Token(Token = "0x6000ACA")]
		[Address(RVA = "0x17AB150", Offset = "0x17AB150", VA = "0x17AB150")]
		private void MirrorProcessed()
		{
		}

		[Token(Token = "0x6000ACB")]
		[Address(RVA = "0x17AB154", Offset = "0x17AB154", VA = "0x17AB154")]
		protected void UserCode_CmdAddInstanceId__Byte__IDicom3dData__NetworkConnectionToClient(byte requestId, IDicom3dData value, NetworkConnectionToClient sender)
		{
		}

		[Token(Token = "0x6000ACC")]
		[Address(RVA = "0x17AB220", Offset = "0x17AB220", VA = "0x17AB220")]
		protected static void InvokeUserCode_CmdAddInstanceId__Byte__IDicom3dData__NetworkConnectionToClient(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x6000ACD")]
		[Address(RVA = "0x17AB510", Offset = "0x17AB510", VA = "0x17AB510")]
		protected void UserCode_CmdRemoveInstanceId__Byte__Byte__NetworkConnectionToClient(byte requestId, byte value, NetworkConnectionToClient sender)
		{
		}

		[Token(Token = "0x6000ACE")]
		[Address(RVA = "0x17AB5D0", Offset = "0x17AB5D0", VA = "0x17AB5D0")]
		protected static void InvokeUserCode_CmdRemoveInstanceId__Byte__Byte__NetworkConnectionToClient(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x6000ACF")]
		[Address(RVA = "0x17AB760", Offset = "0x17AB760", VA = "0x17AB760")]
		protected void UserCode_RpcAddInstanceId__Byte__Int32__Byte__IDicom3dData(byte requestId, int connectionId, byte id, IDicom3dData dicom3dData)
		{
		}

		[Token(Token = "0x6000AD0")]
		[Address(RVA = "0x17AB8B4", Offset = "0x17AB8B4", VA = "0x17AB8B4")]
		protected static void InvokeUserCode_RpcAddInstanceId__Byte__Int32__Byte__IDicom3dData(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x6000AD1")]
		[Address(RVA = "0x17ABA2C", Offset = "0x17ABA2C", VA = "0x17ABA2C")]
		protected void UserCode_RpcRemoveInstanceId__Byte__Int32__Byte(byte requestId, int connectionId, byte value)
		{
		}

		[Token(Token = "0x6000AD2")]
		[Address(RVA = "0x17ABB28", Offset = "0x17ABB28", VA = "0x17ABB28")]
		protected static void InvokeUserCode_RpcRemoveInstanceId__Byte__Int32__Byte(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x6000AD3")]
		[Address(RVA = "0x17ABC90", Offset = "0x17ABC90", VA = "0x17ABC90")]
		protected void UserCode_CmdSetSliceTarget__Byte__Byte__Nullable`1__NetworkConnectionToClient(byte requestId, byte obj, bool? value, NetworkConnectionToClient sender)
		{
		}

		[Token(Token = "0x6000AD4")]
		[Address(RVA = "0x17ABD08", Offset = "0x17ABD08", VA = "0x17ABD08")]
		protected static void InvokeUserCode_CmdSetSliceTarget__Byte__Byte__Nullable`1__NetworkConnectionToClient(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x6000AD5")]
		[Address(RVA = "0x17ABF30", Offset = "0x17ABF30", VA = "0x17ABF30")]
		protected void UserCode_RpcSetSliceTarget__Byte__Int32__Byte__Nullable`1(byte requestId, int connectionId, byte obj, bool? value)
		{
		}

		[Token(Token = "0x6000AD6")]
		[Address(RVA = "0x17AC03C", Offset = "0x17AC03C", VA = "0x17AC03C")]
		protected static void InvokeUserCode_RpcSetSliceTarget__Byte__Int32__Byte__Nullable`1(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x6000AD7")]
		[Address(RVA = "0x17AC1B4", Offset = "0x17AC1B4", VA = "0x17AC1B4")]
		protected void UserCode_CmdSetVisibilityWindow__Byte__Byte__Vector2__NetworkConnectionToClient(byte requestId, byte item, Vector2 value, NetworkConnectionToClient sender)
		{
		}

		[Token(Token = "0x6000AD8")]
		[Address(RVA = "0x17AC240", Offset = "0x17AC240", VA = "0x17AC240")]
		protected static void InvokeUserCode_CmdSetVisibilityWindow__Byte__Byte__Vector2__NetworkConnectionToClient(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x6000AD9")]
		[Address(RVA = "0x17AC3E0", Offset = "0x17AC3E0", VA = "0x17AC3E0")]
		protected void UserCode_RpcSetVisibilityWindow__Byte__Int32__Byte__Vector2(byte requestId, int connectionId, byte item, Vector2 value)
		{
		}

		[Token(Token = "0x6000ADA")]
		[Address(RVA = "0x17AC4F0", Offset = "0x17AC4F0", VA = "0x17AC4F0")]
		protected static void InvokeUserCode_RpcSetVisibilityWindow__Byte__Int32__Byte__Vector2(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x6000ADB")]
		[Address(RVA = "0x17AC668", Offset = "0x17AC668", VA = "0x17AC668")]
		protected void UserCode_CmdAddKey__Byte__Byte__GradientKey`1__NetworkConnectionToClient(byte requestId, byte item, GradientKey<float> value, NetworkConnectionToClient sender)
		{
		}

		[Token(Token = "0x6000ADC")]
		[Address(RVA = "0x17AC700", Offset = "0x17AC700", VA = "0x17AC700")]
		protected static void InvokeUserCode_CmdAddKey__Byte__Byte__GradientKey`1__NetworkConnectionToClient(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x6000ADD")]
		[Address(RVA = "0x17AC8D8", Offset = "0x17AC8D8", VA = "0x17AC8D8")]
		protected void UserCode_RpcAddKey__Byte__Int32__Byte__GradientKey`1(byte requestId, int connectionId, byte item, GradientKey<float> value)
		{
		}

		[Token(Token = "0x6000ADE")]
		[Address(RVA = "0x17AC9F0", Offset = "0x17AC9F0", VA = "0x17AC9F0")]
		protected static void InvokeUserCode_RpcAddKey__Byte__Int32__Byte__GradientKey`1(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x6000ADF")]
		[Address(RVA = "0x17ACBA0", Offset = "0x17ACBA0", VA = "0x17ACBA0")]
		protected void UserCode_CmdSetTransferFunction__Byte__Byte__KeyValuePair`2[]__NetworkConnectionToClient(byte requestId, byte obj, KeyValuePair<byte, GradientKey<float>>[] keys, NetworkConnectionToClient sender)
		{
		}

		[Token(Token = "0x6000AE0")]
		[Address(RVA = "0x17ACC18", Offset = "0x17ACC18", VA = "0x17ACC18")]
		protected static void InvokeUserCode_CmdSetTransferFunction__Byte__Byte__KeyValuePair`2[]__NetworkConnectionToClient(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x6000AE1")]
		[Address(RVA = "0x17ACDBC", Offset = "0x17ACDBC", VA = "0x17ACDBC")]
		protected void UserCode_RpcSetTransferFunction__Byte__Int32__Byte__KeyValuePair`2[](byte requestId, int connectionId, byte obj, KeyValuePair<byte, GradientKey<float>>[] keys)
		{
		}

		[Token(Token = "0x6000AE2")]
		[Address(RVA = "0x17ACEC8", Offset = "0x17ACEC8", VA = "0x17ACEC8")]
		protected static void InvokeUserCode_RpcSetTransferFunction__Byte__Int32__Byte__KeyValuePair`2[](NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x6000AE3")]
		[Address(RVA = "0x17AD044", Offset = "0x17AD044", VA = "0x17AD044")]
		protected void UserCode_CmdSetKey__Byte__Byte__Byte__GradientKey`1__NetworkConnectionToClient(byte requestId, byte obj, byte keyId, GradientKey<float> value, NetworkConnectionToClient sender)
		{
		}

		[Token(Token = "0x6000AE4")]
		[Address(RVA = "0x17AD0F0", Offset = "0x17AD0F0", VA = "0x17AD0F0")]
		protected static void InvokeUserCode_CmdSetKey__Byte__Byte__Byte__GradientKey`1__NetworkConnectionToClient(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x6000AE5")]
		[Address(RVA = "0x17AD2E8", Offset = "0x17AD2E8", VA = "0x17AD2E8")]
		protected void UserCode_RpcSetKey__Byte__Int32__Byte__Byte__GradientKey`1(byte requestId, int connectionId, byte obj, byte keyId, GradientKey<float> value)
		{
		}

		[Token(Token = "0x6000AE6")]
		[Address(RVA = "0x17AD408", Offset = "0x17AD408", VA = "0x17AD408")]
		protected static void InvokeUserCode_RpcSetKey__Byte__Int32__Byte__Byte__GradientKey`1(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x6000AE7")]
		[Address(RVA = "0x17AD5D8", Offset = "0x17AD5D8", VA = "0x17AD5D8")]
		protected void UserCode_CmdRemoveKey__Byte__Byte__Byte__NetworkConnectionToClient(byte requestId, byte obj, byte keyId, NetworkConnectionToClient sender)
		{
		}

		[Token(Token = "0x6000AE8")]
		[Address(RVA = "0x17AD650", Offset = "0x17AD650", VA = "0x17AD650")]
		protected static void InvokeUserCode_CmdRemoveKey__Byte__Byte__Byte__NetworkConnectionToClient(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x6000AE9")]
		[Address(RVA = "0x17AD7F4", Offset = "0x17AD7F4", VA = "0x17AD7F4")]
		protected void UserCode_RpcRemoveKey__Byte__Int32__Byte__Byte(byte requestId, int connectionId, byte obj, byte keyId)
		{
		}

		[Token(Token = "0x6000AEA")]
		[Address(RVA = "0x17AD900", Offset = "0x17AD900", VA = "0x17AD900")]
		protected static void InvokeUserCode_RpcRemoveKey__Byte__Int32__Byte__Byte(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x6000AEB")]
		[Address(RVA = "0x17ADA7C", Offset = "0x17ADA7C", VA = "0x17ADA7C")]
		protected void UserCode_CmdSetRelativeEnabled__Byte__Byte__Boolean__NetworkConnectionToClient(byte requestId, byte obj, bool value, NetworkConnectionToClient sender)
		{
		}

		[Token(Token = "0x6000AEC")]
		[Address(RVA = "0x17ADAF4", Offset = "0x17ADAF4", VA = "0x17ADAF4")]
		protected static void InvokeUserCode_CmdSetRelativeEnabled__Byte__Byte__Boolean__NetworkConnectionToClient(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x6000AED")]
		[Address(RVA = "0x17ADC98", Offset = "0x17ADC98", VA = "0x17ADC98")]
		protected void UserCode_RpcSetRelativeEnabled__Byte__Int32__Byte__Boolean(byte requestId, int connectionId, byte obj, bool value)
		{
		}

		[Token(Token = "0x6000AEE")]
		[Address(RVA = "0x17ADDA8", Offset = "0x17ADDA8", VA = "0x17ADDA8")]
		protected static void InvokeUserCode_RpcSetRelativeEnabled__Byte__Int32__Byte__Boolean(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x6000AEF")]
		[Address(RVA = "0x17ADF24", Offset = "0x17ADF24", VA = "0x17ADF24")]
		protected void UserCode_CmdResetModulesForObject__Byte__Byte__NetworkConnectionToClient(byte requestId, byte value, NetworkConnectionToClient sender)
		{
		}

		[Token(Token = "0x6000AF0")]
		[Address(RVA = "0x17ADF94", Offset = "0x17ADF94", VA = "0x17ADF94")]
		protected static void InvokeUserCode_CmdResetModulesForObject__Byte__Byte__NetworkConnectionToClient(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x6000AF1")]
		[Address(RVA = "0x17AE124", Offset = "0x17AE124", VA = "0x17AE124")]
		protected void UserCode_RpcResetModulesForObject__Byte__Int32__Byte(byte requestId, int connectionId, byte value)
		{
		}

		[Token(Token = "0x6000AF2")]
		[Address(RVA = "0x17AE220", Offset = "0x17AE220", VA = "0x17AE220")]
		protected static void InvokeUserCode_RpcResetModulesForObject__Byte__Int32__Byte(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x6000AF3")]
		[Address(RVA = "0x17AE388", Offset = "0x17AE388", VA = "0x17AE388")]
		static NetworkDicomSceneDispatcher()
		{
		}
	}
	[Token(Token = "0x2000201")]
	public static class NetworkDicomSceneDispatcherWriters
	{
		[Token(Token = "0x6000B1E")]
		[Address(RVA = "0x17A7DB0", Offset = "0x17A7DB0", VA = "0x17A7DB0")]
		public static void WriteNullableBool(this NetworkWriter writer, bool? value)
		{
		}

		[Token(Token = "0x6000B1F")]
		[Address(RVA = "0x17ABEA8", Offset = "0x17ABEA8", VA = "0x17ABEA8")]
		public static bool? ReadNullableBool(this NetworkReader reader)
		{
			return null;
		}

		[Token(Token = "0x6000B20")]
		[Address(RVA = "0x17A6E7C", Offset = "0x17A6E7C", VA = "0x17A6E7C")]
		public static void WriteDicom3dData(this NetworkWriter writer, IDicom3dData value)
		{
		}

		[Token(Token = "0x6000B21")]
		[Address(RVA = "0x17AB3AC", Offset = "0x17AB3AC", VA = "0x17AB3AC")]
		public static IDicom3dData ReadDicom3dData(this NetworkReader reader)
		{
			return null;
		}
	}
}
namespace Dicom.Views
{
	[Serializable]
	[Token(Token = "0x2000202")]
	public class DicomVrInstanceSettings
	{
		[Token(Token = "0x4000A43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Color DefaultBorderColor;

		[Token(Token = "0x4000A44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color FocusedBorderColor;

		[Token(Token = "0x4000A45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Color GazedBorderColor;

		[Token(Token = "0x6000B22")]
		[Address(RVA = "0x17AF534", Offset = "0x17AF534", VA = "0x17AF534")]
		public DicomVrInstanceSettings()
		{
		}
	}
	[Token(Token = "0x2000203")]
	public class DicomVrInstance : IDicomVrInstance, IDicomInstance, IFocusable, ISceneObject, IGazeable, IGrabable
	{
		[Token(Token = "0x4000A46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly GameObject GameObject;

		[Token(Token = "0x4000A47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly DicomVrInstanceReferences DicomVrInstanceReferences;

		[Token(Token = "0x4000A48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly DicomVrInstanceSettings _settings;

		[Token(Token = "0x4000A52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private TweenerCore<Color, Color, ColorOptions> _colorTweener;

		[Token(Token = "0x4000A53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Color _lastColor;

		[Token(Token = "0x17000164")]
		public byte InstanceId
		{
			[Token(Token = "0x6000B23")]
			[Address(RVA = "0x17AF53C", Offset = "0x17AF53C", VA = "0x17AF53C", Slot = "10")]
			[CompilerGenerated]
			get
			{
				return default(byte);
			}
			[Token(Token = "0x6000B24")]
			[Address(RVA = "0x17AF544", Offset = "0x17AF544", VA = "0x17AF544")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000165")]
		public IDicom3dData Dicom3dData
		{
			[Token(Token = "0x6000B25")]
			[Address(RVA = "0x17AF54C", Offset = "0x17AF54C", VA = "0x17AF54C", Slot = "11")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B26")]
			[Address(RVA = "0x17AF554", Offset = "0x17AF554", VA = "0x17AF554")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000166")]
		public int MinValue
		{
			[Token(Token = "0x6000B27")]
			[Address(RVA = "0x17AF55C", Offset = "0x17AF55C", VA = "0x17AF55C", Slot = "4")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000B28")]
			[Address(RVA = "0x17AF564", Offset = "0x17AF564", VA = "0x17AF564")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000167")]
		public int MaxValue
		{
			[Token(Token = "0x6000B29")]
			[Address(RVA = "0x17AF56C", Offset = "0x17AF56C", VA = "0x17AF56C", Slot = "5")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000B2A")]
			[Address(RVA = "0x17AF574", Offset = "0x17AF574", VA = "0x17AF574")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000168")]
		public int DataOffset
		{
			[Token(Token = "0x6000B2B")]
			[Address(RVA = "0x17AF57C", Offset = "0x17AF57C", VA = "0x17AF57C", Slot = "6")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000B2C")]
			[Address(RVA = "0x17AF584", Offset = "0x17AF584", VA = "0x17AF584")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000169")]
		public string RescaleType
		{
			[Token(Token = "0x6000B2D")]
			[Address(RVA = "0x17AF58C", Offset = "0x17AF58C", VA = "0x17AF58C", Slot = "7")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B2E")]
			[Address(RVA = "0x17AF594", Offset = "0x17AF594", VA = "0x17AF594")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700016A")]
		public Texture3D Texture3D
		{
			[Token(Token = "0x6000B2F")]
			[Address(RVA = "0x17AF59C", Offset = "0x17AF59C", VA = "0x17AF59C")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B30")]
			[Address(RVA = "0x17AF5A4", Offset = "0x17AF5A4", VA = "0x17AF5A4")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700016B")]
		public VolumeRenderedObject VolumeRenderedObject
		{
			[Token(Token = "0x6000B31")]
			[Address(RVA = "0x17AF5AC", Offset = "0x17AF5AC", VA = "0x17AF5AC", Slot = "8")]
			[CompilerGenerated]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700016C")]
		public State State
		{
			[Token(Token = "0x6000B32")]
			[Address(RVA = "0x17AF5B4", Offset = "0x17AF5B4", VA = "0x17AF5B4", Slot = "9")]
			[CompilerGenerated]
			get
			{
				return default(State);
			}
			[Token(Token = "0x6000B33")]
			[Address(RVA = "0x17AF5BC", Offset = "0x17AF5BC", VA = "0x17AF5BC")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700016D")]
		public bool IsFocused
		{
			[Token(Token = "0x6000B37")]
			[Address(RVA = "0x17AF7C8", Offset = "0x17AF7C8", VA = "0x17AF7C8", Slot = "12")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000B38")]
			[Address(RVA = "0x17AF7D0", Offset = "0x17AF7D0", VA = "0x17AF7D0")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700016E")]
		public bool IsGazed
		{
			[Token(Token = "0x6000B3A")]
			[Address(RVA = "0x17AF810", Offset = "0x17AF810", VA = "0x17AF810")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000B3B")]
			[Address(RVA = "0x17AF818", Offset = "0x17AF818", VA = "0x17AF818")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700016F")]
		public bool FocusEnabled
		{
			[Token(Token = "0x6000B3C")]
			[Address(RVA = "0x17AF824", Offset = "0x17AF824", VA = "0x17AF824", Slot = "15")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000B3D")]
			[Address(RVA = "0x17AF82C", Offset = "0x17AF82C", VA = "0x17AF82C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000170")]
		private GameObject VR.Input.IGrabable.GameObject
		{
			[Token(Token = "0x6000B3F")]
			[Address(RVA = "0x17AF868", Offset = "0x17AF868", VA = "0x17AF868", Slot = "17")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000171")]
		public bool ManipulationEnabled
		{
			[Token(Token = "0x6000B40")]
			[Address(RVA = "0x17AF870", Offset = "0x17AF870", VA = "0x17AF870", Slot = "18")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000B41")]
			[Address(RVA = "0x17AF878", Offset = "0x17AF878", VA = "0x17AF878")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000172")]
		public bool IsBeingManipulated
		{
			[Token(Token = "0x6000B42")]
			[Address(RVA = "0x17AF884", Offset = "0x17AF884", VA = "0x17AF884", Slot = "19")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000B43")]
			[Address(RVA = "0x17AF88C", Offset = "0x17AF88C", VA = "0x17AF88C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6000B34")]
		[Address(RVA = "0x17AF5C4", Offset = "0x17AF5C4", VA = "0x17AF5C4")]
		public DicomVrInstance(GameObject gameObject, VolumeRenderedObject volumeRenderedObject, DicomVrInstanceReferences dicomVrInstanceReferences, DicomVrInstanceSettings settings)
		{
		}

		[Token(Token = "0x6000B35")]
		[Address(RVA = "0x17AF638", Offset = "0x17AF638", VA = "0x17AF638")]
		private void SetVisual(bool isGazed, bool isFocused, bool isGrabbed)
		{
		}

		[Token(Token = "0x6000B36")]
		[Address(RVA = "0x17AF76C", Offset = "0x17AF76C", VA = "0x17AF76C", Slot = "14")]
		public bool Exists()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B39")]
		[Address(RVA = "0x17AF7DC", Offset = "0x17AF7DC", VA = "0x17AF7DC", Slot = "13")]
		public void SetFocused(bool value)
		{
		}

		[Token(Token = "0x6000B3E")]
		[Address(RVA = "0x17AF838", Offset = "0x17AF838", VA = "0x17AF838", Slot = "16")]
		private void VR.Input.IGazeable.SetFocused(bool value)
		{
		}

		[Token(Token = "0x6000B44")]
		[Address(RVA = "0x17AF898", Offset = "0x17AF898", VA = "0x17AF898", Slot = "20")]
		public void StartManipulation()
		{
		}

		[Token(Token = "0x6000B45")]
		[Address(RVA = "0x17AF8C8", Offset = "0x17AF8C8", VA = "0x17AF8C8", Slot = "21")]
		public void StopManipulation(Vector3 velocity, Vector3 angularVelocity)
		{
		}

		[Token(Token = "0x6000B46")]
		[Address(RVA = "0x17AF8EC", Offset = "0x17AF8EC", VA = "0x17AF8EC", Slot = "22")]
		public void ForceEndManipulation()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000204")]
	public class DicomVrInstanceFactorySettings
	{
		[Token(Token = "0x4000A59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public DicomVrInstanceReferences DicomVrInstancePrefab;

		[Token(Token = "0x4000A5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public DicomVrInstanceSettings DicomVrInstanceSettings;

		[Token(Token = "0x4000A5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Shader MobileShader;

		[Token(Token = "0x4000A5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Shader DesktopShader;

		[Token(Token = "0x4000A5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform ParentTransform;

		[Token(Token = "0x6000B47")]
		[Address(RVA = "0x17AF954", Offset = "0x17AF954", VA = "0x17AF954")]
		public DicomVrInstanceFactorySettings()
		{
		}
	}
	[Token(Token = "0x2000205")]
	public class DicomVrInstanceFactory : IDicomInstanceFactory<IDicomVrInstance>, IDisposable
	{
		[Token(Token = "0x2000206")]
		public class FrameData
		{
			[Token(Token = "0x4000A65")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public readonly Dicom.Scene.IDicomFile DicomFile;

			[Token(Token = "0x4000A66")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public readonly int Index;

			[Token(Token = "0x4000A67")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public readonly IDicomDataset PerFrameSequence;

			[Token(Token = "0x17000173")]
			public ushort? Rows
			{
				[Token(Token = "0x6000B59")]
				[Address(RVA = "0x17B1F18", Offset = "0x17B1F18", VA = "0x17B1F18")]
				[CompilerGenerated]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000174")]
			public ushort? Columns
			{
				[Token(Token = "0x6000B5A")]
				[Address(RVA = "0x17B1F20", Offset = "0x17B1F20", VA = "0x17B1F20")]
				[CompilerGenerated]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000175")]
			public int? PixelPaddingValue
			{
				[Token(Token = "0x6000B5B")]
				[Address(RVA = "0x17B1F28", Offset = "0x17B1F28", VA = "0x17B1F28")]
				[CompilerGenerated]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000176")]
			public decimal[] ImagePosition
			{
				[Token(Token = "0x6000B5C")]
				[Address(RVA = "0x17B1F30", Offset = "0x17B1F30", VA = "0x17B1F30")]
				[CompilerGenerated]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000177")]
			public decimal[] ImageOrientation
			{
				[Token(Token = "0x6000B5D")]
				[Address(RVA = "0x17B1F38", Offset = "0x17B1F38", VA = "0x17B1F38")]
				[CompilerGenerated]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000178")]
			public decimal[] PixelSpacing
			{
				[Token(Token = "0x6000B5E")]
				[Address(RVA = "0x17B1F40", Offset = "0x17B1F40", VA = "0x17B1F40")]
				[CompilerGenerated]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000179")]
			public decimal? RescaleSlope
			{
				[Token(Token = "0x6000B5F")]
				[Address(RVA = "0x17B1F48", Offset = "0x17B1F48", VA = "0x17B1F48")]
				[CompilerGenerated]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700017A")]
			public decimal? RescaleIntercept
			{
				[Token(Token = "0x6000B60")]
				[Address(RVA = "0x17B1F5C", Offset = "0x17B1F5C", VA = "0x17B1F5C")]
				[CompilerGenerated]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700017B")]
			public string RescaleType
			{
				[Token(Token = "0x6000B61")]
				[Address(RVA = "0x17B1F70", Offset = "0x17B1F70", VA = "0x17B1F70")]
				[CompilerGenerated]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700017C")]
			public Array PixelData
			{
				[Token(Token = "0x6000B64")]
				[Address(RVA = "0x17B3D54", Offset = "0x17B3D54", VA = "0x17B3D54")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000B62")]
			[Address(RVA = "0x17B1F78", Offset = "0x17B1F78", VA = "0x17B1F78")]
			public FrameData(Dicom.Scene.IDicomFile dicomFile)
			{
			}

			[Token(Token = "0x6000B63")]
			[Address(RVA = "0x17B2C28", Offset = "0x17B2C28", VA = "0x17B2C28")]
			public FrameData(Dicom.Scene.IDicomFile dicomFile, int index, IDicomDataset perFrameSequence)
			{
			}
		}

		[Token(Token = "0x2000207")]
		[CompilerGenerated]
		private sealed class <>c__DisplayClass11_0
		{
			[Token(Token = "0x4000A71")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public DicomVrInstance dicomVrInstance;

			[Token(Token = "0x6000B65")]
			[Address(RVA = "0x17B3E68", Offset = "0x17B3E68", VA = "0x17B3E68")]
			public <>c__DisplayClass11_0()
			{
			}

			[Token(Token = "0x6000B66")]
			[Address(RVA = "0x17B3E70", Offset = "0x17B3E70", VA = "0x17B3E70")]
			internal void <LoadData>b__0(int val)
			{
			}
		}

		[Token(Token = "0x2000208")]
		[CompilerGenerated]
		private sealed class <>c__DisplayClass11_1
		{
			[Token(Token = "0x4000A72")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<FrameData> files;

			[Token(Token = "0x4000A73")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public ushort[][] pixelData;

			[Token(Token = "0x4000A74")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int minValue;

			[Token(Token = "0x4000A75")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public int maxValue;

			[Token(Token = "0x6000B67")]
			[Address(RVA = "0x17B3F20", Offset = "0x17B3F20", VA = "0x17B3F20")]
			public <>c__DisplayClass11_1()
			{
			}

			[Token(Token = "0x6000B68")]
			[Address(RVA = "0x17B3F28", Offset = "0x17B3F28", VA = "0x17B3F28")]
			internal void <LoadData>b__6()
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200020B")]
		[CompilerGenerated]
		private struct <LoadData>d__11 : IAsyncStateMachine
		{
			[Token(Token = "0x4000A80")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000A81")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4000A82")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public DicomVrInstance dicomVrInstance;

			[Token(Token = "0x4000A83")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public DicomVrInstanceFactory <>4__this;

			[Token(Token = "0x4000A84")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public CancellationToken cancellationToken;

			[Token(Token = "0x4000A85")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private <>c__DisplayClass11_0 <>8__1;

			[Token(Token = "0x4000A86")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private <>c__DisplayClass11_1 <>8__2;

			[Token(Token = "0x4000A87")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private (ushort Rows, ushort Columns, decimal SpacingRows, decimal SpacingColumns, List<FrameData> Files)[] <fileGroups>5__2;

			[Token(Token = "0x4000A88")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private ushort <rows>5__3;

			[Token(Token = "0x4000A89")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
			private ushort <columns>5__4;

			[Token(Token = "0x4000A8A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private decimal <spacingRows>5__5;

			[Token(Token = "0x4000A8B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			private decimal <spacingColumns>5__6;

			[Token(Token = "0x4000A8C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			private Texture3D <dataTexture>5__7;

			[Token(Token = "0x4000A8D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			private int <dataOffset>5__8;

			[Token(Token = "0x4000A8E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
			private Vector3 <scale>5__9;

			[Token(Token = "0x4000A8F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			private Vector3? <eulerRotation>5__10;

			[Token(Token = "0x4000A90")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
			private TaskAwaiter<IReadOnlyList<Dicom.Scene.IDicomFile>> <>u__1;

			[Token(Token = "0x4000A91")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
			private TaskAwaiter <>u__2;

			[Token(Token = "0x6000B74")]
			[Address(RVA = "0x17B4CC0", Offset = "0x17B4CC0", VA = "0x17B4CC0", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000B75")]
			[Address(RVA = "0x17B81DC", Offset = "0x17B81DC", VA = "0x17B81DC", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200020C")]
		[CompilerGenerated]
		private struct <SetError>d__12 : IAsyncStateMachine
		{
			[Token(Token = "0x4000A92")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000A93")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4000A94")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public DicomVrInstance dicomVrInstance;

			[Token(Token = "0x4000A95")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public CancellationToken cancellationToken;

			[Token(Token = "0x4000A96")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x6000B76")]
			[Address(RVA = "0x17B91E8", Offset = "0x17B91E8", VA = "0x17B91E8", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000B77")]
			[Address(RVA = "0x17B9654", Offset = "0x17B9654", VA = "0x17B9654", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x200020D")]
		[CompilerGenerated]
		private sealed class <>c__DisplayClass13_0
		{
			[Token(Token = "0x4000A97")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public IReadOnlyList<ushort[]> pixelData;

			[Token(Token = "0x4000A98")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int imageSize;

			[Token(Token = "0x4000A99")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UnityEngine.Color32[] cols;

			[Token(Token = "0x4000A9A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int minValue;

			[Token(Token = "0x4000A9B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float rangeSize;

			[Token(Token = "0x4000A9C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Action<int> <>9__2;

			[Token(Token = "0x6000B78")]
			[Address(RVA = "0x17B9660", Offset = "0x17B9660", VA = "0x17B9660")]
			public <>c__DisplayClass13_0()
			{
			}

			[Token(Token = "0x6000B79")]
			[Address(RVA = "0x17B9668", Offset = "0x17B9668", VA = "0x17B9668")]
			internal ParallelLoopResult <SetTexture>b__1()
			{
				return default(ParallelLoopResult);
			}

			[Token(Token = "0x6000B7A")]
			[Address(RVA = "0x17B97D4", Offset = "0x17B97D4", VA = "0x17B97D4")]
			internal void <SetTexture>b__2(int i)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200020E")]
		[CompilerGenerated]
		private struct <SetTexture>d__13 : IAsyncStateMachine
		{
			[Token(Token = "0x4000A9D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000A9E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4000A9F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public IReadOnlyList<ushort[]> pixelData;

			[Token(Token = "0x4000AA0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int minValue;

			[Token(Token = "0x4000AA1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public int maxValue;

			[Token(Token = "0x4000AA2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public CancellationToken cancellationToken;

			[Token(Token = "0x4000AA3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Texture3D texture;

			[Token(Token = "0x4000AA4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private <>c__DisplayClass13_0 <>8__1;

			[Token(Token = "0x4000AA5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private TaskAwaiter<ParallelLoopResult> <>u__1;

			[Token(Token = "0x6000B7B")]
			[Address(RVA = "0x17B9CAC", Offset = "0x17B9CAC", VA = "0x17B9CAC", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000B7C")]
			[Address(RVA = "0x17BA218", Offset = "0x17BA218", VA = "0x17BA218", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x2000210")]
		[CompilerGenerated]
		private sealed class <Yield>d__23<T> : IEnumerable<T>, IEnumerable, IEnumerator<T>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000AA7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x4000AA8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private T <>2__current;

			[Token(Token = "0x4000AA9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4000AAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private T value;

			[Token(Token = "0x4000AAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T <>3__value;

			[Token(Token = "0x1700017D")]
			private T System.Collections.Generic.IEnumerator<T>.Current
			{
				[Token(Token = "0x6000B83")]
				[DebuggerHidden]
				get
				{
					return (T)null;
				}
			}

			[Token(Token = "0x1700017E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000B85")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000B80")]
			[DebuggerHidden]
			public <Yield>d__23(int <>1__state)
			{
			}

			[Token(Token = "0x6000B81")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000B82")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000B84")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6000B86")]
			[DebuggerHidden]
			private IEnumerator<T> System.Collections.Generic.IEnumerable<T>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6000B87")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x4000A5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly DicomVrInstanceFactorySettings _settings;

		[Token(Token = "0x4000A5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly IDicomFileFactory _dicomFileFactory;

		[Token(Token = "0x4000A60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int DataTex;

		[Token(Token = "0x4000A61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static readonly int NoiseTex;

		[Token(Token = "0x4000A62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly int TFTex;

		[Token(Token = "0x4000A63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly TextureFormat _textureFormat;

		[Token(Token = "0x4000A64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly Dictionary<byte, CancellationTokenSource> _cancellationTokenSources;

		[Token(Token = "0x6000B48")]
		[Address(RVA = "0x17AF95C", Offset = "0x17AF95C", VA = "0x17AF95C")]
		public DicomVrInstanceFactory(DicomVrInstanceFactorySettings settings, IDicomFileFactory dicomFileFactory)
		{
		}

		[Token(Token = "0x6000B49")]
		[Address(RVA = "0x17AFA3C", Offset = "0x17AFA3C", VA = "0x17AFA3C", Slot = "4")]
		public Task<IDicomVrInstance> Create(IDicom3dData dicom3dData, byte instanceId, CancellationToken cancellationToken)
		{
			return null;
		}

		[Token(Token = "0x6000B4A")]
		[Address(RVA = "0x17B0320", Offset = "0x17B0320", VA = "0x17B0320", Slot = "5")]
		public Task Destroy(IDicomVrInstance dicomVrInstance, CancellationToken cancellationToken)
		{
			return null;
		}

		[Token(Token = "0x6000B4B")]
		[Address(RVA = "0x17B0210", Offset = "0x17B0210", VA = "0x17B0210")]
		[AsyncStateMachine(typeof(<LoadData>d__11))]
		public void LoadData(DicomVrInstance dicomVrInstance, CancellationToken cancellationToken)
		{
		}

		[Token(Token = "0x6000B4C")]
		[Address(RVA = "0x17B0544", Offset = "0x17B0544", VA = "0x17B0544")]
		[AsyncStateMachine(typeof(<SetError>d__12))]
		public static void SetError(DicomVrInstance dicomVrInstance, CancellationToken cancellationToken)
		{
		}

		[Token(Token = "0x6000B4D")]
		[Address(RVA = "0x17B0618", Offset = "0x17B0618", VA = "0x17B0618")]
		[AsyncStateMachine(typeof(<SetTexture>d__13))]
		public static Task SetTexture(Texture3D texture, IReadOnlyList<ushort[]> pixelData, int minValue, int maxValue, CancellationToken cancellationToken)
		{
			return null;
		}

		[Token(Token = "0x6000B4E")]
		[Address(RVA = "0x17B074C", Offset = "0x17B074C", VA = "0x17B074C")]
		public static TweenerCore<Vector3, Vector3, VectorOptions> DoSize(BoxCollider boxCollider, Vector3 endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6000B4F")]
		[Address(RVA = "0x17B08B0", Offset = "0x17B08B0", VA = "0x17B08B0")]
		public static double3 GetFrameNormal(decimal[] imageOrientation)
		{
			return default(double3);
		}

		[Token(Token = "0x6000B50")]
		[Address(RVA = "0x17B09F0", Offset = "0x17B09F0", VA = "0x17B09F0")]
		public static double GetFrameDotProduct(FrameData frameData)
		{
			return default(double);
		}

		[Token(Token = "0x6000B51")]
		[Address(RVA = "0x17B0A70", Offset = "0x17B0A70", VA = "0x17B0A70")]
		public static double GetFrameDotProduct(decimal[] imagePosition, decimal[] imageOrientation)
		{
			return default(double);
		}

		[Token(Token = "0x6000B52")]
		[Address(RVA = "0x17B0C2C", Offset = "0x17B0C2C", VA = "0x17B0C2C")]
		private static ushort[] BilinearScale(IReadOnlyList<ushort> pixelData, int oldWidth, int oldHeight, int newWidth, int newHeight)
		{
			return null;
		}

		[Token(Token = "0x6000B53")]
		[Address(RVA = "0x17B0FF4", Offset = "0x17B0FF4", VA = "0x17B0FF4")]
		private static ushort LerpUnclamped(ushort c1, ushort c2, float value)
		{
			return default(ushort);
		}

		[Token(Token = "0x6000B54")]
		[Address(RVA = "0x17B10AC", Offset = "0x17B10AC", VA = "0x17B10AC", Slot = "6")]
		public void Dispose()
		{
		}

		[Token(Token = "0x6000B55")]
		[Address(RVA = "0x17B1210", Offset = "0x17B1210", VA = "0x17B1210")]
		public static float GetHeight(IReadOnlyList<FrameData> sortedFrameData)
		{
			return default(float);
		}

		[Token(Token = "0x6000B56")]
		[Address(RVA = "0x17B16BC", Offset = "0x17B16BC", VA = "0x17B16BC")]
		private static double4x4 GetTransformationMatrix(IReadOnlyList<decimal> imagePosition, IReadOnlyList<decimal> imageOrientation, IReadOnlyList<decimal> pixelSpacing)
		{
			return default(double4x4);
		}

		[Token(Token = "0x6000B57")]
		[IteratorStateMachine(typeof(<Yield>d__23<>))]
		public static IEnumerable<T> Yield<T>(T value)
		{
			return null;
		}
	}
	[Token(Token = "0x2000211")]
	public class DicomVrInstanceReferences : MonoBehaviour
	{
		[Token(Token = "0x4000AAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _borderMeshRenderer;

		[Token(Token = "0x4000AAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private BoxCollider _boxCollider;

		[Token(Token = "0x4000AAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private VolumeRenderedObject _volumeRenderedObject;

		[Token(Token = "0x4000AAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private ProgressIndicatorObjectDisplay _progressIndicator;

		[Token(Token = "0x4000AB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GameObject _errorIndicator;

		[Token(Token = "0x1700017F")]
		public MeshRenderer BorderMeshRenderer
		{
			[Token(Token = "0x6000B88")]
			[Address(RVA = "0x17BA264", Offset = "0x17BA264", VA = "0x17BA264")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000180")]
		public BoxCollider BoxCollider
		{
			[Token(Token = "0x6000B89")]
			[Address(RVA = "0x17BA26C", Offset = "0x17BA26C", VA = "0x17BA26C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000181")]
		public VolumeRenderedObject VolumeRenderedObject
		{
			[Token(Token = "0x6000B8A")]
			[Address(RVA = "0x17BA274", Offset = "0x17BA274", VA = "0x17BA274")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000182")]
		public ProgressIndicatorObjectDisplay ProgressIndicator
		{
			[Token(Token = "0x6000B8B")]
			[Address(RVA = "0x17BA27C", Offset = "0x17BA27C", VA = "0x17BA27C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000183")]
		public GameObject ErrorIndicator
		{
			[Token(Token = "0x6000B8C")]
			[Address(RVA = "0x17BA284", Offset = "0x17BA284", VA = "0x17BA284")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B8D")]
		[Address(RVA = "0x17BA28C", Offset = "0x17BA28C", VA = "0x17BA28C")]
		public DicomVrInstanceReferences()
		{
		}
	}
	[Token(Token = "0x2000212")]
	public enum State
	{
		[Token(Token = "0x4000AB2")]
		Loading,
		[Token(Token = "0x4000AB3")]
		Ready,
		[Token(Token = "0x4000AB4")]
		Error
	}
	[Token(Token = "0x2000213")]
	public interface IDicomVrInstance : IDicomInstance, IFocusable, ISceneObject, IGazeable, IGrabable
	{
		[Token(Token = "0x17000184")]
		int MinValue
		{
			[Token(Token = "0x6000B8E")]
			get;
		}

		[Token(Token = "0x17000185")]
		int MaxValue
		{
			[Token(Token = "0x6000B8F")]
			get;
		}

		[Token(Token = "0x17000186")]
		int DataOffset
		{
			[Token(Token = "0x6000B90")]
			get;
		}

		[Token(Token = "0x17000187")]
		string RescaleType
		{
			[Token(Token = "0x6000B91")]
			get;
		}

		[Token(Token = "0x17000188")]
		VolumeRenderedObject VolumeRenderedObject
		{
			[Token(Token = "0x6000B92")]
			get;
		}

		[Token(Token = "0x17000189")]
		State State
		{
			[Token(Token = "0x6000B93")]
			get;
		}
	}
	[Token(Token = "0x2000214")]
	public class SlicePlaneReferences : MonoBehaviour
	{
		[Token(Token = "0x4000AB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GrabableItemBehaviour _grabableItemBehaviour;

		[Token(Token = "0x4000AB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private CrossSectionPlane _crossSectionPlane;

		[Token(Token = "0x1700018A")]
		public GrabableItemBehaviour GrabableItemBehaviour
		{
			[Token(Token = "0x6000B94")]
			[Address(RVA = "0x17BA294", Offset = "0x17BA294", VA = "0x17BA294")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700018B")]
		public CrossSectionPlane CrossSectionPlane
		{
			[Token(Token = "0x6000B95")]
			[Address(RVA = "0x17BA29C", Offset = "0x17BA29C", VA = "0x17BA29C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B96")]
		[Address(RVA = "0x17BA2A4", Offset = "0x17BA2A4", VA = "0x17BA2A4")]
		public SlicePlaneReferences()
		{
		}
	}
}
namespace Dicom.Utilities
{
	[Token(Token = "0x2000215")]
	public class DebugDicomLoader : MonoBehaviour
	{
		[Token(Token = "0x2000216")]
		[CompilerGenerated]
		private sealed class <>c__DisplayClass22_0
		{
			[Token(Token = "0x4000ACF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<DicomCFindResponse> results;

			[Token(Token = "0x6000B9F")]
			[Address(RVA = "0x17BB0F8", Offset = "0x17BB0F8", VA = "0x17BB0F8")]
			public <>c__DisplayClass22_0()
			{
			}

			[Token(Token = "0x6000BA0")]
			[Address(RVA = "0x17BB100", Offset = "0x17BB100", VA = "0x17BB100")]
			internal void <Test3>b__1(DicomCFindResponse seriesResponse)
			{
			}
		}

		[Token(Token = "0x2000217")]
		[CompilerGenerated]
		private sealed class <>c__DisplayClass22_1
		{
			[Token(Token = "0x4000AD0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<DicomCFindResponse> imageResponses;

			[Token(Token = "0x6000BA1")]
			[Address(RVA = "0x17BB1B0", Offset = "0x17BB1B0", VA = "0x17BB1B0")]
			public <>c__DisplayClass22_1()
			{
			}

			[Token(Token = "0x6000BA2")]
			[Address(RVA = "0x17BB1B8", Offset = "0x17BB1B8", VA = "0x17BB1B8")]
			internal void <Test3>b__2(DicomCFindRequest request, DicomCFindResponse response)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000219")]
		[CompilerGenerated]
		private struct <Test3>d__22 : IAsyncStateMachine
		{
			[Token(Token = "0x4000AD5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000AD6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4000AD7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public DebugDicomLoader <>4__this;

			[Token(Token = "0x4000AD8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private <>c__DisplayClass22_0 <>8__1;

			[Token(Token = "0x4000AD9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private <>c__DisplayClass22_1 <>8__2;

			[Token(Token = "0x4000ADA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private CancellationToken <cancellationToken>5__2;

			[Token(Token = "0x4000ADB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private IDicomClient <client>5__3;

			[Token(Token = "0x4000ADC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x4000ADD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private string <studyInstanceUid>5__4;

			[Token(Token = "0x4000ADE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private string <seriesInstanceUid>5__5;

			[Token(Token = "0x6000BA8")]
			[Address(RVA = "0x17BB4DC", Offset = "0x17BB4DC", VA = "0x17BB4DC", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000BA9")]
			[Address(RVA = "0x17BC628", Offset = "0x17BC628", VA = "0x17BC628", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x200021A")]
		[CompilerGenerated]
		private sealed class <>c__DisplayClass23_0
		{
			[Token(Token = "0x4000ADF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<DicomCFindResponse> responses;

			[Token(Token = "0x6000BAA")]
			[Address(RVA = "0x17BC634", Offset = "0x17BC634", VA = "0x17BC634")]
			public <>c__DisplayClass23_0()
			{
			}

			[Token(Token = "0x6000BAB")]
			[Address(RVA = "0x17BC63C", Offset = "0x17BC63C", VA = "0x17BC63C")]
			internal void <LoadDicomData>b__0(DicomCFindRequest request, DicomCFindResponse response)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200021B")]
		[CompilerGenerated]
		private struct <LoadDicomData>d__23 : IAsyncStateMachine
		{
			[Token(Token = "0x4000AE0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000AE1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4000AE2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public DebugDicomLoader <>4__this;

			[Token(Token = "0x4000AE3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private <>c__DisplayClass23_0 <>8__1;

			[Token(Token = "0x4000AE4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private Stopwatch <stopwatch>5__2;

			[Token(Token = "0x4000AE5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Dicom3dData <dicom3dData>5__3;

			[Token(Token = "0x4000AE6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private CancellationToken <cancellationToken>5__4;

			[Token(Token = "0x4000AE7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private IDicomClient <client>5__5;

			[Token(Token = "0x4000AE8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x4000AE9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private TaskAwaiter<byte> <>u__2;

			[Token(Token = "0x4000AEA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			private TaskAwaiter<IDicomVrInstance> <>u__3;

			[Token(Token = "0x6000BAC")]
			[Address(RVA = "0x17BC72C", Offset = "0x17BC72C", VA = "0x17BC72C", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000BAD")]
			[Address(RVA = "0x17BDEF4", Offset = "0x17BDEF4", VA = "0x17BDEF4", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200021C")]
		[CompilerGenerated]
		private struct <FocusFirstItem>d__24 : IAsyncStateMachine
		{
			[Token(Token = "0x4000AEB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000AEC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4000AED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public DebugDicomLoader <>4__this;

			[Token(Token = "0x4000AEE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x6000BAE")]
			[Address(RVA = "0x17BDF00", Offset = "0x17BDF00", VA = "0x17BDF00", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000BAF")]
			[Address(RVA = "0x17BE3C4", Offset = "0x17BE3C4", VA = "0x17BE3C4", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4000AB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string _path;

		[Token(Token = "0x4000AB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private NetworkModuleProviderFactory _networkModuleProviderFactory;

		[Token(Token = "0x4000AB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool _loadOnStart;

		[Token(Token = "0x4000ABA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private TextAsset _dicomDictionary;

		[Token(Token = "0x4000ABB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private DicomPanelReferences _dicomPanelReferences;

		[Token(Token = "0x4000ABC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private DicomLoadPanelReferences _dicomLoadPanelReferences;

		[Token(Token = "0x4000ABD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private DicomVrInstanceFactorySettings _dicomVrInstanceFactorySettings;

		[Token(Token = "0x4000ABE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private readonly CancellationTokenSource _disposeCancellationTokenSource;

		[Token(Token = "0x4000ABF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private readonly CompositeDisposable _compositeDisposable;

		[Token(Token = "0x4000AC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private string _patientName;

		[Token(Token = "0x4000AC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private string _patientId;

		[Token(Token = "0x4000AC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private string _accession;

		[Token(Token = "0x4000AC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private string _studyId;

		[Token(Token = "0x4000AC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private string _modalitiesInStudy;

		[Token(Token = "0x4000AC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private string _studyInstanceUid;

		[Token(Token = "0x4000AC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private string _seriesInstanceUid;

		[Token(Token = "0x4000AC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private string _sopInstanceUid;

		[Token(Token = "0x4000AC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private byte _scaleFactor;

		[Token(Token = "0x4000AC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[SerializeField]
		private int _cropMinValue;

		[Token(Token = "0x4000ACA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private int _cropMaxValue;

		[Token(Token = "0x4000ACB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		[SerializeField]
		private byte _preset;

		[Token(Token = "0x4000ACC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAD")]
		[SerializeField]
		private bool _normalizePresetValues;

		[Token(Token = "0x4000ACD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAE")]
		private byte _lastPreset;

		[Token(Token = "0x4000ACE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAF")]
		private bool _lastNormalize;

		[Token(Token = "0x6000B97")]
		[Address(RVA = "0x17BA2AC", Offset = "0x17BA2AC", VA = "0x17BA2AC")]
		private void Start()
		{
		}

		[Token(Token = "0x6000B98")]
		[Address(RVA = "0x17BA6C8", Offset = "0x17BA6C8", VA = "0x17BA6C8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000B99")]
		[Address(RVA = "0x17BA6F8", Offset = "0x17BA6F8", VA = "0x17BA6F8")]
		[AsyncStateMachine(typeof(<Test3>d__22))]
		[ContextMenu("Test3")]
		private void Test3()
		{
		}

		[Token(Token = "0x6000B9A")]
		[Address(RVA = "0x17BA60C", Offset = "0x17BA60C", VA = "0x17BA60C")]
		[AsyncStateMachine(typeof(<LoadDicomData>d__23))]
		[ContextMenu("LoadDicomData")]
		private void LoadDicomData()
		{
		}

		[Token(Token = "0x6000B9B")]
		[Address(RVA = "0x17BA7B4", Offset = "0x17BA7B4", VA = "0x17BA7B4")]
		[ContextMenu("FocusFirstItem")]
		[AsyncStateMachine(typeof(<FocusFirstItem>d__24))]
		private void FocusFirstItem()
		{
		}

		[Token(Token = "0x6000B9C")]
		[Address(RVA = "0x17BA86C", Offset = "0x17BA86C", VA = "0x17BA86C")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6000B9D")]
		[Address(RVA = "0x17BABAC", Offset = "0x17BABAC", VA = "0x17BABAC")]
		private static void SetPreset(INetworkModuleProviderFactory moduleProviderFactory, IDicomVrInstance focusedInstance, byte value, bool normalizePresetValues)
		{
		}

		[Token(Token = "0x6000B9E")]
		[Address(RVA = "0x17BB048", Offset = "0x17BB048", VA = "0x17BB048")]
		public DebugDicomLoader()
		{
		}
	}
	[Token(Token = "0x200021D")]
	public class DicomClientFactory
	{
		[Token(Token = "0x4000AEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Lazy<IDicomClientFactory> Lazy;

		[Token(Token = "0x1700018C")]
		public static IDicomClientFactory Instance
		{
			[Token(Token = "0x6000BB1")]
			[Address(RVA = "0x17BC5B0", Offset = "0x17BC5B0", VA = "0x17BC5B0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000BB0")]
		[Address(RVA = "0x17BE3D0", Offset = "0x17BE3D0", VA = "0x17BE3D0")]
		private DicomClientFactory()
		{
		}
	}
	[Token(Token = "0x200021F")]
	public class FoDicomClientFactory : IDicomClientFactory
	{
		[Token(Token = "0x6000BB6")]
		[Address(RVA = "0x17BE7F8", Offset = "0x17BE7F8", VA = "0x17BE7F8", Slot = "4")]
		public IDicomClient Create(string host, int port, bool useTls, string callingAe, string calledAe)
		{
			return null;
		}

		[Token(Token = "0x6000BB7")]
		[Address(RVA = "0x17BE818", Offset = "0x17BE818", VA = "0x17BE818")]
		public FoDicomClientFactory()
		{
		}
	}
	[Token(Token = "0x2000220")]
	public class FoDicomFile : Dicom.Scene.IDicomFile
	{
		[Token(Token = "0x4000AF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly DicomFile DicomFile;

		[Token(Token = "0x4000AF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private DicomPixelData _header;

		[Token(Token = "0x4000AF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private IPixelData[] _pixelData;

		[Token(Token = "0x1700018D")]
		public DicomPixelData Header
		{
			[Token(Token = "0x6000BB8")]
			[Address(RVA = "0x17BE820", Offset = "0x17BE820", VA = "0x17BE820")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700018E")]
		public IDicomDataset Dataset
		{
			[Token(Token = "0x6000BB9")]
			[Address(RVA = "0x17BE874", Offset = "0x17BE874", VA = "0x17BE874", Slot = "4")]
			[CompilerGenerated]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000BBA")]
		[Address(RVA = "0x17BE87C", Offset = "0x17BE87C", VA = "0x17BE87C")]
		public FoDicomFile(DicomFile dicomFile)
		{
		}

		[Token(Token = "0x6000BBB")]
		[Address(RVA = "0x17BE94C", Offset = "0x17BE94C", VA = "0x17BE94C", Slot = "5")]
		public Array GetPixelData(int frame)
		{
			return null;
		}
	}
	[Token(Token = "0x2000221")]
	public class FoDicomDataset : IDicomDataset
	{
		[Token(Token = "0x4000AF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly DicomDataset DicomDataset;

		[Token(Token = "0x6000BBC")]
		[Address(RVA = "0x17BE91C", Offset = "0x17BE91C", VA = "0x17BE91C")]
		public FoDicomDataset(DicomDataset dicomDataset)
		{
		}

		[Token(Token = "0x6000BBD")]
		[Address(RVA = "0x17BEB54", Offset = "0x17BEB54", VA = "0x17BEB54", Slot = "4")]
		public bool TryGetString(uint dicomTag, out string value)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BBE")]
		public bool TryGetValues<T>(uint tag, out T[] values)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BBF")]
		public bool TryGetSingleValue<T>(uint tag, out T value)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BC0")]
		[Address(RVA = "0x17BEBDC", Offset = "0x17BEBDC", VA = "0x17BEBDC", Slot = "7")]
		public bool TryGetSequenceItems(uint tag, out IList<IDicomDataset> values)
		{
			return default(bool);
		}
	}
	[Serializable]
	[Token(Token = "0x2000223")]
	public class PacsServerConfig
	{
		[Token(Token = "0x2000224")]
		private sealed class PacsServerConfigEqualityComparer : IEqualityComparer<PacsServerConfig>
		{
			[Token(Token = "0x6000BC8")]
			[Address(RVA = "0x17BF098", Offset = "0x17BF098", VA = "0x17BF098", Slot = "4")]
			public bool Equals(PacsServerConfig x, PacsServerConfig y)
			{
				return default(bool);
			}

			[Token(Token = "0x6000BC9")]
			[Address(RVA = "0x17BF1B0", Offset = "0x17BF1B0", VA = "0x17BF1B0", Slot = "5")]
			public int GetHashCode(PacsServerConfig obj)
			{
				return default(int);
			}

			[Token(Token = "0x6000BCA")]
			[Address(RVA = "0x17BF090", Offset = "0x17BF090", VA = "0x17BF090")]
			public PacsServerConfigEqualityComparer()
			{
			}
		}

		[Token(Token = "0x4000AF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string Host;

		[Token(Token = "0x4000AF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int Port;

		[Token(Token = "0x4000AFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool UseTls;

		[Token(Token = "0x4000AFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string CallingAe;

		[Token(Token = "0x4000AFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string CalledAe;

		[Token(Token = "0x4000AFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly PacsServerConfig Debug;

		[Token(Token = "0x1700018F")]
		public static IEqualityComparer<PacsServerConfig> Comparer
		{
			[Token(Token = "0x6000BC6")]
			[Address(RVA = "0x17BEF00", Offset = "0x17BEF00", VA = "0x17BEF00")]
			[CompilerGenerated]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000BC4")]
		[Address(RVA = "0x17BEE80", Offset = "0x17BEE80", VA = "0x17BEE80")]
		public PacsServerConfig()
		{
		}

		[Token(Token = "0x6000BC5")]
		[Address(RVA = "0x17BEE88", Offset = "0x17BEE88", VA = "0x17BEE88")]
		public PacsServerConfig(string host, int port, bool useTls, string callingAe, string calledAe)
		{
		}
	}
}
namespace Dicom.Networking
{
	[Token(Token = "0x2000225")]
	public class NetworkDicomModuleProvider : NetworkBehaviour
	{
		[StructLayout(3)]
		[Token(Token = "0x2000226")]
		[CompilerGenerated]
		private struct <LoadClient>d__8 : IAsyncStateMachine
		{
			[Token(Token = "0x4000B06")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000B07")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4000B08")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public NetworkDicomModuleProvider <>4__this;

			[Token(Token = "0x4000B09")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public CancellationToken cancellationToken;

			[Token(Token = "0x4000B0A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x4000B0B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private TaskAwaiter<object> <>u__2;

			[Token(Token = "0x6000BDB")]
			[Address(RVA = "0x17C0860", Offset = "0x17C0860", VA = "0x17C0860", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000BDC")]
			[Address(RVA = "0x17C0F98", Offset = "0x17C0F98", VA = "0x17C0F98", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4000AFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private ModuleProviderBehaviour _singlePlayerModuleProvider;

		[Token(Token = "0x4000B00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private ModuleProviderBehaviour _networkModuleProvider;

		[Token(Token = "0x4000B01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private NetworkDicomSceneDispatcher _networkDicomSceneDispatcher;

		[Token(Token = "0x4000B02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private NetworkRequestHandler _networkRequestHandler;

		[Token(Token = "0x4000B03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private bool _networkModuleProviderInitialized;

		[Token(Token = "0x4000B04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private readonly CancellationTokenSource _disposeCancellationTokenSource;

		[Token(Token = "0x4000B05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private readonly List<IDisposable> _disposables;

		[Token(Token = "0x17000190")]
		private IModuleProvider NetworkModuleProvider
		{
			[Token(Token = "0x6000BCD")]
			[Address(RVA = "0x17BF360", Offset = "0x17BF360", VA = "0x17BF360")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000BCB")]
		[Address(RVA = "0x17BF25C", Offset = "0x17BF25C", VA = "0x17BF25C", Slot = "10")]
		public override void OnStartClient()
		{
		}

		[Token(Token = "0x6000BCC")]
		[Address(RVA = "0x17BF288", Offset = "0x17BF288", VA = "0x17BF288")]
		[AsyncStateMachine(typeof(<LoadClient>d__8))]
		private void LoadClient(CancellationToken cancellationToken)
		{
		}

		[Token(Token = "0x6000BCE")]
		[Address(RVA = "0x17BF3A0", Offset = "0x17BF3A0", VA = "0x17BF3A0")]
		private void RegisterModules()
		{
		}

		[Token(Token = "0x6000BCF")]
		[Address(RVA = "0x17BF800", Offset = "0x17BF800", VA = "0x17BF800")]
		[Command(requiresAuthority = false)]
		private void CmdGetModel(byte requestId, [Optional] NetworkConnectionToClient sender)
		{
		}

		[Token(Token = "0x6000BD0")]
		[Address(RVA = "0x17BF9F4", Offset = "0x17BF9F4", VA = "0x17BF9F4")]
		[TargetRpc]
		private void TargetGetModel(NetworkConnection target, byte requestId, int connectionId, SerializableDicomModel model)
		{
		}

		[Token(Token = "0x6000BD1")]
		[Address(RVA = "0x17BFC40", Offset = "0x17BFC40", VA = "0x17BFC40")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000BD2")]
		[Address(RVA = "0x17BFD70", Offset = "0x17BFD70", VA = "0x17BFD70")]
		public NetworkDicomModuleProvider()
		{
		}

		[Token(Token = "0x6000BD5")]
		[Address(RVA = "0x17BFE54", Offset = "0x17BFE54", VA = "0x17BFE54")]
		private void MirrorProcessed()
		{
		}

		[Token(Token = "0x6000BD6")]
		[Address(RVA = "0x17BFE58", Offset = "0x17BFE58", VA = "0x17BFE58")]
		protected void UserCode_CmdGetModel__Byte__NetworkConnectionToClient(byte requestId, NetworkConnectionToClient sender)
		{
		}

		[Token(Token = "0x6000BD7")]
		[Address(RVA = "0x17C02D4", Offset = "0x17C02D4", VA = "0x17C02D4")]
		protected static void InvokeUserCode_CmdGetModel__Byte__NetworkConnectionToClient(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x6000BD8")]
		[Address(RVA = "0x17C0454", Offset = "0x17C0454", VA = "0x17C0454")]
		protected void UserCode_TargetGetModel__NetworkConnection__Byte__Int32__SerializableDicomModel(NetworkConnection target, byte requestId, int connectionId, SerializableDicomModel model)
		{
		}

		[Token(Token = "0x6000BD9")]
		[Address(RVA = "0x17C04F4", Offset = "0x17C04F4", VA = "0x17C04F4")]
		protected static void InvokeUserCode_TargetGetModel__NetworkConnection__Byte__Int32__SerializableDicomModel(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x6000BDA")]
		[Address(RVA = "0x17C06D0", Offset = "0x17C06D0", VA = "0x17C06D0")]
		static NetworkDicomModuleProvider()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000228")]
	public readonly struct SerializableDicomModel : IDicomModel<byte>
	{
		[Token(Token = "0x4000B0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public readonly byte FocusedObject;

		[Token(Token = "0x4000B0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly KeyValuePair<byte, Vector2>[] WindowingData;

		[Token(Token = "0x4000B10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly KeyValuePair<byte, IScenePlacementData>[] ScenePlacementData;

		[Token(Token = "0x4000B11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly KeyValuePair<byte, ITransferFunctionData>[] TransferFunctionData;

		[Token(Token = "0x4000B12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly KeyValuePair<byte, bool>[] SliceEnabledData;

		[Token(Token = "0x4000B13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly KeyValuePair<byte, IScenePlacementData>[] SlicePlaneScenePlacementData;

		[Token(Token = "0x17000191")]
		private byte Dicom.Modules.IDicomModel<System.Byte>.FocusedObject
		{
			[Token(Token = "0x6000BE0")]
			[Address(RVA = "0x17C10C0", Offset = "0x17C10C0", VA = "0x17C10C0", Slot = "4")]
			get
			{
				return default(byte);
			}
		}

		[Token(Token = "0x17000192")]
		private IEnumerable<KeyValuePair<byte, Vector2>> Dicom.Modules.IDicomModel<System.Byte>.WindowingData
		{
			[Token(Token = "0x6000BE1")]
			[Address(RVA = "0x17C10C8", Offset = "0x17C10C8", VA = "0x17C10C8", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000193")]
		private IEnumerable<KeyValuePair<byte, IScenePlacementData>> Dicom.Modules.IDicomModel<System.Byte>.ScenePlacementData
		{
			[Token(Token = "0x6000BE2")]
			[Address(RVA = "0x17C10D0", Offset = "0x17C10D0", VA = "0x17C10D0", Slot = "6")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000194")]
		private IEnumerable<KeyValuePair<byte, ITransferFunctionData>> Dicom.Modules.IDicomModel<System.Byte>.TransferFunctionData
		{
			[Token(Token = "0x6000BE3")]
			[Address(RVA = "0x17C10D8", Offset = "0x17C10D8", VA = "0x17C10D8", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000195")]
		private IEnumerable<KeyValuePair<byte, bool>> Dicom.Modules.IDicomModel<System.Byte>.SliceEnabledData
		{
			[Token(Token = "0x6000BE4")]
			[Address(RVA = "0x17C10E0", Offset = "0x17C10E0", VA = "0x17C10E0", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000196")]
		private IEnumerable<KeyValuePair<byte, IScenePlacementData>> Dicom.Modules.IDicomModel<System.Byte>.SlicePlaneScenePlacementData
		{
			[Token(Token = "0x6000BE5")]
			[Address(RVA = "0x17C10E8", Offset = "0x17C10E8", VA = "0x17C10E8", Slot = "9")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000BE6")]
		[Address(RVA = "0x17BFF8C", Offset = "0x17BFF8C", VA = "0x17BFF8C")]
		public SerializableDicomModel(IDicomModel<byte> dicomModel)
		{
		}
	}
	[Token(Token = "0x2000229")]
	public static class SerializableDicomModelMirrorSerializer
	{
		[Token(Token = "0x6000BE7")]
		[Address(RVA = "0x17C10F0", Offset = "0x17C10F0", VA = "0x17C10F0")]
		public static void WriteScenePlacementData(this NetworkWriter writer, IScenePlacementData scenePlacementData)
		{
		}

		[Token(Token = "0x6000BE8")]
		[Address(RVA = "0x17C12C0", Offset = "0x17C12C0", VA = "0x17C12C0")]
		public static IScenePlacementData ReadScenePlacementData(this NetworkReader reader)
		{
			return null;
		}

		[Token(Token = "0x6000BE9")]
		[Address(RVA = "0x17C13AC", Offset = "0x17C13AC", VA = "0x17C13AC")]
		public static void WriteWindowingDataKeyValuePair(this NetworkWriter writer, KeyValuePair<byte, Vector2> keyValuePair)
		{
		}

		[Token(Token = "0x6000BEA")]
		[Address(RVA = "0x17C1460", Offset = "0x17C1460", VA = "0x17C1460")]
		public static KeyValuePair<byte, Vector2> ReadWindowingDataKeyValuePair(this NetworkReader reader)
		{
			return default(KeyValuePair<byte, Vector2>);
		}

		[Token(Token = "0x6000BEB")]
		[Address(RVA = "0x17C1514", Offset = "0x17C1514", VA = "0x17C1514")]
		public static void WriteWindowingDataArray(this NetworkWriter writer, KeyValuePair<byte, Vector2>[] keyValuePairs)
		{
		}

		[Token(Token = "0x6000BEC")]
		[Address(RVA = "0x17C1590", Offset = "0x17C1590", VA = "0x17C1590")]
		public static KeyValuePair<byte, Vector2>[] ReadWindowingDataArray(this NetworkReader reader)
		{
			return null;
		}

		[Token(Token = "0x6000BED")]
		[Address(RVA = "0x17C15FC", Offset = "0x17C15FC", VA = "0x17C15FC")]
		public static void WriteGradientKey(this NetworkWriter writer, GradientKey<float> value)
		{
		}

		[Token(Token = "0x6000BEE")]
		[Address(RVA = "0x17C1684", Offset = "0x17C1684", VA = "0x17C1684")]
		public static GradientKey<float> ReadGradientKey(this NetworkReader reader)
		{
			return default(GradientKey<float>);
		}

		[Token(Token = "0x6000BEF")]
		[Address(RVA = "0x17C1710", Offset = "0x17C1710", VA = "0x17C1710")]
		public static void WriteGradientKeyWithId(this NetworkWriter writer, KeyValuePair<byte, GradientKey<float>> value)
		{
		}

		[Token(Token = "0x6000BF0")]
		[Address(RVA = "0x17C1794", Offset = "0x17C1794", VA = "0x17C1794")]
		public static KeyValuePair<byte, GradientKey<float>> ReadGradientKeyWithId(this NetworkReader reader)
		{
			return default(KeyValuePair<byte, GradientKey<float>>);
		}

		[Token(Token = "0x6000BF1")]
		[Address(RVA = "0x17C1838", Offset = "0x17C1838", VA = "0x17C1838")]
		public static void WriteTransferFunctionArray(this NetworkWriter writer, KeyValuePair<byte, GradientKey<float>>[] value)
		{
		}

		[Token(Token = "0x6000BF2")]
		[Address(RVA = "0x17C18B4", Offset = "0x17C18B4", VA = "0x17C18B4")]
		public static KeyValuePair<byte, GradientKey<float>>[] ReadTransferFunctionArray(this NetworkReader reader)
		{
			return null;
		}

		[Token(Token = "0x6000BF3")]
		[Address(RVA = "0x17C1920", Offset = "0x17C1920", VA = "0x17C1920")]
		public static void WriteColoringDataKeyValuePair(this NetworkWriter writer, KeyValuePair<byte, ITransferFunctionData> keyValuePair)
		{
		}

		[Token(Token = "0x6000BF4")]
		[Address(RVA = "0x17C1AD8", Offset = "0x17C1AD8", VA = "0x17C1AD8")]
		public static KeyValuePair<byte, ITransferFunctionData> ReadColoringDataKeyValuePair(this NetworkReader reader)
		{
			return default(KeyValuePair<byte, ITransferFunctionData>);
		}

		[Token(Token = "0x6000BF5")]
		[Address(RVA = "0x17C1BF4", Offset = "0x17C1BF4", VA = "0x17C1BF4")]
		public static void WriteColoringDataKeyValuePairArray(this NetworkWriter writer, KeyValuePair<byte, ITransferFunctionData>[] value)
		{
		}

		[Token(Token = "0x6000BF6")]
		[Address(RVA = "0x17C1C70", Offset = "0x17C1C70", VA = "0x17C1C70")]
		public static KeyValuePair<byte, ITransferFunctionData>[] ReadColoringDataKeyValuePairArray(this NetworkReader reader)
		{
			return null;
		}

		[Token(Token = "0x6000BF7")]
		[Address(RVA = "0x17C1CDC", Offset = "0x17C1CDC", VA = "0x17C1CDC")]
		public static void WriteScenePlacementDataKeyValuePair(this NetworkWriter writer, KeyValuePair<byte, IScenePlacementData> keyValuePair)
		{
		}

		[Token(Token = "0x6000BF8")]
		[Address(RVA = "0x17C1D50", Offset = "0x17C1D50", VA = "0x17C1D50")]
		public static KeyValuePair<byte, IScenePlacementData> ReadScenePlacementDataKeyValuePair(this NetworkReader reader)
		{
			return default(KeyValuePair<byte, IScenePlacementData>);
		}

		[Token(Token = "0x6000BF9")]
		[Address(RVA = "0x17C1DD4", Offset = "0x17C1DD4", VA = "0x17C1DD4")]
		public static void WriteScenePlacementDataArray(this NetworkWriter writer, KeyValuePair<byte, IScenePlacementData>[] keyValuePairs)
		{
		}

		[Token(Token = "0x6000BFA")]
		[Address(RVA = "0x17C1E50", Offset = "0x17C1E50", VA = "0x17C1E50")]
		public static KeyValuePair<byte, IScenePlacementData>[] ReadScenePlacementDataArray(this NetworkReader reader)
		{
			return null;
		}

		[Token(Token = "0x6000BFB")]
		[Address(RVA = "0x17C1EBC", Offset = "0x17C1EBC", VA = "0x17C1EBC")]
		public static void WriteBoolKeyValuePair(this NetworkWriter writer, KeyValuePair<byte, bool> keyValuePair)
		{
		}

		[Token(Token = "0x6000BFC")]
		[Address(RVA = "0x17C1F54", Offset = "0x17C1F54", VA = "0x17C1F54")]
		public static KeyValuePair<byte, bool> ReadBoolKeyValuePair(this NetworkReader reader)
		{
			return default(KeyValuePair<byte, bool>);
		}

		[Token(Token = "0x6000BFD")]
		[Address(RVA = "0x17C2004", Offset = "0x17C2004", VA = "0x17C2004")]
		public static void WriteBoolKeyValuePairArray(this NetworkWriter writer, KeyValuePair<byte, bool>[] keyValuePairs)
		{
		}

		[Token(Token = "0x6000BFE")]
		[Address(RVA = "0x17C2080", Offset = "0x17C2080", VA = "0x17C2080")]
		public static KeyValuePair<byte, bool>[] ReadBoolKeyValuePairArray(this NetworkReader reader)
		{
			return null;
		}
	}
}
namespace Dicom.Modules
{
	[Token(Token = "0x200022A")]
	public class ColoringModule : IColoringModule<IDicomVrInstance>
	{
		[Token(Token = "0x200022B")]
		public class GradientData
		{
			[Token(Token = "0x4000B16")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool RelativeEnabled;

			[Token(Token = "0x4000B17")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Dictionary<byte, GradientKey<float>> Keys;

			[Token(Token = "0x6000C0A")]
			[Address(RVA = "0x17C26D0", Offset = "0x17C26D0", VA = "0x17C26D0")]
			public GradientData()
			{
			}
		}

		[Token(Token = "0x4000B14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly GradientData DefaultData;

		[Token(Token = "0x4000B15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly Dictionary<byte, GradientData> _gradientData;

		[Token(Token = "0x6000BFF")]
		[Address(RVA = "0x17C20EC", Offset = "0x17C20EC", VA = "0x17C20EC", Slot = "4")]
		public IReadOnlyCollection<KeyValuePair<byte, GradientKey<float>>> GetTransferFunction(IDicomVrInstance obj)
		{
			return null;
		}

		[Token(Token = "0x6000C00")]
		[Address(RVA = "0x17C228C", Offset = "0x17C228C", VA = "0x17C228C", Slot = "6")]
		public Task<byte> AddKey(IDicomVrInstance obj, GradientKey<float> value, CancellationToken cancellationToken)
		{
			return null;
		}

		[Token(Token = "0x6000C01")]
		[Address(RVA = "0x17C26D8", Offset = "0x17C26D8", VA = "0x17C26D8", Slot = "7")]
		public bool TryGetKey(IDicomVrInstance obj, byte keyId, out GradientKey<float> key)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C02")]
		[Address(RVA = "0x17C29C4", Offset = "0x17C29C4", VA = "0x17C29C4", Slot = "5")]
		public void SetTransferFunction(IDicomVrInstance obj, IEnumerable<KeyValuePair<byte, GradientKey<float>>> keys)
		{
		}

		[Token(Token = "0x6000C03")]
		[Address(RVA = "0x17C2D9C", Offset = "0x17C2D9C", VA = "0x17C2D9C", Slot = "8")]
		public void SetKey(IDicomVrInstance obj, byte keyId, GradientKey<float> value)
		{
		}

		[Token(Token = "0x6000C04")]
		[Address(RVA = "0x17C3160", Offset = "0x17C3160", VA = "0x17C3160", Slot = "9")]
		public void RemoveKey(IDicomVrInstance obj, byte keyId)
		{
		}

		[Token(Token = "0x6000C05")]
		[Address(RVA = "0x17C3528", Offset = "0x17C3528", VA = "0x17C3528", Slot = "10")]
		public bool GetRelativeEnabled(IDicomVrInstance obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C06")]
		[Address(RVA = "0x17C36C8", Offset = "0x17C36C8", VA = "0x17C36C8", Slot = "11")]
		public void SetRelativeEnabled(IDicomVrInstance obj, bool value)
		{
		}

		[Token(Token = "0x6000C07")]
		public static byte GetNextKeyId<T>(IDictionary<byte, T> keys)
		{
			return default(byte);
		}

		[Token(Token = "0x6000C08")]
		[Address(RVA = "0x17C3A08", Offset = "0x17C3A08", VA = "0x17C3A08")]
		public ColoringModule()
		{
		}
	}
	[Token(Token = "0x200022C")]
	public class DicomFileFactory : IDicomFileFactory
	{
		[Token(Token = "0x200022D")]
		[CompilerGenerated]
		private sealed class <>c__DisplayClass4_0
		{
			[Token(Token = "0x4000B1B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public IProgress<int> progress;

			[Token(Token = "0x4000B1C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int fileCount;

			[Token(Token = "0x4000B1D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public IDicom3dData dicom3dData;

			[Token(Token = "0x4000B1E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public DicomFileFactory <>4__this;

			[Token(Token = "0x4000B1F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Func<string, Eneter.Dicom.Reader.Model.IDicomFile> <>9__4;

			[Token(Token = "0x4000B20")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Func<Eneter.Dicom.Reader.Model.IDicomFile, bool> <>9__5;

			[Token(Token = "0x4000B21")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public Func<DicomFile, bool> <>9__9;

			[Token(Token = "0x4000B22")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public Func<DicomFile, Dicom.Scene.IDicomFile> <>9__10;

			[Token(Token = "0x6000C0D")]
			[Address(RVA = "0x17C3D2C", Offset = "0x17C3D2C", VA = "0x17C3D2C")]
			public <>c__DisplayClass4_0()
			{
			}

			[Token(Token = "0x6000C0E")]
			[Address(RVA = "0x17C3D34", Offset = "0x17C3D34", VA = "0x17C3D34")]
			internal void <Create>b__0(DicomCStoreRequest _)
			{
			}

			[Token(Token = "0x6000C0F")]
			[Address(RVA = "0x17C3DEC", Offset = "0x17C3DEC", VA = "0x17C3DEC")]
			internal Eneter.Dicom.Reader.Model.IDicomFile <Create>b__4(string fullFileName)
			{
				return null;
			}

			[Token(Token = "0x6000C10")]
			[Address(RVA = "0x17C3EA4", Offset = "0x17C3EA4", VA = "0x17C3EA4")]
			internal bool <Create>b__5(Eneter.Dicom.Reader.Model.IDicomFile dicomFile)
			{
				return default(bool);
			}

			[Token(Token = "0x6000C11")]
			[Address(RVA = "0x17C4194", Offset = "0x17C4194", VA = "0x17C4194")]
			internal List<Dicom.Scene.IDicomFile> <Create>b__7()
			{
				return null;
			}

			[Token(Token = "0x6000C12")]
			[Address(RVA = "0x17C44C4", Offset = "0x17C44C4", VA = "0x17C44C4")]
			internal bool <Create>b__9(DicomFile dicomFile)
			{
				return default(bool);
			}

			[Token(Token = "0x6000C13")]
			[Address(RVA = "0x17C4738", Offset = "0x17C4738", VA = "0x17C4738")]
			internal Dicom.Scene.IDicomFile <Create>b__10(DicomFile dicomFile)
			{
				return null;
			}
		}

		[Token(Token = "0x200022E")]
		[CompilerGenerated]
		private sealed class <>c__DisplayClass4_1
		{
			[Token(Token = "0x4000B23")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool multiframe;

			[Token(Token = "0x4000B24")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public <>c__DisplayClass4_0 CS$<>8__locals1;

			[Token(Token = "0x4000B25")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Func<string, bool> <>9__3;

			[Token(Token = "0x4000B26")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Func<Eneter.Dicom.Reader.Model.IDicomFile, Dicom.Scene.IDicomFile> <>9__6;

			[Token(Token = "0x6000C14")]
			[Address(RVA = "0x17C4828", Offset = "0x17C4828", VA = "0x17C4828")]
			public <>c__DisplayClass4_1()
			{
			}

			[Token(Token = "0x6000C15")]
			[Address(RVA = "0x17C4830", Offset = "0x17C4830", VA = "0x17C4830")]
			internal List<Dicom.Scene.IDicomFile> <Create>b__2()
			{
				return null;
			}

			[Token(Token = "0x6000C16")]
			[Address(RVA = "0x17C4B44", Offset = "0x17C4B44", VA = "0x17C4B44")]
			internal bool <Create>b__3(string _)
			{
				return default(bool);
			}

			[Token(Token = "0x6000C17")]
			[Address(RVA = "0x17C4B54", Offset = "0x17C4B54", VA = "0x17C4B54")]
			internal Dicom.Scene.IDicomFile <Create>b__6(Eneter.Dicom.Reader.Model.IDicomFile dicomFile)
			{
				return null;
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000230")]
		[CompilerGenerated]
		private struct <Create>d__4 : IAsyncStateMachine
		{
			[Token(Token = "0x4000B2A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000B2B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder<IReadOnlyList<Dicom.Scene.IDicomFile>> <>t__builder;

			[Token(Token = "0x4000B2C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public IProgress<int> progress;

			[Token(Token = "0x4000B2D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public IDicom3dData dicom3dData;

			[Token(Token = "0x4000B2E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public DicomFileFactory <>4__this;

			[Token(Token = "0x4000B2F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public CancellationToken cancellationToken;

			[Token(Token = "0x4000B30")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private <>c__DisplayClass4_1 <>8__1;

			[Token(Token = "0x4000B31")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private List<DicomCStoreRequest> <cGetResponses>5__2;

			[Token(Token = "0x4000B32")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x4000B33")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private TaskAwaiter<List<Dicom.Scene.IDicomFile>> <>u__2;

			[Token(Token = "0x6000C1C")]
			[Address(RVA = "0x17C4DCC", Offset = "0x17C4DCC", VA = "0x17C4DCC", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000C1D")]
			[Address(RVA = "0x17C5A68", Offset = "0x17C5A68", VA = "0x17C5A68", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4000B18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly IDicomReader _dicomReader;

		[Token(Token = "0x4000B19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly IDicomClientFactory _dicomClientFactory;

		[Token(Token = "0x4000B1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly Func<PacsServerConfig> _getPacsServerConfig;

		[Token(Token = "0x6000C0B")]
		[Address(RVA = "0x17BDE94", Offset = "0x17BDE94", VA = "0x17BDE94")]
		public DicomFileFactory(IDicomReader dicomReader, IDicomClientFactory dicomClientFactory, Func<PacsServerConfig> getPacsServerConfig)
		{
		}

		[Token(Token = "0x6000C0C")]
		[Address(RVA = "0x17C3BD0", Offset = "0x17C3BD0", VA = "0x17C3BD0", Slot = "4")]
		[AsyncStateMachine(typeof(<Create>d__4))]
		public Task<IReadOnlyList<Dicom.Scene.IDicomFile>> Create(IDicom3dData dicom3dData, IProgress<int> progress, CancellationToken cancellationToken)
		{
			return null;
		}
	}
	[Token(Token = "0x2000231")]
	public class DicomModuleProvider : MonoBehaviour
	{
		[Token(Token = "0x4000B34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private DicomVrInstanceFactorySettings _dicomVrInstanceFactorySettings;

		[Token(Token = "0x4000B35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private SlicePlaneFactorySettings _slicePlaneFactorySettings;

		[Token(Token = "0x4000B36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ModuleProviderBehaviour _singlePlayerModuleProvider;

		[Token(Token = "0x4000B37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private QualityModeSettingScriptableObject _qualityModeSettingScriptableObject;

		[Token(Token = "0x4000B38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private TextAsset _dicomDictionary;

		[Token(Token = "0x4000B39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private readonly List<IDisposable> _disposables;

		[Token(Token = "0x6000C1E")]
		[Address(RVA = "0x17C5AC0", Offset = "0x17C5AC0", VA = "0x17C5AC0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000C1F")]
		[Address(RVA = "0x17C5ADC", Offset = "0x17C5ADC", VA = "0x17C5ADC")]
		private void RegisterModules(ModuleProvider moduleProvider)
		{
		}

		[Token(Token = "0x6000C20")]
		[Address(RVA = "0x17C6500", Offset = "0x17C6500", VA = "0x17C6500")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000C21")]
		[Address(RVA = "0x17C66B0", Offset = "0x17C66B0", VA = "0x17C66B0")]
		public DicomModuleProvider()
		{
		}
	}
	[Token(Token = "0x2000233")]
	public class DicomSceneInstanceResolver<T> : IResolver<T, byte> where T : IDicomInstance
	{
		[Token(Token = "0x4000B3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IDicomSceneManager<T> _dicomSceneManager;

		[Token(Token = "0x6000C25")]
		public DicomSceneInstanceResolver(IDicomSceneManager<T> dicomSceneManager)
		{
		}

		[Token(Token = "0x6000C26")]
		public byte GetId(T obj)
		{
			return default(byte);
		}

		[Token(Token = "0x6000C27")]
		public T ResolveFromId(byte obj)
		{
			return (T)null;
		}
	}
	[Token(Token = "0x2000234")]
	public interface ISlicePlaneFactory
	{
		[Token(Token = "0x6000C28")]
		SlicePlaneReferences Create();

		[Token(Token = "0x6000C29")]
		void Destroy(SlicePlaneReferences value);
	}
	[Token(Token = "0x2000235")]
	[CreateAssetMenu]
	public class QualityModeSettingScriptableObject : ScriptableObject
	{
		[Token(Token = "0x4000B3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public QualityModuleSettings QualitySettings;

		[Token(Token = "0x6000C2A")]
		[Address(RVA = "0x17C6810", Offset = "0x17C6810", VA = "0x17C6810")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6000C2B")]
		[Address(RVA = "0x17C69C8", Offset = "0x17C69C8", VA = "0x17C69C8")]
		public QualityModeSettingScriptableObject()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000237")]
	public class QualityModuleSettings
	{
		[Serializable]
		[Token(Token = "0x2000238")]
		public class QualitySetting
		{
			[Token(Token = "0x4000B43")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[HideInInspector]
			public string name;

			[Token(Token = "0x4000B44")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public QualityMode Mode;

			[Token(Token = "0x4000B45")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public int Stepes;

			[Token(Token = "0x6000C31")]
			[Address(RVA = "0x17C6B50", Offset = "0x17C6B50", VA = "0x17C6B50")]
			public QualitySetting()
			{
			}
		}

		[Token(Token = "0x4000B41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<QualitySetting> DesktopQualitySettings;

		[Token(Token = "0x4000B42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<QualitySetting> MobileQualitySettings;

		[Token(Token = "0x6000C30")]
		[Address(RVA = "0x17C6B48", Offset = "0x17C6B48", VA = "0x17C6B48")]
		public QualityModuleSettings()
		{
		}
	}
	[Token(Token = "0x2000239")]
	public class QualityModule : IQualityModule<IDicomVrInstance>
	{
		[Token(Token = "0x4000B46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly Dictionary<IDicomVrInstance, QualityMode> _qualityData;

		[Token(Token = "0x4000B47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly Dictionary<QualityMode, int> _qualitySettings;

		[Token(Token = "0x6000C32")]
		[Address(RVA = "0x17C627C", Offset = "0x17C627C", VA = "0x17C627C")]
		public QualityModule(QualityModuleSettings settings)
		{
		}

		[Token(Token = "0x6000C33")]
		[Address(RVA = "0x17C6B58", Offset = "0x17C6B58", VA = "0x17C6B58", Slot = "4")]
		public QualityMode GetQualityMode(IDicomVrInstance obj)
		{
			return default(QualityMode);
		}

		[Token(Token = "0x6000C34")]
		[Address(RVA = "0x17C6CD0", Offset = "0x17C6CD0", VA = "0x17C6CD0", Slot = "5")]
		public Task SetQualityMode(IDicomVrInstance obj, QualityMode? qualityMode, CancellationToken cancellationToken)
		{
			return null;
		}
	}
	[Token(Token = "0x200023B")]
	public class ScenePlacementModule<T> : IScenePlacementModule<T> where T : IDicomVrInstance
	{
		[Token(Token = "0x4000B4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IDicomSceneManager<T> _dicomSceneManager;

		[Token(Token = "0x17000197")]
		public IEnumerable<KeyValuePair<T, IScenePlacementData>> ScenePlacementData
		{
			[Token(Token = "0x6000C3A")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C39")]
		public ScenePlacementModule(IDicomSceneManager<T> dicomSceneManager)
		{
		}

		[Token(Token = "0x6000C3B")]
		public IScenePlacementData GetScenePlacementData(T obj)
		{
			return null;
		}

		[Token(Token = "0x6000C3C")]
		public void SetScenePlacementData(T obj, IScenePlacementData scenePlacementData)
		{
		}
	}
	[Token(Token = "0x200023C")]
	public class SliceModule : ISliceModule<IDicomVrInstance>, ISliceModule<IDicomVrInstance, SlicePlaneReferences>
	{
		[Token(Token = "0x4000B4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly ISlicePlaneFactory _slicePlaneFactory;

		[Token(Token = "0x4000B4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly Dictionary<IDicomVrInstance, SlicePlaneReferences> _slicePlaneReferences;

		[Token(Token = "0x17000198")]
		public object SlicePlane
		{
			[Token(Token = "0x6000C3E")]
			[Address(RVA = "0x17C6FC4", Offset = "0x17C6FC4", VA = "0x17C6FC4", Slot = "6")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000199")]
		public System.Collections.Generic.IReadOnlyDictionary<IDicomVrInstance, SlicePlaneReferences> SlicePlanes
		{
			[Token(Token = "0x6000C3F")]
			[Address(RVA = "0x17C6FCC", Offset = "0x17C6FCC", VA = "0x17C6FCC", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C40")]
		[Address(RVA = "0x17C61D8", Offset = "0x17C61D8", VA = "0x17C61D8")]
		public SliceModule(ISlicePlaneFactory slicePlaneFactory)
		{
		}

		[Token(Token = "0x6000C41")]
		[Address(RVA = "0x17C6FD4", Offset = "0x17C6FD4", VA = "0x17C6FD4", Slot = "4")]
		public bool GetSliceEnabled(IDicomVrInstance obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C42")]
		[Address(RVA = "0x17C70E0", Offset = "0x17C70E0", VA = "0x17C70E0", Slot = "5")]
		public Task SetSliceEnabled(IDicomVrInstance obj, bool? value, CancellationToken cancellationToken)
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x200023D")]
	public class SlicePlaneFactorySettings
	{
		[Token(Token = "0x4000B4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject SlicePlanePrefab;

		[Token(Token = "0x6000C43")]
		[Address(RVA = "0x17C7754", Offset = "0x17C7754", VA = "0x17C7754")]
		public SlicePlaneFactorySettings()
		{
		}
	}
	[Token(Token = "0x200023E")]
	public class SlicePlaneFactory : ISlicePlaneFactory
	{
		[Token(Token = "0x4000B4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly SlicePlaneFactorySettings _settings;

		[Token(Token = "0x6000C44")]
		[Address(RVA = "0x17C61A8", Offset = "0x17C61A8", VA = "0x17C61A8")]
		public SlicePlaneFactory(SlicePlaneFactorySettings settings)
		{
		}

		[Token(Token = "0x6000C45")]
		[Address(RVA = "0x17C775C", Offset = "0x17C775C", VA = "0x17C775C", Slot = "4")]
		public SlicePlaneReferences Create()
		{
			return null;
		}

		[Token(Token = "0x6000C46")]
		[Address(RVA = "0x17C77F8", Offset = "0x17C77F8", VA = "0x17C77F8", Slot = "5")]
		public void Destroy(SlicePlaneReferences value)
		{
		}
	}
	[Token(Token = "0x200023F")]
	public class WindowingModule : IWindowingModule<IDicomVrInstance>
	{
		[Token(Token = "0x4000B50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly IDictionary<IDicomVrInstance, Vector2> _windowingData;

		[Token(Token = "0x4000B51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Vector2 DefaultWindow;

		[Token(Token = "0x6000C47")]
		[Address(RVA = "0x17C6120", Offset = "0x17C6120", VA = "0x17C6120")]
		public WindowingModule()
		{
		}

		[Token(Token = "0x6000C48")]
		[Address(RVA = "0x17C786C", Offset = "0x17C786C", VA = "0x17C786C", Slot = "4")]
		public Vector2 GetWindow(IDicomVrInstance obj)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000C49")]
		[Address(RVA = "0x17C79C0", Offset = "0x17C79C0", VA = "0x17C79C0", Slot = "5")]
		public Task SetWindow(IDicomVrInstance obj, Vector2? value, CancellationToken cancellationToken)
		{
			return null;
		}
	}
}
namespace CloudService
{
	[Token(Token = "0x2000240")]
	public class CloudServiceProviderBehaviour : MonoBehaviour
	{
		[Token(Token = "0x4000B52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private ScriptableObject<ICloudServiceProviderFactory> _cloudServiceProviderFactory;

		[Token(Token = "0x4000B53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ICloudServiceProvider _cloudServiceProvider;

		[Token(Token = "0x1700019A")]
		public ICloudServiceProvider CloudServiceProvider
		{
			[Token(Token = "0x6000C4B")]
			[Address(RVA = "0x17C7D74", Offset = "0x17C7D74", VA = "0x17C7D74")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C4C")]
		[Address(RVA = "0x17C7E60", Offset = "0x17C7E60", VA = "0x17C7E60")]
		public CloudServiceProviderBehaviour()
		{
		}
	}
	[Token(Token = "0x2000241")]
	[CreateAssetMenu(fileName = "CloudServiceProviderFactory", menuName = "CloudService/CloudServiceProviderFactory")]
	public class CloudServiceProviderFactory : ScriptableObject<ICloudServiceProviderFactory>
	{
		[Token(Token = "0x2000242")]
		private class Factory : ICloudServiceProviderFactory
		{
			[Token(Token = "0x4000B55")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private readonly CloudServiceProviderClientFactory _cloudServiceProviderClientFactory;

			[Token(Token = "0x6000C4F")]
			[Address(RVA = "0x17C7F0C", Offset = "0x17C7F0C", VA = "0x17C7F0C")]
			public Factory(CloudServiceProviderClientFactory cloudServiceProviderClientFactory)
			{
			}

			[Token(Token = "0x6000C50")]
			[Address(RVA = "0x17C7F84", Offset = "0x17C7F84", VA = "0x17C7F84", Slot = "4")]
			public ICloudServiceProvider Create()
			{
				return null;
			}
		}

		[Token(Token = "0x4000B54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private string _serviceAddress;

		[Token(Token = "0x6000C4D")]
		[Address(RVA = "0x17C7E68", Offset = "0x17C7E68", VA = "0x17C7E68", Slot = "4")]
		protected override ICloudServiceProviderFactory CreateInstance()
		{
			return null;
		}

		[Token(Token = "0x6000C4E")]
		[Address(RVA = "0x17C7F3C", Offset = "0x17C7F3C", VA = "0x17C7F3C")]
		public CloudServiceProviderFactory()
		{
		}
	}
	[Token(Token = "0x2000243")]
	public interface ICloudServiceProviderFactory
	{
		[Token(Token = "0x6000C51")]
		ICloudServiceProvider Create();
	}
}
namespace Avatars
{
	[Token(Token = "0x2000244")]
	public class AvatarBodyBehaviour : MonoBehaviour
	{
		[Token(Token = "0x4000B56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform _manHead;

		[Token(Token = "0x4000B57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform _womanHead;

		[Token(Token = "0x4000B58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform _manBodyTransform;

		[Token(Token = "0x4000B59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Transform _womanBodyTransform;

		[Token(Token = "0x4000B5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Transform _transformToFollow;

		[Token(Token = "0x4000B5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private TextMeshPro _nameTmPro;

		[Token(Token = "0x4000B5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private float _speed;

		[Token(Token = "0x4000B5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		private bool _setupAsWoman;

		[Token(Token = "0x4000B5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private int _yawLimit;

		[Token(Token = "0x4000B5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		private int _pitchLimit;

		[Token(Token = "0x4000B60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private int _rollLimit;

		[Token(Token = "0x4000B61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private bool _animate;

		[Token(Token = "0x4000B62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Quaternion _lastRotation;

		[Token(Token = "0x4000B63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool _womanAvatar;

		[Token(Token = "0x4000B64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		private bool _setupCompleted;

		[Token(Token = "0x1700019B")]
		private Transform BodyTransform
		{
			[Token(Token = "0x6000C52")]
			[Address(RVA = "0x17C7FA0", Offset = "0x17C7FA0", VA = "0x17C7FA0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C53")]
		[Address(RVA = "0x17C7FBC", Offset = "0x17C7FBC", VA = "0x17C7FBC")]
		private void Start()
		{
		}

		[Token(Token = "0x6000C54")]
		[Address(RVA = "0x17C805C", Offset = "0x17C805C", VA = "0x17C805C")]
		public void SetupAvatar(bool woman, [Optional] string aName)
		{
		}

		[Token(Token = "0x6000C55")]
		[Address(RVA = "0x17C81B8", Offset = "0x17C81B8", VA = "0x17C81B8")]
		private void RotateBody(Quaternion rot, Vector3 pos)
		{
		}

		[Token(Token = "0x6000C56")]
		[Address(RVA = "0x17C8320", Offset = "0x17C8320", VA = "0x17C8320")]
		private void Update()
		{
		}

		[Token(Token = "0x6000C57")]
		[Address(RVA = "0x17C8760", Offset = "0x17C8760", VA = "0x17C8760")]
		private bool ShouldRotate(Vector3 eulerRotation)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C58")]
		[Address(RVA = "0x17C86B0", Offset = "0x17C86B0", VA = "0x17C86B0")]
		private Vector3 GetSigma(Vector3 rotation)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000C59")]
		[Address(RVA = "0x17C879C", Offset = "0x17C879C", VA = "0x17C879C")]
		public void SetAvatarsActive(bool value)
		{
		}

		[Token(Token = "0x6000C5A")]
		[Address(RVA = "0x17C8864", Offset = "0x17C8864", VA = "0x17C8864")]
		public AvatarBodyBehaviour()
		{
		}
	}
	[Token(Token = "0x2000245")]
	public class AvatarContainer : MonoBehaviour
	{
		[Token(Token = "0x4000B65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform _headTransform;

		[Token(Token = "0x4000B66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform _bodyTransform;

		[Token(Token = "0x4000B67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform _hairstyleTransform;

		[Token(Token = "0x4000B68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Transform _outfitTransform;

		[Token(Token = "0x4000B69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Transform _neckwearTransform;

		[Token(Token = "0x4000B6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Transform _eyewearTransform;

		[Token(Token = "0x4000B6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private List<Material> _hairMaterials;

		[Token(Token = "0x4000B6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private List<Material> _skinMaterials;

		[Token(Token = "0x4000B6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private List<Material> _primaryMaterials;

		[Token(Token = "0x4000B6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private List<Material> _secondaryMaterials;

		[Token(Token = "0x4000B6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private AvatarModelContainer _avatarModelContainer;

		[Token(Token = "0x4000B76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Avatar _lastAvatar;

		[Token(Token = "0x1700019C")]
		public Transform HeadTransform
		{
			[Token(Token = "0x6000C5B")]
			[Address(RVA = "0x17C888C", Offset = "0x17C888C", VA = "0x17C888C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700019D")]
		public Transform BodyTransform
		{
			[Token(Token = "0x6000C5C")]
			[Address(RVA = "0x17C8894", Offset = "0x17C8894", VA = "0x17C8894")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700019E")]
		public Transform HairstyleTransform
		{
			[Token(Token = "0x6000C5D")]
			[Address(RVA = "0x17C889C", Offset = "0x17C889C", VA = "0x17C889C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700019F")]
		public Transform OutfitTransform
		{
			[Token(Token = "0x6000C5E")]
			[Address(RVA = "0x17C88A4", Offset = "0x17C88A4", VA = "0x17C88A4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A0")]
		public Transform NeckwearTransform
		{
			[Token(Token = "0x6000C5F")]
			[Address(RVA = "0x17C88AC", Offset = "0x17C88AC", VA = "0x17C88AC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A1")]
		public Transform EyewearTransform
		{
			[Token(Token = "0x6000C60")]
			[Address(RVA = "0x17C88B4", Offset = "0x17C88B4", VA = "0x17C88B4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A2")]
		public GameObject Head
		{
			[Token(Token = "0x6000C61")]
			[Address(RVA = "0x17C88BC", Offset = "0x17C88BC", VA = "0x17C88BC")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C62")]
			[Address(RVA = "0x17C88C4", Offset = "0x17C88C4", VA = "0x17C88C4")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170001A3")]
		public GameObject Body
		{
			[Token(Token = "0x6000C63")]
			[Address(RVA = "0x17C88CC", Offset = "0x17C88CC", VA = "0x17C88CC")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C64")]
			[Address(RVA = "0x17C88D4", Offset = "0x17C88D4", VA = "0x17C88D4")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170001A4")]
		public GameObject Hairstyle
		{
			[Token(Token = "0x6000C65")]
			[Address(RVA = "0x17C88DC", Offset = "0x17C88DC", VA = "0x17C88DC")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C66")]
			[Address(RVA = "0x17C88E4", Offset = "0x17C88E4", VA = "0x17C88E4")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170001A5")]
		public GameObject Outfit
		{
			[Token(Token = "0x6000C67")]
			[Address(RVA = "0x17C88EC", Offset = "0x17C88EC", VA = "0x17C88EC")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C68")]
			[Address(RVA = "0x17C88F4", Offset = "0x17C88F4", VA = "0x17C88F4")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170001A6")]
		public GameObject Neckwear
		{
			[Token(Token = "0x6000C69")]
			[Address(RVA = "0x17C88FC", Offset = "0x17C88FC", VA = "0x17C88FC")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C6A")]
			[Address(RVA = "0x17C8904", Offset = "0x17C8904", VA = "0x17C8904")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170001A7")]
		public GameObject Eyewear
		{
			[Token(Token = "0x6000C6B")]
			[Address(RVA = "0x17C890C", Offset = "0x17C890C", VA = "0x17C890C")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C6C")]
			[Address(RVA = "0x17C8914", Offset = "0x17C8914", VA = "0x17C8914")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6000C6D")]
		[Address(RVA = "0x17C891C", Offset = "0x17C891C", VA = "0x17C891C")]
		[ContextMenu("Test avatar creation")]
		private void Test()
		{
		}

		[Token(Token = "0x6000C6E")]
		[Address(RVA = "0x17C8B24", Offset = "0x17C8B24", VA = "0x17C8B24")]
		public void SetAvatar(Avatar avatar)
		{
		}

		[Token(Token = "0x6000C6F")]
		[Address(RVA = "0x17C9C98", Offset = "0x17C9C98", VA = "0x17C9C98")]
		private static void SetColour(Color colour, List<Material> materials, List<string> hairMaterials)
		{
		}

		[Token(Token = "0x6000C70")]
		[Address(RVA = "0x17C9DB0", Offset = "0x17C9DB0", VA = "0x17C9DB0")]
		public AvatarContainer()
		{
		}
	}
	[Token(Token = "0x2000249")]
	public class AvatarCreator : MonoBehaviour
	{
		[Token(Token = "0x200024A")]
		public enum Sex
		{
			[Token(Token = "0x4000B8F")]
			Male,
			[Token(Token = "0x4000B90")]
			Female
		}

		[Serializable]
		[Token(Token = "0x200024B")]
		public class AvatarSettings
		{
			[Token(Token = "0x4000B91")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[Header("Hairstyles")]
			public List<Hairstyle> FemaleHairstyles;

			[Token(Token = "0x4000B92")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public List<Hairstyle> MaleHairsyles;

			[Token(Token = "0x4000B93")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[Header("Head Shapes")]
			public List<HeadShape> FemaleHeadShapes;

			[Token(Token = "0x4000B94")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public List<HeadShape> MaleHeadShapes;

			[Token(Token = "0x4000B95")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[Header("Body Shapes")]
			public List<BodyShape> FemaleBodyShapes;

			[Token(Token = "0x4000B96")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public List<BodyShape> MaleBodyShapes;

			[Token(Token = "0x4000B97")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			[Header("Materials")]
			public List<Material> SkinMaterials;

			[Token(Token = "0x4000B98")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public List<Material> HairMaterials;

			[Token(Token = "0x4000B99")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public List<Material> JacketMaterials;

			[Token(Token = "0x4000B9A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public List<Material> ShirtMaterials;

			[Token(Token = "0x6000CA4")]
			[Address(RVA = "0x17CC748", Offset = "0x17CC748", VA = "0x17CC748")]
			public AvatarSettings()
			{
			}
		}

		[Token(Token = "0x4000B7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Dictionary<HeadShape, GameObject> AvailableHeadShapes;

		[Token(Token = "0x4000B80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Dictionary<BodyShape, GameObject> AvailableBodyShapes;

		[Token(Token = "0x4000B81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Dictionary<Hairstyle, GameObject> AvailableHairStyles;

		[Token(Token = "0x4000B82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AvatarContainer _avatarContainer;

		[Token(Token = "0x4000B83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private AvatarSettings _avatarSettings;

		[Token(Token = "0x4000B84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private AvatarModelContainer _avatarModelContainer;

		[Token(Token = "0x4000B85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private BoolReactiveProperty _isFemale;

		[Token(Token = "0x4000B86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private IntReactiveProperty _hairIndex;

		[Token(Token = "0x4000B87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private IntReactiveProperty _headIndex;

		[Token(Token = "0x4000B88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private IntReactiveProperty _bodyIndex;

		[Token(Token = "0x4000B89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject _avatarPiece;

		[Token(Token = "0x4000B8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private GameObject _hair;

		[Token(Token = "0x4000B8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private GameObject _head;

		[Token(Token = "0x4000B8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private GameObject _body;

		[Token(Token = "0x4000B8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Avatar _avatar;

		[Token(Token = "0x170001A8")]
		public Avatar Avatar
		{
			[Token(Token = "0x6000C7B")]
			[Address(RVA = "0x17CA054", Offset = "0x17CA054", VA = "0x17CA054")]
			get
			{
				return default(Avatar);
			}
		}

		[Token(Token = "0x170001A9")]
		public bool IsFemaleValue
		{
			[Token(Token = "0x6000C7C")]
			[Address(RVA = "0x17CA064", Offset = "0x17CA064", VA = "0x17CA064")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000C7D")]
		[Address(RVA = "0x17CA0AC", Offset = "0x17CA0AC", VA = "0x17CA0AC")]
		public void Init()
		{
		}

		[Token(Token = "0x6000C7E")]
		[Address(RVA = "0x17CB10C", Offset = "0x17CB10C", VA = "0x17CB10C")]
		private void ResetAvatar()
		{
		}

		[Token(Token = "0x6000C7F")]
		[Address(RVA = "0x17CA944", Offset = "0x17CA944", VA = "0x17CA944")]
		private void CreateContainer(GameObject obj, Transform headTransform)
		{
		}

		[Token(Token = "0x6000C80")]
		[Address(RVA = "0x17CB2C0", Offset = "0x17CB2C0", VA = "0x17CB2C0")]
		private void SetAvailableShapes(Sex sex)
		{
		}

		[Token(Token = "0x6000C81")]
		[Address(RVA = "0x17CB6D8", Offset = "0x17CB6D8", VA = "0x17CB6D8")]
		private void SetAvailablePrefabs(List<Hairstyle> keyList, GameObject piece)
		{
		}

		[Token(Token = "0x6000C82")]
		[Address(RVA = "0x17CB9C8", Offset = "0x17CB9C8", VA = "0x17CB9C8")]
		private void SetAvailablePrefabs(List<HeadShape> keyList, GameObject piece)
		{
		}

		[Token(Token = "0x6000C83")]
		[Address(RVA = "0x17CB3E8", Offset = "0x17CB3E8", VA = "0x17CB3E8")]
		private void SetAvailablePrefabs(List<BodyShape> keyList, GameObject piece)
		{
		}

		[Token(Token = "0x6000C84")]
		[Address(RVA = "0x17CBCB8", Offset = "0x17CBCB8", VA = "0x17CBCB8")]
		public void SetSex(Sex sex)
		{
		}

		[Token(Token = "0x6000C85")]
		[Address(RVA = "0x17CBD14", Offset = "0x17CBD14", VA = "0x17CBD14")]
		private void SetPrefab(GameObject prefab, GameObject container)
		{
		}

		[Token(Token = "0x6000C86")]
		[Address(RVA = "0x17CBDF4", Offset = "0x17CBDF4", VA = "0x17CBDF4")]
		private void SetPrefab(GameObject prefab, Hairstyle hairstyle, GameObject container)
		{
		}

		[Token(Token = "0x6000C87")]
		[Address(RVA = "0x17CBEE0", Offset = "0x17CBEE0", VA = "0x17CBEE0")]
		private void SetPrefab(GameObject prefab, BodyShape bodyShape, GameObject container)
		{
		}

		[Token(Token = "0x6000C88")]
		[Address(RVA = "0x17CBFCC", Offset = "0x17CBFCC", VA = "0x17CBFCC")]
		private void SetPrefab(GameObject prefab, HeadShape headShape, GameObject container)
		{
		}

		[Token(Token = "0x6000C89")]
		[Address(RVA = "0x17CC0B8", Offset = "0x17CC0B8", VA = "0x17CC0B8")]
		public void SetAvatar(Avatar avatar)
		{
		}

		[Token(Token = "0x6000C8A")]
		[Address(RVA = "0x17CC19C", Offset = "0x17CC19C", VA = "0x17CC19C")]
		public void IncreaseHairstyles()
		{
		}

		[Token(Token = "0x6000C8B")]
		[Address(RVA = "0x17CC208", Offset = "0x17CC208", VA = "0x17CC208")]
		public void DecreaseHairStyles()
		{
		}

		[Token(Token = "0x6000C8C")]
		[Address(RVA = "0x17CC274", Offset = "0x17CC274", VA = "0x17CC274")]
		public void IncreaseHeads()
		{
		}

		[Token(Token = "0x6000C8D")]
		[Address(RVA = "0x17CC27C", Offset = "0x17CC27C", VA = "0x17CC27C")]
		public void DecreaseHeads()
		{
		}

		[Token(Token = "0x6000C8E")]
		[Address(RVA = "0x17CC284", Offset = "0x17CC284", VA = "0x17CC284")]
		public void IncreaseBodies()
		{
		}

		[Token(Token = "0x6000C8F")]
		[Address(RVA = "0x17CC28C", Offset = "0x17CC28C", VA = "0x17CC28C")]
		public void DecreaseBodies()
		{
		}

		[Token(Token = "0x6000C90")]
		[Address(RVA = "0x17CC1A4", Offset = "0x17CC1A4", VA = "0x17CC1A4")]
		private void Increase(IntReactiveProperty property)
		{
		}

		[Token(Token = "0x6000C91")]
		[Address(RVA = "0x17CC210", Offset = "0x17CC210", VA = "0x17CC210")]
		private void Decrease(IntReactiveProperty property)
		{
		}

		[Token(Token = "0x6000C92")]
		[Address(RVA = "0x17CC294", Offset = "0x17CC294", VA = "0x17CC294")]
		public void IsFemale(bool val)
		{
		}

		[Token(Token = "0x6000C93")]
		[Address(RVA = "0x17CC2EC", Offset = "0x17CC2EC", VA = "0x17CC2EC")]
		public void SetName(string name)
		{
		}

		[Token(Token = "0x6000C94")]
		[Address(RVA = "0x17CAC68", Offset = "0x17CAC68", VA = "0x17CAC68")]
		public void SetSkinColour(Color color)
		{
		}

		[Token(Token = "0x6000C95")]
		[Address(RVA = "0x17CAADC", Offset = "0x17CAADC", VA = "0x17CAADC")]
		public void SetHairColour(Color color)
		{
		}

		[Token(Token = "0x6000C96")]
		[Address(RVA = "0x17CADF4", Offset = "0x17CADF4", VA = "0x17CADF4")]
		public void SetPrimaryColour(Color color)
		{
		}

		[Token(Token = "0x6000C97")]
		[Address(RVA = "0x17CAF80", Offset = "0x17CAF80", VA = "0x17CAF80")]
		public void SetSecondaryColour(Color color)
		{
		}

		[Token(Token = "0x6000C98")]
		[Address(RVA = "0x17CC2F0", Offset = "0x17CC2F0", VA = "0x17CC2F0")]
		public AvatarCreator()
		{
		}
	}
	[Token(Token = "0x200024C")]
	public class AvatarCreatorUI : MonoBehaviour
	{
		[Token(Token = "0x200024D")]
		private delegate void ColourDelegate(Color color);

		[Serializable]
		[Token(Token = "0x200024E")]
		public class UISettings
		{
			[Token(Token = "0x4000B9E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[Header("Toggles")]
			public Button GenderButton;

			[Token(Token = "0x4000B9F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public LocalizedTextMeshProGui GenderName;

			[Token(Token = "0x4000BA0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[Header("Switch Panels")]
			public AvatarSwitchPanelSettings Hairstyles;

			[Token(Token = "0x4000BA1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public AvatarSwitchPanelSettings Heads;

			[Token(Token = "0x4000BA2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public AvatarSwitchPanelSettings Bodies;

			[Token(Token = "0x4000BA3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[Header("Prefabs")]
			public GameObject ColourButtonPrefab;

			[Token(Token = "0x4000BA4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public GameObject ColourPickerPrefab;

			[Token(Token = "0x4000BA5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			[Header("InputFields")]
			public TMP_InputField NameInputField;

			[Token(Token = "0x4000BA6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public Button ConfirmationButton;

			[Token(Token = "0x4000BA7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public TextMeshProUGUI SavedText;

			[Token(Token = "0x6000CB4")]
			[Address(RVA = "0x17CE624", Offset = "0x17CE624", VA = "0x17CE624")]
			public UISettings()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200024F")]
		public class AvatarSwitchPanelSettings
		{
			[Token(Token = "0x4000BA8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Button DecreaseButton;

			[Token(Token = "0x4000BA9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Button IncreaseButton;

			[Token(Token = "0x4000BAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Toggle ColoursToggle;

			[Token(Token = "0x4000BAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public RectTransform ColourPickerContainer;

			[Token(Token = "0x4000BAC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public RectTransform PrimaryColourContainer;

			[Token(Token = "0x4000BAD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public string PrimaryLabel;

			[Token(Token = "0x4000BAE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public List<Color> PrimaryColours;

			[Token(Token = "0x4000BAF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public string SecondaryLabel;

			[Token(Token = "0x4000BB0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public RectTransform SecondaryColourContainer;

			[Token(Token = "0x4000BB1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public List<Color> SecondatyColours;

			[Token(Token = "0x6000CB5")]
			[Address(RVA = "0x17CE62C", Offset = "0x17CE62C", VA = "0x17CE62C")]
			public AvatarSwitchPanelSettings()
			{
			}
		}

		[Token(Token = "0x4000B9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AvatarCreator _avatarCreator;

		[Token(Token = "0x4000B9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private UISettings _settings;

		[Token(Token = "0x4000B9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly CompositeDisposable _disposable;

		[Token(Token = "0x6000CA5")]
		[Address(RVA = "0x17CC750", Offset = "0x17CC750", VA = "0x17CC750")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000CA6")]
		[Address(RVA = "0x17CC76C", Offset = "0x17CC76C", VA = "0x17CC76C")]
		public void Init()
		{
		}

		[Token(Token = "0x6000CA7")]
		[Address(RVA = "0x17CC9C0", Offset = "0x17CC9C0", VA = "0x17CC9C0")]
		private void InitColourPickers(AvatarSwitchPanelSettings panelSettings, ColourDelegate colourDelegate)
		{
		}

		[Token(Token = "0x6000CA8")]
		[Address(RVA = "0x17CD0C0", Offset = "0x17CD0C0", VA = "0x17CD0C0")]
		private void InitColourPickers(AvatarSwitchPanelSettings panelSettings, ColourDelegate colourDelegate, ColourDelegate secondaryDelegate)
		{
		}

		[Token(Token = "0x6000CA9")]
		[Address(RVA = "0x17CD824", Offset = "0x17CD824", VA = "0x17CD824")]
		private void InitUI()
		{
		}

		[Token(Token = "0x6000CAA")]
		[Address(RVA = "0x17CDF74", Offset = "0x17CDF74", VA = "0x17CDF74")]
		public void TryToSetAvatarVisualsToSaved()
		{
		}

		[Token(Token = "0x6000CAB")]
		[Address(RVA = "0x17CE058", Offset = "0x17CE058", VA = "0x17CE058")]
		private void SetAvatarVisualsToSaved(Avatar avatar)
		{
		}

		[Token(Token = "0x6000CAC")]
		[Address(RVA = "0x17CE208", Offset = "0x17CE208", VA = "0x17CE208")]
		private void SetHairstyle(Avatar avatar)
		{
		}

		[Token(Token = "0x6000CAD")]
		[Address(RVA = "0x17CE308", Offset = "0x17CE308", VA = "0x17CE308")]
		private void SetHeadShape(Avatar avatar)
		{
		}

		[Token(Token = "0x6000CAE")]
		[Address(RVA = "0x17CE408", Offset = "0x17CE408", VA = "0x17CE408")]
		private void SetBodyShape(Avatar avatar)
		{
		}

		[Token(Token = "0x6000CAF")]
		[Address(RVA = "0x17CE508", Offset = "0x17CE508", VA = "0x17CE508")]
		public AvatarCreatorUI()
		{
		}
	}
	[Token(Token = "0x200025B")]
	public class AvatarMirrorHandler : MonoBehaviour
	{
		[Token(Token = "0x4000BCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform _transformToMirror;

		[Token(Token = "0x4000BCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform _mirrorTransform;

		[Token(Token = "0x4000BCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Quaternion _lastRotation;

		[Token(Token = "0x6000CD9")]
		[Address(RVA = "0x17CFE98", Offset = "0x17CFE98", VA = "0x17CFE98")]
		private void Start()
		{
		}

		[Token(Token = "0x6000CDA")]
		[Address(RVA = "0x17CFF68", Offset = "0x17CFF68", VA = "0x17CFF68")]
		private void Update()
		{
		}

		[Token(Token = "0x6000CDB")]
		[Address(RVA = "0x17D00BC", Offset = "0x17D00BC", VA = "0x17D00BC")]
		public static Quaternion ReflectRotation(Quaternion source, Vector3 normal)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000CDC")]
		[Address(RVA = "0x17D0220", Offset = "0x17D0220", VA = "0x17D0220")]
		public AvatarMirrorHandler()
		{
		}
	}
	[Token(Token = "0x200025C")]
	public enum HeadShape
	{
		[Token(Token = "0x4000BD1")]
		None,
		[Token(Token = "0x4000BD2")]
		Head_Female_1,
		[Token(Token = "0x4000BD3")]
		Head_Female_2,
		[Token(Token = "0x4000BD4")]
		Head_Female_3,
		[Token(Token = "0x4000BD5")]
		Head_Male_1,
		[Token(Token = "0x4000BD6")]
		Head_Male_2,
		[Token(Token = "0x4000BD7")]
		Head_Male_3
	}
	[Token(Token = "0x200025D")]
	public enum Hairstyle
	{
		[Token(Token = "0x4000BD9")]
		None,
		[Token(Token = "0x4000BDA")]
		Hair_Female_1,
		[Token(Token = "0x4000BDB")]
		Hair_Female_2,
		[Token(Token = "0x4000BDC")]
		Hair_Female_3,
		[Token(Token = "0x4000BDD")]
		Hair_Male_1,
		[Token(Token = "0x4000BDE")]
		Hair_Male_2,
		[Token(Token = "0x4000BDF")]
		Hair_Male_3
	}
	[Token(Token = "0x200025E")]
	public enum BodyShape
	{
		[Token(Token = "0x4000BE1")]
		None = 0,
		[Token(Token = "0x4000BE2")]
		Body_Female_1 = 1,
		[Token(Token = "0x4000BE3")]
		Body_Female_2 = 2,
		[Token(Token = "0x4000BE4")]
		Body_Female_3 = 3,
		[Token(Token = "0x4000BE5")]
		Body_Female_4 = 7,
		[Token(Token = "0x4000BE6")]
		Body_Female_5 = 8,
		[Token(Token = "0x4000BE7")]
		Body_Male_1 = 4,
		[Token(Token = "0x4000BE8")]
		Body_Male_2 = 5,
		[Token(Token = "0x4000BE9")]
		Body_Male_3 = 6,
		[Token(Token = "0x4000BEA")]
		Body_Male_4 = 9
	}
	[Token(Token = "0x200025F")]
	public enum Outfit
	{
		[Token(Token = "0x4000BEC")]
		None,
		[Token(Token = "0x4000BED")]
		Nipples
	}
	[Token(Token = "0x2000260")]
	public enum Neckwear
	{
		[Token(Token = "0x4000BEF")]
		None,
		[Token(Token = "0x4000BF0")]
		Necklace,
		[Token(Token = "0x4000BF1")]
		Tie,
		[Token(Token = "0x4000BF2")]
		Bowtie
	}
	[Token(Token = "0x2000261")]
	public enum Eyewear
	{
		[Token(Token = "0x4000BF4")]
		None,
		[Token(Token = "0x4000BF5")]
		Hmd
	}
	[Serializable]
	[Token(Token = "0x2000262")]
	public struct Avatar
	{
		[Token(Token = "0x4000BF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public HeadShape HeadShape;

		[Token(Token = "0x4000BF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public BodyShape BodyShape;

		[Token(Token = "0x4000BF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Hairstyle Hairstyle;

		[Token(Token = "0x4000BF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Outfit Outfit;

		[Token(Token = "0x4000BFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Neckwear Neckwear;

		[Token(Token = "0x4000BFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Eyewear Eyewear;

		[Token(Token = "0x4000BFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Color SkinColor;

		[Token(Token = "0x4000BFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Color HairColor;

		[Token(Token = "0x4000BFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Color PrimaryColor;

		[Token(Token = "0x4000BFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Color SecondaryColor;

		[Token(Token = "0x6000CDD")]
		[Address(RVA = "0x17D0228", Offset = "0x17D0228", VA = "0x17D0228")]
		public Avatar(HeadShape headShape, BodyShape bodyShape, Hairstyle hairstyle, Outfit outfit, Neckwear neckwear, Eyewear eyewear, Color skinColor, Color hairColor, Color primaryColor, Color secondaryColor, string name)
		{
		}

		[Token(Token = "0x6000CDE")]
		[Address(RVA = "0x17D0254", Offset = "0x17D0254", VA = "0x17D0254")]
		public Avatar(Avatar avatar)
		{
		}
	}
	[Token(Token = "0x2000263")]
	public static class AvatarExtensions
	{
		[Token(Token = "0x4000C00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Avatar DefaultFemaleAvatar;

		[Token(Token = "0x4000C01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public static readonly Avatar DefaultMaleAvatar;

		[Token(Token = "0x6000CDF")]
		[Address(RVA = "0x17CFCD4", Offset = "0x17CFCD4", VA = "0x17CFCD4")]
		public static void SaveAvatarToPlayerPrefsAsJSON(this Avatar avatar)
		{
		}

		[Token(Token = "0x6000CE0")]
		[Address(RVA = "0x17C8A00", Offset = "0x17C8A00", VA = "0x17C8A00")]
		public static Avatar? GetAvatarFromPlayerPrefs()
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x2000264")]
	public class HeadShapeDictionary : SerializableDictionary<HeadShape, GameObject>
	{
		[Token(Token = "0x6000CE2")]
		[Address(RVA = "0x17D03CC", Offset = "0x17D03CC", VA = "0x17D03CC")]
		public HeadShapeDictionary()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000265")]
	public class BodyShapeDictionary : SerializableDictionary<BodyShape, GameObject>
	{
		[Token(Token = "0x6000CE3")]
		[Address(RVA = "0x17D0414", Offset = "0x17D0414", VA = "0x17D0414")]
		public BodyShapeDictionary()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000266")]
	public class HairstyleDictionary : SerializableDictionary<Hairstyle, GameObject>
	{
		[Token(Token = "0x6000CE4")]
		[Address(RVA = "0x17D045C", Offset = "0x17D045C", VA = "0x17D045C")]
		public HairstyleDictionary()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000267")]
	public class OutfitDictionary : SerializableDictionary<Outfit, GameObject>
	{
		[Token(Token = "0x6000CE5")]
		[Address(RVA = "0x17D04A4", Offset = "0x17D04A4", VA = "0x17D04A4")]
		public OutfitDictionary()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000268")]
	public class NeckwearDictionary : SerializableDictionary<Neckwear, GameObject>
	{
		[Token(Token = "0x6000CE6")]
		[Address(RVA = "0x17D04EC", Offset = "0x17D04EC", VA = "0x17D04EC")]
		public NeckwearDictionary()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000269")]
	public class EyewearDictionary : SerializableDictionary<Eyewear, GameObject>
	{
		[Token(Token = "0x6000CE7")]
		[Address(RVA = "0x17D0534", Offset = "0x17D0534", VA = "0x17D0534")]
		public EyewearDictionary()
		{
		}
	}
	[Token(Token = "0x200026A")]
	[CreateAssetMenu]
	public class AvatarModelContainer : ScriptableObject
	{
		[Token(Token = "0x4000C02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		[SerializeField]
		private HeadShapeDictionary _headShapes;

		[Token(Token = "0x4000C03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		[SerializeField]
		private BodyShapeDictionary _bodyShapes;

		[Token(Token = "0x4000C04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[HideInInspector]
		private HairstyleDictionary _hairstyles;

		[Token(Token = "0x4000C05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		[SerializeField]
		private OutfitDictionary _outfits;

		[Token(Token = "0x4000C06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		[SerializeField]
		private NeckwearDictionary _neckwear;

		[Token(Token = "0x4000C07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		[SerializeField]
		private EyewearDictionary _eyewear;

		[Token(Token = "0x170001AA")]
		public IDictionary<HeadShape, GameObject> HeadShapes
		{
			[Token(Token = "0x6000CE8")]
			[Address(RVA = "0x17D057C", Offset = "0x17D057C", VA = "0x17D057C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001AB")]
		public IDictionary<BodyShape, GameObject> BodyShapes
		{
			[Token(Token = "0x6000CE9")]
			[Address(RVA = "0x17D0584", Offset = "0x17D0584", VA = "0x17D0584")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001AC")]
		public IDictionary<Hairstyle, GameObject> Hairstyles
		{
			[Token(Token = "0x6000CEA")]
			[Address(RVA = "0x17D058C", Offset = "0x17D058C", VA = "0x17D058C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001AD")]
		public IDictionary<Outfit, GameObject> Outfits
		{
			[Token(Token = "0x6000CEB")]
			[Address(RVA = "0x17D0594", Offset = "0x17D0594", VA = "0x17D0594")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001AE")]
		public IDictionary<Neckwear, GameObject> Neckwear
		{
			[Token(Token = "0x6000CEC")]
			[Address(RVA = "0x17D059C", Offset = "0x17D059C", VA = "0x17D059C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001AF")]
		public IDictionary<Eyewear, GameObject> Eyewear
		{
			[Token(Token = "0x6000CED")]
			[Address(RVA = "0x17D05A4", Offset = "0x17D05A4", VA = "0x17D05A4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CEE")]
		[Address(RVA = "0x17D05AC", Offset = "0x17D05AC", VA = "0x17D05AC")]
		public AvatarModelContainer()
		{
		}
	}
	[Token(Token = "0x200026B")]
	public class CustomAvatarBodyBehaviour : MonoBehaviour
	{
		[Token(Token = "0x4000C08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform _transformToFollow;

		[Token(Token = "0x4000C09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform _bodyTransform;

		[Token(Token = "0x4000C0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float _speed;

		[Token(Token = "0x4000C0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private int _yawLimit;

		[Token(Token = "0x4000C0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private int _pitchLimit;

		[Token(Token = "0x4000C0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private int _rollLimit;

		[Token(Token = "0x4000C0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool _animate;

		[Token(Token = "0x4000C0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Vector3 _lastRotation;

		[Token(Token = "0x4000C10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private readonly CompositeDisposable _disposable;

		[Token(Token = "0x6000CEF")]
		[Address(RVA = "0x17D05B4", Offset = "0x17D05B4", VA = "0x17D05B4")]
		private void Start()
		{
		}

		[Token(Token = "0x6000CF0")]
		[Address(RVA = "0x17D09AC", Offset = "0x17D09AC", VA = "0x17D09AC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000CF1")]
		[Address(RVA = "0x17D09C8", Offset = "0x17D09C8", VA = "0x17D09C8")]
		private void RotateBody(Quaternion rot, Vector3 pos)
		{
		}

		[Token(Token = "0x6000CF2")]
		[Address(RVA = "0x17D0B48", Offset = "0x17D0B48", VA = "0x17D0B48")]
		private void Update()
		{
		}

		[Token(Token = "0x6000CF3")]
		[Address(RVA = "0x17D0D68", Offset = "0x17D0D68", VA = "0x17D0D68")]
		private bool ShouldRotate(Vector3 eulerRotation)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CF4")]
		[Address(RVA = "0x17D0DA4", Offset = "0x17D0DA4", VA = "0x17D0DA4")]
		private Vector3 GetSigma(Vector3 rotation)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000CF5")]
		[Address(RVA = "0x17D0E40", Offset = "0x17D0E40", VA = "0x17D0E40")]
		public CustomAvatarBodyBehaviour()
		{
		}
	}
	[Token(Token = "0x200026D")]
	public class LegacyAvatarBodyBehaviour : MonoBehaviour
	{
		[Token(Token = "0x4000C14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform _transformToFollow;

		[Token(Token = "0x4000C15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform _bodyTransform;

		[Token(Token = "0x4000C16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float _speed;

		[Token(Token = "0x4000C17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private int _yawLimit;

		[Token(Token = "0x4000C18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private int _pitchLimit;

		[Token(Token = "0x4000C19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private int _rollLimit;

		[Token(Token = "0x4000C1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool _animate;

		[Token(Token = "0x4000C1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Vector3 _lastRotation;

		[Token(Token = "0x4000C1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private IDisposable _disposable;

		[Token(Token = "0x6000CFD")]
		[Address(RVA = "0x17D0FDC", Offset = "0x17D0FDC", VA = "0x17D0FDC")]
		private void Start()
		{
		}

		[Token(Token = "0x6000CFE")]
		[Address(RVA = "0x17D13C8", Offset = "0x17D13C8", VA = "0x17D13C8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000CFF")]
		[Address(RVA = "0x17D1470", Offset = "0x17D1470", VA = "0x17D1470")]
		private void RotateBody(Quaternion rot, Vector3 pos)
		{
		}

		[Token(Token = "0x6000D00")]
		[Address(RVA = "0x17D15F0", Offset = "0x17D15F0", VA = "0x17D15F0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000D01")]
		[Address(RVA = "0x17D1810", Offset = "0x17D1810", VA = "0x17D1810")]
		private bool ShouldRotate(Vector3 eulerRotation)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D02")]
		[Address(RVA = "0x17D184C", Offset = "0x17D184C", VA = "0x17D184C")]
		private Vector3 GetSigma(Vector3 rotation)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000D03")]
		[Address(RVA = "0x17D18E8", Offset = "0x17D18E8", VA = "0x17D18E8")]
		public LegacyAvatarBodyBehaviour()
		{
		}
	}
}
namespace Analytics
{
	[Token(Token = "0x200026F")]
	public static class UserActionElementCategory
	{
		[Token(Token = "0x4000C20")]
		public const string SystemUiComponent = "SystemUiComponent";

		[Token(Token = "0x4000C21")]
		public const string QuickAction = "QuickAction";

		[Token(Token = "0x4000C22")]
		public const string Tools = "Tools";

		[Token(Token = "0x4000C23")]
		public const string ActiveFunction = "ActiveFunction";

		[Token(Token = "0x4000C24")]
		public const string Networking = "Networking";
	}
	[Token(Token = "0x2000270")]
	public static class AnalyticsProductId
	{
		[Token(Token = "0x4000C25")]
		public const string HumanAnatomyVR = "humananatomyvr";

		[Token(Token = "0x4000C26")]
		public const string ArAnatomy = "aranatomy";
	}
	[Token(Token = "0x2000271")]
	public static class CustomEvents
	{
		[Token(Token = "0x4000C27")]
		public const string userAction = "userAction";

		[Token(Token = "0x4000C28")]
		public const string sessionStarted = "sessionStarted";
	}
	[Token(Token = "0x2000272")]
	public static class CustomParameters
	{
		[Token(Token = "0x4000C29")]
		public const string userActionId = "userActionId";

		[Token(Token = "0x4000C2A")]
		public const string userActionValue = "userActionValue";

		[Token(Token = "0x4000C2B")]
		public const string userActionElementCategory = "userActionElementCategory";

		[Token(Token = "0x4000C2C")]
		public const string userActionSource = "userActionSource";

		[Token(Token = "0x4000C2D")]
		public const string modelSystemType = "modelSystemType";

		[Token(Token = "0x4000C2E")]
		public const string modelActiveDatabaseType = "modelActiveDatabaseType";

		[Token(Token = "0x4000C2F")]
		public const string modelActiveLocationType = "modelActiveLocationType";

		[Token(Token = "0x4000C30")]
		public const string licenseUserName = "licenseUserName";

		[Token(Token = "0x4000C31")]
		public const string licenceId = "licenceId";

		[Token(Token = "0x4000C32")]
		public const string licenseHolderName = "licenseHolderName";

		[Token(Token = "0x4000C33")]
		public const string licenseHolderType = "licenseHolderType";

		[Token(Token = "0x4000C34")]
		public const string licenseTargetType = "licenseTargetType";

		[Token(Token = "0x4000C35")]
		public const string sessionCadaverType = "sessionCadaverType";

		[Token(Token = "0x4000C36")]
		public const string sessionMovementType = "sessionMovementType";

		[Token(Token = "0x4000C37")]
		public const string sessionLanguage = "sessionLanguage";

		[Token(Token = "0x4000C38")]
		public const string sessionCollabType = "sessionCollabType";

		[Token(Token = "0x4000C39")]
		public const string sessionServerType = "sessionServerType";

		[Token(Token = "0x4000C3A")]
		public const string sessionRoomName = "sessionRoomName";

		[Token(Token = "0x4000C3B")]
		public const string sessionSeatsCount = "sessionSeatsCount";

		[Token(Token = "0x4000C3C")]
		public const string sessionAuthority = "sessionAuthority";

		[Token(Token = "0x4000C3D")]
		public const string sessionTapMode = "sessionTapMode";

		[Token(Token = "0x4000C3E")]
		public const string sessionDoubleTapMode = "sessionDoubleTapMode";

		[Token(Token = "0x4000C3F")]
		public const string sessionEducationLevel = "sessionEducationLevel";

		[Token(Token = "0x4000C40")]
		public const string sessionSubscriptionType = "sessionSubscriptionType";

		[Token(Token = "0x4000C41")]
		public const string sessionInternetAvailable = "sessionInternetAvailable";

		[Token(Token = "0x4000C42")]
		public const string sessionPlatformId = "sessionPlatformId";

		[Token(Token = "0x4000C43")]
		public const string applicationProductId = "applicationProductId";
	}
	[Token(Token = "0x2000273")]
	public static class AnalyticsExtensions
	{
		[Token(Token = "0x4000C44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly LicenseData NotLoggedInLicenseData;

		[Token(Token = "0x4000C45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly Queue<(string EventName, Dictionary<string, object> AdditionalData)> EventQueue;

		[Token(Token = "0x6000D0B")]
		[Address(RVA = "0x17D1A18", Offset = "0x17D1A18", VA = "0x17D1A18")]
		public static void LogAnalyticsEvent(string eventName, LicenseData licenseData, string productId, [Optional] Dictionary<string, object> additionalData)
		{
		}

		[Token(Token = "0x6000D0C")]
		[Address(RVA = "0x17D2084", Offset = "0x17D2084", VA = "0x17D2084")]
		public static string GetPlatformId()
		{
			return null;
		}

		[Token(Token = "0x6000D0D")]
		[Address(RVA = "0x17D1DA8", Offset = "0x17D1DA8", VA = "0x17D1DA8")]
		public static void SetLicenseData(this IDictionary<string, object> eventData, LicenseData licenseData)
		{
		}

		[Token(Token = "0x6000D0E")]
		[Address(RVA = "0x17D21E0", Offset = "0x17D21E0", VA = "0x17D21E0")]
		public static void SetVrSessionData(this IDictionary<string, object> additionalData, EducationLevel educationLevel, IAPDefinitions.ItemType[] activeSubscriptions, bool trialActive)
		{
		}

		[Token(Token = "0x6000D0F")]
		[Address(RVA = "0x17D2EA4", Offset = "0x17D2EA4", VA = "0x17D2EA4")]
		public static void SetMobileSessionData(this IDictionary<string, object> additionalData)
		{
		}

		[Token(Token = "0x6000D10")]
		[Address(RVA = "0x17D3130", Offset = "0x17D3130", VA = "0x17D3130")]
		public static void SetServerInfo(this IDictionary<string, object> additionalData)
		{
		}

		[Token(Token = "0x6000D11")]
		[Address(RVA = "0x17D29C0", Offset = "0x17D29C0", VA = "0x17D29C0")]
		public static void SetServerInfo(this IDictionary<string, object> additionalData, IServerInfo serverInfo)
		{
		}

		[Token(Token = "0x6000D12")]
		[Address(RVA = "0x17D2D30", Offset = "0x17D2D30", VA = "0x17D2D30")]
		public static void SetSessionAuthority(this IDictionary<string, object> additionalData)
		{
		}
	}
}
namespace VR
{
	[Token(Token = "0x2000274")]
	public class AnatomySingleton : Singleton<AnatomySingleton>
	{
		[Token(Token = "0x4000C46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioHandler _audioHandler;

		[Token(Token = "0x170001B0")]
		public AudioHandler AudioHandler
		{
			[Token(Token = "0x6000D14")]
			[Address(RVA = "0x17D3344", Offset = "0x17D3344", VA = "0x17D3344")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D15")]
		[Address(RVA = "0x17D33F4", Offset = "0x17D33F4", VA = "0x17D33F4", Slot = "5")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6000D16")]
		[Address(RVA = "0x17D3488", Offset = "0x17D3488", VA = "0x17D3488")]
		public AnatomySingleton()
		{
		}
	}
	[Token(Token = "0x2000275")]
	[CreateAssetMenu(fileName = "ControllerModelContainer", menuName = "ControllerModelContainer")]
	public class ControllerModelContainer : ScriptableObject
	{
		[Serializable]
		[Token(Token = "0x2000276")]
		public class ControllerModel
		{
			[Token(Token = "0x4000C48")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string Id;

			[Token(Token = "0x4000C49")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public GameObject GameObject;

			[Token(Token = "0x4000C4A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VR.Input.Handedness Handedness;

			[Token(Token = "0x6000D18")]
			[Address(RVA = "0x17D34FC", Offset = "0x17D34FC", VA = "0x17D34FC")]
			public ControllerModel()
			{
			}
		}

		[Token(Token = "0x4000C47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ControllerModel[] ControllerModels;

		[Token(Token = "0x6000D17")]
		[Address(RVA = "0x17D34F4", Offset = "0x17D34F4", VA = "0x17D34F4")]
		public ControllerModelContainer()
		{
		}
	}
}
namespace VR.Utils
{
	[Token(Token = "0x2000277")]
	public class ActiveStateProxy : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000278")]
		public class GameObjectPair
		{
			[Token(Token = "0x4000C4C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject Target;

			[Token(Token = "0x4000C4D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public GameObject Host;

			[Token(Token = "0x6000D1C")]
			[Address(RVA = "0x17D36EC", Offset = "0x17D36EC", VA = "0x17D36EC")]
			public GameObjectPair()
			{
			}
		}

		[Token(Token = "0x4000C4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private List<GameObjectPair> _gameObjectPairs;

		[Token(Token = "0x170001B1")]
		public List<GameObjectPair> GameObjectPairs
		{
			[Token(Token = "0x6000D19")]
			[Address(RVA = "0x17D3504", Offset = "0x17D3504", VA = "0x17D3504")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D1A")]
		[Address(RVA = "0x17D350C", Offset = "0x17D350C", VA = "0x17D350C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000D1B")]
		[Address(RVA = "0x17D36E4", Offset = "0x17D36E4", VA = "0x17D36E4")]
		public ActiveStateProxy()
		{
		}
	}
	[Token(Token = "0x2000279")]
	[CreateAssetMenu]
	public class AnatomyConfiguration : ScriptableObject
	{
		[Token(Token = "0x4000C4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private SerializableAnatomyModel _startAnatomyModel;

		[Token(Token = "0x4000C4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private SerializableAnatomyModel _startAnatomyModelLocations;

		[Token(Token = "0x4000C50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MaxSystemCountConfiguration _maxSystemCountConfiguration;

		[Token(Token = "0x4000C51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private SeatsLimitsConfiguration _seatsLimitsConfiguration;

		[Token(Token = "0x4000C52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private SystemInstanceConfig[] _systemConfigs;

		[Token(Token = "0x4000C53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private SceneLoaderModel[] _exampleAnatomyModels;

		[Token(Token = "0x4000C54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private MemoryManagementConfiguration _memoryManagementConfiguration;

		[Token(Token = "0x4000C55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private AnatomyLicenseValidatorBehaviour.Configuration _licenseValidatorConfiguration;

		[Token(Token = "0x170001B2")]
		public SerializableAnatomyModel StartAnatomyModel
		{
			[Token(Token = "0x6000D1D")]
			[Address(RVA = "0x17D36F4", Offset = "0x17D36F4", VA = "0x17D36F4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B3")]
		public SerializableAnatomyModel StartAnatomyModelLocations
		{
			[Token(Token = "0x6000D1E")]
			[Address(RVA = "0x17D36FC", Offset = "0x17D36FC", VA = "0x17D36FC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B4")]
		public MaxSystemCountConfiguration MaxSystemCountConfiguration
		{
			[Token(Token = "0x6000D1F")]
			[Address(RVA = "0x17D3704", Offset = "0x17D3704", VA = "0x17D3704")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B5")]
		public SeatsLimitsConfiguration SeatsLimitsConfiguration
		{
			[Token(Token = "0x6000D20")]
			[Address(RVA = "0x17D370C", Offset = "0x17D370C", VA = "0x17D370C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B6")]
		public SystemInstanceConfig[] SystemConfigs
		{
			[Token(Token = "0x6000D21")]
			[Address(RVA = "0x17D3714", Offset = "0x17D3714", VA = "0x17D3714")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B7")]
		public SceneLoaderModel[] ExampleAnatomyModels
		{
			[Token(Token = "0x6000D22")]
			[Address(RVA = "0x17D371C", Offset = "0x17D371C", VA = "0x17D371C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B8")]
		public MemoryManagementConfiguration MemoryManagementConfiguration
		{
			[Token(Token = "0x6000D23")]
			[Address(RVA = "0x17D3724", Offset = "0x17D3724", VA = "0x17D3724")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B9")]
		public AnatomyLicenseValidatorBehaviour.Configuration LicenseValidatorConfiguration
		{
			[Token(Token = "0x6000D24")]
			[Address(RVA = "0x17D372C", Offset = "0x17D372C", VA = "0x17D372C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D25")]
		[Address(RVA = "0x17D3734", Offset = "0x17D3734", VA = "0x17D3734")]
		public AnatomyConfiguration()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200027A")]
	public class SeatsLimitsConfiguration
	{
		[Token(Token = "0x4000C56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private int _disableAvatarsThreshold;

		[Token(Token = "0x4000C57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private int _maxSeats;

		[Token(Token = "0x170001BA")]
		public int DisableAvatarsThreshold
		{
			[Token(Token = "0x6000D26")]
			[Address(RVA = "0x17D373C", Offset = "0x17D373C", VA = "0x17D373C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001BB")]
		public int MaxSeats
		{
			[Token(Token = "0x6000D27")]
			[Address(RVA = "0x17D3744", Offset = "0x17D3744", VA = "0x17D3744")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6000D28")]
		[Address(RVA = "0x17D374C", Offset = "0x17D374C", VA = "0x17D374C")]
		public SeatsLimitsConfiguration()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200027B")]
	public struct SceneLoaderModel
	{
		[Token(Token = "0x4000C58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool IsDisplayed;

		[Token(Token = "0x4000C59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AnatomyModel AnatomyModel;

		[Token(Token = "0x4000C5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public DrawingObjectsModel DrawingObjectsModel;

		[Token(Token = "0x4000C5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public CadaverObjectsModel CadaverObjectsModel;

		[Token(Token = "0x4000C5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public PlayerModel PlayerModel;

		[Token(Token = "0x4000C5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public Sprite Thumbnail;
	}
	[Token(Token = "0x200027C")]
	public class AnatomyResources : MonoBehaviour
	{
		[Token(Token = "0x4000C5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private InfoBubbleHandler _infoBubblePrefab;

		[Token(Token = "0x4000C5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private ToolTipPanel _toolTipPanel;

		[Token(Token = "0x4000C60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static AnatomyResources _instance;

		[Token(Token = "0x170001BC")]
		public static AnatomyResources Instance
		{
			[Token(Token = "0x6000D29")]
			[Address(RVA = "0x17D375C", Offset = "0x17D375C", VA = "0x17D375C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001BD")]
		public InfoBubbleHandler InfoBubblePrefab
		{
			[Token(Token = "0x6000D2B")]
			[Address(RVA = "0x17D3964", Offset = "0x17D3964", VA = "0x17D3964")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001BE")]
		public ToolTipPanel ToolTipPanel
		{
			[Token(Token = "0x6000D2C")]
			[Address(RVA = "0x17D396C", Offset = "0x17D396C", VA = "0x17D396C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D2A")]
		[Address(RVA = "0x17D383C", Offset = "0x17D383C", VA = "0x17D383C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000D2D")]
		[Address(RVA = "0x17D3974", Offset = "0x17D3974", VA = "0x17D3974")]
		public AnatomyResources()
		{
		}
	}
	[Token(Token = "0x200027D")]
	public class LookAtCamera : MonoBehaviour
	{
		[Token(Token = "0x6000D2E")]
		[Address(RVA = "0x17D497C", Offset = "0x17D497C", VA = "0x17D497C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000D2F")]
		[Address(RVA = "0x17D49BC", Offset = "0x17D49BC", VA = "0x17D49BC")]
		public LookAtCamera()
		{
		}
	}
	[Token(Token = "0x200027E")]
	public class TriggerableEventSource : MonoBehaviour
	{
		[Token(Token = "0x1400001B")]
		public event Action<Collider> TriggerEnter
		{
			[Token(Token = "0x6000D30")]
			[Address(RVA = "0x17D49C4", Offset = "0x17D49C4", VA = "0x17D49C4")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6000D31")]
			[Address(RVA = "0x17D4A74", Offset = "0x17D4A74", VA = "0x17D4A74")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400001C")]
		public event Action<Collider> TriggerStay
		{
			[Token(Token = "0x6000D32")]
			[Address(RVA = "0x17D4B24", Offset = "0x17D4B24", VA = "0x17D4B24")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6000D33")]
			[Address(RVA = "0x17D4BD4", Offset = "0x17D4BD4", VA = "0x17D4BD4")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400001D")]
		public event Action<Collider> TriggerExit
		{
			[Token(Token = "0x6000D34")]
			[Address(RVA = "0x17D4C84", Offset = "0x17D4C84", VA = "0x17D4C84")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6000D35")]
			[Address(RVA = "0x17D4D34", Offset = "0x17D4D34", VA = "0x17D4D34")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6000D36")]
		[Address(RVA = "0x17D4DE4", Offset = "0x17D4DE4", VA = "0x17D4DE4")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6000D37")]
		[Address(RVA = "0x17D4E00", Offset = "0x17D4E00", VA = "0x17D4E00")]
		private void OnTriggerStay(Collider other)
		{
		}

		[Token(Token = "0x6000D38")]
		[Address(RVA = "0x17D4E1C", Offset = "0x17D4E1C", VA = "0x17D4E1C")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6000D39")]
		[Address(RVA = "0x17D4E38", Offset = "0x17D4E38", VA = "0x17D4E38")]
		public TriggerableEventSource()
		{
		}
	}
}
namespace VR.Utilities
{
	[Token(Token = "0x200027F")]
	public class HighlightController : MonoBehaviour
	{
		[Token(Token = "0x4000C64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _meshRenderer;

		[Token(Token = "0x4000C65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _animationSize;

		[Token(Token = "0x4000C66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float _animationTime;

		[Token(Token = "0x4000C67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Ease _ease;

		[Token(Token = "0x4000C68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector3 _originalSize;

		[Token(Token = "0x4000C69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float _originalShaderBias;

		[Token(Token = "0x4000C6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float _originalShaderScale;

		[Token(Token = "0x4000C6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float _originalSphereSize;

		[Token(Token = "0x4000C6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private TweenerCore<Vector3, Vector3, VectorOptions> _scaleTweener;

		[Token(Token = "0x4000C6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private TweenerCore<Vector3, Vector3, VectorOptions> _moveTweener;

		[Token(Token = "0x4000C6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private TweenerCore<float, float, FloatOptions> _opacityTweener;

		[Token(Token = "0x4000C6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Sequence _showSequence;

		[Token(Token = "0x170001BF")]
		public Transform TransformToFollow
		{
			[Token(Token = "0x6000D3A")]
			[Address(RVA = "0x17D4E40", Offset = "0x17D4E40", VA = "0x17D4E40")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D3B")]
			[Address(RVA = "0x17D4E48", Offset = "0x17D4E48", VA = "0x17D4E48")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x170001C0")]
		public float AnimationSize
		{
			[Token(Token = "0x6000D3C")]
			[Address(RVA = "0x17D4E50", Offset = "0x17D4E50", VA = "0x17D4E50")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000D3D")]
			[Address(RVA = "0x17D4E58", Offset = "0x17D4E58", VA = "0x17D4E58")]
			set
			{
			}
		}

		[Token(Token = "0x6000D3E")]
		[Address(RVA = "0x17D4E60", Offset = "0x17D4E60", VA = "0x17D4E60")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000D3F")]
		[Address(RVA = "0x17D5008", Offset = "0x17D5008", VA = "0x17D5008")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000D40")]
		[Address(RVA = "0x17D5190", Offset = "0x17D5190", VA = "0x17D5190")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000D41")]
		[Address(RVA = "0x17D5260", Offset = "0x17D5260", VA = "0x17D5260")]
		private void Update()
		{
		}

		[Token(Token = "0x6000D42")]
		[Address(RVA = "0x17D5304", Offset = "0x17D5304", VA = "0x17D5304")]
		public void ResetSize()
		{
		}

		[Token(Token = "0x6000D43")]
		[Address(RVA = "0x17D5310", Offset = "0x17D5310", VA = "0x17D5310")]
		public Sequence Show(float duration)
		{
			return null;
		}

		[Token(Token = "0x6000D44")]
		[Address(RVA = "0x17D5768", Offset = "0x17D5768", VA = "0x17D5768")]
		public Sequence Hide(float duration)
		{
			return null;
		}

		[Token(Token = "0x6000D45")]
		[Address(RVA = "0x17D59D0", Offset = "0x17D59D0", VA = "0x17D59D0")]
		public void SetTransformToFollow(Transform value, float duration)
		{
		}

		[Token(Token = "0x6000D46")]
		[Address(RVA = "0x17D5BE4", Offset = "0x17D5BE4", VA = "0x17D5BE4")]
		public void SetPosition(Vector3 position, float duration)
		{
		}

		[Token(Token = "0x6000D47")]
		[Address(RVA = "0x17D5CAC", Offset = "0x17D5CAC", VA = "0x17D5CAC")]
		public HighlightController()
		{
		}
	}
	[Token(Token = "0x2000281")]
	public class PassthroughDependencyResolver : MonoBehaviour
	{
		[Token(Token = "0x4000C73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Component _underlayPassthroughLayer;

		[Token(Token = "0x4000C74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Component _overlayPassthourghLayer;

		[Token(Token = "0x4000C75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private IPassthroughLayer _underlayLayer;

		[Token(Token = "0x4000C76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private IPassthroughLayer _overlayLayer;

		[Token(Token = "0x6000D4A")]
		[Address(RVA = "0x17D5CEC", Offset = "0x17D5CEC", VA = "0x17D5CEC")]
		private void Start()
		{
		}

		[Token(Token = "0x6000D4B")]
		[Address(RVA = "0x17D6084", Offset = "0x17D6084", VA = "0x17D6084")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000D4C")]
		[Address(RVA = "0x17D626C", Offset = "0x17D626C", VA = "0x17D626C")]
		public PassthroughDependencyResolver()
		{
		}
	}
}
namespace VR.UI
{
	[Token(Token = "0x2000282")]
	public class AnimationsPanel : MonoBehaviour
	{
		[Token(Token = "0x4000C77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Slider _slider;

		[Token(Token = "0x4000C78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private UiElementReferences _togglePrefab;

		[Token(Token = "0x4000C79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject _buttonsParent;

		[Token(Token = "0x4000C7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Toggle _playStopToggle;

		[Token(Token = "0x4000C7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Toggle _head;

		[Token(Token = "0x4000C7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Toggle _torso;

		[Token(Token = "0x4000C7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Toggle _hand;

		[Token(Token = "0x4000C7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Toggle _leg;

		[Token(Token = "0x170001C1")]
		public Toggle PlayStopToggle
		{
			[Token(Token = "0x6000D4D")]
			[Address(RVA = "0x17D6274", Offset = "0x17D6274", VA = "0x17D6274")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C2")]
		public Slider Slider
		{
			[Token(Token = "0x6000D4E")]
			[Address(RVA = "0x17D627C", Offset = "0x17D627C", VA = "0x17D627C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C3")]
		public Toggle Head
		{
			[Token(Token = "0x6000D4F")]
			[Address(RVA = "0x17D6284", Offset = "0x17D6284", VA = "0x17D6284")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C4")]
		public Toggle Torso
		{
			[Token(Token = "0x6000D50")]
			[Address(RVA = "0x17D628C", Offset = "0x17D628C", VA = "0x17D628C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C5")]
		public Toggle Hand
		{
			[Token(Token = "0x6000D51")]
			[Address(RVA = "0x17D6294", Offset = "0x17D6294", VA = "0x17D6294")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C6")]
		public Toggle Leg
		{
			[Token(Token = "0x6000D52")]
			[Address(RVA = "0x17D629C", Offset = "0x17D629C", VA = "0x17D629C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C7")]
		public GameObject ButtonsParent
		{
			[Token(Token = "0x6000D53")]
			[Address(RVA = "0x17D62A4", Offset = "0x17D62A4", VA = "0x17D62A4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C8")]
		public UiElementReferences TogglePrefab
		{
			[Token(Token = "0x6000D54")]
			[Address(RVA = "0x17D62AC", Offset = "0x17D62AC", VA = "0x17D62AC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D55")]
		[Address(RVA = "0x17D62B4", Offset = "0x17D62B4", VA = "0x17D62B4")]
		public AnimationsPanel()
		{
		}
	}
	[Token(Token = "0x2000283")]
	public static class AnimationsPanelExtensions
	{
		[Token(Token = "0x2000284")]
		[CompilerGenerated]
		private sealed class <GetCategoryToggles>d__0 : IEnumerable<(Category, Toggle)>, IEnumerable, IEnumerator<(Category, Toggle)>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000C7F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000C80")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private (Category Category, Toggle toggle) <>2__current;

			[Token(Token = "0x4000C81")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4000C82")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private AnimationsPanel animationsPanel;

			[Token(Token = "0x4000C83")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public AnimationsPanel <>3__animationsPanel;

			[Token(Token = "0x170001C9")]
			private (Category, Toggle) System.Collections.Generic.IEnumerator<(Database.Animation.CategoryCategory,UnityEngine.UI.Toggletoggle)>.Current
			{
				[Token(Token = "0x6000D5E")]
				[Address(RVA = "0x17D7F3C", Offset = "0x17D7F3C", VA = "0x17D7F3C", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return default((Category, Toggle));
				}
			}

			[Token(Token = "0x170001CA")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000D60")]
				[Address(RVA = "0x17D7F88", Offset = "0x17D7F88", VA = "0x17D7F88", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000D5B")]
			[Address(RVA = "0x17D6340", Offset = "0x17D6340", VA = "0x17D6340")]
			[DebuggerHidden]
			public <GetCategoryToggles>d__0(int <>1__state)
			{
			}

			[Token(Token = "0x6000D5C")]
			[Address(RVA = "0x17D7DC4", Offset = "0x17D7DC4", VA = "0x17D7DC4", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000D5D")]
			[Address(RVA = "0x17D7DC8", Offset = "0x17D7DC8", VA = "0x17D7DC8", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000D5F")]
			[Address(RVA = "0x17D7F48", Offset = "0x17D7F48", VA = "0x17D7F48", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6000D61")]
			[Address(RVA = "0x17D7FE4", Offset = "0x17D7FE4", VA = "0x17D7FE4", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<(Category, Toggle)> System.Collections.Generic.IEnumerable<(Database.Animation.CategoryCategory,UnityEngine.UI.Toggletoggle)>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6000D62")]
			[Address(RVA = "0x17D8090", Offset = "0x17D8090", VA = "0x17D8090", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x6000D56")]
		[Address(RVA = "0x17D62BC", Offset = "0x17D62BC", VA = "0x17D62BC")]
		[IteratorStateMachine(typeof(<GetCategoryToggles>d__0))]
		public static IEnumerable<(Category, Toggle)> GetCategoryToggles(this AnimationsPanel animationsPanel)
		{
			return null;
		}

		[Token(Token = "0x6000D57")]
		[Address(RVA = "0x17D6374", Offset = "0x17D6374", VA = "0x17D6374")]
		public static Category GetCategory(this AnimationsPanel animationsPanel)
		{
			return default(Category);
		}

		[Token(Token = "0x6000D58")]
		[Address(RVA = "0x17D648C", Offset = "0x17D648C", VA = "0x17D648C")]
		public static Dictionary<string, UiElementReferences> SpawnAnimationToggles(Transform parent, IEnumerable<string> animationIds, UiElementReferences togglePrefab, System.Collections.Generic.IReadOnlyDictionary<string, Sprite> icons)
		{
			return null;
		}

		[Token(Token = "0x6000D59")]
		[Address(RVA = "0x17D69D8", Offset = "0x17D69D8", VA = "0x17D69D8")]
		public static void SetActive(this IEnumerable<Toggle> toggles, Func<Toggle, bool> isActive)
		{
		}

		[Token(Token = "0x6000D5A")]
		[Address(RVA = "0x17D6D0C", Offset = "0x17D6D0C", VA = "0x17D6D0C")]
		public static CompositeDisposable Initialize(this AnimationsPanel animationsPanel, System.Collections.Generic.IReadOnlyDictionary<string, Toggle> toggles, INetworkModuleProviderFactory networkModuleProviderFactory, Transform modalTransformParent, Func<string, bool> isLicenseValid, [Optional] Action onLicenseInvalid)
		{
			return null;
		}
	}
	[Token(Token = "0x200028A")]
	public class ButtonReference : MonoBehaviour
	{
		[Token(Token = "0x4000C99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Button _button;

		[Token(Token = "0x4000C9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Text _text;

		[Token(Token = "0x4000C9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Image _icon;

		[Token(Token = "0x170001CB")]
		public Button Button
		{
			[Token(Token = "0x6000D77")]
			[Address(RVA = "0x17D91F8", Offset = "0x17D91F8", VA = "0x17D91F8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001CC")]
		public Text Text
		{
			[Token(Token = "0x6000D78")]
			[Address(RVA = "0x17D9200", Offset = "0x17D9200", VA = "0x17D9200")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001CD")]
		public Image Icon
		{
			[Token(Token = "0x6000D79")]
			[Address(RVA = "0x17D9208", Offset = "0x17D9208", VA = "0x17D9208")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D7A")]
		[Address(RVA = "0x17D9210", Offset = "0x17D9210", VA = "0x17D9210")]
		public ButtonReference()
		{
		}
	}
	[Token(Token = "0x200028B")]
	public class CameraOverlayHandler : MonoBehaviour
	{
		[Token(Token = "0x4000C9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private List<TextMeshProUGUI> _loadingDots;

		[Token(Token = "0x4000C9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _animationTime;

		[Token(Token = "0x4000C9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform _transformToFollow;

		[Token(Token = "0x4000C9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float _infoFollowingSpeed;

		[Token(Token = "0x4000CA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private float _loadingFollowingSpeed;

		[Token(Token = "0x4000CA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private bool _animateLerp;

		[Token(Token = "0x4000CA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private LocalizedTextMeshProGui _text;

		[Token(Token = "0x4000CA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Transform _loadingTransform;

		[Token(Token = "0x4000CA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Transform _infoTransform;

		[Token(Token = "0x4000CA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Image _image;

		[Token(Token = "0x4000CA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private LoadingAnimationHandler _loadingAnimationHandler;

		[Token(Token = "0x170001CE")]
		public LoadingAnimationHandler LoadingAnimationHandler
		{
			[Token(Token = "0x6000D7B")]
			[Address(RVA = "0x17D9218", Offset = "0x17D9218", VA = "0x17D9218")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001CF")]
		public LocalizedTextMeshProGui Text
		{
			[Token(Token = "0x6000D7C")]
			[Address(RVA = "0x17D92E8", Offset = "0x17D92E8", VA = "0x17D92E8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D0")]
		public Image Image
		{
			[Token(Token = "0x6000D7D")]
			[Address(RVA = "0x17D92F0", Offset = "0x17D92F0", VA = "0x17D92F0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D1")]
		public Transform LoadingTransform
		{
			[Token(Token = "0x6000D7E")]
			[Address(RVA = "0x17D92F8", Offset = "0x17D92F8", VA = "0x17D92F8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D2")]
		public Transform InfoTransform
		{
			[Token(Token = "0x6000D7F")]
			[Address(RVA = "0x17D9300", Offset = "0x17D9300", VA = "0x17D9300")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D80")]
		[Address(RVA = "0x17D9308", Offset = "0x17D9308", VA = "0x17D9308")]
		private void Update()
		{
		}

		[Token(Token = "0x6000D81")]
		[Address(RVA = "0x17D95A8", Offset = "0x17D95A8", VA = "0x17D95A8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000D82")]
		[Address(RVA = "0x17D96A8", Offset = "0x17D96A8", VA = "0x17D96A8")]
		public CameraOverlayHandler()
		{
		}
	}
	[Token(Token = "0x200028C")]
	public class CreateRoomPanel : MonoBehaviour
	{
		[Token(Token = "0x4000CA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Toggle _serverTypeWan;

		[Token(Token = "0x4000CA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Toggle _serverTypeLan;

		[Token(Token = "0x4000CA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Button _createRoom;

		[Token(Token = "0x4000CAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Slider _seatsAmount;

		[Token(Token = "0x4000CAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private TMP_InputField _serverName;

		[Token(Token = "0x4000CAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private GameObject _disableAvatarsWarning;

		[Token(Token = "0x170001D3")]
		public Toggle ServerTypeWan
		{
			[Token(Token = "0x6000D83")]
			[Address(RVA = "0x17D96CC", Offset = "0x17D96CC", VA = "0x17D96CC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D4")]
		public Toggle ServerTypeLan
		{
			[Token(Token = "0x6000D84")]
			[Address(RVA = "0x17D96D4", Offset = "0x17D96D4", VA = "0x17D96D4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D5")]
		public Button CreateRoom
		{
			[Token(Token = "0x6000D85")]
			[Address(RVA = "0x17D96DC", Offset = "0x17D96DC", VA = "0x17D96DC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D6")]
		public Slider SeatsAmount
		{
			[Token(Token = "0x6000D86")]
			[Address(RVA = "0x17D96E4", Offset = "0x17D96E4", VA = "0x17D96E4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D7")]
		public TMP_InputField ServerName
		{
			[Token(Token = "0x6000D87")]
			[Address(RVA = "0x17D96EC", Offset = "0x17D96EC", VA = "0x17D96EC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D8")]
		public GameObject DisableAvatarsWarning
		{
			[Token(Token = "0x6000D88")]
			[Address(RVA = "0x17D96F4", Offset = "0x17D96F4", VA = "0x17D96F4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D89")]
		[Address(RVA = "0x17D96FC", Offset = "0x17D96FC", VA = "0x17D96FC")]
		public CreateRoomPanel()
		{
		}
	}
	[Token(Token = "0x200028D")]
	public class EducationLevelPanel : MonoBehaviour
	{
		[Token(Token = "0x4000CAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Button _highSchoolButton;

		[Token(Token = "0x4000CAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Button _universityButton;

		[Token(Token = "0x170001D9")]
		public Button HighSchoolButton
		{
			[Token(Token = "0x6000D8A")]
			[Address(RVA = "0x17D9704", Offset = "0x17D9704", VA = "0x17D9704")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001DA")]
		public Button UniversityButton
		{
			[Token(Token = "0x6000D8B")]
			[Address(RVA = "0x17D970C", Offset = "0x17D970C", VA = "0x17D970C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D8C")]
		[Address(RVA = "0x17D9714", Offset = "0x17D9714", VA = "0x17D9714")]
		public EducationLevelPanel()
		{
		}
	}
	[Token(Token = "0x200028E")]
	public class GraphicsFadeLoop : MonoBehaviour
	{
		[Token(Token = "0x4000CAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Graphic[] _graphics;

		[Token(Token = "0x4000CB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _minValue;

		[Token(Token = "0x4000CB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float _maxValue;

		[Token(Token = "0x4000CB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float _speed;

		[Token(Token = "0x4000CB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private bool _incrementing;

		[Token(Token = "0x6000D8D")]
		[Address(RVA = "0x17D971C", Offset = "0x17D971C", VA = "0x17D971C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000D8E")]
		[Address(RVA = "0x17D993C", Offset = "0x17D993C", VA = "0x17D993C")]
		public GraphicsFadeLoop()
		{
		}
	}
	[Token(Token = "0x2000290")]
	public class HierarchyRowElement : IHierarchyElement
	{
		[Token(Token = "0x4000CB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly RowElement RowElement;

		[Token(Token = "0x4000CB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly RectTransform ReferenceTransform;

		[Token(Token = "0x170001DB")]
		public IHierarchyElement Parent
		{
			[Token(Token = "0x6000D93")]
			[Address(RVA = "0x17D9A20", Offset = "0x17D9A20", VA = "0x17D9A20", Slot = "4")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D94")]
			[Address(RVA = "0x17D9A28", Offset = "0x17D9A28", VA = "0x17D9A28")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170001DC")]
		public List<HierarchyRowElement> Children
		{
			[Token(Token = "0x6000D95")]
			[Address(RVA = "0x17D9A30", Offset = "0x17D9A30", VA = "0x17D9A30")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D96")]
			[Address(RVA = "0x17D9A38", Offset = "0x17D9A38", VA = "0x17D9A38")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170001DD")]
		private IReadOnlyList<IHierarchyElement> VR.UI.IHierarchyElement.Children
		{
			[Token(Token = "0x6000D97")]
			[Address(RVA = "0x17D9A40", Offset = "0x17D9A40", VA = "0x17D9A40", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001DE")]
		public bool IsExpanded
		{
			[Token(Token = "0x6000D98")]
			[Address(RVA = "0x17D9A48", Offset = "0x17D9A48", VA = "0x17D9A48", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001DF")]
		public Vector2 StartPosition
		{
			[Token(Token = "0x6000D99")]
			[Address(RVA = "0x17D9A78", Offset = "0x17D9A78", VA = "0x17D9A78", Slot = "7")]
			get
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x170001E0")]
		public Vector2 EndPosition
		{
			[Token(Token = "0x6000D9A")]
			[Address(RVA = "0x17D9AB4", Offset = "0x17D9AB4", VA = "0x17D9AB4", Slot = "8")]
			get
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x6000D92")]
		[Address(RVA = "0x17D99DC", Offset = "0x17D99DC", VA = "0x17D99DC")]
		public HierarchyRowElement(RowElement rowElement, RectTransform referenceTransform)
		{
		}

		[Token(Token = "0x6000D9B")]
		[Address(RVA = "0x17D9B90", Offset = "0x17D9B90", VA = "0x17D9B90", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000291")]
	public interface IHierarchyElement
	{
		[Token(Token = "0x170001E1")]
		IHierarchyElement Parent
		{
			[Token(Token = "0x6000D9C")]
			get;
		}

		[Token(Token = "0x170001E2")]
		IReadOnlyList<IHierarchyElement> Children
		{
			[Token(Token = "0x6000D9D")]
			get;
		}

		[Token(Token = "0x170001E3")]
		bool IsExpanded
		{
			[Token(Token = "0x6000D9E")]
			get;
		}

		[Token(Token = "0x170001E4")]
		Vector2 StartPosition
		{
			[Token(Token = "0x6000D9F")]
			get;
		}

		[Token(Token = "0x170001E5")]
		Vector2 EndPosition
		{
			[Token(Token = "0x6000DA0")]
			get;
		}
	}
	[Token(Token = "0x2000292")]
	public struct SpriteTessellationOptions
	{
		[Token(Token = "0x4000CBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VectorUtils.TessellationOptions TessellationOptions;

		[Token(Token = "0x4000CBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float SvgPixelsPerUnit;

		[Token(Token = "0x4000CBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public VectorUtils.Alignment Alignment;

		[Token(Token = "0x4000CBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector2 CustomPivot;

		[Token(Token = "0x4000CBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ushort GradientResolution;

		[Token(Token = "0x4000CBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		public bool FlipYAxis;
	}
	[Token(Token = "0x2000293")]
	public class HierarchyDrawer
	{
		[Token(Token = "0x4000CC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly Unity.VectorGraphics.Scene Scene;

		[Token(Token = "0x4000CC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SpriteTessellationOptions Options;

		[Token(Token = "0x4000CC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float CircleRadius;

		[Token(Token = "0x4000CC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Vector2 RoundnessOffset;

		[Token(Token = "0x4000CC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float HalfThickness;

		[Token(Token = "0x4000CC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private readonly List<BezierContour> _contours;

		[Token(Token = "0x4000CC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private readonly List<Shape> _circles;

		[Token(Token = "0x4000CC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private readonly SolidFill _circleFill;

		[Token(Token = "0x170001E6")]
		public IReadOnlyList<BezierContour> Contours
		{
			[Token(Token = "0x6000DA1")]
			[Address(RVA = "0x17D9BB0", Offset = "0x17D9BB0", VA = "0x17D9BB0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E7")]
		public IReadOnlyList<Shape> Circles
		{
			[Token(Token = "0x6000DA2")]
			[Address(RVA = "0x17D9BB8", Offset = "0x17D9BB8", VA = "0x17D9BB8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000DA3")]
		[Address(RVA = "0x17D9BC0", Offset = "0x17D9BC0", VA = "0x17D9BC0")]
		public void BuildAndTessellateScene(IEnumerable<IHierarchyElement> hierarchyElements, SVGImage svgImage)
		{
		}

		[Token(Token = "0x6000DA4")]
		[Address(RVA = "0x17D9FE4", Offset = "0x17D9FE4", VA = "0x17D9FE4")]
		public void TessellateScene(SVGImage svgImage, IHierarchyElement firstExpandedRootElement)
		{
		}

		[Token(Token = "0x6000DA5")]
		[Address(RVA = "0x17D9BF8", Offset = "0x17D9BF8", VA = "0x17D9BF8")]
		public void BuildScene(IEnumerable<IHierarchyElement> hierarchyElements, out IHierarchyElement firstExpandedRootElement)
		{
		}

		[Token(Token = "0x6000DA6")]
		[Address(RVA = "0x17DA3C0", Offset = "0x17DA3C0", VA = "0x17DA3C0")]
		public static void BuildShapes(IEnumerable<IHierarchyElement> rootElements, List<Shape> shapes, List<BezierContour> contours, float circleRadius, Vector2 offset, out IHierarchyElement firstExpandedRootElement)
		{
		}

		[Token(Token = "0x6000DA7")]
		[Address(RVA = "0x17DB55C", Offset = "0x17DB55C", VA = "0x17DB55C")]
		public HierarchyDrawer()
		{
		}
	}
	[Token(Token = "0x2000294")]
	public static class HierarchyDrawerExtensions
	{
		[Token(Token = "0x6000DA8")]
		[Address(RVA = "0x17DA294", Offset = "0x17DA294", VA = "0x17DA294")]
		public static void SetNativeSize(this SVGImage svgImage)
		{
		}
	}
	[Token(Token = "0x2000295")]
	public class IAPUiElement : MonoBehaviour
	{
		[Token(Token = "0x4000CC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TextMeshProUGUI _headerText;

		[Token(Token = "0x4000CC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private TextMeshProUGUI _priceText;

		[Token(Token = "0x4000CCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private TextMeshProUGUI _introductoryText;

		[Token(Token = "0x4000CCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private TextMeshProUGUI _introductoryPrice;

		[Token(Token = "0x4000CCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private TextMeshProUGUI _descriptionText;

		[Token(Token = "0x4000CCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private LocalizedTextMeshProGui _validUntilText;

		[Token(Token = "0x4000CCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private UiElementReferences _buyNowUiElement;

		[Token(Token = "0x4000CCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private UiElementReferences _offerUiElement;

		[Token(Token = "0x170001E8")]
		public TextMeshProUGUI HeaderText
		{
			[Token(Token = "0x6000DA9")]
			[Address(RVA = "0x17DBA20", Offset = "0x17DBA20", VA = "0x17DBA20")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E9")]
		public TextMeshProUGUI PriceText
		{
			[Token(Token = "0x6000DAA")]
			[Address(RVA = "0x17DBA28", Offset = "0x17DBA28", VA = "0x17DBA28")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001EA")]
		public TextMeshProUGUI IntroductoryText
		{
			[Token(Token = "0x6000DAB")]
			[Address(RVA = "0x17DBA30", Offset = "0x17DBA30", VA = "0x17DBA30")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001EB")]
		public TextMeshProUGUI IntroductoryPrice
		{
			[Token(Token = "0x6000DAC")]
			[Address(RVA = "0x17DBA38", Offset = "0x17DBA38", VA = "0x17DBA38")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001EC")]
		public TextMeshProUGUI DescriptionText
		{
			[Token(Token = "0x6000DAD")]
			[Address(RVA = "0x17DBA40", Offset = "0x17DBA40", VA = "0x17DBA40")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001ED")]
		public UiElementReferences BuyNowUiElement
		{
			[Token(Token = "0x6000DAE")]
			[Address(RVA = "0x17DBA48", Offset = "0x17DBA48", VA = "0x17DBA48")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001EE")]
		public UiElementReferences OfferUiElement
		{
			[Token(Token = "0x6000DAF")]
			[Address(RVA = "0x17DBA50", Offset = "0x17DBA50", VA = "0x17DBA50")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001EF")]
		public LocalizedTextMeshProGui ValidUntilText
		{
			[Token(Token = "0x6000DB0")]
			[Address(RVA = "0x17DBA58", Offset = "0x17DBA58", VA = "0x17DBA58")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000DB1")]
		[Address(RVA = "0x17DBA60", Offset = "0x17DBA60", VA = "0x17DBA60")]
		public IAPUiElement()
		{
		}
	}
	[Token(Token = "0x2000296")]
	public class InputFieldResetButton : MonoBehaviour
	{
		[Token(Token = "0x4000CD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Button _deleteButton;

		[Token(Token = "0x4000CD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private TMP_InputField _inputField;

		[Token(Token = "0x170001F0")]
		public Button DeleteButton
		{
			[Token(Token = "0x6000DB2")]
			[Address(RVA = "0x17DBA68", Offset = "0x17DBA68", VA = "0x17DBA68")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000DB3")]
		[Address(RVA = "0x17DBA70", Offset = "0x17DBA70", VA = "0x17DBA70")]
		private void Start()
		{
		}

		[Token(Token = "0x6000DB4")]
		[Address(RVA = "0x17DBB48", Offset = "0x17DBB48", VA = "0x17DBB48")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000DB5")]
		[Address(RVA = "0x17DBC20", Offset = "0x17DBC20", VA = "0x17DBC20")]
		private void OnDeleteClicked()
		{
		}

		[Token(Token = "0x6000DB6")]
		[Address(RVA = "0x17DBC74", Offset = "0x17DBC74", VA = "0x17DBC74")]
		public InputFieldResetButton()
		{
		}
	}
	[Token(Token = "0x2000297")]
	public class LoadingAnimationHandler : IDisposable
	{
		[Token(Token = "0x4000CD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly List<TextMeshProUGUI> _loadingDots;

		[Token(Token = "0x4000CD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int _counter;

		[Token(Token = "0x4000CD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private IDisposable _intervalDisposable;

		[Token(Token = "0x4000CD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TweenerCore<Color, Color, ColorOptions>[] _dotTweeners;

		[Token(Token = "0x170001F1")]
		public float AnimationTime
		{
			[Token(Token = "0x6000DB7")]
			[Address(RVA = "0x17DBC7C", Offset = "0x17DBC7C", VA = "0x17DBC7C")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000DB8")]
			[Address(RVA = "0x17DBC84", Offset = "0x17DBC84", VA = "0x17DBC84")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6000DB9")]
		[Address(RVA = "0x17D92B8", Offset = "0x17D92B8", VA = "0x17D92B8")]
		public LoadingAnimationHandler(List<TextMeshProUGUI> loadingDots)
		{
		}

		[Token(Token = "0x6000DBA")]
		[Address(RVA = "0x17DBC8C", Offset = "0x17DBC8C", VA = "0x17DBC8C")]
		public TweenerCore<Color, Color, ColorOptions> StartLoading(float duration)
		{
			return null;
		}

		[Token(Token = "0x6000DBB")]
		[Address(RVA = "0x17DC1D8", Offset = "0x17DC1D8", VA = "0x17DC1D8")]
		private void IncrementCounter()
		{
		}

		[Token(Token = "0x6000DBC")]
		[Address(RVA = "0x17DBF20", Offset = "0x17DBF20", VA = "0x17DBF20")]
		public TweenerCore<Color, Color, ColorOptions> StopLoading(float duration)
		{
			return null;
		}

		[Token(Token = "0x6000DBD")]
		[Address(RVA = "0x17D95B8", Offset = "0x17D95B8", VA = "0x17D95B8", Slot = "4")]
		public void Dispose()
		{
		}
	}
	[Token(Token = "0x2000299")]
	public class ReordeableListPlacementManager : MonoBehaviour
	{
		[Token(Token = "0x4000CDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private List<ReorderableListPlacement> _reorderableListPlacements;

		[Token(Token = "0x4000CDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _animationTime;

		[Token(Token = "0x4000CDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject _fakeTogglePrefab;

		[Token(Token = "0x4000CDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private GameObject _currentDraggedObject;

		[Token(Token = "0x4000CDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private UiElementReferences _fakeUIReferences;

		[Token(Token = "0x4000CDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private UiElementReferences _draggedUIReferences;

		[Token(Token = "0x4000CE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Transform _fakeTransform;

		[Token(Token = "0x6000DC3")]
		[Address(RVA = "0x17DC4FC", Offset = "0x17DC4FC", VA = "0x17DC4FC")]
		private void Start()
		{
		}

		[Token(Token = "0x6000DC4")]
		[Address(RVA = "0x17DC968", Offset = "0x17DC968", VA = "0x17DC968")]
		private void Update()
		{
		}

		[Token(Token = "0x6000DC5")]
		[Address(RVA = "0x17DC720", Offset = "0x17DC720", VA = "0x17DC720")]
		private void SubscribeToActions(ReorderableListPlacement reorderableListPlacement)
		{
		}

		[Token(Token = "0x6000DC6")]
		[Address(RVA = "0x17DCAEC", Offset = "0x17DCAEC", VA = "0x17DCAEC")]
		private void OnFakeElementFound(Transform fakeTransform)
		{
		}

		[Token(Token = "0x6000DC7")]
		[Address(RVA = "0x17DCC58", Offset = "0x17DCC58", VA = "0x17DCC58")]
		private void OnElementPlaced(GameObject obj)
		{
		}

		[Token(Token = "0x6000DC8")]
		[Address(RVA = "0x17DCD24", Offset = "0x17DCD24", VA = "0x17DCD24")]
		private void OnElementBeginDrag(GameObject obj, ReorderableListPlacement reorderableListPlacement)
		{
		}

		[Token(Token = "0x6000DC9")]
		[Address(RVA = "0x17DCF60", Offset = "0x17DCF60", VA = "0x17DCF60")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000DCA")]
		[Address(RVA = "0x17DD090", Offset = "0x17DD090", VA = "0x17DD090")]
		private void UnSubscribeFromAction(ReorderableListPlacement reorderableListPlacement)
		{
		}

		[Token(Token = "0x6000DCB")]
		[Address(RVA = "0x17DD2D8", Offset = "0x17DD2D8", VA = "0x17DD2D8")]
		public ReordeableListPlacementManager()
		{
		}
	}
	[Token(Token = "0x200029A")]
	public class ReorderableListPlacement : MonoBehaviour
	{
		[Token(Token = "0x4000CE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform _contenTransform;

		[Token(Token = "0x4000CE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Action<GameObject, ReorderableListPlacement> OnElementBeginDrag;

		[Token(Token = "0x4000CE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action<GameObject> OnElementPlaced;

		[Token(Token = "0x4000CE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Action<Transform> OnFakeElementFound;

		[Token(Token = "0x4000CE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Transform _fakeElement;

		[Token(Token = "0x4000CE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int _currentChildCount;

		[Token(Token = "0x170001F2")]
		public Transform FakeElementTransform
		{
			[Token(Token = "0x6000DCC")]
			[Address(RVA = "0x17DD2E8", Offset = "0x17DD2E8", VA = "0x17DD2E8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000DCD")]
		[Address(RVA = "0x17DD2F0", Offset = "0x17DD2F0", VA = "0x17DD2F0")]
		private void Start()
		{
		}

		[Token(Token = "0x6000DCE")]
		[Address(RVA = "0x17DD318", Offset = "0x17DD318", VA = "0x17DD318")]
		private void Update()
		{
		}

		[Token(Token = "0x6000DCF")]
		[Address(RVA = "0x17DD3CC", Offset = "0x17DD3CC", VA = "0x17DD3CC")]
		public void ElementAdded(ReorderableList.ReorderableListEventStruct element)
		{
		}

		[Token(Token = "0x6000DD0")]
		[Address(RVA = "0x17DD418", Offset = "0x17DD418", VA = "0x17DD418")]
		public void ElementBeginDrag(ReorderableList.ReorderableListEventStruct element)
		{
		}

		[Token(Token = "0x6000DD1")]
		[Address(RVA = "0x17DD538", Offset = "0x17DD538", VA = "0x17DD538")]
		public ReorderableListPlacement()
		{
		}
	}
	[Token(Token = "0x200029B")]
	public class RowElement : MonoBehaviour
	{
		[Token(Token = "0x4000CE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle Expand;

		[Token(Token = "0x4000CE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform SubContent;

		[Token(Token = "0x4000CE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Toggle Toggle;

		[Token(Token = "0x4000CEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public RectTransform HierarchyStartPoint;

		[Token(Token = "0x4000CEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public RectTransform HierarchyEndPoint;

		[Token(Token = "0x6000DD3")]
		[Address(RVA = "0x17DD5C4", Offset = "0x17DD5C4", VA = "0x17DD5C4")]
		public RowElement()
		{
		}
	}
	[Token(Token = "0x200029C")]
	public class SceneLoaderSlotReferences : MonoBehaviour
	{
		[Token(Token = "0x4000CEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private UiElementReferences _uiElementReferences;

		[Token(Token = "0x4000CED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Image _thumbnailImage;

		[Token(Token = "0x170001F3")]
		public UiElementReferences UIElementReferences
		{
			[Token(Token = "0x6000DD4")]
			[Address(RVA = "0x17DD5CC", Offset = "0x17DD5CC", VA = "0x17DD5CC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F4")]
		public Image ThumbnailImage
		{
			[Token(Token = "0x6000DD5")]
			[Address(RVA = "0x17DD5D4", Offset = "0x17DD5D4", VA = "0x17DD5D4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000DD6")]
		[Address(RVA = "0x17DD5DC", Offset = "0x17DD5DC", VA = "0x17DD5DC")]
		public SceneLoaderSlotReferences()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200029D")]
	public class SelectableGraphicColorDefinition
	{
		[Token(Token = "0x4000CEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Graphic[] Graphics;

		[Token(Token = "0x4000CEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Color FallbackColor;

		[Token(Token = "0x4000CF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SelectableColorDefinition[] Colors;

		[Token(Token = "0x6000DD7")]
		[Address(RVA = "0x17DD5E4", Offset = "0x17DD5E4", VA = "0x17DD5E4")]
		public SelectableGraphicColorDefinition()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200029E")]
	public class SelectableColorDefinition
	{
		[Token(Token = "0x4000CF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SelectionState SelectionState;

		[Token(Token = "0x4000CF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Color Color;

		[Token(Token = "0x4000CF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool AlphaOnly;

		[Token(Token = "0x6000DD8")]
		[Address(RVA = "0x17DD5EC", Offset = "0x17DD5EC", VA = "0x17DD5EC")]
		public SelectableColorDefinition()
		{
		}
	}
	[Token(Token = "0x200029F")]
	public class SelectableColorTransition : MonoBehaviour
	{
		[Token(Token = "0x4000CF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Selectable _selectable;

		[Token(Token = "0x4000CF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private SelectableGraphicColorDefinition[] _graphics;

		[Token(Token = "0x4000CF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float _duration;

		[Token(Token = "0x4000CF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private TweenerCore<Color, Color, ColorOptions>[][] _tweeners;

		[Token(Token = "0x170001F5")]
		public SelectionState LastSelectionState
		{
			[Token(Token = "0x6000DD9")]
			[Address(RVA = "0x17DD5F4", Offset = "0x17DD5F4", VA = "0x17DD5F4")]
			[CompilerGenerated]
			get
			{
				return default(SelectionState);
			}
			[Token(Token = "0x6000DDA")]
			[Address(RVA = "0x17DD5FC", Offset = "0x17DD5FC", VA = "0x17DD5FC")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x170001F6")]
		public IReadOnlyList<SelectableGraphicColorDefinition> Graphics
		{
			[Token(Token = "0x6000DDB")]
			[Address(RVA = "0x17DD604", Offset = "0x17DD604", VA = "0x17DD604")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000DDC")]
		[Address(RVA = "0x17DD60C", Offset = "0x17DD60C", VA = "0x17DD60C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000DDD")]
		[Address(RVA = "0x17DD738", Offset = "0x17DD738", VA = "0x17DD738")]
		private void Update()
		{
		}

		[Token(Token = "0x6000DDE")]
		[Address(RVA = "0x17DDB28", Offset = "0x17DDB28", VA = "0x17DDB28")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000DDF")]
		[Address(RVA = "0x17DDB30", Offset = "0x17DDB30", VA = "0x17DDB30")]
		public void ForceUpdate(float duration)
		{
		}

		[Token(Token = "0x6000DE0")]
		[Address(RVA = "0x17DD7BC", Offset = "0x17DD7BC", VA = "0x17DD7BC")]
		private void SetSelectionState(SelectionState selectionState, float duration)
		{
		}

		[Token(Token = "0x6000DE1")]
		[Address(RVA = "0x17DDBBC", Offset = "0x17DDBBC", VA = "0x17DDBBC")]
		public SelectableColorTransition()
		{
		}
	}
	[Token(Token = "0x20002A1")]
	[ExecuteInEditMode]
	public class SelectableGraphicsSetter : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20002A2")]
		public class Target
		{
			[Token(Token = "0x4000D08")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform RectTransform;

			[Token(Token = "0x4000D09")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public TMP_Text Text;

			[Token(Token = "0x4000D0A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RectTransform Content;

			[Token(Token = "0x4000D0B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Image[] Images;

			[Token(Token = "0x4000D0C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[HideInInspector]
			public float Width;

			[Token(Token = "0x6000DE7")]
			[Address(RVA = "0x17DE48C", Offset = "0x17DE48C", VA = "0x17DE48C")]
			public Target()
			{
			}
		}

		[Token(Token = "0x4000CFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private List<Target> _targets;

		[Token(Token = "0x4000CFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Vector2 _paddingMultiplier;

		[Token(Token = "0x4000CFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float _ppuCoef;

		[Token(Token = "0x4000CFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float _minWidthCoefficient;

		[Token(Token = "0x4000CFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float _contentHeight;

		[Token(Token = "0x4000D00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private bool _fitTargetHeight;

		[Token(Token = "0x4000D01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private RectTransform _heightTarget;

		[Token(Token = "0x4000D02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private float _heightTargetFitCoef;

		[Token(Token = "0x4000D03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[Range(0f, 1f)]
		[SerializeField]
		private float _groupTargetSizeCoef;

		[Token(Token = "0x4000D04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float _maxContentWidth;

		[Token(Token = "0x4000D05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float _ppu;

		[Token(Token = "0x4000D06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector2 _contentSize;

		[Token(Token = "0x4000D07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool _isDirty;

		[Token(Token = "0x6000DE4")]
		[Address(RVA = "0x17DDBF4", Offset = "0x17DDBF4", VA = "0x17DDBF4")]
		public void SetGraphics()
		{
		}

		[Token(Token = "0x6000DE5")]
		[Address(RVA = "0x17DE1A4", Offset = "0x17DE1A4", VA = "0x17DE1A4")]
		private void Update()
		{
		}

		[Token(Token = "0x6000DE6")]
		[Address(RVA = "0x17DE3DC", Offset = "0x17DE3DC", VA = "0x17DE3DC")]
		public SelectableGraphicsSetter()
		{
		}
	}
	[Token(Token = "0x20002A3")]
	public class StorePanel : MonoBehaviour
	{
		[Token(Token = "0x4000D0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private IAPUiElement _studentElement;

		[Token(Token = "0x4000D0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private IAPUiElement _educatorElement;

		[Token(Token = "0x4000D0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private IAPUiElement _professionalElement;

		[Token(Token = "0x4000D10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private IAPUiElement _institutionalElement;

		[Token(Token = "0x170001F7")]
		public IAPUiElement StudentElement
		{
			[Token(Token = "0x6000DE8")]
			[Address(RVA = "0x17DE520", Offset = "0x17DE520", VA = "0x17DE520")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F8")]
		public IAPUiElement EducatorElement
		{
			[Token(Token = "0x6000DE9")]
			[Address(RVA = "0x17DE528", Offset = "0x17DE528", VA = "0x17DE528")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F9")]
		public IAPUiElement ProfessionalElement
		{
			[Token(Token = "0x6000DEA")]
			[Address(RVA = "0x17DE530", Offset = "0x17DE530", VA = "0x17DE530")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001FA")]
		public IAPUiElement InstitutionalElement
		{
			[Token(Token = "0x6000DEB")]
			[Address(RVA = "0x17DE538", Offset = "0x17DE538", VA = "0x17DE538")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000DEC")]
		[Address(RVA = "0x17DE540", Offset = "0x17DE540", VA = "0x17DE540")]
		public StorePanel()
		{
		}
	}
	[Token(Token = "0x20002A4")]
	public static class StorePanelExtensions
	{
		[Token(Token = "0x4000D11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Color ConfirmColor;

		[Token(Token = "0x4000D12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly Color ConfirmEdgeColor;

		[Token(Token = "0x6000DED")]
		[Address(RVA = "0x17DE548", Offset = "0x17DE548", VA = "0x17DE548")]
		public static CompositeDisposable Initialize(this StorePanel storePanel, OculusIAPHandler oculusIAPHandler, Transform modalPanelTransform, Action<Purchase> onPurchaseCompleted)
		{
			return null;
		}

		[Token(Token = "0x6000DEE")]
		[Address(RVA = "0x17DE964", Offset = "0x17DE964", VA = "0x17DE964")]
		public static CompositeDisposable Initialize(this IAPUiElement iapUiElement, OculusIAPHandler oculusIAPHandler, IAPDefinitions.ItemType itemType, Transform modalPanelTransform, Action<Purchase> onPurchaseCompleted)
		{
			return null;
		}

		[Token(Token = "0x6000DEF")]
		[Address(RVA = "0x17DEBF4", Offset = "0x17DEBF4", VA = "0x17DEBF4")]
		private static void DisplayBuyModal(this InfoBubbleHandler infoBubbleHandler, IAPDefinitions.ItemType itemType, Transform modalPanelTransform, OculusIAPHandler oculusIAPHandler, Action<Purchase> onPurchaseCompleted)
		{
		}

		[Token(Token = "0x6000DF0")]
		[Address(RVA = "0x17DF024", Offset = "0x17DF024", VA = "0x17DF024")]
		public static void BuyItem(this OculusIAPHandler oculusIAPHandler, IAPDefinitions.ItemType itemType, Action<Purchase> onCompleted)
		{
		}

		[Token(Token = "0x6000DF1")]
		[Address(RVA = "0x17DF304", Offset = "0x17DF304", VA = "0x17DF304")]
		public static void SetupProducts(this StorePanel storePanel, System.Collections.Generic.IReadOnlyDictionary<string, Oculus.Platform.Models.Product> products, System.Collections.Generic.IReadOnlyDictionary<string, Purchase> purchases)
		{
		}

		[Token(Token = "0x6000DF2")]
		[Address(RVA = "0x17DF3A8", Offset = "0x17DF3A8", VA = "0x17DF3A8")]
		public static void Initialize(this IAPUiElement iapUiElement, System.Collections.Generic.IReadOnlyDictionary<string, Oculus.Platform.Models.Product> products, System.Collections.Generic.IReadOnlyDictionary<string, Purchase> purchases, IAPDefinitions.ItemType itemType)
		{
		}

		[Token(Token = "0x6000DF3")]
		[Address(RVA = "0x17DF784", Offset = "0x17DF784", VA = "0x17DF784")]
		public static void Initialize(this IAPUiElement iapUiElement, Oculus.Platform.Models.Product product, Oculus.Platform.Models.Product productIntroductory, Purchase purchase, Purchase purchaseIntroductory)
		{
		}

		[Token(Token = "0x6000DF4")]
		[Address(RVA = "0x17DFBB0", Offset = "0x17DFBB0", VA = "0x17DFBB0")]
		private static string FormatPriceText(string priceString, float smallTextSize)
		{
			return null;
		}

		[Token(Token = "0x6000DF5")]
		[Address(RVA = "0x17DFEA0", Offset = "0x17DFEA0", VA = "0x17DFEA0")]
		public static CompositeDisposable InitializeLicenseDisplay(this TextMeshProUGUI textMeshProUGUI, IReadOnlyCollection<ILicenseValidatorProvider> licenseValidatorProviders)
		{
			return null;
		}

		[Token(Token = "0x6000DF6")]
		[Address(RVA = "0x17E00CC", Offset = "0x17E00CC", VA = "0x17E00CC")]
		public static string FormatLicenseDisplay(string licenseName, string licenseDescription, float smallTextSize)
		{
			return null;
		}

		[Token(Token = "0x6000DF7")]
		[Address(RVA = "0x17E01B4", Offset = "0x17E01B4", VA = "0x17E01B4")]
		public static string FormatTrialText(DateTime grantTime, string sourceText, float smallFontSize)
		{
			return null;
		}

		[Token(Token = "0x6000DF8")]
		[Address(RVA = "0x17E0558", Offset = "0x17E0558", VA = "0x17E0558")]
		public static string GetLicenseDescription(IAPDefinitions.ItemType itemType)
		{
			return null;
		}

		[Token(Token = "0x6000DF9")]
		[Address(RVA = "0x17E0640", Offset = "0x17E0640", VA = "0x17E0640")]
		public static void DisplayInvalidLicenseModal(this InfoBubbleHandler infoBubbleHandler, Transform modalPanelTransform, IEnumerable<ILicenseValidatorProvider> licenseValidatorProviders, StorePanel storePanel, Action onLicenseChanged, [Optional] Action onExit)
		{
		}

		[Token(Token = "0x6000DFA")]
		[Address(RVA = "0x17E0CE0", Offset = "0x17E0CE0", VA = "0x17E0CE0")]
		public static bool IsSubscriptionActive(this OculusIAPHandler oculusIAPHandler, IAPDefinitions.ItemType itemType)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DFB")]
		[Address(RVA = "0x17E0EF4", Offset = "0x17E0EF4", VA = "0x17E0EF4")]
		public static IEnumerable<IAPDefinitions.ItemType> GetActiveSubscriptions(this OculusIAPHandler oculusIAPHandler)
		{
			return null;
		}
	}
	[Token(Token = "0x20002AB")]
	public class ToggleColorTransition : MonoBehaviour
	{
		[Token(Token = "0x4000D2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Toggle _toggle;

		[Token(Token = "0x4000D2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private TextMeshProUGUI _text;

		[Token(Token = "0x4000D2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Image _icon;

		[Token(Token = "0x4000D30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Color _isOnColor;

		[Token(Token = "0x4000D31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private float _duration;

		[Token(Token = "0x4000D32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private float _interactableFadeValue;

		[Token(Token = "0x4000D33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Graphic[] _graphics;

		[Token(Token = "0x4000D34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Color _originalTextColor;

		[Token(Token = "0x4000D35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Color _originalIconColor;

		[Token(Token = "0x4000D36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Color[] _originalGraphicColors;

		[Token(Token = "0x4000D37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private bool _lastIsOn;

		[Token(Token = "0x4000D38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
		private bool _lastIsInteractable;

		[Token(Token = "0x4000D39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private TweenerCore<Color, Color, ColorOptions> _textTweener;

		[Token(Token = "0x4000D3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private TweenerCore<Color, Color, ColorOptions> _iconTweener;

		[Token(Token = "0x4000D3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private TweenerCore<Color, Color, ColorOptions>[] _graphicsTweeners;

		[Token(Token = "0x6000E14")]
		[Address(RVA = "0x17E2708", Offset = "0x17E2708", VA = "0x17E2708")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000E15")]
		[Address(RVA = "0x17E28D0", Offset = "0x17E28D0", VA = "0x17E28D0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000E16")]
		[Address(RVA = "0x17E2D50", Offset = "0x17E2D50", VA = "0x17E2D50")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000E17")]
		[Address(RVA = "0x17E2940", Offset = "0x17E2940", VA = "0x17E2940")]
		private void OnStateChanged(bool isOn, bool interactable, float duration)
		{
		}

		[Token(Token = "0x6000E18")]
		[Address(RVA = "0x17E2D94", Offset = "0x17E2D94", VA = "0x17E2D94")]
		public ToggleColorTransition()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002AC")]
	public class ToggleGraphicColorDefinition
	{
		[Token(Token = "0x4000D3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Color IsOn;

		[Token(Token = "0x4000D3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SelectableGraphicColorDefinition Definition;

		[Token(Token = "0x6000E19")]
		[Address(RVA = "0x17E2DAC", Offset = "0x17E2DAC", VA = "0x17E2DAC")]
		public ToggleGraphicColorDefinition()
		{
		}
	}
	[Token(Token = "0x20002AD")]
	public class ToggleColorTransitionAdvanced : MonoBehaviour
	{
		[Token(Token = "0x4000D3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Toggle _toggle;

		[Token(Token = "0x4000D3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _duration;

		[Token(Token = "0x4000D40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ToggleGraphicColorDefinition[] _graphics;

		[Token(Token = "0x4000D41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool _lastIsOn;

		[Token(Token = "0x4000D43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TweenerCore<Color, Color, ColorOptions>[][] _tweeners;

		[Token(Token = "0x170001FB")]
		public SelectionState LastSelectionState
		{
			[Token(Token = "0x6000E1A")]
			[Address(RVA = "0x17E2DB4", Offset = "0x17E2DB4", VA = "0x17E2DB4")]
			[CompilerGenerated]
			get
			{
				return default(SelectionState);
			}
			[Token(Token = "0x6000E1B")]
			[Address(RVA = "0x17E2DBC", Offset = "0x17E2DBC", VA = "0x17E2DBC")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x170001FC")]
		public IReadOnlyList<ToggleGraphicColorDefinition> Graphics
		{
			[Token(Token = "0x6000E1C")]
			[Address(RVA = "0x17E2DC4", Offset = "0x17E2DC4", VA = "0x17E2DC4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E1D")]
		[Address(RVA = "0x17E2DCC", Offset = "0x17E2DCC", VA = "0x17E2DCC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000E1E")]
		[Address(RVA = "0x17E2F00", Offset = "0x17E2F00", VA = "0x17E2F00")]
		private void Update()
		{
		}

		[Token(Token = "0x6000E1F")]
		[Address(RVA = "0x17E337C", Offset = "0x17E337C", VA = "0x17E337C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000E20")]
		[Address(RVA = "0x17E3384", Offset = "0x17E3384", VA = "0x17E3384")]
		public void ForceUpdate(float duration)
		{
		}

		[Token(Token = "0x6000E21")]
		[Address(RVA = "0x17E2FBC", Offset = "0x17E2FBC", VA = "0x17E2FBC")]
		private void OnStateChanged(SelectionState selectionState, bool isOn, float duration)
		{
		}

		[Token(Token = "0x6000E22")]
		[Address(RVA = "0x17E3430", Offset = "0x17E3430", VA = "0x17E3430")]
		public ToggleColorTransitionAdvanced()
		{
		}
	}
	[Token(Token = "0x20002AF")]
	public static class UiElementHelpers
	{
		[Token(Token = "0x20002B0")]
		public class ActionDisposable : IDisposable
		{
			[Token(Token = "0x4000D46")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private readonly Action _onDispose;

			[Token(Token = "0x6000E26")]
			[Address(RVA = "0x17E3A24", Offset = "0x17E3A24", VA = "0x17E3A24")]
			public ActionDisposable(Action onDispose)
			{
			}

			[Token(Token = "0x6000E27")]
			[Address(RVA = "0x17E3A54", Offset = "0x17E3A54", VA = "0x17E3A54", Slot = "4")]
			public void Dispose()
			{
			}
		}

		[Token(Token = "0x6000E25")]
		[Address(RVA = "0x17E3468", Offset = "0x17E3468", VA = "0x17E3468")]
		public static IDisposable InitStrobeSequence(this ToggleSpriteTransition spriteTransition, Action onCompleted, int strobeCount = 2, float oneStrobeDuration = 0.2f, float strobeInterval = 0.3f, float strobeWaitInterval = 1.2f)
		{
			return null;
		}
	}
	[Token(Token = "0x20002B3")]
	public class UiElementReferences : MonoBehaviour
	{
		[Token(Token = "0x4000D50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Image _iconImage;

		[Token(Token = "0x4000D51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private LocalizedTextMeshProGui _localizedTextMeshPro;

		[Token(Token = "0x4000D52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private TextMeshProUGUI _text;

		[Token(Token = "0x4000D53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private string _elementId;

		[Token(Token = "0x4000D54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Selectable _element;

		[Token(Token = "0x4000D55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private LocalizedTextMeshProGui[] _texts;

		[Token(Token = "0x4000D56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Image[] _images;

		[Token(Token = "0x4000D57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<Graphic> _graphics;

		[Token(Token = "0x170001FD")]
		public TextMeshProUGUI Text
		{
			[Token(Token = "0x6000E32")]
			[Address(RVA = "0x17E4004", Offset = "0x17E4004", VA = "0x17E4004")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001FE")]
		public Image IconImage
		{
			[Token(Token = "0x6000E33")]
			[Address(RVA = "0x17E400C", Offset = "0x17E400C", VA = "0x17E400C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001FF")]
		public LocalizedTextMeshProGui LocalizedTextMeshPro
		{
			[Token(Token = "0x6000E34")]
			[Address(RVA = "0x17E4014", Offset = "0x17E4014", VA = "0x17E4014")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000200")]
		public string ElementId
		{
			[Token(Token = "0x6000E35")]
			[Address(RVA = "0x17E401C", Offset = "0x17E401C", VA = "0x17E401C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E36")]
			[Address(RVA = "0x17E4024", Offset = "0x17E4024", VA = "0x17E4024")]
			set
			{
			}
		}

		[Token(Token = "0x17000201")]
		public Selectable Element
		{
			[Token(Token = "0x6000E37")]
			[Address(RVA = "0x17E402C", Offset = "0x17E402C", VA = "0x17E402C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000202")]
		public LocalizedTextMeshProGui[] Texts
		{
			[Token(Token = "0x6000E38")]
			[Address(RVA = "0x17E4034", Offset = "0x17E4034", VA = "0x17E4034")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000203")]
		public Image[] Images
		{
			[Token(Token = "0x6000E39")]
			[Address(RVA = "0x17E403C", Offset = "0x17E403C", VA = "0x17E403C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E3A")]
		[Address(RVA = "0x17E4044", Offset = "0x17E4044", VA = "0x17E4044")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000E3B")]
		[Address(RVA = "0x17E4048", Offset = "0x17E4048", VA = "0x17E4048")]
		public void InitGraphics()
		{
		}

		[Token(Token = "0x6000E3C")]
		[Address(RVA = "0x17DCB78", Offset = "0x17DCB78", VA = "0x17DCB78")]
		public void SetGraphicsVisibility(bool val)
		{
		}

		[Token(Token = "0x6000E3D")]
		[Address(RVA = "0x17E415C", Offset = "0x17E415C", VA = "0x17E415C")]
		public UiElementReferences()
		{
		}
	}
	[Token(Token = "0x20002B5")]
	public static class UIExtensions
	{
		[Token(Token = "0x20002B6")]
		[CompilerGenerated]
		private sealed class <GetImages>d__8 : IEnumerable<Image>, IEnumerable, IEnumerator<Image>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000D59")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000D5A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private Image <>2__current;

			[Token(Token = "0x4000D5B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4000D5C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private ButtonColorTransition transition;

			[Token(Token = "0x4000D5D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public ButtonColorTransition <>3__transition;

			[Token(Token = "0x17000204")]
			private Image System.Collections.Generic.IEnumerator<UnityEngine.UI.Image>.Current
			{
				[Token(Token = "0x6000E4F")]
				[Address(RVA = "0x17E542C", Offset = "0x17E542C", VA = "0x17E542C", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000205")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000E51")]
				[Address(RVA = "0x17E5474", Offset = "0x17E5474", VA = "0x17E5474", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000E4C")]
			[Address(RVA = "0x17E52EC", Offset = "0x17E52EC", VA = "0x17E52EC")]
			[DebuggerHidden]
			public <GetImages>d__8(int <>1__state)
			{
			}

			[Token(Token = "0x6000E4D")]
			[Address(RVA = "0x17E5354", Offset = "0x17E5354", VA = "0x17E5354", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000E4E")]
			[Address(RVA = "0x17E5358", Offset = "0x17E5358", VA = "0x17E5358", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000E50")]
			[Address(RVA = "0x17E5434", Offset = "0x17E5434", VA = "0x17E5434", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6000E52")]
			[Address(RVA = "0x17E547C", Offset = "0x17E547C", VA = "0x17E547C", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<Image> System.Collections.Generic.IEnumerable<UnityEngine.UI.Image>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6000E53")]
			[Address(RVA = "0x17E5528", Offset = "0x17E5528", VA = "0x17E5528", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x20002B7")]
		[CompilerGenerated]
		private sealed class <GetImages>d__9 : IEnumerable<Image>, IEnumerable, IEnumerator<Image>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000D5E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000D5F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private Image <>2__current;

			[Token(Token = "0x4000D60")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4000D61")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private ToggleSpriteTransition transition;

			[Token(Token = "0x4000D62")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public ToggleSpriteTransition <>3__transition;

			[Token(Token = "0x17000206")]
			private Image System.Collections.Generic.IEnumerator<UnityEngine.UI.Image>.Current
			{
				[Token(Token = "0x6000E57")]
				[Address(RVA = "0x17E5624", Offset = "0x17E5624", VA = "0x17E5624", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000207")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000E59")]
				[Address(RVA = "0x17E566C", Offset = "0x17E566C", VA = "0x17E566C", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000E54")]
			[Address(RVA = "0x17E5320", Offset = "0x17E5320", VA = "0x17E5320")]
			[DebuggerHidden]
			public <GetImages>d__9(int <>1__state)
			{
			}

			[Token(Token = "0x6000E55")]
			[Address(RVA = "0x17E552C", Offset = "0x17E552C", VA = "0x17E552C", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000E56")]
			[Address(RVA = "0x17E5530", Offset = "0x17E5530", VA = "0x17E5530", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000E58")]
			[Address(RVA = "0x17E562C", Offset = "0x17E562C", VA = "0x17E562C", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6000E5A")]
			[Address(RVA = "0x17E5674", Offset = "0x17E5674", VA = "0x17E5674", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<Image> System.Collections.Generic.IEnumerable<UnityEngine.UI.Image>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6000E5B")]
			[Address(RVA = "0x17E5720", Offset = "0x17E5720", VA = "0x17E5720", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x6000E40")]
		[Address(RVA = "0x17DE17C", Offset = "0x17DE17C", VA = "0x17DE17C")]
		public static float GetPpu(float contentSize, float ppuCoef)
		{
			return default(float);
		}

		[Token(Token = "0x6000E41")]
		[Address(RVA = "0x17E4188", Offset = "0x17E4188", VA = "0x17E4188")]
		public static Vector2 GetContentSize(this TMP_Text text, Vector2 paddingMultiplier, float minWidthCoefficient)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000E42")]
		[Address(RVA = "0x17DE184", Offset = "0x17DE184", VA = "0x17DE184")]
		public static Vector2 GetContentSize(Vector2 contentSize, float padding, Vector2 paddingMultiplier, float minWidthCoefficient)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000E43")]
		[Address(RVA = "0x17E4214", Offset = "0x17E4214", VA = "0x17E4214")]
		public static void SetPpuMultiplier(this ButtonColorTransition transition, float value)
		{
		}

		[Token(Token = "0x6000E44")]
		[Address(RVA = "0x17E4590", Offset = "0x17E4590", VA = "0x17E4590")]
		public static void SetPpuMultiplier(this ToggleSpriteTransition transition, float value)
		{
		}

		[Token(Token = "0x6000E45")]
		[Address(RVA = "0x17E490C", Offset = "0x17E490C", VA = "0x17E490C")]
		public static void SetPpuMultiplier(this SelectableColorTransition transition, float value)
		{
		}

		[Token(Token = "0x6000E46")]
		[Address(RVA = "0x17E4D28", Offset = "0x17E4D28", VA = "0x17E4D28")]
		public static void SetPpuMultiplier(this ToggleColorTransitionAdvanced transition, float value)
		{
		}

		[Token(Token = "0x6000E47")]
		[Address(RVA = "0x17E5144", Offset = "0x17E5144", VA = "0x17E5144")]
		public static void SetColors(this ButtonColorTransition buttonColorTransition, Color color, Color textColor, Color edgeColor)
		{
		}

		[Token(Token = "0x6000E48")]
		[Address(RVA = "0x17E450C", Offset = "0x17E450C", VA = "0x17E450C")]
		[IteratorStateMachine(typeof(<GetImages>d__8))]
		public static IEnumerable<Image> GetImages(this ButtonColorTransition transition)
		{
			return null;
		}

		[Token(Token = "0x6000E49")]
		[Address(RVA = "0x17E4888", Offset = "0x17E4888", VA = "0x17E4888")]
		[IteratorStateMachine(typeof(<GetImages>d__9))]
		public static IEnumerable<Image> GetImages(this ToggleSpriteTransition transition)
		{
			return null;
		}

		[Token(Token = "0x6000E4A")]
		[Address(RVA = "0x17E4C04", Offset = "0x17E4C04", VA = "0x17E4C04")]
		public static IEnumerable<Image> GetImages(this SelectableColorTransition transition)
		{
			return null;
		}

		[Token(Token = "0x6000E4B")]
		[Address(RVA = "0x17E5020", Offset = "0x17E5020", VA = "0x17E5020")]
		public static IEnumerable<Image> GetImages(this ToggleColorTransitionAdvanced transition)
		{
			return null;
		}
	}
}
namespace VR.Settings
{
	[Token(Token = "0x20002B9")]
	public class Colors
	{
		[Token(Token = "0x4000D66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Color BlueHighlight;

		[Token(Token = "0x4000D67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly Color RedWoman;

		[Token(Token = "0x4000D68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static readonly Color GreenHighlight;

		[Token(Token = "0x4000D69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static readonly Color AnatomyItemHighlight;

		[Token(Token = "0x4000D6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public static readonly Color PhysicsHighlight;

		[Token(Token = "0x4000D6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public static readonly Color AnatomyItemPermanentHighlight;

		[Token(Token = "0x4000D6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public static readonly Color AnatomyItemPermanentHighlightOutline;

		[Token(Token = "0x4000D6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public static readonly Color SystemButtonEmissionColor;

		[Token(Token = "0x4000D6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public static readonly Dictionary<byte, Color> BonesShaderColorsG;

		[Token(Token = "0x4000D6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public static readonly Dictionary<byte, Color> BonesShaderColorsR;

		[Token(Token = "0x4000D70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public static readonly Dictionary<byte, Color> BonesShaderColorsB;

		[Token(Token = "0x6000E60")]
		[Address(RVA = "0x17E57D4", Offset = "0x17E57D4", VA = "0x17E57D4")]
		public Colors()
		{
		}
	}
	[Token(Token = "0x20002BA")]
	public interface IReadOnlyPlayerPrefsCacheModel
	{
		[Token(Token = "0x17000208")]
		VR.Input.MovementType MovementType
		{
			[Token(Token = "0x6000E62")]
			get;
		}

		[Token(Token = "0x17000209")]
		LocationTypeApplication LocationType
		{
			[Token(Token = "0x6000E63")]
			get;
		}

		[Token(Token = "0x1700020A")]
		EnvironmentType EnvironmentType
		{
			[Token(Token = "0x6000E64")]
			get;
		}

		[Token(Token = "0x1700020B")]
		EducationLevel EducationLevel
		{
			[Token(Token = "0x6000E65")]
			get;
		}
	}
	[Token(Token = "0x20002BB")]
	public class PlayerPrefsCacheModel : IReadOnlyPlayerPrefsCacheModel
	{
		[Token(Token = "0x1700020C")]
		public VR.Input.MovementType MovementType
		{
			[Token(Token = "0x6000E66")]
			[Address(RVA = "0x17E6864", Offset = "0x17E6864", VA = "0x17E6864", Slot = "4")]
			[CompilerGenerated]
			get
			{
				return default(VR.Input.MovementType);
			}
			[Token(Token = "0x6000E67")]
			[Address(RVA = "0x17E686C", Offset = "0x17E686C", VA = "0x17E686C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700020D")]
		public LocationTypeApplication LocationType
		{
			[Token(Token = "0x6000E68")]
			[Address(RVA = "0x17E6874", Offset = "0x17E6874", VA = "0x17E6874", Slot = "5")]
			[CompilerGenerated]
			get
			{
				return default(LocationTypeApplication);
			}
			[Token(Token = "0x6000E69")]
			[Address(RVA = "0x17E687C", Offset = "0x17E687C", VA = "0x17E687C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700020E")]
		public EnvironmentType EnvironmentType
		{
			[Token(Token = "0x6000E6A")]
			[Address(RVA = "0x17E6884", Offset = "0x17E6884", VA = "0x17E6884", Slot = "6")]
			[CompilerGenerated]
			get
			{
				return default(EnvironmentType);
			}
			[Token(Token = "0x6000E6B")]
			[Address(RVA = "0x17E688C", Offset = "0x17E688C", VA = "0x17E688C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700020F")]
		public EducationLevel EducationLevel
		{
			[Token(Token = "0x6000E6C")]
			[Address(RVA = "0x17E6894", Offset = "0x17E6894", VA = "0x17E6894", Slot = "7")]
			[CompilerGenerated]
			get
			{
				return default(EducationLevel);
			}
			[Token(Token = "0x6000E6D")]
			[Address(RVA = "0x17E689C", Offset = "0x17E689C", VA = "0x17E689C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6000E6E")]
		[Address(RVA = "0x17E68A4", Offset = "0x17E68A4", VA = "0x17E68A4")]
		public PlayerPrefsCacheModel()
		{
		}
	}
	[Token(Token = "0x20002BC")]
	public static class PlayerPrefsCache
	{
		[Token(Token = "0x4000D75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static PlayerPrefsCacheModel _model;

		[Token(Token = "0x17000210")]
		public static IReadOnlyPlayerPrefsCacheModel Model
		{
			[Token(Token = "0x6000E6F")]
			[Address(RVA = "0x17E68AC", Offset = "0x17E68AC", VA = "0x17E68AC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E70")]
		[Address(RVA = "0x17E6954", Offset = "0x17E6954", VA = "0x17E6954")]
		private static PlayerPrefsCacheModel Initialize(PlayerPrefsCacheModel playerPrefsCacheModel)
		{
			return null;
		}

		[Token(Token = "0x6000E71")]
		[Address(RVA = "0x17E6AB4", Offset = "0x17E6AB4", VA = "0x17E6AB4")]
		public static void SetMovementType(VR.Input.MovementType value)
		{
		}

		[Token(Token = "0x6000E72")]
		[Address(RVA = "0x17E6B3C", Offset = "0x17E6B3C", VA = "0x17E6B3C")]
		public static void SetLocationType(LocationTypeApplication value)
		{
		}

		[Token(Token = "0x6000E73")]
		[Address(RVA = "0x17E6BC4", Offset = "0x17E6BC4", VA = "0x17E6BC4")]
		public static void SetEnvironmentType(EnvironmentType value)
		{
		}

		[Token(Token = "0x6000E74")]
		[Address(RVA = "0x17E6C4C", Offset = "0x17E6C4C", VA = "0x17E6C4C")]
		public static void SetEducationLevel(EducationLevel value)
		{
		}

		[Token(Token = "0x6000E75")]
		public static T GetEnum<T>(string key, T defaultValue)
		{
			return (T)null;
		}

		[Token(Token = "0x6000E76")]
		public static T ConvertToEnum<T>(int value, T defaultValue)
		{
			return (T)null;
		}
	}
	[Token(Token = "0x20002BD")]
	public static class Strings
	{
		[Token(Token = "0x4000D76")]
		public const string PACSConfig = "pacsconfig";

		[Token(Token = "0x4000D77")]
		public const string HoverOn = "hoveron";

		[Token(Token = "0x4000D78")]
		public const string HoverOff = "hoveroff";

		[Token(Token = "0x4000D79")]
		public const string MoveSearchResult = "MoveSearchResult";

		[Token(Token = "0x4000D7A")]
		public const string Click = "click";

		[Token(Token = "0x4000D7B")]
		public const string QuickActionList = "quickactionlist";

		[Token(Token = "0x4000D7C")]
		public const string Language = "contentlanguage";

		[Token(Token = "0x4000D7D")]
		public const string MovementType = "movementType";

		[Token(Token = "0x4000D7E")]
		public const string LocationType = "locationType";

		[Token(Token = "0x4000D7F")]
		public const string EnviromentType = "enviromentType";

		[Token(Token = "0x4000D80")]
		public const string SoundMuted = "soundsMuted";

		[Token(Token = "0x4000D81")]
		public const string SoundVolume = "soundsSettings";

		[Token(Token = "0x4000D82")]
		public const string MusicMuted = "musicMuted";

		[Token(Token = "0x4000D83")]
		public const string MusicVolume = "musicSettings";

		[Token(Token = "0x4000D84")]
		public const string ExportCsvPath = "exportcsv";

		[Token(Token = "0x4000D85")]
		public const string Passthrough = "passthrough";

		[Token(Token = "0x4000D86")]
		public const string EducationLevel = "educationlevel";

		[Token(Token = "0x4000D87")]
		public const string TutorialWasPlayed = "tutorialwasplayed";

		[Token(Token = "0x4000D88")]
		public const string OpenToolsClicked = "opentoolsclicked";

		[Token(Token = "0x4000D89")]
		public const string OpenModelsClicked = "openmodelsclicked";

		[Token(Token = "0x4000D8A")]
		public const string TutorialCompletedLectures = "tutorialcompletedlectures";

		[Token(Token = "0x4000D8B")]
		public const string SmoothCameraEnabled = "smoothcameraenabled";

		[Token(Token = "0x4000D8C")]
		public const string connectserverfailed = "connectserverfailed";

		[Token(Token = "0x4000D8D")]
		public const string connect_server_nopass = "connect_server_nopass";

		[Token(Token = "0x4000D8E")]
		public const string connect_server_wrongpass = "connect_server_wrongpass";

		[Token(Token = "0x4000D8F")]
		public const string connectionlost = "connectionlost";

		[Token(Token = "0x4000D90")]
		public const string generic_missing_desc = "genericmissingdesc";

		[Token(Token = "0x4000D91")]
		public const string name = "name";

		[Token(Token = "0x4000D92")]
		public const string email = "email";

		[Token(Token = "0x4000D93")]
		public const string label_nolocation = "labelnolocation";

		[Token(Token = "0x4000D94")]
		public const string welcome_back = "welcome_back";

		[Token(Token = "0x4000D95")]
		public const string text_reload = "textreload";

		[Token(Token = "0x4000D96")]
		public const string text_logout = "textlogout";

		[Token(Token = "0x4000D97")]
		public const string label_did_not_answer = "labeldidnotanswer";

		[Token(Token = "0x4000D98")]
		public const string label_test_choose_question = "labeltestchoosequestion";

		[Token(Token = "0x4000D99")]
		public const string default_info_monitor = "defaultinfomonitor";

		[Token(Token = "0x4000D9A")]
		public const string label_student_count = "labelstudentscount";

		[Token(Token = "0x4000D9B")]
		public const string label_loading = "labelloading";

		[Token(Token = "0x4000D9C")]
		public const string label_server_paused = "labelserverpaused";

		[Token(Token = "0x4000D9D")]
		public const string btn_fold = "btnfold";

		[Token(Token = "0x4000D9E")]
		public const string btn_unfold = "btnunfold";

		[Token(Token = "0x4000D9F")]
		public const string text_enterprice_only = "textenterpriceonly";

		[Token(Token = "0x4000DA0")]
		public const string text_client_name_invalid = "textclientnameinvalid";

		[Token(Token = "0x4000DA1")]
		public const string text_gratulation = "textchoosetest1";

		[Token(Token = "0x4000DA2")]
		public const string text_your_time = "textchoosetest2";

		[Token(Token = "0x4000DA3")]
		public const string text_wrong_answer_count = "textchoosetest3";

		[Token(Token = "0x4000DA4")]
		public const string text_start_new_test = "textchoosetest4";

		[Token(Token = "0x4000DA5")]
		public const string label_teacher = "labelteacher";

		[Token(Token = "0x4000DA6")]
		public const string tutorial_text_before = "tutorial_text_before";

		[Token(Token = "0x4000DA7")]
		public const string _tutorial = "btntutorial";

		[Token(Token = "0x4000DA8")]
		public const string label_animation_objects = "labelanimationobjects";

		[Token(Token = "0x4000DA9")]
		public const string OfflineLoaded = "offlineScene";

		[Token(Token = "0x4000DAA")]
		public const string logoutFailed = "logoutFailed";

		[Token(Token = "0x4000DAB")]
		public const string settingsJson = "settingsJson";

		[Token(Token = "0x4000DAC")]
		public const string statisticsJson = "statisticsJson";

		[Token(Token = "0x4000DAD")]
		public const string SinglePlayer = "singlePlayer";

		[Token(Token = "0x4000DAE")]
		public const string UiLanguage = "uilanguage";

		[Token(Token = "0x4000DAF")]
		public const string SoundSettings = "soundsSettings";

		[Token(Token = "0x4000DB0")]
		public const string MusicSettings = "musicSettings";

		[Token(Token = "0x4000DB1")]
		public const string CenterMode = "centerMode";

		[Token(Token = "0x4000DB2")]
		public const string connect_server_occupied = "connect_server_occupied";

		[Token(Token = "0x4000DB3")]
		public const string connect_server_failed = "connect_server_failed";

		[Token(Token = "0x4000DB4")]
		public const string connect_server_timeout = "connect_server_timeout";

		[Token(Token = "0x4000DB5")]
		public const string TEST_RUNNING = "testRunning";

		[Token(Token = "0x4000DB6")]
		public const string TEST_RUNNING_DESC = "testRunningDesc";

		[Token(Token = "0x4000DB7")]
		public const string nick = "nick";

		[Token(Token = "0x4000DB8")]
		public const string server_name = "server_name";

		[Token(Token = "0x4000DB9")]
		public const string server_pass = "server_pass";

		[Token(Token = "0x4000DBA")]
		public const string password = "password";

		[Token(Token = "0x4000DBB")]
		public const string btn_login = "btn_login";

		[Token(Token = "0x4000DBC")]
		public const string btn_create_server = "btn_create_server";

		[Token(Token = "0x4000DBD")]
		public const string btn_connect = "btn_connect";

		[Token(Token = "0x4000DBE")]
		public const string btn_ret = "btn_ret";

		[Token(Token = "0x4000DBF")]
		public const string test_insufficient_items = "test_insufficient_items";

		[Token(Token = "0x4000DC0")]
		public const string test_insufficient_items_desc = "test_insufficient_items_desc";

		[Token(Token = "0x4000DC1")]
		public const string score_label = "score_label";

		[Token(Token = "0x4000DC2")]
		public const string time_label = "time_label";

		[Token(Token = "0x4000DC3")]
		public const string repeat_password = "repeat_password";

		[Token(Token = "0x4000DC4")]
		public const string save_changes = "save_changes";

		[Token(Token = "0x4000DC5")]
		public const string btn_signin = "btn_signin";

		[Token(Token = "0x4000DC6")]
		public const string logging_wait = "logging_wait";

		[Token(Token = "0x4000DC7")]
		public const string error_not_logged_in = "error_not_logged_in";

		[Token(Token = "0x4000DC8")]
		public const string error_empty_password = "error_empty_password";

		[Token(Token = "0x4000DC9")]
		public const string error_empty_nick = "error_empty_nick";

		[Token(Token = "0x4000DCA")]
		public const string error_empty_server_name = "error_empty_server_name";

		[Token(Token = "0x4000DCB")]
		public const string error_no_internet = "error_no_internet";

		[Token(Token = "0x4000DCC")]
		public const string error_login_unsucessful = "error_login_unsucessful";

		[Token(Token = "0x4000DCD")]
		public const string error_login_no_user = "error_login_no_user";

		[Token(Token = "0x4000DCE")]
		public const string error_login_user_logged = "error_login_user_logged";

		[Token(Token = "0x4000DCF")]
		public const string msg_user_login_success = "msg_user_login_success";

		[Token(Token = "0x4000DD0")]
		public const string msg_user_login_error = "msg_user_login_error";

		[Token(Token = "0x4000DD1")]
		public const string msg_profile_updated = "msg_profile_updated";

		[Token(Token = "0x4000DD2")]
		public const string msg_profile_notupdated = "msg_profile_notupdated";

		[Token(Token = "0x4000DD3")]
		public const string error_different_password = "error_different_password";

		[Token(Token = "0x4000DD4")]
		public const string error_short_password = "error_short_password";

		[Token(Token = "0x4000DD5")]
		public const string error_empty_repeat_password = "error_empty_repeat_password";

		[Token(Token = "0x4000DD6")]
		public const string _tutorial_welcome = "tutorial_welcome";

		[Token(Token = "0x4000DD7")]
		public const string _tutorial_finish = "tutorial_finish";

		[Token(Token = "0x4000DD8")]
		public const string _tutorial_skip = "tutorial_skip";

		[Token(Token = "0x4000DD9")]
		public const string _tutorial_nosystems = "tutorial_nosystems";

		[Token(Token = "0x4000DDA")]
		public const string _tutorial_task_completed = "tutorial_task_completed";

		[Token(Token = "0x4000DDB")]
		public const string _tutorial_taskrotation = "tutorial_taskrotation";

		[Token(Token = "0x4000DDC")]
		public const string _tutorial_taskresetrotation = "tutorial_taskresetrotation";

		[Token(Token = "0x4000DDD")]
		public const string _tutorial_taskpick = "tutorial_taskpick";

		[Token(Token = "0x4000DDE")]
		public const string _tutorial_tasklabels = "tutorial_tasklabels";

		[Token(Token = "0x4000DDF")]
		public const string _tutorial_tasksystemswitch = "tutorial_tasksystemswitch";

		[Token(Token = "0x4000DE0")]
		public const string _tutorial_taskzooming = "tutorial_taskzooming";

		[Token(Token = "0x4000DE1")]
		public const string _tutorial_tasklayering = "tutorial_tasklayering";

		[Token(Token = "0x4000DE2")]
		public const string _tutorial_taskhide = "tutorial_taskhide";

		[Token(Token = "0x4000DE3")]
		public const string _tutorial_tasktest = "tutorial_tasktest";

		[Token(Token = "0x4000DE4")]
		public const string _tutorial_tasksearch = "tutorial_tasksearch";

		[Token(Token = "0x4000DE5")]
		public const string _tutorial_taskrotation_title = "tutorial_taskrotation_title";

		[Token(Token = "0x4000DE6")]
		public const string _tutorial_taskresetrotation_title = "tutorial_taskresetrotation_title";

		[Token(Token = "0x4000DE7")]
		public const string _tutorial_taskpick_title = "tutorial_taskpick_title";

		[Token(Token = "0x4000DE8")]
		public const string _tutorial_tasklabels_title = "tutorial_tasklabels_title";

		[Token(Token = "0x4000DE9")]
		public const string _tutorial_tasksystemswitch_title = "tutorial_tasksystemswitch_title";

		[Token(Token = "0x4000DEA")]
		public const string _tutorial_taskzooming_title = "tutorial_taskzooming_title";

		[Token(Token = "0x4000DEB")]
		public const string _tutorial_tasklayering_title = "tutorial_tasklayering_title";

		[Token(Token = "0x4000DEC")]
		public const string _tutorial_taskhide_title = "tutorial_taskhide_title";

		[Token(Token = "0x4000DED")]
		public const string _tutorial_tasktest_title = "tutorial_tasktest_title";

		[Token(Token = "0x4000DEE")]
		public const string _tutorial_tasksearch_title = "tutorial_tasksearch_title";

		[Token(Token = "0x4000DEF")]
		public const string _statistics_app_time = "statistics_app_time";

		[Token(Token = "0x4000DF0")]
		public const string _statistics_test_time = "statistics_test_time";

		[Token(Token = "0x4000DF1")]
		public const string _statistics_search_count = "statistics_search_count";

		[Token(Token = "0x4000DF2")]
		public const string _statistics_test_answers = "statistics_test_answers";

		[Token(Token = "0x4000DF3")]
		public const string _time_days = "time_days";

		[Token(Token = "0x4000DF4")]
		public const string _time_seconds = "time_seconds";

		[Token(Token = "0x4000DF5")]
		public const string _private = "private";

		[Token(Token = "0x4000DF6")]
		public const string _error = "error";

		[Token(Token = "0x4000DF7")]
		public const string _inap_not_retrieved = "inap_not_retrieved";

		[Token(Token = "0x4000DF8")]
		public const string _inap_initialize_failed = "inap_initialize_failed";

		[Token(Token = "0x4000DF9")]
		public const string _inap_purchase_failed = "inap_purchase_failed";

		[Token(Token = "0x4000DFA")]
		public const string _inap_purchase_failed_title = "inap_purchase_failed_title";

		[Token(Token = "0x4000DFB")]
		public const string _test_question_title = "test_question_title";

		[Token(Token = "0x4000DFC")]
		public const string _save_money = "<b>Save money!</b> You can buy all of systems with 30% discount";

		[Token(Token = "0x4000DFD")]
		public const string _btn_buy_all_systems = "Buy all systems";

		[Token(Token = "0x4000DFE")]
		public const string loggedinas = "loggedinas";

		[Token(Token = "0x4000DFF")]
		public const string licensetaken = "licensetaken";

		[Token(Token = "0x4000E00")]
		public const string licensenotvalid = "licensenotvalid";

		[Token(Token = "0x4000E01")]
		public const string loginfailed = "loginfailed";

		[Token(Token = "0x4000E02")]
		public const string loginvaluesinvalid = "loginvaluesinvalid";

		[Token(Token = "0x4000E03")]
		public const string valuesempty = "valuesempty";

		[Token(Token = "0x4000E04")]
		public const string connectionfailed = "connectionfailed";

		[Token(Token = "0x4000E05")]
		public const string buyitem = "buyitem";

		[Token(Token = "0x4000E06")]
		public const string btndismiss = "btndismiss";

		[Token(Token = "0x4000E07")]
		public const string btnbuy = "btnbuy";

		[Token(Token = "0x4000E08")]
		public const string btncancel = "btncancel";

		[Token(Token = "0x4000E09")]
		public const string textrating = "textrating";

		[Token(Token = "0x4000E0A")]
		public const string btnrestore = "btnrestore";

		[Token(Token = "0x4000E0B")]
		public const string btncontinue = "btncontinue";

		[Token(Token = "0x4000E0C")]
		public const string btnlesson = "btnlesson";

		[Token(Token = "0x4000E0D")]
		public const string dicomloadfailed = "dicomloadfailed";

		[Token(Token = "0x4000E0E")]
		public const string btnremoveobject = "btnremoveobject";

		[Token(Token = "0x4000E0F")]
		public const string Avatar = "Avatar";

		[Token(Token = "0x4000E10")]
		public const string playerName = "playerName";
	}
}
namespace VR.Search
{
	[Token(Token = "0x20002BE")]
	public class FaceToCamera : MonoBehaviour
	{
		[Token(Token = "0x6000E77")]
		[Address(RVA = "0x17E6CD4", Offset = "0x17E6CD4", VA = "0x17E6CD4")]
		private void Update()
		{
		}

		[Token(Token = "0x6000E78")]
		[Address(RVA = "0x17E6D48", Offset = "0x17E6D48", VA = "0x17E6D48")]
		public FaceToCamera()
		{
		}
	}
	[Token(Token = "0x20002BF")]
	public class InteractiveSearchResultButton : MonoBehaviour, IGazeable, IClickable
	{
		[Token(Token = "0x4000E11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected AudioClip AudioClip;

		[Token(Token = "0x4000E12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected GameObject KeyButton;

		[Token(Token = "0x4000E13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private TextMeshProUGUI _text;

		[Token(Token = "0x4000E14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MeshRenderer _meshRenderer;

		[Token(Token = "0x4000E15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private MeshFilter _meshFilter;

		[Token(Token = "0x4000E16")]
		public const float MAX_SCALE = 0.1f;

		[Token(Token = "0x4000E18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Vector3 HoverScale;

		[Token(Token = "0x4000E19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public Vector3 OriginalScale;

		[Token(Token = "0x4000E1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private TweenerCore<Vector3, Vector3, VectorOptions> _tweener;

		[Token(Token = "0x17000211")]
		public AnatomyItem AnatomyItem
		{
			[Token(Token = "0x6000E79")]
			[Address(RVA = "0x17E6D50", Offset = "0x17E6D50", VA = "0x17E6D50")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E7A")]
			[Address(RVA = "0x17E6D58", Offset = "0x17E6D58", VA = "0x17E6D58")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000212")]
		public TextMeshProUGUI Text
		{
			[Token(Token = "0x6000E7B")]
			[Address(RVA = "0x17E6D60", Offset = "0x17E6D60", VA = "0x17E6D60")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000213")]
		public MeshRenderer MeshRenderer
		{
			[Token(Token = "0x6000E7C")]
			[Address(RVA = "0x17E6D68", Offset = "0x17E6D68", VA = "0x17E6D68")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000214")]
		public MeshFilter MeshFilter
		{
			[Token(Token = "0x6000E7D")]
			[Address(RVA = "0x17E6D70", Offset = "0x17E6D70", VA = "0x17E6D70")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000215")]
		public GameObject Model
		{
			[Token(Token = "0x6000E7E")]
			[Address(RVA = "0x17E6D78", Offset = "0x17E6D78", VA = "0x17E6D78")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000216")]
		public bool FocusEnabled
		{
			[Token(Token = "0x6000E82")]
			[Address(RVA = "0x17E6F00", Offset = "0x17E6F00", VA = "0x17E6F00", Slot = "4")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000E83")]
			[Address(RVA = "0x17E6F08", Offset = "0x17E6F08", VA = "0x17E6F08")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000217")]
		public bool ClickEnabled
		{
			[Token(Token = "0x6000E85")]
			[Address(RVA = "0x17E6F90", Offset = "0x17E6F90", VA = "0x17E6F90", Slot = "6")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000E86")]
			[Address(RVA = "0x17E6F98", Offset = "0x17E6F98", VA = "0x17E6F98")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1400001E")]
		public event Action Clicked
		{
			[Token(Token = "0x6000E7F")]
			[Address(RVA = "0x17E6D80", Offset = "0x17E6D80", VA = "0x17E6D80")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6000E80")]
			[Address(RVA = "0x17E6E1C", Offset = "0x17E6E1C", VA = "0x17E6E1C")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6000E81")]
		[Address(RVA = "0x17E6EB8", Offset = "0x17E6EB8", VA = "0x17E6EB8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000E84")]
		[Address(RVA = "0x17E6F14", Offset = "0x17E6F14", VA = "0x17E6F14", Slot = "5")]
		public void SetFocused(bool value)
		{
		}

		[Token(Token = "0x6000E87")]
		[Address(RVA = "0x17E6FA4", Offset = "0x17E6FA4", VA = "0x17E6FA4", Slot = "7")]
		public void OnClick()
		{
		}

		[Token(Token = "0x6000E88")]
		[Address(RVA = "0x17E7068", Offset = "0x17E7068", VA = "0x17E7068")]
		public InteractiveSearchResultButton()
		{
		}
	}
	[Token(Token = "0x20002C0")]
	public class Rotate : MonoBehaviour
	{
		[Token(Token = "0x4000E1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _oneLoopTime;

		[Token(Token = "0x4000E1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private Vector3 _axis;

		[Token(Token = "0x6000E89")]
		[Address(RVA = "0x17E7078", Offset = "0x17E7078", VA = "0x17E7078")]
		private void Update()
		{
		}

		[Token(Token = "0x6000E8A")]
		[Address(RVA = "0x17E70E4", Offset = "0x17E70E4", VA = "0x17E70E4")]
		public Rotate()
		{
		}
	}
	[Token(Token = "0x20002C1")]
	public class Search : MonoBehaviour
	{
		[StructLayout(3)]
		[Token(Token = "0x20002C3")]
		[CompilerGenerated]
		private struct <Start>d__12 : IAsyncStateMachine
		{
			[Token(Token = "0x4000E3C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000E3D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4000E3E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Search <>4__this;

			[Token(Token = "0x4000E3F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TaskAwaiter<bool> <>u__1;

			[Token(Token = "0x6000EA8")]
			[Address(RVA = "0x17E7BF0", Offset = "0x17E7BF0", VA = "0x17E7BF0", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000EA9")]
			[Address(RVA = "0x17E81D4", Offset = "0x17E81D4", VA = "0x17E81D4", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x20002C4")]
		[CompilerGenerated]
		private sealed class <>c__DisplayClass14_0
		{
			[Token(Token = "0x4000E40")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Search <>4__this;

			[Token(Token = "0x4000E41")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public IAnatomyModuleProvider anatomyModuleProvider;

			[Token(Token = "0x4000E42")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public IAnatomyDatabase anatomyDatabase;

			[Token(Token = "0x6000EAA")]
			[Address(RVA = "0x17E81E0", Offset = "0x17E81E0", VA = "0x17E81E0")]
			public <>c__DisplayClass14_0()
			{
			}

			[Token(Token = "0x6000EAB")]
			[Address(RVA = "0x17E81E8", Offset = "0x17E81E8", VA = "0x17E81E8")]
			internal void <Subscribe>b__4(string _)
			{
			}

			[Token(Token = "0x6000EAC")]
			[Address(RVA = "0x17E8200", Offset = "0x17E8200", VA = "0x17E8200")]
			internal bool <Subscribe>b__6(LocalizationLanguage x)
			{
				return default(bool);
			}

			[Token(Token = "0x6000EAD")]
			[Address(RVA = "0x17E823C", Offset = "0x17E823C", VA = "0x17E823C")]
			internal void <Subscribe>b__7(LocalizationLanguage val)
			{
			}

			[Token(Token = "0x6000EAE")]
			[Address(RVA = "0x17E8268", Offset = "0x17E8268", VA = "0x17E8268")]
			internal bool <Subscribe>b__8()
			{
				return default(bool);
			}

			[Token(Token = "0x6000EAF")]
			[Address(RVA = "0x17E830C", Offset = "0x17E830C", VA = "0x17E830C")]
			internal void <Subscribe>b__9()
			{
			}

			[Token(Token = "0x6000EB0")]
			[Address(RVA = "0x17E8A68", Offset = "0x17E8A68", VA = "0x17E8A68")]
			internal void <Subscribe>b__11(DatabaseType val)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20002C5")]
		[CompilerGenerated]
		private struct <Subscribe>d__14 : IAsyncStateMachine
		{
			[Token(Token = "0x4000E43")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000E44")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder<bool> <>t__builder;

			[Token(Token = "0x4000E45")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Search <>4__this;

			[Token(Token = "0x4000E46")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private <>c__DisplayClass14_0 <>8__1;

			[Token(Token = "0x4000E47")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x6000EB1")]
			[Address(RVA = "0x17E8BBC", Offset = "0x17E8BBC", VA = "0x17E8BBC", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000EB2")]
			[Address(RVA = "0x17E9E00", Offset = "0x17E9E00", VA = "0x17E9E00", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20002C8")]
		[CompilerGenerated]
		private struct <SearchByString>d__16 : IAsyncStateMachine
		{
			[Token(Token = "0x4000E4C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000E4D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4000E4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string text;

			[Token(Token = "0x4000E4F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Search <>4__this;

			[Token(Token = "0x4000E50")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private CancellationToken <cancellationToken>5__2;

			[Token(Token = "0x4000E51")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private TaskAwaiter<List<AnatomyItem>> <>u__1;

			[Token(Token = "0x6000EB8")]
			[Address(RVA = "0x17EAA7C", Offset = "0x17EAA7C", VA = "0x17EAA7C", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000EB9")]
			[Address(RVA = "0x17EB46C", Offset = "0x17EB46C", VA = "0x17EB46C", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4000E20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private InteractiveKeyboard _keyboard;

		[Token(Token = "0x4000E21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private SearchResults _searchResults;

		[Token(Token = "0x4000E22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Button _deleteButton;

		[Token(Token = "0x4000E23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private TMP_InputField _searchInputField;

		[Token(Token = "0x4000E24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private int _resultCount;

		[Token(Token = "0x4000E25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private NetworkModuleProviderFactory _moduleProviderFactory;

		[Token(Token = "0x4000E26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private LocalizedTextMeshProGui _headerText;

		[Token(Token = "0x4000E27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool _initialized;

		[Token(Token = "0x4000E28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private readonly CompositeDisposable _disposable;

		[Token(Token = "0x4000E29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private CancellationTokenSource _searchCancellationTokenSource;

		[Token(Token = "0x17000218")]
		public bool SearchWindowEnabled
		{
			[Token(Token = "0x6000E8B")]
			[Address(RVA = "0x17E714C", Offset = "0x17E714C", VA = "0x17E714C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000E8C")]
		[Address(RVA = "0x17E716C", Offset = "0x17E716C", VA = "0x17E716C")]
		[AsyncStateMachine(typeof(<Start>d__12))]
		private void Start()
		{
		}

		[Token(Token = "0x6000E8D")]
		[Address(RVA = "0x17E7224", Offset = "0x17E7224", VA = "0x17E7224")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000E8E")]
		[Address(RVA = "0x17E7254", Offset = "0x17E7254", VA = "0x17E7254")]
		[AsyncStateMachine(typeof(<Subscribe>d__14))]
		private Task<bool> Subscribe()
		{
			return null;
		}

		[Token(Token = "0x6000E8F")]
		[Address(RVA = "0x17E736C", Offset = "0x17E736C", VA = "0x17E736C")]
		private void ResetSearch()
		{
		}

		[Token(Token = "0x6000E90")]
		[Address(RVA = "0x17E76C4", Offset = "0x17E76C4", VA = "0x17E76C4")]
		[AsyncStateMachine(typeof(<SearchByString>d__16))]
		private void SearchByString(string text)
		{
		}

		[Token(Token = "0x6000E91")]
		[Address(RVA = "0x17E779C", Offset = "0x17E779C", VA = "0x17E779C")]
		public Search()
		{
		}
	}
	[Token(Token = "0x20002C9")]
	public class SearchResults : MonoBehaviour
	{
		[StructLayout(3)]
		[Token(Token = "0x20002CC")]
		[CompilerGenerated]
		private struct <SetAnatomyItem>d__34 : IAsyncStateMachine
		{
			[Token(Token = "0x4000E71")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000E72")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4000E73")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SearchResults <>4__this;

			[Token(Token = "0x4000E74")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public AnatomyItem item;

			[Token(Token = "0x4000E75")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public InteractiveSearchResultButton button;

			[Token(Token = "0x4000E76")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private bool <isLicenseValid>5__2;

			[Token(Token = "0x4000E77")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private IInstanceProvider<IInteractiveAnatomyItemInstanceCollection> <instanceProvider>5__3;

			[Token(Token = "0x4000E78")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private IInteractiveAnatomyItemInstance <itemInstanceParent>5__4;

			[Token(Token = "0x4000E79")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private TaskAwaiter<IInteractiveAnatomyItemInstanceCollection> <>u__1;

			[Token(Token = "0x6000EE1")]
			[Address(RVA = "0x17EE94C", Offset = "0x17EE94C", VA = "0x17EE94C", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000EE2")]
			[Address(RVA = "0x17EFDD8", Offset = "0x17EFDD8", VA = "0x17EFDD8", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20002CD")]
		[CompilerGenerated]
		private struct <SelectSearchResultAsync>d__35 : IAsyncStateMachine
		{
			[Token(Token = "0x4000E7A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000E7B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4000E7C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SearchResults <>4__this;

			[Token(Token = "0x4000E7D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public InteractiveSearchResultButton button;

			[Token(Token = "0x4000E7E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private IInteractiveAnatomyItemInstance <itemInstance>5__2;

			[Token(Token = "0x4000E7F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private IPlayerHandler <playerHandler>5__3;

			[Token(Token = "0x4000E80")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x6000EE3")]
			[Address(RVA = "0x17EFDE4", Offset = "0x17EFDE4", VA = "0x17EFDE4", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000EE4")]
			[Address(RVA = "0x17F0E28", Offset = "0x17F0E28", VA = "0x17F0E28", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20002CF")]
		[CompilerGenerated]
		private struct <UnHighlightLastResult>d__37 : IAsyncStateMachine
		{
			[Token(Token = "0x4000E84")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000E85")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4000E86")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SearchResults <>4__this;

			[Token(Token = "0x4000E87")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x6000EE8")]
			[Address(RVA = "0x17F0F94", Offset = "0x17F0F94", VA = "0x17F0F94", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000EE9")]
			[Address(RVA = "0x17F12E4", Offset = "0x17F12E4", VA = "0x17F12E4", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4000E52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Button _nextPageSearchButton;

		[Token(Token = "0x4000E53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Button _prevPageSearchButton;

		[Token(Token = "0x4000E54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Toggle _searchMoveToggle;

		[Token(Token = "0x4000E55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private InteractiveSearchResultButton _resultButtonPrefab;

		[Token(Token = "0x4000E56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GameObject _contentParent;

		[Token(Token = "0x4000E57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private GameObject _paging;

		[Token(Token = "0x4000E58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private TextMeshProUGUI _actual;

		[Token(Token = "0x4000E59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private TextMeshProUGUI _max;

		[Token(Token = "0x4000E5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private LocalizedTextMeshProGui _defaultText;

		[Token(Token = "0x4000E5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private InteractiveKey _buttonEnter;

		[Token(Token = "0x4000E5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private HighlightController _markSphere;

		[Token(Token = "0x4000E5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private NetworkModuleProviderFactory _moduleProviderFactory;

		[Token(Token = "0x4000E5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private AnatomyLicenseValidatorBehaviour _anatomyLicenseValidator;

		[Token(Token = "0x4000E5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private StorePanel _storePanel;

		[Token(Token = "0x4000E60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private AudioClip _resultMove;

		[Token(Token = "0x4000E61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private InteractiveAnatomyItemInstanceCopy _copyPrefab;

		[Token(Token = "0x4000E62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private readonly CompositeDisposable _disposable;

		[Token(Token = "0x4000E63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private readonly List<InteractiveSearchResultButton> _results;

		[Token(Token = "0x4000E64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private List<AnatomyItem> _resultAnatomyItems;

		[Token(Token = "0x4000E65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private int _pageSize;

		[Token(Token = "0x4000E67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public readonly ReactiveProperty<int> CurrentPage;

		[Token(Token = "0x4000E68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public readonly ReactiveProperty<int> MaxPage;

		[Token(Token = "0x4000E69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private IAnatomyDatabase _anatomyDatabase;

		[Token(Token = "0x17000219")]
		public bool ResultMoving
		{
			[Token(Token = "0x6000EBA")]
			[Address(RVA = "0x17EB478", Offset = "0x17EB478", VA = "0x17EB478")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000EBB")]
			[Address(RVA = "0x17EB480", Offset = "0x17EB480", VA = "0x17EB480")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700021A")]
		private IAnatomyDatabase AnatomyDatabase
		{
			[Token(Token = "0x6000EBC")]
			[Address(RVA = "0x17EB48C", Offset = "0x17EB48C", VA = "0x17EB48C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000EBD")]
		[Address(RVA = "0x17EB584", Offset = "0x17EB584", VA = "0x17EB584")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000EBE")]
		[Address(RVA = "0x17EB6E4", Offset = "0x17EB6E4", VA = "0x17EB6E4")]
		private void Start()
		{
		}

		[Token(Token = "0x6000EBF")]
		[Address(RVA = "0x17EC2D0", Offset = "0x17EC2D0", VA = "0x17EC2D0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000EC0")]
		[Address(RVA = "0x17EB19C", Offset = "0x17EB19C", VA = "0x17EB19C")]
		public void SetResults(List<AnatomyItem> items)
		{
		}

		[Token(Token = "0x6000EC1")]
		[Address(RVA = "0x17E74E0", Offset = "0x17E74E0", VA = "0x17E74E0")]
		public void ResetResults()
		{
		}

		[Token(Token = "0x6000EC2")]
		[Address(RVA = "0x17EC2EC", Offset = "0x17EC2EC", VA = "0x17EC2EC")]
		[AsyncStateMachine(typeof(<SetAnatomyItem>d__34))]
		public void SetAnatomyItem(InteractiveSearchResultButton button, AnatomyItem item)
		{
		}

		[Token(Token = "0x6000EC3")]
		[Address(RVA = "0x17EC3D8", Offset = "0x17EC3D8", VA = "0x17EC3D8")]
		[AsyncStateMachine(typeof(<SelectSearchResultAsync>d__35))]
		private void SelectSearchResultAsync(InteractiveSearchResultButton button)
		{
		}

		[Token(Token = "0x6000EC4")]
		[Address(RVA = "0x17EC4B0", Offset = "0x17EC4B0", VA = "0x17EC4B0")]
		public void MoveModelToPosition(IInteractiveAnatomyItemInstance itemInstance, InteractiveSearchResultButton button)
		{
		}

		[Token(Token = "0x6000EC5")]
		[Address(RVA = "0x17E7428", Offset = "0x17E7428", VA = "0x17E7428")]
		[AsyncStateMachine(typeof(<UnHighlightLastResult>d__37))]
		public void UnHighlightLastResult()
		{
		}

		[Token(Token = "0x6000EC6")]
		[Address(RVA = "0x17ECB38", Offset = "0x17ECB38", VA = "0x17ECB38")]
		private void UpdateResult(AnatomyItem item, InteractiveSearchResultButton result)
		{
		}

		[Token(Token = "0x6000EC7")]
		[Address(RVA = "0x17ECB88", Offset = "0x17ECB88", VA = "0x17ECB88")]
		public void NextPage()
		{
		}

		[Token(Token = "0x6000EC8")]
		[Address(RVA = "0x17ECE0C", Offset = "0x17ECE0C", VA = "0x17ECE0C")]
		public void PrevPage()
		{
		}

		[Token(Token = "0x6000EC9")]
		[Address(RVA = "0x17ED084", Offset = "0x17ED084", VA = "0x17ED084")]
		public SearchResults()
		{
		}
	}
}
namespace VR.QuizUtilities.UI
{
	[Token(Token = "0x20002D0")]
	public class AnswerElement : MonoBehaviour
	{
		[Token(Token = "0x4000E88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle Toggle;

		[Token(Token = "0x4000E89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextMeshProUGUI Index;

		[Token(Token = "0x4000E8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TextMeshProUGUI Text;

		[Token(Token = "0x6000EEA")]
		[Address(RVA = "0x17F12F0", Offset = "0x17F12F0", VA = "0x17F12F0")]
		public AnswerElement()
		{
		}
	}
	[Token(Token = "0x20002D1")]
	public class ParticipantElement : MonoBehaviour
	{
		[Token(Token = "0x4000E8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TextMeshProUGUI Name;

		[Token(Token = "0x4000E8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextMeshProUGUI Result;

		[Token(Token = "0x4000E8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Button ShowAnswers;

		[Token(Token = "0x6000EEB")]
		[Address(RVA = "0x17F12F8", Offset = "0x17F12F8", VA = "0x17F12F8")]
		public ParticipantElement()
		{
		}
	}
	[Token(Token = "0x20002D2")]
	public class QuestionElement : MonoBehaviour
	{
		[Token(Token = "0x4000E8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TextMeshProUGUI Id;

		[Token(Token = "0x4000E8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextMeshProUGUI Text;

		[Token(Token = "0x4000E90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Toggle Expand;

		[Token(Token = "0x4000E91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public RectTransform Answers;

		[Token(Token = "0x6000EEC")]
		[Address(RVA = "0x17F1300", Offset = "0x17F1300", VA = "0x17F1300")]
		public QuestionElement()
		{
		}
	}
	[Token(Token = "0x20002D3")]
	public class QuizElement : MonoBehaviour
	{
		[Token(Token = "0x4000E92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TextMeshProUGUI Name;

		[Token(Token = "0x4000E93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextMeshProUGUI Author;

		[Token(Token = "0x4000E94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TextMeshProUGUI QuestionCount;

		[Token(Token = "0x4000E95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Toggle Toggle;

		[Token(Token = "0x6000EED")]
		[Address(RVA = "0x17F1308", Offset = "0x17F1308", VA = "0x17F1308")]
		public QuizElement()
		{
		}
	}
	[Token(Token = "0x20002D4")]
	public class QuizPanelHandler : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20002D5")]
		private class PageReferences
		{
			[Token(Token = "0x4000EB7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Page Page;

			[Token(Token = "0x4000EB8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Transform Footer;

			[Token(Token = "0x6000F09")]
			[Address(RVA = "0x17F4790", Offset = "0x17F4790", VA = "0x17F4790")]
			public PageReferences()
			{
			}
		}

		[Token(Token = "0x20002D6")]
		private enum Page
		{
			[Token(Token = "0x4000EBA")]
			None,
			[Token(Token = "0x4000EBB")]
			TeacherQuizSelection,
			[Token(Token = "0x4000EBC")]
			TeacherQuizOverview,
			[Token(Token = "0x4000EBD")]
			TeacherStudentsAnswers,
			[Token(Token = "0x4000EBE")]
			TeacherQuestions,
			[Token(Token = "0x4000EBF")]
			StudentQuestions
		}

		[Token(Token = "0x20002D8")]
		[CompilerGenerated]
		private sealed class <>c__DisplayClass37_0
		{
			[Token(Token = "0x4000EC9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public QuizPanelHandler <>4__this;

			[Token(Token = "0x4000ECA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public IQuizModule quizModule;

			[Token(Token = "0x6000F14")]
			[Address(RVA = "0x17F4C94", Offset = "0x17F4C94", VA = "0x17F4C94")]
			public <>c__DisplayClass37_0()
			{
			}

			[Token(Token = "0x6000F15")]
			[Address(RVA = "0x17F4C9C", Offset = "0x17F4C9C", VA = "0x17F4C9C")]
			internal void <Start>b__0(float val)
			{
			}

			[Token(Token = "0x6000F16")]
			[Address(RVA = "0x17F4D6C", Offset = "0x17F4D6C", VA = "0x17F4D6C")]
			internal bool <Start>b__1()
			{
				return default(bool);
			}

			[Token(Token = "0x6000F17")]
			[Address(RVA = "0x17F4E64", Offset = "0x17F4E64", VA = "0x17F4E64")]
			internal double <Start>b__2(long val)
			{
				return default(double);
			}

			[Token(Token = "0x6000F18")]
			[Address(RVA = "0x17F502C", Offset = "0x17F502C", VA = "0x17F502C")]
			internal void <Start>b__3(double val)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20002D9")]
		[CompilerGenerated]
		private struct <Start>d__37 : IAsyncStateMachine
		{
			[Token(Token = "0x4000ECB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000ECC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4000ECD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public QuizPanelHandler <>4__this;

			[Token(Token = "0x4000ECE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private <>c__DisplayClass37_0 <>8__1;

			[Token(Token = "0x4000ECF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x6000F19")]
			[Address(RVA = "0x17F52A8", Offset = "0x17F52A8", VA = "0x17F52A8", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000F1A")]
			[Address(RVA = "0x17F5BAC", Offset = "0x17F5BAC", VA = "0x17F5BAC", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20002DC")]
		[CompilerGenerated]
		private struct <OnStartQuizClicked>d__41 : IAsyncStateMachine
		{
			[Token(Token = "0x4000ED6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000ED7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4000ED8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public QuizPanelHandler <>4__this;

			[Token(Token = "0x4000ED9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x6000F1F")]
			[Address(RVA = "0x17F5F80", Offset = "0x17F5F80", VA = "0x17F5F80", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000F20")]
			[Address(RVA = "0x17F6734", Offset = "0x17F6734", VA = "0x17F6734", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20002E2")]
		[CompilerGenerated]
		private struct <StudentShowScoreAndExit>d__47 : IAsyncStateMachine
		{
			[Token(Token = "0x4000EEC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000EED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4000EEE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public QuizPanelHandler <>4__this;

			[Token(Token = "0x4000EEF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TaskAwaiter<IEnumerable<IAnswer>> <>u__1;

			[Token(Token = "0x6000F2B")]
			[Address(RVA = "0x17F7528", Offset = "0x17F7528", VA = "0x17F7528", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000F2C")]
			[Address(RVA = "0x17F7C48", Offset = "0x17F7C48", VA = "0x17F7C48", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20002E4")]
		[CompilerGenerated]
		private struct <DisplayTeacherQuizSelection>d__49 : IAsyncStateMachine
		{
			[Token(Token = "0x4000EF2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000EF3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4000EF4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public QuizPanelHandler <>4__this;

			[Token(Token = "0x4000EF5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public CancellationToken cancellationToken;

			[Token(Token = "0x4000EF6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private TaskAwaiter<Quiz[]> <>u__1;

			[Token(Token = "0x6000F2F")]
			[Address(RVA = "0x17F7C8C", Offset = "0x17F7C8C", VA = "0x17F7C8C", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000F30")]
			[Address(RVA = "0x17F82B4", Offset = "0x17F82B4", VA = "0x17F82B4", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20002E6")]
		[CompilerGenerated]
		private struct <DisplayTeacherQuizOverview>d__50 : IAsyncStateMachine
		{
			[Token(Token = "0x4000EF9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000EFA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4000EFB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public QuizPanelHandler <>4__this;

			[Token(Token = "0x4000EFC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public CancellationToken cancellationToken;

			[Token(Token = "0x4000EFD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private IQuizModule <quizModule>5__2;

			[Token(Token = "0x4000EFE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Dictionary<string, ParticipantElement> <results>5__3;

			[Token(Token = "0x4000EFF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private TaskAwaiter<IEnumerable<IAnswer>> <>u__1;

			[Token(Token = "0x4000F00")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private TaskAwaiter <>u__2;

			[Token(Token = "0x6000F33")]
			[Address(RVA = "0x17F8390", Offset = "0x17F8390", VA = "0x17F8390", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000F34")]
			[Address(RVA = "0x17F9014", Offset = "0x17F9014", VA = "0x17F9014", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20002EB")]
		[CompilerGenerated]
		private struct <DisplayTeacherStudentsAnswers>d__53 : IAsyncStateMachine
		{
			[Token(Token = "0x4000F0C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000F0D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4000F0E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public QuizPanelHandler <>4__this;

			[Token(Token = "0x4000F0F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public CancellationToken cancellationToken;

			[Token(Token = "0x4000F10")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private IQuizModule <quizModule>5__2;

			[Token(Token = "0x4000F11")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private TaskAwaiter<IEnumerable<IAnswer>> <>u__1;

			[Token(Token = "0x6000F3B")]
			[Address(RVA = "0x17F9398", Offset = "0x17F9398", VA = "0x17F9398", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000F3C")]
			[Address(RVA = "0x17F9F38", Offset = "0x17F9F38", VA = "0x17F9F38", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4000E96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private NetworkModuleProviderFactory _moduleProviderFactory;

		[Token(Token = "0x4000E97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private CloudServiceProviderBehaviour _cloudServiceProvider;

		[Token(Token = "0x4000E98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private LicenseManagerBehaviour _licenseManagerBehaviour;

		[Token(Token = "0x4000E99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private ScrollRect _verticalLayoutScrollRect;

		[Token(Token = "0x4000E9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GameObject _verticalLayoutScrollRectHeader;

		[Token(Token = "0x4000E9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private LocalizedTextMeshProGui _subHeaderText;

		[Token(Token = "0x4000E9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private LocalizedTextMeshProGui _studentTimer;

		[Token(Token = "0x4000E9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private TextMeshProUGUI _quizDurationText;

		[Token(Token = "0x4000E9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private QuizElement _quizHeaderPrefab;

		[Token(Token = "0x4000E9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private QuizElement _quizElementPrefab;

		[Token(Token = "0x4000EA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private ParticipantElement _participantHeaderPrefab;

		[Token(Token = "0x4000EA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private ParticipantElement _participantElementPrefab;

		[Token(Token = "0x4000EA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private QuestionElement _questionElementPrefab;

		[Token(Token = "0x4000EA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private AnswerElement _answerElementPrefab;

		[Token(Token = "0x4000EA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private Button _backButton;

		[Token(Token = "0x4000EA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private Button _startQuizButton;

		[Token(Token = "0x4000EA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private Button _cancelQuizButton;

		[Token(Token = "0x4000EA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private Button _closeQuizButton;

		[Token(Token = "0x4000EA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private Button _showQuestionsButton;

		[Token(Token = "0x4000EA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private Button _studentFinishQuiz;

		[Token(Token = "0x4000EAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private Slider _timerSlider;

		[Token(Token = "0x4000EAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private PageReferences[] _pageReferences;

		[Token(Token = "0x4000EAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private ToggleGroup _quizToggleGroup;

		[Token(Token = "0x4000EAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private GameObject _footer;

		[Token(Token = "0x4000EAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private string _selectedParticipantId;

		[Token(Token = "0x4000EAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private Quiz _selectedQuiz;

		[Token(Token = "0x4000EB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private CancellationTokenSource _pageCancellationTokenSource;

		[Token(Token = "0x4000EB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private Page _activePage;

		[Token(Token = "0x4000EB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Transform _activeFooter;

		[Token(Token = "0x4000EB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly string[] Alphabet;

		[Token(Token = "0x4000EB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private readonly CancellationTokenSource _disposeCancellationTokenSource;

		[Token(Token = "0x4000EB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private readonly CompositeDisposable _disposable;

		[Token(Token = "0x4000EB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private Dictionary<Page, PageReferences> _pageReferencesDict;

		[Token(Token = "0x1700021B")]
		private Dictionary<Page, PageReferences> PageReferencesDict
		{
			[Token(Token = "0x6000EEE")]
			[Address(RVA = "0x17F1310", Offset = "0x17F1310", VA = "0x17F1310")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700021C")]
		private static bool IsTeacher
		{
			[Token(Token = "0x6000F03")]
			[Address(RVA = "0x17F172C", Offset = "0x17F172C", VA = "0x17F172C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000EEF")]
		[Address(RVA = "0x17F143C", Offset = "0x17F143C", VA = "0x17F143C")]
		[AsyncStateMachine(typeof(<Start>d__37))]
		private void Start()
		{
		}

		[Token(Token = "0x6000EF0")]
		[Address(RVA = "0x17F14F0", Offset = "0x17F14F0", VA = "0x17F14F0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000EF1")]
		[Address(RVA = "0x17F16B8", Offset = "0x17F16B8", VA = "0x17F16B8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000EF2")]
		[Address(RVA = "0x17F16BC", Offset = "0x17F16BC", VA = "0x17F16BC")]
		public void RefreshPanel()
		{
		}

		[Token(Token = "0x6000EF3")]
		[Address(RVA = "0x17F1B0C", Offset = "0x17F1B0C", VA = "0x17F1B0C")]
		[AsyncStateMachine(typeof(<OnStartQuizClicked>d__41))]
		private void OnStartQuizClicked()
		{
		}

		[Token(Token = "0x6000EF4")]
		[Address(RVA = "0x17F1BC4", Offset = "0x17F1BC4", VA = "0x17F1BC4")]
		private void OnCloseQuizClicked()
		{
		}

		[Token(Token = "0x6000EF5")]
		[Address(RVA = "0x17F1FA8", Offset = "0x17F1FA8", VA = "0x17F1FA8")]
		private void OnCancelClicked()
		{
		}

		[Token(Token = "0x6000EF6")]
		[Address(RVA = "0x17F236C", Offset = "0x17F236C", VA = "0x17F236C")]
		private void OnBackClicked()
		{
		}

		[Token(Token = "0x6000EF7")]
		[Address(RVA = "0x17F23EC", Offset = "0x17F23EC", VA = "0x17F23EC")]
		private void OnShowQuestionsClicked()
		{
		}

		[Token(Token = "0x6000EF8")]
		[Address(RVA = "0x17F245C", Offset = "0x17F245C", VA = "0x17F245C")]
		private void OnStudentFinishQuiz()
		{
		}

		[Token(Token = "0x6000EF9")]
		[Address(RVA = "0x17F261C", Offset = "0x17F261C", VA = "0x17F261C")]
		[AsyncStateMachine(typeof(<StudentShowScoreAndExit>d__47))]
		private void StudentShowScoreAndExit()
		{
		}

		[Token(Token = "0x6000EFA")]
		[Address(RVA = "0x17F1734", Offset = "0x17F1734", VA = "0x17F1734")]
		private void SetActivePage(Page page)
		{
		}

		[Token(Token = "0x6000EFB")]
		[Address(RVA = "0x17F29D4", Offset = "0x17F29D4", VA = "0x17F29D4")]
		[AsyncStateMachine(typeof(<DisplayTeacherQuizSelection>d__49))]
		private void DisplayTeacherQuizSelection(CancellationToken cancellationToken)
		{
		}

		[Token(Token = "0x6000EFC")]
		[Address(RVA = "0x17F2AA8", Offset = "0x17F2AA8", VA = "0x17F2AA8")]
		[AsyncStateMachine(typeof(<DisplayTeacherQuizOverview>d__50))]
		private void DisplayTeacherQuizOverview(CancellationToken cancellationToken)
		{
		}

		[Token(Token = "0x6000EFD")]
		[Address(RVA = "0x17F3040", Offset = "0x17F3040", VA = "0x17F3040")]
		private void DisplayStudentQuestions()
		{
		}

		[Token(Token = "0x6000EFE")]
		[Address(RVA = "0x17F2C5C", Offset = "0x17F2C5C", VA = "0x17F2C5C")]
		private void DisplayTeacherQuestions()
		{
		}

		[Token(Token = "0x6000EFF")]
		[Address(RVA = "0x17F2B84", Offset = "0x17F2B84", VA = "0x17F2B84")]
		[AsyncStateMachine(typeof(<DisplayTeacherStudentsAnswers>d__53))]
		private void DisplayTeacherStudentsAnswers(CancellationToken cancellationToken)
		{
		}

		[Token(Token = "0x6000F00")]
		[Address(RVA = "0x17F35C0", Offset = "0x17F35C0", VA = "0x17F35C0")]
		private QuestionElement SpawnQuestion(byte questionId, IQuizModule quizModule, string questionText)
		{
			return null;
		}

		[Token(Token = "0x6000F01")]
		[Address(RVA = "0x17F3704", Offset = "0x17F3704", VA = "0x17F3704")]
		private float CountScore(IEnumerable<IAnswer> quizAnswers)
		{
			return default(float);
		}

		[Token(Token = "0x6000F02")]
		[Address(RVA = "0x17F26D4", Offset = "0x17F26D4", VA = "0x17F26D4")]
		private static void DestroyChildren(Transform transform)
		{
		}

		[Token(Token = "0x6000F04")]
		[Address(RVA = "0x17F3F84", Offset = "0x17F3F84", VA = "0x17F3F84")]
		public QuizPanelHandler()
		{
		}
	}
}
namespace VR.Presenters
{
	[Token(Token = "0x20002EC")]
	public interface IPlayerHandler
	{
		[Token(Token = "0x1700021D")]
		Camera Camera
		{
			[Token(Token = "0x6000F3D")]
			get;
		}

		[Token(Token = "0x1700021E")]
		Transform Transform
		{
			[Token(Token = "0x6000F3E")]
			get;
		}

		[Token(Token = "0x1700021F")]
		FadeAggregator FadeAggregator
		{
			[Token(Token = "0x6000F3F")]
			get;
		}

		[Token(Token = "0x17000220")]
		IFader CoreFader
		{
			[Token(Token = "0x6000F40")]
			get;
		}

		[Token(Token = "0x17000221")]
		FadeAggregator.FadeAggregatorFader PrimaryFader
		{
			[Token(Token = "0x6000F41")]
			get;
		}

		[Token(Token = "0x17000222")]
		NavMeshAgent Agent
		{
			[Token(Token = "0x6000F42")]
			get;
		}

		[Token(Token = "0x17000223")]
		CameraOverlayHandler CameraOverlayHandler
		{
			[Token(Token = "0x6000F45")]
			get;
		}

		[Token(Token = "0x17000224")]
		IPassthroughLayer UnderlayPassthroughLayer
		{
			[Token(Token = "0x6000F46")]
			get;
			[Token(Token = "0x6000F47")]
			set;
		}

		[Token(Token = "0x17000225")]
		IPassthroughLayer OverlayPassthroughLayer
		{
			[Token(Token = "0x6000F48")]
			get;
			[Token(Token = "0x6000F49")]
			set;
		}

		[Token(Token = "0x6000F43")]
		Task FadeOut(float time);

		[Token(Token = "0x6000F44")]
		Task FadeIn(float time);
	}
	[Serializable]
	[Token(Token = "0x20002ED")]
	public class PlayerHandlerSettings
	{
		[Token(Token = "0x4000F12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[Header("Camera Fade")]
		public QuadFaderSettings FaderSettings;

		[Token(Token = "0x6000F4A")]
		[Address(RVA = "0x17F9F44", Offset = "0x17F9F44", VA = "0x17F9F44")]
		public PlayerHandlerSettings()
		{
		}
	}
	[Token(Token = "0x20002EE")]
	public class PlayerHandler : IPlayerHandler
	{
		[Token(Token = "0x4000F13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly PlayerHandlerSettings _settings;

		[Token(Token = "0x4000F14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private SphereCollider _cameraCollider;

		[Token(Token = "0x4000F15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private IDisposable _wallFadeDisposable;

		[Token(Token = "0x4000F16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TweenerCore<float, float, FloatOptions> _fadeTweener;

		[Token(Token = "0x4000F1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private NavMeshAgent _agent;

		[Token(Token = "0x4000F1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private FadeAggregator.FadeAggregatorFader _wallFader;

		[Token(Token = "0x4000F1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool _lastWallFadeEnabled;

		[Token(Token = "0x17000226")]
		public static IPlayerHandler Instance
		{
			[Token(Token = "0x6000F4B")]
			[Address(RVA = "0x17F0D30", Offset = "0x17F0D30", VA = "0x17F0D30")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000227")]
		public QuadFader QuadFader
		{
			[Token(Token = "0x6000F4C")]
			[Address(RVA = "0x17F9F4C", Offset = "0x17F9F4C", VA = "0x17F9F4C")]
			[CompilerGenerated]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000228")]
		public FadeAggregator.FadeAggregatorFader PrimaryFader
		{
			[Token(Token = "0x6000F4D")]
			[Address(RVA = "0x17F9F54", Offset = "0x17F9F54", VA = "0x17F9F54", Slot = "8")]
			[CompilerGenerated]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000229")]
		public FadeAggregator FadeAggregator
		{
			[Token(Token = "0x6000F4E")]
			[Address(RVA = "0x17F9F5C", Offset = "0x17F9F5C", VA = "0x17F9F5C", Slot = "6")]
			[CompilerGenerated]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700022A")]
		public IFader CoreFader
		{
			[Token(Token = "0x6000F4F")]
			[Address(RVA = "0x17F9F64", Offset = "0x17F9F64", VA = "0x17F9F64", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700022B")]
		public Camera Camera
		{
			[Token(Token = "0x6000F50")]
			[Address(RVA = "0x17F9F6C", Offset = "0x17F9F6C", VA = "0x17F9F6C", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700022C")]
		public Transform Transform
		{
			[Token(Token = "0x6000F51")]
			[Address(RVA = "0x17F9F74", Offset = "0x17F9F74", VA = "0x17F9F74", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700022D")]
		public NavMeshAgent Agent
		{
			[Token(Token = "0x6000F52")]
			[Address(RVA = "0x17F9F7C", Offset = "0x17F9F7C", VA = "0x17F9F7C", Slot = "9")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700022E")]
		public CameraOverlayHandler CameraOverlayHandler
		{
			[Token(Token = "0x6000F53")]
			[Address(RVA = "0x17FA02C", Offset = "0x17FA02C", VA = "0x17FA02C", Slot = "12")]
			[CompilerGenerated]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700022F")]
		public IPassthroughLayer UnderlayPassthroughLayer
		{
			[Token(Token = "0x6000F54")]
			[Address(RVA = "0x17FA034", Offset = "0x17FA034", VA = "0x17FA034", Slot = "13")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F55")]
			[Address(RVA = "0x17FA03C", Offset = "0x17FA03C", VA = "0x17FA03C", Slot = "14")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000230")]
		public IPassthroughLayer OverlayPassthroughLayer
		{
			[Token(Token = "0x6000F56")]
			[Address(RVA = "0x17FA044", Offset = "0x17FA044", VA = "0x17FA044", Slot = "15")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F57")]
			[Address(RVA = "0x17FA04C", Offset = "0x17FA04C", VA = "0x17FA04C", Slot = "16")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6000F58")]
		[Address(RVA = "0x17FA054", Offset = "0x17FA054", VA = "0x17FA054")]
		public PlayerHandler(PlayerHandlerSettings settings)
		{
		}

		[Token(Token = "0x6000F59")]
		[Address(RVA = "0x17FA2F4", Offset = "0x17FA2F4", VA = "0x17FA2F4")]
		private void SetFadeAmount(float value)
		{
		}

		[Token(Token = "0x6000F5A")]
		[Address(RVA = "0x17FA3CC", Offset = "0x17FA3CC", VA = "0x17FA3CC", Slot = "10")]
		public Task FadeOut(float time)
		{
			return null;
		}

		[Token(Token = "0x6000F5B")]
		[Address(RVA = "0x17FA434", Offset = "0x17FA434", VA = "0x17FA434", Slot = "11")]
		public Task FadeIn(float time)
		{
			return null;
		}

		[Token(Token = "0x6000F5C")]
		[Address(RVA = "0x17FA49C", Offset = "0x17FA49C", VA = "0x17FA49C")]
		public void InitializeWallFade()
		{
		}

		[Token(Token = "0x6000F5D")]
		[Address(RVA = "0x17FAA50", Offset = "0x17FAA50", VA = "0x17FAA50")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6000F5E")]
		[Address(RVA = "0x17FAA54", Offset = "0x17FAA54", VA = "0x17FAA54")]
		public void Destroy()
		{
		}
	}
	[Token(Token = "0x20002F0")]
	public static class PlayerHandlerExtensions
	{
		[StructLayout(3)]
		[Token(Token = "0x20002F2")]
		[CompilerGenerated]
		private struct <SetLoading>d__4 : IAsyncStateMachine
		{
			[Token(Token = "0x4000F28")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000F29")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4000F2A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool value;

			[Token(Token = "0x4000F2B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public IPlayerHandler playerHandler;

			[Token(Token = "0x4000F2C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float fadeDuration;

			[Token(Token = "0x4000F2D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public float loadingDuration;

			[Token(Token = "0x4000F2E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x6000F71")]
			[Address(RVA = "0x17FBCEC", Offset = "0x17FBCEC", VA = "0x17FBCEC", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000F72")]
			[Address(RVA = "0x17FC3DC", Offset = "0x17FC3DC", VA = "0x17FC3DC", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20002F3")]
		[CompilerGenerated]
		private struct <SetLoading>d__5 : IAsyncStateMachine
		{
			[Token(Token = "0x4000F2F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000F30")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4000F31")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool value;

			[Token(Token = "0x4000F32")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public IFader fader;

			[Token(Token = "0x4000F33")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float fadeDuration;

			[Token(Token = "0x4000F34")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public IPlayerHandler playerHandler;

			[Token(Token = "0x4000F35")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public float loadingDuration;

			[Token(Token = "0x4000F36")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x6000F73")]
			[Address(RVA = "0x17FC3E8", Offset = "0x17FC3E8", VA = "0x17FC3E8", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000F74")]
			[Address(RVA = "0x17FCA28", Offset = "0x17FCA28", VA = "0x17FCA28", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x6000F64")]
		[Address(RVA = "0x17FA6A0", Offset = "0x17FA6A0", VA = "0x17FA6A0")]
		public static CompositeDisposable InitWallFade(SphereCollider cameraCollider, Action<float> setFadeAmount, int wallFadeLayer)
		{
			return null;
		}

		[Token(Token = "0x6000F65")]
		[Address(RVA = "0x17FB160", Offset = "0x17FB160", VA = "0x17FB160")]
		public static void MoveToPosition(this IPlayerHandler playerHandler, Vector3 position)
		{
		}

		[Token(Token = "0x6000F66")]
		[Address(RVA = "0x17FB4CC", Offset = "0x17FB4CC", VA = "0x17FB4CC")]
		public static void ResetPosition(this IPlayerHandler playerHandler, Transform playerResetPosition)
		{
		}

		[Token(Token = "0x6000F67")]
		[Address(RVA = "0x17FB558", Offset = "0x17FB558", VA = "0x17FB558")]
		public static void ResetPosition(this IPlayerHandler playerHandler, Vector3 position, Vector3 rotation)
		{
		}

		[Token(Token = "0x6000F68")]
		[Address(RVA = "0x17FB6B0", Offset = "0x17FB6B0", VA = "0x17FB6B0")]
		[AsyncStateMachine(typeof(<SetLoading>d__4))]
		public static Task SetLoading(this IPlayerHandler playerHandler, bool value, float fadeDuration, float loadingDuration)
		{
			return null;
		}

		[Token(Token = "0x6000F69")]
		[Address(RVA = "0x17FB7B8", Offset = "0x17FB7B8", VA = "0x17FB7B8")]
		[AsyncStateMachine(typeof(<SetLoading>d__5))]
		public static Task SetLoading(this IPlayerHandler playerHandler, bool value, float fadeDuration, float loadingDuration, IFader fader)
		{
			return null;
		}
	}
	[Token(Token = "0x20002F4")]
	public class PlayerInitializer : MonoBehaviour
	{
		[StructLayout(3)]
		[Token(Token = "0x20002F5")]
		[CompilerGenerated]
		private struct <Start>d__5 : IAsyncStateMachine
		{
			[Token(Token = "0x4000F3C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000F3D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4000F3E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public PlayerInitializer <>4__this;

			[Token(Token = "0x4000F3F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private IPlayerHandler <playerHandler>5__2;

			[Token(Token = "0x4000F40")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x6000F7E")]
			[Address(RVA = "0x17FCE00", Offset = "0x17FCE00", VA = "0x17FCE00", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000F7F")]
			[Address(RVA = "0x17FD7C8", Offset = "0x17FD7C8", VA = "0x17FD7C8", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4000F37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private UiPresenter _uiPresenter;

		[Token(Token = "0x4000F38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private LoginUiPresenter _loginUiPresenter;

		[Token(Token = "0x4000F39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private SceneEnvironmentsScriptableObject _sceneEnvironmentsScriptableObject;

		[Token(Token = "0x4000F3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Transform _playerSpawnTransform;

		[Token(Token = "0x4000F3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly CancellationTokenSource _disposeCancellationTokenSource;

		[Token(Token = "0x6000F75")]
		[Address(RVA = "0x17FCA34", Offset = "0x17FCA34", VA = "0x17FCA34")]
		[AsyncStateMachine(typeof(<Start>d__5))]
		private void Start()
		{
		}

		[Token(Token = "0x6000F76")]
		[Address(RVA = "0x17FCAE8", Offset = "0x17FCAE8", VA = "0x17FCAE8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000F77")]
		[Address(RVA = "0x17FCAFC", Offset = "0x17FCAFC", VA = "0x17FCAFC")]
		private void OnApplicationPause(bool value)
		{
		}

		[Token(Token = "0x6000F78")]
		[Address(RVA = "0x17FCCD0", Offset = "0x17FCCD0", VA = "0x17FCCD0")]
		[ContextMenu("StartLoading")]
		private void StartLoading()
		{
		}

		[Token(Token = "0x6000F79")]
		[Address(RVA = "0x17FCCEC", Offset = "0x17FCCEC", VA = "0x17FCCEC")]
		[ContextMenu("StopLoading")]
		private void StopLoading()
		{
		}

		[Token(Token = "0x6000F7A")]
		[Address(RVA = "0x17FCD08", Offset = "0x17FCD08", VA = "0x17FCD08")]
		public PlayerInitializer()
		{
		}
	}
}
namespace VR.PACS
{
	[Token(Token = "0x20002F6")]
	public static class DicomLoadPanelExtensions
	{
		[Token(Token = "0x20002F7")]
		public enum DicomLoadPanelMode
		{
			[Token(Token = "0x4000F45")]
			Local,
			[Token(Token = "0x4000F46")]
			PACS,
			[Token(Token = "0x4000F47")]
			Results,
			[Token(Token = "0x4000F48")]
			Settings
		}

		[Token(Token = "0x20002F8")]
		public class SeriesResult
		{
			[Token(Token = "0x17000231")]
			public StudyResult StudyResult
			{
				[Token(Token = "0x6000F98")]
				[Address(RVA = "0x1802BD8", Offset = "0x1802BD8", VA = "0x1802BD8")]
				[CompilerGenerated]
				get
				{
					return null;
				}
				[Token(Token = "0x6000F99")]
				[Address(RVA = "0x1802BE0", Offset = "0x1802BE0", VA = "0x1802BE0")]
				[CompilerGenerated]
				set
				{
				}
			}

			[Token(Token = "0x17000232")]
			public SeriesElement SeriesElement
			{
				[Token(Token = "0x6000F9A")]
				[Address(RVA = "0x1802BE8", Offset = "0x1802BE8", VA = "0x1802BE8")]
				[CompilerGenerated]
				get
				{
					return null;
				}
				[Token(Token = "0x6000F9B")]
				[Address(RVA = "0x1802BF0", Offset = "0x1802BF0", VA = "0x1802BF0")]
				[CompilerGenerated]
				set
				{
				}
			}

			[Token(Token = "0x17000233")]
			public IDicomDataset DicomDataset
			{
				[Token(Token = "0x6000F9C")]
				[Address(RVA = "0x1802BF8", Offset = "0x1802BF8", VA = "0x1802BF8")]
				[CompilerGenerated]
				get
				{
					return null;
				}
				[Token(Token = "0x6000F9D")]
				[Address(RVA = "0x1802C00", Offset = "0x1802C00", VA = "0x1802C00")]
				[CompilerGenerated]
				set
				{
				}
			}

			[Token(Token = "0x17000234")]
			public int ImageCount
			{
				[Token(Token = "0x6000F9E")]
				[Address(RVA = "0x1802C08", Offset = "0x1802C08", VA = "0x1802C08")]
				[CompilerGenerated]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6000F9F")]
				[Address(RVA = "0x1802C10", Offset = "0x1802C10", VA = "0x1802C10")]
				[CompilerGenerated]
				set
				{
				}
			}

			[Token(Token = "0x17000235")]
			public string SOPInstanceUID
			{
				[Token(Token = "0x6000FA0")]
				[Address(RVA = "0x1802C18", Offset = "0x1802C18", VA = "0x1802C18")]
				[CompilerGenerated]
				get
				{
					return null;
				}
				[Token(Token = "0x6000FA1")]
				[Address(RVA = "0x1802C20", Offset = "0x1802C20", VA = "0x1802C20")]
				[CompilerGenerated]
				set
				{
				}
			}

			[Token(Token = "0x17000236")]
			public string LocalFilePath
			{
				[Token(Token = "0x6000FA2")]
				[Address(RVA = "0x1802C28", Offset = "0x1802C28", VA = "0x1802C28")]
				[CompilerGenerated]
				get
				{
					return null;
				}
				[Token(Token = "0x6000FA3")]
				[Address(RVA = "0x1802C30", Offset = "0x1802C30", VA = "0x1802C30")]
				[CompilerGenerated]
				set
				{
				}
			}

			[Token(Token = "0x6000FA4")]
			[Address(RVA = "0x1802C38", Offset = "0x1802C38", VA = "0x1802C38")]
			public SeriesResult()
			{
			}
		}

		[Token(Token = "0x20002F9")]
		public class StudyResult
		{
			[Token(Token = "0x17000237")]
			public StudyElement StudyElement
			{
				[Token(Token = "0x6000FA5")]
				[Address(RVA = "0x1802C40", Offset = "0x1802C40", VA = "0x1802C40")]
				[CompilerGenerated]
				get
				{
					return null;
				}
				[Token(Token = "0x6000FA6")]
				[Address(RVA = "0x1802C48", Offset = "0x1802C48", VA = "0x1802C48")]
				[CompilerGenerated]
				set
				{
				}
			}

			[Token(Token = "0x17000238")]
			public IDicomDataset DicomDataset
			{
				[Token(Token = "0x6000FA7")]
				[Address(RVA = "0x1802C50", Offset = "0x1802C50", VA = "0x1802C50")]
				[CompilerGenerated]
				get
				{
					return null;
				}
				[Token(Token = "0x6000FA8")]
				[Address(RVA = "0x1802C58", Offset = "0x1802C58", VA = "0x1802C58")]
				[CompilerGenerated]
				set
				{
				}
			}

			[Token(Token = "0x17000239")]
			public List<SeriesResult> SeriesResults
			{
				[Token(Token = "0x6000FA9")]
				[Address(RVA = "0x1802C60", Offset = "0x1802C60", VA = "0x1802C60")]
				[CompilerGenerated]
				get
				{
					return null;
				}
				[Token(Token = "0x6000FAA")]
				[Address(RVA = "0x1802C68", Offset = "0x1802C68", VA = "0x1802C68")]
				[CompilerGenerated]
				set
				{
				}
			}

			[Token(Token = "0x6000FAB")]
			[Address(RVA = "0x1802C70", Offset = "0x1802C70", VA = "0x1802C70")]
			public StudyResult()
			{
			}
		}

		[Token(Token = "0x2000307")]
		[CompilerGenerated]
		private sealed class <GetModalToggles>d__12 : IEnumerable<(string, Toggle)>, IEnumerable, IEnumerator<(string, Toggle)>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000F8F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000F90")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private (string Modality, Toggle Toggle) <>2__current;

			[Token(Token = "0x4000F91")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4000F92")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private PACSSearchPanel pacsSearchPanel;

			[Token(Token = "0x4000F93")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public PACSSearchPanel <>3__pacsSearchPanel;

			[Token(Token = "0x1700023A")]
			private (string, Toggle) System.Collections.Generic.IEnumerator<(System.StringModality,UnityEngine.UI.ToggleToggle)>.Current
			{
				[Token(Token = "0x6000FE3")]
				[Address(RVA = "0x15A3870", Offset = "0x15A3870", VA = "0x15A3870", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return default((string, Toggle));
				}
			}

			[Token(Token = "0x1700023B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000FE5")]
				[Address(RVA = "0x15A38BC", Offset = "0x15A38BC", VA = "0x15A38BC", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000FE0")]
			[Address(RVA = "0x15A34F0", Offset = "0x15A34F0", VA = "0x15A34F0")]
			[DebuggerHidden]
			public <GetModalToggles>d__12(int <>1__state)
			{
			}

			[Token(Token = "0x6000FE1")]
			[Address(RVA = "0x15A3524", Offset = "0x15A3524", VA = "0x15A3524", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000FE2")]
			[Address(RVA = "0x15A3528", Offset = "0x15A3528", VA = "0x15A3528", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000FE4")]
			[Address(RVA = "0x15A387C", Offset = "0x15A387C", VA = "0x15A387C", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6000FE6")]
			[Address(RVA = "0x15A3918", Offset = "0x15A3918", VA = "0x15A3918", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<(string, Toggle)> System.Collections.Generic.IEnumerable<(System.StringModality,UnityEngine.UI.ToggleToggle)>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6000FE7")]
			[Address(RVA = "0x15A39C4", Offset = "0x15A39C4", VA = "0x15A39C4", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200030A")]
		[CompilerGenerated]
		private struct <LoadFilesFromPacsServer>d__26 : IAsyncStateMachine
		{
			[Token(Token = "0x4000F97")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000F98")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4000F99")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public List<DicomCStoreRequest> cGetResponses;

			[Token(Token = "0x4000F9A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Action<DicomCStoreRequest> onCStoreRequest;

			[Token(Token = "0x4000F9B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public IDicomClient dicomClient;

			[Token(Token = "0x4000F9C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public DicomCGetRequest cGetRequest;

			[Token(Token = "0x4000F9D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public CancellationToken cancellationToken;

			[Token(Token = "0x4000F9E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private ConfiguredTaskAwaitable.ConfiguredTaskAwaiter <>u__1;

			[Token(Token = "0x6000FEC")]
			[Address(RVA = "0x15A3B90", Offset = "0x15A3B90", VA = "0x15A3B90", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000FED")]
			[Address(RVA = "0x15A428C", Offset = "0x15A428C", VA = "0x15A428C", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x200030B")]
		[CompilerGenerated]
		private sealed class <>c__DisplayClass27_0
		{
			[Token(Token = "0x4000F9F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Action<DicomCFindResponse> studyResponseReceived;

			[Token(Token = "0x4000FA0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Action<DicomCFindResponse> seriesResponseReceived;

			[Token(Token = "0x4000FA1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public List<DicomCFindRequest> seriesRequests;

			[Token(Token = "0x4000FA2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public DicomCFindRequest.ResponseDelegate <>9__1;

			[Token(Token = "0x6000FEE")]
			[Address(RVA = "0x15A4298", Offset = "0x15A4298", VA = "0x15A4298")]
			public <>c__DisplayClass27_0()
			{
			}

			[Token(Token = "0x6000FEF")]
			[Address(RVA = "0x15A42A0", Offset = "0x15A42A0", VA = "0x15A42A0")]
			internal void <SendStudyRequestAndLoadSeries>b__0(DicomCFindRequest _, DicomCFindResponse studyResponse)
			{
			}

			[Token(Token = "0x6000FF0")]
			[Address(RVA = "0x15A44C0", Offset = "0x15A44C0", VA = "0x15A44C0")]
			internal void <SendStudyRequestAndLoadSeries>b__1(DicomCFindRequest _, DicomCFindResponse seriesResponse)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200030C")]
		[CompilerGenerated]
		private struct <SendStudyRequestAndLoadSeries>d__27 : IAsyncStateMachine
		{
			[Token(Token = "0x4000FA3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000FA4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4000FA5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Action<DicomCFindResponse> studyResponseReceived;

			[Token(Token = "0x4000FA6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Action<DicomCFindResponse> seriesResponseReceived;

			[Token(Token = "0x4000FA7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public DicomCFindRequest studyRequest;

			[Token(Token = "0x4000FA8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public IDicomClient dicomClient;

			[Token(Token = "0x4000FA9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public CancellationToken cancellationToken;

			[Token(Token = "0x4000FAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private <>c__DisplayClass27_0 <>8__1;

			[Token(Token = "0x4000FAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private ConfiguredTaskAwaitable.ConfiguredTaskAwaiter <>u__1;

			[Token(Token = "0x6000FF1")]
			[Address(RVA = "0x15A44E4", Offset = "0x15A44E4", VA = "0x15A44E4", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000FF2")]
			[Address(RVA = "0x15A4C54", Offset = "0x15A4C54", VA = "0x15A4C54", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4000F41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly HashSet<string> IgnoredModalities;

		[Token(Token = "0x4000F42")]
		public const string VALUE_NOT_AVAILABLE = "-";

		[Token(Token = "0x4000F43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly uint[] RequiredTagKeys;

		[Token(Token = "0x6000F80")]
		[Address(RVA = "0x17FD7D4", Offset = "0x17FD7D4", VA = "0x17FD7D4")]
		public static CompositeDisposable Initialize(this DicomLoadPanelReferences dicomLoadPanelReferences, INetworkModuleProviderFactory moduleProviderFactory, IDicomReader dicomReader)
		{
			return null;
		}

		[Token(Token = "0x6000F81")]
		[Address(RVA = "0x17FE550", Offset = "0x17FE550", VA = "0x17FE550")]
		public static float GetRangeLimit(int scaleFactor)
		{
			return default(float);
		}

		[Token(Token = "0x6000F82")]
		[Address(RVA = "0x17FE580", Offset = "0x17FE580", VA = "0x17FE580")]
		public static Texture2D CreateImage(ushort[] data, int rows, int columns)
		{
			return null;
		}

		[Token(Token = "0x6000F83")]
		[Address(RVA = "0x17FE6E0", Offset = "0x17FE6E0", VA = "0x17FE6E0")]
		private static void SetSliderUi(this DicomLoadPanelReferences dicomLoadPanelReferences, MinMaxSliderRangeLimiter sliderRangeLimiter, int imageCount, int scaleFactor)
		{
		}

		[Token(Token = "0x6000F84")]
		[Address(RVA = "0x17FE7E8", Offset = "0x17FE7E8", VA = "0x17FE7E8")]
		public static byte GetScaleFactor(this DicomLoadPanelReferences dicomLoadPanelReferences)
		{
			return default(byte);
		}

		[Token(Token = "0x6000F85")]
		[Address(RVA = "0x17FE82C", Offset = "0x17FE82C", VA = "0x17FE82C")]
		public static DicomLoadPanelMode GetMode(this DicomLoadPanelReferences dicomLoadPanelReferences)
		{
			return default(DicomLoadPanelMode);
		}

		[Token(Token = "0x6000F86")]
		[Address(RVA = "0x17FE380", Offset = "0x17FE380", VA = "0x17FE380")]
		public static void SetMode(this DicomLoadPanelReferences dicomLoadPanelReferences, DicomLoadPanelMode mode)
		{
		}

		[Token(Token = "0x6000F87")]
		[Address(RVA = "0x17FE8C4", Offset = "0x17FE8C4", VA = "0x17FE8C4")]
		public static void InitializeHierarchyDisplay(this HierarchyDrawer hierarchyDrawer, IEnumerable<StudyResult> results, List<HierarchyRowElement> rowElements, SVGImage svgImage)
		{
		}

		[Token(Token = "0x6000F88")]
		[Address(RVA = "0x17FF294", Offset = "0x17FF294", VA = "0x17FF294")]
		[IteratorStateMachine(typeof(<GetModalToggles>d__12))]
		public static IEnumerable<(string, Toggle)> GetModalToggles(this PACSSearchPanel pacsSearchPanel)
		{
			return null;
		}

		[Token(Token = "0x6000F89")]
		[Address(RVA = "0x17FF308", Offset = "0x17FF308", VA = "0x17FF308")]
		public static string GetPatientSex(this PACSSearchPanel pacsSearchPanel)
		{
			return null;
		}

		[Token(Token = "0x6000F8A")]
		[Address(RVA = "0x17FF3AC", Offset = "0x17FF3AC", VA = "0x17FF3AC")]
		public static string GetModals(this PACSSearchPanel pacsSearchPanel)
		{
			return null;
		}

		[Token(Token = "0x6000F8B")]
		[Address(RVA = "0x17FF5D0", Offset = "0x17FF5D0", VA = "0x17FF5D0")]
		public static long GetExpectedArrayLength(int imageResolution, int imageCount, int scaleFactor)
		{
			return default(long);
		}

		[Token(Token = "0x6000F8C")]
		[Address(RVA = "0x17FF5E4", Offset = "0x17FF5E4", VA = "0x17FF5E4")]
		public static void AddOrUpdateFrom(this DicomCFindRequest request, PACSSearchPanel panel)
		{
		}

		[Token(Token = "0x6000F8D")]
		[Address(RVA = "0x18003D0", Offset = "0x18003D0", VA = "0x18003D0")]
		public static void DestroyLastResults(this DicomLoadPanelReferences dicomLoadPanelReferences)
		{
		}

		[Token(Token = "0x6000F8E")]
		[Address(RVA = "0x1800738", Offset = "0x1800738", VA = "0x1800738")]
		public static void CreateResults(this DicomLoadPanelReferences dicomLoadPanelReferences, IEnumerable<StudyResult> results)
		{
		}

		[Token(Token = "0x6000F8F")]
		[Address(RVA = "0x17FE870", Offset = "0x17FE870", VA = "0x17FE870")]
		public static bool IsValid(this PacsServerConfig pacsServerConfig)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F90")]
		[Address(RVA = "0x1801AAC", Offset = "0x1801AAC", VA = "0x1801AAC")]
		public static PacsServerConfig SetFrom(this PacsServerConfig pacsServerConfig, PACSSettingsReferences pacsSettingsReferences)
		{
			return null;
		}

		[Token(Token = "0x6000F91")]
		[Address(RVA = "0x17FE29C", Offset = "0x17FE29C", VA = "0x17FE29C")]
		public static void SetFrom(this PACSSettingsReferences pacsSettingsReferences, PacsServerConfig pacsServerConfig)
		{
		}

		[Token(Token = "0x6000F92")]
		[Address(RVA = "0x1800EBC", Offset = "0x1800EBC", VA = "0x1800EBC")]
		public static void SetFrom(this StudyElement studyElement, IDicomDataset dicomDataset)
		{
		}

		[Token(Token = "0x6000F93")]
		[Address(RVA = "0x180155C", Offset = "0x180155C", VA = "0x180155C")]
		public static void SetFrom(this SeriesElement seriesElement, IDicomDataset dicomDataset, int instanceCount)
		{
		}

		[Token(Token = "0x6000F94")]
		[Address(RVA = "0x1801B8C", Offset = "0x1801B8C", VA = "0x1801B8C")]
		[AsyncStateMachine(typeof(<LoadFilesFromPacsServer>d__26))]
		public static Task LoadFilesFromPacsServer(this IDicomClient dicomClient, DicomCGetRequest cGetRequest, List<DicomCStoreRequest> cGetResponses, CancellationToken cancellationToken, [Optional] Action<DicomCStoreRequest> onCStoreRequest)
		{
			return null;
		}

		[Token(Token = "0x6000F95")]
		[Address(RVA = "0x1801CE0", Offset = "0x1801CE0", VA = "0x1801CE0")]
		[AsyncStateMachine(typeof(<SendStudyRequestAndLoadSeries>d__27))]
		public static Task SendStudyRequestAndLoadSeries(this IDicomClient dicomClient, DicomCFindRequest studyRequest, Action<DicomCFindResponse> studyResponseReceived, Action<DicomCFindResponse> seriesResponseReceived, CancellationToken cancellationToken)
		{
			return null;
		}

		[Token(Token = "0x6000F96")]
		[Address(RVA = "0x1801E30", Offset = "0x1801E30", VA = "0x1801E30")]
		public static DoubleKeyDictionary<string, string, (string, List<Eneter.Dicom.Reader.Model.IDicomFile>)> TryReadDicomImageFiles(this IDicomReader dicomReader, string pathToDirectory, IEnumerable<uint> requiredTagKeys, int maxDepth)
		{
			return null;
		}
	}
	[Token(Token = "0x200030F")]
	public class DicomLoadPanelReferences : MonoBehaviour
	{
		[Token(Token = "0x4000FAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private PACSSearchPanel _pacsSearchPanel;

		[Token(Token = "0x4000FB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private FileBrowserVR _fileBrowserVR;

		[Token(Token = "0x4000FB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private PACSSettingsReferences _pacsSettingsReferences;

		[Token(Token = "0x4000FB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject _pacsResultsPanel;

		[Token(Token = "0x4000FB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Transform _pacsResultsContent;

		[Token(Token = "0x4000FB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private GameObject _modeSwitchParentGameObject;

		[Token(Token = "0x4000FB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private GameObject _noResultsFoundText;

		[Token(Token = "0x4000FB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Button _importButton;

		[Token(Token = "0x4000FB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Button _backButton;

		[Token(Token = "0x4000FB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Button _pacsSettingsButton;

		[Token(Token = "0x4000FB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Toggle _pacsToggle;

		[Token(Token = "0x4000FBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Toggle _localToggle;

		[Token(Token = "0x4000FBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private MinMaxSlider _seriesOffsetSlider;

		[Token(Token = "0x4000FBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private MinMaxSliderValueDisplay _seriesOffsetValueDisplay;

		[Token(Token = "0x4000FBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private Toggle _scaleFactor2;

		[Token(Token = "0x4000FBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private Toggle _scaleFactor4;

		[Token(Token = "0x4000FBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private ToggleGroup _resultsToggleGroup;

		[Token(Token = "0x4000FC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private ContextPanelHandler _contextPanelHandler;

		[Token(Token = "0x4000FC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private SVGImage _hierarchySvgImage;

		[Token(Token = "0x4000FC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[Header("Prefabs")]
		[SerializeField]
		private StudyElement _studyElementPrefab;

		[Token(Token = "0x4000FC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private SeriesElement _seriesElementPrefab;

		[Token(Token = "0x4000FC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private TextAsset _tagDictionary;

		[Token(Token = "0x1700023C")]
		public PACSSearchPanel PacsSearchPanel
		{
			[Token(Token = "0x6000FF6")]
			[Address(RVA = "0x15A4D58", Offset = "0x15A4D58", VA = "0x15A4D58")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700023D")]
		public FileBrowserVR FileBrowserVR
		{
			[Token(Token = "0x6000FF7")]
			[Address(RVA = "0x15A4D60", Offset = "0x15A4D60", VA = "0x15A4D60")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700023E")]
		public PACSSettingsReferences PacsSettingsReferences
		{
			[Token(Token = "0x6000FF8")]
			[Address(RVA = "0x15A4D68", Offset = "0x15A4D68", VA = "0x15A4D68")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700023F")]
		public GameObject PacsResultsPanel
		{
			[Token(Token = "0x6000FF9")]
			[Address(RVA = "0x15A4D70", Offset = "0x15A4D70", VA = "0x15A4D70")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000240")]
		public Transform PacsResultsContent
		{
			[Token(Token = "0x6000FFA")]
			[Address(RVA = "0x15A4D78", Offset = "0x15A4D78", VA = "0x15A4D78")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000241")]
		public GameObject ModeSwitchParentGameObject
		{
			[Token(Token = "0x6000FFB")]
			[Address(RVA = "0x15A4D80", Offset = "0x15A4D80", VA = "0x15A4D80")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000242")]
		public GameObject NoResultsFoundText
		{
			[Token(Token = "0x6000FFC")]
			[Address(RVA = "0x15A4D88", Offset = "0x15A4D88", VA = "0x15A4D88")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000243")]
		public Button ImportButton
		{
			[Token(Token = "0x6000FFD")]
			[Address(RVA = "0x15A4D90", Offset = "0x15A4D90", VA = "0x15A4D90")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000244")]
		public Button BackButton
		{
			[Token(Token = "0x6000FFE")]
			[Address(RVA = "0x15A4D98", Offset = "0x15A4D98", VA = "0x15A4D98")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000245")]
		public Button PacsSettingsButton
		{
			[Token(Token = "0x6000FFF")]
			[Address(RVA = "0x15A4DA0", Offset = "0x15A4DA0", VA = "0x15A4DA0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000246")]
		public Toggle PacsToggle
		{
			[Token(Token = "0x6001000")]
			[Address(RVA = "0x15A4DA8", Offset = "0x15A4DA8", VA = "0x15A4DA8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000247")]
		public Toggle LocalToggle
		{
			[Token(Token = "0x6001001")]
			[Address(RVA = "0x15A4DB0", Offset = "0x15A4DB0", VA = "0x15A4DB0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000248")]
		public MinMaxSlider SeriesOffsetSlider
		{
			[Token(Token = "0x6001002")]
			[Address(RVA = "0x15A4DB8", Offset = "0x15A4DB8", VA = "0x15A4DB8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000249")]
		public MinMaxSliderValueDisplay SeriesOffsetValueDisplay
		{
			[Token(Token = "0x6001003")]
			[Address(RVA = "0x15A4DC0", Offset = "0x15A4DC0", VA = "0x15A4DC0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700024A")]
		public Toggle ScaleFactor2
		{
			[Token(Token = "0x6001004")]
			[Address(RVA = "0x15A4DC8", Offset = "0x15A4DC8", VA = "0x15A4DC8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700024B")]
		public Toggle ScaleFactor4
		{
			[Token(Token = "0x6001005")]
			[Address(RVA = "0x15A4DD0", Offset = "0x15A4DD0", VA = "0x15A4DD0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700024C")]
		public ToggleGroup ResultsToggleGroup
		{
			[Token(Token = "0x6001006")]
			[Address(RVA = "0x15A4DD8", Offset = "0x15A4DD8", VA = "0x15A4DD8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700024D")]
		public ContextPanelHandler ContextPanelHandler
		{
			[Token(Token = "0x6001007")]
			[Address(RVA = "0x15A4DE0", Offset = "0x15A4DE0", VA = "0x15A4DE0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700024E")]
		public SVGImage HierarchySvgImage
		{
			[Token(Token = "0x6001008")]
			[Address(RVA = "0x15A4DE8", Offset = "0x15A4DE8", VA = "0x15A4DE8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700024F")]
		public StudyElement StudyElementPrefab
		{
			[Token(Token = "0x6001009")]
			[Address(RVA = "0x15A4DF0", Offset = "0x15A4DF0", VA = "0x15A4DF0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000250")]
		public SeriesElement SeriesElementPrefab
		{
			[Token(Token = "0x600100A")]
			[Address(RVA = "0x15A4DF8", Offset = "0x15A4DF8", VA = "0x15A4DF8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000251")]
		public TextAsset TagDictionary
		{
			[Token(Token = "0x600100B")]
			[Address(RVA = "0x15A4E00", Offset = "0x15A4E00", VA = "0x15A4E00")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600100C")]
		[Address(RVA = "0x15A4E08", Offset = "0x15A4E08", VA = "0x15A4E08")]
		public DicomLoadPanelReferences()
		{
		}
	}
	[Token(Token = "0x2000310")]
	public class PACSSearchPanel : MonoBehaviour
	{
		[Token(Token = "0x4000FC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TMP_InputField _patientName;

		[Token(Token = "0x4000FC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private TMP_InputField _patientId;

		[Token(Token = "0x4000FC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private TMP_InputField _dateOfBirth;

		[Token(Token = "0x4000FC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private TMP_InputField _dateFrom;

		[Token(Token = "0x4000FC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private TMP_InputField _dateTo;

		[Token(Token = "0x4000FCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private TMP_InputField _studyNote;

		[Token(Token = "0x4000FCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Toggle _maleButton;

		[Token(Token = "0x4000FCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Toggle _femaleButton;

		[Token(Token = "0x4000FCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Toggle _allButton;

		[Token(Token = "0x4000FCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Button _yesterdayButton;

		[Token(Token = "0x4000FCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Button _todayButton;

		[Token(Token = "0x4000FD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Button _searchButton;

		[Token(Token = "0x4000FD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private Toggle _ctToggle;

		[Token(Token = "0x4000FD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private Toggle _mrToggle;

		[Token(Token = "0x4000FD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private Toggle _dxToggle;

		[Token(Token = "0x4000FD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private Toggle _crToggle;

		[Token(Token = "0x4000FD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private Toggle _ptToggle;

		[Token(Token = "0x17000252")]
		public TMP_InputField PatientName
		{
			[Token(Token = "0x600100D")]
			[Address(RVA = "0x15A4E10", Offset = "0x15A4E10", VA = "0x15A4E10")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000253")]
		public TMP_InputField PatientId
		{
			[Token(Token = "0x600100E")]
			[Address(RVA = "0x15A4E18", Offset = "0x15A4E18", VA = "0x15A4E18")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000254")]
		public TMP_InputField DateOfBirth
		{
			[Token(Token = "0x600100F")]
			[Address(RVA = "0x15A4E20", Offset = "0x15A4E20", VA = "0x15A4E20")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000255")]
		public TMP_InputField DateFrom
		{
			[Token(Token = "0x6001010")]
			[Address(RVA = "0x15A4E28", Offset = "0x15A4E28", VA = "0x15A4E28")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000256")]
		public TMP_InputField DateTo
		{
			[Token(Token = "0x6001011")]
			[Address(RVA = "0x15A4E30", Offset = "0x15A4E30", VA = "0x15A4E30")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000257")]
		public Button YesterdayButton
		{
			[Token(Token = "0x6001012")]
			[Address(RVA = "0x15A4E38", Offset = "0x15A4E38", VA = "0x15A4E38")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000258")]
		public Button TodayButton
		{
			[Token(Token = "0x6001013")]
			[Address(RVA = "0x15A4E40", Offset = "0x15A4E40", VA = "0x15A4E40")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000259")]
		public TMP_InputField StudyNote
		{
			[Token(Token = "0x6001014")]
			[Address(RVA = "0x15A4E48", Offset = "0x15A4E48", VA = "0x15A4E48")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700025A")]
		public Button SearchButton
		{
			[Token(Token = "0x6001015")]
			[Address(RVA = "0x15A4E50", Offset = "0x15A4E50", VA = "0x15A4E50")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700025B")]
		public Toggle MaleButton
		{
			[Token(Token = "0x6001016")]
			[Address(RVA = "0x15A4E58", Offset = "0x15A4E58", VA = "0x15A4E58")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700025C")]
		public Toggle FemaleButton
		{
			[Token(Token = "0x6001017")]
			[Address(RVA = "0x15A4E60", Offset = "0x15A4E60", VA = "0x15A4E60")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700025D")]
		public Toggle AllButton
		{
			[Token(Token = "0x6001018")]
			[Address(RVA = "0x15A4E68", Offset = "0x15A4E68", VA = "0x15A4E68")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700025E")]
		public Toggle CtToggle
		{
			[Token(Token = "0x6001019")]
			[Address(RVA = "0x15A4E70", Offset = "0x15A4E70", VA = "0x15A4E70")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700025F")]
		public Toggle MrToggle
		{
			[Token(Token = "0x600101A")]
			[Address(RVA = "0x15A4E78", Offset = "0x15A4E78", VA = "0x15A4E78")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000260")]
		public Toggle DxToggle
		{
			[Token(Token = "0x600101B")]
			[Address(RVA = "0x15A4E80", Offset = "0x15A4E80", VA = "0x15A4E80")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000261")]
		public Toggle CrToggle
		{
			[Token(Token = "0x600101C")]
			[Address(RVA = "0x15A4E88", Offset = "0x15A4E88", VA = "0x15A4E88")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000262")]
		public Toggle PtToggle
		{
			[Token(Token = "0x600101D")]
			[Address(RVA = "0x15A4E90", Offset = "0x15A4E90", VA = "0x15A4E90")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600101E")]
		[Address(RVA = "0x15A4E98", Offset = "0x15A4E98", VA = "0x15A4E98")]
		public PACSSearchPanel()
		{
		}
	}
	[Token(Token = "0x2000311")]
	public class SeriesElement : MonoBehaviour
	{
		[Token(Token = "0x4000FD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TextMeshProUGUI SeriesNumber;

		[Token(Token = "0x4000FD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextMeshProUGUI SeriesDescription;

		[Token(Token = "0x4000FD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TextMeshProUGUI NumberOfImages;

		[Token(Token = "0x4000FD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public TextMeshProUGUI Modality;

		[Token(Token = "0x4000FDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public TextMeshProUGUI TimeOfSeries;

		[Token(Token = "0x4000FDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public RowElement RowElement;

		[Token(Token = "0x600101F")]
		[Address(RVA = "0x15A4EA0", Offset = "0x15A4EA0", VA = "0x15A4EA0")]
		public SeriesElement()
		{
		}
	}
	[Token(Token = "0x2000312")]
	public class StudyElement : MonoBehaviour
	{
		[Token(Token = "0x4000FDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TextMeshProUGUI PatientName;

		[Token(Token = "0x4000FDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextMeshProUGUI PatientId;

		[Token(Token = "0x4000FDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TextMeshProUGUI DateOfBirth;

		[Token(Token = "0x4000FDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public TextMeshProUGUI Gender;

		[Token(Token = "0x4000FE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public TextMeshProUGUI DateOfStudy;

		[Token(Token = "0x4000FE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public TextMeshProUGUI Modals;

		[Token(Token = "0x4000FE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public RowElement RowElement;

		[Token(Token = "0x6001020")]
		[Address(RVA = "0x15A4EA8", Offset = "0x15A4EA8", VA = "0x15A4EA8")]
		public StudyElement()
		{
		}
	}
}
namespace VR.MRTK
{
	[Token(Token = "0x2000313")]
	[RequireComponent(typeof(Camera))]
	[AddComponentMenu("Scripts/MRTK/Services/Anatomy/AnatomyInputModule")]
	public class AnatomyInputModule : MixedRealityInputModule, IMixedRealityInputHandler<Vector2>, IEventSystemHandler
	{
		[Token(Token = "0x4000FE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[SerializeField]
		private Vector2 _scrollMultiplier;

		[Token(Token = "0x6001021")]
		[Address(RVA = "0x15A4EB0", Offset = "0x15A4EB0", VA = "0x15A4EB0", Slot = "23")]
		public override void ActivateModule()
		{
		}

		[Token(Token = "0x6001022")]
		[Address(RVA = "0x15A4FCC", Offset = "0x15A4FCC", VA = "0x15A4FCC", Slot = "22")]
		public override void DeactivateModule()
		{
		}

		[Token(Token = "0x6001023")]
		[Address(RVA = "0x15A50E8", Offset = "0x15A50E8", VA = "0x15A50E8", Slot = "38")]
		public void OnInputChanged(InputEventData<Vector2> eventData)
		{
		}

		[Token(Token = "0x6001024")]
		[Address(RVA = "0x15A52A8", Offset = "0x15A52A8", VA = "0x15A52A8")]
		public AnatomyInputModule()
		{
		}
	}
	[Token(Token = "0x2000314")]
	public class AnatomyParabolicPointerHandler : MonoBehaviour
	{
		[Token(Token = "0x4000FE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MRTKInputSettings _mrtkInputSettings;

		[Token(Token = "0x4000FE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private ParabolicTeleportPointer _parabolicTeleportPointer;

		[Token(Token = "0x4000FE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AnatomyTeleportRotationHandler _anatomyTeleportRotationHandler;

		[Token(Token = "0x4000FE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MonoBehaviour[] _teleportComponents;

		[Token(Token = "0x17000263")]
		public MRTKInputSettings MrtkInputSettings
		{
			[Token(Token = "0x6001025")]
			[Address(RVA = "0x15A5300", Offset = "0x15A5300", VA = "0x15A5300")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000264")]
		public AnatomyTeleportRotationHandler AnatomyTeleportRotationHandler
		{
			[Token(Token = "0x6001026")]
			[Address(RVA = "0x15A5308", Offset = "0x15A5308", VA = "0x15A5308")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000265")]
		public MonoBehaviour[] TeleportComponents
		{
			[Token(Token = "0x6001027")]
			[Address(RVA = "0x15A5310", Offset = "0x15A5310", VA = "0x15A5310")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001028")]
		[Address(RVA = "0x15A5318", Offset = "0x15A5318", VA = "0x15A5318")]
		private void Update()
		{
		}

		[Token(Token = "0x6001029")]
		[Address(RVA = "0x15A549C", Offset = "0x15A549C", VA = "0x15A549C")]
		public AnatomyParabolicPointerHandler()
		{
		}
	}
	[Token(Token = "0x2000315")]
	public class AnatomyTeleportRotationHandler : InputSystemGlobalHandlerListener, IMixedRealityInputHandler<Vector2>, IEventSystemHandler
	{
		[Token(Token = "0x4000FE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private TeleportPointer _teleportPointer;

		[Token(Token = "0x4000FE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[Tooltip("Teleport Pointer will only respond to input events for teleportation that match this MixedRealityInputAction")]
		private MixedRealityInputAction teleportAction;

		[Token(Token = "0x4000FEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[Range(0f, 1f)]
		[Tooltip("The threshold amount for joystick input (Dead Zone)")]
		private float inputThreshold;

		[Token(Token = "0x4000FEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[Tooltip("If Pressing 'forward' on the thumbstick gives us an angle that doesn't quite feel like the forward direction, we apply this offset to make navigation feel more natural")]
		[Range(0f, 360f)]
		[SerializeField]
		private float angleOffset;

		[Token(Token = "0x4000FEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		[Tooltip("The angle from the pointer's forward position that will activate the teleport.")]
		[Range(5f, 90f)]
		private float teleportActivationAngle;

		[Token(Token = "0x4000FED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[Tooltip("The angle from the joystick left and right position that will activate a rotation")]
		[Range(5f, 90f)]
		[SerializeField]
		private float rotateActivationAngle;

		[Token(Token = "0x4000FEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Range(5f, 180f)]
		[Tooltip("The amount to rotate the camera when rotation is activated")]
		[SerializeField]
		private float rotationAmount;

		[Token(Token = "0x4000FEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Vector2 currentInputPosition;

		[Token(Token = "0x4000FF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private bool canMove;

		[Token(Token = "0x4000FF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float cachedInputThreshold;

		[Token(Token = "0x4000FF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float inputThresholdSquared;

		[Token(Token = "0x17000266")]
		private float InputThresholdSquared
		{
			[Token(Token = "0x600102A")]
			[Address(RVA = "0x15A54A4", Offset = "0x15A54A4", VA = "0x15A54A4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x600102B")]
		[Address(RVA = "0x15A554C", Offset = "0x15A554C", VA = "0x15A554C", Slot = "7")]
		protected override void RegisterHandlers()
		{
		}

		[Token(Token = "0x600102C")]
		[Address(RVA = "0x15A5640", Offset = "0x15A5640", VA = "0x15A5640", Slot = "8")]
		protected override void UnregisterHandlers()
		{
		}

		[Token(Token = "0x600102D")]
		[Address(RVA = "0x15A5734", Offset = "0x15A5734", VA = "0x15A5734", Slot = "9")]
		public void OnInputChanged(InputEventData<Vector2> eventData)
		{
		}

		[Token(Token = "0x600102E")]
		[Address(RVA = "0x15A5A04", Offset = "0x15A5A04", VA = "0x15A5A04")]
		public AnatomyTeleportRotationHandler()
		{
		}
	}
	[Token(Token = "0x2000316")]
	public class DrawingPointer : BaseControllerPointer, IMixedRealityFocusChangedHandler, IEventSystemHandler
	{
		[Token(Token = "0x4000FF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[SerializeField]
		private DrawingPointerVisual _drawingPointerVisual;

		[Token(Token = "0x4000FF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[SerializeField]
		private float _pointerOffset;

		[Token(Token = "0x17000267")]
		public DrawingPointerVisual DrawingPointerVisual
		{
			[Token(Token = "0x600102F")]
			[Address(RVA = "0x15A5ACC", Offset = "0x15A5ACC", VA = "0x15A5ACC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000268")]
		public override SceneQueryType SceneQueryType
		{
			[Token(Token = "0x6001030")]
			[Address(RVA = "0x15A5AD4", Offset = "0x15A5AD4", VA = "0x15A5AD4", Slot = "94")]
			get
			{
				return default(SceneQueryType);
			}
		}

		[Token(Token = "0x17000269")]
		public override Vector3 Position
		{
			[Token(Token = "0x6001031")]
			[Address(RVA = "0x15A5ADC", Offset = "0x15A5ADC", VA = "0x15A5ADC", Slot = "96")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x1700026A")]
		public bool IsValidForDrawing
		{
			[Token(Token = "0x6001032")]
			[Address(RVA = "0x15A5B54", Offset = "0x15A5B54", VA = "0x15A5B54")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001033")]
			[Address(RVA = "0x15A5B5C", Offset = "0x15A5B5C", VA = "0x15A5B5C")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6001034")]
		[Address(RVA = "0x15A5B68", Offset = "0x15A5B68", VA = "0x15A5B68")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001035")]
		[Address(RVA = "0x15A5CA8", Offset = "0x15A5CA8", VA = "0x15A5CA8", Slot = "7")]
		protected override void RegisterHandlers()
		{
		}

		[Token(Token = "0x6001036")]
		[Address(RVA = "0x15A5DA4", Offset = "0x15A5DA4", VA = "0x15A5DA4", Slot = "8")]
		protected override void UnregisterHandlers()
		{
		}

		[Token(Token = "0x6001037")]
		[Address(RVA = "0x15A5EA0", Offset = "0x15A5EA0", VA = "0x15A5EA0", Slot = "99")]
		public override bool OnSceneQuery(LayerMask[] prioritizedLayerMasks, bool focusIndividualCompoundCollider, out MixedRealityRaycastHit hitInfo, out RayStep Ray, out int rayStepIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x6001038")]
		[Address(RVA = "0x15A5EC4", Offset = "0x15A5EC4", VA = "0x15A5EC4", Slot = "100")]
		public override bool OnSceneQuery(LayerMask[] prioritizedLayerMasks, bool focusIndividualCompoundCollider, out GameObject hitObject, out Vector3 hitPoint, out float hitDistance)
		{
			return default(bool);
		}

		[Token(Token = "0x6001039")]
		[Address(RVA = "0x15A5F00", Offset = "0x15A5F00", VA = "0x15A5F00", Slot = "104")]
		public void OnBeforeFocusChange(FocusEventData eventData)
		{
		}

		[Token(Token = "0x600103A")]
		[Address(RVA = "0x15A5F04", Offset = "0x15A5F04", VA = "0x15A5F04", Slot = "105")]
		public void OnFocusChanged(FocusEventData eventData)
		{
		}

		[Token(Token = "0x600103B")]
		[Address(RVA = "0x15A62D8", Offset = "0x15A62D8", VA = "0x15A62D8")]
		public DrawingPointer()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000317")]
	public class ObjectDistanceConstraintSettings
	{
		[Token(Token = "0x4000FF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector2 DistanceLimits;

		[Token(Token = "0x4000FF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float MaxVelocity;

		[Token(Token = "0x4000FF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float Acceleration;

		[Token(Token = "0x600103F")]
		[Address(RVA = "0x15A6358", Offset = "0x15A6358", VA = "0x15A6358")]
		public ObjectDistanceConstraintSettings()
		{
		}
	}
	[Token(Token = "0x2000318")]
	public class ObjectDistanceConstraint : TransformConstraint
	{
		[Token(Token = "0x2000319")]
		[CompilerGenerated]
		private sealed class <UpdateManipulation>d__30 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001000")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001001")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001002")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ObjectDistanceConstraint <>4__this;

			[Token(Token = "0x4001003")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public ObjectDistanceConstraintSettings settings;

			[Token(Token = "0x17000272")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001055")]
				[Address(RVA = "0x15A680C", Offset = "0x15A680C", VA = "0x15A680C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000273")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001057")]
				[Address(RVA = "0x15A6854", Offset = "0x15A6854", VA = "0x15A6854", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001052")]
			[Address(RVA = "0x15A66AC", Offset = "0x15A66AC", VA = "0x15A66AC")]
			[DebuggerHidden]
			public <UpdateManipulation>d__30(int <>1__state)
			{
			}

			[Token(Token = "0x6001053")]
			[Address(RVA = "0x15A66DC", Offset = "0x15A66DC", VA = "0x15A66DC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001054")]
			[Address(RVA = "0x15A66E0", Offset = "0x15A66E0", VA = "0x15A66E0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001056")]
			[Address(RVA = "0x15A6814", Offset = "0x15A6814", VA = "0x15A6814", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000FFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Coroutine _updateManipulationCoroutine;

		[Token(Token = "0x1700026B")]
		public float Input
		{
			[Token(Token = "0x6001040")]
			[Address(RVA = "0x15A63BC", Offset = "0x15A63BC", VA = "0x15A63BC")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001041")]
			[Address(RVA = "0x15A63C4", Offset = "0x15A63C4", VA = "0x15A63C4")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700026C")]
		public float Velocity
		{
			[Token(Token = "0x6001042")]
			[Address(RVA = "0x15A63CC", Offset = "0x15A63CC", VA = "0x15A63CC")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001043")]
			[Address(RVA = "0x15A63D4", Offset = "0x15A63D4", VA = "0x15A63D4")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700026D")]
		public float Distance
		{
			[Token(Token = "0x6001044")]
			[Address(RVA = "0x15A63DC", Offset = "0x15A63DC", VA = "0x15A63DC")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001045")]
			[Address(RVA = "0x15A63E4", Offset = "0x15A63E4", VA = "0x15A63E4")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700026E")]
		public bool IsActive
		{
			[Token(Token = "0x6001046")]
			[Address(RVA = "0x15A63EC", Offset = "0x15A63EC", VA = "0x15A63EC")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001047")]
			[Address(RVA = "0x15A63F4", Offset = "0x15A63F4", VA = "0x15A63F4")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700026F")]
		public Transform HostTransform
		{
			[Token(Token = "0x6001048")]
			[Address(RVA = "0x15A6400", Offset = "0x15A6400", VA = "0x15A6400")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001049")]
			[Address(RVA = "0x15A6408", Offset = "0x15A6408", VA = "0x15A6408")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000270")]
		public Func<Vector3> GetTargetPosition
		{
			[Token(Token = "0x600104A")]
			[Address(RVA = "0x15A6410", Offset = "0x15A6410", VA = "0x15A6410")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600104B")]
			[Address(RVA = "0x15A6418", Offset = "0x15A6418", VA = "0x15A6418")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000271")]
		public override TransformFlags ConstraintType
		{
			[Token(Token = "0x600104C")]
			[Address(RVA = "0x15A6420", Offset = "0x15A6420", VA = "0x15A6420", Slot = "4")]
			get
			{
				return default(TransformFlags);
			}
		}

		[Token(Token = "0x600104D")]
		[Address(RVA = "0x15A6428", Offset = "0x15A6428", VA = "0x15A6428", Slot = "6")]
		public override void ApplyConstraint(ref MixedRealityTransform transform)
		{
		}

		[Token(Token = "0x600104E")]
		[Address(RVA = "0x15A659C", Offset = "0x15A659C", VA = "0x15A659C")]
		public Coroutine StartUpdateManipulation(ObjectDistanceConstraintSettings settings)
		{
			return null;
		}

		[Token(Token = "0x600104F")]
		[Address(RVA = "0x15A65F0", Offset = "0x15A65F0", VA = "0x15A65F0")]
		public void EndUpdateManipulation()
		{
		}

		[Token(Token = "0x6001050")]
		[Address(RVA = "0x15A661C", Offset = "0x15A661C", VA = "0x15A661C")]
		[IteratorStateMachine(typeof(<UpdateManipulation>d__30))]
		public IEnumerator UpdateManipulation(ObjectDistanceConstraintSettings settings)
		{
			return null;
		}

		[Token(Token = "0x6001051")]
		[Address(RVA = "0x15A66D4", Offset = "0x15A66D4", VA = "0x15A66D4")]
		public ObjectDistanceConstraint()
		{
		}
	}
	[Token(Token = "0x200031A")]
	public class HandConstraintPalmUpWithController : HandConstraintPalmUp
	{
		[Token(Token = "0x4001004")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		public Vector3 HandToWorldRotationController;

		[Token(Token = "0x4001005")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public Vector3 HandToWorldRotationHand;

		[Token(Token = "0x6001058")]
		[Address(RVA = "0x15A685C", Offset = "0x15A685C", VA = "0x15A685C", Slot = "16")]
		protected override Quaternion CalculateGoalRotation()
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6001059")]
		[Address(RVA = "0x15A6B54", Offset = "0x15A6B54", VA = "0x15A6B54", Slot = "18")]
		protected override bool IsOppositeHandNear(IMixedRealityController controller)
		{
			return default(bool);
		}

		[Token(Token = "0x600105A")]
		[Address(RVA = "0x15A6B88", Offset = "0x15A6B88", VA = "0x15A6B88")]
		public HandConstraintPalmUpWithController()
		{
		}
	}
	[Token(Token = "0x200031B")]
	public class MRTKHandMenuHandler : InputSystemGlobalHandlerListener, IMixedRealitySourceStateHandler, IEventSystemHandler
	{
		[Serializable]
		[Token(Token = "0x200031C")]
		private class MenuContentPose
		{
			[Token(Token = "0x4001015")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public TrackedObjectType InputSourceType;

			[Token(Token = "0x4001016")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public Vector3 LocalPosition;

			[Token(Token = "0x4001017")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Vector3 LocalRotation;

			[Token(Token = "0x4001018")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public Vector3 AdditionalOffset;

			[Token(Token = "0x4001019")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Vector3 AdditionalRotation;

			[Token(Token = "0x6001078")]
			[Address(RVA = "0x15A823C", Offset = "0x15A823C", VA = "0x15A823C")]
			public MenuContentPose()
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200031D")]
		[CompilerGenerated]
		private struct <WaitUntilInactiveAndRefresh>d__28 : IAsyncStateMachine
		{
			[Token(Token = "0x400101A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x400101B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x400101C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public MRTKHandMenuHandler <>4__this;

			[Token(Token = "0x400101D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x6001079")]
			[Address(RVA = "0x15A8244", Offset = "0x15A8244", VA = "0x15A8244", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x600107A")]
			[Address(RVA = "0x15A8538", Offset = "0x15A8538", VA = "0x15A8538", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4001006")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private SolverHandler _solverHandler;

		[Token(Token = "0x4001007")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform _menuContent;

		[Token(Token = "0x4001008")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MenuContentPose[] _menuContentPoses;

		[Token(Token = "0x4001009")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Toggle _pinHandMenuToggle;

		[Token(Token = "0x400100A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private RadialView _radialView;

		[Token(Token = "0x400100B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private HandConstraint _handConstraint;

		[Token(Token = "0x400100C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private HandMenuHandler _handMenuHandler;

		[Token(Token = "0x400100D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private ObjectManipulator _objectManipulator;

		[Token(Token = "0x400100E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool _handConstraintMet;

		[Token(Token = "0x400100F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private bool _isPicked;

		[Token(Token = "0x4001010")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
		private bool _lastIsPickedOrPinned;

		[Token(Token = "0x4001011")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private TrackedObjectType _lastTrackedTargetType;

		[Token(Token = "0x4001012")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool _initialized;

		[Token(Token = "0x4001014")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private CancellationTokenSource _closeButtonWaitCancellationTokenSource;

		[Token(Token = "0x17000274")]
		public bool IsBeingManipulated
		{
			[Token(Token = "0x600105B")]
			[Address(RVA = "0x15A6BA4", Offset = "0x15A6BA4", VA = "0x15A6BA4")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600105C")]
			[Address(RVA = "0x15A6BAC", Offset = "0x15A6BAC", VA = "0x15A6BAC")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000275")]
		public HandMenuHandler HandMenuHandler
		{
			[Token(Token = "0x600105D")]
			[Address(RVA = "0x15A6BB8", Offset = "0x15A6BB8", VA = "0x15A6BB8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000276")]
		public SolverHandler SolverHandler
		{
			[Token(Token = "0x600105E")]
			[Address(RVA = "0x15A6BC0", Offset = "0x15A6BC0", VA = "0x15A6BC0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000277")]
		public static InputSourceType? DetectedInputSourceType
		{
			[Token(Token = "0x600105F")]
			[Address(RVA = "0x15A6BC8", Offset = "0x15A6BC8", VA = "0x15A6BC8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000278")]
		public bool IsPinned
		{
			[Token(Token = "0x6001069")]
			[Address(RVA = "0x15A8034", Offset = "0x15A8034", VA = "0x15A8034")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000279")]
		public bool IsPicked
		{
			[Token(Token = "0x600106B")]
			[Address(RVA = "0x15A8050", Offset = "0x15A8050", VA = "0x15A8050")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001060")]
		[Address(RVA = "0x15A6E7C", Offset = "0x15A6E7C", VA = "0x15A6E7C", Slot = "7")]
		protected override void RegisterHandlers()
		{
		}

		[Token(Token = "0x6001061")]
		[Address(RVA = "0x15A7518", Offset = "0x15A7518", VA = "0x15A7518", Slot = "8")]
		protected override void UnregisterHandlers()
		{
		}

		[Token(Token = "0x6001062")]
		[Address(RVA = "0x15A7880", Offset = "0x15A7880", VA = "0x15A7880")]
		private void OnCloseClicked()
		{
		}

		[Token(Token = "0x6001063")]
		[Address(RVA = "0x15A78B0", Offset = "0x15A78B0", VA = "0x15A78B0")]
		[AsyncStateMachine(typeof(<WaitUntilInactiveAndRefresh>d__28))]
		private void WaitUntilInactiveAndRefresh()
		{
		}

		[Token(Token = "0x6001064")]
		[Address(RVA = "0x15A7968", Offset = "0x15A7968", VA = "0x15A7968")]
		private void OnLastHandLost()
		{
		}

		[Token(Token = "0x6001065")]
		[Address(RVA = "0x15A7F00", Offset = "0x15A7F00", VA = "0x15A7F00")]
		private void OnFirstHandDetected()
		{
		}

		[Token(Token = "0x6001066")]
		[Address(RVA = "0x15A7F4C", Offset = "0x15A7F4C", VA = "0x15A7F4C")]
		private void OnPinHandMenuToggleValueChanged(bool value)
		{
		}

		[Token(Token = "0x6001067")]
		[Address(RVA = "0x15A7F90", Offset = "0x15A7F90", VA = "0x15A7F90")]
		private void OnManipulationStarted(Microsoft.MixedReality.Toolkit.UI.ManipulationEventData eventData)
		{
		}

		[Token(Token = "0x6001068")]
		[Address(RVA = "0x15A7FE4", Offset = "0x15A7FE4", VA = "0x15A7FE4")]
		private void OnManipulationEnded(Microsoft.MixedReality.Toolkit.UI.ManipulationEventData eventData)
		{
		}

		[Token(Token = "0x600106A")]
		[Address(RVA = "0x15A7F54", Offset = "0x15A7F54", VA = "0x15A7F54")]
		public void SetPinned(bool value)
		{
		}

		[Token(Token = "0x600106C")]
		[Address(RVA = "0x15A8058", Offset = "0x15A8058", VA = "0x15A8058")]
		public void SetPicked(bool value)
		{
		}

		[Token(Token = "0x600106D")]
		[Address(RVA = "0x15A80A4", Offset = "0x15A80A4", VA = "0x15A80A4")]
		public void ResetPickedAndPinned()
		{
		}

		[Token(Token = "0x600106E")]
		[Address(RVA = "0x15A80DC", Offset = "0x15A80DC", VA = "0x15A80DC")]
		public void Refresh()
		{
		}

		[Token(Token = "0x600106F")]
		[Address(RVA = "0x15A8124", Offset = "0x15A8124", VA = "0x15A8124")]
		public void UpdateImmediately()
		{
		}

		[Token(Token = "0x6001070")]
		[Address(RVA = "0x15A79A8", Offset = "0x15A79A8", VA = "0x15A79A8")]
		private void SetupHandmenu(bool handConstraintMet, InputSourceType? primaryPointerSourceType, bool isPinned, bool isBeingManipulated, bool isPicked)
		{
		}

		[Token(Token = "0x6001071")]
		[Address(RVA = "0x15A817C", Offset = "0x15A817C", VA = "0x15A817C")]
		public static void ForceUpdate(Solver solver)
		{
		}

		[Token(Token = "0x6001072")]
		[Address(RVA = "0x15A81B8", Offset = "0x15A81B8", VA = "0x15A81B8", Slot = "9")]
		public void OnSourceDetected(SourceStateEventData eventData)
		{
		}

		[Token(Token = "0x6001073")]
		[Address(RVA = "0x15A7370", Offset = "0x15A7370", VA = "0x15A7370")]
		private void OnControllerDetected(IMixedRealityController controller)
		{
		}

		[Token(Token = "0x6001074")]
		[Address(RVA = "0x15A81D0", Offset = "0x15A81D0", VA = "0x15A81D0", Slot = "10")]
		public void OnSourceLost(SourceStateEventData eventData)
		{
		}

		[Token(Token = "0x6001075")]
		[Address(RVA = "0x15A81D4", Offset = "0x15A81D4", VA = "0x15A81D4")]
		public MRTKHandMenuHandler()
		{
		}
	}
	[Token(Token = "0x200031E")]
	[CreateAssetMenu(fileName = "MRTKInputSettings", menuName = "MRTK/MRTKInputSettings")]
	public class MRTKInputSettings : ScriptableObject
	{
		[Token(Token = "0x400101E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("Actions")]
		[Tooltip("Action to use for calling Click events")]
		[SerializeField]
		private MixedRealityInputAction _clickAction;

		[Token(Token = "0x400101F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MixedRealityInputAction _undoAction;

		[Token(Token = "0x4001020")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private MixedRealityInputAction _redoAction;

		[Token(Token = "0x4001021")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private MixedRealityInputAction _teleportDirectionAction;

		[Token(Token = "0x4001022")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private MixedRealityInputAction _spatialPointerPoseAction;

		[Token(Token = "0x4001023")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private MixedRealityInputAction _moveContainerAction;

		[Token(Token = "0x4001024")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private MixedRealityInputAction _networkPointerAction;

		[Token(Token = "0x4001025")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private MixedRealityInputAction _selectAction;

		[Token(Token = "0x4001026")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private MixedRealityInputAction _gripPressAction;

		[Token(Token = "0x4001027")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		private MixedRealityInputAction _menuAction;

		[Token(Token = "0x4001028")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[SerializeField]
		private MixedRealityInputAction _fourAction;

		[Token(Token = "0x4001029")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[SerializeField]
		[Header("Settings")]
		private Microsoft.MixedReality.Toolkit.Utilities.Handedness _teleportHandedness;

		[Token(Token = "0x1700027A")]
		public MixedRealityInputAction ClickAction
		{
			[Token(Token = "0x600107B")]
			[Address(RVA = "0x15A8544", Offset = "0x15A8544", VA = "0x15A8544")]
			get
			{
				return default(MixedRealityInputAction);
			}
		}

		[Token(Token = "0x1700027B")]
		public MixedRealityInputAction RedoAction
		{
			[Token(Token = "0x600107C")]
			[Address(RVA = "0x15A8558", Offset = "0x15A8558", VA = "0x15A8558")]
			get
			{
				return default(MixedRealityInputAction);
			}
		}

		[Token(Token = "0x1700027C")]
		public MixedRealityInputAction TeleportDirectionAction
		{
			[Token(Token = "0x600107D")]
			[Address(RVA = "0x15A856C", Offset = "0x15A856C", VA = "0x15A856C")]
			get
			{
				return default(MixedRealityInputAction);
			}
		}

		[Token(Token = "0x1700027D")]
		public MixedRealityInputAction SpatialPointerPoseAction
		{
			[Token(Token = "0x600107E")]
			[Address(RVA = "0x15A8580", Offset = "0x15A8580", VA = "0x15A8580")]
			get
			{
				return default(MixedRealityInputAction);
			}
		}

		[Token(Token = "0x1700027E")]
		public Microsoft.MixedReality.Toolkit.Utilities.Handedness TeleportHandedness
		{
			[Token(Token = "0x600107F")]
			[Address(RVA = "0x15A8594", Offset = "0x15A8594", VA = "0x15A8594")]
			get
			{
				return default(Microsoft.MixedReality.Toolkit.Utilities.Handedness);
			}
		}

		[Token(Token = "0x1700027F")]
		public MixedRealityInputAction UndoAction
		{
			[Token(Token = "0x6001080")]
			[Address(RVA = "0x15A859C", Offset = "0x15A859C", VA = "0x15A859C")]
			get
			{
				return default(MixedRealityInputAction);
			}
		}

		[Token(Token = "0x17000280")]
		public MixedRealityInputAction MoveContainerAction
		{
			[Token(Token = "0x6001081")]
			[Address(RVA = "0x15A85B0", Offset = "0x15A85B0", VA = "0x15A85B0")]
			get
			{
				return default(MixedRealityInputAction);
			}
		}

		[Token(Token = "0x17000281")]
		public MixedRealityInputAction NetworkPointerAction
		{
			[Token(Token = "0x6001082")]
			[Address(RVA = "0x15A85C4", Offset = "0x15A85C4", VA = "0x15A85C4")]
			get
			{
				return default(MixedRealityInputAction);
			}
		}

		[Token(Token = "0x17000282")]
		public MixedRealityInputAction SelectAction
		{
			[Token(Token = "0x6001083")]
			[Address(RVA = "0x15A85D8", Offset = "0x15A85D8", VA = "0x15A85D8")]
			get
			{
				return default(MixedRealityInputAction);
			}
		}

		[Token(Token = "0x17000283")]
		public MixedRealityInputAction GripPressAction
		{
			[Token(Token = "0x6001084")]
			[Address(RVA = "0x15A85EC", Offset = "0x15A85EC", VA = "0x15A85EC")]
			get
			{
				return default(MixedRealityInputAction);
			}
		}

		[Token(Token = "0x17000284")]
		public MixedRealityInputAction MenuAction
		{
			[Token(Token = "0x6001085")]
			[Address(RVA = "0x15A8600", Offset = "0x15A8600", VA = "0x15A8600")]
			get
			{
				return default(MixedRealityInputAction);
			}
		}

		[Token(Token = "0x17000285")]
		public MixedRealityInputAction FourAction
		{
			[Token(Token = "0x6001086")]
			[Address(RVA = "0x15A8614", Offset = "0x15A8614", VA = "0x15A8614")]
			get
			{
				return default(MixedRealityInputAction);
			}
		}

		[Token(Token = "0x6001087")]
		[Address(RVA = "0x15A862C", Offset = "0x15A862C", VA = "0x15A862C")]
		public MRTKInputSettings()
		{
		}
	}
	[Token(Token = "0x200031F")]
	public class PointerEventProxy : MonoBehaviour, IMixedRealityPointerHandler, IEventSystemHandler
	{
		[Token(Token = "0x17000286")]
		public IMixedRealityPointerHandler Destination
		{
			[Token(Token = "0x6001088")]
			[Address(RVA = "0x15A89FC", Offset = "0x15A89FC", VA = "0x15A89FC")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001089")]
			[Address(RVA = "0x15A8A04", Offset = "0x15A8A04", VA = "0x15A8A04")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x600108A")]
		[Address(RVA = "0x15A8A0C", Offset = "0x15A8A0C", VA = "0x15A8A0C", Slot = "8")]
		public virtual void OnPointerClicked(MixedRealityPointerEventData eventData)
		{
		}

		[Token(Token = "0x600108B")]
		[Address(RVA = "0x15A8AC0", Offset = "0x15A8AC0", VA = "0x15A8AC0", Slot = "9")]
		public virtual void OnPointerDown(MixedRealityPointerEventData eventData)
		{
		}

		[Token(Token = "0x600108C")]
		[Address(RVA = "0x15A8B70", Offset = "0x15A8B70", VA = "0x15A8B70", Slot = "10")]
		public virtual void OnPointerDragged(MixedRealityPointerEventData eventData)
		{
		}

		[Token(Token = "0x600108D")]
		[Address(RVA = "0x15A8C24", Offset = "0x15A8C24", VA = "0x15A8C24", Slot = "11")]
		public virtual void OnPointerUp(MixedRealityPointerEventData eventData)
		{
		}

		[Token(Token = "0x600108E")]
		[Address(RVA = "0x15A8CD8", Offset = "0x15A8CD8", VA = "0x15A8CD8")]
		public PointerEventProxy()
		{
		}
	}
	[Token(Token = "0x2000320")]
	public class SpherePointerNearVisualizer : MonoBehaviour
	{
		[Token(Token = "0x400102B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private SpherePointer _spherePointer;

		[Token(Token = "0x400102C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Renderer _graspPointRenderer;

		[Token(Token = "0x400102D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float _duration;

		[Token(Token = "0x400102E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float _originalAlpha;

		[Token(Token = "0x400102F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool _lastShouldVisualize;

		[Token(Token = "0x4001030")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TweenerCore<Color, Color, ColorOptions> _colorTweener;

		[Token(Token = "0x4001031")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly ProfilerMarker UpdatePerfMarker;

		[Token(Token = "0x600108F")]
		[Address(RVA = "0x15A8CE0", Offset = "0x15A8CE0", VA = "0x15A8CE0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001090")]
		[Address(RVA = "0x15A8E2C", Offset = "0x15A8E2C", VA = "0x15A8E2C")]
		public void OnDestroy()
		{
		}

		[Token(Token = "0x6001091")]
		[Address(RVA = "0x15A8EA0", Offset = "0x15A8EA0", VA = "0x15A8EA0")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x6001092")]
		[Address(RVA = "0x15A9008", Offset = "0x15A9008", VA = "0x15A9008")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001093")]
		[Address(RVA = "0x15A9034", Offset = "0x15A9034", VA = "0x15A9034")]
		private void Update()
		{
		}

		[Token(Token = "0x6001094")]
		[Address(RVA = "0x15A8EA4", Offset = "0x15A8EA4", VA = "0x15A8EA4")]
		private void CheckInitialization()
		{
		}

		[Token(Token = "0x6001095")]
		[Address(RVA = "0x15A95F0", Offset = "0x15A95F0", VA = "0x15A95F0")]
		public SpherePointerNearVisualizer()
		{
		}
	}
}
namespace VR.Localization
{
	[Serializable]
	[Token(Token = "0x2000321")]
	public class AnatomyLocalizationSettings
	{
		[Token(Token = "0x4001032")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AnatomyLocalizationDatabase LocalizationUni;

		[Token(Token = "0x4001033")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AnatomyLocalizationDatabase LocalizationHs;

		[Token(Token = "0x6001097")]
		[Address(RVA = "0x15A966C", Offset = "0x15A966C", VA = "0x15A966C")]
		public AnatomyLocalizationSettings()
		{
		}
	}
	[Token(Token = "0x2000322")]
	public static class AnatomyLocalizationManagerExtensions
	{
		[Token(Token = "0x4001034")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly LocalizationLanguage[] Fallback;

		[Token(Token = "0x4001035")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly LocalizationLanguage[] UniversityStoreLanguages;

		[Token(Token = "0x4001036")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly LocalizationLanguage[] HighSchoolStoreLanguages;

		[Token(Token = "0x4001037")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static readonly LocalizationLanguage[] InstitutionalUiLanguages;

		[Token(Token = "0x6001098")]
		[Address(RVA = "0x15A9674", Offset = "0x15A9674", VA = "0x15A9674")]
		public static AnatomyLocalizationDatabase GetLocalizationDatabase(this AnatomyLocalizationSettings settings, EducationLevel educationLevel)
		{
			return null;
		}

		[Token(Token = "0x6001099")]
		[Address(RVA = "0x15A96B0", Offset = "0x15A96B0", VA = "0x15A96B0")]
		public static IEnumerable<LocalizationLanguage> GetSupportedLanguages(this AnatomyLocalizationSettings settings, EducationLevel educationLevel, string licenseHolderName)
		{
			return null;
		}

		[Token(Token = "0x600109A")]
		[Address(RVA = "0x15A9964", Offset = "0x15A9964", VA = "0x15A9964")]
		public static IEnumerable<LocalizationLanguage> GetUiSupportedLanguages(string licenseHolderName)
		{
			return null;
		}
	}
	[Token(Token = "0x2000324")]
	[CreateAssetMenu]
	public class AnatomyLocalizationSettingsScriptableObject : ScriptableObject
	{
		[Token(Token = "0x400103A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AnatomyLocalizationSettings _settings;

		[Token(Token = "0x17000287")]
		public AnatomyLocalizationSettings Instance
		{
			[Token(Token = "0x600109F")]
			[Address(RVA = "0x15A9BA0", Offset = "0x15A9BA0", VA = "0x15A9BA0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60010A0")]
		[Address(RVA = "0x15A9BA8", Offset = "0x15A9BA8", VA = "0x15A9BA8")]
		public AnatomyLocalizationSettingsScriptableObject()
		{
		}
	}
}
namespace VR.Licensing
{
	[Token(Token = "0x2000325")]
	public static class Capabilities
	{
		[Token(Token = "0x2000326")]
		[CompilerGenerated]
		private sealed class <get_All>d__8 : IEnumerable<string>, IEnumerable, IEnumerator<string>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001042")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001043")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private string <>2__current;

			[Token(Token = "0x4001044")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x17000289")]
			private string System.Collections.Generic.IEnumerator<System.String>.Current
			{
				[Token(Token = "0x60010A5")]
				[Address(RVA = "0x15A9D90", Offset = "0x15A9D90", VA = "0x15A9D90", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700028A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60010A7")]
				[Address(RVA = "0x15A9DD8", Offset = "0x15A9DD8", VA = "0x15A9DD8", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60010A2")]
			[Address(RVA = "0x15A9C20", Offset = "0x15A9C20", VA = "0x15A9C20")]
			[DebuggerHidden]
			public <get_All>d__8(int <>1__state)
			{
			}

			[Token(Token = "0x60010A3")]
			[Address(RVA = "0x15A9C54", Offset = "0x15A9C54", VA = "0x15A9C54", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60010A4")]
			[Address(RVA = "0x15A9C58", Offset = "0x15A9C58", VA = "0x15A9C58", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60010A6")]
			[Address(RVA = "0x15A9D98", Offset = "0x15A9D98", VA = "0x15A9D98", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x60010A8")]
			[Address(RVA = "0x15A9DE0", Offset = "0x15A9DE0", VA = "0x15A9DE0", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<string> System.Collections.Generic.IEnumerable<System.String>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x60010A9")]
			[Address(RVA = "0x15A9E78", Offset = "0x15A9E78", VA = "0x15A9E78", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x400103B")]
		public const string University = "university";

		[Token(Token = "0x400103C")]
		public const string HighSchool = "highschool";

		[Token(Token = "0x400103D")]
		public const string Animations = "animations";

		[Token(Token = "0x400103E")]
		public const string Dicom = "dicom";

		[Token(Token = "0x400103F")]
		public const string Cadavers = "cadavers";

		[Token(Token = "0x4001040")]
		public const string Multiuser = "multiuser";

		[Token(Token = "0x4001041")]
		public const string Tests = "tests";

		[Token(Token = "0x17000288")]
		public static IEnumerable<string> All
		{
			[Token(Token = "0x60010A1")]
			[Address(RVA = "0x15A9BB0", Offset = "0x15A9BB0", VA = "0x15A9BB0")]
			[IteratorStateMachine(typeof(<get_All>d__8))]
			get
			{
				return null;
			}
		}
	}
	[Token(Token = "0x2000327")]
	public interface ILicenseValidatorProvider
	{
		[Token(Token = "0x60010AA")]
		bool HasCapability(string value);
	}
	[Token(Token = "0x2000328")]
	public static class LicenseValidatorProviderExtensions
	{
		[Token(Token = "0x4001045")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly IReadOnlyCollection<Database.SystemType> FreeSystemTypes;

		[Token(Token = "0x4001046")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly IReadOnlyCollection<string> FreeAnimationIds;

		[Token(Token = "0x60010AB")]
		[Address(RVA = "0x15A9E7C", Offset = "0x15A9E7C", VA = "0x15A9E7C")]
		public static bool IsLicenseValid(this IEnumerable<ILicenseValidatorProvider> licenseValidatorProviders, Database.SystemType systemType, EducationLevel educationLevel)
		{
			return default(bool);
		}

		[Token(Token = "0x60010AC")]
		[Address(RVA = "0x15AA064", Offset = "0x15AA064", VA = "0x15AA064")]
		public static bool IsAnimationLicenseValid(this IEnumerable<ILicenseValidatorProvider> licenseValidatorProviders, string animationId)
		{
			return default(bool);
		}

		[Token(Token = "0x60010AD")]
		[Address(RVA = "0x15A9F84", Offset = "0x15A9F84", VA = "0x15A9F84")]
		public static bool HasCapability(this IEnumerable<ILicenseValidatorProvider> licenseValidatorProviders, string value)
		{
			return default(bool);
		}

		[Token(Token = "0x60010AE")]
		[Address(RVA = "0x15AA138", Offset = "0x15AA138", VA = "0x15AA138")]
		public static IObservable<Unit> ObserveStateChanged(this IReadOnlyCollection<ILicenseValidatorProvider> licenseValidatorProviders)
		{
			return null;
		}
	}
	[Token(Token = "0x200032C")]
	public class AnatomyLicenseValidatorBehaviour : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200032D")]
		public class ProviderTypeConfiguration
		{
			[Token(Token = "0x200032E")]
			[Flags]
			private enum Capabilities
			{
				[Token(Token = "0x4001056")]
				University = 1,
				[Token(Token = "0x4001057")]
				HighSchool = 4,
				[Token(Token = "0x4001058")]
				Animations = 8,
				[Token(Token = "0x4001059")]
				Dicom = 0x10,
				[Token(Token = "0x400105A")]
				Cadavers = 0x20,
				[Token(Token = "0x400105B")]
				Multiuser = 0x40,
				[Token(Token = "0x400105C")]
				Tests = 0x80
			}

			[Token(Token = "0x4001050")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private static readonly System.Collections.Generic.IReadOnlyDictionary<Capabilities, string> CapabilityDict;

			[Token(Token = "0x4001051")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[Implements(typeof(ILicenseValidatorProvider), TypeGrouping.ByNamespaceFlat)]
			public Microsoft.MixedReality.Toolkit.Utilities.SystemType Type;

			[Token(Token = "0x4001052")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Microsoft.MixedReality.Toolkit.Utilities.SupportedPlatforms UnityPlatform;

			[Token(Token = "0x4001053")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public Platforms.SupportedPlatforms XrPlatform;

			[Token(Token = "0x4001054")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[SerializeField]
			private Capabilities _genericProviderCapabilities;

			[Token(Token = "0x1700028C")]
			public IEnumerable<string> GenericProviderCapabilities
			{
				[Token(Token = "0x60010BB")]
				[Address(RVA = "0x15AAE0C", Offset = "0x15AAE0C", VA = "0x15AAE0C")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60010BC")]
			[Address(RVA = "0x15AB094", Offset = "0x15AB094", VA = "0x15AB094")]
			public ProviderTypeConfiguration()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000330")]
		public class Configuration
		{
			[Token(Token = "0x4001060")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ProviderTypeConfiguration[] Providers;

			[Token(Token = "0x60010C2")]
			[Address(RVA = "0x15AB49C", Offset = "0x15AB49C", VA = "0x15AB49C")]
			public Configuration()
			{
			}
		}

		[Token(Token = "0x400104C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private LicenseManagerBehaviour _licenseManagerBehaviour;

		[Token(Token = "0x400104D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private OculusIAPHandler _oculusIAPHandler;

		[Token(Token = "0x400104E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AnatomyConfiguration _anatomyConfiguration;

		[Token(Token = "0x400104F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ILicenseValidatorProvider[] _licenseValidatorProviders;

		[Token(Token = "0x1700028B")]
		public IReadOnlyList<ILicenseValidatorProvider> LicenseValidatorProviders
		{
			[Token(Token = "0x60010B7")]
			[Address(RVA = "0x15AA8D8", Offset = "0x15AA8D8", VA = "0x15AA8D8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60010B8")]
		[Address(RVA = "0x15AA94C", Offset = "0x15AA94C", VA = "0x15AA94C")]
		public IEnumerable<ILicenseValidatorProvider> GetProviders()
		{
			return null;
		}

		[Token(Token = "0x60010B9")]
		[Address(RVA = "0x15AAB98", Offset = "0x15AAB98", VA = "0x15AAB98")]
		public AnatomyLicenseValidatorBehaviour()
		{
		}
	}
	[Token(Token = "0x2000332")]
	public class CloudLicenseValidator : ILicenseValidatorProvider
	{
		[Token(Token = "0x4001064")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ILicenseManager LicenseManager;

		[Token(Token = "0x60010C7")]
		[Address(RVA = "0x15AADDC", Offset = "0x15AADDC", VA = "0x15AADDC")]
		public CloudLicenseValidator(ILicenseManager licenseManager)
		{
		}

		[Token(Token = "0x60010C8")]
		[Address(RVA = "0x15AB5AC", Offset = "0x15AB5AC", VA = "0x15AB5AC", Slot = "4")]
		public bool HasCapability(string value)
		{
			return default(bool);
		}

		[Token(Token = "0x60010C9")]
		[Address(RVA = "0x15AB7C8", Offset = "0x15AB7C8", VA = "0x15AB7C8")]
		public static bool IsValid(LicenseData licenseData, EducationLevel educationLevel)
		{
			return default(bool);
		}

		[Token(Token = "0x60010CA")]
		[Address(RVA = "0x15AB658", Offset = "0x15AB658", VA = "0x15AB658")]
		public static bool HasCapability(LicenseData licenseData, string value)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000333")]
	public class GenericLicenseValidator : ILicenseValidatorProvider
	{
		[Token(Token = "0x4001065")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly IReadOnlyCollection<string> Capabilities;

		[Token(Token = "0x60010CB")]
		[Address(RVA = "0x15AAFFC", Offset = "0x15AAFFC", VA = "0x15AAFFC")]
		public GenericLicenseValidator(IEnumerable<string> capabilities)
		{
		}

		[Token(Token = "0x60010CC")]
		[Address(RVA = "0x15AB7F0", Offset = "0x15AB7F0", VA = "0x15AB7F0", Slot = "4")]
		public bool HasCapability(string value)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000334")]
	public static class IAPDefinitions
	{
		[Token(Token = "0x2000335")]
		public enum PriceType
		{
			[Token(Token = "0x4001073")]
			Introductory,
			[Token(Token = "0x4001074")]
			Full
		}

		[Token(Token = "0x2000336")]
		public enum ItemType
		{
			[Token(Token = "0x4001076")]
			Student,
			[Token(Token = "0x4001077")]
			Educator,
			[Token(Token = "0x4001078")]
			Professional
		}

		[Token(Token = "0x4001066")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly TimeSpan Year;

		[Token(Token = "0x4001067")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly TimeSpan TrialPeriod;

		[Token(Token = "0x4001068")]
		public const string STUDENT_INTR = "com.medicinevirtual.humananatomyvr.iap.v1.uni.studentintroductory";

		[Token(Token = "0x4001069")]
		public const string EDUCATOR_INTR = "com.medicinevirtual.humananatomyvr.iap.v1.uni.educatorintroductory";

		[Token(Token = "0x400106A")]
		public const string PROFESSIONAL_INTR = "com.medicinevirtual.humananatomyvr.iap.v1.uni.professionalintroductory";

		[Token(Token = "0x400106B")]
		public const string STUDENT = "com.medicinevirtual.humananatomyvr.iap.v1.uni.student";

		[Token(Token = "0x400106C")]
		public const string EDUCATOR = "com.medicinevirtual.humananatomyvr.iap.v1.uni.educator";

		[Token(Token = "0x400106D")]
		public const string PROFESSIONAL = "com.medicinevirtual.humananatomyvr.iap.v1.uni.professional";

		[Token(Token = "0x400106E")]
		public const string TRIAL = "com.medicinevirtual.humananatomyvr.iap.v1.uni.trial";

		[Token(Token = "0x400106F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly IReadOnlyList<(ItemType ItemType, PriceType PriceType, string Sku)> Yearly;

		[Token(Token = "0x4001070")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static readonly System.Collections.Generic.IReadOnlyDictionary<string, (ItemType ItemType, PriceType PriceType)> YearlyBySku;

		[Token(Token = "0x4001071")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static readonly System.Collections.Generic.IReadOnlyDictionary<(ItemType ItemType, PriceType PriceType), string> YearlyDict;
	}
	[Token(Token = "0x2000338")]
	public class OculusIAPHandler : MonoBehaviour
	{
		[Token(Token = "0x400107A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly System.Collections.Generic.IReadOnlyDictionary<string, Purchase> EmptyPurchases;

		[Token(Token = "0x400107B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly System.Collections.Generic.IReadOnlyDictionary<string, Oculus.Platform.Models.Product> EmptyProducts;

		[Token(Token = "0x400107E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static readonly string[] Skus;

		[Token(Token = "0x1700028D")]
		public System.Collections.Generic.IReadOnlyDictionary<string, Purchase> Purchases
		{
			[Token(Token = "0x60010D4")]
			[Address(RVA = "0x15ABE6C", Offset = "0x15ABE6C", VA = "0x15ABE6C")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60010D5")]
			[Address(RVA = "0x15ABE74", Offset = "0x15ABE74", VA = "0x15ABE74")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700028E")]
		public System.Collections.Generic.IReadOnlyDictionary<string, Oculus.Platform.Models.Product> Products
		{
			[Token(Token = "0x60010D6")]
			[Address(RVA = "0x15ABE7C", Offset = "0x15ABE7C", VA = "0x15ABE7C")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60010D7")]
			[Address(RVA = "0x15ABE84", Offset = "0x15ABE84", VA = "0x15ABE84")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x60010D8")]
		[Address(RVA = "0x15ABE8C", Offset = "0x15ABE8C", VA = "0x15ABE8C")]
		private void Start()
		{
		}

		[Token(Token = "0x60010D9")]
		[Address(RVA = "0x15ABE90", Offset = "0x15ABE90", VA = "0x15ABE90")]
		public void Initialize()
		{
		}

		[Token(Token = "0x60010DA")]
		[Address(RVA = "0x15AC07C", Offset = "0x15AC07C", VA = "0x15AC07C")]
		public void UpdateProducts()
		{
		}

		[Token(Token = "0x60010DB")]
		[Address(RVA = "0x15AC19C", Offset = "0x15AC19C", VA = "0x15AC19C")]
		public void UpdatePurchases()
		{
		}

		[Token(Token = "0x60010DC")]
		[Address(RVA = "0x15AC290", Offset = "0x15AC290", VA = "0x15AC290")]
		public void UpdatePurchasesFromCache()
		{
		}

		[Token(Token = "0x60010DD")]
		[Address(RVA = "0x15AC380", Offset = "0x15AC380", VA = "0x15AC380")]
		public void LaunchCheckoutFlow(string sku, Action<Purchase> onCompleted)
		{
		}

		[Token(Token = "0x60010DE")]
		[Address(RVA = "0x15AC4B0", Offset = "0x15AC4B0", VA = "0x15AC4B0")]
		public static bool IsSubscriptionActive(Purchase purchase, TimeSpan timespan)
		{
			return default(bool);
		}

		[Token(Token = "0x60010DF")]
		[Address(RVA = "0x15AC574", Offset = "0x15AC574", VA = "0x15AC574")]
		public bool IsSubscriptionActive(string sku, TimeSpan timespan)
		{
			return default(bool);
		}

		[Token(Token = "0x60010E0")]
		[Address(RVA = "0x15AC67C", Offset = "0x15AC67C", VA = "0x15AC67C")]
		public OculusIAPHandler()
		{
		}
	}
	[Token(Token = "0x200033B")]
	public class OculusLicenseValidator : ILicenseValidatorProvider
	{
		[Token(Token = "0x4001086")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly OculusIAPHandler OculusIAPHandler;

		[Token(Token = "0x60010EE")]
		[Address(RVA = "0x15AADAC", Offset = "0x15AADAC", VA = "0x15AADAC")]
		public OculusLicenseValidator(OculusIAPHandler oculusIAPHandler)
		{
		}

		[Token(Token = "0x60010EF")]
		[Address(RVA = "0x15AD3BC", Offset = "0x15AD3BC", VA = "0x15AD3BC", Slot = "4")]
		public bool HasCapability(string value)
		{
			return default(bool);
		}

		[Token(Token = "0x60010F0")]
		[Address(RVA = "0x15AD3C4", Offset = "0x15AD3C4", VA = "0x15AD3C4")]
		public static bool HasCapability(OculusIAPHandler oculusIAPHandler, string value)
		{
			return default(bool);
		}

		[Token(Token = "0x60010F1")]
		[Address(RVA = "0x15AD604", Offset = "0x15AD604", VA = "0x15AD604")]
		public static bool IsValid(Purchase purchase)
		{
			return default(bool);
		}
	}
}
namespace VR.Input
{
	[Token(Token = "0x200033C")]
	[Flags]
	public enum Handedness : byte
	{
		[Token(Token = "0x4001088")]
		None = 0,
		[Token(Token = "0x4001089")]
		Left = 1,
		[Token(Token = "0x400108A")]
		Right = 2,
		[Token(Token = "0x400108B")]
		Both = 3,
		[Token(Token = "0x400108C")]
		Other = 4,
		[Token(Token = "0x400108D")]
		Any = 7
	}
	[Token(Token = "0x200033D")]
	public class LazyWithValidityCheck<T>
	{
		[Token(Token = "0x400108E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly Func<T> _valueFactory;

		[Token(Token = "0x400108F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly Func<T, bool> _isValid;

		[Token(Token = "0x4001090")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T _value;

		[Token(Token = "0x1700028F")]
		public T Value
		{
			[Token(Token = "0x60010F3")]
			get
			{
				return (T)null;
			}
		}

		[Token(Token = "0x60010F2")]
		public LazyWithValidityCheck(Func<T> valueFactory, [Optional] Func<T, bool> isValid)
		{
		}
	}
	[Token(Token = "0x200033F")]
	public enum MovementType
	{
		[Token(Token = "0x4001094")]
		Teleport,
		[Token(Token = "0x4001095")]
		Locomotion
	}
	[Token(Token = "0x2000340")]
	public enum LocationTypeApplication
	{
		[Token(Token = "0x4001097")]
		Location,
		[Token(Token = "0x4001098")]
		FullBody
	}
	[Token(Token = "0x2000341")]
	public interface IClickable
	{
		[Token(Token = "0x17000290")]
		bool ClickEnabled
		{
			[Token(Token = "0x60010F7")]
			get;
		}

		[Token(Token = "0x60010F8")]
		void OnClick();
	}
	[Token(Token = "0x2000342")]
	public interface IGazeable
	{
		[Token(Token = "0x17000291")]
		bool FocusEnabled
		{
			[Token(Token = "0x60010F9")]
			get;
		}

		[Token(Token = "0x60010FA")]
		void SetFocused(bool value);
	}
	[Token(Token = "0x2000343")]
	public interface IGrabable
	{
		[Token(Token = "0x17000292")]
		GameObject GameObject
		{
			[Token(Token = "0x60010FB")]
			get;
		}

		[Token(Token = "0x17000293")]
		bool ManipulationEnabled
		{
			[Token(Token = "0x60010FC")]
			get;
		}

		[Token(Token = "0x17000294")]
		bool IsBeingManipulated
		{
			[Token(Token = "0x60010FD")]
			get;
		}

		[Token(Token = "0x60010FE")]
		void StartManipulation();

		[Token(Token = "0x60010FF")]
		void StopManipulation(Vector3 velocity, Vector3 angularVelocity);

		[Token(Token = "0x6001100")]
		void ForceEndManipulation();
	}
	[Token(Token = "0x2000344")]
	public interface IGrabableEvents<out T>
	{
		[Token(Token = "0x1400001F")]
		event Action<T> ObjectThrowCompleted;
	}
	[Token(Token = "0x2000345")]
	public interface IPickable
	{
		[Token(Token = "0x6001103")]
		void Return(float duration, [Optional] Action onCompleted);
	}
	[Token(Token = "0x2000346")]
	public interface IPickableEvents<out T>
	{
		[Token(Token = "0x14000020")]
		event Action<T> ObjectPicked;

		[Token(Token = "0x14000021")]
		event Action<T> ObjectReturned;
	}
	[Token(Token = "0x2000347")]
	public class AnatomyInputHandler : InputSystemGlobalHandlerListener, IMixedRealityFocusChangedHandler, IEventSystemHandler, IMixedRealityInputActionHandler, IMixedRealityBaseInputHandler, IMixedRealityInputHandler<Vector2>, IMixedRealityInputHandler<MixedRealityPose>, IMixedRealityPointerHandler, IMixedRealitySourceStateHandler, IMixedRealityObjectManipulationHandler
	{
		[Token(Token = "0x2000348")]
		public class SubpartFocusData
		{
			[Token(Token = "0x40010C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public VR.Views.ISubpartHost SubpartHost;

			[Token(Token = "0x40010CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector2 LastTextureCoord;

			[Token(Token = "0x40010CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public IGazeable LastFocusedItem;

			[Token(Token = "0x6001154")]
			[Address(RVA = "0x15B0668", Offset = "0x15B0668", VA = "0x15B0668")]
			public SubpartFocusData()
			{
			}
		}

		[Token(Token = "0x2000349")]
		private class DrawingRoutine
		{
			[Token(Token = "0x40010CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int Id;

			[Token(Token = "0x40010CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public IEnumerator Enumerator;

			[Token(Token = "0x40010CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CancellationTokenSource CancellationTokenSource;

			[Token(Token = "0x6001155")]
			[Address(RVA = "0x15B619C", Offset = "0x15B619C", VA = "0x15B619C")]
			public DrawingRoutine()
			{
			}
		}

		[Token(Token = "0x200034B")]
		[CompilerGenerated]
		private sealed class <>c__DisplayClass48_0
		{
			[Token(Token = "0x40010D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform itemTransform;

			[Token(Token = "0x40010D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector3? labelRootPositionReference;

			[Token(Token = "0x40010D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public IMixedRealityPointer pointer;

			[Token(Token = "0x40010D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public AnatomyInputHandler <>4__this;

			[Token(Token = "0x40010D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public IGazeable newValue;

			[Token(Token = "0x40010D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public object presentable;

			[Token(Token = "0x600115C")]
			[Address(RVA = "0x15B9DB0", Offset = "0x15B9DB0", VA = "0x15B9DB0")]
			public <>c__DisplayClass48_0()
			{
			}

			[Token(Token = "0x600115D")]
			[Address(RVA = "0x15B9DB8", Offset = "0x15B9DB8", VA = "0x15B9DB8")]
			internal Vector3 <OnFocusedItemChanged>b__0()
			{
				return default(Vector3);
			}

			[Token(Token = "0x600115F")]
			[Address(RVA = "0x15BA084", Offset = "0x15BA084", VA = "0x15BA084")]
			internal void <OnFocusedItemChanged>b__2()
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200034D")]
		[CompilerGenerated]
		private struct <OnFocusedItemChanged>d__48 : IAsyncStateMachine
		{
			[Token(Token = "0x40010DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40010DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x40010DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public IMixedRealityPointer pointer;

			[Token(Token = "0x40010E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public AnatomyInputHandler <>4__this;

			[Token(Token = "0x40010E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public IGazeable newValue;

			[Token(Token = "0x40010E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public IGazeable previousValue;

			[Token(Token = "0x40010E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private <>c__DisplayClass48_0 <>8__1;

			[Token(Token = "0x40010E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x6001162")]
			[Address(RVA = "0x15BA430", Offset = "0x15BA430", VA = "0x15BA430", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001163")]
			[Address(RVA = "0x15BB4C0", Offset = "0x15BB4C0", VA = "0x15BB4C0", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200034E")]
		[CompilerGenerated]
		private struct <OnUndoActionStarted>d__52 : IAsyncStateMachine
		{
			[Token(Token = "0x40010E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40010E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x40010E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public AnatomyInputHandler <>4__this;

			[Token(Token = "0x40010E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private CancellationToken <token>5__2;

			[Token(Token = "0x40010E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x6001164")]
			[Address(RVA = "0x15BB4CC", Offset = "0x15BB4CC", VA = "0x15BB4CC", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001165")]
			[Address(RVA = "0x15BB970", Offset = "0x15BB970", VA = "0x15BB970", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000351")]
		[CompilerGenerated]
		private struct <OnMenuActionStarted>d__63 : IAsyncStateMachine
		{
			[Token(Token = "0x40010EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40010ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x40010EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public AnatomyInputHandler <>4__this;

			[Token(Token = "0x40010EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private CancellationToken <token>5__2;

			[Token(Token = "0x40010F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x600116A")]
			[Address(RVA = "0x15BB9C4", Offset = "0x15BB9C4", VA = "0x15BB9C4", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x600116B")]
			[Address(RVA = "0x15BBD84", Offset = "0x15BBD84", VA = "0x15BBD84", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x2000352")]
		[CompilerGenerated]
		private sealed class <UpdatePointer>d__73 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40010F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40010F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40010F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public IMixedRealityPointer pointer;

			[Token(Token = "0x40010F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public LayerMask layerMask;

			[Token(Token = "0x40010F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private RaycastHit[] <results>5__2;

			[Token(Token = "0x40010F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private SkinnedMeshColliderComponent[] <hitList>5__3;

			[Token(Token = "0x40010F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Ray <ray>5__4;

			[Token(Token = "0x17000296")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600116F")]
				[Address(RVA = "0x15BC224", Offset = "0x15BC224", VA = "0x15BC224", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000297")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001171")]
				[Address(RVA = "0x15BC26C", Offset = "0x15BC26C", VA = "0x15BC26C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600116C")]
			[Address(RVA = "0x15B5968", Offset = "0x15B5968", VA = "0x15B5968")]
			[DebuggerHidden]
			public <UpdatePointer>d__73(int <>1__state)
			{
			}

			[Token(Token = "0x600116D")]
			[Address(RVA = "0x15BBD90", Offset = "0x15BBD90", VA = "0x15BBD90", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600116E")]
			[Address(RVA = "0x15BBD94", Offset = "0x15BBD94", VA = "0x15BBD94", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001170")]
			[Address(RVA = "0x15BC22C", Offset = "0x15BC22C", VA = "0x15BC22C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000353")]
		[CompilerGenerated]
		private struct <CreateDrawingAfterDelay>d__80 : IAsyncStateMachine
		{
			[Token(Token = "0x40010F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40010F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x40010FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int delay;

			[Token(Token = "0x40010FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public CancellationToken cancellationToken;

			[Token(Token = "0x40010FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public AnatomyInputHandler <>4__this;

			[Token(Token = "0x40010FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public DrawingPointer drawingPointer;

			[Token(Token = "0x40010FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x6001172")]
			[Address(RVA = "0x15BC274", Offset = "0x15BC274", VA = "0x15BC274", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001173")]
			[Address(RVA = "0x15BC614", Offset = "0x15BC614", VA = "0x15BC614", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000354")]
		[CompilerGenerated]
		private struct <CreateDrawing>d__81 : IAsyncStateMachine
		{
			[Token(Token = "0x40010FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001100")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4001101")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public AnatomyInputHandler <>4__this;

			[Token(Token = "0x4001102")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public IDrawingObjectData drawingObjectData;

			[Token(Token = "0x4001103")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private TaskAwaiter<IDrawingObjectInstance> <>u__1;

			[Token(Token = "0x6001174")]
			[Address(RVA = "0x15BC620", Offset = "0x15BC620", VA = "0x15BC620", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001175")]
			[Address(RVA = "0x15BC84C", Offset = "0x15BC84C", VA = "0x15BC84C", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000355")]
		[CompilerGenerated]
		private struct <DestroyDrawing>d__82<T> : IAsyncStateMachine
		{
			[Token(Token = "0x4001104")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001105")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4001106")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public AnatomyInputHandler <>4__this;

			[Token(Token = "0x4001107")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T drawingObjectInstance;

			[Token(Token = "0x4001108")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x6001176")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001177")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x2000356")]
		[CompilerGenerated]
		private sealed class <Draw>d__83 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001109")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400110A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400110B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AnatomyInputHandler <>4__this;

			[Token(Token = "0x400110C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int id;

			[Token(Token = "0x400110D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public DrawingPointer pointer;

			[Token(Token = "0x400110E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public float samplingInterval;

			[Token(Token = "0x17000298")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600117B")]
				[Address(RVA = "0x15BC9F4", Offset = "0x15BC9F4", VA = "0x15BC9F4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000299")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600117D")]
				[Address(RVA = "0x15BCA3C", Offset = "0x15BCA3C", VA = "0x15BCA3C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001178")]
			[Address(RVA = "0x15B6640", Offset = "0x15B6640", VA = "0x15B6640")]
			[DebuggerHidden]
			public <Draw>d__83(int <>1__state)
			{
			}

			[Token(Token = "0x6001179")]
			[Address(RVA = "0x15BC858", Offset = "0x15BC858", VA = "0x15BC858", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600117A")]
			[Address(RVA = "0x15BC85C", Offset = "0x15BC85C", VA = "0x15BC85C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600117C")]
			[Address(RVA = "0x15BC9FC", Offset = "0x15BC9FC", VA = "0x15BC9FC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000358")]
		[CompilerGenerated]
		private sealed class <>c__DisplayClass95_0
		{
			[Token(Token = "0x4001110")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public IGrabable grabable;

			[Token(Token = "0x6001180")]
			[Address(RVA = "0x15BCB0C", Offset = "0x15BCB0C", VA = "0x15BCB0C")]
			public <>c__DisplayClass95_0()
			{
			}

			[Token(Token = "0x6001181")]
			[Address(RVA = "0x15BCB14", Offset = "0x15BCB14", VA = "0x15BCB14")]
			internal bool <StartManipulation>b__1(PickItemFuncCommand<IInteractiveAnatomyItemInstance> m)
			{
				return default(bool);
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200035A")]
		[CompilerGenerated]
		private struct <StartManipulation>d__95 : IAsyncStateMachine
		{
			[Token(Token = "0x4001112")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001113")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4001114")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public GameObject obj;

			[Token(Token = "0x4001115")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public AnatomyInputHandler <>4__this;

			[Token(Token = "0x4001116")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public global::MRTK.Extensions.ManipulationEventData eventData;

			[Token(Token = "0x4001117")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private <>c__DisplayClass95_0 <>8__1;

			[Token(Token = "0x4001118")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x6001184")]
			[Address(RVA = "0x15BCBE4", Offset = "0x15BCBE4", VA = "0x15BCBE4", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001185")]
			[Address(RVA = "0x15BE0EC", Offset = "0x15BE0EC", VA = "0x15BE0EC", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200035B")]
		[CompilerGenerated]
		private struct <StopManipulation>d__96 : IAsyncStateMachine
		{
			[Token(Token = "0x4001119")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x400111A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x400111B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public GameObject obj;

			[Token(Token = "0x400111C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public AnatomyInputHandler <>4__this;

			[Token(Token = "0x400111D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public global::MRTK.Extensions.ManipulationEventData eventData;

			[Token(Token = "0x400111E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Vector3 <velocity>5__2;

			[Token(Token = "0x400111F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			private Vector3 <angularVelocity>5__3;

			[Token(Token = "0x4001120")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private IGrabable <grabable>5__4;

			[Token(Token = "0x4001121")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x6001186")]
			[Address(RVA = "0x15BE0F8", Offset = "0x15BE0F8", VA = "0x15BE0F8", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001187")]
			[Address(RVA = "0x15BED40", Offset = "0x15BED40", VA = "0x15BED40", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200035C")]
		[CompilerGenerated]
		private struct <MoveItemCommand>d__99 : IAsyncStateMachine
		{
			[Token(Token = "0x4001122")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001123")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4001124")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public AnatomyInputHandler <>4__this;

			[Token(Token = "0x4001125")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public IGrabable grabable;

			[Token(Token = "0x4001126")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Vector3 position;

			[Token(Token = "0x4001127")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public Quaternion rotation;

			[Token(Token = "0x4001128")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			public Vector3 scale;

			[Token(Token = "0x4001129")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public bool useAnimation;

			[Token(Token = "0x400112A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x6001188")]
			[Address(RVA = "0x15BED4C", Offset = "0x15BED4C", VA = "0x15BED4C", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001189")]
			[Address(RVA = "0x15BF060", Offset = "0x15BF060", VA = "0x15BF060", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200035E")]
		[CompilerGenerated]
		private struct <ReturnItemCommand>d__102 : IAsyncStateMachine
		{
			[Token(Token = "0x400112C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x400112D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x400112E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public AnatomyInputHandler <>4__this;

			[Token(Token = "0x400112F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public IGrabable grabable;

			[Token(Token = "0x4001130")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public bool useAnimation;

			[Token(Token = "0x4001131")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x600118C")]
			[Address(RVA = "0x15BF170", Offset = "0x15BF170", VA = "0x15BF170", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x600118D")]
			[Address(RVA = "0x15BF428", Offset = "0x15BF428", VA = "0x15BF428", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4001099")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Header("Scene References")]
		[SerializeField]
		private NetworkModuleProviderFactory _networkModuleProviderFactory;

		[Token(Token = "0x400109A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private CompositeObjectResolver _compositeObjectResolver;

		[Token(Token = "0x400109B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private NetworkManipulationHandler _networkManipulationHandler;

		[Token(Token = "0x400109C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private NetworkFocusHandler _networkFocusHandler;

		[Token(Token = "0x400109D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private InfomonitorHandler _infomonitorHandler;

		[Token(Token = "0x400109E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private LabelHandler _labelHandler;

		[Token(Token = "0x400109F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private TestController _testController;

		[Token(Token = "0x40010A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private InteractionModelBehaviour _interactionModelBehaviour;

		[Token(Token = "0x40010A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private NetworkPickHandler _networkPickHandler;

		[Token(Token = "0x40010A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private DrawingPanel _drawingUiHandler;

		[Token(Token = "0x40010A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private FunctionStackBehaviour _functionStackBehaviour;

		[Token(Token = "0x40010A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private NetworkControllerHandler _networkControllerHandler;

		[Token(Token = "0x40010A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private LicenseManagerBehaviour _licenseManagerBehaviour;

		[Token(Token = "0x40010A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private Transform _playerResetPosition;

		[Token(Token = "0x40010A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private MRTKHandMenuHandler _mrtkHandMenuHandler;

		[Token(Token = "0x40010A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[Header("Settings")]
		[SerializeField]
		private MRTKInputSettings _mrtkInputSettings;

		[Token(Token = "0x40010A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private AnatomyInputSettings _anatomyInputSettings;

		[Token(Token = "0x40010AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private LazyWithValidityCheck<IAntModeModule> _antModeModule;

		[Token(Token = "0x40010AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private LazyWithValidityCheck<ISliceModule> _sliceModule;

		[Token(Token = "0x40010AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private LazyWithValidityCheck<VR.Modules.ISystemsContainerModule> _systemsContainerModule;

		[Token(Token = "0x40010AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private LazyWithValidityCheck<ISystemsModule> _systemsModule;

		[Token(Token = "0x40010AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private LazyWithValidityCheck<ISubpartTypeModule> _subpartTypeModule;

		[Token(Token = "0x40010AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private LazyWithValidityCheck<IDrawingManager> _drawingManager;

		[Token(Token = "0x40010B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private LazyWithValidityCheck<ISceneManager<IInteractiveAnatomyItemInstance>> _sceneManager;

		[Token(Token = "0x40010B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private LazyWithValidityCheck<IFocusModule<IDicomVrInstance>> _dicomFocusModule;

		[Token(Token = "0x40010B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private LazyWithValidityCheck<IInstanceProvider<IInteractiveAnatomyItemInstanceCollection>> _instanceProvider;

		[Token(Token = "0x40010B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private FlyPlayerHelper _flyPlayerHelper;

		[Token(Token = "0x40010B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private bool _lastHandMenuLocked;

		[Token(Token = "0x40010B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private readonly ObjectVelocityCalculator _objectVelocityCalculator;

		[Token(Token = "0x40010B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private readonly ObjectTransformManipulator _objectTransformManipulator;

		[Token(Token = "0x40010B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private IDicomVrInstance _manipulatedObject;

		[Token(Token = "0x40010B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private readonly HashSet<IDisposable> _disposables;

		[Token(Token = "0x40010B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private readonly Dictionary<IMixedRealityPointer, Coroutine> _pointerUpdateRoutines;

		[Token(Token = "0x40010BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private readonly Dictionary<IMixedRealityPointer, SubpartFocusData> _pointerSubpartFocusData;

		[Token(Token = "0x40010BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private CancellationTokenSource _undoAllCancellationTokenSource;

		[Token(Token = "0x40010BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private Color _originalLinePointerColor;

		[Token(Token = "0x40010BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private GradientAlphaKey[] _originalLineColorInvalidAlphaKeys;

		[Token(Token = "0x40010BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private GradientAlphaKey[] _originalLineColorLockFocusAlphaKeys;

		[Token(Token = "0x40010BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private GradientAlphaKey[] _originalLineColorNoTargetAlphaKeys;

		[Token(Token = "0x40010C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private GradientAlphaKey[] _originalLineColorSelectedAlphaKeys;

		[Token(Token = "0x40010C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private GradientAlphaKey[] _originalLineColorValidAlphaKeys;

		[Token(Token = "0x40010C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private float _originalWidth;

		[Token(Token = "0x40010C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		private CancellationTokenSource _menuActionCancellationTokenSource;

		[Token(Token = "0x40010C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private bool _handMenuEnabledBeforeLocked;

		[Token(Token = "0x40010C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		private readonly Dictionary<DrawingPointer, DrawingRoutine> _pointerDrawingRoutines;

		[Token(Token = "0x40010C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		private readonly Dictionary<IMixedRealityPointer, ObjectDistanceConstraint> _constraints;

		[Token(Token = "0x40010C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		private readonly Dictionary<int, IMixedRealityPointer> _manipulatedObjects;

		[Token(Token = "0x40010C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		private readonly IDictionary<int, int> _gameObjectLastClickedFrames;

		[Token(Token = "0x17000295")]
		private InteractionModel InteractionModel
		{
			[Token(Token = "0x6001108")]
			[Address(RVA = "0x15AD7BC", Offset = "0x15AD7BC", VA = "0x15AD7BC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001109")]
		[Address(RVA = "0x15AD838", Offset = "0x15AD838", VA = "0x15AD838")]
		private void Awake()
		{
		}

		[Token(Token = "0x600110A")]
		[Address(RVA = "0x15AE4DC", Offset = "0x15AE4DC", VA = "0x15AE4DC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600110B")]
		[Address(RVA = "0x15AE90C", Offset = "0x15AE90C", VA = "0x15AE90C")]
		private void Update()
		{
		}

		[Token(Token = "0x600110C")]
		[Address(RVA = "0x15AEFB4", Offset = "0x15AEFB4", VA = "0x15AEFB4", Slot = "7")]
		protected override void RegisterHandlers()
		{
		}

		[Token(Token = "0x600110D")]
		[Address(RVA = "0x15AF684", Offset = "0x15AF684", VA = "0x15AF684", Slot = "8")]
		protected override void UnregisterHandlers()
		{
		}

		[Token(Token = "0x600110E")]
		[Address(RVA = "0x15AFD50", Offset = "0x15AFD50", VA = "0x15AFD50", Slot = "9")]
		public void OnBeforeFocusChange(FocusEventData eventData)
		{
		}

		[Token(Token = "0x600110F")]
		[Address(RVA = "0x15AFD54", Offset = "0x15AFD54", VA = "0x15AFD54", Slot = "10")]
		public void OnFocusChanged(FocusEventData eventData)
		{
		}

		[Token(Token = "0x6001110")]
		[Address(RVA = "0x15B04C4", Offset = "0x15B04C4", VA = "0x15B04C4")]
		public static bool SubPartRaycastEnabled(ISubpartTypeModule subpartTypeModule, ISystemsModule systemsModule)
		{
			return default(bool);
		}

		[Token(Token = "0x6001111")]
		[Address(RVA = "0x15B0780", Offset = "0x15B0780", VA = "0x15B0780")]
		public static VR.Views.SubpartInstance GetSubpartInstance(VR.Views.ISubpartHost subpartHost, Vector2 textureCoord, SubpartType subpartType)
		{
			return null;
		}

		[Token(Token = "0x6001112")]
		[Address(RVA = "0x15AECB8", Offset = "0x15AECB8", VA = "0x15AECB8")]
		private void UpdateSubpartFocus(IMixedRealityPointer pointer, SubpartFocusData sfd)
		{
		}

		[Token(Token = "0x6001113")]
		[Address(RVA = "0x15B0CA8", Offset = "0x15B0CA8", VA = "0x15B0CA8")]
		private IGazeable GetFocusedItem(IMixedRealityPointer pointer)
		{
			return null;
		}

		[Token(Token = "0x6001114")]
		[Address(RVA = "0x15B0670", Offset = "0x15B0670", VA = "0x15B0670")]
		[AsyncStateMachine(typeof(<OnFocusedItemChanged>d__48))]
		private void OnFocusedItemChanged(IMixedRealityPointer pointer, IGazeable previousValue, IGazeable newValue)
		{
		}

		[Token(Token = "0x6001115")]
		[Address(RVA = "0x15B1268", Offset = "0x15B1268", VA = "0x15B1268")]
		private void CmdSetPresentedObject(object value)
		{
		}

		[Token(Token = "0x6001116")]
		[Address(RVA = "0x15B14A0", Offset = "0x15B14A0", VA = "0x15B14A0")]
		private void OnNetworkFocusChanged(SerializedObjectInfo previousValue, SerializedObjectInfo newValue)
		{
		}

		[Token(Token = "0x6001117")]
		[Address(RVA = "0x15B18D4", Offset = "0x15B18D4", VA = "0x15B18D4")]
		[AsyncStateMachine(typeof(<OnUndoActionStarted>d__52))]
		public void OnUndoActionStarted()
		{
		}

		[Token(Token = "0x6001118")]
		[Address(RVA = "0x15B1988", Offset = "0x15B1988", VA = "0x15B1988", Slot = "11")]
		public void OnActionStarted(BaseInputEventData eventData)
		{
		}

		[Token(Token = "0x6001119")]
		[Address(RVA = "0x15B25A8", Offset = "0x15B25A8", VA = "0x15B25A8", Slot = "12")]
		public void OnActionEnded(BaseInputEventData eventData)
		{
		}

		[Token(Token = "0x600111A")]
		[Address(RVA = "0x15B24F4", Offset = "0x15B24F4", VA = "0x15B24F4")]
		[AsyncStateMachine(typeof(<OnMenuActionStarted>d__63))]
		public void OnMenuActionStarted()
		{
		}

		[Token(Token = "0x600111B")]
		[Address(RVA = "0x15AEBEC", Offset = "0x15AEBEC", VA = "0x15AEBEC")]
		private void SetHandMenuLocked(bool value)
		{
		}

		[Token(Token = "0x600111C")]
		[Address(RVA = "0x15B3644", Offset = "0x15B3644", VA = "0x15B3644")]
		private bool IsHandMenuPointerBlocked()
		{
			return default(bool);
		}

		[Token(Token = "0x600111D")]
		[Address(RVA = "0x15B36AC", Offset = "0x15B36AC", VA = "0x15B36AC")]
		private void OnHandMenuPointerBlockedChanged(bool? value)
		{
		}

		[Token(Token = "0x600111E")]
		[Address(RVA = "0x15B4244", Offset = "0x15B4244", VA = "0x15B4244")]
		public void Undo(InteractionModel interactionModel)
		{
		}

		[Token(Token = "0x600111F")]
		[Address(RVA = "0x15B3588", Offset = "0x15B3588", VA = "0x15B3588")]
		public void Redo(InteractionModel interactionModel)
		{
		}

		[Token(Token = "0x6001120")]
		[Address(RVA = "0x15B44F0", Offset = "0x15B44F0", VA = "0x15B44F0", Slot = "13")]
		public void OnInputChanged(InputEventData<Vector2> eventData)
		{
		}

		[Token(Token = "0x6001121")]
		[Address(RVA = "0x15B5410", Offset = "0x15B5410", VA = "0x15B5410", Slot = "14")]
		public void OnInputChanged(InputEventData<MixedRealityPose> eventData)
		{
		}

		[Token(Token = "0x6001122")]
		[Address(RVA = "0x15B57DC", Offset = "0x15B57DC", VA = "0x15B57DC")]
		private void PrimaryPointerChanged(IMixedRealityPointer oldpointer, IMixedRealityPointer newpointer)
		{
		}

		[Token(Token = "0x6001123")]
		[Address(RVA = "0x15B58E4", Offset = "0x15B58E4", VA = "0x15B58E4")]
		[IteratorStateMachine(typeof(<UpdatePointer>d__73))]
		private static IEnumerator UpdatePointer(IMixedRealityPointer pointer, LayerMask layerMask)
		{
			return null;
		}

		[Token(Token = "0x6001124")]
		[Address(RVA = "0x15B5990", Offset = "0x15B5990", VA = "0x15B5990", Slot = "15")]
		public void OnPointerDown(MixedRealityPointerEventData eventData)
		{
		}

		[Token(Token = "0x6001125")]
		[Address(RVA = "0x15B624C", Offset = "0x15B624C", VA = "0x15B624C", Slot = "16")]
		public void OnPointerDragged(MixedRealityPointerEventData eventData)
		{
		}

		[Token(Token = "0x6001126")]
		[Address(RVA = "0x15B6250", Offset = "0x15B6250", VA = "0x15B6250", Slot = "17")]
		public void OnPointerUp(MixedRealityPointerEventData eventData)
		{
		}

		[Token(Token = "0x6001127")]
		[Address(RVA = "0x15B6568", Offset = "0x15B6568", VA = "0x15B6568", Slot = "18")]
		public void OnPointerClicked(MixedRealityPointerEventData eventData)
		{
		}

		[Token(Token = "0x6001128")]
		[Address(RVA = "0x15B6468", Offset = "0x15B6468", VA = "0x15B6468")]
		[AsyncStateMachine(typeof(<CreateDrawingAfterDelay>d__80))]
		private void CreateDrawingAfterDelay(DrawingPointer drawingPointer, int delay, CancellationToken cancellationToken)
		{
		}

		[Token(Token = "0x6001129")]
		[Address(RVA = "0x15B656C", Offset = "0x15B656C", VA = "0x15B656C")]
		[AsyncStateMachine(typeof(<CreateDrawing>d__81))]
		public void CreateDrawing(IDrawingObjectData drawingObjectData)
		{
		}

		[Token(Token = "0x600112A")]
		[AsyncStateMachine(typeof(<DestroyDrawing>d__82<>))]
		public void DestroyDrawing<T>(T drawingObjectInstance)
		{
		}

		[Token(Token = "0x600112B")]
		[Address(RVA = "0x15B61A4", Offset = "0x15B61A4", VA = "0x15B61A4")]
		[IteratorStateMachine(typeof(<Draw>d__83))]
		private IEnumerator Draw(DrawingPointer pointer, int id, float samplingInterval)
		{
			return null;
		}

		[Token(Token = "0x600112C")]
		[Address(RVA = "0x15B6668", Offset = "0x15B6668", VA = "0x15B6668")]
		private void OnDrawingEnabledChanged(bool? value)
		{
		}

		[Token(Token = "0x600112D")]
		[Address(RVA = "0x15B3724", Offset = "0x15B3724", VA = "0x15B3724")]
		public void SetPointerBehaviour(bool drawingEnabled, bool handMenuPointerBlocked)
		{
		}

		[Token(Token = "0x600112E")]
		[Address(RVA = "0x15B66DC", Offset = "0x15B66DC", VA = "0x15B66DC", Slot = "21")]
		public void OnManipulationStarted(global::MRTK.Extensions.ManipulationEventData manipulationEventData)
		{
		}

		[Token(Token = "0x600112F")]
		[Address(RVA = "0x15B67EC", Offset = "0x15B67EC", VA = "0x15B67EC", Slot = "22")]
		public void OnManipulationEnded(global::MRTK.Extensions.ManipulationEventData manipulationEventData)
		{
		}

		[Token(Token = "0x6001130")]
		[Address(RVA = "0x15B6900", Offset = "0x15B6900", VA = "0x15B6900", Slot = "19")]
		public void OnSourceDetected(SourceStateEventData eventData)
		{
		}

		[Token(Token = "0x6001131")]
		[Address(RVA = "0x15B6C70", Offset = "0x15B6C70", VA = "0x15B6C70", Slot = "20")]
		public void OnSourceLost(SourceStateEventData eventData)
		{
		}

		[Token(Token = "0x6001132")]
		[Address(RVA = "0x15B5D70", Offset = "0x15B5D70", VA = "0x15B5D70")]
		public bool ManipulationEnabled(IMixedRealityPointer pointer)
		{
			return default(bool);
		}

		[Token(Token = "0x6001133")]
		[Address(RVA = "0x15B6C74", Offset = "0x15B6C74", VA = "0x15B6C74")]
		public bool ManipulationEnabled(GameObject obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6001134")]
		[Address(RVA = "0x15B7008", Offset = "0x15B7008", VA = "0x15B7008")]
		private bool ManipulationEnabled(IGrabable grabable)
		{
			return default(bool);
		}

		[Token(Token = "0x6001135")]
		[Address(RVA = "0x15B6700", Offset = "0x15B6700", VA = "0x15B6700")]
		[AsyncStateMachine(typeof(<StartManipulation>d__95))]
		public void StartManipulation(GameObject obj, global::MRTK.Extensions.ManipulationEventData eventData)
		{
		}

		[Token(Token = "0x6001136")]
		[Address(RVA = "0x15B6810", Offset = "0x15B6810", VA = "0x15B6810")]
		[AsyncStateMachine(typeof(<StopManipulation>d__96))]
		public void StopManipulation(GameObject obj, global::MRTK.Extensions.ManipulationEventData eventData)
		{
		}

		[Token(Token = "0x6001137")]
		[Address(RVA = "0x15B7210", Offset = "0x15B7210", VA = "0x15B7210")]
		private void OnNetworkManipulationStarted(SerializedObjectInfo serializedObjectInfo, StartManipulationData data)
		{
		}

		[Token(Token = "0x6001138")]
		[Address(RVA = "0x15B746C", Offset = "0x15B746C", VA = "0x15B746C")]
		private void OnNetworkManipulationStopped(SerializedObjectInfo serializedObjectInfo, StopManipulationData data)
		{
		}

		[Token(Token = "0x6001139")]
		[Address(RVA = "0x15B7888", Offset = "0x15B7888", VA = "0x15B7888")]
		[AsyncStateMachine(typeof(<MoveItemCommand>d__99))]
		private void MoveItemCommand(IGrabable grabable, Vector3 position, Quaternion rotation, Vector3 scale, bool useAnimation)
		{
		}

		[Token(Token = "0x600113A")]
		[Address(RVA = "0x15B79D4", Offset = "0x15B79D4", VA = "0x15B79D4")]
		private void OnNetworkItemMoved(SerializedObjectInfo obj, Vector3 position, Quaternion rotation, Vector3 scale, bool useAnimation)
		{
		}

		[Token(Token = "0x600113B")]
		[Address(RVA = "0x15B7C44", Offset = "0x15B7C44", VA = "0x15B7C44")]
		private static void MoveItem(IGrabable grabable, Vector3 position, Quaternion rotation, Vector3 scale, bool useAnimation)
		{
		}

		[Token(Token = "0x600113C")]
		[Address(RVA = "0x15B82A0", Offset = "0x15B82A0", VA = "0x15B82A0")]
		[AsyncStateMachine(typeof(<ReturnItemCommand>d__102))]
		private void ReturnItemCommand(IGrabable grabable, bool useAnimation)
		{
		}

		[Token(Token = "0x600113D")]
		[Address(RVA = "0x15B8380", Offset = "0x15B8380", VA = "0x15B8380")]
		private void OnNetworkItemReturned(SerializedObjectInfo obj, bool useAnimation)
		{
		}

		[Token(Token = "0x600113E")]
		[Address(RVA = "0x15B8580", Offset = "0x15B8580", VA = "0x15B8580")]
		public static void ReturnItem(IPickable pickable, bool useAnimation)
		{
		}

		[Token(Token = "0x600113F")]
		[Address(RVA = "0x15B31E8", Offset = "0x15B31E8", VA = "0x15B31E8")]
		public void Click(GameObject obj)
		{
		}

		[Token(Token = "0x6001140")]
		public static void ToggleHide<T>(T item, INetworkModuleProviderFactory networkModuleProviderFactory, IFunctionStack functionStack) where T : IHideable
		{
		}

		[Token(Token = "0x6001141")]
		public static void ToggleHighlight<T>(T item, INetworkModuleProviderFactory networkModuleProviderFactory, IFunctionStack functionStack) where T : IHighlightable
		{
		}

		[Token(Token = "0x6001142")]
		[Address(RVA = "0x15B42F8", Offset = "0x15B42F8", VA = "0x15B42F8")]
		private void LogAnalyticsAction(string actionId, [Optional] Dictionary<string, object> additionalData)
		{
		}

		[Token(Token = "0x6001143")]
		[Address(RVA = "0x15B864C", Offset = "0x15B864C", VA = "0x15B864C")]
		private void OnRecenterPose()
		{
		}

		[Token(Token = "0x6001144")]
		[Address(RVA = "0x15B86CC", Offset = "0x15B86CC", VA = "0x15B86CC")]
		private static void OnAntModeEnabledChanged(bool value)
		{
		}

		[Token(Token = "0x6001145")]
		[Address(RVA = "0x15B8A90", Offset = "0x15B8A90", VA = "0x15B8A90")]
		private void OnHandTrackingEnabledChanged(bool value)
		{
		}

		[Token(Token = "0x6001146")]
		[Address(RVA = "0x15B8908", Offset = "0x15B8908", VA = "0x15B8908")]
		private static void SetPlayerControllerWarning(IPlayerHandler playerHandler, bool antModeEnabled, bool handTrackingEnabled)
		{
		}

		[Token(Token = "0x6001147")]
		[Address(RVA = "0x15B8C94", Offset = "0x15B8C94", VA = "0x15B8C94")]
		public AnatomyInputHandler()
		{
		}
	}
	[Token(Token = "0x200035F")]
	public class PlayerPrefsCachedInt : IDisposable
	{
		[StructLayout(3)]
		[Token(Token = "0x2000360")]
		[CompilerGenerated]
		private struct <Start>d__13 : IAsyncStateMachine
		{
			[Token(Token = "0x4001137")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001138")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4001139")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public PlayerPrefsCachedInt <>4__this;

			[Token(Token = "0x400113A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x6001199")]
			[Address(RVA = "0x15BF67C", Offset = "0x15BF67C", VA = "0x15BF67C", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x600119A")]
			[Address(RVA = "0x15BF948", Offset = "0x15BF948", VA = "0x15BF948", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4001132")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly string _key;

		[Token(Token = "0x4001133")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly int _defaultValue;

		[Token(Token = "0x4001134")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TaskUtilities.DisposableTask _disposableTask;

		[Token(Token = "0x1700029A")]
		public int RefreshRate
		{
			[Token(Token = "0x600118E")]
			[Address(RVA = "0x15BF434", Offset = "0x15BF434", VA = "0x15BF434")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600118F")]
			[Address(RVA = "0x15BF43C", Offset = "0x15BF43C", VA = "0x15BF43C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700029B")]
		public int Value
		{
			[Token(Token = "0x6001190")]
			[Address(RVA = "0x15BF444", Offset = "0x15BF444", VA = "0x15BF444")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001191")]
			[Address(RVA = "0x15BF44C", Offset = "0x15BF44C", VA = "0x15BF44C")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6001192")]
		[Address(RVA = "0x15BF454", Offset = "0x15BF454", VA = "0x15BF454")]
		public PlayerPrefsCachedInt(string key, int refreshRate)
		{
		}

		[Token(Token = "0x6001193")]
		[Address(RVA = "0x15BF54C", Offset = "0x15BF54C", VA = "0x15BF54C")]
		public PlayerPrefsCachedInt(string key, int defaultValue, int refreshRate)
		{
		}

		[Token(Token = "0x6001194")]
		[Address(RVA = "0x15BF494", Offset = "0x15BF494", VA = "0x15BF494")]
		[AsyncStateMachine(typeof(<Start>d__13))]
		public void Start()
		{
		}

		[Token(Token = "0x6001195")]
		[Address(RVA = "0x15BF59C", Offset = "0x15BF59C", VA = "0x15BF59C")]
		public void Stop()
		{
		}

		[Token(Token = "0x6001196")]
		[Address(RVA = "0x15BF5B0", Offset = "0x15BF5B0", VA = "0x15BF5B0", Slot = "4")]
		public void Dispose()
		{
		}
	}
	[Token(Token = "0x2000361")]
	public class ObjectVelocityCalculator
	{
		[Token(Token = "0x2000362")]
		public class DataContainer
		{
			[Token(Token = "0x400113C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3 LastPosition;

			[Token(Token = "0x400113D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public Vector3 Position;

			[Token(Token = "0x400113E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Quaternion LastRotation;

			[Token(Token = "0x400113F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Quaternion Rotation;

			[Token(Token = "0x60011A3")]
			[Address(RVA = "0x15BFC64", Offset = "0x15BFC64", VA = "0x15BFC64")]
			public DataContainer()
			{
			}
		}

		[Token(Token = "0x400113B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly Dictionary<Transform, DataContainer> _dataContainers;

		[Token(Token = "0x1700029C")]
		public System.Collections.Generic.IReadOnlyDictionary<Transform, DataContainer> DataContainers
		{
			[Token(Token = "0x600119B")]
			[Address(RVA = "0x15BF954", Offset = "0x15BF954", VA = "0x15BF954")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600119C")]
		[Address(RVA = "0x15BF95C", Offset = "0x15BF95C", VA = "0x15BF95C")]
		public ObjectVelocityCalculator()
		{
		}

		[Token(Token = "0x600119D")]
		[Address(RVA = "0x15BF9E4", Offset = "0x15BF9E4", VA = "0x15BF9E4")]
		public void Update()
		{
		}

		[Token(Token = "0x600119E")]
		[Address(RVA = "0x15BFBA0", Offset = "0x15BFBA0", VA = "0x15BFBA0")]
		public void Add(Transform transform)
		{
		}

		[Token(Token = "0x600119F")]
		[Address(RVA = "0x15BFC6C", Offset = "0x15BFC6C", VA = "0x15BFC6C")]
		public void Remove(Transform transform)
		{
		}

		[Token(Token = "0x60011A0")]
		[Address(RVA = "0x15BFCC4", Offset = "0x15BFCC4", VA = "0x15BFCC4")]
		public static Vector3 GetVelocity(DataContainer dataContainer)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60011A1")]
		[Address(RVA = "0x15BFCF4", Offset = "0x15BFCF4", VA = "0x15BFCF4")]
		public static Vector3 GetAngularVelocity(DataContainer dataContainer)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60011A2")]
		[Address(RVA = "0x15BFD18", Offset = "0x15BFD18", VA = "0x15BFD18")]
		public static Vector3 GetAngularVelocity(Quaternion foreLastFrameRotation, Quaternion lastFrameRotation)
		{
			return default(Vector3);
		}
	}
	[Serializable]
	[Token(Token = "0x2000363")]
	public class FlyPlayerHelperSettings
	{
		[Token(Token = "0x4001140")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float Acceleration;

		[Token(Token = "0x4001141")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float Deceleration;

		[Token(Token = "0x4001142")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float MaxVelocity;

		[Token(Token = "0x60011A4")]
		[Address(RVA = "0x15BFEC8", Offset = "0x15BFEC8", VA = "0x15BFEC8")]
		public FlyPlayerHelperSettings()
		{
		}
	}
	[Token(Token = "0x2000364")]
	public class FlyPlayerHelper
	{
		[Token(Token = "0x4001146")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float _targetVelocity;

		[Token(Token = "0x1700029D")]
		public FlyPlayerHelperSettings Settings
		{
			[Token(Token = "0x60011A5")]
			[Address(RVA = "0x15BFED0", Offset = "0x15BFED0", VA = "0x15BFED0")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60011A6")]
			[Address(RVA = "0x15BFED8", Offset = "0x15BFED8", VA = "0x15BFED8")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700029E")]
		public Transform Target
		{
			[Token(Token = "0x60011A7")]
			[Address(RVA = "0x15BFEE0", Offset = "0x15BFEE0", VA = "0x15BFEE0")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60011A8")]
			[Address(RVA = "0x15BFEE8", Offset = "0x15BFEE8", VA = "0x15BFEE8")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700029F")]
		public float Velocity
		{
			[Token(Token = "0x60011A9")]
			[Address(RVA = "0x15BFEF0", Offset = "0x15BFEF0", VA = "0x15BFEF0")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60011AA")]
			[Address(RVA = "0x15BFEF8", Offset = "0x15BFEF8", VA = "0x15BFEF8")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170002A0")]
		public Vector2 InputValue
		{
			[Token(Token = "0x60011AB")]
			[Address(RVA = "0x15BFF00", Offset = "0x15BFF00", VA = "0x15BFF00")]
			[CompilerGenerated]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x60011AC")]
			[Address(RVA = "0x15BFF08", Offset = "0x15BFF08", VA = "0x15BFF08")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170002A1")]
		public Quaternion DirectionRotation
		{
			[Token(Token = "0x60011AD")]
			[Address(RVA = "0x15BFF10", Offset = "0x15BFF10", VA = "0x15BFF10")]
			[CompilerGenerated]
			get
			{
				return default(Quaternion);
			}
			[Token(Token = "0x60011AE")]
			[Address(RVA = "0x15BFF1C", Offset = "0x15BFF1C", VA = "0x15BFF1C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x60011AF")]
		[Address(RVA = "0x15BFF28", Offset = "0x15BFF28", VA = "0x15BFF28")]
		public FlyPlayerHelper(Transform target, FlyPlayerHelperSettings settings)
		{
		}

		[Token(Token = "0x60011B0")]
		[Address(RVA = "0x15BFF6C", Offset = "0x15BFF6C", VA = "0x15BFF6C")]
		public void Update()
		{
		}
	}
	[Token(Token = "0x2000365")]
	public static class AnatomyInputExtensions
	{
		[Token(Token = "0x60011B1")]
		[Address(RVA = "0x15C0128", Offset = "0x15C0128", VA = "0x15C0128")]
		public static bool IsFocusedOnScrollableUi(this IMixedRealityInputSource source)
		{
			return default(bool);
		}

		[Token(Token = "0x60011B2")]
		[Address(RVA = "0x15C02B8", Offset = "0x15C02B8", VA = "0x15C02B8")]
		public static void SetMovementType(MovementType value, bool handTrackingEnabled, bool antModeEnabled)
		{
		}

		[Token(Token = "0x60011B3")]
		[Address(RVA = "0x15C05FC", Offset = "0x15C05FC", VA = "0x15C05FC")]
		public static void SetMovementType(this TeleportPointer teleportPointer, MovementType value, bool handTrackingEnabled, bool antModeEnabled, bool focusedOnUi)
		{
		}

		[Token(Token = "0x60011B4")]
		[Address(RVA = "0x15C07DC", Offset = "0x15C07DC", VA = "0x15C07DC")]
		public static void SetColor(this LinePointer linePointer, Color value)
		{
		}

		[Token(Token = "0x60011B5")]
		[Address(RVA = "0x15C0878", Offset = "0x15C0878", VA = "0x15C0878")]
		public static void SetColor(this UnityEngine.Gradient gradient, Color value)
		{
		}
	}
	[Token(Token = "0x2000367")]
	public class AnatomyInputSettings : ScriptableObject
	{
		[Token(Token = "0x400114B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private FlyPlayerHelperSettings _flyPlayerHelperSettings;

		[Token(Token = "0x400114C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private FlyPlayerHelperSettings _locomotionHelperSettings;

		[Token(Token = "0x400114D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private LayerMask _animationLayerMask;

		[Token(Token = "0x400114E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private Color _networkPointerColor;

		[Token(Token = "0x400114F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private ObjectDistanceConstraintSettings _objectDistanceConstraintSettings;

		[Token(Token = "0x4001150")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private AudioClip _startManipulationClip;

		[Token(Token = "0x4001151")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private AudioClip _stoptManipulationClip;

		[Token(Token = "0x170002A2")]
		public FlyPlayerHelperSettings FlyPlayerHelperSettings
		{
			[Token(Token = "0x60011B9")]
			[Address(RVA = "0x15C0C1C", Offset = "0x15C0C1C", VA = "0x15C0C1C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002A3")]
		public FlyPlayerHelperSettings LocomotionHelperSettings
		{
			[Token(Token = "0x60011BA")]
			[Address(RVA = "0x15C0C24", Offset = "0x15C0C24", VA = "0x15C0C24")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002A4")]
		public LayerMask AnimationLayerMask
		{
			[Token(Token = "0x60011BB")]
			[Address(RVA = "0x15C0C2C", Offset = "0x15C0C2C", VA = "0x15C0C2C")]
			get
			{
				return default(LayerMask);
			}
		}

		[Token(Token = "0x170002A5")]
		public Color NetworkPointerColor
		{
			[Token(Token = "0x60011BC")]
			[Address(RVA = "0x15C0C34", Offset = "0x15C0C34", VA = "0x15C0C34")]
			get
			{
				return default(Color);
			}
		}

		[Token(Token = "0x170002A6")]
		public ObjectDistanceConstraintSettings DistanceConstraintSettings
		{
			[Token(Token = "0x60011BD")]
			[Address(RVA = "0x15C0C40", Offset = "0x15C0C40", VA = "0x15C0C40")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002A7")]
		public AudioClip StartManipulationClip
		{
			[Token(Token = "0x60011BE")]
			[Address(RVA = "0x15C0C48", Offset = "0x15C0C48", VA = "0x15C0C48")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002A8")]
		public AudioClip StoptManipulationClip
		{
			[Token(Token = "0x60011BF")]
			[Address(RVA = "0x15C0C50", Offset = "0x15C0C50", VA = "0x15C0C50")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60011C0")]
		[Address(RVA = "0x15C0C58", Offset = "0x15C0C58", VA = "0x15C0C58")]
		public AnatomyInputSettings()
		{
		}
	}
}
namespace VR.HandMenu
{
	[Token(Token = "0x2000368")]
	public enum PanelList
	{
		[Token(Token = "0x4001153")]
		Models,
		[Token(Token = "0x4001154")]
		Tools
	}
	[Token(Token = "0x2000369")]
	[Flags]
	public enum ToolsCategoryType
	{
		[Token(Token = "0x4001156")]
		None = 0,
		[Token(Token = "0x4001157")]
		Quick = 1,
		[Token(Token = "0x4001158")]
		Interaction = 2,
		[Token(Token = "0x4001159")]
		Application = 4,
		[Token(Token = "0x400115A")]
		Settings = 8,
		[Token(Token = "0x400115B")]
		All = -1
	}
	[Token(Token = "0x200036A")]
	public class HandMenuAnimationHandler : MonoBehaviour
	{
		[StructLayout(3)]
		[Token(Token = "0x200036C")]
		[CompilerGenerated]
		private struct <Awake>d__63 : IAsyncStateMachine
		{
			[Token(Token = "0x4001185")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001186")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4001187")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public HandMenuAnimationHandler <>4__this;

			[Token(Token = "0x4001188")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private YieldAwaitable.YieldAwaiter <>u__1;

			[Token(Token = "0x60011ED")]
			[Address(RVA = "0x15C28FC", Offset = "0x15C28FC", VA = "0x15C28FC", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60011EE")]
			[Address(RVA = "0x15C336C", Offset = "0x15C336C", VA = "0x15C336C", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x400115C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly ToolsCategoryType[] ToolsCategoryTypes;

		[Token(Token = "0x400115D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private LayoutElement _modelsPanel;

		[Token(Token = "0x400115E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private LayoutElement _toolsPanel;

		[Token(Token = "0x400115F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Toggle _quick;

		[Token(Token = "0x4001160")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Toggle _interaction;

		[Token(Token = "0x4001161")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Toggle _application;

		[Token(Token = "0x4001162")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Toggle _move;

		[Token(Token = "0x4001163")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private GameObject _quickGameObject;

		[Token(Token = "0x4001164")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private GameObject _interactionGameObject;

		[Token(Token = "0x4001165")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject _applicationGameObject;

		[Token(Token = "0x4001166")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject _moveGameObject;

		[Token(Token = "0x4001167")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Toggle _models;

		[Token(Token = "0x4001168")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Toggle _tools;

		[Token(Token = "0x4001169")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private RectTransform _animationsCategory;

		[Token(Token = "0x400116A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private RectTransform _animationsContent;

		[Token(Token = "0x400116B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private RectTransform _animationsIconContent;

		[Token(Token = "0x400116C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private List<GridLayoutGroup> _modelsGridLayoutGroup;

		[Token(Token = "0x400116D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private List<GridLayoutGroup> _toolsGridLayoutGroup;

		[Token(Token = "0x400116E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private List<GridLayoutGroup> _animationsGridLayoutGroup;

		[Token(Token = "0x400116F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private GameObject _animationSlider;

		[Token(Token = "0x4001170")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private ScrollRect _animtionUperRowScrollRect;

		[Token(Token = "0x4001171")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private GridLayoutGroup _animtionsCategoryGridLayoutGroup;

		[Token(Token = "0x4001172")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private Transform _modelContentParentTransform;

		[Token(Token = "0x4001173")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private Transform _toolsContentParentTransform;

		[Token(Token = "0x4001174")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private int _maxColumnSize;

		[Token(Token = "0x4001175")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private LocalizedTextMeshProGui _studentName;

		[Token(Token = "0x4001176")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private float _openWidth;

		[Token(Token = "0x4001177")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[SerializeField]
		private float _closedWidth;

		[Token(Token = "0x4001178")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		private HorizontalScrollSnap _modelsScrollSnap;

		[Token(Token = "0x4001179")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		private HorizontalScrollSnap _toolsScrollSnap;

		[Token(Token = "0x400117A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		private HorizontalScrollSnap _animationsScrollSnap;

		[Token(Token = "0x400117E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private readonly CompositeDisposable _disposable;

		[Token(Token = "0x400117F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private Sequence _sequence;

		[Token(Token = "0x170002A9")]
		public Toggle ModelsTogle
		{
			[Token(Token = "0x60011C1")]
			[Address(RVA = "0x15C0C60", Offset = "0x15C0C60", VA = "0x15C0C60")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002AA")]
		public Toggle ToolsToggle
		{
			[Token(Token = "0x60011C2")]
			[Address(RVA = "0x15C0C68", Offset = "0x15C0C68", VA = "0x15C0C68")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002AB")]
		public PanelList ActivePanel
		{
			[Token(Token = "0x60011C3")]
			[Address(RVA = "0x15C0C70", Offset = "0x15C0C70", VA = "0x15C0C70")]
			[CompilerGenerated]
			get
			{
				return default(PanelList);
			}
			[Token(Token = "0x60011C4")]
			[Address(RVA = "0x15C0C78", Offset = "0x15C0C78", VA = "0x15C0C78")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x170002AC")]
		public ToolsCategoryType DisplayedToolsCategories
		{
			[Token(Token = "0x60011C5")]
			[Address(RVA = "0x15C0C80", Offset = "0x15C0C80", VA = "0x15C0C80")]
			[CompilerGenerated]
			get
			{
				return default(ToolsCategoryType);
			}
			[Token(Token = "0x60011C6")]
			[Address(RVA = "0x15C0C88", Offset = "0x15C0C88", VA = "0x15C0C88")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x170002AD")]
		public ToolsCategoryType ActiveToolsCategory
		{
			[Token(Token = "0x60011C7")]
			[Address(RVA = "0x15C0C90", Offset = "0x15C0C90", VA = "0x15C0C90")]
			[CompilerGenerated]
			get
			{
				return default(ToolsCategoryType);
			}
			[Token(Token = "0x60011C8")]
			[Address(RVA = "0x15C0C98", Offset = "0x15C0C98", VA = "0x15C0C98")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x170002AE")]
		public List<GridLayoutGroup> ToolsGridLayoutGroup
		{
			[Token(Token = "0x60011C9")]
			[Address(RVA = "0x15C0CA0", Offset = "0x15C0CA0", VA = "0x15C0CA0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002AF")]
		public int MaxColumnSize
		{
			[Token(Token = "0x60011CA")]
			[Address(RVA = "0x15C0CA8", Offset = "0x15C0CA8", VA = "0x15C0CA8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170002B0")]
		public Transform ToolsContentParentTransform
		{
			[Token(Token = "0x60011CB")]
			[Address(RVA = "0x15C0CB0", Offset = "0x15C0CB0", VA = "0x15C0CB0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002B1")]
		public LayoutElement ToolsPanel
		{
			[Token(Token = "0x60011CC")]
			[Address(RVA = "0x15C0CB8", Offset = "0x15C0CB8", VA = "0x15C0CB8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002B2")]
		public LayoutElement ModelsPanel
		{
			[Token(Token = "0x60011CD")]
			[Address(RVA = "0x15C0CC0", Offset = "0x15C0CC0", VA = "0x15C0CC0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002B3")]
		public LocalizedTextMeshProGui StudentName
		{
			[Token(Token = "0x60011CE")]
			[Address(RVA = "0x15C0CC8", Offset = "0x15C0CC8", VA = "0x15C0CC8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002B4")]
		public GameObject QuickGameObject
		{
			[Token(Token = "0x60011CF")]
			[Address(RVA = "0x15C0CD0", Offset = "0x15C0CD0", VA = "0x15C0CD0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60011D0")]
		[Address(RVA = "0x15C0CD8", Offset = "0x15C0CD8", VA = "0x15C0CD8")]
		[AsyncStateMachine(typeof(<Awake>d__63))]
		private void Awake()
		{
		}

		[Token(Token = "0x60011D1")]
		[Address(RVA = "0x15C0D90", Offset = "0x15C0D90", VA = "0x15C0D90")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60011D2")]
		[Address(RVA = "0x15C0DAC", Offset = "0x15C0DAC", VA = "0x15C0DAC")]
		private ToolsCategoryType GetActiveCategoryTypesFromToggles()
		{
			return default(ToolsCategoryType);
		}

		[Token(Token = "0x60011D3")]
		[Address(RVA = "0x15C0E14", Offset = "0x15C0E14", VA = "0x15C0E14")]
		public Toggle GetToolsCategoryToggle(ToolsCategoryType value)
		{
			return null;
		}

		[Token(Token = "0x60011D4")]
		[Address(RVA = "0x15C0EE0", Offset = "0x15C0EE0", VA = "0x15C0EE0")]
		public GameObject GetToolsCategoryPanel(ToolsCategoryType value)
		{
			return null;
		}

		[Token(Token = "0x60011D5")]
		[Address(RVA = "0x15C0FAC", Offset = "0x15C0FAC", VA = "0x15C0FAC")]
		public void SetDisplayedToolsCategories(ToolsCategoryType value)
		{
		}

		[Token(Token = "0x60011D6")]
		[Address(RVA = "0x15C1068", Offset = "0x15C1068", VA = "0x15C1068")]
		private void SetToolCategoryDisplayed(ToolsCategoryType toolsCategoryType, bool value)
		{
		}

		[Token(Token = "0x60011D7")]
		[Address(RVA = "0x15C1160", Offset = "0x15C1160", VA = "0x15C1160")]
		public void SetActiveToolsCategory(ToolsCategoryType value)
		{
		}

		[Token(Token = "0x60011D8")]
		[Address(RVA = "0x15C1244", Offset = "0x15C1244", VA = "0x15C1244")]
		public Sequence SetActivePanel(PanelList value, float duration)
		{
			return null;
		}

		[Token(Token = "0x60011D9")]
		[Address(RVA = "0x15C1AD8", Offset = "0x15C1AD8", VA = "0x15C1AD8")]
		public static TweenerCore<float, float, FloatOptions> SetCanvasRendererAlphaOfChildren(Transform parent, float value, float duration)
		{
			return null;
		}

		[Token(Token = "0x60011DA")]
		[Address(RVA = "0x15C1FC8", Offset = "0x15C1FC8", VA = "0x15C1FC8")]
		public HandMenuAnimationHandler()
		{
		}
	}
	[Token(Token = "0x200036E")]
	public class HandMenuEnableDebug : MonoBehaviour
	{
		[Token(Token = "0x400118B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private KeyCode _keyCode;

		[Token(Token = "0x400118C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private HandMenuHandler _handMenuHandler;

		[Token(Token = "0x60011F1")]
		[Address(RVA = "0x15C33F0", Offset = "0x15C33F0", VA = "0x15C33F0")]
		private void Update()
		{
		}

		[Token(Token = "0x60011F2")]
		[Address(RVA = "0x15C34E8", Offset = "0x15C34E8", VA = "0x15C34E8")]
		public HandMenuEnableDebug()
		{
		}
	}
	[Token(Token = "0x200036F")]
	[Flags]
	public enum MenuPanelType
	{
		[Token(Token = "0x400118E")]
		None = 0,
		[Token(Token = "0x400118F")]
		Systems = 1,
		[Token(Token = "0x4001190")]
		Tools = 2,
		[Token(Token = "0x4001191")]
		Rotate = 4,
		[Token(Token = "0x4001192")]
		Teacher = 8,
		[Token(Token = "0x4001193")]
		All = -1
	}
	[Token(Token = "0x2000370")]
	public class HandMenuHandler : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000371")]
		public class HandMenuPanel
		{
			[Token(Token = "0x400119F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			public GameObject GameObject;

			[Token(Token = "0x40011A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[SerializeField]
			public MenuPanelType MenuType;

			[Token(Token = "0x40011A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[SerializeField]
			public LayoutElement LayoutElement;

			[Token(Token = "0x6001207")]
			[Address(RVA = "0x15C3E20", Offset = "0x15C3E20", VA = "0x15C3E20")]
			public HandMenuPanel()
			{
			}
		}

		[Token(Token = "0x4001194")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly MenuPanelType[] MenuPanelTypes;

		[Token(Token = "0x4001195")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private List<HandMenuPanel> _panels;

		[Token(Token = "0x4001196")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MenuPanelType _menuPanelTypeFlags;

		[Token(Token = "0x4001197")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private RectTransform _rectTransform;

		[Token(Token = "0x4001198")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private HorizontalLayoutGroup _handMenuPanelsHorizontalLayoutGroup;

		[Token(Token = "0x4001199")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Button _closeHandMenu;

		[Token(Token = "0x400119A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private AudioClip _showClip;

		[Token(Token = "0x400119B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private AudioClip _hideClip;

		[Token(Token = "0x400119C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private TweenerCore<float, float, FloatOptions> _fadeTweener;

		[Token(Token = "0x170002B5")]
		public IReadOnlyList<HandMenuPanel> Panels
		{
			[Token(Token = "0x60011F3")]
			[Address(RVA = "0x15C34F0", Offset = "0x15C34F0", VA = "0x15C34F0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002B6")]
		public MenuPanelType MenuPanelTypeFlags
		{
			[Token(Token = "0x60011F4")]
			[Address(RVA = "0x15C34F8", Offset = "0x15C34F8", VA = "0x15C34F8")]
			get
			{
				return default(MenuPanelType);
			}
		}

		[Token(Token = "0x170002B7")]
		public bool HandMenuEnabled
		{
			[Token(Token = "0x60011F5")]
			[Address(RVA = "0x15C3500", Offset = "0x15C3500", VA = "0x15C3500")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60011F6")]
			[Address(RVA = "0x15C3508", Offset = "0x15C3508", VA = "0x15C3508")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x170002B8")]
		public Button CloseButton
		{
			[Token(Token = "0x60011F7")]
			[Address(RVA = "0x15C3514", Offset = "0x15C3514", VA = "0x15C3514")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002B9")]
		public bool StateLocked
		{
			[Token(Token = "0x60011F8")]
			[Address(RVA = "0x15C351C", Offset = "0x15C351C", VA = "0x15C351C")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60011F9")]
			[Address(RVA = "0x15C3524", Offset = "0x15C3524", VA = "0x15C3524")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x60011FA")]
		[Address(RVA = "0x15C3530", Offset = "0x15C3530", VA = "0x15C3530")]
		private void Start()
		{
		}

		[Token(Token = "0x60011FB")]
		[Address(RVA = "0x15C35E8", Offset = "0x15C35E8", VA = "0x15C35E8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60011FC")]
		[Address(RVA = "0x15C367C", Offset = "0x15C367C", VA = "0x15C367C")]
		private void OnCloseClicked()
		{
		}

		[Token(Token = "0x60011FD")]
		[Address(RVA = "0x15C3688", Offset = "0x15C3688", VA = "0x15C3688")]
		public void SetPanelConfiguration(MenuPanelType menuPanelTypeFlags)
		{
		}

		[Token(Token = "0x60011FE")]
		[Address(RVA = "0x15C3A6C", Offset = "0x15C3A6C", VA = "0x15C3A6C")]
		public void SetPanelActive(MenuPanelType menuPanelType, bool value)
		{
		}

		[Token(Token = "0x60011FF")]
		[Address(RVA = "0x15C374C", Offset = "0x15C374C", VA = "0x15C374C")]
		private void DisplayPanel(MenuPanelType menuPanelType, bool value)
		{
		}

		[Token(Token = "0x6001200")]
		[Address(RVA = "0x15C3850", Offset = "0x15C3850", VA = "0x15C3850")]
		private void SetPanelWidth()
		{
		}

		[Token(Token = "0x6001201")]
		[Address(RVA = "0x15C344C", Offset = "0x15C344C", VA = "0x15C344C")]
		public void SetHandMenuEnabled(bool value, bool playSound)
		{
		}

		[Token(Token = "0x6001202")]
		[Address(RVA = "0x15C3AC4", Offset = "0x15C3AC4", VA = "0x15C3AC4")]
		private void ShowMenu()
		{
		}

		[Token(Token = "0x6001203")]
		[Address(RVA = "0x15C3BD0", Offset = "0x15C3BD0", VA = "0x15C3BD0")]
		private void HideMenu()
		{
		}

		[Token(Token = "0x6001204")]
		[Address(RVA = "0x15C3CD8", Offset = "0x15C3CD8", VA = "0x15C3CD8")]
		public HandMenuHandler()
		{
		}
	}
	[Token(Token = "0x2000373")]
	public static class HandMenuHandlerExtensions
	{
		[Token(Token = "0x600120A")]
		[Address(RVA = "0x15C1E24", Offset = "0x15C1E24", VA = "0x15C1E24")]
		public static TweenerCore<float, float, FloatOptions> DoCanvasRendererFade(this IEnumerable<Graphic> graphics, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x600120B")]
		[Address(RVA = "0x15C1C90", Offset = "0x15C1C90", VA = "0x15C1C90")]
		public static TweenerCore<float, float, FloatOptions> DoMinWidth(this LayoutElement target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}
	}
	[Token(Token = "0x2000376")]
	public static class HandMenuHelpers
	{
		[Token(Token = "0x40011A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly SubpartType[] SubpartOrder;

		[Token(Token = "0x40011A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly System.Collections.Generic.IReadOnlyDictionary<SubpartType, int> SubpartOrderMap;

		[Token(Token = "0x6001212")]
		[Address(RVA = "0x15C3F30", Offset = "0x15C3F30", VA = "0x15C3F30")]
		public static CompositeDisposable InitOpenToolsWalkthrough(this HandMenuReferences handMenuReferences)
		{
			return null;
		}

		[Token(Token = "0x6001213")]
		[Address(RVA = "0x15C43C8", Offset = "0x15C43C8", VA = "0x15C43C8")]
		public static CompositeDisposable InitQuickActionsEditor(this HandMenuReferences handMenuReferences)
		{
			return null;
		}

		[Token(Token = "0x6001214")]
		[Address(RVA = "0x15C47C4", Offset = "0x15C47C4", VA = "0x15C47C4")]
		public static CompositeDisposable InitDatabaseTypeToggles(this HandMenuReferences handMenuReferences, INetworkModuleProviderFactory moduleProviderFactory)
		{
			return null;
		}

		[Token(Token = "0x6001215")]
		[Address(RVA = "0x15C4F7C", Offset = "0x15C4F7C", VA = "0x15C4F7C")]
		public static CompositeDisposable InitSystemUiComponents(IEnumerable<SystemUiComponent> systemUiComponents, INetworkModuleProviderFactory moduleProviderFactory, InteractionModel interactionModel, Transform modalParentTransform, IFunctionStack functionStack, Func<Database.SystemType, bool> isLicenseValid, [Optional] Action onLicenseInvalid)
		{
			return null;
		}

		[Token(Token = "0x6001216")]
		[Address(RVA = "0x15C7564", Offset = "0x15C7564", VA = "0x15C7564")]
		private static void SetupSystemToggle(SystemUiComponent toggle, LocationType? locationType, DatabaseType databaseType, bool locationsEnabled, IAnatomyDatabase anatomyDatabase)
		{
		}

		[Token(Token = "0x6001217")]
		[Address(RVA = "0x15C795C", Offset = "0x15C795C", VA = "0x15C795C")]
		public static void InitializeForStudent(this HandMenuReferences handMenuReferences, string studentName)
		{
		}
	}
	[Token(Token = "0x2000385")]
	public class HandMenuPanelColliderSetter : MonoBehaviour
	{
		[Token(Token = "0x40011E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private HandMenuAnimationHandler _handMenuAnimationHandler;

		[Token(Token = "0x40011EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private BoxColliderSizeSetter _boxColliderSizeSetter;

		[Token(Token = "0x40011EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private PanelList _lastOpenedPanel;

		[Token(Token = "0x6001260")]
		[Address(RVA = "0x15CD760", Offset = "0x15CD760", VA = "0x15CD760")]
		private void Start()
		{
		}

		[Token(Token = "0x6001261")]
		[Address(RVA = "0x15CD8A8", Offset = "0x15CD8A8", VA = "0x15CD8A8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001262")]
		[Address(RVA = "0x15CD77C", Offset = "0x15CD77C", VA = "0x15CD77C")]
		private void OnOpenedPanelChanged(PanelList panelList)
		{
		}

		[Token(Token = "0x6001263")]
		[Address(RVA = "0x15CD8EC", Offset = "0x15CD8EC", VA = "0x15CD8EC")]
		public HandMenuPanelColliderSetter()
		{
		}
	}
	[Token(Token = "0x2000386")]
	public class HandMenuReferences : MonoBehaviour
	{
		[Token(Token = "0x40011EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[Header("Toggles")]
		private Toggle _maleToggle;

		[Token(Token = "0x40011ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Toggle _femaleToggle;

		[Token(Token = "0x40011EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Toggle _microAnatomyToggle;

		[Token(Token = "0x40011EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Toggle _animationPanelToggle;

		[Token(Token = "0x40011F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Toggle _editQuickActionSelections;

		[Token(Token = "0x40011F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Toggle _tools;

		[Token(Token = "0x40011F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Toggle _quickAction;

		[Token(Token = "0x40011F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Header("Others")]
		[SerializeField]
		private LocalizedTextMeshProGui _editQuickActionText;

		[Token(Token = "0x40011F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Transform _systemUiComponentContent;

		[Token(Token = "0x40011F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Transform _toolsQuickParent;

		[Token(Token = "0x40011F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Transform _toolsInteractionParent;

		[Token(Token = "0x40011F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Transform _toolsApplicationParent;

		[Token(Token = "0x40011F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private Transform _toolsFunctionsParent;

		[Token(Token = "0x40011F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private GameObject _quickActionSelector;

		[Token(Token = "0x40011FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private Transform _allFunctionsParent;

		[Token(Token = "0x40011FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private ReorderableList _allFunctionsReorderableList;

		[Token(Token = "0x40011FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private ReorderableList _quickActionsReorderableList;

		[Token(Token = "0x40011FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private Transform _shortcutActiveParent;

		[Token(Token = "0x40011FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private HandMenuHandler _handMenuHandler;

		[Token(Token = "0x40011FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private HandMenuAnimationHandler _handMenuAnimationHandler;

		[Token(Token = "0x4001200")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private AnimationsPanel _animationsPanel;

		[Token(Token = "0x4001201")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private GameObject _systemPanel;

		[Token(Token = "0x4001202")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private Transform _multiplayerPanelParent;

		[Token(Token = "0x4001203")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private GameObject _toolsUpperRow;

		[Token(Token = "0x4001204")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private TextMeshProUGUI _licenseInfoText;

		[Token(Token = "0x4001205")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		[Header("Prefabs")]
		private UiElementReferences _toolsTogglePrefab;

		[Token(Token = "0x4001206")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		private UiElementReferences _toolsButtonPrefab;

		[Token(Token = "0x4001207")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		private UiElementReferences _toggleIconPrefab;

		[Token(Token = "0x4001208")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		private SystemUiComponent _systemUiComponentPrefab;

		[Token(Token = "0x4001209")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		private TextMeshProUGUI _studentCounterTextPrefab;

		[Token(Token = "0x170002BA")]
		public Toggle MaleToggle
		{
			[Token(Token = "0x6001264")]
			[Address(RVA = "0x15CD8F4", Offset = "0x15CD8F4", VA = "0x15CD8F4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002BB")]
		public Toggle FemaleToggle
		{
			[Token(Token = "0x6001265")]
			[Address(RVA = "0x15CD8FC", Offset = "0x15CD8FC", VA = "0x15CD8FC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002BC")]
		public Toggle MicroAnatomyToggle
		{
			[Token(Token = "0x6001266")]
			[Address(RVA = "0x15CD904", Offset = "0x15CD904", VA = "0x15CD904")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002BD")]
		public Toggle AnimationPanelToggle
		{
			[Token(Token = "0x6001267")]
			[Address(RVA = "0x15CD90C", Offset = "0x15CD90C", VA = "0x15CD90C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002BE")]
		public Toggle EditQuickActionSelections
		{
			[Token(Token = "0x6001268")]
			[Address(RVA = "0x15CD914", Offset = "0x15CD914", VA = "0x15CD914")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002BF")]
		public Toggle Tools
		{
			[Token(Token = "0x6001269")]
			[Address(RVA = "0x15CD91C", Offset = "0x15CD91C", VA = "0x15CD91C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002C0")]
		public Toggle QuickAction
		{
			[Token(Token = "0x600126A")]
			[Address(RVA = "0x15CD924", Offset = "0x15CD924", VA = "0x15CD924")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002C1")]
		public LocalizedTextMeshProGui EditQuickActionText
		{
			[Token(Token = "0x600126B")]
			[Address(RVA = "0x15CD92C", Offset = "0x15CD92C", VA = "0x15CD92C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002C2")]
		public Transform SystemUiComponentContent
		{
			[Token(Token = "0x600126C")]
			[Address(RVA = "0x15CD934", Offset = "0x15CD934", VA = "0x15CD934")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002C3")]
		public Transform ToolsQuickParent
		{
			[Token(Token = "0x600126D")]
			[Address(RVA = "0x15CD93C", Offset = "0x15CD93C", VA = "0x15CD93C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002C4")]
		public Transform ToolsInteractionParent
		{
			[Token(Token = "0x600126E")]
			[Address(RVA = "0x15CD944", Offset = "0x15CD944", VA = "0x15CD944")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002C5")]
		public Transform ToolsApplicationParent
		{
			[Token(Token = "0x600126F")]
			[Address(RVA = "0x15CD94C", Offset = "0x15CD94C", VA = "0x15CD94C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002C6")]
		public Transform ToolsFunctionsParent
		{
			[Token(Token = "0x6001270")]
			[Address(RVA = "0x15CD954", Offset = "0x15CD954", VA = "0x15CD954")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002C7")]
		public Transform ShortcutActiveParent
		{
			[Token(Token = "0x6001271")]
			[Address(RVA = "0x15CD95C", Offset = "0x15CD95C", VA = "0x15CD95C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002C8")]
		public GameObject QuickActionSelector
		{
			[Token(Token = "0x6001272")]
			[Address(RVA = "0x15CD964", Offset = "0x15CD964", VA = "0x15CD964")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002C9")]
		public Transform AllFunctionsParent
		{
			[Token(Token = "0x6001273")]
			[Address(RVA = "0x15CD96C", Offset = "0x15CD96C", VA = "0x15CD96C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002CA")]
		public ReorderableList AllFunctionsReorderableList
		{
			[Token(Token = "0x6001274")]
			[Address(RVA = "0x15CD974", Offset = "0x15CD974", VA = "0x15CD974")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002CB")]
		public ReorderableList QuickActionsReorderableList
		{
			[Token(Token = "0x6001275")]
			[Address(RVA = "0x15CD97C", Offset = "0x15CD97C", VA = "0x15CD97C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002CC")]
		public UiElementReferences ToolsTogglePrefab
		{
			[Token(Token = "0x6001276")]
			[Address(RVA = "0x15CD984", Offset = "0x15CD984", VA = "0x15CD984")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002CD")]
		public UiElementReferences ToolsButtonPrefab
		{
			[Token(Token = "0x6001277")]
			[Address(RVA = "0x15CD98C", Offset = "0x15CD98C", VA = "0x15CD98C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002CE")]
		public UiElementReferences ToggleIconPrefab
		{
			[Token(Token = "0x6001278")]
			[Address(RVA = "0x15CD994", Offset = "0x15CD994", VA = "0x15CD994")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002CF")]
		public SystemUiComponent SystemUiComponentPrefab
		{
			[Token(Token = "0x6001279")]
			[Address(RVA = "0x15CD99C", Offset = "0x15CD99C", VA = "0x15CD99C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002D0")]
		public HandMenuHandler HandMenuHandler
		{
			[Token(Token = "0x600127A")]
			[Address(RVA = "0x15CD9A4", Offset = "0x15CD9A4", VA = "0x15CD9A4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002D1")]
		public HandMenuAnimationHandler HandMenuAnimationHandler
		{
			[Token(Token = "0x600127B")]
			[Address(RVA = "0x15CD9AC", Offset = "0x15CD9AC", VA = "0x15CD9AC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002D2")]
		public AnimationsPanel AnimationsPanel
		{
			[Token(Token = "0x600127C")]
			[Address(RVA = "0x15CD9B4", Offset = "0x15CD9B4", VA = "0x15CD9B4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002D3")]
		public GameObject SystemPanel
		{
			[Token(Token = "0x600127D")]
			[Address(RVA = "0x15CD9BC", Offset = "0x15CD9BC", VA = "0x15CD9BC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002D4")]
		public Transform MultiplayerPanelParent
		{
			[Token(Token = "0x600127E")]
			[Address(RVA = "0x15CD9C4", Offset = "0x15CD9C4", VA = "0x15CD9C4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002D5")]
		public TextMeshProUGUI StudentCounterTextPrefab
		{
			[Token(Token = "0x600127F")]
			[Address(RVA = "0x15CD9CC", Offset = "0x15CD9CC", VA = "0x15CD9CC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002D6")]
		public GameObject ToolsUpperRow
		{
			[Token(Token = "0x6001280")]
			[Address(RVA = "0x15CD9D4", Offset = "0x15CD9D4", VA = "0x15CD9D4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002D7")]
		public TextMeshProUGUI LicenseInfoText
		{
			[Token(Token = "0x6001281")]
			[Address(RVA = "0x15CD9DC", Offset = "0x15CD9DC", VA = "0x15CD9DC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001282")]
		[Address(RVA = "0x15CD9E4", Offset = "0x15CD9E4", VA = "0x15CD9E4")]
		public HandMenuReferences()
		{
		}
	}
	[Token(Token = "0x2000387")]
	public class UiElementActionDefinition
	{
		[Token(Token = "0x170002D8")]
		public Action ButtonAction
		{
			[Token(Token = "0x6001283")]
			[Address(RVA = "0x15CD9EC", Offset = "0x15CD9EC", VA = "0x15CD9EC")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001284")]
			[Address(RVA = "0x15CD9F4", Offset = "0x15CD9F4", VA = "0x15CD9F4")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170002D9")]
		public Action<bool> ToggleAction
		{
			[Token(Token = "0x6001285")]
			[Address(RVA = "0x15CD9FC", Offset = "0x15CD9FC", VA = "0x15CD9FC")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001286")]
			[Address(RVA = "0x15CDA04", Offset = "0x15CDA04", VA = "0x15CDA04")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170002DA")]
		public Func<bool, bool> ToggleActionWithValidation
		{
			[Token(Token = "0x6001287")]
			[Address(RVA = "0x15CDA0C", Offset = "0x15CDA0C", VA = "0x15CDA0C")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001288")]
			[Address(RVA = "0x15CDA14", Offset = "0x15CDA14", VA = "0x15CDA14")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170002DB")]
		public Func<bool> ToggleFunction
		{
			[Token(Token = "0x6001289")]
			[Address(RVA = "0x15CDA1C", Offset = "0x15CDA1C", VA = "0x15CDA1C")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600128A")]
			[Address(RVA = "0x15CDA24", Offset = "0x15CDA24", VA = "0x15CDA24")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170002DC")]
		public Func<bool> IsInteractableFunction
		{
			[Token(Token = "0x600128B")]
			[Address(RVA = "0x15CDA2C", Offset = "0x15CDA2C", VA = "0x15CDA2C")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600128C")]
			[Address(RVA = "0x15CDA34", Offset = "0x15CDA34", VA = "0x15CDA34")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170002DD")]
		public bool ChangeStateAfterBecameUnavailable
		{
			[Token(Token = "0x600128D")]
			[Address(RVA = "0x15CDA3C", Offset = "0x15CDA3C", VA = "0x15CDA3C")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600128E")]
			[Address(RVA = "0x15CDA44", Offset = "0x15CDA44", VA = "0x15CDA44")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170002DE")]
		public Action<Image> IconAnimation
		{
			[Token(Token = "0x600128F")]
			[Address(RVA = "0x15CDA50", Offset = "0x15CDA50", VA = "0x15CDA50")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001290")]
			[Address(RVA = "0x15CDA58", Offset = "0x15CDA58", VA = "0x15CDA58")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170002DF")]
		public Action<Image, bool> IconAnimationToggle
		{
			[Token(Token = "0x6001291")]
			[Address(RVA = "0x15CDA60", Offset = "0x15CDA60", VA = "0x15CDA60")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001292")]
			[Address(RVA = "0x15CDA68", Offset = "0x15CDA68", VA = "0x15CDA68")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170002E0")]
		public ToggleGroup ToggleGroup
		{
			[Token(Token = "0x6001293")]
			[Address(RVA = "0x15CDA70", Offset = "0x15CDA70", VA = "0x15CDA70")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001294")]
			[Address(RVA = "0x15CDA78", Offset = "0x15CDA78", VA = "0x15CDA78")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170002E1")]
		public Func<bool> AvailabilityFunction
		{
			[Token(Token = "0x6001295")]
			[Address(RVA = "0x15CDA80", Offset = "0x15CDA80", VA = "0x15CDA80")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001296")]
			[Address(RVA = "0x15CDA88", Offset = "0x15CDA88", VA = "0x15CDA88")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6001297")]
		[Address(RVA = "0x15CDA90", Offset = "0x15CDA90", VA = "0x15CDA90")]
		public UiElementActionDefinition()
		{
		}
	}
	[Token(Token = "0x2000388")]
	public static class HandMenuUiElementHelpers
	{
		[Token(Token = "0x2000389")]
		public class SpawnedUiElement
		{
			[Token(Token = "0x4001214")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public UiElementDefinition UiElementDefinition;

			[Token(Token = "0x4001215")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public UiElementReferences UiElementReferences;

			[Token(Token = "0x60012AA")]
			[Address(RVA = "0x15CFD70", Offset = "0x15CFD70", VA = "0x15CFD70")]
			public SpawnedUiElement()
			{
			}
		}

		[Token(Token = "0x6001298")]
		[Address(RVA = "0x15CDAA0", Offset = "0x15CDAA0", VA = "0x15CDAA0")]
		public static UiElementReferences GetUiElementPrefab(this HandMenuReferences handMenuReferences, UiElementType uiElementType)
		{
			return null;
		}

		[Token(Token = "0x6001299")]
		[Address(RVA = "0x15CDB4C", Offset = "0x15CDB4C", VA = "0x15CDB4C")]
		public static bool HasAction(this UiElementActionDefinition definition, UiElementType uiElementType)
		{
			return default(bool);
		}

		[Token(Token = "0x600129A")]
		[Address(RVA = "0x15CDC0C", Offset = "0x15CDC0C", VA = "0x15CDC0C")]
		public static Transform GetContentTransform(this HandMenuReferences handMenuReferences, UiElementCategory uiElementCategory)
		{
			return null;
		}

		[Token(Token = "0x600129B")]
		[Address(RVA = "0x15CDCFC", Offset = "0x15CDCFC", VA = "0x15CDCFC")]
		private static void Initialize(this UiElementReferences uiElementReferences, UiElementDefinition elementDefinition)
		{
		}

		[Token(Token = "0x600129C")]
		[Address(RVA = "0x15CDE60", Offset = "0x15CDE60", VA = "0x15CDE60")]
		public static void DestroyUiElements(this HandMenuReferences handMenuReferences, UiElementCategory uiElementCategories)
		{
		}

		[Token(Token = "0x600129D")]
		[Address(RVA = "0x15CE6E4", Offset = "0x15CE6E4", VA = "0x15CE6E4")]
		public static List<SpawnedUiElement> SpawnQuickActionElements(this HandMenuReferences handMenuReferences, IEnumerable<UiElementDefinition> uiElements, System.Collections.Generic.IReadOnlyDictionary<string, UiElementActionDefinition> actions, IEnumerable<string> quickActions)
		{
			return null;
		}

		[Token(Token = "0x600129E")]
		[Address(RVA = "0x15CF258", Offset = "0x15CF258", VA = "0x15CF258")]
		public static IEnumerable<UiElementDefinition> ValidFor(this IEnumerable<UiElementDefinition> definitions, System.Collections.Generic.IReadOnlyDictionary<string, UiElementActionDefinition> actionDefinitions, bool isStudent)
		{
			return null;
		}

		[Token(Token = "0x600129F")]
		[Address(RVA = "0x15CF410", Offset = "0x15CF410", VA = "0x15CF410")]
		public static IEnumerable<UiElementDefinition> OfCategories(this IEnumerable<UiElementDefinition> uiElementDefinitions, UiElementCategory categories)
		{
			return null;
		}

		[Token(Token = "0x60012A0")]
		[Address(RVA = "0x15CF4EC", Offset = "0x15CF4EC", VA = "0x15CF4EC")]
		public static List<SpawnedUiElement> SpawnUiElements(this HandMenuReferences handMenuReferences, IEnumerable<UiElementDefinition> uiElements, UiElementCategory categories, [Optional] Transform parentOverride)
		{
			return null;
		}

		[Token(Token = "0x60012A1")]
		[Address(RVA = "0x15CF174", Offset = "0x15CF174", VA = "0x15CF174")]
		public static SpawnedUiElement SpawnAndInitializeUiElement(UiElementDefinition uiElementDefinition, UiElementReferences prefab, Transform parent)
		{
			return null;
		}

		[Token(Token = "0x60012A2")]
		[Address(RVA = "0x15CFD78", Offset = "0x15CFD78", VA = "0x15CFD78")]
		public static CompositeDisposable InitUiElement(this UiElementReferences uiElementReferences, UiElementDefinition uiElementDefinition, UiElementActionDefinition definition)
		{
			return null;
		}

		[Token(Token = "0x60012A3")]
		[Address(RVA = "0x15D0990", Offset = "0x15D0990", VA = "0x15D0990")]
		public static void DestroyActiveFunctionToggles(this HandMenuReferences handMenuReferences)
		{
		}

		[Token(Token = "0x60012A4")]
		[Address(RVA = "0x15D0C94", Offset = "0x15D0C94", VA = "0x15D0C94")]
		public static IEnumerable<UiElementDefinition> ValidForActionToggles(this IEnumerable<UiElementDefinition> uiElements, System.Collections.Generic.IReadOnlyDictionary<string, UiElementActionDefinition> actionDefinitions)
		{
			return null;
		}

		[Token(Token = "0x60012A5")]
		[Address(RVA = "0x15D0D7C", Offset = "0x15D0D7C", VA = "0x15D0D7C")]
		public static List<SpawnedUiElement> SpawnActiveFunctionToggles(this HandMenuReferences handMenuReferences, IEnumerable<UiElementDefinition> uiElementDefinitions)
		{
			return null;
		}

		[Token(Token = "0x60012A6")]
		[Address(RVA = "0x15D1120", Offset = "0x15D1120", VA = "0x15D1120")]
		public static CompositeDisposable InitActiveFunctionToggle(this UiElementReferences uiElementReferences, UiElementDefinition uiElementDefinition, UiElementActionDefinition definition, bool isStudent)
		{
			return null;
		}

		[Token(Token = "0x60012A7")]
		[Address(RVA = "0x15D16A0", Offset = "0x15D16A0", VA = "0x15D16A0")]
		public static void DestroySystemUiComponents(this HandMenuReferences handMenuReferences)
		{
		}

		[Token(Token = "0x60012A8")]
		[Address(RVA = "0x15D19A4", Offset = "0x15D19A4", VA = "0x15D19A4")]
		public static SystemUiComponent[] SpawnSystemUiComponents(this HandMenuReferences handMenuReferences, IEnumerable<SystemUiComponentDefinition> systemUiComponentDefinitions)
		{
			return null;
		}

		[Token(Token = "0x60012A9")]
		[Address(RVA = "0x15D19C8", Offset = "0x15D19C8", VA = "0x15D19C8")]
		public static SystemUiComponent[] SpawnSystemUiComponents(IEnumerable<SystemUiComponentDefinition> systemUiComponentDefinitions, SystemUiComponent systemUiComponentPrefab, Transform parent)
		{
			return null;
		}
	}
	[Token(Token = "0x2000395")]
	public enum UiElementType
	{
		[Token(Token = "0x400122C")]
		Button,
		[Token(Token = "0x400122D")]
		Toggle
	}
	[Token(Token = "0x2000396")]
	[Flags]
	public enum UiElementCategory
	{
		[Token(Token = "0x400122F")]
		Quick = 1,
		[Token(Token = "0x4001230")]
		Interaction = 2,
		[Token(Token = "0x4001231")]
		Functions = 4,
		[Token(Token = "0x4001232")]
		Application = 8,
		[Token(Token = "0x4001233")]
		Networking = 0x10,
		[Token(Token = "0x4001234")]
		Tools = 0xF,
		[Token(Token = "0x4001235")]
		All = -1
	}
	[Serializable]
	[Token(Token = "0x2000397")]
	public class UiElementDefinition
	{
		[Token(Token = "0x4001236")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string ActionId;

		[Token(Token = "0x4001237")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UiElementType UiElementType;

		[Token(Token = "0x4001238")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public UiElementCategory UiElementCategoryFlags;

		[Token(Token = "0x4001239")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Sprite Icon;

		[Token(Token = "0x400123A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string LocalizedId;

		[Token(Token = "0x400123B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool StudentEnabled;

		[Token(Token = "0x60012D3")]
		[Address(RVA = "0x15D2440", Offset = "0x15D2440", VA = "0x15D2440")]
		public UiElementDefinition()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000398")]
	public class SystemUiComponentDefinition
	{
		[Token(Token = "0x400123C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[HideInInspector]
		public string Name;

		[Token(Token = "0x400123D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Database.SystemType SystemType;

		[Token(Token = "0x400123E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Sprite Sprite;

		[Token(Token = "0x400123F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string LocalizedTextId;

		[Token(Token = "0x60012D4")]
		[Address(RVA = "0x15D2448", Offset = "0x15D2448", VA = "0x15D2448")]
		public SystemUiComponentDefinition()
		{
		}
	}
	[Token(Token = "0x2000399")]
	[CreateAssetMenu(fileName = "UiElementDefinition", menuName = "Utilities/UiElementDefinition")]
	public class UiElementDatabase : ScriptableObject
	{
		[Token(Token = "0x4001240")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private List<UiElementDefinition> _toolsDatabase;

		[Token(Token = "0x4001241")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private List<SystemUiComponentDefinition> _systemUiComponentDefinitions;

		[Token(Token = "0x170002E2")]
		public List<UiElementDefinition> ToolsDatabase
		{
			[Token(Token = "0x60012D5")]
			[Address(RVA = "0x15D2450", Offset = "0x15D2450", VA = "0x15D2450")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002E3")]
		public List<SystemUiComponentDefinition> SystemUiComponentDefinitions
		{
			[Token(Token = "0x60012D6")]
			[Address(RVA = "0x15D2458", Offset = "0x15D2458", VA = "0x15D2458")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60012D7")]
		[Address(RVA = "0x15D2460", Offset = "0x15D2460", VA = "0x15D2460")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x60012D8")]
		[Address(RVA = "0x15D2568", Offset = "0x15D2568", VA = "0x15D2568")]
		public UiElementDatabase()
		{
		}
	}
}
namespace VR.FileBrowser
{
	[Token(Token = "0x200039B")]
	public class FileBrowserVR : MonoBehaviour
	{
		[Token(Token = "0x200039E")]
		[CompilerGenerated]
		private sealed class <>c__DisplayClass20_0
		{
			[StructLayout(3)]
			[Token(Token = "0x200039F")]
			private struct <<DrawDirectoryView>b__4>d : IAsyncStateMachine
			{
				[Token(Token = "0x4001261")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public int <>1__state;

				[Token(Token = "0x4001262")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
				public AsyncVoidMethodBuilder <>t__builder;

				[Token(Token = "0x4001263")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
				public <>c__DisplayClass20_0 <>4__this;

				[Token(Token = "0x4001264")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
				private int <i>5__2;

				[Token(Token = "0x4001265")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
				private YieldAwaitable.YieldAwaiter <>u__1;

				[Token(Token = "0x60012F7")]
				[Address(RVA = "0x15D46E0", Offset = "0x15D46E0", VA = "0x15D46E0", Slot = "4")]
				private void MoveNext()
				{
				}

				[Token(Token = "0x60012F8")]
				[Address(RVA = "0x15D4998", Offset = "0x15D4998", VA = "0x15D4998", Slot = "5")]
				[DebuggerHidden]
				private void SetStateMachine(IAsyncStateMachine stateMachine)
				{
				}
			}

			[Token(Token = "0x400125C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int buttonsInstantiatedPerFrame;

			[Token(Token = "0x400125D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public FileBrowserVR <>4__this;

			[Token(Token = "0x400125E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FileInfo[] files;

			[Token(Token = "0x400125F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public CancellationToken cancellationToken;

			[Token(Token = "0x4001260")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public UiElementReferences showMoreButton;

			[Token(Token = "0x60012F5")]
			[Address(RVA = "0x15D4620", Offset = "0x15D4620", VA = "0x15D4620")]
			public <>c__DisplayClass20_0()
			{
			}

			[Token(Token = "0x60012F6")]
			[Address(RVA = "0x15D4628", Offset = "0x15D4628", VA = "0x15D4628")]
			[AsyncStateMachine(typeof(<<DrawDirectoryView>b__4>d))]
			internal void <DrawDirectoryView>b__4(Unit _)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20003A0")]
		[CompilerGenerated]
		private struct <DrawDirectoryView>d__20 : IAsyncStateMachine
		{
			[Token(Token = "0x4001266")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001267")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4001268")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public FileBrowserVR <>4__this;

			[Token(Token = "0x4001269")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public CancellationToken cancellationToken;

			[Token(Token = "0x400126A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public string directoryPath;

			[Token(Token = "0x400126B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private <>c__DisplayClass20_0 <>8__1;

			[Token(Token = "0x400126C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private IEnumerator<DirectoryInfo> <>7__wrap1;

			[Token(Token = "0x400126D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private YieldAwaitable.YieldAwaiter <>u__1;

			[Token(Token = "0x400126E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			private int <i>5__3;

			[Token(Token = "0x60012F9")]
			[Address(RVA = "0x15D49A4", Offset = "0x15D49A4", VA = "0x15D49A4", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60012FA")]
			[Address(RVA = "0x15D57C0", Offset = "0x15D57C0", VA = "0x15D57C0", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4001244")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private PathElement _pathButton;

		[Token(Token = "0x4001245")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private UiElementReferences _directoryButton;

		[Token(Token = "0x4001246")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject _directoryParent;

		[Token(Token = "0x4001247")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Button _drawDirectoryButton;

		[Token(Token = "0x4001248")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Button _importButton;

		[Token(Token = "0x4001249")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private RectTransform _directoryPathParent;

		[Token(Token = "0x400124A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Sprite _folderSprite;

		[Token(Token = "0x400124B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Sprite _fileSprite;

		[Token(Token = "0x400124C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Button _prevPath;

		[Token(Token = "0x400124D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public ReactiveProperty<string> currentDirectory;

		[Token(Token = "0x400124E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private readonly CancellationTokenSource _disposeCancellationTokenSource;

		[Token(Token = "0x400124F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private readonly CompositeDisposable _disposable;

		[Token(Token = "0x4001250")]
		private const int FilesMaxCount = 50;

		[Token(Token = "0x170002E4")]
		public Button ImportButton
		{
			[Token(Token = "0x60012DC")]
			[Address(RVA = "0x15D267C", Offset = "0x15D267C", VA = "0x15D267C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002E5")]
		public string CurrentDirectory
		{
			[Token(Token = "0x60012DD")]
			[Address(RVA = "0x15D2684", Offset = "0x15D2684", VA = "0x15D2684")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60012DE")]
		[Address(RVA = "0x15D26CC", Offset = "0x15D26CC", VA = "0x15D26CC")]
		private void Start()
		{
		}

		[Token(Token = "0x60012DF")]
		[Address(RVA = "0x15D2B1C", Offset = "0x15D2B1C", VA = "0x15D2B1C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60012E0")]
		[Address(RVA = "0x15D2B50", Offset = "0x15D2B50", VA = "0x15D2B50")]
		private void DrawHomeMenu()
		{
		}

		[Token(Token = "0x60012E1")]
		[Address(RVA = "0x15D2E14", Offset = "0x15D2E14", VA = "0x15D2E14")]
		[AsyncStateMachine(typeof(<DrawDirectoryView>d__20))]
		private void DrawDirectoryView(string directoryPath, CancellationToken cancellationToken)
		{
		}

		[Token(Token = "0x60012E2")]
		[Address(RVA = "0x15D2BF4", Offset = "0x15D2BF4", VA = "0x15D2BF4")]
		private UiElementReferences CreateDirectoryButton(string path, string dirName)
		{
			return null;
		}

		[Token(Token = "0x60012E3")]
		[Address(RVA = "0x15D2F0C", Offset = "0x15D2F0C", VA = "0x15D2F0C")]
		private UiElementReferences CreateFileButton(string fileName)
		{
			return null;
		}

		[Token(Token = "0x60012E4")]
		[Address(RVA = "0x15D2FE8", Offset = "0x15D2FE8", VA = "0x15D2FE8")]
		private void CreateDirectoryPath(string directoryPath)
		{
		}

		[Token(Token = "0x60012E5")]
		[Address(RVA = "0x15D3BE8", Offset = "0x15D3BE8", VA = "0x15D3BE8")]
		public FileBrowserVR()
		{
		}
	}
	[Token(Token = "0x20003A3")]
	public class PathElement : MonoBehaviour
	{
		[Token(Token = "0x4001273")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Button _button;

		[Token(Token = "0x4001274")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Image _arrow;

		[Token(Token = "0x4001275")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Text _text;

		[Token(Token = "0x170002E6")]
		public Button Button
		{
			[Token(Token = "0x60012FF")]
			[Address(RVA = "0x15D58B8", Offset = "0x15D58B8", VA = "0x15D58B8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002E7")]
		public Image Arrow
		{
			[Token(Token = "0x6001300")]
			[Address(RVA = "0x15D58C0", Offset = "0x15D58C0", VA = "0x15D58C0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002E8")]
		public Text Text
		{
			[Token(Token = "0x6001301")]
			[Address(RVA = "0x15D58C8", Offset = "0x15D58C8", VA = "0x15D58C8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001302")]
		[Address(RVA = "0x15D58D0", Offset = "0x15D58D0", VA = "0x15D58D0")]
		public PathElement()
		{
		}
	}
}
namespace VR.Examples
{
	[Token(Token = "0x20003A4")]
	public class NetworkQuizExample : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20003A5")]
		private class ExampleQuiz
		{
			[Token(Token = "0x400127C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string Name;

			[Token(Token = "0x400127D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public double Duration;

			[Token(Token = "0x600130E")]
			[Address(RVA = "0x15D6038", Offset = "0x15D6038", VA = "0x15D6038")]
			public ExampleQuiz()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20003A6")]
		private class ExampleAnswer
		{
			[Token(Token = "0x400127E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string ParticipantId;

			[Token(Token = "0x400127F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public byte QuestionId;

			[Token(Token = "0x4001280")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool[] SelectedAnswers;

			[Token(Token = "0x600130F")]
			[Address(RVA = "0x15D6040", Offset = "0x15D6040", VA = "0x15D6040")]
			public ExampleAnswer()
			{
			}
		}

		[Token(Token = "0x20003A7")]
		[CompilerGenerated]
		private sealed class <>c__DisplayClass7_0
		{
			[Token(Token = "0x4001281")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public IQuizModule quizModule;

			[Token(Token = "0x4001282")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public NetworkQuizExample <>4__this;

			[Token(Token = "0x6001310")]
			[Address(RVA = "0x15D6048", Offset = "0x15D6048", VA = "0x15D6048")]
			public <>c__DisplayClass7_0()
			{
			}

			[Token(Token = "0x6001311")]
			[Address(RVA = "0x15D6050", Offset = "0x15D6050", VA = "0x15D6050")]
			internal bool <Start>b__0()
			{
				return default(bool);
			}

			[Token(Token = "0x6001312")]
			[Address(RVA = "0x15D6148", Offset = "0x15D6148", VA = "0x15D6148")]
			internal double <Start>b__2(long val)
			{
				return default(double);
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20003A9")]
		[CompilerGenerated]
		private struct <Start>d__7 : IAsyncStateMachine
		{
			[Token(Token = "0x4001286")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001287")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4001288")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public NetworkQuizExample <>4__this;

			[Token(Token = "0x4001289")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private <>c__DisplayClass7_0 <>8__1;

			[Token(Token = "0x400128A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x6001317")]
			[Address(RVA = "0x15D642C", Offset = "0x15D642C", VA = "0x15D642C", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001318")]
			[Address(RVA = "0x15D6A54", Offset = "0x15D6A54", VA = "0x15D6A54", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20003AA")]
		[CompilerGenerated]
		private struct <SetActiveQuiz>d__11 : IAsyncStateMachine
		{
			[Token(Token = "0x400128B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x400128C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x400128D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public NetworkQuizExample <>4__this;

			[Token(Token = "0x400128E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x6001319")]
			[Address(RVA = "0x15D6A60", Offset = "0x15D6A60", VA = "0x15D6A60", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x600131A")]
			[Address(RVA = "0x15D6E74", Offset = "0x15D6E74", VA = "0x15D6E74", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20003AB")]
		[CompilerGenerated]
		private struct <CancelActiveQuiz>d__12 : IAsyncStateMachine
		{
			[Token(Token = "0x400128F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001290")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4001291")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public NetworkQuizExample <>4__this;

			[Token(Token = "0x4001292")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x600131B")]
			[Address(RVA = "0x15D6E80", Offset = "0x15D6E80", VA = "0x15D6E80", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x600131C")]
			[Address(RVA = "0x15D721C", Offset = "0x15D721C", VA = "0x15D721C", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20003AC")]
		[CompilerGenerated]
		private struct <SetAnswer>d__13 : IAsyncStateMachine
		{
			[Token(Token = "0x4001293")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001294")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4001295")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public NetworkQuizExample <>4__this;

			[Token(Token = "0x4001296")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x600131D")]
			[Address(RVA = "0x15D7228", Offset = "0x15D7228", VA = "0x15D7228", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x600131E")]
			[Address(RVA = "0x15D75E0", Offset = "0x15D75E0", VA = "0x15D75E0", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20003AD")]
		[CompilerGenerated]
		private struct <GetAnswers>d__14 : IAsyncStateMachine
		{
			[Token(Token = "0x4001297")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001298")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4001299")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public NetworkQuizExample <>4__this;

			[Token(Token = "0x400129A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TaskAwaiter<IEnumerable<IAnswer>> <>u__1;

			[Token(Token = "0x600131F")]
			[Address(RVA = "0x15D75EC", Offset = "0x15D75EC", VA = "0x15D75EC", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001320")]
			[Address(RVA = "0x15D80A8", Offset = "0x15D80A8", VA = "0x15D80A8", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20003AE")]
		[CompilerGenerated]
		private struct <GetTests>d__16 : IAsyncStateMachine
		{
			[Token(Token = "0x400129B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x400129C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x400129D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public NetworkQuizExample <>4__this;

			[Token(Token = "0x400129E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TaskAwaiter<Quiz[]> <>u__1;

			[Token(Token = "0x6001321")]
			[Address(RVA = "0x15D80B4", Offset = "0x15D80B4", VA = "0x15D80B4", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001322")]
			[Address(RVA = "0x15D8418", Offset = "0x15D8418", VA = "0x15D8418", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4001276")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private NetworkModuleProviderFactory _moduleProviderFactory;

		[Token(Token = "0x4001277")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private ExampleQuiz _exampleQuiz;

		[Token(Token = "0x4001278")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ExampleAnswer _exampleAnswer;

		[Token(Token = "0x4001279")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly CancellationTokenSource _disposeCancellationTokenSource;

		[Token(Token = "0x400127A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly CompositeDisposable _disposable;

		[Token(Token = "0x400127B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private CloudServiceProviderBehaviour _cloudServiceProviderBehaviour;

		[Token(Token = "0x6001303")]
		[Address(RVA = "0x15D58D8", Offset = "0x15D58D8", VA = "0x15D58D8")]
		[AsyncStateMachine(typeof(<Start>d__7))]
		private void Start()
		{
		}

		[Token(Token = "0x6001304")]
		[Address(RVA = "0x15D598C", Offset = "0x15D598C", VA = "0x15D598C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001305")]
		[Address(RVA = "0x15D59BC", Offset = "0x15D59BC", VA = "0x15D59BC")]
		private void OnActiveQuizChanged(Quiz value)
		{
		}

		[Token(Token = "0x6001306")]
		[Address(RVA = "0x15D5A4C", Offset = "0x15D5A4C", VA = "0x15D5A4C")]
		private void DisplayRemainingTime(double value)
		{
		}

		[Token(Token = "0x6001307")]
		[Address(RVA = "0x15D5B24", Offset = "0x15D5B24", VA = "0x15D5B24")]
		[ContextMenu("SetActiveQuiz")]
		[AsyncStateMachine(typeof(<SetActiveQuiz>d__11))]
		private void SetActiveQuiz()
		{
		}

		[Token(Token = "0x6001308")]
		[Address(RVA = "0x15D5BDC", Offset = "0x15D5BDC", VA = "0x15D5BDC")]
		[AsyncStateMachine(typeof(<CancelActiveQuiz>d__12))]
		[ContextMenu("CancelActiveQuiz")]
		private void CancelActiveQuiz()
		{
		}

		[Token(Token = "0x6001309")]
		[Address(RVA = "0x15D5C94", Offset = "0x15D5C94", VA = "0x15D5C94")]
		[AsyncStateMachine(typeof(<SetAnswer>d__13))]
		[ContextMenu("SetAnswer")]
		private void SetAnswer()
		{
		}

		[Token(Token = "0x600130A")]
		[Address(RVA = "0x15D5D4C", Offset = "0x15D5D4C", VA = "0x15D5D4C")]
		[AsyncStateMachine(typeof(<GetAnswers>d__14))]
		[ContextMenu("GetAnswers")]
		private void GetAnswers()
		{
		}

		[Token(Token = "0x600130B")]
		[Address(RVA = "0x15D5E04", Offset = "0x15D5E04", VA = "0x15D5E04")]
		[ContextMenu("GetTests")]
		[AsyncStateMachine(typeof(<GetTests>d__16))]
		private void GetTests()
		{
		}

		[Token(Token = "0x600130C")]
		[Address(RVA = "0x15D5EBC", Offset = "0x15D5EBC", VA = "0x15D5EBC")]
		public NetworkQuizExample()
		{
		}
	}
}
namespace VR.Drawing
{
	[Token(Token = "0x20003AF")]
	public class DrawingPanel : MonoBehaviour
	{
		[Token(Token = "0x400129F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Toggle _brushMin;

		[Token(Token = "0x40012A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Toggle _brushMid;

		[Token(Token = "0x40012A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Toggle _brushMax;

		[Token(Token = "0x40012A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Toggle _whiteColor;

		[Token(Token = "0x40012A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Toggle _redColor;

		[Token(Token = "0x40012A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Toggle _blueColor;

		[Token(Token = "0x40012A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Button _eraseAllButton;

		[Token(Token = "0x40012A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private DrawingSettings _drawingSettings;

		[Token(Token = "0x40012A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private float _defaultLineWidth;

		[Token(Token = "0x40012A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject _drawingNote;

		[Token(Token = "0x40012A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private GameObject _eraseParent;

		[Token(Token = "0x40012AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private readonly CompositeDisposable _disposable;

		[Token(Token = "0x170002E9")]
		public Button EraseAllButton
		{
			[Token(Token = "0x6001323")]
			[Address(RVA = "0x15D8424", Offset = "0x15D8424", VA = "0x15D8424")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002EA")]
		public GameObject EraseParent
		{
			[Token(Token = "0x6001324")]
			[Address(RVA = "0x15D842C", Offset = "0x15D842C", VA = "0x15D842C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002EB")]
		public DrawingSettings DrawingSettings
		{
			[Token(Token = "0x6001325")]
			[Address(RVA = "0x15D8434", Offset = "0x15D8434", VA = "0x15D8434")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002EC")]
		public GameObject DrawingNote
		{
			[Token(Token = "0x6001326")]
			[Address(RVA = "0x15D843C", Offset = "0x15D843C", VA = "0x15D843C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001327")]
		[Address(RVA = "0x15D8444", Offset = "0x15D8444", VA = "0x15D8444")]
		private void Start()
		{
		}

		[Token(Token = "0x6001328")]
		[Address(RVA = "0x15D8B7C", Offset = "0x15D8B7C", VA = "0x15D8B7C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001329")]
		[Address(RVA = "0x15D8B98", Offset = "0x15D8B98", VA = "0x15D8B98")]
		public DrawingPanel()
		{
		}
	}
	[Token(Token = "0x20003B1")]
	public static class DrawingPanelHelpers
	{
		[Token(Token = "0x6001338")]
		[Address(RVA = "0x15D8E68", Offset = "0x15D8E68", VA = "0x15D8E68")]
		public static void SetDrawingEnabled(this DrawingPanel drawingPanel, bool value)
		{
		}

		[Token(Token = "0x6001339")]
		[Address(RVA = "0x15D8F04", Offset = "0x15D8F04", VA = "0x15D8F04")]
		public static bool IsDrawingEnabled(this DrawingPanel drawingPanel)
		{
			return default(bool);
		}

		[Token(Token = "0x600133A")]
		[Address(RVA = "0x15D8F90", Offset = "0x15D8F90", VA = "0x15D8F90")]
		public static CompositeDisposable Initialize(this DrawingPanel drawingUiHandler, INetworkModuleProviderFactory networkModuleProviderFactory, InteractionModel interactionModel, bool hasEraseAllAuthority)
		{
			return null;
		}
	}
}
namespace VR.DICOM
{
	[Token(Token = "0x20003B5")]
	public class AppendTextAnimation : MonoBehaviour
	{
		[Token(Token = "0x40012BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Text _text;

		[Token(Token = "0x40012BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private string _appendText;

		[Token(Token = "0x40012BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float _interval;

		[Token(Token = "0x40012BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private byte _min;

		[Token(Token = "0x40012BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
		[SerializeField]
		private byte _max;

		[Token(Token = "0x40012BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int _count;

		[Token(Token = "0x6001343")]
		[Address(RVA = "0x15D9808", Offset = "0x15D9808", VA = "0x15D9808")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001344")]
		[Address(RVA = "0x15D9864", Offset = "0x15D9864", VA = "0x15D9864")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001345")]
		[Address(RVA = "0x15D980C", Offset = "0x15D980C", VA = "0x15D980C")]
		private void StartLoading()
		{
		}

		[Token(Token = "0x6001346")]
		[Address(RVA = "0x15D9868", Offset = "0x15D9868", VA = "0x15D9868")]
		private void StopLoading()
		{
		}

		[Token(Token = "0x6001347")]
		[Address(RVA = "0x15D98B4", Offset = "0x15D98B4", VA = "0x15D98B4")]
		private void UpdateText()
		{
		}

		[Token(Token = "0x6001348")]
		[Address(RVA = "0x15D9964", Offset = "0x15D9964", VA = "0x15D9964")]
		public AppendTextAnimation()
		{
		}
	}
	[Token(Token = "0x20003B6")]
	public static class DicomPanelHelpers
	{
		[Token(Token = "0x20003B7")]
		public class ColoringUiData
		{
			[Token(Token = "0x40012C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public NativeArray<GradientKey<float>> NativeKeys;

			[Token(Token = "0x40012C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public NativeArray<GradientKey<float>> NativeKeysWindowing;

			[Token(Token = "0x40012C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public NativeArray<UnityEngine.Color32> NativeColors;

			[Token(Token = "0x40012C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public UnityEngine.Color32[] Colors;

			[Token(Token = "0x40012C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public Dictionary<int, Point> Points;

			[Token(Token = "0x40012C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public Texture2D TransferFunctionTexture;

			[Token(Token = "0x40012C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public Texture2D WindowingTexture;

			[Token(Token = "0x40012CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public byte? ActiveKey;

			[Token(Token = "0x40012CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
			public byte? SelectedKey;

			[Token(Token = "0x40012CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			public bool LastPinPanelActive;

			[Token(Token = "0x40012CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public TweenerCore<float, float, FloatOptions> PinPanelTweener;

			[Token(Token = "0x6001354")]
			[Address(RVA = "0x15DF454", Offset = "0x15DF454", VA = "0x15DF454")]
			public ColoringUiData()
			{
			}
		}

		[Token(Token = "0x20003B8")]
		public class Point
		{
			[Token(Token = "0x40012CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ColorPointInstance ColorPointInstance;

			[Token(Token = "0x40012CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public byte KeyId;

			[Token(Token = "0x6001355")]
			[Address(RVA = "0x15DF45C", Offset = "0x15DF45C", VA = "0x15DF45C")]
			public Point()
			{
			}
		}

		[Token(Token = "0x20003B9")]
		public sealed class KeyComparer<T> : IEqualityComparer<KeyValuePair<byte, GradientKey<T>>>
		{
			[Token(Token = "0x6001356")]
			public bool Equals(KeyValuePair<byte, GradientKey<T>> x, KeyValuePair<byte, GradientKey<T>> y)
			{
				return default(bool);
			}

			[Token(Token = "0x6001357")]
			public int GetHashCode(KeyValuePair<byte, GradientKey<T>> obj)
			{
				return default(int);
			}

			[Token(Token = "0x6001358")]
			public KeyComparer()
			{
			}
		}

		[Token(Token = "0x20003BA")]
		public sealed class TransferFunctionEqualityComparer<T> : IEqualityComparer<(IReadOnlyCollection<KeyValuePair<byte, GradientKey<T>>>, Vector2, bool)>
		{
			[Token(Token = "0x40012D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly IEqualityComparer<KeyValuePair<byte, GradientKey<T>>> _keyComparer;

			[Token(Token = "0x6001359")]
			public TransferFunctionEqualityComparer(IEqualityComparer<KeyValuePair<byte, GradientKey<T>>> keyComparer)
			{
			}

			[Token(Token = "0x600135A")]
			public bool Equals((IReadOnlyCollection<KeyValuePair<byte, GradientKey<T>>> Keys, Vector2 Window, bool RelativeEnabled) x, (IReadOnlyCollection<KeyValuePair<byte, GradientKey<T>>> Keys, Vector2 Window, bool RelativeEnabled) y)
			{
				return default(bool);
			}

			[Token(Token = "0x600135B")]
			public int GetHashCode((IReadOnlyCollection<KeyValuePair<byte, GradientKey<T>>> Keys, Vector2 Window, bool RelativeEnabled) obj)
			{
				return default(int);
			}
		}

		[Token(Token = "0x40012C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly (Vector2 Window, int MinValue, int MaxValue) DefaultWindowingData;

		[Token(Token = "0x40012C1")]
		public const int PRESET_TEXTURE_WIDTH = 64;

		[Token(Token = "0x40012C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly TransferFunctionEqualityComparer<float> TransferFunctionComparer;

		[Token(Token = "0x6001349")]
		[Address(RVA = "0x15D996C", Offset = "0x15D996C", VA = "0x15D996C")]
		public static CompositeDisposable Initialize(this DicomPanelReferences references, INetworkModuleProviderFactory networkModuleProviderFactory, CancellationToken disposeCancellationToken)
		{
			return null;
		}

		[Token(Token = "0x600134A")]
		[Address(RVA = "0x15DCC00", Offset = "0x15DCC00", VA = "0x15DCC00")]
		public static void IncrementMin(this ref Vector2 window, int minValue, int maxValue, double value)
		{
		}

		[Token(Token = "0x600134B")]
		[Address(RVA = "0x15DCD24", Offset = "0x15DCD24", VA = "0x15DCD24")]
		public static void IncrementMax(this ref Vector2 window, int minValue, int maxValue, double value)
		{
		}

		[Token(Token = "0x600134C")]
		[Address(RVA = "0x15DB87C", Offset = "0x15DB87C", VA = "0x15DB87C")]
		public static IObservable<bool> PointerPressedAsObservable(this UIBehaviour component)
		{
			return null;
		}

		[Token(Token = "0x600134D")]
		[Address(RVA = "0x15DBB18", Offset = "0x15DBB18", VA = "0x15DBB18")]
		public static IObservable<double> SelectWithAcceleration(this IObservable<bool> isPressed, double startVelocity, float velocityMultiplier, float velocityUpdateInterval, float holdDelay, IObservable<Unit> cancelObservable)
		{
			return null;
		}

		[Token(Token = "0x600134E")]
		[Address(RVA = "0x15DBD48", Offset = "0x15DBD48", VA = "0x15DBD48")]
		public static CompositeDisposable InitializeTransferFunctionHandler(this DicomPanelReferences references, INetworkModuleProviderFactory moduleProviderFactory)
		{
			return null;
		}

		[Token(Token = "0x600134F")]
		[Address(RVA = "0x15DCE48", Offset = "0x15DCE48", VA = "0x15DCE48")]
		public static CompositeDisposable InitTransferFunctionPresetsUi(this DicomPanelReferences references, INetworkModuleProviderFactory moduleProviderFactory, ColoringUiData coloringUiData)
		{
			return null;
		}

		[Token(Token = "0x6001350")]
		[Address(RVA = "0x15DD630", Offset = "0x15DD630", VA = "0x15DD630")]
		private static void SetColoringUiWithoutNotify(this DicomPanelReferences references, (IReadOnlyCollection<KeyValuePair<byte, GradientKey<float>>> Keys, Vector2 Window, bool RelativeEnabled) tuple, ColoringUiData coloringUiData, int minValue, int maxValue)
		{
		}

		[Token(Token = "0x6001351")]
		[Address(RVA = "0x15DEEC0", Offset = "0x15DEEC0", VA = "0x15DEEC0")]
		public static void SetFocusedDicomVrInstance(this DicomPanelReferences references, IDicomVrInstance value)
		{
		}

		[Token(Token = "0x6001352")]
		[Address(RVA = "0x15DF158", Offset = "0x15DF158", VA = "0x15DF158")]
		private static void SetDisplayValueRange(this DicomPanelReferences references, IDicomVrInstance dicomVrInstance)
		{
		}
	}
	[Token(Token = "0x20003D1")]
	public class DicomPanelReferences : MonoBehaviour
	{
		[Token(Token = "0x4001351")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TextMeshProUGUI _labelName;

		[Token(Token = "0x4001352")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private TextMeshProUGUI _labelType;

		[Token(Token = "0x4001353")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Button _removeObjectButton;

		[Token(Token = "0x4001354")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Toggle _sliceAxial;

		[Token(Token = "0x4001355")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private ContextPanelHandler _dicomSettingsPanel;

		[Token(Token = "0x4001356")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Image _contentBlockImage;

		[Token(Token = "0x4001357")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private MinMaxSlider _windowingSlider;

		[Token(Token = "0x4001358")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private MinMaxSliderValueDisplay _minMaxSliderValueDisplay;

		[Token(Token = "0x4001359")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Button _windowingReset;

		[Token(Token = "0x400135A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Button _windowingMinMinus;

		[Token(Token = "0x400135B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Button _windowingMinPlus;

		[Token(Token = "0x400135C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Button _windowingMaxMinus;

		[Token(Token = "0x400135D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private Button _windowingMaxPlus;

		[Token(Token = "0x400135E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private TMP_InputField _windowingMinInputField;

		[Token(Token = "0x400135F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private TMP_InputField _windowingMaxInputField;

		[Token(Token = "0x4001360")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private Toggle _lowQualityToggle;

		[Token(Token = "0x4001361")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private Toggle _mediumQualityToggle;

		[Token(Token = "0x4001362")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private Toggle _highQualityToggle;

		[Token(Token = "0x4001363")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private Button _addPresetButton;

		[Token(Token = "0x4001364")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private Toggle _editPresetsToggle;

		[Token(Token = "0x4001365")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private Transform _presetsParent;

		[Token(Token = "0x4001366")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private TransferFunctionPresetElement _coloringPresetPrefab;

		[Token(Token = "0x4001367")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private MultiHandleRect _multiHandleRect;

		[Token(Token = "0x4001368")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private ColorPickerControl _colorPickerControl;

		[Token(Token = "0x4001369")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private UnityEngine.UI.RawImage _gradientImage;

		[Token(Token = "0x400136A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private UILineRenderer _uiLineRenderer;

		[Token(Token = "0x400136B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		private Button _deletePointButton;

		[Token(Token = "0x400136C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		private Toggle _relativeButton;

		[Token(Token = "0x400136D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		private global::Utilities.Follow _gradientMenu;

		[Token(Token = "0x400136E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		private Ruler _ruler;

		[Token(Token = "0x400136F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[SerializeField]
		private TextMeshProUGUI _pinPanelText;

		[Token(Token = "0x4001370")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[SerializeField]
		private UnityEngine.UI.RawImage _sliderBackgroundImage;

		[Token(Token = "0x4001371")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[SerializeField]
		private UnityEngine.UI.RawImage _sliderFillImage;

		[Token(Token = "0x4001372")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[SerializeField]
		private Button _colorPickerCloseButton;

		[Token(Token = "0x4001373")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[SerializeField]
		private CanvasGroup _pinPanelCanvasGroup;

		[Token(Token = "0x170002ED")]
		public Toggle SliceToggle
		{
			[Token(Token = "0x60013CE")]
			[Address(RVA = "0x15EB084", Offset = "0x15EB084", VA = "0x15EB084")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002EE")]
		public TextMeshProUGUI LabelName
		{
			[Token(Token = "0x60013CF")]
			[Address(RVA = "0x15EB08C", Offset = "0x15EB08C", VA = "0x15EB08C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002EF")]
		public TextMeshProUGUI LabelType
		{
			[Token(Token = "0x60013D0")]
			[Address(RVA = "0x15EB094", Offset = "0x15EB094", VA = "0x15EB094")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002F0")]
		public TextMeshProUGUI PinPanelText
		{
			[Token(Token = "0x60013D1")]
			[Address(RVA = "0x15EB09C", Offset = "0x15EB09C", VA = "0x15EB09C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002F1")]
		public MinMaxSlider WindowingSlider
		{
			[Token(Token = "0x60013D2")]
			[Address(RVA = "0x15EB0A4", Offset = "0x15EB0A4", VA = "0x15EB0A4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002F2")]
		public MinMaxSliderValueDisplay MinMaxSliderValueDisplay
		{
			[Token(Token = "0x60013D3")]
			[Address(RVA = "0x15EB0AC", Offset = "0x15EB0AC", VA = "0x15EB0AC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002F3")]
		public Button RemoveObjectButton
		{
			[Token(Token = "0x60013D4")]
			[Address(RVA = "0x15EB0B4", Offset = "0x15EB0B4", VA = "0x15EB0B4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002F4")]
		public ContextPanelHandler DicomSettingsPanel
		{
			[Token(Token = "0x60013D5")]
			[Address(RVA = "0x15EB0BC", Offset = "0x15EB0BC", VA = "0x15EB0BC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002F5")]
		public Toggle LowQualityToggle
		{
			[Token(Token = "0x60013D6")]
			[Address(RVA = "0x15EB0C4", Offset = "0x15EB0C4", VA = "0x15EB0C4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002F6")]
		public Toggle MediumQualityToggle
		{
			[Token(Token = "0x60013D7")]
			[Address(RVA = "0x15EB0CC", Offset = "0x15EB0CC", VA = "0x15EB0CC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002F7")]
		public Toggle HighQualityToggle
		{
			[Token(Token = "0x60013D8")]
			[Address(RVA = "0x15EB0D4", Offset = "0x15EB0D4", VA = "0x15EB0D4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002F8")]
		public TMP_InputField WindowingMinInputField
		{
			[Token(Token = "0x60013D9")]
			[Address(RVA = "0x15EB0DC", Offset = "0x15EB0DC", VA = "0x15EB0DC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002F9")]
		public TMP_InputField WindowingMaxInputField
		{
			[Token(Token = "0x60013DA")]
			[Address(RVA = "0x15EB0E4", Offset = "0x15EB0E4", VA = "0x15EB0E4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002FA")]
		public Button WindowingReset
		{
			[Token(Token = "0x60013DB")]
			[Address(RVA = "0x15EB0EC", Offset = "0x15EB0EC", VA = "0x15EB0EC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002FB")]
		public Button WindowingMinMinus
		{
			[Token(Token = "0x60013DC")]
			[Address(RVA = "0x15EB0F4", Offset = "0x15EB0F4", VA = "0x15EB0F4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002FC")]
		public Button WindowingMinPlus
		{
			[Token(Token = "0x60013DD")]
			[Address(RVA = "0x15EB0FC", Offset = "0x15EB0FC", VA = "0x15EB0FC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002FD")]
		public Button WindowingMaxMinus
		{
			[Token(Token = "0x60013DE")]
			[Address(RVA = "0x15EB104", Offset = "0x15EB104", VA = "0x15EB104")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002FE")]
		public Button WindowingMaxPlus
		{
			[Token(Token = "0x60013DF")]
			[Address(RVA = "0x15EB10C", Offset = "0x15EB10C", VA = "0x15EB10C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002FF")]
		public MultiHandleRect MultiHandleRect
		{
			[Token(Token = "0x60013E0")]
			[Address(RVA = "0x15EB114", Offset = "0x15EB114", VA = "0x15EB114")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000300")]
		public ColorPickerControl ColorPickerControl
		{
			[Token(Token = "0x60013E1")]
			[Address(RVA = "0x15EB11C", Offset = "0x15EB11C", VA = "0x15EB11C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000301")]
		public UnityEngine.UI.RawImage GradientImage
		{
			[Token(Token = "0x60013E2")]
			[Address(RVA = "0x15EB124", Offset = "0x15EB124", VA = "0x15EB124")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000302")]
		public UILineRenderer UILineRenderer
		{
			[Token(Token = "0x60013E3")]
			[Address(RVA = "0x15EB12C", Offset = "0x15EB12C", VA = "0x15EB12C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000303")]
		public Button DeletePointButton
		{
			[Token(Token = "0x60013E4")]
			[Address(RVA = "0x15EB134", Offset = "0x15EB134", VA = "0x15EB134")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000304")]
		public Toggle RelativeToggle
		{
			[Token(Token = "0x60013E5")]
			[Address(RVA = "0x15EB13C", Offset = "0x15EB13C", VA = "0x15EB13C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000305")]
		public global::Utilities.Follow GradientMenu
		{
			[Token(Token = "0x60013E6")]
			[Address(RVA = "0x15EB144", Offset = "0x15EB144", VA = "0x15EB144")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000306")]
		public Ruler Ruler
		{
			[Token(Token = "0x60013E7")]
			[Address(RVA = "0x15EB14C", Offset = "0x15EB14C", VA = "0x15EB14C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000307")]
		public UnityEngine.UI.RawImage SliderBackgroundImage
		{
			[Token(Token = "0x60013E8")]
			[Address(RVA = "0x15EB154", Offset = "0x15EB154", VA = "0x15EB154")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000308")]
		public UnityEngine.UI.RawImage SliderFillImage
		{
			[Token(Token = "0x60013E9")]
			[Address(RVA = "0x15EB15C", Offset = "0x15EB15C", VA = "0x15EB15C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000309")]
		public Button AddPresetButton
		{
			[Token(Token = "0x60013EA")]
			[Address(RVA = "0x15EB164", Offset = "0x15EB164", VA = "0x15EB164")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700030A")]
		public Toggle EditPresetsToggle
		{
			[Token(Token = "0x60013EB")]
			[Address(RVA = "0x15EB16C", Offset = "0x15EB16C", VA = "0x15EB16C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700030B")]
		public Transform PresetsParent
		{
			[Token(Token = "0x60013EC")]
			[Address(RVA = "0x15EB174", Offset = "0x15EB174", VA = "0x15EB174")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700030C")]
		public TransferFunctionPresetElement TransferFunctionPresetPrefab
		{
			[Token(Token = "0x60013ED")]
			[Address(RVA = "0x15EB17C", Offset = "0x15EB17C", VA = "0x15EB17C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700030D")]
		public Button ColorPickerCloseButton
		{
			[Token(Token = "0x60013EE")]
			[Address(RVA = "0x15EB184", Offset = "0x15EB184", VA = "0x15EB184")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700030E")]
		public Image ContentBlockImage
		{
			[Token(Token = "0x60013EF")]
			[Address(RVA = "0x15EB18C", Offset = "0x15EB18C", VA = "0x15EB18C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700030F")]
		public CanvasGroup PinPanelCanvasGroup
		{
			[Token(Token = "0x60013F0")]
			[Address(RVA = "0x15EB194", Offset = "0x15EB194", VA = "0x15EB194")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60013F1")]
		[Address(RVA = "0x15EB19C", Offset = "0x15EB19C", VA = "0x15EB19C")]
		public DicomPanelReferences()
		{
		}
	}
	[Token(Token = "0x20003D2")]
	public class LoadingProgressBar : MonoBehaviour
	{
		[Token(Token = "0x4001374")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TextMeshProUGUI _loadingText;

		[Token(Token = "0x4001375")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Image _loadingProgressBarImage;

		[Token(Token = "0x4001376")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Button _cancelButton;

		[Token(Token = "0x17000310")]
		public TextMeshProUGUI LoadingText
		{
			[Token(Token = "0x60013F2")]
			[Address(RVA = "0x15EB1A4", Offset = "0x15EB1A4", VA = "0x15EB1A4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000311")]
		public Image LoadingProgressBarImage
		{
			[Token(Token = "0x60013F3")]
			[Address(RVA = "0x15EB1AC", Offset = "0x15EB1AC", VA = "0x15EB1AC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000312")]
		public Button CancelButton
		{
			[Token(Token = "0x60013F4")]
			[Address(RVA = "0x15EB1B4", Offset = "0x15EB1B4", VA = "0x15EB1B4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60013F5")]
		[Address(RVA = "0x15EB1BC", Offset = "0x15EB1BC", VA = "0x15EB1BC")]
		public LoadingProgressBar()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003D3")]
	public class TransferFunctionPreset
	{
		[Token(Token = "0x4001377")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GradientKey<float>[] Keys;

		[Token(Token = "0x4001378")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector2 Range;

		[Token(Token = "0x4001379")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string RescaleType;

		[Token(Token = "0x60013F6")]
		[Address(RVA = "0x15EA3FC", Offset = "0x15EA3FC", VA = "0x15EA3FC")]
		public TransferFunctionPreset()
		{
		}
	}
	[Token(Token = "0x20003D4")]
	public class TransferFunctionPresetElement : MonoBehaviour
	{
		[Token(Token = "0x400137A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UiElementReferences Button;

		[Token(Token = "0x400137B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnityEngine.UI.RawImage RawImage;

		[Token(Token = "0x60013F7")]
		[Address(RVA = "0x15EB1C4", Offset = "0x15EB1C4", VA = "0x15EB1C4")]
		public TransferFunctionPresetElement()
		{
		}
	}
	[Token(Token = "0x20003D5")]
	public static class TransferFunctionPresetsExtensions
	{
		[Serializable]
		[Token(Token = "0x20003D6")]
		public class TransferFunctionPresets
		{
			[Token(Token = "0x4001383")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public TransferFunctionPreset[] Values;

			[Token(Token = "0x60013FD")]
			[Address(RVA = "0x15EB410", Offset = "0x15EB410", VA = "0x15EB410")]
			public TransferFunctionPresets()
			{
			}
		}

		[Token(Token = "0x20003D7")]
		[CompilerGenerated]
		private sealed class <NormalizeKeys>d__8 : IEnumerable<GradientKey<float>>, IEnumerable, IEnumerator<GradientKey<float>>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001384")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001385")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private GradientKey<float> <>2__current;

			[Token(Token = "0x4001386")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4001387")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TransferFunctionPreset transferFunctionPreset;

			[Token(Token = "0x4001388")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public TransferFunctionPreset <>3__transferFunctionPreset;

			[Token(Token = "0x4001389")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private int minValue;

			[Token(Token = "0x400138A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public int <>3__minValue;

			[Token(Token = "0x400138B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private int maxValue;

			[Token(Token = "0x400138C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			public int <>3__maxValue;

			[Token(Token = "0x400138D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private double2 <relativeRange>5__2;

			[Token(Token = "0x400138E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private GradientKey<float>[] <>7__wrap2;

			[Token(Token = "0x400138F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			private int <>7__wrap3;

			[Token(Token = "0x4001390")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
			private GradientKey<float> <coloringPresetKey>5__5;

			[Token(Token = "0x17000313")]
			private GradientKey<float> System.Collections.Generic.IEnumerator<Dicom.Modules.GradientKey<System.Single>>.Current
			{
				[Token(Token = "0x6001401")]
				[Address(RVA = "0x15EBED4", Offset = "0x15EBED4", VA = "0x15EBED4", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return default(GradientKey<float>);
				}
			}

			[Token(Token = "0x17000314")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001403")]
				[Address(RVA = "0x15EBF28", Offset = "0x15EBF28", VA = "0x15EBF28", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60013FE")]
			[Address(RVA = "0x15EB268", Offset = "0x15EB268", VA = "0x15EB268")]
			[DebuggerHidden]
			public <NormalizeKeys>d__8(int <>1__state)
			{
			}

			[Token(Token = "0x60013FF")]
			[Address(RVA = "0x15EBB48", Offset = "0x15EBB48", VA = "0x15EBB48", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001400")]
			[Address(RVA = "0x15EBB4C", Offset = "0x15EBB4C", VA = "0x15EBB4C", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001402")]
			[Address(RVA = "0x15EBEE8", Offset = "0x15EBEE8", VA = "0x15EBEE8", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6001404")]
			[Address(RVA = "0x15EBF8C", Offset = "0x15EBF8C", VA = "0x15EBF8C", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<GradientKey<float>> System.Collections.Generic.IEnumerable<Dicom.Modules.GradientKey<System.Single>>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6001405")]
			[Address(RVA = "0x15EC048", Offset = "0x15EC048", VA = "0x15EC048", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x400137C")]
		public const string PLAYER_PREFS_KEY = "TFPresets";

		[Token(Token = "0x400137D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Vector2 DefaultRangeHU;

		[Token(Token = "0x400137E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly TransferFunctionPreset Color1;

		[Token(Token = "0x400137F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly TransferFunctionPreset Color2;

		[Token(Token = "0x4001380")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static readonly TransferFunctionPreset BWOpaque;

		[Token(Token = "0x4001381")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static readonly TransferFunctionPreset BWTransparent;

		[Token(Token = "0x4001382")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static readonly TransferFunctionPreset[] DefaultPresets;

		[Token(Token = "0x60013F8")]
		[Address(RVA = "0x15EAD40", Offset = "0x15EAD40", VA = "0x15EAD40")]
		public static IEnumerable<GradientKey<float>> GetNormalizedKeys(this TransferFunctionPreset transferFunctionPreset, string rescaleType, int minValue, int maxValue)
		{
			return null;
		}

		[Token(Token = "0x60013F9")]
		[Address(RVA = "0x15EB1CC", Offset = "0x15EB1CC", VA = "0x15EB1CC")]
		[IteratorStateMachine(typeof(<NormalizeKeys>d__8))]
		public static IEnumerable<GradientKey<float>> NormalizeKeys(TransferFunctionPreset transferFunctionPreset, int minValue, int maxValue)
		{
			return null;
		}

		[Token(Token = "0x60013FA")]
		[Address(RVA = "0x15EB29C", Offset = "0x15EB29C", VA = "0x15EB29C")]
		public static TransferFunctionPreset[] LoadTransferFunctionPresets()
		{
			return null;
		}

		[Token(Token = "0x60013FB")]
		[Address(RVA = "0x15EA404", Offset = "0x15EA404", VA = "0x15EA404")]
		public static void SaveTransferFunctionsPresets(TransferFunctionPreset[] presets)
		{
		}
	}
}
namespace VR.Views
{
	[Token(Token = "0x20003D8")]
	public interface IInteractiveAnatomyItemInstance : IAnatomyItemInstance, ISliceable, ILevelable, IHighlightable, IHideable, ISubpartHost, IGazeable, IDisassemblable, IGrabable, IPickable
	{
		[Token(Token = "0x17000315")]
		MeshFilter MeshFilter
		{
			[Token(Token = "0x6001406")]
			get;
		}

		[Token(Token = "0x17000316")]
		MeshRenderer MeshRenderer
		{
			[Token(Token = "0x6001407")]
			get;
		}

		[Token(Token = "0x17000317")]
		Collider Collider
		{
			[Token(Token = "0x6001408")]
			get;
		}

		[Token(Token = "0x17000318")]
		Material OriginalMaterial
		{
			[Token(Token = "0x6001409")]
			get;
		}

		[Token(Token = "0x17000319")]
		Mesh OriginalMesh
		{
			[Token(Token = "0x600140A")]
			get;
		}

		[Token(Token = "0x1700031A")]
		new Transform Transform
		{
			[Token(Token = "0x600140B")]
			get;
		}

		[Token(Token = "0x600140C")]
		void SetMeshOverride(bool antModeEnabled);
	}
	[Token(Token = "0x20003D9")]
	public interface IHighlightable
	{
		[Token(Token = "0x1700031B")]
		bool IsHighlighted
		{
			[Token(Token = "0x600140D")]
			get;
		}

		[Token(Token = "0x600140E")]
		void SetHighlighted(bool value);
	}
	[Token(Token = "0x20003DA")]
	public interface IDisassemblable
	{
		[Token(Token = "0x1700031C")]
		AnatomySphereItem AnatomySphereItem
		{
			[Token(Token = "0x600140F")]
			get;
		}

		[Token(Token = "0x1700031D")]
		LocalTransformContainer OriginalLocalTransform
		{
			[Token(Token = "0x6001410")]
			get;
		}

		[Token(Token = "0x1700031E")]
		bool IsPicked
		{
			[Token(Token = "0x6001411")]
			get;
		}
	}
	[Token(Token = "0x20003DB")]
	public interface ISliceable
	{
		[Token(Token = "0x1700031F")]
		Transform Transform
		{
			[Token(Token = "0x6001412")]
			get;
		}

		[Token(Token = "0x17000320")]
		Bounds Bounds
		{
			[Token(Token = "0x6001413")]
			get;
		}

		[Token(Token = "0x6001414")]
		void SetCompletelySliced(bool value);
	}
	[Token(Token = "0x20003DC")]
	public interface ISubpartHost : IGazeable
	{
		[Token(Token = "0x17000321")]
		Texture2D SubpartTexture
		{
			[Token(Token = "0x6001415")]
			get;
		}

		[Token(Token = "0x17000322")]
		bool HasSubparts
		{
			[Token(Token = "0x6001416")]
			get;
		}

		[Token(Token = "0x17000323")]
		Transform Transform
		{
			[Token(Token = "0x6001419")]
			get;
		}

		[Token(Token = "0x6001417")]
		SubpartInstance GetSubpartInstance(SubpartType subpartType, byte colorId);

		[Token(Token = "0x6001418")]
		void SetHighlightedSubpart(Subpart subpart);
	}
	[Token(Token = "0x20003DD")]
	public interface IInteractiveAnatomyItemInstanceCollection : ISystemPart, ILevelableCollection<IInteractiveAnatomyItemInstance>, IInstanceCollection<IInteractiveAnatomyItemInstance>, IHighlightable, IFadeable
	{
		[Token(Token = "0x600141A")]
		void SetSliced(bool value);
	}
	[Serializable]
	[Token(Token = "0x20003DE")]
	public class InteractiveAnatomyItemInstanceSettings
	{
		[Token(Token = "0x4001391")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public InteractiveAnatomyItemInstanceCopy AnatomyInstanceCopyPrefab;

		[Token(Token = "0x600141B")]
		[Address(RVA = "0x15EC04C", Offset = "0x15EC04C", VA = "0x15EC04C")]
		public InteractiveAnatomyItemInstanceSettings()
		{
		}
	}
	[Token(Token = "0x20003DF")]
	public class InteractiveAnatomyItemInstance : IInteractiveAnatomyItemInstance, IAnatomyItemInstance, ISliceable, ILevelable, IHighlightable, IHideable, ISubpartHost, IGazeable, IDisassemblable, IGrabable, IPickable
	{
		[Token(Token = "0x4001392")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly InteractiveAnatomyItemInstanceSettings _settings;

		[Token(Token = "0x4001393")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly InteractiveAnatomyItemInstanceCollection _anatomyItemInstanceCollection;

		[Token(Token = "0x4001394")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly ObjectThrowHelper _objectThrowHelper;

		[Token(Token = "0x4001395")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly StandardShaderUtils.BlendMode _defaultBlendMode;

		[Token(Token = "0x4001396")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly AnatomyItemInstanceCopySettings CopySettings;

		[Token(Token = "0x4001397")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public readonly global::Views.AnatomyItemInstance AnatomyItemInstance;

		[Token(Token = "0x4001398")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public readonly AnatomyUberShaderAnimationHandler ShaderHandler;

		[Token(Token = "0x4001399")]
		public const float ANIMATION_TIME = 0.3f;

		[Token(Token = "0x400139A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Sequence _itemReturnSequence;

		[Token(Token = "0x40013AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private Texture2D _subpartTexture;

		[Token(Token = "0x40013AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private readonly IDictionary<int, SubpartInstance> _subpartInstances;

		[Token(Token = "0x40013B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private Coroutine _throwCoroutine;

		[Token(Token = "0x17000324")]
		public InteractiveAnatomyItemInstanceCopy Copy
		{
			[Token(Token = "0x600141C")]
			[Address(RVA = "0x15EC054", Offset = "0x15EC054", VA = "0x15EC054")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600141D")]
			[Address(RVA = "0x15EC05C", Offset = "0x15EC05C", VA = "0x15EC05C")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000325")]
		public InteractiveAnatomyItemInstanceCopy HighlightedCopy
		{
			[Token(Token = "0x600141E")]
			[Address(RVA = "0x15EC064", Offset = "0x15EC064", VA = "0x15EC064")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600141F")]
			[Address(RVA = "0x15EC06C", Offset = "0x15EC06C", VA = "0x15EC06C")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000326")]
		public MeshFilter MeshFilter
		{
			[Token(Token = "0x6001420")]
			[Address(RVA = "0x15EC074", Offset = "0x15EC074", VA = "0x15EC074", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000327")]
		public MeshCollider MeshCollider
		{
			[Token(Token = "0x6001421")]
			[Address(RVA = "0x15EC090", Offset = "0x15EC090", VA = "0x15EC090")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000328")]
		public MeshRenderer MeshRenderer
		{
			[Token(Token = "0x6001422")]
			[Address(RVA = "0x15EC0AC", Offset = "0x15EC0AC", VA = "0x15EC0AC", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000329")]
		public Action OnItemReturnedCallback
		{
			[Token(Token = "0x6001423")]
			[Address(RVA = "0x15EC0C8", Offset = "0x15EC0C8", VA = "0x15EC0C8")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001424")]
			[Address(RVA = "0x15EC0D0", Offset = "0x15EC0D0", VA = "0x15EC0D0")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700032A")]
		public Action OnItemPickedCallback
		{
			[Token(Token = "0x6001425")]
			[Address(RVA = "0x15EC0D8", Offset = "0x15EC0D8", VA = "0x15EC0D8")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001426")]
			[Address(RVA = "0x15EC0E0", Offset = "0x15EC0E0", VA = "0x15EC0E0")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700032B")]
		public Action OnThrowCompletedCallback
		{
			[Token(Token = "0x6001427")]
			[Address(RVA = "0x15EC0E8", Offset = "0x15EC0E8", VA = "0x15EC0E8")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001428")]
			[Address(RVA = "0x15EC0F0", Offset = "0x15EC0F0", VA = "0x15EC0F0")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700032C")]
		public Mesh OriginalMesh
		{
			[Token(Token = "0x6001429")]
			[Address(RVA = "0x15EC0F8", Offset = "0x15EC0F8", VA = "0x15EC0F8", Slot = "8")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600142A")]
			[Address(RVA = "0x15EC100", Offset = "0x15EC100", VA = "0x15EC100")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700032D")]
		public Material OriginalMaterial
		{
			[Token(Token = "0x600142B")]
			[Address(RVA = "0x15EC108", Offset = "0x15EC108", VA = "0x15EC108", Slot = "7")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600142C")]
			[Address(RVA = "0x15EC110", Offset = "0x15EC110", VA = "0x15EC110")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700032E")]
		public float OriginalAlpha
		{
			[Token(Token = "0x600142D")]
			[Address(RVA = "0x15EC118", Offset = "0x15EC118", VA = "0x15EC118")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600142E")]
			[Address(RVA = "0x15EC120", Offset = "0x15EC120", VA = "0x15EC120")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700032F")]
		public Mesh AntModeMesh
		{
			[Token(Token = "0x600142F")]
			[Address(RVA = "0x15EC128", Offset = "0x15EC128", VA = "0x15EC128")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001430")]
			[Address(RVA = "0x15EC130", Offset = "0x15EC130", VA = "0x15EC130")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000330")]
		public IReadOnlyList<AnatomyItem> AnatomyItems
		{
			[Token(Token = "0x6001431")]
			[Address(RVA = "0x15EC138", Offset = "0x15EC138", VA = "0x15EC138", Slot = "11")]
			[CompilerGenerated]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000331")]
		public System.Collections.Generic.IReadOnlyDictionary<(SubpartType SubpartType, byte ColorId), Subpart> Subparts
		{
			[Token(Token = "0x6001432")]
			[Address(RVA = "0x15EC140", Offset = "0x15EC140", VA = "0x15EC140")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001433")]
			[Address(RVA = "0x15EC148", Offset = "0x15EC148", VA = "0x15EC148")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000332")]
		private AnatomyItem ItemData
		{
			[Token(Token = "0x6001434")]
			[Address(RVA = "0x15EC150", Offset = "0x15EC150", VA = "0x15EC150")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000333")]
		public Color EmissionColor
		{
			[Token(Token = "0x6001435")]
			[Address(RVA = "0x15EC1F4", Offset = "0x15EC1F4", VA = "0x15EC1F4")]
			[CompilerGenerated]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6001436")]
			[Address(RVA = "0x15EC200", Offset = "0x15EC200", VA = "0x15EC200")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000334")]
		public LocalTransformContainer OriginalLocalTransform
		{
			[Token(Token = "0x6001437")]
			[Address(RVA = "0x15EC20C", Offset = "0x15EC20C", VA = "0x15EC20C", Slot = "29")]
			[CompilerGenerated]
			get
			{
				return default(LocalTransformContainer);
			}
			[Token(Token = "0x6001438")]
			[Address(RVA = "0x15EC224", Offset = "0x15EC224", VA = "0x15EC224")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000335")]
		public Transform Transform
		{
			[Token(Token = "0x6001439")]
			[Address(RVA = "0x15EC248", Offset = "0x15EC248", VA = "0x15EC248", Slot = "25")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000336")]
		public Collider Collider
		{
			[Token(Token = "0x600143A")]
			[Address(RVA = "0x15EC264", Offset = "0x15EC264", VA = "0x15EC264", Slot = "6")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000337")]
		public bool IsLeveled
		{
			[Token(Token = "0x6001442")]
			[Address(RVA = "0x15EDD48", Offset = "0x15EDD48", VA = "0x15EDD48", Slot = "15")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001443")]
			[Address(RVA = "0x15EDD50", Offset = "0x15EDD50", VA = "0x15EDD50")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000338")]
		public Bounds Bounds
		{
			[Token(Token = "0x6001445")]
			[Address(RVA = "0x15EDDF8", Offset = "0x15EDDF8", VA = "0x15EDDF8", Slot = "13")]
			get
			{
				return default(Bounds);
			}
		}

		[Token(Token = "0x17000339")]
		public bool IsCompletelySliced
		{
			[Token(Token = "0x6001446")]
			[Address(RVA = "0x15EDE40", Offset = "0x15EDE40", VA = "0x15EDE40")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001447")]
			[Address(RVA = "0x15EDE48", Offset = "0x15EDE48", VA = "0x15EDE48")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700033A")]
		public bool IsHighlighted
		{
			[Token(Token = "0x6001449")]
			[Address(RVA = "0x15EDEEC", Offset = "0x15EDEEC", VA = "0x15EDEEC", Slot = "17")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600144A")]
			[Address(RVA = "0x15EDEF4", Offset = "0x15EDEF4", VA = "0x15EDEF4")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700033B")]
		public bool IsHidden
		{
			[Token(Token = "0x600144C")]
			[Address(RVA = "0x15EE7A0", Offset = "0x15EE7A0", VA = "0x15EE7A0", Slot = "19")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600144D")]
			[Address(RVA = "0x15EE7A8", Offset = "0x15EE7A8", VA = "0x15EE7A8")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700033C")]
		public Texture2D SubpartTexture
		{
			[Token(Token = "0x600144F")]
			[Address(RVA = "0x15EE850", Offset = "0x15EE850", VA = "0x15EE850", Slot = "21")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700033D")]
		public bool HasSubparts
		{
			[Token(Token = "0x6001450")]
			[Address(RVA = "0x15EE990", Offset = "0x15EE990", VA = "0x15EE990", Slot = "22")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700033E")]
		public AnatomySphereItem AnatomySphereItem
		{
			[Token(Token = "0x6001453")]
			[Address(RVA = "0x15EEEEC", Offset = "0x15EEEEC", VA = "0x15EEEEC", Slot = "28")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001454")]
			[Address(RVA = "0x15EEEF4", Offset = "0x15EEEF4", VA = "0x15EEEF4")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700033F")]
		public bool FocusEnabled
		{
			[Token(Token = "0x6001455")]
			[Address(RVA = "0x15EEF04", Offset = "0x15EEF04", VA = "0x15EEF04", Slot = "26")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001456")]
			[Address(RVA = "0x15EEF0C", Offset = "0x15EEF0C", VA = "0x15EEF0C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000340")]
		public uint FocusCount
		{
			[Token(Token = "0x6001457")]
			[Address(RVA = "0x15EEF18", Offset = "0x15EEF18", VA = "0x15EEF18")]
			[CompilerGenerated]
			get
			{
				return default(uint);
			}
			[Token(Token = "0x6001458")]
			[Address(RVA = "0x15EEF20", Offset = "0x15EEF20", VA = "0x15EEF20")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000341")]
		public GameObject GameObject
		{
			[Token(Token = "0x600145A")]
			[Address(RVA = "0x15EF020", Offset = "0x15EF020", VA = "0x15EF020", Slot = "31")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000342")]
		public bool ManipulationEnabled
		{
			[Token(Token = "0x600145B")]
			[Address(RVA = "0x15EF03C", Offset = "0x15EF03C", VA = "0x15EF03C", Slot = "32")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600145C")]
			[Address(RVA = "0x15EF044", Offset = "0x15EF044", VA = "0x15EF044")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000343")]
		public bool IsBeingManipulated
		{
			[Token(Token = "0x600145D")]
			[Address(RVA = "0x15EF050", Offset = "0x15EF050", VA = "0x15EF050", Slot = "33")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600145E")]
			[Address(RVA = "0x15EF058", Offset = "0x15EF058", VA = "0x15EF058")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000344")]
		public bool IsPicked
		{
			[Token(Token = "0x6001466")]
			[Address(RVA = "0x15F07B0", Offset = "0x15F07B0", VA = "0x15F07B0", Slot = "30")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001467")]
			[Address(RVA = "0x15F07B8", Offset = "0x15F07B8", VA = "0x15F07B8")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x600143B")]
		[Address(RVA = "0x15EC280", Offset = "0x15EC280", VA = "0x15EC280")]
		public void ReleaseAssets()
		{
		}

		[Token(Token = "0x600143C")]
		[Address(RVA = "0x15EC5FC", Offset = "0x15EC5FC", VA = "0x15EC5FC")]
		public InteractiveAnatomyItemInstance(IReadOnlyList<AnatomyItem> anatomyItems, InteractiveAnatomyItemInstanceSettings settings, global::Views.AnatomyItemInstance anatomyItemInstance, InteractiveAnatomyItemInstanceCollection itemCollection)
		{
		}

		[Token(Token = "0x600143D")]
		[Address(RVA = "0x15ECC0C", Offset = "0x15ECC0C", VA = "0x15ECC0C")]
		public void SetPropertyBlockColor(Color color)
		{
		}

		[Token(Token = "0x600143E")]
		[Address(RVA = "0x15ECCF0", Offset = "0x15ECCF0", VA = "0x15ECCF0", Slot = "10")]
		public void SetMeshOverride(bool antModeEnabled)
		{
		}

		[Token(Token = "0x600143F")]
		[Address(RVA = "0x15ECDC4", Offset = "0x15ECDC4", VA = "0x15ECDC4")]
		private void SetVisual([Optional] bool? isHidden, [Optional] bool? isLeveled, [Optional] bool? isCompletelySliced, [Optional] bool? isFocused, [Optional] bool? isBeingManipulated, [Optional] bool? isPickedInHierarchy, float duration = 0f, bool force = false)
		{
		}

		[Token(Token = "0x6001440")]
		[Address(RVA = "0x15ED99C", Offset = "0x15ED99C", VA = "0x15ED99C")]
		private void ReturnOriginalMaterialIfPossible(bool isFocused, bool isPickedInHierarchy, float duration)
		{
		}

		[Token(Token = "0x6001441")]
		[Address(RVA = "0x15ED1C8", Offset = "0x15ED1C8", VA = "0x15ED1C8")]
		public static bool IsPickedInHierarchy(InteractiveAnatomyItemInstanceCollection collection, InteractiveAnatomyItemInstance instance)
		{
			return default(bool);
		}

		[Token(Token = "0x6001444")]
		[Address(RVA = "0x15EDD5C", Offset = "0x15EDD5C", VA = "0x15EDD5C", Slot = "16")]
		public void SetLeveled(bool value)
		{
		}

		[Token(Token = "0x6001448")]
		[Address(RVA = "0x15EDE54", Offset = "0x15EDE54", VA = "0x15EDE54", Slot = "14")]
		public void SetCompletelySliced(bool value)
		{
		}

		[Token(Token = "0x600144B")]
		[Address(RVA = "0x15EDF00", Offset = "0x15EDF00", VA = "0x15EDF00", Slot = "18")]
		public void SetHighlighted(bool value)
		{
		}

		[Token(Token = "0x600144E")]
		[Address(RVA = "0x15EE7B4", Offset = "0x15EE7B4", VA = "0x15EE7B4", Slot = "20")]
		public void SetHidden(bool value)
		{
		}

		[Token(Token = "0x6001451")]
		[Address(RVA = "0x15EEA40", Offset = "0x15EEA40", VA = "0x15EEA40", Slot = "23")]
		public SubpartInstance GetSubpartInstance(SubpartType subpartType, byte colorId)
		{
			return null;
		}

		[Token(Token = "0x6001452")]
		[Address(RVA = "0x15EEDA0", Offset = "0x15EEDA0", VA = "0x15EEDA0", Slot = "24")]
		public void SetHighlightedSubpart(Subpart subpart)
		{
		}

		[Token(Token = "0x6001459")]
		[Address(RVA = "0x15EEF28", Offset = "0x15EEF28", VA = "0x15EEF28", Slot = "27")]
		public void SetFocused(bool value)
		{
		}

		[Token(Token = "0x600145F")]
		[Address(RVA = "0x15EF064", Offset = "0x15EF064", VA = "0x15EF064", Slot = "34")]
		public void StartManipulation()
		{
		}

		[Token(Token = "0x6001460")]
		[Address(RVA = "0x15EFBC4", Offset = "0x15EFBC4", VA = "0x15EFBC4", Slot = "35")]
		public void StopManipulation(Vector3 velocity, Vector3 angularVelocity)
		{
		}

		[Token(Token = "0x6001461")]
		[Address(RVA = "0x15F02E8", Offset = "0x15F02E8", VA = "0x15F02E8", Slot = "36")]
		public void ForceEndManipulation()
		{
		}

		[Token(Token = "0x6001462")]
		[Address(RVA = "0x15EFC54", Offset = "0x15EFC54", VA = "0x15EFC54")]
		public void OnThrow(Vector3 angularVelocity, Vector3 velocity)
		{
		}

		[Token(Token = "0x6001463")]
		[Address(RVA = "0x15F0794", Offset = "0x15F0794", VA = "0x15F0794")]
		private bool IsItemNearCopy()
		{
			return default(bool);
		}

		[Token(Token = "0x6001464")]
		[Address(RVA = "0x15F06D8", Offset = "0x15F06D8", VA = "0x15F06D8")]
		private void OnThrowCompleted()
		{
		}

		[Token(Token = "0x6001465")]
		[Address(RVA = "0x15EF668", Offset = "0x15EF668", VA = "0x15EF668")]
		private void StopThrowCoroutine()
		{
		}

		[Token(Token = "0x6001468")]
		[Address(RVA = "0x15F07C4", Offset = "0x15F07C4", VA = "0x15F07C4", Slot = "37")]
		private void VR.Input.IPickable.Return(float duration, Action onCompleted)
		{
		}

		[Token(Token = "0x6001469")]
		[Address(RVA = "0x15EFE9C", Offset = "0x15EFE9C", VA = "0x15EFE9C")]
		public Sequence Return(float duration = 0.5f, [Optional] Action onCompleted)
		{
			return null;
		}

		[Token(Token = "0x600146A")]
		[Address(RVA = "0x15F0D58", Offset = "0x15F0D58", VA = "0x15F0D58")]
		private void DestroyCopy()
		{
		}

		[Token(Token = "0x600146B")]
		[Address(RVA = "0x15F07D0", Offset = "0x15F07D0", VA = "0x15F07D0")]
		private void OnItemReturned([Optional] Action onCompleted)
		{
		}
	}
	[Token(Token = "0x20003E4")]
	public class InteractiveAnatomyItemInstanceCollection : IInteractiveAnatomyItemInstanceCollection, ISystemPart, ILevelableCollection<IInteractiveAnatomyItemInstance>, IInstanceCollection<IInteractiveAnatomyItemInstance>, IHighlightable, IFadeable
	{
		[Token(Token = "0x40013C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly AnatomyUberShaderAnimationHandler OpaqueShaderHandler;

		[Token(Token = "0x40013C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly AnatomyUberShaderAnimationHandler TransparentShaderHandler;

		[Token(Token = "0x40013C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly Dictionary<string, InteractiveAnatomyItemInstance> ItemInstances;

		[Token(Token = "0x17000345")]
		public string StringId
		{
			[Token(Token = "0x600147F")]
			[Address(RVA = "0x15F1B64", Offset = "0x15F1B64", VA = "0x15F1B64", Slot = "5")]
			[CompilerGenerated]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000346")]
		public GameObject GameObject
		{
			[Token(Token = "0x6001480")]
			[Address(RVA = "0x15F1B6C", Offset = "0x15F1B6C", VA = "0x15F1B6C", Slot = "6")]
			[CompilerGenerated]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000347")]
		public LocationType LocationType
		{
			[Token(Token = "0x6001481")]
			[Address(RVA = "0x15F1B74", Offset = "0x15F1B74", VA = "0x15F1B74")]
			[CompilerGenerated]
			get
			{
				return default(LocationType);
			}
		}

		[Token(Token = "0x17000348")]
		public SystemGroup SystemGroup
		{
			[Token(Token = "0x6001482")]
			[Address(RVA = "0x15F1B7C", Offset = "0x15F1B7C", VA = "0x15F1B7C", Slot = "8")]
			[CompilerGenerated]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000349")]
		public float SourceAlpha
		{
			[Token(Token = "0x6001483")]
			[Address(RVA = "0x15F1B84", Offset = "0x15F1B84", VA = "0x15F1B84")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001484")]
			[Address(RVA = "0x15F1B8C", Offset = "0x15F1B8C", VA = "0x15F1B8C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700034A")]
		public Color EmissionColor
		{
			[Token(Token = "0x6001485")]
			[Address(RVA = "0x15F1B94", Offset = "0x15F1B94", VA = "0x15F1B94")]
			[CompilerGenerated]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6001486")]
			[Address(RVA = "0x15F1BA0", Offset = "0x15F1BA0", VA = "0x15F1BA0")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700034B")]
		public bool IsHighlighted
		{
			[Token(Token = "0x600148A")]
			[Address(RVA = "0x15F1D08", Offset = "0x15F1D08", VA = "0x15F1D08", Slot = "10")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600148B")]
			[Address(RVA = "0x15F1D10", Offset = "0x15F1D10", VA = "0x15F1D10")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700034C")]
		public bool IsFaded
		{
			[Token(Token = "0x600148D")]
			[Address(RVA = "0x15F2004", Offset = "0x15F2004", VA = "0x15F2004")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600148E")]
			[Address(RVA = "0x15F200C", Offset = "0x15F200C", VA = "0x15F200C")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700034D")]
		public bool IsSliced
		{
			[Token(Token = "0x6001490")]
			[Address(RVA = "0x15F209C", Offset = "0x15F209C", VA = "0x15F209C")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001491")]
			[Address(RVA = "0x15F20A4", Offset = "0x15F20A4", VA = "0x15F20A4")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6001487")]
		[Address(RVA = "0x15F1BAC", Offset = "0x15F1BAC", VA = "0x15F1BAC")]
		public InteractiveAnatomyItemInstanceCollection(SystemGroup systemGroup, LocationType locationType, string stringId, GameObject gameObject, AnatomyUberShaderAnimationHandler opaqueShaderHandler, AnatomyUberShaderAnimationHandler transparentShaderHandler)
		{
		}

		[Token(Token = "0x6001488")]
		[Address(RVA = "0x15F11EC", Offset = "0x15F11EC", VA = "0x15F11EC", Slot = "9")]
		public IInteractiveAnatomyItemInstance GetInstance(string id)
		{
			return null;
		}

		[Token(Token = "0x6001489")]
		[Address(RVA = "0x15F1CB8", Offset = "0x15F1CB8", VA = "0x15F1CB8", Slot = "7")]
		public IEnumerable<IInteractiveAnatomyItemInstance> GetAllInstances()
		{
			return null;
		}

		[Token(Token = "0x600148C")]
		[Address(RVA = "0x15F1D1C", Offset = "0x15F1D1C", VA = "0x15F1D1C", Slot = "11")]
		public void SetHighlighted(bool value)
		{
		}

		[Token(Token = "0x600148F")]
		[Address(RVA = "0x15F2018", Offset = "0x15F2018", VA = "0x15F2018", Slot = "12")]
		public void SetFaded(bool value)
		{
		}

		[Token(Token = "0x6001492")]
		[Address(RVA = "0x15F20B0", Offset = "0x15F20B0", VA = "0x15F20B0", Slot = "4")]
		public void SetSliced(bool value)
		{
		}

		[Token(Token = "0x6001493")]
		[Address(RVA = "0x15F1D9C", Offset = "0x15F1D9C", VA = "0x15F1D9C")]
		private void SetVisual([Optional] bool? isFaded, [Optional] bool? isHighlighted, [Optional] bool? isSliced, float duration = 0f)
		{
		}

		[Token(Token = "0x6001494")]
		[Address(RVA = "0x15F2130", Offset = "0x15F2130", VA = "0x15F2130")]
		private static void SetVisual(AnatomyUberShaderAnimationHandler shaderHandler, AnatomyUberShaderAnimationHandler.State state, float duration, StandardShaderUtils.BlendMode defaultBlendMode, bool isFaded)
		{
		}
	}
	[Token(Token = "0x20003E6")]
	public class AnatomyItemInstanceCopySettings
	{
		[Token(Token = "0x40013D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject Source;

		[Token(Token = "0x40013D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Mesh Mesh;

		[Token(Token = "0x40013D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Material Material;

		[Token(Token = "0x40013D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Color Color;

		[Token(Token = "0x40013D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public LocalTransformContainer TransformContainer;

		[Token(Token = "0x40013DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Lazy<HashSet<int>> AlternateSources;

		[Token(Token = "0x6001498")]
		[Address(RVA = "0x15ECB48", Offset = "0x15ECB48", VA = "0x15ECB48")]
		public AnatomyItemInstanceCopySettings()
		{
		}
	}
	[Token(Token = "0x20003E7")]
	public class InteractiveAnatomyItemInstanceCopy : MonoBehaviour
	{
		[Token(Token = "0x40013DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MeshFilter MeshFilter;

		[Token(Token = "0x40013DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BoxCollider BoxCollider;

		[Token(Token = "0x40013DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public MeshRenderer MeshRenderer;

		[Token(Token = "0x40013DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Shader Shader;

		[Token(Token = "0x40013DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject Source;

		[Token(Token = "0x40013E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public HashSet<int> AlternateSources;

		[Token(Token = "0x40013E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private TweenerCore<float, float, FloatOptions> _tweener;

		[Token(Token = "0x1700034E")]
		public bool IsTriggeredBySource
		{
			[Token(Token = "0x6001499")]
			[Address(RVA = "0x15F2544", Offset = "0x15F2544", VA = "0x15F2544")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600149A")]
			[Address(RVA = "0x15F254C", Offset = "0x15F254C", VA = "0x15F254C")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x600149B")]
		[Address(RVA = "0x15EF70C", Offset = "0x15EF70C", VA = "0x15EF70C")]
		public void Initialize(AnatomyItemInstanceCopySettings item)
		{
		}

		[Token(Token = "0x600149C")]
		[Address(RVA = "0x15EE0A0", Offset = "0x15EE0A0", VA = "0x15EE0A0")]
		public void InitializeHl(AnatomyItemInstanceCopySettings item)
		{
		}

		[Token(Token = "0x600149D")]
		[Address(RVA = "0x15F2558", Offset = "0x15F2558", VA = "0x15F2558")]
		private void OnTriggerStay(Collider other)
		{
		}

		[Token(Token = "0x600149E")]
		[Address(RVA = "0x15F2638", Offset = "0x15F2638", VA = "0x15F2638")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x600149F")]
		[Address(RVA = "0x15EE4BC", Offset = "0x15EE4BC", VA = "0x15EE4BC")]
		public TweenerCore<float, float, FloatOptions> Show(float duration = 0.5f)
		{
			return null;
		}

		[Token(Token = "0x60014A0")]
		[Address(RVA = "0x15EE618", Offset = "0x15EE618", VA = "0x15EE618")]
		public TweenerCore<float, float, FloatOptions> Hide(float duration = 0.5f)
		{
			return null;
		}

		[Token(Token = "0x60014A1")]
		[Address(RVA = "0x15F2714", Offset = "0x15F2714", VA = "0x15F2714")]
		public InteractiveAnatomyItemInstanceCopy()
		{
		}
	}
	[Token(Token = "0x20003E8")]
	public class SubpartInstance : IGazeable
	{
		[Token(Token = "0x40013E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ISubpartHost Host;

		[Token(Token = "0x40013E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly Subpart Data;

		[Token(Token = "0x1700034F")]
		public uint FocusCount
		{
			[Token(Token = "0x60014A4")]
			[Address(RVA = "0x15F2740", Offset = "0x15F2740", VA = "0x15F2740")]
			[CompilerGenerated]
			get
			{
				return default(uint);
			}
			[Token(Token = "0x60014A5")]
			[Address(RVA = "0x15F2748", Offset = "0x15F2748", VA = "0x15F2748")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000350")]
		public bool FocusEnabled
		{
			[Token(Token = "0x60014A6")]
			[Address(RVA = "0x15F2750", Offset = "0x15F2750", VA = "0x15F2750", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60014A3")]
		[Address(RVA = "0x15EED5C", Offset = "0x15EED5C", VA = "0x15EED5C")]
		public SubpartInstance(Subpart data, ISubpartHost host)
		{
		}

		[Token(Token = "0x60014A7")]
		[Address(RVA = "0x15F27F0", Offset = "0x15F27F0", VA = "0x15F27F0", Slot = "5")]
		public void SetFocused(bool value)
		{
		}
	}
	[Token(Token = "0x20003E9")]
	public class AnatomyUberShaderAnimationHandler
	{
		[Serializable]
		[Token(Token = "0x20003EA")]
		public struct State
		{
			[Token(Token = "0x40013EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Color EmissionColor;

			[Token(Token = "0x40013EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float FresnelOpacity;

			[Token(Token = "0x40013ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float Fade;

			[Token(Token = "0x60014B1")]
			[Address(RVA = "0x15F2AB8", Offset = "0x15F2AB8", VA = "0x15F2AB8", Slot = "3")]
			public override string ToString()
			{
				return null;
			}
		}

		[Token(Token = "0x40013E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly Func<Material> _originalGetMaterial;

		[Token(Token = "0x40013E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Func<Material> _getMaterial;

		[Token(Token = "0x40013E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly Dictionary<int, Tweener> _propertyTweeners;

		[Token(Token = "0x40013EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Material _materialOverride;

		[Token(Token = "0x17000351")]
		public State LastState
		{
			[Token(Token = "0x60014A8")]
			[Address(RVA = "0x15F293C", Offset = "0x15F293C", VA = "0x15F293C")]
			[CompilerGenerated]
			get
			{
				return default(State);
			}
			[Token(Token = "0x60014A9")]
			[Address(RVA = "0x15F2950", Offset = "0x15F2950", VA = "0x15F2950")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000352")]
		public System.Collections.Generic.IReadOnlyDictionary<int, Tweener> PropertyTweeners
		{
			[Token(Token = "0x60014AA")]
			[Address(RVA = "0x15F2964", Offset = "0x15F2964", VA = "0x15F2964")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000353")]
		public Material MaterialOverride
		{
			[Token(Token = "0x60014AB")]
			[Address(RVA = "0x15F296C", Offset = "0x15F296C", VA = "0x15F296C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60014AC")]
			[Address(RVA = "0x15F2974", Offset = "0x15F2974", VA = "0x15F2974")]
			set
			{
			}
		}

		[Token(Token = "0x17000354")]
		public bool IsPlaying
		{
			[Token(Token = "0x60014AD")]
			[Address(RVA = "0x15EDAD0", Offset = "0x15EDAD0", VA = "0x15EDAD0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60014AE")]
		[Address(RVA = "0x15ECB58", Offset = "0x15ECB58", VA = "0x15ECB58")]
		public AnatomyUberShaderAnimationHandler(Func<Material> getMaterial)
		{
		}

		[Token(Token = "0x60014AF")]
		[Address(RVA = "0x15F2A9C", Offset = "0x15F2A9C", VA = "0x15F2A9C")]
		public void SetStateOverride(State state)
		{
		}

		[Token(Token = "0x60014B0")]
		[Address(RVA = "0x15ED2C8", Offset = "0x15ED2C8", VA = "0x15ED2C8")]
		public void SetVisual(State state, float duration, [Optional] Action<int> onStarted, [Optional] Action<int> onCompleted, bool force = false)
		{
		}
	}
	[Token(Token = "0x20003EE")]
	public static class AnatomyUberShaderUtils
	{
		[Token(Token = "0x20003EF")]
		public readonly struct AnatomyUberShaderKeywords
		{
			[Token(Token = "0x40013F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public readonly LocalKeyword SliceOnKeyword;

			[Token(Token = "0x40013F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public readonly LocalKeyword XRayOnKeyword;

			[Token(Token = "0x40013F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public readonly LocalKeyword VFaceOnKeyword;

			[Token(Token = "0x60014C7")]
			[Address(RVA = "0x15F3194", Offset = "0x15F3194", VA = "0x15F3194")]
			public AnatomyUberShaderKeywords(LocalKeyword sliceOnKeyword, LocalKeyword xRayOnKeyword, LocalKeyword vFaceOnKeyword)
			{
			}
		}

		[Token(Token = "0x40013F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly GlobalKeyword SubpartsOnKeyword;

		[Token(Token = "0x40013F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static int _lastShaderInstanceId;

		[Token(Token = "0x40013F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static AnatomyUberShaderKeywords Keywords;

		[Token(Token = "0x60014BB")]
		[Address(RVA = "0x15F2F94", Offset = "0x15F2F94", VA = "0x15F2F94")]
		public static void Initialize(this Shader shader)
		{
		}

		[Token(Token = "0x60014BC")]
		[Address(RVA = "0x15F3200", Offset = "0x15F3200", VA = "0x15F3200")]
		public static bool IsSubpartsEnabled()
		{
			return default(bool);
		}

		[Token(Token = "0x60014BD")]
		[Address(RVA = "0x15F3258", Offset = "0x15F3258", VA = "0x15F3258")]
		public static void SetSubpartsEnabled(bool value)
		{
		}

		[Token(Token = "0x60014BE")]
		[Address(RVA = "0x15F32EC", Offset = "0x15F32EC", VA = "0x15F32EC")]
		public static bool IsSliceEnabled(this Material material)
		{
			return default(bool);
		}

		[Token(Token = "0x60014BF")]
		[Address(RVA = "0x15EDC00", Offset = "0x15EDC00", VA = "0x15EDC00")]
		public static void SetSliceEnabled(this Material material, bool value)
		{
		}

		[Token(Token = "0x60014C0")]
		[Address(RVA = "0x15F33CC", Offset = "0x15F33CC", VA = "0x15F33CC")]
		public static bool IsXRayEnabled(this Material material)
		{
			return default(bool);
		}

		[Token(Token = "0x60014C1")]
		[Address(RVA = "0x15F354C", Offset = "0x15F354C", VA = "0x15F354C")]
		public static void SetXRayEnabled(this Material material, bool value)
		{
		}

		[Token(Token = "0x60014C2")]
		[Address(RVA = "0x15F34AC", Offset = "0x15F34AC", VA = "0x15F34AC")]
		public static void SetCullEnabled(this Material material, bool sliceEnabled, bool xRayEnabled)
		{
		}

		[Token(Token = "0x60014C3")]
		[Address(RVA = "0x15F1874", Offset = "0x15F1874", VA = "0x15F1874")]
		public static void SetXRayEnabled(this Material material, bool value, StandardShaderUtils.BlendMode defaultBlendMode)
		{
		}

		[Token(Token = "0x60014C4")]
		[Address(RVA = "0x15F36E0", Offset = "0x15F36E0", VA = "0x15F36E0")]
		public static bool IsVFaceEnabled(this Material material)
		{
			return default(bool);
		}

		[Token(Token = "0x60014C5")]
		[Address(RVA = "0x15F37C0", Offset = "0x15F37C0", VA = "0x15F37C0")]
		public static void SetVFaceEnabled(this Material material, bool value)
		{
		}
	}
	[Token(Token = "0x20003F0")]
	public class AnimationItemInstance : MonoBehaviour
	{
		[Token(Token = "0x40013F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string _id;

		[Token(Token = "0x40013F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator _animator;

		[Token(Token = "0x40013FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int Speed;

		[Token(Token = "0x40013FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly Dictionary<string, object> Instances;

		[Token(Token = "0x17000355")]
		public Animator Animator
		{
			[Token(Token = "0x60014C8")]
			[Address(RVA = "0x15F3964", Offset = "0x15F3964", VA = "0x15F3964")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000356")]
		public string Id
		{
			[Token(Token = "0x60014C9")]
			[Address(RVA = "0x15F396C", Offset = "0x15F396C", VA = "0x15F396C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60014CA")]
		[Address(RVA = "0x15F3974", Offset = "0x15F3974", VA = "0x15F3974")]
		public void Start()
		{
		}

		[Token(Token = "0x60014CB")]
		[Address(RVA = "0x15F3BD4", Offset = "0x15F3BD4", VA = "0x15F3BD4")]
		public void SetAnimationTime(float val)
		{
		}

		[Token(Token = "0x60014CC")]
		[Address(RVA = "0x15F3BF8", Offset = "0x15F3BF8", VA = "0x15F3BF8")]
		public void SetAnimationSpeed(float val)
		{
		}

		[Token(Token = "0x60014CD")]
		[Address(RVA = "0x15F3C14", Offset = "0x15F3C14", VA = "0x15F3C14")]
		[ContextMenu("Play")]
		private void Play()
		{
		}

		[Token(Token = "0x60014CE")]
		[Address(RVA = "0x15F3C54", Offset = "0x15F3C54", VA = "0x15F3C54")]
		[ContextMenu("Stop")]
		private void Stop()
		{
		}

		[Token(Token = "0x60014CF")]
		[Address(RVA = "0x15F3C74", Offset = "0x15F3C74", VA = "0x15F3C74")]
		public AnimationItemInstance()
		{
		}
	}
	[Token(Token = "0x20003F2")]
	public class AnimationObjectInstance : MonoBehaviour, IGazeable, IHideable, IHighlightable, IAnimationObjectInstance
	{
		[Token(Token = "0x40013FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private StandardShaderUtils.BlendMode _defaultBlendMode;

		[Token(Token = "0x4001400")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Material _originalMaterial;

		[Token(Token = "0x17000357")]
		public AnatomyUberShaderAnimationHandler ShaderHandler
		{
			[Token(Token = "0x60014D6")]
			[Address(RVA = "0x15F3F20", Offset = "0x15F3F20", VA = "0x15F3F20")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60014D7")]
			[Address(RVA = "0x15F3F28", Offset = "0x15F3F28", VA = "0x15F3F28")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000358")]
		public Renderer Renderer
		{
			[Token(Token = "0x60014D8")]
			[Address(RVA = "0x15F3F30", Offset = "0x15F3F30", VA = "0x15F3F30")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60014D9")]
			[Address(RVA = "0x15F3F38", Offset = "0x15F3F38", VA = "0x15F3F38")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000359")]
		public MeshCollider MeshCollider
		{
			[Token(Token = "0x60014DA")]
			[Address(RVA = "0x15F3F40", Offset = "0x15F3F40", VA = "0x15F3F40")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60014DB")]
			[Address(RVA = "0x15F3F48", Offset = "0x15F3F48", VA = "0x15F3F48")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700035A")]
		public string Id
		{
			[Token(Token = "0x60014DC")]
			[Address(RVA = "0x15F3F50", Offset = "0x15F3F50", VA = "0x15F3F50", Slot = "10")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700035B")]
		public float OriginalAlpha
		{
			[Token(Token = "0x60014DD")]
			[Address(RVA = "0x15F3F58", Offset = "0x15F3F58", VA = "0x15F3F58")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60014DE")]
			[Address(RVA = "0x15F3F60", Offset = "0x15F3F60", VA = "0x15F3F60")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700035C")]
		public Color EmissionColor
		{
			[Token(Token = "0x60014DF")]
			[Address(RVA = "0x15F3F68", Offset = "0x15F3F68", VA = "0x15F3F68")]
			[CompilerGenerated]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x60014E0")]
			[Address(RVA = "0x15F3F74", Offset = "0x15F3F74", VA = "0x15F3F74")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700035D")]
		public bool FocusEnabled
		{
			[Token(Token = "0x60014E2")]
			[Address(RVA = "0x15F40A0", Offset = "0x15F40A0", VA = "0x15F40A0", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700035E")]
		public int FocusCount
		{
			[Token(Token = "0x60014E3")]
			[Address(RVA = "0x15F40A8", Offset = "0x15F40A8", VA = "0x15F40A8")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60014E4")]
			[Address(RVA = "0x15F40B0", Offset = "0x15F40B0", VA = "0x15F40B0")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700035F")]
		public bool IsHidden
		{
			[Token(Token = "0x60014E6")]
			[Address(RVA = "0x15F4308", Offset = "0x15F4308", VA = "0x15F4308", Slot = "6")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60014E7")]
			[Address(RVA = "0x15F4310", Offset = "0x15F4310", VA = "0x15F4310")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000360")]
		public bool IsHighlighted
		{
			[Token(Token = "0x60014E9")]
			[Address(RVA = "0x15F435C", Offset = "0x15F435C", VA = "0x15F435C", Slot = "8")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60014EA")]
			[Address(RVA = "0x15F4364", Offset = "0x15F4364", VA = "0x15F4364")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x60014E1")]
		[Address(RVA = "0x15F3F80", Offset = "0x15F3F80", VA = "0x15F3F80")]
		public void Init(Renderer renderer, MeshCollider meshCollider, float transparency)
		{
		}

		[Token(Token = "0x60014E5")]
		[Address(RVA = "0x15F40B8", Offset = "0x15F40B8", VA = "0x15F40B8", Slot = "5")]
		public void SetFocused(bool value)
		{
		}

		[Token(Token = "0x60014E8")]
		[Address(RVA = "0x15F431C", Offset = "0x15F431C", VA = "0x15F431C", Slot = "7")]
		public void SetHidden(bool value)
		{
		}

		[Token(Token = "0x60014EB")]
		[Address(RVA = "0x15F4370", Offset = "0x15F4370", VA = "0x15F4370", Slot = "9")]
		public void SetHighlighted(bool value)
		{
		}

		[Token(Token = "0x60014EC")]
		[Address(RVA = "0x15F4134", Offset = "0x15F4134", VA = "0x15F4134")]
		private void SetVisual(bool isHidden, bool isHighlighted, bool isFocused, float duration)
		{
		}

		[Token(Token = "0x60014ED")]
		[Address(RVA = "0x15F43B8", Offset = "0x15F43B8", VA = "0x15F43B8")]
		public AnimationObjectInstance()
		{
		}
	}
	[Token(Token = "0x20003F4")]
	public class AssignableMonoBehaviourObject : MonoBehaviourObject
	{
		[Token(Token = "0x400140B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object _object;

		[Token(Token = "0x17000361")]
		public override object Object
		{
			[Token(Token = "0x60014F2")]
			[Address(RVA = "0x15F480C", Offset = "0x15F480C", VA = "0x15F480C", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60014F3")]
		[Address(RVA = "0x15F4814", Offset = "0x15F4814", VA = "0x15F4814")]
		public void SetObject(object obj)
		{
		}

		[Token(Token = "0x60014F4")]
		[Address(RVA = "0x15F481C", Offset = "0x15F481C", VA = "0x15F481C")]
		public AssignableMonoBehaviourObject()
		{
		}
	}
	[Token(Token = "0x20003F5")]
	public class SystemContainerPositionSetter : MonoBehaviour
	{
		[StructLayout(3)]
		[Token(Token = "0x20003F7")]
		[CompilerGenerated]
		private struct <Start>d__11 : IAsyncStateMachine
		{
			[Token(Token = "0x4001418")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001419")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x400141A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SystemContainerPositionSetter <>4__this;

			[Token(Token = "0x400141B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x60014FC")]
			[Address(RVA = "0x15F4F98", Offset = "0x15F4F98", VA = "0x15F4F98", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60014FD")]
			[Address(RVA = "0x15F5674", Offset = "0x15F5674", VA = "0x15F5674", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20003F9")]
		[CompilerGenerated]
		private struct <OnStateChanged>d__14 : IAsyncStateMachine
		{
			[Token(Token = "0x400141D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x400141E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x400141F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public LocationType activeLocationType;

			[Token(Token = "0x4001420")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public SystemContainerPositionSetter <>4__this;

			[Token(Token = "0x4001421")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public AnimationItemInstance activeAnimation;

			[Token(Token = "0x4001422")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private TaskAwaiter<IInteractiveAnatomyItemInstanceCollection> <>u__1;

			[Token(Token = "0x6001500")]
			[Address(RVA = "0x15F56E0", Offset = "0x15F56E0", VA = "0x15F56E0", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001501")]
			[Address(RVA = "0x15F5D28", Offset = "0x15F5D28", VA = "0x15F5D28", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x400140C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private NetworkModuleProviderFactory _moduleProviderFactory;

		[Token(Token = "0x400140D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private InteractiveSystemContainer _interactiveSystemContainer;

		[Token(Token = "0x400140E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ILocationModule _locationModule;

		[Token(Token = "0x400140F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ISystemsModule _systemsModule;

		[Token(Token = "0x4001410")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private IAnatomyDatabase _anatomyDatabase;

		[Token(Token = "0x4001411")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private IInstanceProvider<IInteractiveAnatomyItemInstanceCollection> _instanceProvider;

		[Token(Token = "0x4001412")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private IAnimationModule<AnimationItemInstance> _animationModule;

		[Token(Token = "0x4001413")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private readonly CancellationTokenSource _disposeCancellationTokenSource;

		[Token(Token = "0x4001414")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private string _lastActiveAnimation;

		[Token(Token = "0x4001415")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private LocationType _lastLocationType;

		[Token(Token = "0x4001416")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private DatabaseType _lastDatabaseType;

		[Token(Token = "0x60014F5")]
		[Address(RVA = "0x15F4824", Offset = "0x15F4824", VA = "0x15F4824")]
		[AsyncStateMachine(typeof(<Start>d__11))]
		private void Start()
		{
		}

		[Token(Token = "0x60014F6")]
		[Address(RVA = "0x15F48DC", Offset = "0x15F48DC", VA = "0x15F48DC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60014F7")]
		[Address(RVA = "0x15F48F8", Offset = "0x15F48F8", VA = "0x15F48F8")]
		private void Update()
		{
		}

		[Token(Token = "0x60014F8")]
		[Address(RVA = "0x15F4D98", Offset = "0x15F4D98", VA = "0x15F4D98")]
		[AsyncStateMachine(typeof(<OnStateChanged>d__14))]
		private void OnStateChanged(LocationType activeLocationType, AnimationItemInstance activeAnimation)
		{
		}

		[Token(Token = "0x60014F9")]
		[Address(RVA = "0x15F4E78", Offset = "0x15F4E78", VA = "0x15F4E78")]
		public SystemContainerPositionSetter()
		{
		}
	}
}
namespace VR.Views.UI
{
	[Token(Token = "0x20003FA")]
	public class UGUIToggle : IToggle
	{
		[Token(Token = "0x4001423")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly Toggle _toggle;

		[Token(Token = "0x4001424")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Dictionary<Action<bool>, UnityAction<bool>> Actions;

		[Token(Token = "0x14000022")]
		public event Action<bool> ValueChanged
		{
			[Token(Token = "0x6001503")]
			[Address(RVA = "0x15F5D64", Offset = "0x15F5D64", VA = "0x15F5D64", Slot = "4")]
			add
			{
			}
			[Token(Token = "0x6001504")]
			[Address(RVA = "0x15F5F4C", Offset = "0x15F5F4C", VA = "0x15F5F4C", Slot = "5")]
			remove
			{
			}
		}

		[Token(Token = "0x6001502")]
		[Address(RVA = "0x15F5D34", Offset = "0x15F5D34", VA = "0x15F5D34")]
		public UGUIToggle(Toggle toggle)
		{
		}

		[Token(Token = "0x6001505")]
		[Address(RVA = "0x15F6134", Offset = "0x15F6134", VA = "0x15F6134", Slot = "6")]
		public void SetValue(bool value, bool notify)
		{
		}
	}
}
namespace VR.Tutorial
{
	[Token(Token = "0x20003FD")]
	public interface ITask
	{
		[Token(Token = "0x600150B")]
		Task Initialize(CancellationToken cancellationToken);

		[Token(Token = "0x600150C")]
		bool Update();
	}
	[Token(Token = "0x20003FE")]
	public class TaskInstance<T> where T : ITask
	{
		[Token(Token = "0x17000362")]
		public T Task
		{
			[Token(Token = "0x600150D")]
			[CompilerGenerated]
			get
			{
				return (T)null;
			}
		}

		[Token(Token = "0x17000363")]
		public bool IsInitialized
		{
			[Token(Token = "0x600150F")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001510")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x600150E")]
		public TaskInstance(T task)
		{
		}
	}
	[Token(Token = "0x20003FF")]
	public class TaskRunner<T> where T : ITask
	{
		[StructLayout(3)]
		[Token(Token = "0x2000401")]
		[CompilerGenerated]
		private struct <Initialize>d__19 : IAsyncStateMachine
		{
			[Token(Token = "0x4001431")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001432")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4001433")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public TaskInstance<T> taskInstance;

			[Token(Token = "0x4001434")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public CancellationToken cancellationToken;

			[Token(Token = "0x4001435")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x600151F")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001520")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4001429")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly Action<int> _taskCompleted;

		[Token(Token = "0x400142A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private TaskInstance<T>[] _currentTasks;

		[Token(Token = "0x400142B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private CancellationTokenSource _cancellationTokenSource;

		[Token(Token = "0x400142C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool _autoMoveNext;

		[Token(Token = "0x400142D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool _waitingForMoveNext;

		[Token(Token = "0x17000364")]
		public int CurrentTaskIndex
		{
			[Token(Token = "0x6001511")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001512")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000365")]
		public IReadOnlyList<TaskInstance<T>> CurrentTasks
		{
			[Token(Token = "0x6001513")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000366")]
		public bool AutoMoveNext
		{
			[Token(Token = "0x6001514")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001515")]
			set
			{
			}
		}

		[Token(Token = "0x6001516")]
		public TaskRunner([Optional] Action<int> taskCompleted)
		{
		}

		[Token(Token = "0x6001517")]
		public void StartTasks(IEnumerable<T> tasks)
		{
		}

		[Token(Token = "0x6001518")]
		public int MoveToNextTask()
		{
			return default(int);
		}

		[Token(Token = "0x6001519")]
		public void CancelCurrentTasks()
		{
		}

		[Token(Token = "0x600151A")]
		public void Update()
		{
		}

		[Token(Token = "0x600151B")]
		[AsyncStateMachine(typeof(TaskRunner<>.<Initialize>d__19))]
		private static void Initialize(TaskInstance<T> taskInstance, CancellationToken cancellationToken)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000402")]
	public class ControllerElement
	{
		[Token(Token = "0x4001436")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string Id;

		[Token(Token = "0x4001437")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MeshRenderer MeshRenderer;

		[Token(Token = "0x4001438")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Quaternion ControllerLocalRotation;

		[Token(Token = "0x6001521")]
		[Address(RVA = "0x15F624C", Offset = "0x15F624C", VA = "0x15F624C")]
		public ControllerElement()
		{
		}
	}
	[Token(Token = "0x2000403")]
	public class ControllerElementReferences : MonoBehaviour
	{
		[Token(Token = "0x4001439")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private ControllerElement[] _controllerElements;

		[Token(Token = "0x17000367")]
		public ControllerElement[] ControllerElements
		{
			[Token(Token = "0x6001522")]
			[Address(RVA = "0x15F6254", Offset = "0x15F6254", VA = "0x15F6254")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001523")]
		[Address(RVA = "0x15F625C", Offset = "0x15F625C", VA = "0x15F625C")]
		public ControllerElementReferences()
		{
		}
	}
	[Token(Token = "0x2000404")]
	public class TutorialAudioHandler : MonoBehaviour
	{
		[Token(Token = "0x400143A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x400143B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private TutorialDubbingDatabase _tutorialDubbingDatabase;

		[Token(Token = "0x400143C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float _fadeDuration;

		[Token(Token = "0x400143D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float _volume;

		[Token(Token = "0x400143E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private ulong _delay;

		[Token(Token = "0x400143F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TweenerCore<float, float, FloatOptions> _fadeOutTweener;

		[Token(Token = "0x4001440")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private TweenerCore<float, float, FloatOptions> _fadeInTweener;

		[Token(Token = "0x6001524")]
		[Address(RVA = "0x15F6264", Offset = "0x15F6264", VA = "0x15F6264")]
		public void PlayVoiceOver(string voiceOverId, LocalizationLanguage languageId)
		{
		}

		[Token(Token = "0x6001525")]
		[Address(RVA = "0x15F6470", Offset = "0x15F6470", VA = "0x15F6470")]
		public void StopVoiceOver()
		{
		}

		[Token(Token = "0x6001526")]
		[Address(RVA = "0x15F6310", Offset = "0x15F6310", VA = "0x15F6310")]
		private void PlayVoiceOver(AudioClip voiceOver)
		{
		}

		[Token(Token = "0x6001527")]
		[Address(RVA = "0x15F6544", Offset = "0x15F6544", VA = "0x15F6544")]
		private void StartPlayingClip(AudioClip voiceOverClip)
		{
		}

		[Token(Token = "0x6001528")]
		[Address(RVA = "0x15F65A0", Offset = "0x15F65A0", VA = "0x15F65A0")]
		public TutorialAudioHandler()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000406")]
	public class MotionControllerReference
	{
		[Token(Token = "0x4001443")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string Id;

		[Token(Token = "0x4001444")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ControllerElementReferences ControllerElementReferences;

		[Token(Token = "0x600152C")]
		[Address(RVA = "0x15F6610", Offset = "0x15F6610", VA = "0x15F6610")]
		public MotionControllerReference()
		{
		}
	}
	[Token(Token = "0x2000407")]
	[CreateAssetMenu]
	public class TutorialControllersReference : ScriptableObject
	{
		[Token(Token = "0x4001445")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MotionControllerReference[] _motionControllerReferences;

		[Token(Token = "0x17000368")]
		public MotionControllerReference[] MotionControllerReferences
		{
			[Token(Token = "0x600152D")]
			[Address(RVA = "0x15F6618", Offset = "0x15F6618", VA = "0x15F6618")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600152E")]
		[Address(RVA = "0x15F6620", Offset = "0x15F6620", VA = "0x15F6620")]
		public TutorialControllersReference()
		{
		}
	}
	[Token(Token = "0x2000408")]
	public class TutorialPanelHandler : MonoBehaviour
	{
		[Token(Token = "0x4001446")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TextMeshProUGUI _tutorialContentHeaderText;

		[Token(Token = "0x4001447")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private TextMeshProUGUI _tutorialContentText;

		[Token(Token = "0x4001448")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private TextMeshProUGUI _tutorialIndexText;

		[Token(Token = "0x4001449")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Button _tutorialSkipButton;

		[Token(Token = "0x400144A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Button _tutorialCloseButton;

		[Token(Token = "0x400144B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Button _tutorialCloseMonitorButton;

		[Token(Token = "0x400144C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Button _tutorialFontPlusButton;

		[Token(Token = "0x400144D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Button _tutorialFontMinusButton;

		[Token(Token = "0x400144E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Image _taskCompletedImage;

		[Token(Token = "0x17000369")]
		public TextMeshProUGUI TutorialContentHeaderText
		{
			[Token(Token = "0x600152F")]
			[Address(RVA = "0x15F6628", Offset = "0x15F6628", VA = "0x15F6628")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700036A")]
		public TextMeshProUGUI TutorialContentText
		{
			[Token(Token = "0x6001530")]
			[Address(RVA = "0x15F6630", Offset = "0x15F6630", VA = "0x15F6630")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700036B")]
		public TextMeshProUGUI TutorialIndexText
		{
			[Token(Token = "0x6001531")]
			[Address(RVA = "0x15F6638", Offset = "0x15F6638", VA = "0x15F6638")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700036C")]
		public Button TutorialSkipButton
		{
			[Token(Token = "0x6001532")]
			[Address(RVA = "0x15F6640", Offset = "0x15F6640", VA = "0x15F6640")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700036D")]
		public Button TutorialCloseButton
		{
			[Token(Token = "0x6001533")]
			[Address(RVA = "0x15F6648", Offset = "0x15F6648", VA = "0x15F6648")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700036E")]
		public Button TutorialCloseMonitorButton
		{
			[Token(Token = "0x6001534")]
			[Address(RVA = "0x15F6650", Offset = "0x15F6650", VA = "0x15F6650")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700036F")]
		public Button TutorialFontPlusButton
		{
			[Token(Token = "0x6001535")]
			[Address(RVA = "0x15F6658", Offset = "0x15F6658", VA = "0x15F6658")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000370")]
		public Button TutorialFontMinusButton
		{
			[Token(Token = "0x6001536")]
			[Address(RVA = "0x15F6660", Offset = "0x15F6660", VA = "0x15F6660")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000371")]
		public Image TaskCompletedImage
		{
			[Token(Token = "0x6001537")]
			[Address(RVA = "0x15F6668", Offset = "0x15F6668", VA = "0x15F6668")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001538")]
		[Address(RVA = "0x15F6670", Offset = "0x15F6670", VA = "0x15F6670")]
		private void Start()
		{
		}

		[Token(Token = "0x6001539")]
		[Address(RVA = "0x15F6760", Offset = "0x15F6760", VA = "0x15F6760")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600153A")]
		[Address(RVA = "0x15F6850", Offset = "0x15F6850", VA = "0x15F6850")]
		private void OnFontPlusClicked()
		{
		}

		[Token(Token = "0x600153B")]
		[Address(RVA = "0x15F6890", Offset = "0x15F6890", VA = "0x15F6890")]
		private void OnFontMinusClicked()
		{
		}

		[Token(Token = "0x600153C")]
		[Address(RVA = "0x15F68CC", Offset = "0x15F68CC", VA = "0x15F68CC")]
		public TutorialPanelHandler()
		{
		}
	}
	[Token(Token = "0x2000409")]
	public class TutorialPresenter : MonoBehaviour
	{
		[StructLayout(3)]
		[Token(Token = "0x200040A")]
		[CompilerGenerated]
		private struct <OnTaskCompleted>d__17 : IAsyncStateMachine
		{
			[Token(Token = "0x4001459")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x400145A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x400145B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int value;

			[Token(Token = "0x400145C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public TutorialPresenter <>4__this;

			[Token(Token = "0x400145D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x6001551")]
			[Address(RVA = "0x15F94B8", Offset = "0x15F94B8", VA = "0x15F94B8", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001552")]
			[Address(RVA = "0x15F98CC", Offset = "0x15F98CC", VA = "0x15F98CC", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200040D")]
		[CompilerGenerated]
		private struct <CancelTutorial>d__23 : IAsyncStateMachine
		{
			[Token(Token = "0x4001463")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001464")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4001465")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public TutorialPresenter <>4__this;

			[Token(Token = "0x4001466")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x6001559")]
			[Address(RVA = "0x15F9AF0", Offset = "0x15F9AF0", VA = "0x15F9AF0", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x600155A")]
			[Address(RVA = "0x15FA0E0", Offset = "0x15FA0E0", VA = "0x15FA0E0", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x400144F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TutorialPanelHandler _tutorialPanelHandler;

		[Token(Token = "0x4001450")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private TutorialReferences _tutorialReferences;

		[Token(Token = "0x4001451")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AudioClip _taskCompletedAudioClip;

		[Token(Token = "0x4001452")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private TutorialAudioHandler _tutorialAudioHandler;

		[Token(Token = "0x4001453")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TaskRunner<TutorialTask> _taskRunner;

		[Token(Token = "0x4001454")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int _lastTaskIndex;

		[Token(Token = "0x4001455")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private string _lastTaskText;

		[Token(Token = "0x4001456")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Sequence _taskCompletedSequence;

		[Token(Token = "0x4001457")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private IDisposable _disposable;

		[Token(Token = "0x17000372")]
		public int CurrentLecture
		{
			[Token(Token = "0x600153D")]
			[Address(RVA = "0x15F68D4", Offset = "0x15F68D4", VA = "0x15F68D4")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600153E")]
			[Address(RVA = "0x15F68DC", Offset = "0x15F68DC", VA = "0x15F68DC")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x600153F")]
		[Address(RVA = "0x15F68E4", Offset = "0x15F68E4", VA = "0x15F68E4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001540")]
		[Address(RVA = "0x15F69D8", Offset = "0x15F69D8", VA = "0x15F69D8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001541")]
		[Address(RVA = "0x15F6B34", Offset = "0x15F6B34", VA = "0x15F6B34")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001542")]
		[Address(RVA = "0x15F6D38", Offset = "0x15F6D38", VA = "0x15F6D38")]
		private void Update()
		{
		}

		[Token(Token = "0x6001543")]
		[Address(RVA = "0x15F7A80", Offset = "0x15F7A80", VA = "0x15F7A80")]
		[AsyncStateMachine(typeof(<OnTaskCompleted>d__17))]
		private void OnTaskCompleted(int value)
		{
		}

		[Token(Token = "0x6001544")]
		[Address(RVA = "0x15F7B40", Offset = "0x15F7B40", VA = "0x15F7B40")]
		private void OnSkipClicked()
		{
		}

		[Token(Token = "0x6001545")]
		[Address(RVA = "0x15F7B90", Offset = "0x15F7B90", VA = "0x15F7B90")]
		private void OnCloseClicked()
		{
		}

		[Token(Token = "0x6001546")]
		[Address(RVA = "0x15F7C4C", Offset = "0x15F7C4C", VA = "0x15F7C4C")]
		private void OnCloseMonitorClicked()
		{
		}

		[Token(Token = "0x6001547")]
		[Address(RVA = "0x15F6FB8", Offset = "0x15F6FB8", VA = "0x15F6FB8")]
		private void OnCurrentTaskIndexChanged(int index)
		{
		}

		[Token(Token = "0x6001548")]
		[Address(RVA = "0x15F78DC", Offset = "0x15F78DC", VA = "0x15F78DC")]
		private void OnCurrentTaskTextChanged(string value, int index)
		{
		}

		[Token(Token = "0x6001549")]
		[Address(RVA = "0x15F7B94", Offset = "0x15F7B94", VA = "0x15F7B94")]
		[AsyncStateMachine(typeof(<CancelTutorial>d__23))]
		public void CancelTutorial()
		{
		}

		[Token(Token = "0x600154A")]
		[Address(RVA = "0x15F7F9C", Offset = "0x15F7F9C", VA = "0x15F7F9C")]
		public void StartFromLecture(int id)
		{
		}

		[Token(Token = "0x600154B")]
		[Address(RVA = "0x15F81E0", Offset = "0x15F81E0", VA = "0x15F81E0")]
		public static List<int> GetCompletedLectures()
		{
			return null;
		}

		[Token(Token = "0x600154C")]
		[Address(RVA = "0x15F7E6C", Offset = "0x15F7E6C", VA = "0x15F7E6C")]
		private static void SaveLectureCompleted(int id)
		{
		}

		[Token(Token = "0x600154D")]
		[Address(RVA = "0x15F8394", Offset = "0x15F8394", VA = "0x15F8394")]
		public TutorialPresenter()
		{
		}
	}
	[Token(Token = "0x200040E")]
	public class TutorialReferences : MonoBehaviour
	{
		[Token(Token = "0x4001467")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private NetworkModuleProviderFactory _moduleProviderFactory;

		[Token(Token = "0x4001468")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private PartsPanel _partsPanel;

		[Token(Token = "0x4001469")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private LabelHandler _labelHandler;

		[Token(Token = "0x400146A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private HighlightController _highlightController;

		[Token(Token = "0x400146B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private TutorialTasks.Lecture1References _lecture1References;

		[Token(Token = "0x400146C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private TutorialTasks.Lecture2References _lecture2References;

		[Token(Token = "0x400146D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private HandMenuReferences _handMenuReferences;

		[Token(Token = "0x400146E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private InfomonitorHandler _infomonitorHandler;

		[Token(Token = "0x400146F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private UiElementDatabase _uiElementDatabase;

		[Token(Token = "0x4001470")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private InteractionModelBehaviour _interactionModelBehaviour;

		[Token(Token = "0x4001471")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Transform _playerPositionAfterTutorial;

		[Token(Token = "0x4001472")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private TutorialControllersReference _tutorialControllersReference;

		[Token(Token = "0x4001473")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private MRTKHandMenuHandler _mrtkHandMenuHandler;

		[Token(Token = "0x4001474")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private FunctionStackBehaviour _functionStackBehaviour;

		[Token(Token = "0x4001475")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private TutorialTasks.MotionControllerDisplayParents _motionControllerDisplayParents;

		[Token(Token = "0x4001476")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private MRTKInputSettings _mrtkInputSettings;

		[Token(Token = "0x4001477")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private ContextPanelHandler _tutorialPanelHandler;

		[Token(Token = "0x4001478")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private TutorialAudioHandler _tutorialAudioHandler;

		[Token(Token = "0x4001479")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private StructureLayerUiReference _structureLayerUiPrefab;

		[Token(Token = "0x17000373")]
		public NetworkModuleProviderFactory ModuleProviderFactory
		{
			[Token(Token = "0x600155B")]
			[Address(RVA = "0x15FA0EC", Offset = "0x15FA0EC", VA = "0x15FA0EC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000374")]
		public PartsPanel PartsPanel
		{
			[Token(Token = "0x600155C")]
			[Address(RVA = "0x15FA0F4", Offset = "0x15FA0F4", VA = "0x15FA0F4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000375")]
		public LabelHandler LabelHandler
		{
			[Token(Token = "0x600155D")]
			[Address(RVA = "0x15FA0FC", Offset = "0x15FA0FC", VA = "0x15FA0FC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000376")]
		public HighlightController HighlightController
		{
			[Token(Token = "0x600155E")]
			[Address(RVA = "0x15FA104", Offset = "0x15FA104", VA = "0x15FA104")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000377")]
		public TutorialTasks.Lecture1References Lecture1References
		{
			[Token(Token = "0x600155F")]
			[Address(RVA = "0x15FA10C", Offset = "0x15FA10C", VA = "0x15FA10C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000378")]
		public TutorialTasks.Lecture2References Lecture2References
		{
			[Token(Token = "0x6001560")]
			[Address(RVA = "0x15FA114", Offset = "0x15FA114", VA = "0x15FA114")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000379")]
		public HandMenuReferences HandMenuReferences
		{
			[Token(Token = "0x6001561")]
			[Address(RVA = "0x15FA11C", Offset = "0x15FA11C", VA = "0x15FA11C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700037A")]
		public InfomonitorHandler InfoMonitorHandler
		{
			[Token(Token = "0x6001562")]
			[Address(RVA = "0x15FA124", Offset = "0x15FA124", VA = "0x15FA124")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700037B")]
		public UiElementDatabase UiElementDatabase
		{
			[Token(Token = "0x6001563")]
			[Address(RVA = "0x15FA12C", Offset = "0x15FA12C", VA = "0x15FA12C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700037C")]
		public InteractionModel InteractionModel
		{
			[Token(Token = "0x6001564")]
			[Address(RVA = "0x15FA134", Offset = "0x15FA134", VA = "0x15FA134")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700037D")]
		public Transform PlayerPositionAfterTutorial
		{
			[Token(Token = "0x6001565")]
			[Address(RVA = "0x15FA1B0", Offset = "0x15FA1B0", VA = "0x15FA1B0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700037E")]
		public TutorialTasks.MotionControllerDisplayParents MotionControllerDisplayParents
		{
			[Token(Token = "0x6001566")]
			[Address(RVA = "0x15FA1B8", Offset = "0x15FA1B8", VA = "0x15FA1B8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700037F")]
		public MRTKHandMenuHandler MRTKHandMenuHandler
		{
			[Token(Token = "0x6001567")]
			[Address(RVA = "0x15FA1C0", Offset = "0x15FA1C0", VA = "0x15FA1C0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000380")]
		public FunctionStackBehaviour FunctionStackBehaviour
		{
			[Token(Token = "0x6001568")]
			[Address(RVA = "0x15FA1C8", Offset = "0x15FA1C8", VA = "0x15FA1C8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000381")]
		public TutorialControllersReference TutorialControllersReference
		{
			[Token(Token = "0x6001569")]
			[Address(RVA = "0x15FA1D0", Offset = "0x15FA1D0", VA = "0x15FA1D0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000382")]
		public MRTKInputSettings MRTKInputSettings
		{
			[Token(Token = "0x600156A")]
			[Address(RVA = "0x15FA1D8", Offset = "0x15FA1D8", VA = "0x15FA1D8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000383")]
		public ContextPanelHandler TutorialPanelHandler
		{
			[Token(Token = "0x600156B")]
			[Address(RVA = "0x15FA1E0", Offset = "0x15FA1E0", VA = "0x15FA1E0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000384")]
		public TutorialAudioHandler TutorialAudioHandler
		{
			[Token(Token = "0x600156C")]
			[Address(RVA = "0x15FA1E8", Offset = "0x15FA1E8", VA = "0x15FA1E8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000385")]
		public StructureLayerUiReference StructureLayerUiReference
		{
			[Token(Token = "0x600156D")]
			[Address(RVA = "0x15FA1F0", Offset = "0x15FA1F0", VA = "0x15FA1F0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600156E")]
		[Address(RVA = "0x15FA1F8", Offset = "0x15FA1F8", VA = "0x15FA1F8")]
		public TutorialReferences()
		{
		}
	}
	[Token(Token = "0x200040F")]
	public class TutorialTask : ITask
	{
		[Token(Token = "0x400147A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string Id;

		[Token(Token = "0x400147B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Func<CancellationToken, Task> Initialize;

		[Token(Token = "0x400147C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Func<bool> Update;

		[Token(Token = "0x400147D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Func<string> GetText;

		[Token(Token = "0x600156F")]
		[Address(RVA = "0x15FA200", Offset = "0x15FA200", VA = "0x15FA200")]
		public TutorialTask(string id)
		{
		}

		[Token(Token = "0x6001570")]
		[Address(RVA = "0x15FA458", Offset = "0x15FA458", VA = "0x15FA458", Slot = "4")]
		private Task VR.Tutorial.ITask.Initialize(CancellationToken cancellationToken)
		{
			return null;
		}

		[Token(Token = "0x6001571")]
		[Address(RVA = "0x15FA47C", Offset = "0x15FA47C", VA = "0x15FA47C", Slot = "5")]
		private bool VR.Tutorial.ITask.Update()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000411")]
	public static class TutorialTasks
	{
		[Serializable]
		[Token(Token = "0x2000412")]
		public class Lecture1References
		{
			[Token(Token = "0x4001484")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform PreTeleportPosition;

			[Token(Token = "0x600158D")]
			[Address(RVA = "0x1603B04", Offset = "0x1603B04", VA = "0x1603B04")]
			public Lecture1References()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000413")]
		public class Lecture2References
		{
			[Token(Token = "0x4001485")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int LabelDisplayCount;

			[Token(Token = "0x600158E")]
			[Address(RVA = "0x1603B0C", Offset = "0x1603B0C", VA = "0x1603B0C")]
			public Lecture2References()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000414")]
		public class Lecture3References
		{
			[Token(Token = "0x600158F")]
			[Address(RVA = "0x1603B1C", Offset = "0x1603B1C", VA = "0x1603B1C")]
			public Lecture3References()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000415")]
		public class Lecture4References
		{
			[Token(Token = "0x6001590")]
			[Address(RVA = "0x1603B24", Offset = "0x1603B24", VA = "0x1603B24")]
			public Lecture4References()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000416")]
		public class Lecture5References
		{
			[Token(Token = "0x6001591")]
			[Address(RVA = "0x1603B2C", Offset = "0x1603B2C", VA = "0x1603B2C")]
			public Lecture5References()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000417")]
		public class MotionControllerDisplayParents
		{
			[Token(Token = "0x4001486")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject Left;

			[Token(Token = "0x4001487")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public GameObject Right;

			[Token(Token = "0x6001592")]
			[Address(RVA = "0x1603B34", Offset = "0x1603B34", VA = "0x1603B34")]
			public MotionControllerDisplayParents()
			{
			}
		}

		[Token(Token = "0x2000418")]
		public class MotionControllerDisplayInstances
		{
			[Token(Token = "0x4001488")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ControllerElementReferences Left;

			[Token(Token = "0x4001489")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public ControllerElementReferences Right;

			[Token(Token = "0x6001593")]
			[Address(RVA = "0x16025F4", Offset = "0x16025F4", VA = "0x16025F4")]
			public MotionControllerDisplayInstances()
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000457")]
		[CompilerGenerated]
		private struct <ManipulateToPosition>d__12 : IAsyncStateMachine
		{
			[Token(Token = "0x40015C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40015C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x40015C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public IGrabable item;

			[Token(Token = "0x40015C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vector3 position;

			[Token(Token = "0x40015CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x60016A3")]
			[Address(RVA = "0x161C43C", Offset = "0x161C43C", VA = "0x161C43C", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60016A4")]
			[Address(RVA = "0x161C7B8", Offset = "0x161C7B8", VA = "0x161C7B8", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000458")]
		[CompilerGenerated]
		private struct <FinishTutorial>d__14 : IAsyncStateMachine
		{
			[Token(Token = "0x40015CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40015CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x40015CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public IPlayerHandler playerHandler;

			[Token(Token = "0x40015CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public TutorialReferences tutorialReferences;

			[Token(Token = "0x40015CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x60016A5")]
			[Address(RVA = "0x161C7C4", Offset = "0x161C7C4", VA = "0x161C7C4", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60016A6")]
			[Address(RVA = "0x161CEF4", Offset = "0x161CEF4", VA = "0x161CEF4", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x200045A")]
		[CompilerGenerated]
		private sealed class <Yield>d__19<T1> : IEnumerable<T1>, IEnumerable, IEnumerator<T1>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40015D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x40015D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private T1 <>2__current;

			[Token(Token = "0x40015D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>l__initialThreadId;

			[Token(Token = "0x40015D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private T1 item;

			[Token(Token = "0x40015D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T1 <>3__item;

			[Token(Token = "0x17000386")]
			private T1 System.Collections.Generic.IEnumerator<T1>.Current
			{
				[Token(Token = "0x60016AC")]
				[DebuggerHidden]
				get
				{
					return (T1)null;
				}
			}

			[Token(Token = "0x17000387")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60016AE")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60016A9")]
			[DebuggerHidden]
			public <Yield>d__19(int <>1__state)
			{
			}

			[Token(Token = "0x60016AA")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60016AB")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60016AD")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x60016AF")]
			[DebuggerHidden]
			private IEnumerator<T1> System.Collections.Generic.IEnumerable<T1>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x60016B0")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x4001482")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static System.Collections.Generic.IReadOnlyDictionary<int, Func<TutorialReferences, IPlayerHandler, TutorialTask[]>> Lectures;

		[Token(Token = "0x4001483")]
		private const CompareOptions ControllerCompareOptions = CompareOptions.IgnoreCase | CompareOptions.IgnoreSymbols;

		[Token(Token = "0x6001577")]
		[Address(RVA = "0x15FA5B0", Offset = "0x15FA5B0", VA = "0x15FA5B0")]
		public static TutorialTask[] GetLecture1(TutorialReferences tutorialReferences, IPlayerHandler playerHandler)
		{
			return null;
		}

		[Token(Token = "0x6001578")]
		[Address(RVA = "0x15FBE60", Offset = "0x15FBE60", VA = "0x15FBE60")]
		public static TutorialTask[] GetLecture2(TutorialReferences tutorialReferences, IPlayerHandler playerHandler)
		{
			return null;
		}

		[Token(Token = "0x6001579")]
		[Address(RVA = "0x15FD4E4", Offset = "0x15FD4E4", VA = "0x15FD4E4")]
		public static TutorialTask[] GetLectureInteractionUi(TutorialReferences tutorialReferences, IPlayerHandler playerHandler)
		{
			return null;
		}

		[Token(Token = "0x600157A")]
		[Address(RVA = "0x15FE900", Offset = "0x15FE900", VA = "0x15FE900")]
		public static TutorialTask[] GetLecture3(TutorialReferences tutorialReferences, IPlayerHandler playerHandler)
		{
			return null;
		}

		[Token(Token = "0x600157B")]
		[Address(RVA = "0x15FF3B8", Offset = "0x15FF3B8", VA = "0x15FF3B8")]
		public static TutorialTask[] GetLecture4(TutorialReferences tutorialReferences, IPlayerHandler playerHandler)
		{
			return null;
		}

		[Token(Token = "0x600157C")]
		[Address(RVA = "0x16005D4", Offset = "0x16005D4", VA = "0x16005D4")]
		public static TutorialTask[] GetLecture5(TutorialReferences tutorialReferences, IPlayerHandler playerHandler)
		{
			return null;
		}

		[Token(Token = "0x600157D")]
		[Address(RVA = "0x1601AE8", Offset = "0x1601AE8", VA = "0x1601AE8")]
		[AsyncStateMachine(typeof(<ManipulateToPosition>d__12))]
		public static Task ManipulateToPosition(this IGrabable item, Vector3 position)
		{
			return null;
		}

		[Token(Token = "0x600157E")]
		[Address(RVA = "0x1601BF8", Offset = "0x1601BF8", VA = "0x1601BF8")]
		public static CompositeDisposable InitializeTutorial(this TutorialReferences tutorialReferences)
		{
			return null;
		}

		[Token(Token = "0x600157F")]
		[Address(RVA = "0x15F9FDC", Offset = "0x15F9FDC", VA = "0x15F9FDC")]
		[AsyncStateMachine(typeof(<FinishTutorial>d__14))]
		public static Task FinishTutorial(this TutorialReferences tutorialReferences, IPlayerHandler playerHandler)
		{
			return null;
		}

		[Token(Token = "0x6001580")]
		[Address(RVA = "0x1601DBC", Offset = "0x1601DBC", VA = "0x1601DBC")]
		public static bool IsNearPosition(this IPlayerHandler playerHandler, Vector3 position, float threshold)
		{
			return default(bool);
		}

		[Token(Token = "0x6001581")]
		[Address(RVA = "0x1601F68", Offset = "0x1601F68", VA = "0x1601F68")]
		public static bool IsNearPosition(Vector3 position1, Vector3 position2, float threshold)
		{
			return default(bool);
		}

		[Token(Token = "0x6001582")]
		[Address(RVA = "0x1601FF8", Offset = "0x1601FF8", VA = "0x1601FF8")]
		public static void SetInteractionEnabled(this PartsPanel partsPanel, bool value)
		{
		}

		[Token(Token = "0x6001583")]
		[Address(RVA = "0x160244C", Offset = "0x160244C", VA = "0x160244C")]
		public static ClickableItemBehaviour GetClickableItemBehaviour(this PartsPanel partsPanel, DatabaseType databaseType, LocationType locationType)
		{
			return null;
		}

		[Token(Token = "0x6001584")]
		[IteratorStateMachine(typeof(<Yield>d__19<>))]
		public static IEnumerable<T1> Yield<T1>(T1 item)
		{
			return null;
		}

		[Token(Token = "0x6001585")]
		[Address(RVA = "0x15FB4D0", Offset = "0x15FB4D0", VA = "0x15FB4D0")]
		public static MotionControllerDisplayInstances InitMotionControllerDisplay(this TutorialControllersReference tutorialControllersReference, MotionControllerDisplayParents motionControllerDisplayParents)
		{
			return null;
		}

		[Token(Token = "0x6001586")]
		[Address(RVA = "0x16025FC", Offset = "0x16025FC", VA = "0x16025FC")]
		public static void HighlightElements(this MotionControllerDisplayInstances instances, params (VR.Input.Handedness handedness, string elementId)[] elements)
		{
		}

		[Token(Token = "0x6001587")]
		[Address(RVA = "0x1602AB8", Offset = "0x1602AB8", VA = "0x1602AB8")]
		public static void HighlightElements(this ControllerElementReferences references, HashSet<string> elementIds)
		{
		}

		[Token(Token = "0x6001588")]
		[Address(RVA = "0x1602FD8", Offset = "0x1602FD8", VA = "0x1602FD8")]
		public static Quaternion Average(this IReadOnlyList<Quaternion> values)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6001589")]
		[Address(RVA = "0x160317C", Offset = "0x160317C", VA = "0x160317C")]
		public static void SetActive(this MotionControllerDisplayInstances instances, bool value)
		{
		}

		[Token(Token = "0x600158A")]
		[Address(RVA = "0x1603264", Offset = "0x1603264", VA = "0x1603264")]
		public static List<(VR.Input.Handedness, string)> GetValidControllerElementsForActions(params MixedRealityInputAction[] actions)
		{
			return null;
		}

		[Token(Token = "0x600158B")]
		[Address(RVA = "0x1603754", Offset = "0x1603754", VA = "0x1603754")]
		public static string GetElementId(this DeviceInputType deviceInputType)
		{
			return null;
		}
	}
}
namespace VR.Networking
{
	[Token(Token = "0x2000460")]
	public class AnatomyManipulationObjectProvider : ManipulationObjectProvider<SerializedObjectInfo>
	{
		[Token(Token = "0x40015DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private CompositeObjectResolver _compositeObjectResolver;

		[Token(Token = "0x60016BD")]
		[Address(RVA = "0x161D4C8", Offset = "0x161D4C8", VA = "0x161D4C8", Slot = "4")]
		public override GameObject GetManipulationObject(SerializedObjectInfo serializedObjectInfo)
		{
			return null;
		}

		[Token(Token = "0x60016BE")]
		[Address(RVA = "0x161D790", Offset = "0x161D790", VA = "0x161D790")]
		public AnatomyManipulationObjectProvider()
		{
		}
	}
	[Token(Token = "0x2000461")]
	public class AvatarVisibilityHandler : MonoBehaviour
	{
		[Token(Token = "0x40015DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AnatomyNetworkPlayerHandler _pitevnaPlayerHandler;

		[Token(Token = "0x40015DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject[] _gameObjects;

		[Token(Token = "0x40015E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private global::Networking.Components.NetworkTransformBase[] _networkTransforms;

		[Token(Token = "0x40015E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private IDisposable _disposable;

		[Token(Token = "0x17000388")]
		public AnatomyNetworkPlayerHandler PitevnaNetworkPlayerHandler
		{
			[Token(Token = "0x60016BF")]
			[Address(RVA = "0x161D7D8", Offset = "0x161D7D8", VA = "0x161D7D8")]
			get
			{
				return null;
			}
			[Token(Token = "0x60016C0")]
			[Address(RVA = "0x161D7E0", Offset = "0x161D7E0", VA = "0x161D7E0")]
			set
			{
			}
		}

		[Token(Token = "0x60016C1")]
		[Address(RVA = "0x161D7E8", Offset = "0x161D7E8", VA = "0x161D7E8")]
		private void Start()
		{
		}

		[Token(Token = "0x60016C2")]
		[Address(RVA = "0x161D974", Offset = "0x161D974", VA = "0x161D974")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60016C3")]
		[Address(RVA = "0x161DA1C", Offset = "0x161DA1C", VA = "0x161DA1C")]
		private void OnAvatarEnabledChanged((bool Value, AnatomyNetworkPlayerHandler PitevnaPlayerHandler) tuple)
		{
		}

		[Token(Token = "0x60016C4")]
		[Address(RVA = "0x161DB80", Offset = "0x161DB80", VA = "0x161DB80")]
		public AvatarVisibilityHandler()
		{
		}
	}
	[Token(Token = "0x2000462")]
	public class CachedNetworkConnectionComponentResolver<T>
	{
		[Token(Token = "0x40015E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly Func<T, bool> _isValid;

		[Token(Token = "0x40015E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly Dictionary<int, T> _objects;

		[Token(Token = "0x60016C6")]
		public CachedNetworkConnectionComponentResolver([Optional] Func<T, bool> isValid)
		{
		}

		[Token(Token = "0x60016C7")]
		public T Resolve(NetworkConnection networkConnection)
		{
			return (T)null;
		}
	}
	[Token(Token = "0x2000463")]
	public class CompositeObjectResolver : MonoBehaviour
	{
		[Token(Token = "0x40015E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private NetworkModuleProviderFactory _networkModuleProviderFactory;

		[Token(Token = "0x40015E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly IResolver<object, byte[]>[] _resolvers;

		[Token(Token = "0x17000389")]
		public IReadOnlyList<IResolver<object, byte[]>> Resolvers
		{
			[Token(Token = "0x60016C8")]
			[Address(RVA = "0x161DBF8", Offset = "0x161DBF8", VA = "0x161DBF8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60016C9")]
		[Address(RVA = "0x161DC00", Offset = "0x161DC00", VA = "0x161DC00")]
		private void Awake()
		{
		}

		[Token(Token = "0x60016CA")]
		[Address(RVA = "0x161E504", Offset = "0x161E504", VA = "0x161E504")]
		public CompositeObjectResolver()
		{
		}
	}
	[Token(Token = "0x2000466")]
	public static class ResolverExtensions
	{
		[Token(Token = "0x60016DC")]
		[Address(RVA = "0x161F6BC", Offset = "0x161F6BC", VA = "0x161F6BC")]
		public static bool TryGetId(this IReadOnlyList<IResolver<object, byte[]>> resolvers, object obj, out byte resolverId, out byte[] objectId)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000467")]
	public class LazyFactoryResolver<TObj, TId> : IResolver<object, byte[]>
	{
		[Token(Token = "0x40015EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IConverter<TId, byte[]> _converter;

		[Token(Token = "0x40015EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly LazyWithValidityCheck<IResolver<TObj, TId>> _resolver;

		[Token(Token = "0x60016DD")]
		public LazyFactoryResolver(Func<IResolver<TObj, TId>> getResolver, IConverter<TId, byte[]> converter)
		{
		}

		[Token(Token = "0x60016DE")]
		public byte[] GetId(object obj)
		{
			return null;
		}

		[Token(Token = "0x60016DF")]
		public object ResolveFromId(byte[] obj)
		{
			return null;
		}
	}
	[Token(Token = "0x2000468")]
	public interface IConverter<TIn, TOut>
	{
		[Token(Token = "0x60016E0")]
		TOut ConvertTo(TIn obj);

		[Token(Token = "0x60016E1")]
		TIn ConvertFrom(TOut obj);
	}
	[Token(Token = "0x2000469")]
	public class Converter<TIn, TOut> : IConverter<TIn, TOut>
	{
		[Token(Token = "0x40015ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly Func<TIn, TOut> _to;

		[Token(Token = "0x40015EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly Func<TOut, TIn> _from;

		[Token(Token = "0x60016E2")]
		public Converter(Func<TIn, TOut> to, Func<TOut, TIn> from)
		{
		}

		[Token(Token = "0x60016E3")]
		public TOut ConvertTo(TIn obj)
		{
			return (TOut)null;
		}

		[Token(Token = "0x60016E4")]
		public TIn ConvertFrom(TOut obj)
		{
			return (TIn)null;
		}
	}
	[Token(Token = "0x200046A")]
	public class ByteConverter
	{
		[Token(Token = "0x40015EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Converter<uint, byte[]> UInt32;

		[Token(Token = "0x40015F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly Converter<int, byte[]> Int32;

		[Token(Token = "0x40015F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly Converter<string, byte[]> UTF8String;

		[Token(Token = "0x40015F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static readonly Converter<byte, byte[]> Byte;

		[Token(Token = "0x60016E5")]
		[Address(RVA = "0x161F8CC", Offset = "0x161F8CC", VA = "0x161F8CC")]
		public ByteConverter()
		{
		}
	}
	[Token(Token = "0x200046C")]
	public abstract class ManipulationObjectProvider<T> : MonoBehaviour
	{
		[Token(Token = "0x60016ED")]
		public abstract GameObject GetManipulationObject(T obj);

		[Token(Token = "0x60016EE")]
		protected ManipulationObjectProvider()
		{
		}
	}
	[Token(Token = "0x200046D")]
	public class NetworkAnatomyModelLoader : MonoBehaviour<IModelLoaderModule<IAnatomyModel<int>>>
	{
		[Token(Token = "0x200046E")]
		private class Loader : IModelLoaderModule<IAnatomyModel<int>>
		{
			[Token(Token = "0x40015F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private readonly INetworkModuleProviderFactory _networkModuleProviderFactory;

			[Token(Token = "0x1700038A")]
			public IAnatomyModel<int> ModelCurrentlyBeingLoaded
			{
				[Token(Token = "0x60016F2")]
				[Address(RVA = "0x161FFD8", Offset = "0x161FFD8", VA = "0x161FFD8", Slot = "4")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60016F1")]
			[Address(RVA = "0x161FF60", Offset = "0x161FF60", VA = "0x161FF60")]
			public Loader(INetworkModuleProviderFactory networkModuleProviderFactory)
			{
			}

			[Token(Token = "0x60016F3")]
			[Address(RVA = "0x1620018", Offset = "0x1620018", VA = "0x1620018", Slot = "5")]
			public IAnatomyModel<int> GetModel()
			{
				return null;
			}

			[Token(Token = "0x60016F4")]
			[Address(RVA = "0x16202E4", Offset = "0x16202E4", VA = "0x16202E4", Slot = "6")]
			public Task LoadModel(IAnatomyModel<int> model, CancellationToken cancellationToken)
			{
				return null;
			}
		}

		[Token(Token = "0x40015F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private NetworkModuleProviderFactory _moduleProviderFactory;

		[Token(Token = "0x60016EF")]
		[Address(RVA = "0x161FEEC", Offset = "0x161FEEC", VA = "0x161FEEC", Slot = "4")]
		protected override IModelLoaderModule<IAnatomyModel<int>> CreateInstance()
		{
			return null;
		}

		[Token(Token = "0x60016F0")]
		[Address(RVA = "0x161FF90", Offset = "0x161FF90", VA = "0x161FF90")]
		public NetworkAnatomyModelLoader()
		{
		}
	}
	[Token(Token = "0x200046F")]
	public class NetworkAnatomyModuleProvider : NetworkBehaviour
	{
		[StructLayout(3)]
		[Token(Token = "0x2000471")]
		[CompilerGenerated]
		private struct <Start>d__5 : IAsyncStateMachine
		{
			[Token(Token = "0x40015FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40015FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x40015FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public NetworkAnatomyModuleProvider <>4__this;

			[Token(Token = "0x40015FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x60016FB")]
			[Address(RVA = "0x162056C", Offset = "0x162056C", VA = "0x162056C", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60016FC")]
			[Address(RVA = "0x16209F0", Offset = "0x16209F0", VA = "0x16209F0", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x40015F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private ModuleProviderBehaviour _singlePlayerModuleProvider;

		[Token(Token = "0x40015F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private ModuleProviderBehaviour _networkModuleProvider;

		[Token(Token = "0x40015F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private NetworkAnatomyServer _networkAnatomyServer;

		[Token(Token = "0x40015F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private readonly CancellationTokenSource _disposeCancellationTokenSource;

		[Token(Token = "0x40015FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private readonly List<IDisposable> _disposables;

		[Token(Token = "0x60016F5")]
		[Address(RVA = "0x1620324", Offset = "0x1620324", VA = "0x1620324")]
		[AsyncStateMachine(typeof(<Start>d__5))]
		private void Start()
		{
		}

		[Token(Token = "0x60016F6")]
		[Address(RVA = "0x16203DC", Offset = "0x16203DC", VA = "0x16203DC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60016F7")]
		[Address(RVA = "0x16203F8", Offset = "0x16203F8", VA = "0x16203F8")]
		public NetworkAnatomyModuleProvider()
		{
		}

		[Token(Token = "0x60016F8")]
		[Address(RVA = "0x16204BC", Offset = "0x16204BC", VA = "0x16204BC")]
		private void MirrorProcessed()
		{
		}
	}
	[Token(Token = "0x2000472")]
	public class NetworkAnatomyServer : NetworkBehaviour, ISystemsDispatcher, ILevelDispatcher, ILocationDispatcher, ISliceDispatcher, IHighlightDispatcher<int>, IHideDispatcher<int>, IDisassembleDispatcher<int>, ISubPartLayerDispatcher<int>, ISystemHighlightDispatcher, IFadeDispatcher<Database.SystemType>, ISubpartTypeDispatcher, IVrResetDispatcher, IAntModeDispatcher, IBodyRotationDispatcher, ISelectionDispatcher<int?>, ISortDispatcher, IAnimationDispatcher, IAnimationHighlightDispatcher, IAnimationHideDispatcher
	{
		[StructLayout(3)]
		[Token(Token = "0x2000474")]
		[CompilerGenerated]
		private struct <ClientLoadAnatomyModel>d__14 : IAsyncStateMachine
		{
			[Token(Token = "0x4001622")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001623")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4001624")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public NetworkAnatomyServer <>4__this;

			[Token(Token = "0x4001625")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public IAnatomyModel<int> anatomyModel;

			[Token(Token = "0x4001626")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public CancellationToken cancellationToken;

			[Token(Token = "0x4001627")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private TaskAwaiter<object> <>u__1;

			[Token(Token = "0x60017F8")]
			[Address(RVA = "0x1635680", Offset = "0x1635680", VA = "0x1635680", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60017F9")]
			[Address(RVA = "0x1635920", Offset = "0x1635920", VA = "0x1635920", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000476")]
		[CompilerGenerated]
		private struct <ClientGetAnatomyModel>d__17 : IAsyncStateMachine
		{
			[Token(Token = "0x400162A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x400162B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder<IAnatomyModel<int>> <>t__builder;

			[Token(Token = "0x400162C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public NetworkAnatomyServer <>4__this;

			[Token(Token = "0x400162D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public CancellationToken cancellationToken;

			[Token(Token = "0x400162E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TaskAwaiter<object> <>u__1;

			[Token(Token = "0x60017FC")]
			[Address(RVA = "0x1635964", Offset = "0x1635964", VA = "0x1635964", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60017FD")]
			[Address(RVA = "0x1635C18", Offset = "0x1635C18", VA = "0x1635C18", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000478")]
		[CompilerGenerated]
		private struct <SetSystemsActive>d__27 : IAsyncStateMachine
		{
			[Token(Token = "0x4001632")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001633")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4001634")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public NetworkAnatomyServer <>4__this;

			[Token(Token = "0x4001635")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public IReadOnlyCollection<Database.SystemType> systems;

			[Token(Token = "0x4001636")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public bool value;

			[Token(Token = "0x4001637")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public CancellationToken cancellationToken;

			[Token(Token = "0x4001638")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private TaskAwaiter<object> <>u__1;

			[Token(Token = "0x6001800")]
			[Address(RVA = "0x1635CE8", Offset = "0x1635CE8", VA = "0x1635CE8", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001801")]
			[Address(RVA = "0x1635F90", Offset = "0x1635F90", VA = "0x1635F90", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200047A")]
		[CompilerGenerated]
		private struct <SetDatabaseType>d__28 : IAsyncStateMachine
		{
			[Token(Token = "0x400163B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x400163C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x400163D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public NetworkAnatomyServer <>4__this;

			[Token(Token = "0x400163E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public DatabaseType databaseType;

			[Token(Token = "0x400163F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public CancellationToken cancellationToken;

			[Token(Token = "0x4001640")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private TaskAwaiter<object> <>u__1;

			[Token(Token = "0x6001804")]
			[Address(RVA = "0x1635FC4", Offset = "0x1635FC4", VA = "0x1635FC4", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001805")]
			[Address(RVA = "0x1636258", Offset = "0x1636258", VA = "0x1636258", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4001600")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private NetworkRequestHandler _networkRequestHandler;

		[Token(Token = "0x4001601")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private NetworkModuleProviderFactory _networkModuleProviderFactory;

		[Token(Token = "0x4001602")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private NetworkUiPresenter _networkUiPresenter;

		[Token(Token = "0x4001603")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private readonly CachedNetworkConnectionComponentResolver<AnatomyNetworkPlayerHandler> _networkPlayerResolver;

		[Token(Token = "0x4001604")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private readonly CancellationTokenSource _disposeCancellationTokenSource;

		[Token(Token = "0x1700038B")]
		public bool ServerModelLoadedAtLeastOnce
		{
			[Token(Token = "0x60016FF")]
			[Address(RVA = "0x1620B5C", Offset = "0x1620B5C", VA = "0x1620B5C")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001700")]
			[Address(RVA = "0x1620B64", Offset = "0x1620B64", VA = "0x1620B64")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700038C")]
		public bool Network<ServerModelLoadedAtLeastOnce>k__BackingField
		{
			[Token(Token = "0x600178B")]
			[Address(RVA = "0x162C578", Offset = "0x162C578", VA = "0x162C578")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600178C")]
			[Address(RVA = "0x1620B6C", Offset = "0x1620B6C", VA = "0x1620B6C")]
			[param: In]
			set
			{
			}
		}

		[Token(Token = "0x14000023")]
		public event Action<IAnatomyModel<int>> LoadAnatomyModelReceived
		{
			[Token(Token = "0x60016FD")]
			[Address(RVA = "0x16209FC", Offset = "0x16209FC", VA = "0x16209FC")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60016FE")]
			[Address(RVA = "0x1620AAC", Offset = "0x1620AAC", VA = "0x1620AAC")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000024")]
		public event Action<Database.SystemType[], bool> SystemsSetActive
		{
			[Token(Token = "0x600170A")]
			[Address(RVA = "0x16227F8", Offset = "0x16227F8", VA = "0x16227F8", Slot = "18")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x600170B")]
			[Address(RVA = "0x16228A8", Offset = "0x16228A8", VA = "0x16228A8", Slot = "19")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000025")]
		public event Action<DatabaseType> DatabaseTypeSet
		{
			[Token(Token = "0x600170C")]
			[Address(RVA = "0x1622958", Offset = "0x1622958", VA = "0x1622958", Slot = "20")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x600170D")]
			[Address(RVA = "0x1622A08", Offset = "0x1622A08", VA = "0x1622A08", Slot = "21")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000026")]
		public event Action<bool> AntModeSetEnabled
		{
			[Token(Token = "0x6001714")]
			[Address(RVA = "0x1623588", Offset = "0x1623588", VA = "0x1623588", Slot = "65")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001715")]
			[Address(RVA = "0x1623638", Offset = "0x1623638", VA = "0x1623638", Slot = "66")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000027")]
		public event Action<Database.SystemType, int> StructureLevelUpdated
		{
			[Token(Token = "0x6001719")]
			[Address(RVA = "0x1623C14", Offset = "0x1623C14", VA = "0x1623C14", Slot = "23")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x600171A")]
			[Address(RVA = "0x1623CC4", Offset = "0x1623CC4", VA = "0x1623CC4", Slot = "24")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000028")]
		public event Action<LocationType> LocationTypeSet
		{
			[Token(Token = "0x600171E")]
			[Address(RVA = "0x16242D0", Offset = "0x16242D0", VA = "0x16242D0", Slot = "27")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x600171F")]
			[Address(RVA = "0x1624380", Offset = "0x1624380", VA = "0x1624380", Slot = "28")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000029")]
		public event Action<bool> LocationsSetEnabled
		{
			[Token(Token = "0x6001720")]
			[Address(RVA = "0x1624430", Offset = "0x1624430", VA = "0x1624430", Slot = "29")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001721")]
			[Address(RVA = "0x16244E0", Offset = "0x16244E0", VA = "0x16244E0", Slot = "30")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400002A")]
		public event Action<bool> SliceSetEnabled
		{
			[Token(Token = "0x6001728")]
			[Address(RVA = "0x1624FE4", Offset = "0x1624FE4", VA = "0x1624FE4", Slot = "32")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001729")]
			[Address(RVA = "0x1625094", Offset = "0x1625094", VA = "0x1625094", Slot = "33")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400002B")]
		public event Action<int, bool> ObjectSetHighlighted
		{
			[Token(Token = "0x600172D")]
			[Address(RVA = "0x1625670", Offset = "0x1625670", VA = "0x1625670", Slot = "35")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x600172E")]
			[Address(RVA = "0x1625720", Offset = "0x1625720", VA = "0x1625720", Slot = "36")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400002C")]
		public event Action<Database.SystemType, bool> SystemSetHighlighted
		{
			[Token(Token = "0x6001732")]
			[Address(RVA = "0x1625D34", Offset = "0x1625D34", VA = "0x1625D34", Slot = "47")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001733")]
			[Address(RVA = "0x1625DE4", Offset = "0x1625DE4", VA = "0x1625DE4", Slot = "48")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400002D")]
		public event Action<int, bool> ObjectSetHidden
		{
			[Token(Token = "0x6001737")]
			[Address(RVA = "0x16263F8", Offset = "0x16263F8", VA = "0x16263F8", Slot = "38")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001738")]
			[Address(RVA = "0x16264A8", Offset = "0x16264A8", VA = "0x16264A8", Slot = "39")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400002E")]
		public event Action<int, DisassembleState> ObjectSetDisassembled
		{
			[Token(Token = "0x600173C")]
			[Address(RVA = "0x1626ABC", Offset = "0x1626ABC", VA = "0x1626ABC", Slot = "41")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x600173D")]
			[Address(RVA = "0x1626B6C", Offset = "0x1626B6C", VA = "0x1626B6C", Slot = "42")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400002F")]
		public event Action<int, int> ObjectSubPartLayerSet
		{
			[Token(Token = "0x6001741")]
			[Address(RVA = "0x1627178", Offset = "0x1627178", VA = "0x1627178", Slot = "44")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001742")]
			[Address(RVA = "0x1627228", Offset = "0x1627228", VA = "0x1627228", Slot = "45")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000030")]
		public event Action<Database.SystemType, bool> ObjectSetFaded
		{
			[Token(Token = "0x6001746")]
			[Address(RVA = "0x1627834", Offset = "0x1627834", VA = "0x1627834", Slot = "50")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001747")]
			[Address(RVA = "0x16278E4", Offset = "0x16278E4", VA = "0x16278E4", Slot = "51")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000031")]
		public event Action<SubpartType> SubpartTypeSet
		{
			[Token(Token = "0x600174B")]
			[Address(RVA = "0x1627EF8", Offset = "0x1627EF8", VA = "0x1627EF8", Slot = "53")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x600174C")]
			[Address(RVA = "0x1627FA8", Offset = "0x1627FA8", VA = "0x1627FA8", Slot = "54")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000032")]
		public event Action AllItemsReturned
		{
			[Token(Token = "0x6001750")]
			[Address(RVA = "0x1628580", Offset = "0x1628580", VA = "0x1628580", Slot = "58")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001751")]
			[Address(RVA = "0x1628620", Offset = "0x1628620", VA = "0x1628620", Slot = "59")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000033")]
		public event Action HighlightedItemsReset
		{
			[Token(Token = "0x6001752")]
			[Address(RVA = "0x16286C0", Offset = "0x16286C0", VA = "0x16286C0", Slot = "60")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001753")]
			[Address(RVA = "0x1628760", Offset = "0x1628760", VA = "0x1628760", Slot = "61")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000034")]
		public event Action HiddenItemsReset
		{
			[Token(Token = "0x6001754")]
			[Address(RVA = "0x1628800", Offset = "0x1628800", VA = "0x1628800", Slot = "62")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001755")]
			[Address(RVA = "0x16288A0", Offset = "0x16288A0", VA = "0x16288A0", Slot = "63")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000035")]
		public event Action<bool> BodyRotationSet
		{
			[Token(Token = "0x600175B")]
			[Address(RVA = "0x1628F48", Offset = "0x1628F48", VA = "0x1628F48", Slot = "68")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x600175C")]
			[Address(RVA = "0x1628FFC", Offset = "0x1628FFC", VA = "0x1628FFC", Slot = "69")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000036")]
		public event Action<int?> ObjectSetSelected
		{
			[Token(Token = "0x6001760")]
			[Address(RVA = "0x16295DC", Offset = "0x16295DC", VA = "0x16295DC", Slot = "71")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001761")]
			[Address(RVA = "0x1629690", Offset = "0x1629690", VA = "0x1629690", Slot = "72")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000037")]
		public event Action ItemsSorted
		{
			[Token(Token = "0x6001765")]
			[Address(RVA = "0x1629C6C", Offset = "0x1629C6C", VA = "0x1629C6C", Slot = "74")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001766")]
			[Address(RVA = "0x1629D0C", Offset = "0x1629D0C", VA = "0x1629D0C", Slot = "75")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000038")]
		public event Action<string> ActiveAnimationSet
		{
			[Token(Token = "0x600176A")]
			[Address(RVA = "0x162A24C", Offset = "0x162A24C", VA = "0x162A24C", Slot = "79")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x600176B")]
			[Address(RVA = "0x162A300", Offset = "0x162A300", VA = "0x162A300", Slot = "80")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000039")]
		public event Action<float> AnimationTimeSet
		{
			[Token(Token = "0x600176C")]
			[Address(RVA = "0x162A3B4", Offset = "0x162A3B4", VA = "0x162A3B4", Slot = "81")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x600176D")]
			[Address(RVA = "0x162A468", Offset = "0x162A468", VA = "0x162A468", Slot = "82")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400003A")]
		public event Action<float> AnimationSpeedSet
		{
			[Token(Token = "0x600176E")]
			[Address(RVA = "0x162A51C", Offset = "0x162A51C", VA = "0x162A51C", Slot = "83")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x600176F")]
			[Address(RVA = "0x162A5D0", Offset = "0x162A5D0", VA = "0x162A5D0", Slot = "84")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400003B")]
		public event Action<string, bool> AnimationObjectSetHighlighted
		{
			[Token(Token = "0x6001779")]
			[Address(RVA = "0x162B60C", Offset = "0x162B60C", VA = "0x162B60C", Slot = "86")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x600177A")]
			[Address(RVA = "0x162B6C0", Offset = "0x162B6C0", VA = "0x162B6C0", Slot = "87")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400003C")]
		public event Action<string, bool> AnimationObjectSetHidden
		{
			[Token(Token = "0x600177E")]
			[Address(RVA = "0x162BCE4", Offset = "0x162BCE4", VA = "0x162BCE4", Slot = "89")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x600177F")]
			[Address(RVA = "0x162BD98", Offset = "0x162BD98", VA = "0x162BD98", Slot = "90")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6001701")]
		[Address(RVA = "0x1620C2C", Offset = "0x1620C2C", VA = "0x1620C2C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001702")]
		[Address(RVA = "0x1620C40", Offset = "0x1620C40", VA = "0x1620C40")]
		[Command(requiresAuthority = false)]
		public void CmdSetTeacherModelLoaded([Optional] NetworkConnectionToClient sender)
		{
		}

		[Token(Token = "0x6001703")]
		[Address(RVA = "0x1620DFC", Offset = "0x1620DFC", VA = "0x1620DFC")]
		[AsyncStateMachine(typeof(<ClientLoadAnatomyModel>d__14))]
		[Client]
		public Task ClientLoadAnatomyModel(IAnatomyModel<int> anatomyModel, CancellationToken cancellationToken)
		{
			return null;
		}

		[Token(Token = "0x6001704")]
		[Address(RVA = "0x1620F94", Offset = "0x1620F94", VA = "0x1620F94")]
		[Command(requiresAuthority = false)]
		private void CmdLoadAnatomyModel(byte requestId, IAnatomyModel<int> anatomyModel, [Optional] NetworkConnectionToClient sender)
		{
		}

		[Token(Token = "0x6001705")]
		[Address(RVA = "0x1621EB0", Offset = "0x1621EB0", VA = "0x1621EB0")]
		[ClientRpc]
		private void RpcLoadAnatomyModel(byte requestId, int senderConnectionId, IAnatomyModel<int> anatomyModel)
		{
		}

		[Token(Token = "0x6001706")]
		[Address(RVA = "0x16220D0", Offset = "0x16220D0", VA = "0x16220D0")]
		[AsyncStateMachine(typeof(<ClientGetAnatomyModel>d__17))]
		[Client]
		public Task<IAnatomyModel<int>> ClientGetAnatomyModel(CancellationToken cancellationToken)
		{
			return null;
		}

		[Token(Token = "0x6001707")]
		[Address(RVA = "0x1622278", Offset = "0x1622278", VA = "0x1622278")]
		[Command(requiresAuthority = false)]
		private void CmdGetAnatomyModel(byte requestId, [Optional] NetworkConnectionToClient sender)
		{
		}

		[Token(Token = "0x6001708")]
		[Address(RVA = "0x162246C", Offset = "0x162246C", VA = "0x162246C")]
		[TargetRpc]
		private void TargetGetAnatomyModel(NetworkConnection target, byte requestId, int senderConnectionId, IAnatomyModel<int> anatomyModel)
		{
		}

		[Token(Token = "0x6001709")]
		[Address(RVA = "0x1622698", Offset = "0x1622698", VA = "0x1622698")]
		[Server]
		private bool ServerHasAuthority(NetworkConnectionToClient sender)
		{
			return default(bool);
		}

		[Token(Token = "0x600170E")]
		[Address(RVA = "0x1622AB8", Offset = "0x1622AB8", VA = "0x1622AB8", Slot = "16")]
		[AsyncStateMachine(typeof(<SetSystemsActive>d__27))]
		public Task SetSystemsActive(IReadOnlyCollection<Database.SystemType> systems, bool value, CancellationToken cancellationToken)
		{
			return null;
		}

		[Token(Token = "0x600170F")]
		[Address(RVA = "0x1622BE0", Offset = "0x1622BE0", VA = "0x1622BE0", Slot = "17")]
		[AsyncStateMachine(typeof(<SetDatabaseType>d__28))]
		public Task SetDatabaseType(DatabaseType databaseType, CancellationToken cancellationToken)
		{
			return null;
		}

		[Token(Token = "0x6001710")]
		[Address(RVA = "0x1622CF0", Offset = "0x1622CF0", VA = "0x1622CF0")]
		[Command(requiresAuthority = false)]
		private void CmdSetSystemsActive(byte requestId, Database.SystemType[] systems, bool value, [Optional] NetworkConnectionToClient sender)
		{
		}

		[Token(Token = "0x6001711")]
		[Address(RVA = "0x1622F14", Offset = "0x1622F14", VA = "0x1622F14")]
		[Command(requiresAuthority = false)]
		private void CmdSetDatabaseType(byte requestId, DatabaseType databaseType, [Optional] NetworkConnectionToClient sender)
		{
		}

		[Token(Token = "0x6001712")]
		[Address(RVA = "0x1623124", Offset = "0x1623124", VA = "0x1623124")]
		[ClientRpc]
		private void RpcSetSystemsActive(byte requestId, int senderConnectionId, Database.SystemType[] systems, bool value)
		{
		}

		[Token(Token = "0x6001713")]
		[Address(RVA = "0x1623364", Offset = "0x1623364", VA = "0x1623364")]
		[ClientRpc]
		private void RpcSetDatabaseType(byte requestId, int senderConnectionId, DatabaseType databaseType)
		{
		}

		[Token(Token = "0x6001716")]
		[Address(RVA = "0x16236E8", Offset = "0x16236E8", VA = "0x16236E8", Slot = "64")]
		public Task SetAntModeEnabled(bool value, CancellationToken cancellationToken)
		{
			return null;
		}

		[Token(Token = "0x6001717")]
		[Address(RVA = "0x16237E0", Offset = "0x16237E0", VA = "0x16237E0")]
		[Command(requiresAuthority = false)]
		private void CmdSetAntModeEnabled(byte requestId, bool value, [Optional] NetworkConnectionToClient sender)
		{
		}

		[Token(Token = "0x6001718")]
		[Address(RVA = "0x16239F0", Offset = "0x16239F0", VA = "0x16239F0")]
		[ClientRpc]
		private void RpcSetAntModeEnabled(byte requestId, int senderConnectionId, bool value)
		{
		}

		[Token(Token = "0x600171B")]
		[Address(RVA = "0x1623D74", Offset = "0x1623D74", VA = "0x1623D74", Slot = "22")]
		public Task UpdateStructureLevel(Database.SystemType systemType, int level, CancellationToken cancellationToken)
		{
			return null;
		}

		[Token(Token = "0x600171C")]
		[Address(RVA = "0x1623E6C", Offset = "0x1623E6C", VA = "0x1623E6C")]
		[Command(requiresAuthority = false)]
		private void CmdUpdateStructureLevel(byte requestId, Database.SystemType systemType, int value, [Optional] NetworkConnectionToClient sender)
		{
		}

		[Token(Token = "0x600171D")]
		[Address(RVA = "0x1624090", Offset = "0x1624090", VA = "0x1624090")]
		[ClientRpc]
		private void RpcUpdateStructureLevel(byte requestId, int senderConnectionId, Database.SystemType systemType, int value)
		{
		}

		[Token(Token = "0x6001722")]
		[Address(RVA = "0x1624590", Offset = "0x1624590", VA = "0x1624590", Slot = "25")]
		public Task SetLocationType(LocationType value, CancellationToken cancellationToken)
		{
			return null;
		}

		[Token(Token = "0x6001723")]
		[Address(RVA = "0x1624684", Offset = "0x1624684", VA = "0x1624684")]
		[Command(requiresAuthority = false)]
		private void CmdSetLocationType(byte requestId, LocationType value, [Optional] NetworkConnectionToClient sender)
		{
		}

		[Token(Token = "0x6001724")]
		[Address(RVA = "0x1624894", Offset = "0x1624894", VA = "0x1624894")]
		[ClientRpc]
		private void RpcSetLocationType(byte requestId, int senderConnectionId, LocationType value)
		{
		}

		[Token(Token = "0x6001725")]
		[Address(RVA = "0x1624AB8", Offset = "0x1624AB8", VA = "0x1624AB8", Slot = "26")]
		public Task SetLocationsEnabled(bool value, CancellationToken cancellationToken)
		{
			return null;
		}

		[Token(Token = "0x6001726")]
		[Address(RVA = "0x1624BB0", Offset = "0x1624BB0", VA = "0x1624BB0")]
		[Command(requiresAuthority = false)]
		private void CmdSetLocationsEnabled(byte requestId, bool value, [Optional] NetworkConnectionToClient sender)
		{
		}

		[Token(Token = "0x6001727")]
		[Address(RVA = "0x1624DC0", Offset = "0x1624DC0", VA = "0x1624DC0")]
		[ClientRpc]
		private void RpcSetLocationsEnabled(byte requestId, int senderConnectionId, bool value)
		{
		}

		[Token(Token = "0x600172A")]
		[Address(RVA = "0x1625144", Offset = "0x1625144", VA = "0x1625144", Slot = "31")]
		public Task SetSliceEnabled(bool value, CancellationToken cancellationToken)
		{
			return null;
		}

		[Token(Token = "0x600172B")]
		[Address(RVA = "0x162523C", Offset = "0x162523C", VA = "0x162523C")]
		[Command(requiresAuthority = false)]
		private void CmdSetSliceEnabled(byte requestId, bool value, [Optional] NetworkConnectionToClient sender)
		{
		}

		[Token(Token = "0x600172C")]
		[Address(RVA = "0x162544C", Offset = "0x162544C", VA = "0x162544C")]
		[ClientRpc]
		private void RpcSetSliceEnabled(byte requestId, int senderConnectionId, bool value)
		{
		}

		[Token(Token = "0x600172F")]
		[Address(RVA = "0x16257D0", Offset = "0x16257D0", VA = "0x16257D0", Slot = "34")]
		public Task SetHighlighted(int obj, bool value, CancellationToken cancellationToken)
		{
			return null;
		}

		[Token(Token = "0x6001730")]
		[Address(RVA = "0x16258D0", Offset = "0x16258D0", VA = "0x16258D0")]
		[Command(requiresAuthority = false)]
		private void CmdSetHighlighted(byte requestId, int id, bool value, [Optional] NetworkConnectionToClient sender)
		{
		}

		[Token(Token = "0x6001731")]
		[Address(RVA = "0x1625AF4", Offset = "0x1625AF4", VA = "0x1625AF4")]
		[ClientRpc]
		private void RpcSetHighlighted(byte requestId, int senderConnectionId, int id, bool value)
		{
		}

		[Token(Token = "0x6001734")]
		[Address(RVA = "0x1625E94", Offset = "0x1625E94", VA = "0x1625E94", Slot = "46")]
		public Task SetHighlighted(Database.SystemType systemType, bool value, CancellationToken cancellationToken)
		{
			return null;
		}

		[Token(Token = "0x6001735")]
		[Address(RVA = "0x1625F94", Offset = "0x1625F94", VA = "0x1625F94")]
		[Command(requiresAuthority = false)]
		private void CmdSetSystemHighlighted(byte requestId, Database.SystemType systemType, bool value, [Optional] NetworkConnectionToClient sender)
		{
		}

		[Token(Token = "0x6001736")]
		[Address(RVA = "0x16261B8", Offset = "0x16261B8", VA = "0x16261B8")]
		[ClientRpc]
		private void RpcSetSystemHighlighted(byte requestId, int senderConnectionId, Database.SystemType systemType, bool value)
		{
		}

		[Token(Token = "0x6001739")]
		[Address(RVA = "0x1626558", Offset = "0x1626558", VA = "0x1626558", Slot = "37")]
		public Task SetHidden(int obj, bool value, CancellationToken cancellationToken)
		{
			return null;
		}

		[Token(Token = "0x600173A")]
		[Address(RVA = "0x1626658", Offset = "0x1626658", VA = "0x1626658")]
		[Command(requiresAuthority = false)]
		private void CmdSetHidden(byte requestId, int id, bool value, [Optional] NetworkConnectionToClient sender)
		{
		}

		[Token(Token = "0x600173B")]
		[Address(RVA = "0x162687C", Offset = "0x162687C", VA = "0x162687C")]
		[ClientRpc]
		private void RpcSetHidden(byte requestId, int senderConnectionId, int id, bool value)
		{
		}

		[Token(Token = "0x600173E")]
		[Address(RVA = "0x1626C1C", Offset = "0x1626C1C", VA = "0x1626C1C", Slot = "40")]
		public Task SetDisassembled(int obj, DisassembleState value, CancellationToken cancellationToken)
		{
			return null;
		}

		[Token(Token = "0x600173F")]
		[Address(RVA = "0x1626D14", Offset = "0x1626D14", VA = "0x1626D14")]
		[Command(requiresAuthority = false)]
		private void CmdSetDisassembled(byte requestId, int id, DisassembleState value, [Optional] NetworkConnectionToClient sender)
		{
		}

		[Token(Token = "0x6001740")]
		[Address(RVA = "0x1626F38", Offset = "0x1626F38", VA = "0x1626F38")]
		[ClientRpc]
		private void RpcSetDisassembled(byte requestId, int senderConnectionId, int id, DisassembleState value)
		{
		}

		[Token(Token = "0x6001743")]
		[Address(RVA = "0x16272D8", Offset = "0x16272D8", VA = "0x16272D8", Slot = "43")]
		public Task SetStructureLayer(int obj, int value, CancellationToken cancellationToken)
		{
			return null;
		}

		[Token(Token = "0x6001744")]
		[Address(RVA = "0x16273D0", Offset = "0x16273D0", VA = "0x16273D0")]
		[Command(requiresAuthority = false)]
		private void CmdSetStructureLayer(byte requestId, int id, int value, [Optional] NetworkConnectionToClient sender)
		{
		}

		[Token(Token = "0x6001745")]
		[Address(RVA = "0x16275F4", Offset = "0x16275F4", VA = "0x16275F4")]
		[ClientRpc]
		private void RpcSetStructureLayer(byte requestId, int senderConnectionId, int id, int value)
		{
		}

		[Token(Token = "0x6001748")]
		[Address(RVA = "0x1627994", Offset = "0x1627994", VA = "0x1627994", Slot = "49")]
		public Task SetFaded(Database.SystemType obj, bool value, CancellationToken cancellationToken)
		{
			return null;
		}

		[Token(Token = "0x6001749")]
		[Address(RVA = "0x1627A94", Offset = "0x1627A94", VA = "0x1627A94")]
		[Command(requiresAuthority = false)]
		private void CmdSetFaded(byte requestId, Database.SystemType systemType, bool value, [Optional] NetworkConnectionToClient sender)
		{
		}

		[Token(Token = "0x600174A")]
		[Address(RVA = "0x1627CB8", Offset = "0x1627CB8", VA = "0x1627CB8")]
		[ClientRpc]
		private void RpcSetFaded(byte requestId, int senderConnectionId, Database.SystemType systemType, bool value)
		{
		}

		[Token(Token = "0x600174D")]
		[Address(RVA = "0x1628058", Offset = "0x1628058", VA = "0x1628058", Slot = "52")]
		public Task SetSubpartType(SubpartType value, CancellationToken cancellationToken)
		{
			return null;
		}

		[Token(Token = "0x600174E")]
		[Address(RVA = "0x162814C", Offset = "0x162814C", VA = "0x162814C")]
		[Command(requiresAuthority = false)]
		private void CmdSetSubpartType(byte requestId, SubpartType value, [Optional] NetworkConnectionToClient sender)
		{
		}

		[Token(Token = "0x600174F")]
		[Address(RVA = "0x162835C", Offset = "0x162835C", VA = "0x162835C")]
		[ClientRpc]
		private void RpcSetSubpartType(byte requestId, int senderConnectionId, SubpartType value)
		{
		}

		[Token(Token = "0x6001756")]
		[Address(RVA = "0x1628940", Offset = "0x1628940", VA = "0x1628940", Slot = "55")]
		public Task ReturnAllItems(CancellationToken cancellationToken)
		{
			return null;
		}

		[Token(Token = "0x6001757")]
		[Address(RVA = "0x16289DC", Offset = "0x16289DC", VA = "0x16289DC", Slot = "56")]
		public Task ResetHighlightedItems(CancellationToken cancellationToken)
		{
			return null;
		}

		[Token(Token = "0x6001758")]
		[Address(RVA = "0x1628A78", Offset = "0x1628A78", VA = "0x1628A78", Slot = "57")]
		public Task ResetHiddenItems(CancellationToken cancellationToken)
		{
			return null;
		}

		[Token(Token = "0x6001759")]
		[Address(RVA = "0x1628B14", Offset = "0x1628B14", VA = "0x1628B14")]
		[Command(requiresAuthority = false)]
		private void CmdReset(byte requestId, byte function, [Optional] NetworkConnectionToClient sender)
		{
		}

		[Token(Token = "0x600175A")]
		[Address(RVA = "0x1628D24", Offset = "0x1628D24", VA = "0x1628D24")]
		[ClientRpc]
		private void RpcReset(byte requestId, int senderConnectionId, byte function)
		{
		}

		[Token(Token = "0x600175D")]
		[Address(RVA = "0x16290B0", Offset = "0x16290B0", VA = "0x16290B0", Slot = "67")]
		public Task SetBodyRotation(bool value, CancellationToken cancellationToken)
		{
			return null;
		}

		[Token(Token = "0x600175E")]
		[Address(RVA = "0x16291A8", Offset = "0x16291A8", VA = "0x16291A8")]
		[Command(requiresAuthority = false)]
		private void CmdSetBodyRotation(byte requestId, bool value, [Optional] NetworkConnectionToClient sender)
		{
		}

		[Token(Token = "0x600175F")]
		[Address(RVA = "0x16293B8", Offset = "0x16293B8", VA = "0x16293B8")]
		[ClientRpc]
		private void RpcSetBodyRotation(byte requestId, int senderConnectionId, bool value)
		{
		}

		[Token(Token = "0x6001762")]
		[Address(RVA = "0x1629744", Offset = "0x1629744", VA = "0x1629744", Slot = "70")]
		public Task SetSelectedObject(int? obj, CancellationToken cancellationToken)
		{
			return null;
		}

		[Token(Token = "0x6001763")]
		[Address(RVA = "0x1629838", Offset = "0x1629838", VA = "0x1629838")]
		[Command(requiresAuthority = false)]
		private void CmdSetSelectedObject(byte requestId, int? id, [Optional] NetworkConnectionToClient sender)
		{
		}

		[Token(Token = "0x6001764")]
		[Address(RVA = "0x1629A48", Offset = "0x1629A48", VA = "0x1629A48")]
		[ClientRpc]
		private void RpcSetSelectedObject(byte requestId, int senderConnectionId, int? id)
		{
		}

		[Token(Token = "0x6001767")]
		[Address(RVA = "0x1629DAC", Offset = "0x1629DAC", VA = "0x1629DAC", Slot = "73")]
		public Task SortItems(CancellationToken cancellationToken)
		{
			return null;
		}

		[Token(Token = "0x6001768")]
		[Address(RVA = "0x1629E48", Offset = "0x1629E48", VA = "0x1629E48")]
		[Command(requiresAuthority = false)]
		private void CmdSortItems(byte requestId, [Optional] NetworkConnectionToClient sender)
		{
		}

		[Token(Token = "0x6001769")]
		[Address(RVA = "0x162A03C", Offset = "0x162A03C", VA = "0x162A03C")]
		[ClientRpc]
		private void RpcSortItems(byte requestId, int senderConnectionId)
		{
		}

		[Token(Token = "0x6001770")]
		[Address(RVA = "0x162A684", Offset = "0x162A684", VA = "0x162A684", Slot = "76")]
		public Task SetActiveAnimation(string value, CancellationToken cancellationToken)
		{
			return null;
		}

		[Token(Token = "0x6001771")]
		[Address(RVA = "0x162A778", Offset = "0x162A778", VA = "0x162A778")]
		[Command(requiresAuthority = false)]
		public void CmdSetActiveAnimation(byte requestId, string value, [Optional] NetworkConnectionToClient sender)
		{
		}

		[Token(Token = "0x6001772")]
		[Address(RVA = "0x162A988", Offset = "0x162A988", VA = "0x162A988")]
		[ClientRpc]
		public void RpcSetActiveAnimation(byte requestId, int senderConnectionId, string value)
		{
		}

		[Token(Token = "0x6001773")]
		[Address(RVA = "0x162ABAC", Offset = "0x162ABAC", VA = "0x162ABAC", Slot = "77")]
		public Task SetAnimationSpeed(float val, CancellationToken cancellationToken)
		{
			return null;
		}

		[Token(Token = "0x6001774")]
		[Address(RVA = "0x162ACA0", Offset = "0x162ACA0", VA = "0x162ACA0")]
		[Command(requiresAuthority = false)]
		private void CmdSetAnimationSpeed(byte requestId, float value, [Optional] NetworkConnectionToClient sender)
		{
		}

		[Token(Token = "0x6001775")]
		[Address(RVA = "0x162AEB0", Offset = "0x162AEB0", VA = "0x162AEB0")]
		[ClientRpc]
		private void RpcSetAnimationSpeed(byte requestId, int senderConnectionId, float value)
		{
		}

		[Token(Token = "0x6001776")]
		[Address(RVA = "0x162B0DC", Offset = "0x162B0DC", VA = "0x162B0DC", Slot = "78")]
		public Task SetAnimationTime(float val, CancellationToken cancellationToken)
		{
			return null;
		}

		[Token(Token = "0x6001777")]
		[Address(RVA = "0x162B1D0", Offset = "0x162B1D0", VA = "0x162B1D0")]
		[Command(requiresAuthority = false)]
		private void CmdSetAnimationTime(byte requestId, float value, [Optional] NetworkConnectionToClient sender)
		{
		}

		[Token(Token = "0x6001778")]
		[Address(RVA = "0x162B3E0", Offset = "0x162B3E0", VA = "0x162B3E0")]
		[ClientRpc]
		private void RpcSetAnimationTime(byte requestId, int senderConnectionId, float value)
		{
		}

		[Token(Token = "0x600177B")]
		[Address(RVA = "0x162B774", Offset = "0x162B774", VA = "0x162B774", Slot = "85")]
		public Task SetAnimationObjectHighlighted(string obj, bool value, CancellationToken cancellationToken)
		{
			return null;
		}

		[Token(Token = "0x600177C")]
		[Address(RVA = "0x162B880", Offset = "0x162B880", VA = "0x162B880")]
		[Command(requiresAuthority = false)]
		private void CmdSetAnimationObjectHighlighted(byte requestId, string obj, bool value, [Optional] NetworkConnectionToClient sender)
		{
		}

		[Token(Token = "0x600177D")]
		[Address(RVA = "0x162BAA4", Offset = "0x162BAA4", VA = "0x162BAA4")]
		[ClientRpc]
		private void RpcSetAnimationObjectHighlighted(byte requestId, int senderConnectionId, string obj, bool value)
		{
		}

		[Token(Token = "0x6001780")]
		[Address(RVA = "0x162BE4C", Offset = "0x162BE4C", VA = "0x162BE4C", Slot = "88")]
		public Task SetAnimationObjectHidden(string obj, bool value, CancellationToken cancellationToken)
		{
			return null;
		}

		[Token(Token = "0x6001781")]
		[Address(RVA = "0x162BF58", Offset = "0x162BF58", VA = "0x162BF58")]
		[Command(requiresAuthority = false)]
		private void CmdSetAnimationObjectHidden(byte requestId, string obj, bool value, [Optional] NetworkConnectionToClient sender)
		{
		}

		[Token(Token = "0x6001782")]
		[Address(RVA = "0x162C17C", Offset = "0x162C17C", VA = "0x162C17C")]
		[ClientRpc]
		private void RpcSetAnimationObjectHidden(byte requestId, int senderConnectionId, string obj, bool value)
		{
		}

		[Token(Token = "0x6001783")]
		[Address(RVA = "0x162C3BC", Offset = "0x162C3BC", VA = "0x162C3BC")]
		public NetworkAnatomyServer()
		{
		}

		[Token(Token = "0x600178A")]
		[Address(RVA = "0x162C574", Offset = "0x162C574", VA = "0x162C574")]
		private void MirrorProcessed()
		{
		}

		[Token(Token = "0x600178D")]
		[Address(RVA = "0x162C580", Offset = "0x162C580", VA = "0x162C580")]
		protected void UserCode_CmdSetTeacherModelLoaded__NetworkConnectionToClient(NetworkConnectionToClient sender)
		{
		}

		[Token(Token = "0x600178E")]
		[Address(RVA = "0x162C5A8", Offset = "0x162C5A8", VA = "0x162C5A8")]
		protected static void InvokeUserCode_CmdSetTeacherModelLoaded__NetworkConnectionToClient(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x600178F")]
		[Address(RVA = "0x162C6EC", Offset = "0x162C6EC", VA = "0x162C6EC")]
		protected void UserCode_CmdLoadAnatomyModel__Byte__IAnatomyModel`1__NetworkConnectionToClient(byte requestId, IAnatomyModel<int> anatomyModel, NetworkConnectionToClient sender)
		{
		}

		[Token(Token = "0x6001790")]
		[Address(RVA = "0x162C760", Offset = "0x162C760", VA = "0x162C760")]
		protected static void InvokeUserCode_CmdLoadAnatomyModel__Byte__IAnatomyModel`1__NetworkConnectionToClient(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x6001791")]
		[Address(RVA = "0x162CDC0", Offset = "0x162CDC0", VA = "0x162CDC0")]
		protected void UserCode_RpcLoadAnatomyModel__Byte__Int32__IAnatomyModel`1(byte requestId, int senderConnectionId, IAnatomyModel<int> anatomyModel)
		{
		}

		[Token(Token = "0x6001792")]
		[Address(RVA = "0x162CEC4", Offset = "0x162CEC4", VA = "0x162CEC4")]
		protected static void InvokeUserCode_RpcLoadAnatomyModel__Byte__Int32__IAnatomyModel`1(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x6001793")]
		[Address(RVA = "0x162D028", Offset = "0x162D028", VA = "0x162D028")]
		protected void UserCode_CmdGetAnatomyModel__Byte__NetworkConnectionToClient(byte requestId, NetworkConnectionToClient sender)
		{
		}

		[Token(Token = "0x6001794")]
		[Address(RVA = "0x162D274", Offset = "0x162D274", VA = "0x162D274")]
		protected static void InvokeUserCode_CmdGetAnatomyModel__Byte__NetworkConnectionToClient(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x6001795")]
		[Address(RVA = "0x162D3F4", Offset = "0x162D3F4", VA = "0x162D3F4")]
		protected void UserCode_TargetGetAnatomyModel__NetworkConnection__Byte__Int32__IAnatomyModel`1(NetworkConnection target, byte requestId, int senderConnectionId, IAnatomyModel<int> anatomyModel)
		{
		}

		[Token(Token = "0x6001796")]
		[Address(RVA = "0x162D410", Offset = "0x162D410", VA = "0x162D410")]
		protected static void InvokeUserCode_TargetGetAnatomyModel__NetworkConnection__Byte__Int32__IAnatomyModel`1(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x6001797")]
		[Address(RVA = "0x162D5BC", Offset = "0x162D5BC", VA = "0x162D5BC")]
		protected void UserCode_CmdSetSystemsActive__Byte__SystemType[]__Boolean__NetworkConnectionToClient(byte requestId, Database.SystemType[] systems, bool value, NetworkConnectionToClient sender)
		{
		}

		[Token(Token = "0x6001798")]
		[Address(RVA = "0x162D638", Offset = "0x162D638", VA = "0x162D638")]
		protected static void InvokeUserCode_CmdSetSystemsActive__Byte__SystemType[]__Boolean__NetworkConnectionToClient(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x6001799")]
		[Address(RVA = "0x162D7DC", Offset = "0x162D7DC", VA = "0x162D7DC")]
		protected void UserCode_CmdSetDatabaseType__Byte__DatabaseType__NetworkConnectionToClient(byte requestId, DatabaseType databaseType, NetworkConnectionToClient sender)
		{
		}

		[Token(Token = "0x600179A")]
		[Address(RVA = "0x162D850", Offset = "0x162D850", VA = "0x162D850")]
		protected static void InvokeUserCode_CmdSetDatabaseType__Byte__DatabaseType__NetworkConnectionToClient(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x600179B")]
		[Address(RVA = "0x162D9E0", Offset = "0x162D9E0", VA = "0x162D9E0")]
		protected void UserCode_RpcSetSystemsActive__Byte__Int32__SystemType[]__Boolean(byte requestId, int senderConnectionId, Database.SystemType[] systems, bool value)
		{
		}

		[Token(Token = "0x600179C")]
		[Address(RVA = "0x162DAFC", Offset = "0x162DAFC", VA = "0x162DAFC")]
		protected static void InvokeUserCode_RpcSetSystemsActive__Byte__Int32__SystemType[]__Boolean(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x600179D")]
		[Address(RVA = "0x162DC78", Offset = "0x162DC78", VA = "0x162DC78")]
		protected void UserCode_RpcSetDatabaseType__Byte__Int32__DatabaseType(byte requestId, int senderConnectionId, DatabaseType databaseType)
		{
		}

		[Token(Token = "0x600179E")]
		[Address(RVA = "0x162DD74", Offset = "0x162DD74", VA = "0x162DD74")]
		protected static void InvokeUserCode_RpcSetDatabaseType__Byte__Int32__DatabaseType(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x600179F")]
		[Address(RVA = "0x162DEDC", Offset = "0x162DEDC", VA = "0x162DEDC")]
		protected void UserCode_CmdSetAntModeEnabled__Byte__Boolean__NetworkConnectionToClient(byte requestId, bool value, NetworkConnectionToClient sender)
		{
		}

		[Token(Token = "0x60017A0")]
		[Address(RVA = "0x162DF50", Offset = "0x162DF50", VA = "0x162DF50")]
		protected static void InvokeUserCode_CmdSetAntModeEnabled__Byte__Boolean__NetworkConnectionToClient(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x60017A1")]
		[Address(RVA = "0x162E0E0", Offset = "0x162E0E0", VA = "0x162E0E0")]
		protected void UserCode_RpcSetAntModeEnabled__Byte__Int32__Boolean(byte requestId, int senderConnectionId, bool value)
		{
		}

		[Token(Token = "0x60017A2")]
		[Address(RVA = "0x162E1E0", Offset = "0x162E1E0", VA = "0x162E1E0")]
		protected static void InvokeUserCode_RpcSetAntModeEnabled__Byte__Int32__Boolean(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x60017A3")]
		[Address(RVA = "0x162E348", Offset = "0x162E348", VA = "0x162E348")]
		protected void UserCode_CmdUpdateStructureLevel__Byte__SystemType__Int32__NetworkConnectionToClient(byte requestId, Database.SystemType systemType, int value, NetworkConnectionToClient sender)
		{
		}

		[Token(Token = "0x60017A4")]
		[Address(RVA = "0x162E3C4", Offset = "0x162E3C4", VA = "0x162E3C4")]
		protected static void InvokeUserCode_CmdUpdateStructureLevel__Byte__SystemType__Int32__NetworkConnectionToClient(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x60017A5")]
		[Address(RVA = "0x162E568", Offset = "0x162E568", VA = "0x162E568")]
		protected void UserCode_RpcUpdateStructureLevel__Byte__Int32__SystemType__Int32(byte requestId, int senderConnectionId, Database.SystemType systemType, int value)
		{
		}

		[Token(Token = "0x60017A6")]
		[Address(RVA = "0x162E670", Offset = "0x162E670", VA = "0x162E670")]
		protected static void InvokeUserCode_RpcUpdateStructureLevel__Byte__Int32__SystemType__Int32(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x60017A7")]
		[Address(RVA = "0x162E7EC", Offset = "0x162E7EC", VA = "0x162E7EC")]
		protected void UserCode_CmdSetLocationType__Byte__LocationType__NetworkConnectionToClient(byte requestId, LocationType value, NetworkConnectionToClient sender)
		{
		}

		[Token(Token = "0x60017A8")]
		[Address(RVA = "0x162E860", Offset = "0x162E860", VA = "0x162E860")]
		protected static void InvokeUserCode_CmdSetLocationType__Byte__LocationType__NetworkConnectionToClient(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x60017A9")]
		[Address(RVA = "0x162E9F0", Offset = "0x162E9F0", VA = "0x162E9F0")]
		protected void UserCode_RpcSetLocationType__Byte__Int32__LocationType(byte requestId, int senderConnectionId, LocationType value)
		{
		}

		[Token(Token = "0x60017AA")]
		[Address(RVA = "0x162EAEC", Offset = "0x162EAEC", VA = "0x162EAEC")]
		protected static void InvokeUserCode_RpcSetLocationType__Byte__Int32__LocationType(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x60017AB")]
		[Address(RVA = "0x162EC54", Offset = "0x162EC54", VA = "0x162EC54")]
		protected void UserCode_CmdSetLocationsEnabled__Byte__Boolean__NetworkConnectionToClient(byte requestId, bool value, NetworkConnectionToClient sender)
		{
		}

		[Token(Token = "0x60017AC")]
		[Address(RVA = "0x162ECC8", Offset = "0x162ECC8", VA = "0x162ECC8")]
		protected static void InvokeUserCode_CmdSetLocationsEnabled__Byte__Boolean__NetworkConnectionToClient(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x60017AD")]
		[Address(RVA = "0x162EE58", Offset = "0x162EE58", VA = "0x162EE58")]
		protected void UserCode_RpcSetLocationsEnabled__Byte__Int32__Boolean(byte requestId, int senderConnectionId, bool value)
		{
		}

		[Token(Token = "0x60017AE")]
		[Address(RVA = "0x162EF58", Offset = "0x162EF58", VA = "0x162EF58")]
		protected static void InvokeUserCode_RpcSetLocationsEnabled__Byte__Int32__Boolean(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x60017AF")]
		[Address(RVA = "0x162F0C0", Offset = "0x162F0C0", VA = "0x162F0C0")]
		protected void UserCode_CmdSetSliceEnabled__Byte__Boolean__NetworkConnectionToClient(byte requestId, bool value, NetworkConnectionToClient sender)
		{
		}

		[Token(Token = "0x60017B0")]
		[Address(RVA = "0x162F134", Offset = "0x162F134", VA = "0x162F134")]
		protected static void InvokeUserCode_CmdSetSliceEnabled__Byte__Boolean__NetworkConnectionToClient(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x60017B1")]
		[Address(RVA = "0x162F2C4", Offset = "0x162F2C4", VA = "0x162F2C4")]
		protected void UserCode_RpcSetSliceEnabled__Byte__Int32__Boolean(byte requestId, int senderConnectionId, bool value)
		{
		}

		[Token(Token = "0x60017B2")]
		[Address(RVA = "0x162F3C4", Offset = "0x162F3C4", VA = "0x162F3C4")]
		protected static void InvokeUserCode_RpcSetSliceEnabled__Byte__Int32__Boolean(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x60017B3")]
		[Address(RVA = "0x162F52C", Offset = "0x162F52C", VA = "0x162F52C")]
		protected void UserCode_CmdSetHighlighted__Byte__Int32__Boolean__NetworkConnectionToClient(byte requestId, int id, bool value, NetworkConnectionToClient sender)
		{
		}

		[Token(Token = "0x60017B4")]
		[Address(RVA = "0x162F5A8", Offset = "0x162F5A8", VA = "0x162F5A8")]
		protected static void InvokeUserCode_CmdSetHighlighted__Byte__Int32__Boolean__NetworkConnectionToClient(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x60017B5")]
		[Address(RVA = "0x162F74C", Offset = "0x162F74C", VA = "0x162F74C")]
		protected void UserCode_RpcSetHighlighted__Byte__Int32__Int32__Boolean(byte requestId, int senderConnectionId, int id, bool value)
		{
		}

		[Token(Token = "0x60017B6")]
		[Address(RVA = "0x162F85C", Offset = "0x162F85C", VA = "0x162F85C")]
		protected static void InvokeUserCode_RpcSetHighlighted__Byte__Int32__Int32__Boolean(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x60017B7")]
		[Address(RVA = "0x162F9D8", Offset = "0x162F9D8", VA = "0x162F9D8")]
		protected void UserCode_CmdSetSystemHighlighted__Byte__SystemType__Boolean__NetworkConnectionToClient(byte requestId, Database.SystemType systemType, bool value, NetworkConnectionToClient sender)
		{
		}

		[Token(Token = "0x60017B8")]
		[Address(RVA = "0x162FA54", Offset = "0x162FA54", VA = "0x162FA54")]
		protected static void InvokeUserCode_CmdSetSystemHighlighted__Byte__SystemType__Boolean__NetworkConnectionToClient(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x60017B9")]
		[Address(RVA = "0x162FBF8", Offset = "0x162FBF8", VA = "0x162FBF8")]
		protected void UserCode_RpcSetSystemHighlighted__Byte__Int32__SystemType__Boolean(byte requestId, int senderConnectionId, Database.SystemType systemType, bool value)
		{
		}

		[Token(Token = "0x60017BA")]
		[Address(RVA = "0x162FD08", Offset = "0x162FD08", VA = "0x162FD08")]
		protected static void InvokeUserCode_RpcSetSystemHighlighted__Byte__Int32__SystemType__Boolean(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x60017BB")]
		[Address(RVA = "0x162FE84", Offset = "0x162FE84", VA = "0x162FE84")]
		protected void UserCode_CmdSetHidden__Byte__Int32__Boolean__NetworkConnectionToClient(byte requestId, int id, bool value, NetworkConnectionToClient sender)
		{
		}

		[Token(Token = "0x60017BC")]
		[Address(RVA = "0x162FF00", Offset = "0x162FF00", VA = "0x162FF00")]
		protected static void InvokeUserCode_CmdSetHidden__Byte__Int32__Boolean__NetworkConnectionToClient(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x60017BD")]
		[Address(RVA = "0x16300A4", Offset = "0x16300A4", VA = "0x16300A4")]
		protected void UserCode_RpcSetHidden__Byte__Int32__Int32__Boolean(byte requestId, int senderConnectionId, int id, bool value)
		{
		}

		[Token(Token = "0x60017BE")]
		[Address(RVA = "0x16301B4", Offset = "0x16301B4", VA = "0x16301B4")]
		protected static void InvokeUserCode_RpcSetHidden__Byte__Int32__Int32__Boolean(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x60017BF")]
		[Address(RVA = "0x1630330", Offset = "0x1630330", VA = "0x1630330")]
		protected void UserCode_CmdSetDisassembled__Byte__Int32__DisassembleState__NetworkConnectionToClient(byte requestId, int id, DisassembleState value, NetworkConnectionToClient sender)
		{
		}

		[Token(Token = "0x60017C0")]
		[Address(RVA = "0x16303BC", Offset = "0x16303BC", VA = "0x16303BC")]
		protected static void InvokeUserCode_CmdSetDisassembled__Byte__Int32__DisassembleState__NetworkConnectionToClient(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x60017C1")]
		[Address(RVA = "0x1630560", Offset = "0x1630560", VA = "0x1630560")]
		protected void UserCode_RpcSetDisassembled__Byte__Int32__Int32__DisassembleState(byte requestId, int senderConnectionId, int id, DisassembleState value)
		{
		}

		[Token(Token = "0x60017C2")]
		[Address(RVA = "0x1630668", Offset = "0x1630668", VA = "0x1630668")]
		protected static void InvokeUserCode_RpcSetDisassembled__Byte__Int32__Int32__DisassembleState(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x60017C3")]
		[Address(RVA = "0x16307E4", Offset = "0x16307E4", VA = "0x16307E4")]
		protected void UserCode_CmdSetStructureLayer__Byte__Int32__Int32__NetworkConnectionToClient(byte requestId, int id, int value, NetworkConnectionToClient sender)
		{
		}

		[Token(Token = "0x60017C4")]
		[Address(RVA = "0x1630870", Offset = "0x1630870", VA = "0x1630870")]
		protected static void InvokeUserCode_CmdSetStructureLayer__Byte__Int32__Int32__NetworkConnectionToClient(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x60017C5")]
		[Address(RVA = "0x1630A14", Offset = "0x1630A14", VA = "0x1630A14")]
		protected void UserCode_RpcSetStructureLayer__Byte__Int32__Int32__Int32(byte requestId, int senderConnectionId, int id, int value)
		{
		}

		[Token(Token = "0x60017C6")]
		[Address(RVA = "0x1630B1C", Offset = "0x1630B1C", VA = "0x1630B1C")]
		protected static void InvokeUserCode_RpcSetStructureLayer__Byte__Int32__Int32__Int32(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x60017C7")]
		[Address(RVA = "0x1630C98", Offset = "0x1630C98", VA = "0x1630C98")]
		protected void UserCode_CmdSetFaded__Byte__SystemType__Boolean__NetworkConnectionToClient(byte requestId, Database.SystemType systemType, bool value, NetworkConnectionToClient sender)
		{
		}

		[Token(Token = "0x60017C8")]
		[Address(RVA = "0x1630D14", Offset = "0x1630D14", VA = "0x1630D14")]
		protected static void InvokeUserCode_CmdSetFaded__Byte__SystemType__Boolean__NetworkConnectionToClient(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x60017C9")]
		[Address(RVA = "0x1630EB8", Offset = "0x1630EB8", VA = "0x1630EB8")]
		protected void UserCode_RpcSetFaded__Byte__Int32__SystemType__Boolean(byte requestId, int senderConnectionId, Database.SystemType systemType, bool value)
		{
		}

		[Token(Token = "0x60017CA")]
		[Address(RVA = "0x1630FC8", Offset = "0x1630FC8", VA = "0x1630FC8")]
		protected static void InvokeUserCode_RpcSetFaded__Byte__Int32__SystemType__Boolean(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x60017CB")]
		[Address(RVA = "0x1631144", Offset = "0x1631144", VA = "0x1631144")]
		protected void UserCode_CmdSetSubpartType__Byte__SubpartType__NetworkConnectionToClient(byte requestId, SubpartType value, NetworkConnectionToClient sender)
		{
		}

		[Token(Token = "0x60017CC")]
		[Address(RVA = "0x16311B8", Offset = "0x16311B8", VA = "0x16311B8")]
		protected static void InvokeUserCode_CmdSetSubpartType__Byte__SubpartType__NetworkConnectionToClient(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x60017CD")]
		[Address(RVA = "0x1631348", Offset = "0x1631348", VA = "0x1631348")]
		protected void UserCode_RpcSetSubpartType__Byte__Int32__SubpartType(byte requestId, int senderConnectionId, SubpartType value)
		{
		}

		[Token(Token = "0x60017CE")]
		[Address(RVA = "0x1631444", Offset = "0x1631444", VA = "0x1631444")]
		protected static void InvokeUserCode_RpcSetSubpartType__Byte__Int32__SubpartType(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x60017CF")]
		[Address(RVA = "0x16315AC", Offset = "0x16315AC", VA = "0x16315AC")]
		protected void UserCode_CmdReset__Byte__Byte__NetworkConnectionToClient(byte requestId, byte function, NetworkConnectionToClient sender)
		{
		}

		[Token(Token = "0x60017D0")]
		[Address(RVA = "0x1631620", Offset = "0x1631620", VA = "0x1631620")]
		protected static void InvokeUserCode_CmdReset__Byte__Byte__NetworkConnectionToClient(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x60017D1")]
		[Address(RVA = "0x16317B0", Offset = "0x16317B0", VA = "0x16317B0")]
		protected void UserCode_RpcReset__Byte__Int32__Byte(byte requestId, int senderConnectionId, byte function)
		{
		}

		[Token(Token = "0x60017D2")]
		[Address(RVA = "0x16318A8", Offset = "0x16318A8", VA = "0x16318A8")]
		protected static void InvokeUserCode_RpcReset__Byte__Int32__Byte(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x60017D3")]
		[Address(RVA = "0x1631A10", Offset = "0x1631A10", VA = "0x1631A10")]
		protected void UserCode_CmdSetBodyRotation__Byte__Boolean__NetworkConnectionToClient(byte requestId, bool value, NetworkConnectionToClient sender)
		{
		}

		[Token(Token = "0x60017D4")]
		[Address(RVA = "0x1631A84", Offset = "0x1631A84", VA = "0x1631A84")]
		protected static void InvokeUserCode_CmdSetBodyRotation__Byte__Boolean__NetworkConnectionToClient(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x60017D5")]
		[Address(RVA = "0x1631C14", Offset = "0x1631C14", VA = "0x1631C14")]
		protected void UserCode_RpcSetBodyRotation__Byte__Int32__Boolean(byte requestId, int senderConnectionId, bool value)
		{
		}

		[Token(Token = "0x60017D6")]
		[Address(RVA = "0x1631D14", Offset = "0x1631D14", VA = "0x1631D14")]
		protected static void InvokeUserCode_RpcSetBodyRotation__Byte__Int32__Boolean(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x60017D7")]
		[Address(RVA = "0x1631E7C", Offset = "0x1631E7C", VA = "0x1631E7C")]
		protected void UserCode_CmdSetSelectedObject__Byte__Nullable`1__NetworkConnectionToClient(byte requestId, int? id, NetworkConnectionToClient sender)
		{
		}

		[Token(Token = "0x60017D8")]
		[Address(RVA = "0x1631EF0", Offset = "0x1631EF0", VA = "0x1631EF0")]
		protected static void InvokeUserCode_CmdSetSelectedObject__Byte__Nullable`1__NetworkConnectionToClient(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x60017D9")]
		[Address(RVA = "0x1632080", Offset = "0x1632080", VA = "0x1632080")]
		protected void UserCode_RpcSetSelectedObject__Byte__Int32__Nullable`1(byte requestId, int senderConnectionId, int? id)
		{
		}

		[Token(Token = "0x60017DA")]
		[Address(RVA = "0x163217C", Offset = "0x163217C", VA = "0x163217C")]
		protected static void InvokeUserCode_RpcSetSelectedObject__Byte__Int32__Nullable`1(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x60017DB")]
		[Address(RVA = "0x16322E4", Offset = "0x16322E4", VA = "0x16322E4")]
		protected void UserCode_CmdSortItems__Byte__NetworkConnectionToClient(byte requestId, NetworkConnectionToClient sender)
		{
		}

		[Token(Token = "0x60017DC")]
		[Address(RVA = "0x1632344", Offset = "0x1632344", VA = "0x1632344")]
		protected static void InvokeUserCode_CmdSortItems__Byte__NetworkConnectionToClient(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x60017DD")]
		[Address(RVA = "0x16324C4", Offset = "0x16324C4", VA = "0x16324C4")]
		protected void UserCode_RpcSortItems__Byte__Int32(byte requestId, int senderConnectionId)
		{
		}

		[Token(Token = "0x60017DE")]
		[Address(RVA = "0x1632568", Offset = "0x1632568", VA = "0x1632568")]
		protected static void InvokeUserCode_RpcSortItems__Byte__Int32(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x60017DF")]
		[Address(RVA = "0x16326BC", Offset = "0x16326BC", VA = "0x16326BC")]
		protected void UserCode_CmdSetActiveAnimation__Byte__String__NetworkConnectionToClient(byte requestId, string value, NetworkConnectionToClient sender)
		{
		}

		[Token(Token = "0x60017E0")]
		[Address(RVA = "0x1632730", Offset = "0x1632730", VA = "0x1632730")]
		protected static void InvokeUserCode_CmdSetActiveAnimation__Byte__String__NetworkConnectionToClient(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x60017E1")]
		[Address(RVA = "0x16328C0", Offset = "0x16328C0", VA = "0x16328C0")]
		protected void UserCode_RpcSetActiveAnimation__Byte__Int32__String(byte requestId, int senderConnectionId, string value)
		{
		}

		[Token(Token = "0x60017E2")]
		[Address(RVA = "0x16329C4", Offset = "0x16329C4", VA = "0x16329C4")]
		protected static void InvokeUserCode_RpcSetActiveAnimation__Byte__Int32__String(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x60017E3")]
		[Address(RVA = "0x1632B2C", Offset = "0x1632B2C", VA = "0x1632B2C")]
		protected void UserCode_CmdSetAnimationSpeed__Byte__Single__NetworkConnectionToClient(byte requestId, float value, NetworkConnectionToClient sender)
		{
		}

		[Token(Token = "0x60017E4")]
		[Address(RVA = "0x1632BA0", Offset = "0x1632BA0", VA = "0x1632BA0")]
		protected static void InvokeUserCode_CmdSetAnimationSpeed__Byte__Single__NetworkConnectionToClient(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x60017E5")]
		[Address(RVA = "0x1632D2C", Offset = "0x1632D2C", VA = "0x1632D2C")]
		protected void UserCode_RpcSetAnimationSpeed__Byte__Int32__Single(byte requestId, int senderConnectionId, float value)
		{
		}

		[Token(Token = "0x60017E6")]
		[Address(RVA = "0x1632E30", Offset = "0x1632E30", VA = "0x1632E30")]
		protected static void InvokeUserCode_RpcSetAnimationSpeed__Byte__Int32__Single(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x60017E7")]
		[Address(RVA = "0x1632F94", Offset = "0x1632F94", VA = "0x1632F94")]
		protected void UserCode_CmdSetAnimationTime__Byte__Single__NetworkConnectionToClient(byte requestId, float value, NetworkConnectionToClient sender)
		{
		}

		[Token(Token = "0x60017E8")]
		[Address(RVA = "0x1633008", Offset = "0x1633008", VA = "0x1633008")]
		protected static void InvokeUserCode_CmdSetAnimationTime__Byte__Single__NetworkConnectionToClient(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x60017E9")]
		[Address(RVA = "0x1633194", Offset = "0x1633194", VA = "0x1633194")]
		protected void UserCode_RpcSetAnimationTime__Byte__Int32__Single(byte requestId, int senderConnectionId, float value)
		{
		}

		[Token(Token = "0x60017EA")]
		[Address(RVA = "0x1633298", Offset = "0x1633298", VA = "0x1633298")]
		protected static void InvokeUserCode_RpcSetAnimationTime__Byte__Int32__Single(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x60017EB")]
		[Address(RVA = "0x16333FC", Offset = "0x16333FC", VA = "0x16333FC")]
		protected void UserCode_CmdSetAnimationObjectHighlighted__Byte__String__Boolean__NetworkConnectionToClient(byte requestId, string obj, bool value, NetworkConnectionToClient sender)
		{
		}

		[Token(Token = "0x60017EC")]
		[Address(RVA = "0x1633478", Offset = "0x1633478", VA = "0x1633478")]
		protected static void InvokeUserCode_CmdSetAnimationObjectHighlighted__Byte__String__Boolean__NetworkConnectionToClient(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x60017ED")]
		[Address(RVA = "0x163361C", Offset = "0x163361C", VA = "0x163361C")]
		protected void UserCode_RpcSetAnimationObjectHighlighted__Byte__Int32__String__Boolean(byte requestId, int senderConnectionId, string obj, bool value)
		{
		}

		[Token(Token = "0x60017EE")]
		[Address(RVA = "0x1633738", Offset = "0x1633738", VA = "0x1633738")]
		protected static void InvokeUserCode_RpcSetAnimationObjectHighlighted__Byte__Int32__String__Boolean(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x60017EF")]
		[Address(RVA = "0x16338B4", Offset = "0x16338B4", VA = "0x16338B4")]
		protected void UserCode_CmdSetAnimationObjectHidden__Byte__String__Boolean__NetworkConnectionToClient(byte requestId, string obj, bool value, NetworkConnectionToClient sender)
		{
		}

		[Token(Token = "0x60017F0")]
		[Address(RVA = "0x1633930", Offset = "0x1633930", VA = "0x1633930")]
		protected static void InvokeUserCode_CmdSetAnimationObjectHidden__Byte__String__Boolean__NetworkConnectionToClient(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x60017F1")]
		[Address(RVA = "0x1633AD4", Offset = "0x1633AD4", VA = "0x1633AD4")]
		protected void UserCode_RpcSetAnimationObjectHidden__Byte__Int32__String__Boolean(byte requestId, int senderConnectionId, string obj, bool value)
		{
		}

		[Token(Token = "0x60017F2")]
		[Address(RVA = "0x1633BF0", Offset = "0x1633BF0", VA = "0x1633BF0")]
		protected static void InvokeUserCode_RpcSetAnimationObjectHidden__Byte__Int32__String__Boolean(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x60017F3")]
		[Address(RVA = "0x1633D6C", Offset = "0x1633D6C", VA = "0x1633D6C")]
		static NetworkAnatomyServer()
		{
		}

		[Token(Token = "0x60017F4")]
		[Address(RVA = "0x16354D0", Offset = "0x16354D0", VA = "0x16354D0", Slot = "6")]
		public override bool SerializeSyncVars(NetworkWriter writer, bool forceAll)
		{
			return default(bool);
		}

		[Token(Token = "0x60017F5")]
		[Address(RVA = "0x163559C", Offset = "0x163559C", VA = "0x163559C", Slot = "7")]
		public override void DeserializeSyncVars(NetworkReader reader, bool initialState)
		{
		}
	}
	[Token(Token = "0x20004A5")]
	public static class NetworkAnatomySerializer
	{
		[Token(Token = "0x600185B")]
		[Address(RVA = "0x1636AD0", Offset = "0x1636AD0", VA = "0x1636AD0")]
		public static void WriteSystemTypeIntKeyValuePair(this NetworkWriter writer, KeyValuePair<Database.SystemType, int> keyValuePair)
		{
		}

		[Token(Token = "0x600185C")]
		[Address(RVA = "0x1636B6C", Offset = "0x1636B6C", VA = "0x1636B6C")]
		public static KeyValuePair<Database.SystemType, int> ReadSystemTypeIntKeyValuePair(this NetworkReader reader)
		{
			return default(KeyValuePair<Database.SystemType, int>);
		}

		[Token(Token = "0x600185D")]
		[Address(RVA = "0x1636C1C", Offset = "0x1636C1C", VA = "0x1636C1C")]
		public static void WriteIntIntKeyValuePair(this NetworkWriter writer, KeyValuePair<int, int> keyValuePair)
		{
		}

		[Token(Token = "0x600185E")]
		[Address(RVA = "0x1636CB0", Offset = "0x1636CB0", VA = "0x1636CB0")]
		public static KeyValuePair<int, int> ReadIntIntKeyValuePair(this NetworkReader reader)
		{
			return default(KeyValuePair<int, int>);
		}

		[Token(Token = "0x600185F")]
		[Address(RVA = "0x1636D54", Offset = "0x1636D54", VA = "0x1636D54")]
		public static void WriteIntDisassembleStateKeyValuePair(this NetworkWriter writer, KeyValuePair<int, DisassembleState> keyValuePair)
		{
		}

		[Token(Token = "0x6001860")]
		[Address(RVA = "0x1636DEC", Offset = "0x1636DEC", VA = "0x1636DEC")]
		public static KeyValuePair<int, DisassembleState> ReadIntDisassembleStateKeyValuePair(this NetworkReader reader)
		{
			return default(KeyValuePair<int, DisassembleState>);
		}

		[Token(Token = "0x6001861")]
		[Address(RVA = "0x16211A0", Offset = "0x16211A0", VA = "0x16211A0")]
		public static void WriteAnatomyModel(this NetworkWriter writer, IAnatomyModel<int> anatomyModel)
		{
		}

		[Token(Token = "0x6001862")]
		[Address(RVA = "0x162C8EC", Offset = "0x162C8EC", VA = "0x162C8EC")]
		public static IAnatomyModel<int> ReadAnatomyModel(this NetworkReader reader)
		{
			return null;
		}

		[Token(Token = "0x6001863")]
		[Address(RVA = "0x1636E98", Offset = "0x1636E98", VA = "0x1636E98")]
		public static void WritePoseData(this NetworkWriter writer, IPoseData poseData)
		{
		}

		[Token(Token = "0x6001864")]
		[Address(RVA = "0x163718C", Offset = "0x163718C", VA = "0x163718C")]
		public static IPoseData ReadPoseData(this NetworkReader reader)
		{
			return null;
		}

		[Token(Token = "0x6001865")]
		[Address(RVA = "0x1637068", Offset = "0x1637068", VA = "0x1637068")]
		public static void WriteMovedObjects(this NetworkWriter writer, IEnumerable<KeyValuePair<int, IPoseData>> movedObjects)
		{
		}

		[Token(Token = "0x6001866")]
		[Address(RVA = "0x163724C", Offset = "0x163724C", VA = "0x163724C")]
		public static IEnumerable<KeyValuePair<int, IPoseData>> ReadMovedObjects(this NetworkReader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x20004A6")]
	public class NetworkController : NetworkBehaviour
	{
		[Token(Token = "0x40016A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject _controller;

		[Token(Token = "0x40016A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private global::Networking.Components.NetworkTransformChild _networkTransformChild;

		[Token(Token = "0x40016AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private ControllerModelContainer _controllerModelContainer;

		[Token(Token = "0x40016AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool _lastActive;

		[Token(Token = "0x40016B0")]
		private const CompareOptions ControllerCompareOptions = CompareOptions.IgnoreCase | CompareOptions.IgnoreSymbols;

		[Token(Token = "0x40016B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		protected NetworkBehaviourSyncVar ___<NetworkPlayerHandler>k__BackingFieldNetId;

		[Token(Token = "0x1700038D")]
		public string ControllerModel
		{
			[Token(Token = "0x6001867")]
			[Address(RVA = "0x1637394", Offset = "0x1637394", VA = "0x1637394")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001868")]
			[Address(RVA = "0x163739C", Offset = "0x163739C", VA = "0x163739C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700038E")]
		public VR.Input.Handedness Handedness
		{
			[Token(Token = "0x6001869")]
			[Address(RVA = "0x163745C", Offset = "0x163745C", VA = "0x163745C")]
			[CompilerGenerated]
			get
			{
				return default(VR.Input.Handedness);
			}
			[Token(Token = "0x600186A")]
			[Address(RVA = "0x1637464", Offset = "0x1637464", VA = "0x1637464")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700038F")]
		public NetworkPlayerHandler NetworkPlayerHandler
		{
			[Token(Token = "0x600186B")]
			[Address(RVA = "0x1637524", Offset = "0x1637524", VA = "0x1637524")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600186C")]
			[Address(RVA = "0x1637578", Offset = "0x1637578", VA = "0x1637578")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000390")]
		public bool Active
		{
			[Token(Token = "0x600186D")]
			[Address(RVA = "0x163763C", Offset = "0x163763C", VA = "0x163763C")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600186E")]
			[Address(RVA = "0x1637644", Offset = "0x1637644", VA = "0x1637644")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000391")]
		public global::Networking.Components.NetworkTransformChild NetworkTransformChild
		{
			[Token(Token = "0x600186F")]
			[Address(RVA = "0x163770C", Offset = "0x163770C", VA = "0x163770C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000392")]
		public string Network<ControllerModel>k__BackingField
		{
			[Token(Token = "0x6001876")]
			[Address(RVA = "0x1637C4C", Offset = "0x1637C4C", VA = "0x1637C4C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001877")]
			[Address(RVA = "0x16373A0", Offset = "0x16373A0", VA = "0x16373A0")]
			[param: In]
			set
			{
			}
		}

		[Token(Token = "0x17000393")]
		public VR.Input.Handedness Network<Handedness>k__BackingField
		{
			[Token(Token = "0x6001878")]
			[Address(RVA = "0x1637C54", Offset = "0x1637C54", VA = "0x1637C54")]
			get
			{
				return default(VR.Input.Handedness);
			}
			[Token(Token = "0x6001879")]
			[Address(RVA = "0x1637468", Offset = "0x1637468", VA = "0x1637468")]
			[param: In]
			set
			{
			}
		}

		[Token(Token = "0x17000394")]
		public NetworkPlayerHandler Network<NetworkPlayerHandler>k__BackingField
		{
			[Token(Token = "0x600187A")]
			[Address(RVA = "0x1637528", Offset = "0x1637528", VA = "0x1637528")]
			get
			{
				return null;
			}
			[Token(Token = "0x600187B")]
			[Address(RVA = "0x163757C", Offset = "0x163757C", VA = "0x163757C")]
			[param: In]
			set
			{
			}
		}

		[Token(Token = "0x17000395")]
		public bool Network<Active>k__BackingField
		{
			[Token(Token = "0x600187C")]
			[Address(RVA = "0x1637C5C", Offset = "0x1637C5C", VA = "0x1637C5C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600187D")]
			[Address(RVA = "0x163764C", Offset = "0x163764C", VA = "0x163764C")]
			[param: In]
			set
			{
			}
		}

		[Token(Token = "0x6001870")]
		[Address(RVA = "0x1637714", Offset = "0x1637714", VA = "0x1637714")]
		protected void Start()
		{
		}

		[Token(Token = "0x6001871")]
		[Address(RVA = "0x1637AA4", Offset = "0x1637AA4", VA = "0x1637AA4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001872")]
		[Address(RVA = "0x1637AD8", Offset = "0x1637AD8", VA = "0x1637AD8")]
		private void OnActiveChanged(bool newValue)
		{
		}

		[Token(Token = "0x6001873")]
		[Address(RVA = "0x1637B94", Offset = "0x1637B94", VA = "0x1637B94")]
		public NetworkController()
		{
		}

		[Token(Token = "0x6001875")]
		[Address(RVA = "0x1637C48", Offset = "0x1637C48", VA = "0x1637C48")]
		private void MirrorProcessed()
		{
		}

		[Token(Token = "0x600187E")]
		[Address(RVA = "0x1637C64", Offset = "0x1637C64", VA = "0x1637C64", Slot = "6")]
		public override bool SerializeSyncVars(NetworkWriter writer, bool forceAll)
		{
			return default(bool);
		}

		[Token(Token = "0x600187F")]
		[Address(RVA = "0x1637E24", Offset = "0x1637E24", VA = "0x1637E24", Slot = "7")]
		public override void DeserializeSyncVars(NetworkReader reader, bool initialState)
		{
		}
	}
	[Token(Token = "0x20004A7")]
	public class NetworkControllerHandler : NetworkBehaviour, IMixedRealitySourceStateHandler, IEventSystemHandler
	{
		[Token(Token = "0x20004A8")]
		private class ClientControllerDef
		{
			[Token(Token = "0x40016BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public NetworkController NetworkController;

			[Token(Token = "0x40016BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public bool IsTracked;

			[Token(Token = "0x6001899")]
			[Address(RVA = "0x1639078", Offset = "0x1639078", VA = "0x1639078")]
			public ClientControllerDef()
			{
			}
		}

		[Token(Token = "0x20004A9")]
		private class ServerControllerDef
		{
			[Token(Token = "0x40016BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public NetworkController Left;

			[Token(Token = "0x40016BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public NetworkController Right;

			[Token(Token = "0x600189A")]
			[Address(RVA = "0x1639B48", Offset = "0x1639B48", VA = "0x1639B48")]
			public ServerControllerDef()
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20004AB")]
		[CompilerGenerated]
		private struct <OnClientStarted>d__14 : IAsyncStateMachine
		{
			[Token(Token = "0x40016C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40016C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x40016C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public NetworkControllerHandler <>4__this;

			[Token(Token = "0x40016C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x60018A0")]
			[Address(RVA = "0x1639E7C", Offset = "0x1639E7C", VA = "0x1639E7C", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60018A1")]
			[Address(RVA = "0x163A834", Offset = "0x163A834", VA = "0x163A834", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x40016B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private readonly ClientControllerDef _left;

		[Token(Token = "0x40016B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private readonly ClientControllerDef _right;

		[Token(Token = "0x40016B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private ControllerPoseSynchronizer _leftPoseSynchronizer;

		[Token(Token = "0x40016B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private ControllerPoseSynchronizer _rightPoseSynchronizer;

		[Token(Token = "0x40016B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private CancellationTokenSource _disconnectCancellationTokenSource;

		[Token(Token = "0x40016B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private readonly List<NetworkController> _localNetworkControllers;

		[Token(Token = "0x40016B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private NetworkController _networkControllerPrefab;

		[Token(Token = "0x40016B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private readonly CachedNetworkConnectionComponentResolver<NetworkPlayerHandler> _networkPlayerHandlerCache;

		[Token(Token = "0x40016BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private readonly Dictionary<int, ServerControllerDef> _networkControllers;

		[Token(Token = "0x40016BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly System.Collections.Generic.IReadOnlyDictionary<string, string> PlatformIds;

		[Token(Token = "0x17000396")]
		public IReadOnlyList<NetworkController> LocalNetworkControllers
		{
			[Token(Token = "0x6001882")]
			[Address(RVA = "0x1638264", Offset = "0x1638264", VA = "0x1638264")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001880")]
		[Address(RVA = "0x16380BC", Offset = "0x16380BC", VA = "0x16380BC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001881")]
		[Address(RVA = "0x163823C", Offset = "0x163823C", VA = "0x163823C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001883")]
		[Address(RVA = "0x16380C0", Offset = "0x16380C0", VA = "0x16380C0")]
		private void UpdateClient()
		{
		}

		[Token(Token = "0x6001884")]
		[Address(RVA = "0x1638250", Offset = "0x1638250", VA = "0x1638250")]
		private void OnDestroyClient()
		{
		}

		[Token(Token = "0x6001885")]
		[Address(RVA = "0x1638610", Offset = "0x1638610", VA = "0x1638610", Slot = "10")]
		public override void OnStartClient()
		{
		}

		[Token(Token = "0x6001886")]
		[Address(RVA = "0x1638614", Offset = "0x1638614", VA = "0x1638614")]
		[AsyncStateMachine(typeof(<OnClientStarted>d__14))]
		private void OnClientStarted()
		{
		}

		[Token(Token = "0x6001887")]
		[Address(RVA = "0x16386CC", Offset = "0x16386CC", VA = "0x16386CC", Slot = "11")]
		public override void OnStopClient()
		{
		}

		[Token(Token = "0x6001888")]
		[Address(RVA = "0x16387EC", Offset = "0x16387EC", VA = "0x16387EC", Slot = "16")]
		public void OnSourceDetected(SourceStateEventData eventData)
		{
		}

		[Token(Token = "0x6001889")]
		[Address(RVA = "0x1638948", Offset = "0x1638948", VA = "0x1638948", Slot = "17")]
		public void OnSourceLost(SourceStateEventData eventData)
		{
		}

		[Token(Token = "0x600188A")]
		[Address(RVA = "0x163894C", Offset = "0x163894C", VA = "0x163894C")]
		private ClientControllerDef GetClientControllerDef(VR.Input.Handedness handedness)
		{
			return null;
		}

		[Token(Token = "0x600188B")]
		[Address(RVA = "0x1638920", Offset = "0x1638920", VA = "0x1638920")]
		private ControllerPoseSynchronizer GetControllerPoseSynchronizer(VR.Input.Handedness handedness)
		{
			return null;
		}

		[Token(Token = "0x600188C")]
		[Address(RVA = "0x1638974", Offset = "0x1638974", VA = "0x1638974")]
		[TargetRpc]
		private void TargetInitializeController(NetworkConnection target, VR.Input.Handedness handedness, NetworkController controller)
		{
		}

		[Token(Token = "0x600188D")]
		[Address(RVA = "0x1638B90", Offset = "0x1638B90", VA = "0x1638B90")]
		private static void RemoveInvalidLocalNetworkControllers(List<NetworkController> networkControllers)
		{
		}

		[Token(Token = "0x600188E")]
		[Address(RVA = "0x16383E4", Offset = "0x16383E4", VA = "0x16383E4")]
		[Command(requiresAuthority = false)]
		private void CmdSetControllerAvailable(VR.Input.Handedness handedness, string modelId, bool value, [Optional] NetworkConnectionToClient sender)
		{
		}

		[Token(Token = "0x600188F")]
		[Address(RVA = "0x1638C8C", Offset = "0x1638C8C", VA = "0x1638C8C")]
		private static NetworkController GetNetworkController(ServerControllerDef serverControllerDef, VR.Input.Handedness handedness)
		{
			return null;
		}

		[Token(Token = "0x6001890")]
		[Address(RVA = "0x1638CC8", Offset = "0x1638CC8", VA = "0x1638CC8")]
		public static string GetPlatformId(string loadedDeviceName)
		{
			return null;
		}

		[Token(Token = "0x6001891")]
		[Address(RVA = "0x163826C", Offset = "0x163826C", VA = "0x163826C")]
		public static string GetControllerModelId(string deviceId)
		{
			return null;
		}

		[Token(Token = "0x6001892")]
		[Address(RVA = "0x1638E38", Offset = "0x1638E38", VA = "0x1638E38")]
		public NetworkControllerHandler()
		{
		}

		[Token(Token = "0x6001893")]
		[Address(RVA = "0x1639080", Offset = "0x1639080", VA = "0x1639080")]
		static NetworkControllerHandler()
		{
		}

		[Token(Token = "0x6001894")]
		[Address(RVA = "0x1639370", Offset = "0x1639370", VA = "0x1639370")]
		private void MirrorProcessed()
		{
		}

		[Token(Token = "0x6001895")]
		[Address(RVA = "0x1639374", Offset = "0x1639374", VA = "0x1639374")]
		protected void UserCode_TargetInitializeController__NetworkConnection__Handedness__NetworkController(NetworkConnection target, VR.Input.Handedness handedness, NetworkController controller)
		{
		}

		[Token(Token = "0x6001896")]
		[Address(RVA = "0x1639584", Offset = "0x1639584", VA = "0x1639584")]
		protected static void InvokeUserCode_TargetInitializeController__NetworkConnection__Handedness__NetworkController(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x6001897")]
		[Address(RVA = "0x1639730", Offset = "0x1639730", VA = "0x1639730")]
		protected void UserCode_CmdSetControllerAvailable__Handedness__String__Boolean__NetworkConnectionToClient(VR.Input.Handedness handedness, string modelId, bool value, NetworkConnectionToClient sender)
		{
		}

		[Token(Token = "0x6001898")]
		[Address(RVA = "0x1639B50", Offset = "0x1639B50", VA = "0x1639B50")]
		protected static void InvokeUserCode_CmdSetControllerAvailable__Handedness__String__Boolean__NetworkConnectionToClient(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}
	}
	[Token(Token = "0x20004AC")]
	public class NetworkControllerVisibilityPlayerResolver : MonoBehaviour
	{
		[Token(Token = "0x40016C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private NetworkController _networkController;

		[Token(Token = "0x40016C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AvatarVisibilityHandler _avatarVisibilityHandler;

		[Token(Token = "0x60018A2")]
		[Address(RVA = "0x163A840", Offset = "0x163A840", VA = "0x163A840")]
		private void Start()
		{
		}

		[Token(Token = "0x60018A3")]
		[Address(RVA = "0x163A8B0", Offset = "0x163A8B0", VA = "0x163A8B0")]
		public NetworkControllerVisibilityPlayerResolver()
		{
		}
	}
	[Token(Token = "0x20004AD")]
	public class NetworkFocusHandler : NetworkBehaviour
	{
		[Token(Token = "0x40016CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private NetworkRequestHandler _networkRequestHandler;

		[Token(Token = "0x1400003D")]
		public event Action<SerializedObjectInfo, SerializedObjectInfo> FocusChanged
		{
			[Token(Token = "0x60018A4")]
			[Address(RVA = "0x163A8B8", Offset = "0x163A8B8", VA = "0x163A8B8")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60018A5")]
			[Address(RVA = "0x163A968", Offset = "0x163A968", VA = "0x163A968")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x60018A6")]
		[Address(RVA = "0x163AA18", Offset = "0x163AA18", VA = "0x163AA18")]
		public bool HasAuthority(NetworkConnectionToClient sender)
		{
			return default(bool);
		}

		[Token(Token = "0x60018A7")]
		[Address(RVA = "0x163AA20", Offset = "0x163AA20", VA = "0x163AA20")]
		public Task ChangeFocus(SerializedObjectInfo previousValue, SerializedObjectInfo newValue, CancellationToken cancellationToken)
		{
			return null;
		}

		[Token(Token = "0x60018A8")]
		[Address(RVA = "0x163AB30", Offset = "0x163AB30", VA = "0x163AB30")]
		[Command(requiresAuthority = false)]
		private void CmdChangeFocus(byte requestId, SerializedObjectInfo previousValue, SerializedObjectInfo newValue, [Optional] NetworkConnectionToClient sender)
		{
		}

		[Token(Token = "0x60018A9")]
		[Address(RVA = "0x163ADB4", Offset = "0x163ADB4", VA = "0x163ADB4")]
		[ClientRpc]
		private void RpcChangeFocus(byte requestId, int connectionId, SerializedObjectInfo previousValue, SerializedObjectInfo newValue)
		{
		}

		[Token(Token = "0x60018AA")]
		[Address(RVA = "0x163AFEC", Offset = "0x163AFEC", VA = "0x163AFEC")]
		public NetworkFocusHandler()
		{
		}

		[Token(Token = "0x60018AB")]
		[Address(RVA = "0x163AFF4", Offset = "0x163AFF4", VA = "0x163AFF4")]
		private void MirrorProcessed()
		{
		}

		[Token(Token = "0x60018AC")]
		[Address(RVA = "0x163AFF8", Offset = "0x163AFF8", VA = "0x163AFF8")]
		protected void UserCode_CmdChangeFocus__Byte__SerializedObjectInfo__SerializedObjectInfo__NetworkConnectionToClient(byte requestId, SerializedObjectInfo previousValue, SerializedObjectInfo newValue, NetworkConnectionToClient sender)
		{
		}

		[Token(Token = "0x60018AD")]
		[Address(RVA = "0x163B01C", Offset = "0x163B01C", VA = "0x163B01C")]
		protected static void InvokeUserCode_CmdChangeFocus__Byte__SerializedObjectInfo__SerializedObjectInfo__NetworkConnectionToClient(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x60018AE")]
		[Address(RVA = "0x163B284", Offset = "0x163B284", VA = "0x163B284")]
		protected void UserCode_RpcChangeFocus__Byte__Int32__SerializedObjectInfo__SerializedObjectInfo(byte requestId, int connectionId, SerializedObjectInfo previousValue, SerializedObjectInfo newValue)
		{
		}

		[Token(Token = "0x60018AF")]
		[Address(RVA = "0x163B39C", Offset = "0x163B39C", VA = "0x163B39C")]
		protected static void InvokeUserCode_RpcChangeFocus__Byte__Int32__SerializedObjectInfo__SerializedObjectInfo(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x60018B0")]
		[Address(RVA = "0x163B510", Offset = "0x163B510", VA = "0x163B510")]
		static NetworkFocusHandler()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20004B0")]
	public struct StartManipulationData
	{
		[Token(Token = "0x40016D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool IsDirect;
	}
	[Serializable]
	[Token(Token = "0x20004B1")]
	public struct StopManipulationData
	{
		[Token(Token = "0x40016D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool IsDirect;

		[Token(Token = "0x40016D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public Vector3 LocalPosition;

		[Token(Token = "0x40016D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Quaternion LocalRotation;

		[Token(Token = "0x40016D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 LocalScale;

		[Token(Token = "0x40016D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector3 Velocity;

		[Token(Token = "0x40016D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector3 AngularVelocity;
	}
	[Token(Token = "0x20004B2")]
	public sealed class SerializedObjectInfoEqualityComparer : IEqualityComparer<SerializedObjectInfo>
	{
		[Token(Token = "0x60018B5")]
		[Address(RVA = "0x163B6F8", Offset = "0x163B6F8", VA = "0x163B6F8", Slot = "4")]
		public bool Equals(SerializedObjectInfo x, SerializedObjectInfo y)
		{
			return default(bool);
		}

		[Token(Token = "0x60018B6")]
		[Address(RVA = "0x163B7E8", Offset = "0x163B7E8", VA = "0x163B7E8", Slot = "5")]
		public int GetHashCode(SerializedObjectInfo obj)
		{
			return default(int);
		}

		[Token(Token = "0x60018B7")]
		public static int GetHashCode<T>(T[] array)
		{
			return default(int);
		}

		[Token(Token = "0x60018B8")]
		[Address(RVA = "0x163B86C", Offset = "0x163B86C", VA = "0x163B86C")]
		public SerializedObjectInfoEqualityComparer()
		{
		}
	}
	[Token(Token = "0x20004B4")]
	public class NetworkManipulationHandler : NetworkBehaviour
	{
		[StructLayout(3)]
		[Token(Token = "0x20004B5")]
		[CompilerGenerated]
		private struct <GetObjectsBeingManipulated>d__13 : IAsyncStateMachine
		{
			[Token(Token = "0x40016E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40016E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder<SerializedObjectInfo[]> <>t__builder;

			[Token(Token = "0x40016E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public NetworkManipulationHandler <>4__this;

			[Token(Token = "0x40016E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public CancellationToken cancellationToken;

			[Token(Token = "0x40016EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TaskAwaiter<object> <>u__1;

			[Token(Token = "0x60018DC")]
			[Address(RVA = "0x163E270", Offset = "0x163E270", VA = "0x163E270", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60018DD")]
			[Address(RVA = "0x163E514", Offset = "0x163E514", VA = "0x163E514", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x40016DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private NetworkManipulationObject[] _networkManipulationObjects;

		[Token(Token = "0x40016DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private NetworkRequestHandler _networkRequestHandler;

		[Token(Token = "0x40016DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private NetworkManipulationObject _networkManipulationObjectPrefab;

		[Token(Token = "0x40016DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Transform _networkManipulationObjectsParent;

		[Token(Token = "0x40016DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private int _numberOfObjectsToSpawnInABatch;

		[Token(Token = "0x40016E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[SerializeField]
		private int _thresholdToSpawnObjects;

		[Token(Token = "0x40016E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private readonly Stack<NetworkManipulationObject> _networkManipulationObjectStack;

		[Token(Token = "0x40016E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private readonly Dictionary<SerializedObjectInfo, NetworkManipulationObject> _networkManipulationObjectDictionary;

		[Token(Token = "0x40016E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private readonly HashSet<NetworkManipulationObject> _clientNetworkManipulationObjects;

		[Token(Token = "0x17000397")]
		public IReadOnlyCollection<NetworkManipulationObject> ClientNetworkManipulationObjects
		{
			[Token(Token = "0x60018BC")]
			[Address(RVA = "0x163B874", Offset = "0x163B874", VA = "0x163B874")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1400003E")]
		public event Action<SerializedObjectInfo, StartManipulationData> ManipulationStarted
		{
			[Token(Token = "0x60018C2")]
			[Address(RVA = "0x163BE78", Offset = "0x163BE78", VA = "0x163BE78")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60018C3")]
			[Address(RVA = "0x163BF28", Offset = "0x163BF28", VA = "0x163BF28")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400003F")]
		public event Action<SerializedObjectInfo, StopManipulationData> ManipulationStopped
		{
			[Token(Token = "0x60018C7")]
			[Address(RVA = "0x163C550", Offset = "0x163C550", VA = "0x163C550")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60018C8")]
			[Address(RVA = "0x163C600", Offset = "0x163C600", VA = "0x163C600")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x60018BD")]
		[Address(RVA = "0x163B87C", Offset = "0x163B87C", VA = "0x163B87C", Slot = "8")]
		public override void OnStartServer()
		{
		}

		[Token(Token = "0x60018BE")]
		[Address(RVA = "0x163B920", Offset = "0x163B920", VA = "0x163B920")]
		private bool HasAuthority(NetworkConnectionToClient networkConnectionToClient)
		{
			return default(bool);
		}

		[Token(Token = "0x60018BF")]
		[Address(RVA = "0x163B928", Offset = "0x163B928", VA = "0x163B928")]
		[AsyncStateMachine(typeof(<GetObjectsBeingManipulated>d__13))]
		public Task<SerializedObjectInfo[]> GetObjectsBeingManipulated(CancellationToken cancellationToken)
		{
			return null;
		}

		[Token(Token = "0x60018C0")]
		[Address(RVA = "0x163BA54", Offset = "0x163BA54", VA = "0x163BA54")]
		[Command(requiresAuthority = false)]
		private void CmdGetObjectsBeingManipulated(byte requestId, [Optional] NetworkConnectionToClient sender)
		{
		}

		[Token(Token = "0x60018C1")]
		[Address(RVA = "0x163BC48", Offset = "0x163BC48", VA = "0x163BC48")]
		[TargetRpc]
		private void TargetGetObjectsBeingManipulated(NetworkConnection target, byte requestId, int connectionId, SerializedObjectInfo[] value)
		{
		}

		[Token(Token = "0x60018C4")]
		[Address(RVA = "0x163BFD8", Offset = "0x163BFD8", VA = "0x163BFD8")]
		public Task StartManipulation(SerializedObjectInfo obj, StartManipulationData data, CancellationToken cancellationToken)
		{
			return null;
		}

		[Token(Token = "0x60018C5")]
		[Address(RVA = "0x163C0E0", Offset = "0x163C0E0", VA = "0x163C0E0")]
		[Command(requiresAuthority = false)]
		private void CmdStartManipulation(byte requestId, SerializedObjectInfo objectId, StartManipulationData data, [Optional] NetworkConnectionToClient sender)
		{
		}

		[Token(Token = "0x60018C6")]
		[Address(RVA = "0x163C300", Offset = "0x163C300", VA = "0x163C300")]
		[ClientRpc]
		private void RpcStartManipulation(byte requestId, int connectionId, SerializedObjectInfo obj, StartManipulationData data, NetworkManipulationObject networkManipulationObject)
		{
		}

		[Token(Token = "0x60018C9")]
		[Address(RVA = "0x163C6B0", Offset = "0x163C6B0", VA = "0x163C6B0")]
		public Task StopManipulation(SerializedObjectInfo obj, StopManipulationData data, CancellationToken cancellationToken)
		{
			return null;
		}

		[Token(Token = "0x60018CA")]
		[Address(RVA = "0x163C7C4", Offset = "0x163C7C4", VA = "0x163C7C4")]
		[Command(requiresAuthority = false)]
		private void CmdStopManipulation(byte requestId, SerializedObjectInfo obj, StopManipulationData data, [Optional] NetworkConnectionToClient sender)
		{
		}

		[Token(Token = "0x60018CB")]
		[Address(RVA = "0x163CA00", Offset = "0x163CA00", VA = "0x163CA00")]
		[ClientRpc]
		private void RpcStopManipulation(byte requestId, int connectionId, SerializedObjectInfo obj, StopManipulationData data)
		{
		}

		[Token(Token = "0x60018CC")]
		[Address(RVA = "0x163CC58", Offset = "0x163CC58", VA = "0x163CC58")]
		public NetworkManipulationHandler()
		{
		}

		[Token(Token = "0x60018CE")]
		[Address(RVA = "0x163CDBC", Offset = "0x163CDBC", VA = "0x163CDBC")]
		private void MirrorProcessed()
		{
		}

		[Token(Token = "0x60018CF")]
		[Address(RVA = "0x163CDC0", Offset = "0x163CDC0", VA = "0x163CDC0")]
		protected void UserCode_CmdGetObjectsBeingManipulated__Byte__NetworkConnectionToClient(byte requestId, NetworkConnectionToClient sender)
		{
		}

		[Token(Token = "0x60018D0")]
		[Address(RVA = "0x163CE5C", Offset = "0x163CE5C", VA = "0x163CE5C")]
		protected static void InvokeUserCode_CmdGetObjectsBeingManipulated__Byte__NetworkConnectionToClient(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x60018D1")]
		[Address(RVA = "0x163CFDC", Offset = "0x163CFDC", VA = "0x163CFDC")]
		protected void UserCode_TargetGetObjectsBeingManipulated__NetworkConnection__Byte__Int32__SerializedObjectInfo[](NetworkConnection target, byte requestId, int connectionId, SerializedObjectInfo[] value)
		{
		}

		[Token(Token = "0x60018D2")]
		[Address(RVA = "0x163CFF8", Offset = "0x163CFF8", VA = "0x163CFF8")]
		protected static void InvokeUserCode_TargetGetObjectsBeingManipulated__NetworkConnection__Byte__Int32__SerializedObjectInfo[](NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x60018D3")]
		[Address(RVA = "0x163D1A8", Offset = "0x163D1A8", VA = "0x163D1A8")]
		protected void UserCode_CmdStartManipulation__Byte__SerializedObjectInfo__StartManipulationData__NetworkConnectionToClient(byte requestId, SerializedObjectInfo objectId, StartManipulationData data, NetworkConnectionToClient sender)
		{
		}

		[Token(Token = "0x60018D4")]
		[Address(RVA = "0x163D474", Offset = "0x163D474", VA = "0x163D474")]
		protected static void InvokeUserCode_CmdStartManipulation__Byte__SerializedObjectInfo__StartManipulationData__NetworkConnectionToClient(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x60018D5")]
		[Address(RVA = "0x163D614", Offset = "0x163D614", VA = "0x163D614")]
		protected void UserCode_RpcStartManipulation__Byte__Int32__SerializedObjectInfo__StartManipulationData__NetworkManipulationObject(byte requestId, int connectionId, SerializedObjectInfo obj, StartManipulationData data, NetworkManipulationObject networkManipulationObject)
		{
		}

		[Token(Token = "0x60018D6")]
		[Address(RVA = "0x163D758", Offset = "0x163D758", VA = "0x163D758")]
		protected static void InvokeUserCode_RpcStartManipulation__Byte__Int32__SerializedObjectInfo__StartManipulationData__NetworkManipulationObject(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x60018D7")]
		[Address(RVA = "0x163D904", Offset = "0x163D904", VA = "0x163D904")]
		protected void UserCode_CmdStopManipulation__Byte__SerializedObjectInfo__StopManipulationData__NetworkConnectionToClient(byte requestId, SerializedObjectInfo obj, StopManipulationData data, NetworkConnectionToClient sender)
		{
		}

		[Token(Token = "0x60018D8")]
		[Address(RVA = "0x163DA5C", Offset = "0x163DA5C", VA = "0x163DA5C")]
		protected static void InvokeUserCode_CmdStopManipulation__Byte__SerializedObjectInfo__StopManipulationData__NetworkConnectionToClient(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x60018D9")]
		[Address(RVA = "0x163DC3C", Offset = "0x163DC3C", VA = "0x163DC3C")]
		protected void UserCode_RpcStopManipulation__Byte__Int32__SerializedObjectInfo__StopManipulationData(byte requestId, int connectionId, SerializedObjectInfo obj, StopManipulationData data)
		{
		}

		[Token(Token = "0x60018DA")]
		[Address(RVA = "0x163DD60", Offset = "0x163DD60", VA = "0x163DD60")]
		protected static void InvokeUserCode_RpcStopManipulation__Byte__Int32__SerializedObjectInfo__StopManipulationData(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x60018DB")]
		[Address(RVA = "0x163DF18", Offset = "0x163DF18", VA = "0x163DF18")]
		static NetworkManipulationHandler()
		{
		}
	}
	[Token(Token = "0x20004BA")]
	[RequireComponent(typeof(global::Networking.Components.NetworkTransformChild))]
	public class NetworkManipulationObject : NetworkBehaviour
	{
		[Token(Token = "0x40016F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private global::Networking.Components.NetworkTransformChild _networkTransformChild;

		[Token(Token = "0x40016F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SyncVar(hook = "OnTargetChanged")]
		private SerializedObjectInfo _target;

		[Token(Token = "0x40016F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private ManipulationObjectProvider<SerializedObjectInfo> _manipulationObjectProvider;

		[Token(Token = "0x17000398")]
		private ManipulationObjectProvider<SerializedObjectInfo> ManipulationObjectProvider
		{
			[Token(Token = "0x60018E6")]
			[Address(RVA = "0x163E6A4", Offset = "0x163E6A4", VA = "0x163E6A4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000399")]
		public global::Networking.Components.NetworkTransformChild NetworkTransformChild
		{
			[Token(Token = "0x60018E7")]
			[Address(RVA = "0x163E754", Offset = "0x163E754", VA = "0x163E754")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700039A")]
		public SerializedObjectInfo Network_target
		{
			[Token(Token = "0x60018EC")]
			[Address(RVA = "0x163EA18", Offset = "0x163EA18", VA = "0x163EA18")]
			get
			{
				return null;
			}
			[Token(Token = "0x60018ED")]
			[Address(RVA = "0x163E75C", Offset = "0x163E75C", VA = "0x163E75C")]
			[param: In]
			set
			{
			}
		}

		[Token(Token = "0x60018E8")]
		[Address(RVA = "0x163D470", Offset = "0x163D470", VA = "0x163D470")]
		public void SetTarget(SerializedObjectInfo value)
		{
		}

		[Token(Token = "0x60018E9")]
		[Address(RVA = "0x163E810", Offset = "0x163E810", VA = "0x163E810")]
		private void OnTargetChanged(SerializedObjectInfo oldValue, SerializedObjectInfo newValue)
		{
		}

		[Token(Token = "0x60018EA")]
		[Address(RVA = "0x163E9A4", Offset = "0x163E9A4", VA = "0x163E9A4")]
		public NetworkManipulationObject()
		{
		}

		[Token(Token = "0x60018EB")]
		[Address(RVA = "0x163EA14", Offset = "0x163EA14", VA = "0x163EA14")]
		private void MirrorProcessed()
		{
		}

		[Token(Token = "0x60018EE")]
		[Address(RVA = "0x163EA20", Offset = "0x163EA20", VA = "0x163EA20", Slot = "6")]
		public override bool SerializeSyncVars(NetworkWriter writer, bool forceAll)
		{
			return default(bool);
		}

		[Token(Token = "0x60018EF")]
		[Address(RVA = "0x163EACC", Offset = "0x163EACC", VA = "0x163EACC", Slot = "7")]
		public override void DeserializeSyncVars(NetworkReader reader, bool initialState)
		{
		}
	}
	[Token(Token = "0x20004BB")]
	public class NetworkPickHandler : NetworkBehaviour
	{
		[Token(Token = "0x40016FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private NetworkRequestHandler _networkRequestHandler;

		[Token(Token = "0x14000040")]
		public event Action<SerializedObjectInfo, Vector3, Quaternion, Vector3, bool> ItemMoved
		{
			[Token(Token = "0x60018F0")]
			[Address(RVA = "0x163EC28", Offset = "0x163EC28", VA = "0x163EC28")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60018F1")]
			[Address(RVA = "0x163ECD8", Offset = "0x163ECD8", VA = "0x163ECD8")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000041")]
		public event Action<SerializedObjectInfo, bool> ItemReturned
		{
			[Token(Token = "0x60018F5")]
			[Address(RVA = "0x163F46C", Offset = "0x163F46C", VA = "0x163F46C")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60018F6")]
			[Address(RVA = "0x163F51C", Offset = "0x163F51C", VA = "0x163F51C")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x60018F2")]
		[Address(RVA = "0x163ED88", Offset = "0x163ED88", VA = "0x163ED88")]
		public Task MoveItem(SerializedObjectInfo obj, Vector3 position, Quaternion rotation, Vector3 scale, bool useAnimation, CancellationToken cancellationToken)
		{
			return null;
		}

		[Token(Token = "0x60018F3")]
		[Address(RVA = "0x163EEF8", Offset = "0x163EEF8", VA = "0x163EEF8")]
		[Command(requiresAuthority = false)]
		private void CmdMoveItem(byte requestId, SerializedObjectInfo obj, Vector3 position, Quaternion rotation, Vector3 scale, bool useAnimation, [Optional] NetworkConnectionToClient sender)
		{
		}

		[Token(Token = "0x60018F4")]
		[Address(RVA = "0x163F1A8", Offset = "0x163F1A8", VA = "0x163F1A8")]
		[ClientRpc]
		private void RpcMoveItem(byte requestId, int senderConnectionId, SerializedObjectInfo obj, Vector3 position, Quaternion rotation, Vector3 scale, bool useAnimation)
		{
		}

		[Token(Token = "0x60018F7")]
		[Address(RVA = "0x163F5CC", Offset = "0x163F5CC", VA = "0x163F5CC")]
		public Task ReturnItem(SerializedObjectInfo obj, bool useAnimation, CancellationToken cancellationToken)
		{
			return null;
		}

		[Token(Token = "0x60018F8")]
		[Address(RVA = "0x163F6D8", Offset = "0x163F6D8", VA = "0x163F6D8")]
		[Command(requiresAuthority = false)]
		private void CmdReturnItem(byte requestId, SerializedObjectInfo obj, bool useAnimation, [Optional] NetworkConnectionToClient sender)
		{
		}

		[Token(Token = "0x60018F9")]
		[Address(RVA = "0x163F8F8", Offset = "0x163F8F8", VA = "0x163F8F8")]
		[ClientRpc]
		private void RpcReturnItem(byte requestId, int senderConnectionId, SerializedObjectInfo obj, bool useAnimation)
		{
		}

		[Token(Token = "0x60018FA")]
		[Address(RVA = "0x163FB34", Offset = "0x163FB34", VA = "0x163FB34")]
		public NetworkPickHandler()
		{
		}

		[Token(Token = "0x60018FB")]
		[Address(RVA = "0x163FB3C", Offset = "0x163FB3C", VA = "0x163FB3C")]
		private void MirrorProcessed()
		{
		}

		[Token(Token = "0x60018FC")]
		[Address(RVA = "0x163FB40", Offset = "0x163FB40", VA = "0x163FB40")]
		protected void UserCode_CmdMoveItem__Byte__SerializedObjectInfo__Vector3__Quaternion__Vector3__Boolean__NetworkConnectionToClient(byte requestId, SerializedObjectInfo obj, Vector3 position, Quaternion rotation, Vector3 scale, bool useAnimation, NetworkConnectionToClient sender)
		{
		}

		[Token(Token = "0x60018FD")]
		[Address(RVA = "0x163FB74", Offset = "0x163FB74", VA = "0x163FB74")]
		protected static void InvokeUserCode_CmdMoveItem__Byte__SerializedObjectInfo__Vector3__Quaternion__Vector3__Boolean__NetworkConnectionToClient(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x60018FE")]
		[Address(RVA = "0x163FDC0", Offset = "0x163FDC0", VA = "0x163FDC0")]
		protected void UserCode_RpcMoveItem__Byte__Int32__SerializedObjectInfo__Vector3__Quaternion__Vector3__Boolean(byte requestId, int senderConnectionId, SerializedObjectInfo obj, Vector3 position, Quaternion rotation, Vector3 scale, bool useAnimation)
		{
		}

		[Token(Token = "0x60018FF")]
		[Address(RVA = "0x163FF38", Offset = "0x163FF38", VA = "0x163FF38")]
		protected static void InvokeUserCode_RpcMoveItem__Byte__Int32__SerializedObjectInfo__Vector3__Quaternion__Vector3__Boolean(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x6001900")]
		[Address(RVA = "0x1640158", Offset = "0x1640158", VA = "0x1640158")]
		protected void UserCode_CmdReturnItem__Byte__SerializedObjectInfo__Boolean__NetworkConnectionToClient(byte requestId, SerializedObjectInfo obj, bool useAnimation, NetworkConnectionToClient sender)
		{
		}

		[Token(Token = "0x6001901")]
		[Address(RVA = "0x164017C", Offset = "0x164017C", VA = "0x164017C")]
		protected static void InvokeUserCode_CmdReturnItem__Byte__SerializedObjectInfo__Boolean__NetworkConnectionToClient(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x6001902")]
		[Address(RVA = "0x1640320", Offset = "0x1640320", VA = "0x1640320")]
		protected void UserCode_RpcReturnItem__Byte__Int32__SerializedObjectInfo__Boolean(byte requestId, int senderConnectionId, SerializedObjectInfo obj, bool useAnimation)
		{
		}

		[Token(Token = "0x6001903")]
		[Address(RVA = "0x164043C", Offset = "0x164043C", VA = "0x164043C")]
		protected static void InvokeUserCode_RpcReturnItem__Byte__Int32__SerializedObjectInfo__Boolean(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x6001904")]
		[Address(RVA = "0x16405B4", Offset = "0x16405B4", VA = "0x16405B4")]
		static NetworkPickHandler()
		{
		}
	}
	[Token(Token = "0x20004C0")]
	public class NetworkPlayerHandler : NetworkBehaviour
	{
		[Token(Token = "0x400170F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private global::Networking.Components.NetworkTransformChild _playerNetworkTransformChild;

		[Token(Token = "0x4001710")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private global::Networking.Components.NetworkTransformChild _cameraNetworkTransformChild;

		[Token(Token = "0x4001711")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private IPlayerHandler _playerHandler;

		[Token(Token = "0x1700039B")]
		public global::Networking.Components.NetworkTransformChild PlayerNetworkTransformChild
		{
			[Token(Token = "0x600190D")]
			[Address(RVA = "0x1640938", Offset = "0x1640938", VA = "0x1640938")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700039C")]
		public global::Networking.Components.NetworkTransformChild CameraNetworkTransformChild
		{
			[Token(Token = "0x600190E")]
			[Address(RVA = "0x1640940", Offset = "0x1640940", VA = "0x1640940")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600190F")]
		[Address(RVA = "0x1640948", Offset = "0x1640948", VA = "0x1640948", Slot = "12")]
		public override void OnStartLocalPlayer()
		{
		}

		[Token(Token = "0x6001910")]
		[Address(RVA = "0x16409E8", Offset = "0x16409E8", VA = "0x16409E8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001911")]
		[Address(RVA = "0x1640D58", Offset = "0x1640D58", VA = "0x1640D58")]
		public NetworkPlayerHandler()
		{
		}

		[Token(Token = "0x6001912")]
		[Address(RVA = "0x1640D60", Offset = "0x1640D60", VA = "0x1640D60")]
		private void MirrorProcessed()
		{
		}
	}
	[Token(Token = "0x20004C1")]
	public class NetworkPlayerSimulator : NetworkBehaviour
	{
		[Token(Token = "0x4001712")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private MovementSimulatorSettings _playerMovementSettings;

		[Token(Token = "0x4001713")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private MovementSimulatorSettings _lControllerMovementSettings;

		[Token(Token = "0x4001714")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private MovementSimulatorSettings _rControllerMovementSettings;

		[Token(Token = "0x4001715")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private global::Networking.Components.NetworkTransformChild _cameraNetworkTransformChild;

		[Token(Token = "0x4001716")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private global::Networking.Components.NetworkTransformChild _playerNetworkTransformChild;

		[Token(Token = "0x4001717")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private NetworkController _networkControllerPrefab;

		[Token(Token = "0x4001718")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private NetworkPlayerHandler _networkPlayerHandler;

		[Token(Token = "0x4001719")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private NetworkController _lController;

		[Token(Token = "0x400171A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private NetworkController _rController;

		[Token(Token = "0x400171B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private MovementSimulator _cameraMovement;

		[Token(Token = "0x400171C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private MovementSimulator _lControllerMovement;

		[Token(Token = "0x400171D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private MovementSimulator _rControllerMovement;

		[Token(Token = "0x6001913")]
		[Address(RVA = "0x1640D64", Offset = "0x1640D64", VA = "0x1640D64")]
		private void Start()
		{
		}

		[Token(Token = "0x6001914")]
		[Address(RVA = "0x164104C", Offset = "0x164104C", VA = "0x164104C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001915")]
		[Address(RVA = "0x1640E7C", Offset = "0x1640E7C", VA = "0x1640E7C")]
		[Command]
		private void CmdSpawnController(VR.Input.Handedness handedness)
		{
		}

		[Token(Token = "0x6001916")]
		[Address(RVA = "0x16411E8", Offset = "0x16411E8", VA = "0x16411E8")]
		[TargetRpc]
		private void TargetSpawnController(NetworkConnection target, VR.Input.Handedness handedness, NetworkController controller)
		{
		}

		[Token(Token = "0x6001917")]
		[Address(RVA = "0x1641404", Offset = "0x1641404", VA = "0x1641404")]
		public NetworkPlayerSimulator()
		{
		}

		[Token(Token = "0x6001918")]
		[Address(RVA = "0x164140C", Offset = "0x164140C", VA = "0x164140C")]
		private void MirrorProcessed()
		{
		}

		[Token(Token = "0x6001919")]
		[Address(RVA = "0x1641410", Offset = "0x1641410", VA = "0x1641410")]
		protected void UserCode_CmdSpawnController__Handedness(VR.Input.Handedness handedness)
		{
		}

		[Token(Token = "0x600191A")]
		[Address(RVA = "0x1641558", Offset = "0x1641558", VA = "0x1641558")]
		protected static void InvokeUserCode_CmdSpawnController__Handedness(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x600191B")]
		[Address(RVA = "0x16416AC", Offset = "0x16416AC", VA = "0x16416AC")]
		protected void UserCode_TargetSpawnController__NetworkConnection__Handedness__NetworkController(NetworkConnection target, VR.Input.Handedness handedness, NetworkController controller)
		{
		}

		[Token(Token = "0x600191C")]
		[Address(RVA = "0x1641724", Offset = "0x1641724", VA = "0x1641724")]
		protected static void InvokeUserCode_TargetSpawnController__NetworkConnection__Handedness__NetworkController(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x600191D")]
		[Address(RVA = "0x16418D0", Offset = "0x16418D0", VA = "0x16418D0")]
		static NetworkPlayerSimulator()
		{
		}
	}
	[Token(Token = "0x20004C2")]
	public class NetworkPointer : NetworkBehaviour
	{
		[Token(Token = "0x400171E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private readonly HashSet<IUpdatable> _updatables;

		[Token(Token = "0x400171F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private global::Networking.Components.NetworkTransformChild _cursorNetworkTransformChild;

		[Token(Token = "0x4001720")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private LineRenderer _lineRenderer;

		[Token(Token = "0x1700039D")]
		public bool Enabled
		{
			[Token(Token = "0x600191E")]
			[Address(RVA = "0x1641A60", Offset = "0x1641A60", VA = "0x1641A60")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600191F")]
			[Address(RVA = "0x1641A68", Offset = "0x1641A68", VA = "0x1641A68")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700039E")]
		public global::Networking.Components.NetworkTransformChild CursorNetworkTransformChild
		{
			[Token(Token = "0x6001920")]
			[Address(RVA = "0x1641B30", Offset = "0x1641B30", VA = "0x1641B30")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700039F")]
		public bool Network<Enabled>k__BackingField
		{
			[Token(Token = "0x600192A")]
			[Address(RVA = "0x164221C", Offset = "0x164221C", VA = "0x164221C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600192B")]
			[Address(RVA = "0x1641A70", Offset = "0x1641A70", VA = "0x1641A70")]
			[param: In]
			set
			{
			}
		}

		[Token(Token = "0x6001921")]
		[Address(RVA = "0x1641B38", Offset = "0x1641B38", VA = "0x1641B38")]
		private void Start()
		{
		}

		[Token(Token = "0x6001922")]
		[Address(RVA = "0x1641D18", Offset = "0x1641D18", VA = "0x1641D18")]
		private void Update()
		{
		}

		[Token(Token = "0x6001923")]
		[Address(RVA = "0x1641EC8", Offset = "0x1641EC8", VA = "0x1641EC8")]
		private void OnNetworkEnabledChanged(bool value)
		{
		}

		[Token(Token = "0x6001924")]
		[Address(RVA = "0x1641F0C", Offset = "0x1641F0C", VA = "0x1641F0C")]
		private void OnNetworkCursorPositionChanged(Vector3 value)
		{
		}

		[Token(Token = "0x6001925")]
		[Address(RVA = "0x1641F70", Offset = "0x1641F70", VA = "0x1641F70")]
		[Command]
		public void CmdSetEnabled(bool value)
		{
		}

		[Token(Token = "0x6001926")]
		[Address(RVA = "0x1642164", Offset = "0x1642164", VA = "0x1642164")]
		public NetworkPointer()
		{
		}

		[Token(Token = "0x6001929")]
		[Address(RVA = "0x1642218", Offset = "0x1642218", VA = "0x1642218")]
		private void MirrorProcessed()
		{
		}

		[Token(Token = "0x600192C")]
		[Address(RVA = "0x1642224", Offset = "0x1642224", VA = "0x1642224")]
		protected void UserCode_CmdSetEnabled__Boolean(bool value)
		{
		}

		[Token(Token = "0x600192D")]
		[Address(RVA = "0x164222C", Offset = "0x164222C", VA = "0x164222C")]
		protected static void InvokeUserCode_CmdSetEnabled__Boolean(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x600192E")]
		[Address(RVA = "0x16423A0", Offset = "0x16423A0", VA = "0x16423A0")]
		static NetworkPointer()
		{
		}

		[Token(Token = "0x600192F")]
		[Address(RVA = "0x16424B8", Offset = "0x16424B8", VA = "0x16424B8", Slot = "6")]
		public override bool SerializeSyncVars(NetworkWriter writer, bool forceAll)
		{
			return default(bool);
		}

		[Token(Token = "0x6001930")]
		[Address(RVA = "0x1642584", Offset = "0x1642584", VA = "0x1642584", Slot = "7")]
		public override void DeserializeSyncVars(NetworkReader reader, bool initialState)
		{
		}
	}
	[Token(Token = "0x20004C3")]
	public class SerializedObjectInfo
	{
		[Token(Token = "0x4001724")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly SerializedObjectInfo Default;

		[Token(Token = "0x170003A0")]
		public byte[] Id
		{
			[Token(Token = "0x6001931")]
			[Address(RVA = "0x1642640", Offset = "0x1642640", VA = "0x1642640")]
			[CompilerGenerated]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003A1")]
		public byte ResolverId
		{
			[Token(Token = "0x6001932")]
			[Address(RVA = "0x1642648", Offset = "0x1642648", VA = "0x1642648")]
			[CompilerGenerated]
			get
			{
				return default(byte);
			}
		}

		[Token(Token = "0x6001933")]
		[Address(RVA = "0x1642650", Offset = "0x1642650", VA = "0x1642650")]
		public SerializedObjectInfo(byte resolverId, byte[] id)
		{
		}
	}
	[Token(Token = "0x20004C4")]
	public static class SerializedObjectInfoNetworkSerializers
	{
		[Token(Token = "0x6001935")]
		[Address(RVA = "0x163AD4C", Offset = "0x163AD4C", VA = "0x163AD4C")]
		public static void WriteSerializedObjectInfo(this NetworkWriter writer, SerializedObjectInfo value)
		{
		}

		[Token(Token = "0x6001936")]
		[Address(RVA = "0x163B1BC", Offset = "0x163B1BC", VA = "0x163B1BC")]
		public static SerializedObjectInfo ReadSerializedObjectInfo(this NetworkReader reader)
		{
			return null;
		}
	}
}
namespace VR.Networking.Modules
{
	[Token(Token = "0x20004C5")]
	public class AnatomyItemResolver : IResolver<AnatomyItem, int?>
	{
		[Token(Token = "0x4001725")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly IAnatomyDatabase _anatomyDatabase;

		[Token(Token = "0x6001937")]
		[Address(RVA = "0x1642858", Offset = "0x1642858", VA = "0x1642858")]
		public AnatomyItemResolver(IAnatomyDatabase anatomyDatabase)
		{
		}

		[Token(Token = "0x6001938")]
		[Address(RVA = "0x1642888", Offset = "0x1642888", VA = "0x1642888", Slot = "4")]
		public int? GetId(AnatomyItem obj)
		{
			return null;
		}

		[Token(Token = "0x6001939")]
		[Address(RVA = "0x16428F0", Offset = "0x16428F0", VA = "0x16428F0", Slot = "5")]
		public AnatomyItem ResolveFromId(int? obj)
		{
			return null;
		}
	}
	[Token(Token = "0x20004C6")]
	public interface IAntModeDispatcher
	{
		[Token(Token = "0x14000042")]
		event Action<bool> AntModeSetEnabled;

		[Token(Token = "0x600193A")]
		Task SetAntModeEnabled(bool value, CancellationToken cancellationToken);
	}
	[Token(Token = "0x20004C7")]
	public interface ISystemsDispatcher
	{
		[Token(Token = "0x14000043")]
		event Action<Database.SystemType[], bool> SystemsSetActive;

		[Token(Token = "0x14000044")]
		event Action<DatabaseType> DatabaseTypeSet;

		[Token(Token = "0x600193D")]
		Task SetSystemsActive(IReadOnlyCollection<Database.SystemType> systems, bool value, CancellationToken cancellationToken);

		[Token(Token = "0x600193E")]
		Task SetDatabaseType(DatabaseType databaseType, CancellationToken cancellationToken);
	}
	[Token(Token = "0x20004C8")]
	public interface ILevelDispatcher
	{
		[Token(Token = "0x14000045")]
		event Action<Database.SystemType, int> StructureLevelUpdated;

		[Token(Token = "0x6001943")]
		Task UpdateStructureLevel(Database.SystemType systemType, int level, CancellationToken cancellationToken);
	}
	[Token(Token = "0x20004C9")]
	public interface ILocationDispatcher
	{
		[Token(Token = "0x14000046")]
		event Action<LocationType> LocationTypeSet;

		[Token(Token = "0x14000047")]
		event Action<bool> LocationsSetEnabled;

		[Token(Token = "0x6001946")]
		Task SetLocationType(LocationType locationType, CancellationToken cancellationToken);

		[Token(Token = "0x6001947")]
		Task SetLocationsEnabled(bool value, CancellationToken cancellationToken);
	}
	[Token(Token = "0x20004CA")]
	public interface ISliceDispatcher
	{
		[Token(Token = "0x14000048")]
		event Action<bool> SliceSetEnabled;

		[Token(Token = "0x600194C")]
		Task SetSliceEnabled(bool value, CancellationToken cancellationToken);
	}
	[Token(Token = "0x20004CB")]
	public interface ISortDispatcher
	{
		[Token(Token = "0x14000049")]
		event Action ItemsSorted;

		[Token(Token = "0x600194F")]
		Task SortItems(CancellationToken cancellationToken);
	}
	[Token(Token = "0x20004CC")]
	public interface ISelectionDispatcher<T>
	{
		[Token(Token = "0x1400004A")]
		event Action<T> ObjectSetSelected;

		[Token(Token = "0x6001952")]
		Task SetSelectedObject(T obj, CancellationToken cancellationToken);
	}
	[Token(Token = "0x20004CD")]
	public interface IBodyRotationDispatcher
	{
		[Token(Token = "0x1400004B")]
		event Action<bool> BodyRotationSet;

		[Token(Token = "0x6001955")]
		Task SetBodyRotation(bool value, CancellationToken cancellationToken);
	}
	[Token(Token = "0x20004CE")]
	public interface IVrResetDispatcher
	{
		[Token(Token = "0x1400004C")]
		event Action AllItemsReturned;

		[Token(Token = "0x1400004D")]
		event Action HighlightedItemsReset;

		[Token(Token = "0x1400004E")]
		event Action HiddenItemsReset;

		[Token(Token = "0x6001958")]
		Task ReturnAllItems(CancellationToken cancellationToken);

		[Token(Token = "0x6001959")]
		Task ResetHighlightedItems(CancellationToken cancellationToken);

		[Token(Token = "0x600195A")]
		Task ResetHiddenItems(CancellationToken cancellationToken);
	}
	[Token(Token = "0x20004CF")]
	public interface ISubpartTypeDispatcher
	{
		[Token(Token = "0x1400004F")]
		event Action<SubpartType> SubpartTypeSet;

		[Token(Token = "0x6001961")]
		Task SetSubpartType(SubpartType value, CancellationToken cancellationToken);
	}
	[Token(Token = "0x20004D0")]
	public interface IFadeDispatcher<T>
	{
		[Token(Token = "0x14000050")]
		event Action<T, bool> ObjectSetFaded;

		[Token(Token = "0x6001964")]
		Task SetFaded(T obj, bool value, CancellationToken cancellationToken);
	}
	[Token(Token = "0x20004D1")]
	public interface IDisassembleDispatcher<T>
	{
		[Token(Token = "0x14000051")]
		event Action<T, DisassembleState> ObjectSetDisassembled;

		[Token(Token = "0x6001967")]
		Task SetDisassembled(T obj, DisassembleState value, CancellationToken cancellationToken);
	}
	[Token(Token = "0x20004D2")]
	public interface ISubPartLayerDispatcher<T>
	{
		[Token(Token = "0x14000052")]
		event Action<T, int> ObjectSubPartLayerSet;

		[Token(Token = "0x600196A")]
		Task SetStructureLayer(T obj, int value, CancellationToken cancellationToken);
	}
	[Token(Token = "0x20004D3")]
	public interface IHideDispatcher<T>
	{
		[Token(Token = "0x14000053")]
		event Action<T, bool> ObjectSetHidden;

		[Token(Token = "0x600196D")]
		Task SetHidden(T obj, bool value, CancellationToken cancellationToken);
	}
	[Token(Token = "0x20004D4")]
	public interface IHighlightDispatcher<T>
	{
		[Token(Token = "0x14000054")]
		event Action<T, bool> ObjectSetHighlighted;

		[Token(Token = "0x6001970")]
		Task SetHighlighted(T obj, bool value, CancellationToken cancellationToken);
	}
	[Token(Token = "0x20004D5")]
	public interface ISystemHighlightDispatcher
	{
		[Token(Token = "0x14000055")]
		event Action<Database.SystemType, bool> SystemSetHighlighted;

		[Token(Token = "0x6001973")]
		Task SetHighlighted(Database.SystemType obj, bool value, CancellationToken cancellationToken);
	}
	[Token(Token = "0x20004D6")]
	public interface IAnimationDispatcher
	{
		[Token(Token = "0x14000056")]
		event Action<string> ActiveAnimationSet;

		[Token(Token = "0x14000057")]
		event Action<float> AnimationTimeSet;

		[Token(Token = "0x14000058")]
		event Action<float> AnimationSpeedSet;

		[Token(Token = "0x6001976")]
		Task SetActiveAnimation(string value, CancellationToken cancellationToken);

		[Token(Token = "0x6001977")]
		Task SetAnimationSpeed(float val, CancellationToken cancellationToken);

		[Token(Token = "0x6001978")]
		Task SetAnimationTime(float val, CancellationToken cancellationToken);
	}
	[Token(Token = "0x20004D7")]
	public interface IAnimationHighlightDispatcher
	{
		[Token(Token = "0x14000059")]
		event Action<string, bool> AnimationObjectSetHighlighted;

		[Token(Token = "0x600197F")]
		Task SetAnimationObjectHighlighted(string obj, bool value, CancellationToken cancellationToken);
	}
	[Token(Token = "0x20004D8")]
	public interface IAnimationHideDispatcher
	{
		[Token(Token = "0x1400005A")]
		event Action<string, bool> AnimationObjectSetHidden;

		[Token(Token = "0x6001982")]
		Task SetAnimationObjectHidden(string obj, bool value, CancellationToken cancellationToken);
	}
	[Token(Token = "0x20004D9")]
	public class NetworkAnatomyModuleCollection<TDispatcher, TInstanceId> : IDisposable, ISystemsModule, ILevelModule, ILocationModule, ISliceModule, IHighlightModule<IInteractiveAnatomyItemInstance>, IHideModule<IInteractiveAnatomyItemInstance>, IDisassembleModule<IInteractiveAnatomyItemInstance>, ISubPartLayerModule<IInteractiveAnatomyItemInstance>, IHighlightModule<Database.SystemType>, IFadeModule<Database.SystemType>, ISubpartTypeModule, IVrResetModule, IAntModeModule, IBodyRotationModule, ISelectionModule<AnatomyItem>, ISortModule, IAnimationModule<AnimationItemInstance>, IHideModule<AnimationObjectInstance>, IHighlightModule<AnimationObjectInstance> where TDispatcher : ISystemsDispatcher, ILevelDispatcher, ILocationDispatcher, ISliceDispatcher, IHighlightDispatcher<TInstanceId>, IHideDispatcher<TInstanceId>, IDisassembleDispatcher<TInstanceId>, ISubPartLayerDispatcher<TInstanceId>, ISystemHighlightDispatcher, IFadeDispatcher<Database.SystemType>, ISubpartTypeDispatcher, IVrResetDispatcher, IAntModeDispatcher, IBodyRotationDispatcher, ISelectionDispatcher<int?>, ISortDispatcher, IAnimationDispatcher, IAnimationHighlightDispatcher, IAnimationHideDispatcher
	{
		[StructLayout(3)]
		[Token(Token = "0x20004DA")]
		[CompilerGenerated]
		private struct <SetSystemActiveAsync>d__29 : IAsyncStateMachine
		{
			[Token(Token = "0x400173E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x400173F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4001740")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public NetworkAnatomyModuleCollection<TDispatcher, TInstanceId> <>4__this;

			[Token(Token = "0x4001741")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Database.SystemType systemType;

			[Token(Token = "0x4001742")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool value;

			[Token(Token = "0x4001743")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x60019D0")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60019D1")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20004DB")]
		[CompilerGenerated]
		private struct <SetSystemsActiveAsync>d__30 : IAsyncStateMachine
		{
			[Token(Token = "0x4001744")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001745")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4001746")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IEnumerable<Database.SystemType> systems;

			[Token(Token = "0x4001747")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public NetworkAnatomyModuleCollection<TDispatcher, TInstanceId> <>4__this;

			[Token(Token = "0x4001748")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool value;

			[Token(Token = "0x4001749")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private Database.SystemType[] <systemTypes>5__2;

			[Token(Token = "0x400174A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x60019D2")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60019D3")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20004DC")]
		[CompilerGenerated]
		private struct <SetDatabaseTypeAsync>d__31 : IAsyncStateMachine
		{
			[Token(Token = "0x400174B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x400174C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x400174D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public NetworkAnatomyModuleCollection<TDispatcher, TInstanceId> <>4__this;

			[Token(Token = "0x400174E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public DatabaseType databaseType;

			[Token(Token = "0x400174F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x60019D4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60019D5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20004DD")]
		[CompilerGenerated]
		private struct <OnSystemsSetActive>d__32 : IAsyncStateMachine
		{
			[Token(Token = "0x4001750")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001751")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4001752")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Database.SystemType[] systems;

			[Token(Token = "0x4001753")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public NetworkAnatomyModuleCollection<TDispatcher, TInstanceId> <>4__this;

			[Token(Token = "0x4001754")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool value;

			[Token(Token = "0x4001755")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x60019D6")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60019D7")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20004DE")]
		[CompilerGenerated]
		private struct <OnDatabaseTypeSet>d__33 : IAsyncStateMachine
		{
			[Token(Token = "0x4001756")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001757")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4001758")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public NetworkAnatomyModuleCollection<TDispatcher, TInstanceId> <>4__this;

			[Token(Token = "0x4001759")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public DatabaseType databaseType;

			[Token(Token = "0x400175A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x60019D8")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60019D9")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20004DF")]
		[CompilerGenerated]
		private struct <UpdateStructureLevel>d__36 : IAsyncStateMachine
		{
			[Token(Token = "0x400175B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x400175C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x400175D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public NetworkAnatomyModuleCollection<TDispatcher, TInstanceId> <>4__this;

			[Token(Token = "0x400175E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Database.SystemType system;

			[Token(Token = "0x400175F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int level;

			[Token(Token = "0x4001760")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x60019DA")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60019DB")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20004E0")]
		[CompilerGenerated]
		private struct <SetLocationTypeAsync>d__40 : IAsyncStateMachine
		{
			[Token(Token = "0x4001761")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001762")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4001763")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public NetworkAnatomyModuleCollection<TDispatcher, TInstanceId> <>4__this;

			[Token(Token = "0x4001764")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public LocationType value;

			[Token(Token = "0x4001765")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x60019DC")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60019DD")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20004E1")]
		[CompilerGenerated]
		private struct <OnLocationTypeSet>d__41 : IAsyncStateMachine
		{
			[Token(Token = "0x4001766")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001767")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4001768")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public NetworkAnatomyModuleCollection<TDispatcher, TInstanceId> <>4__this;

			[Token(Token = "0x4001769")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public LocationType value;

			[Token(Token = "0x400176A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x60019DE")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60019DF")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20004E2")]
		[CompilerGenerated]
		private struct <SetLocationsEnabled>d__44 : IAsyncStateMachine
		{
			[Token(Token = "0x400176B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x400176C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x400176D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public NetworkAnatomyModuleCollection<TDispatcher, TInstanceId> <>4__this;

			[Token(Token = "0x400176E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool value;

			[Token(Token = "0x400176F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x60019E0")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60019E1")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20004E3")]
		[CompilerGenerated]
		private struct <OnLocationsSetEnabled>d__45 : IAsyncStateMachine
		{
			[Token(Token = "0x4001770")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001771")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4001772")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public NetworkAnatomyModuleCollection<TDispatcher, TInstanceId> <>4__this;

			[Token(Token = "0x4001773")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool obj;

			[Token(Token = "0x4001774")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x60019E2")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60019E3")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20004E4")]
		[CompilerGenerated]
		private struct <SetSliceEnabled>d__50 : IAsyncStateMachine
		{
			[Token(Token = "0x4001775")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001776")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4001777")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public NetworkAnatomyModuleCollection<TDispatcher, TInstanceId> <>4__this;

			[Token(Token = "0x4001778")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool value;

			[Token(Token = "0x4001779")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x60019E4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60019E5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20004E5")]
		[CompilerGenerated]
		private struct <SetHighlighted>d__54 : IAsyncStateMachine
		{
			[Token(Token = "0x400177A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x400177B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x400177C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public NetworkAnatomyModuleCollection<TDispatcher, TInstanceId> <>4__this;

			[Token(Token = "0x400177D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IInteractiveAnatomyItemInstance obj;

			[Token(Token = "0x400177E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool value;

			[Token(Token = "0x400177F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x60019E6")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60019E7")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20004E6")]
		[CompilerGenerated]
		private struct <SetHidden>d__58 : IAsyncStateMachine
		{
			[Token(Token = "0x4001780")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001781")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4001782")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public NetworkAnatomyModuleCollection<TDispatcher, TInstanceId> <>4__this;

			[Token(Token = "0x4001783")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IInteractiveAnatomyItemInstance hideable;

			[Token(Token = "0x4001784")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool value;

			[Token(Token = "0x4001785")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x60019E8")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60019E9")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20004E7")]
		[CompilerGenerated]
		private struct <SetDisassembled>d__62 : IAsyncStateMachine
		{
			[Token(Token = "0x4001786")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001787")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4001788")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public NetworkAnatomyModuleCollection<TDispatcher, TInstanceId> <>4__this;

			[Token(Token = "0x4001789")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IInteractiveAnatomyItemInstance obj;

			[Token(Token = "0x400178A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public DisassembleState value;

			[Token(Token = "0x400178B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x60019EA")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60019EB")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20004E8")]
		[CompilerGenerated]
		private struct <SetLayer>d__66 : IAsyncStateMachine
		{
			[Token(Token = "0x400178C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x400178D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x400178E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public NetworkAnatomyModuleCollection<TDispatcher, TInstanceId> <>4__this;

			[Token(Token = "0x400178F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IInteractiveAnatomyItemInstance obj;

			[Token(Token = "0x4001790")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int value;

			[Token(Token = "0x4001791")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x60019EC")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60019ED")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20004E9")]
		[CompilerGenerated]
		private struct <SetHighlighted>d__70 : IAsyncStateMachine
		{
			[Token(Token = "0x4001792")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001793")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4001794")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public NetworkAnatomyModuleCollection<TDispatcher, TInstanceId> <>4__this;

			[Token(Token = "0x4001795")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Database.SystemType systemType;

			[Token(Token = "0x4001796")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool value;

			[Token(Token = "0x4001797")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x60019EE")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60019EF")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20004EA")]
		[CompilerGenerated]
		private struct <SetFaded>d__74 : IAsyncStateMachine
		{
			[Token(Token = "0x4001798")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001799")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x400179A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public NetworkAnatomyModuleCollection<TDispatcher, TInstanceId> <>4__this;

			[Token(Token = "0x400179B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Database.SystemType obj;

			[Token(Token = "0x400179C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool value;

			[Token(Token = "0x400179D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x60019F0")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60019F1")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20004EB")]
		[CompilerGenerated]
		private struct <ReturnAllItems>d__80 : IAsyncStateMachine
		{
			[Token(Token = "0x400179E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x400179F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x40017A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public NetworkAnatomyModuleCollection<TDispatcher, TInstanceId> <>4__this;

			[Token(Token = "0x40017A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x60019F2")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60019F3")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20004EC")]
		[CompilerGenerated]
		private struct <ResetHighlightedItems>d__81 : IAsyncStateMachine
		{
			[Token(Token = "0x40017A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40017A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x40017A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public NetworkAnatomyModuleCollection<TDispatcher, TInstanceId> <>4__this;

			[Token(Token = "0x40017A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x60019F4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60019F5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20004ED")]
		[CompilerGenerated]
		private struct <ResetHiddenItems>d__82 : IAsyncStateMachine
		{
			[Token(Token = "0x40017A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40017A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x40017A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public NetworkAnatomyModuleCollection<TDispatcher, TInstanceId> <>4__this;

			[Token(Token = "0x40017A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x60019F6")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60019F7")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20004EE")]
		[CompilerGenerated]
		private struct <SetAntModeEnabled>d__88 : IAsyncStateMachine
		{
			[Token(Token = "0x40017AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40017AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x40017AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public NetworkAnatomyModuleCollection<TDispatcher, TInstanceId> <>4__this;

			[Token(Token = "0x40017AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool value;

			[Token(Token = "0x40017AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x60019F8")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60019F9")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20004EF")]
		[CompilerGenerated]
		private struct <SetBodyRotation>d__92 : IAsyncStateMachine
		{
			[Token(Token = "0x40017AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40017B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x40017B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public NetworkAnatomyModuleCollection<TDispatcher, TInstanceId> <>4__this;

			[Token(Token = "0x40017B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool value;

			[Token(Token = "0x40017B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x60019FA")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60019FB")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20004F0")]
		[CompilerGenerated]
		private struct <SetSelectedObject>d__96 : IAsyncStateMachine
		{
			[Token(Token = "0x40017B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40017B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x40017B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public NetworkAnatomyModuleCollection<TDispatcher, TInstanceId> <>4__this;

			[Token(Token = "0x40017B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public AnatomyItem value;

			[Token(Token = "0x40017B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public CancellationToken cancellationToken;

			[Token(Token = "0x40017B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x60019FC")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60019FD")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20004F1")]
		[CompilerGenerated]
		private struct <OnObjectSetSelected>d__97 : IAsyncStateMachine
		{
			[Token(Token = "0x40017BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40017BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x40017BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public NetworkAnatomyModuleCollection<TDispatcher, TInstanceId> <>4__this;

			[Token(Token = "0x40017BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int? obj;

			[Token(Token = "0x40017BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x60019FE")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60019FF")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20004F2")]
		[CompilerGenerated]
		private struct <SortItems>d__98 : IAsyncStateMachine
		{
			[Token(Token = "0x40017BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40017C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x40017C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public NetworkAnatomyModuleCollection<TDispatcher, TInstanceId> <>4__this;

			[Token(Token = "0x40017C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x6001A00")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001A01")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20004F3")]
		[CompilerGenerated]
		private struct <SetActiveAnimation>d__106 : IAsyncStateMachine
		{
			[Token(Token = "0x40017C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40017C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x40017C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public NetworkAnatomyModuleCollection<TDispatcher, TInstanceId> <>4__this;

			[Token(Token = "0x40017C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string value;

			[Token(Token = "0x40017C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x6001A02")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001A03")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20004F4")]
		[CompilerGenerated]
		private struct <SetAnimationSpeed>d__107 : IAsyncStateMachine
		{
			[Token(Token = "0x40017C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40017C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x40017CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public NetworkAnatomyModuleCollection<TDispatcher, TInstanceId> <>4__this;

			[Token(Token = "0x40017CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float value;

			[Token(Token = "0x40017CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x6001A04")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001A05")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20004F5")]
		[CompilerGenerated]
		private struct <SetAnimationTime>d__108 : IAsyncStateMachine
		{
			[Token(Token = "0x40017CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40017CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x40017CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public NetworkAnatomyModuleCollection<TDispatcher, TInstanceId> <>4__this;

			[Token(Token = "0x40017D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float value;

			[Token(Token = "0x40017D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x6001A06")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001A07")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20004F6")]
		[CompilerGenerated]
		private struct <OnActiveAnimationSet>d__109 : IAsyncStateMachine
		{
			[Token(Token = "0x40017D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40017D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x40017D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public NetworkAnatomyModuleCollection<TDispatcher, TInstanceId> <>4__this;

			[Token(Token = "0x40017D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string value;

			[Token(Token = "0x40017D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x6001A08")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001A09")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20004F7")]
		[CompilerGenerated]
		private struct <SetHighlighted>d__114 : IAsyncStateMachine
		{
			[Token(Token = "0x40017D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40017D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x40017D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public NetworkAnatomyModuleCollection<TDispatcher, TInstanceId> <>4__this;

			[Token(Token = "0x40017DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public AnimationObjectInstance obj;

			[Token(Token = "0x40017DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool value;

			[Token(Token = "0x40017DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x6001A0A")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001A0B")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20004F8")]
		[CompilerGenerated]
		private struct <SetHidden>d__118 : IAsyncStateMachine
		{
			[Token(Token = "0x40017DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40017DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x40017DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public NetworkAnatomyModuleCollection<TDispatcher, TInstanceId> <>4__this;

			[Token(Token = "0x40017E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public AnimationObjectInstance obj;

			[Token(Token = "0x40017E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool value;

			[Token(Token = "0x40017E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x6001A0C")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001A0D")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4001726")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly TDispatcher _dispatcher;

		[Token(Token = "0x4001727")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IResolver<IInteractiveAnatomyItemInstance, TInstanceId> _resolver;

		[Token(Token = "0x4001728")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IResolver<AnatomyItem, int?> _itemResolver;

		[Token(Token = "0x4001729")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IResolver<AnimationObjectInstance, string> _animationObjectResolver;

		[Token(Token = "0x400172A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly ISystemsModule _systemsModule;

		[Token(Token = "0x400172B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly ILevelModule _levelModule;

		[Token(Token = "0x400172C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly ILocationModule _locationModule;

		[Token(Token = "0x400172D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly ISliceModule _sliceModule;

		[Token(Token = "0x400172E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IHighlightModule<IInteractiveAnatomyItemInstance> _highlightModule;

		[Token(Token = "0x400172F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IHideModule<IInteractiveAnatomyItemInstance> _hideModule;

		[Token(Token = "0x4001730")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IDisassembleModule<IInteractiveAnatomyItemInstance> _disassembleModule;

		[Token(Token = "0x4001731")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly ISubPartLayerModule<IInteractiveAnatomyItemInstance> _subPartLayerModule;

		[Token(Token = "0x4001732")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IHighlightModule<Database.SystemType> _systemHighlightModule;

		[Token(Token = "0x4001733")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IFadeModule<Database.SystemType> _systemFadeModule;

		[Token(Token = "0x4001734")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly ISubpartTypeModule _subpartTypeModule;

		[Token(Token = "0x4001735")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IVrResetModule _vrResetModule;

		[Token(Token = "0x4001736")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IAntModeModule _antModeModule;

		[Token(Token = "0x4001737")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IBodyRotationModule _bodyRotationModule;

		[Token(Token = "0x4001738")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly ISelectionModule<AnatomyItem> _selectionModule;

		[Token(Token = "0x4001739")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly ISortModule _sortModule;

		[Token(Token = "0x400173A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IAnimationModule<AnimationItemInstance> _animationModule;

		[Token(Token = "0x400173B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IHighlightModule<AnimationObjectInstance> _animationHighlightModule;

		[Token(Token = "0x400173C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IHideModule<AnimationObjectInstance> _animationHideModule;

		[Token(Token = "0x400173D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly CancellationTokenSource _disposeCancellationTokenSource;

		[Token(Token = "0x170003A2")]
		public IReadOnlyCollection<Database.SystemType> ActiveSystems
		{
			[Token(Token = "0x6001986")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003A3")]
		public DatabaseType ActiveDatabaseType
		{
			[Token(Token = "0x6001987")]
			get
			{
				return default(DatabaseType);
			}
		}

		[Token(Token = "0x170003A4")]
		public System.Collections.Generic.IReadOnlyDictionary<Database.SystemType, int> SystemStructureLevels
		{
			[Token(Token = "0x600198D")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003A5")]
		public LocationType ActiveLocationType
		{
			[Token(Token = "0x6001990")]
			get
			{
				return default(LocationType);
			}
		}

		[Token(Token = "0x170003A6")]
		public bool LocationsEnabled
		{
			[Token(Token = "0x6001993")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003A7")]
		public object SlicePlane
		{
			[Token(Token = "0x6001996")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003A8")]
		public bool SliceEnabled
		{
			[Token(Token = "0x6001997")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003A9")]
		private IReadOnlyCollection<IInteractiveAnatomyItemInstance> VR.Modules.IHighlightModule<VR.Views.IInteractiveAnatomyItemInstance>.HighlightedObjects
		{
			[Token(Token = "0x600199A")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003AA")]
		public IReadOnlyCollection<IInteractiveAnatomyItemInstance> HiddenObjects
		{
			[Token(Token = "0x600199D")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003AB")]
		public System.Collections.Generic.IReadOnlyDictionary<IInteractiveAnatomyItemInstance, DisassembleState> DisassembledObjects
		{
			[Token(Token = "0x60019A0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003AC")]
		public System.Collections.Generic.IReadOnlyDictionary<IInteractiveAnatomyItemInstance, int> ObjectLayers
		{
			[Token(Token = "0x60019A3")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003AD")]
		private IReadOnlyCollection<Database.SystemType> VR.Modules.IHighlightModule<Database.SystemType>.HighlightedObjects
		{
			[Token(Token = "0x60019A6")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003AE")]
		public IReadOnlyCollection<Database.SystemType> FadedObjects
		{
			[Token(Token = "0x60019A9")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003AF")]
		public SubpartType ActiveSubpartType
		{
			[Token(Token = "0x60019AC")]
			get
			{
				return default(SubpartType);
			}
		}

		[Token(Token = "0x170003B0")]
		public bool AntModeEnabled
		{
			[Token(Token = "0x60019B5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003B1")]
		public bool BodyRotation
		{
			[Token(Token = "0x60019B8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003B2")]
		public AnatomyItem SelectedObject
		{
			[Token(Token = "0x60019BB")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003B3")]
		public AnimationItemInstance ActiveAnimation
		{
			[Token(Token = "0x60019C0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003B4")]
		public float AnimationTime
		{
			[Token(Token = "0x60019C1")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170003B5")]
		public float AnimationSpeed
		{
			[Token(Token = "0x60019C2")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170003B6")]
		private IReadOnlyCollection<AnimationObjectInstance> VR.Modules.IHighlightModule<VR.Views.AnimationObjectInstance>.HighlightedObjects
		{
			[Token(Token = "0x60019C9")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003B7")]
		private IReadOnlyCollection<AnimationObjectInstance> Modules.IHideModule<VR.Views.AnimationObjectInstance>.HiddenObjects
		{
			[Token(Token = "0x60019CC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001985")]
		public NetworkAnatomyModuleCollection(IModuleProvider moduleProvider, TDispatcher dispatcher, IResolver<IInteractiveAnatomyItemInstance, TInstanceId> resolver, IResolver<AnatomyItem, int?> itemResolver, IResolver<AnimationObjectInstance, string> animationObjectResolver)
		{
		}

		[Token(Token = "0x6001988")]
		[AsyncStateMachine(typeof(NetworkAnatomyModuleCollection<, >.<SetSystemActiveAsync>d__29))]
		public Task SetSystemActiveAsync(Database.SystemType systemType, bool value)
		{
			return null;
		}

		[Token(Token = "0x6001989")]
		[AsyncStateMachine(typeof(NetworkAnatomyModuleCollection<, >.<SetSystemsActiveAsync>d__30))]
		public Task SetSystemsActiveAsync(IEnumerable<Database.SystemType> systems, bool value)
		{
			return null;
		}

		[Token(Token = "0x600198A")]
		[AsyncStateMachine(typeof(NetworkAnatomyModuleCollection<, >.<SetDatabaseTypeAsync>d__31))]
		public Task SetDatabaseTypeAsync(DatabaseType databaseType)
		{
			return null;
		}

		[Token(Token = "0x600198B")]
		[AsyncStateMachine(typeof(NetworkAnatomyModuleCollection<, >.<OnSystemsSetActive>d__32))]
		private void OnSystemsSetActive(Database.SystemType[] systems, bool value)
		{
		}

		[Token(Token = "0x600198C")]
		[AsyncStateMachine(typeof(NetworkAnatomyModuleCollection<, >.<OnDatabaseTypeSet>d__33))]
		private void OnDatabaseTypeSet(DatabaseType databaseType)
		{
		}

		[Token(Token = "0x600198E")]
		[AsyncStateMachine(typeof(NetworkAnatomyModuleCollection<, >.<UpdateStructureLevel>d__36))]
		public void UpdateStructureLevel(Database.SystemType system, int level)
		{
		}

		[Token(Token = "0x600198F")]
		private void OnStructureLevelUpdated(Database.SystemType systemType, int level)
		{
		}

		[Token(Token = "0x6001991")]
		[AsyncStateMachine(typeof(NetworkAnatomyModuleCollection<, >.<SetLocationTypeAsync>d__40))]
		public Task SetLocationTypeAsync(LocationType value)
		{
			return null;
		}

		[Token(Token = "0x6001992")]
		[AsyncStateMachine(typeof(NetworkAnatomyModuleCollection<, >.<OnLocationTypeSet>d__41))]
		private void OnLocationTypeSet(LocationType value)
		{
		}

		[Token(Token = "0x6001994")]
		[AsyncStateMachine(typeof(NetworkAnatomyModuleCollection<, >.<SetLocationsEnabled>d__44))]
		public Task SetLocationsEnabled(bool value)
		{
			return null;
		}

		[Token(Token = "0x6001995")]
		[AsyncStateMachine(typeof(NetworkAnatomyModuleCollection<, >.<OnLocationsSetEnabled>d__45))]
		private void OnLocationsSetEnabled(bool obj)
		{
		}

		[Token(Token = "0x6001998")]
		[AsyncStateMachine(typeof(NetworkAnatomyModuleCollection<, >.<SetSliceEnabled>d__50))]
		public Task SetSliceEnabled(bool value)
		{
			return null;
		}

		[Token(Token = "0x6001999")]
		private void OnSliceSetEnabled(bool value)
		{
		}

		[Token(Token = "0x600199B")]
		[AsyncStateMachine(typeof(NetworkAnatomyModuleCollection<, >.<SetHighlighted>d__54))]
		public void SetHighlighted(IInteractiveAnatomyItemInstance obj, bool value)
		{
		}

		[Token(Token = "0x600199C")]
		private void OnObjectSetHighlighted(TInstanceId instanceId, bool value)
		{
		}

		[Token(Token = "0x600199E")]
		[AsyncStateMachine(typeof(NetworkAnatomyModuleCollection<, >.<SetHidden>d__58))]
		public void SetHidden(IInteractiveAnatomyItemInstance hideable, bool value)
		{
		}

		[Token(Token = "0x600199F")]
		private void OnObjectSetHidden(TInstanceId instanceId, bool value)
		{
		}

		[Token(Token = "0x60019A1")]
		[AsyncStateMachine(typeof(NetworkAnatomyModuleCollection<, >.<SetDisassembled>d__62))]
		public void SetDisassembled(IInteractiveAnatomyItemInstance obj, DisassembleState value)
		{
		}

		[Token(Token = "0x60019A2")]
		private void OnObjectSetDisassembled(TInstanceId instanceId, DisassembleState value)
		{
		}

		[Token(Token = "0x60019A4")]
		[AsyncStateMachine(typeof(NetworkAnatomyModuleCollection<, >.<SetLayer>d__66))]
		public void SetLayer(IInteractiveAnatomyItemInstance obj, int value)
		{
		}

		[Token(Token = "0x60019A5")]
		private void OnObjectSubPartLayerSetStructureLayer(TInstanceId instanceId, int value)
		{
		}

		[Token(Token = "0x60019A7")]
		[AsyncStateMachine(typeof(NetworkAnatomyModuleCollection<, >.<SetHighlighted>d__70))]
		public void SetHighlighted(Database.SystemType systemType, bool value)
		{
		}

		[Token(Token = "0x60019A8")]
		private void OnSystemSetHighlighted(Database.SystemType systemType, bool value)
		{
		}

		[Token(Token = "0x60019AA")]
		[AsyncStateMachine(typeof(NetworkAnatomyModuleCollection<, >.<SetFaded>d__74))]
		public void SetFaded(Database.SystemType obj, bool value)
		{
		}

		[Token(Token = "0x60019AB")]
		private void OnSystemSetFaded(Database.SystemType systemType, bool value)
		{
		}

		[Token(Token = "0x60019AD")]
		public void SetSubpartType(SubpartType subpartType)
		{
		}

		[Token(Token = "0x60019AE")]
		private void OnSubpartTypeSet(SubpartType value)
		{
		}

		[Token(Token = "0x60019AF")]
		[AsyncStateMachine(typeof(NetworkAnatomyModuleCollection<, >.<ReturnAllItems>d__80))]
		public void ReturnAllItems()
		{
		}

		[Token(Token = "0x60019B0")]
		[AsyncStateMachine(typeof(NetworkAnatomyModuleCollection<, >.<ResetHighlightedItems>d__81))]
		public void ResetHighlightedItems()
		{
		}

		[Token(Token = "0x60019B1")]
		[AsyncStateMachine(typeof(NetworkAnatomyModuleCollection<, >.<ResetHiddenItems>d__82))]
		public void ResetHiddenItems()
		{
		}

		[Token(Token = "0x60019B2")]
		private void OnAllItemsReturned()
		{
		}

		[Token(Token = "0x60019B3")]
		private void OnHiddenItemsReset()
		{
		}

		[Token(Token = "0x60019B4")]
		private void OnHighlightedItemsReset()
		{
		}

		[Token(Token = "0x60019B6")]
		[AsyncStateMachine(typeof(NetworkAnatomyModuleCollection<, >.<SetAntModeEnabled>d__88))]
		public void SetAntModeEnabled(bool value)
		{
		}

		[Token(Token = "0x60019B7")]
		private void OnAntModeSetEnabled(bool value)
		{
		}

		[Token(Token = "0x60019B9")]
		[AsyncStateMachine(typeof(NetworkAnatomyModuleCollection<, >.<SetBodyRotation>d__92))]
		public void SetBodyRotation(bool value)
		{
		}

		[Token(Token = "0x60019BA")]
		private void OnBodyRotationSet(bool value)
		{
		}

		[Token(Token = "0x60019BC")]
		[AsyncStateMachine(typeof(NetworkAnatomyModuleCollection<, >.<SetSelectedObject>d__96))]
		public Task SetSelectedObject(AnatomyItem value, CancellationToken cancellationToken)
		{
			return null;
		}

		[Token(Token = "0x60019BD")]
		[AsyncStateMachine(typeof(NetworkAnatomyModuleCollection<, >.<OnObjectSetSelected>d__97))]
		private void OnObjectSetSelected(int? obj)
		{
		}

		[Token(Token = "0x60019BE")]
		[AsyncStateMachine(typeof(NetworkAnatomyModuleCollection<, >.<SortItems>d__98))]
		public void SortItems()
		{
		}

		[Token(Token = "0x60019BF")]
		private void OnItemsSorted()
		{
		}

		[Token(Token = "0x60019C3")]
		[AsyncStateMachine(typeof(NetworkAnatomyModuleCollection<, >.<SetActiveAnimation>d__106))]
		public Task SetActiveAnimation(string value)
		{
			return null;
		}

		[Token(Token = "0x60019C4")]
		[AsyncStateMachine(typeof(NetworkAnatomyModuleCollection<, >.<SetAnimationSpeed>d__107))]
		public void SetAnimationSpeed(float value)
		{
		}

		[Token(Token = "0x60019C5")]
		[AsyncStateMachine(typeof(NetworkAnatomyModuleCollection<, >.<SetAnimationTime>d__108))]
		public void SetAnimationTime(float value)
		{
		}

		[Token(Token = "0x60019C6")]
		[AsyncStateMachine(typeof(NetworkAnatomyModuleCollection<, >.<OnActiveAnimationSet>d__109))]
		private void OnActiveAnimationSet(string value)
		{
		}

		[Token(Token = "0x60019C7")]
		private void OnAnimationSpeedSet(float value)
		{
		}

		[Token(Token = "0x60019C8")]
		private void OnAnimationTimeSet(float value)
		{
		}

		[Token(Token = "0x60019CA")]
		[AsyncStateMachine(typeof(NetworkAnatomyModuleCollection<, >.<SetHighlighted>d__114))]
		public void SetHighlighted(AnimationObjectInstance obj, bool value)
		{
		}

		[Token(Token = "0x60019CB")]
		private void OnAnimationObjectSetHighlighted(string obj, bool value)
		{
		}

		[Token(Token = "0x60019CD")]
		[AsyncStateMachine(typeof(NetworkAnatomyModuleCollection<, >.<SetHidden>d__118))]
		public void SetHidden(AnimationObjectInstance obj, bool value)
		{
		}

		[Token(Token = "0x60019CE")]
		private void OnAnimationObjectSetHidden(string obj, bool value)
		{
		}

		[Token(Token = "0x60019CF")]
		public void Dispose()
		{
		}
	}
}
namespace VR.Modules
{
	[Token(Token = "0x20004F9")]
	public class AnatomyFunctionOrganizer : ILocationModule, IAntModeModule, ISystemsModule, IAnimationModule<AnimationItemInstance>
	{
		[StructLayout(3)]
		[Token(Token = "0x20004FA")]
		[CompilerGenerated]
		private struct <SetDatabaseTypeAsync>d__22 : IAsyncStateMachine
		{
			[Token(Token = "0x40017E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40017EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x40017EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AnatomyFunctionOrganizer <>4__this;

			[Token(Token = "0x40017EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public DatabaseType databaseType;

			[Token(Token = "0x40017ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x6001A20")]
			[Address(RVA = "0x164383C", Offset = "0x164383C", VA = "0x164383C", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001A21")]
			[Address(RVA = "0x1643B7C", Offset = "0x1643B7C", VA = "0x1643B7C", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x40017E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly ISliceModule _sliceModule;

		[Token(Token = "0x40017E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly ILocationModule _locationModule;

		[Token(Token = "0x40017E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly IAntModeModule _antModeModule;

		[Token(Token = "0x40017E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly IVrResetModule _vrResetModule;

		[Token(Token = "0x40017E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly ISystemsModule _systemsModule;

		[Token(Token = "0x40017E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly IAnimationModule<AnimationItemInstance> _animationModule;

		[Token(Token = "0x170003B8")]
		public LocationType ActiveLocationType
		{
			[Token(Token = "0x6001A0F")]
			[Address(RVA = "0x1642A4C", Offset = "0x1642A4C", VA = "0x1642A4C", Slot = "4")]
			get
			{
				return default(LocationType);
			}
		}

		[Token(Token = "0x170003B9")]
		public bool LocationsEnabled
		{
			[Token(Token = "0x6001A11")]
			[Address(RVA = "0x1642C1C", Offset = "0x1642C1C", VA = "0x1642C1C", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003BA")]
		public bool AntModeEnabled
		{
			[Token(Token = "0x6001A13")]
			[Address(RVA = "0x1642D6C", Offset = "0x1642D6C", VA = "0x1642D6C", Slot = "8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003BB")]
		public IReadOnlyCollection<Database.SystemType> ActiveSystems
		{
			[Token(Token = "0x6001A15")]
			[Address(RVA = "0x1643018", Offset = "0x1643018", VA = "0x1643018", Slot = "10")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003BC")]
		public DatabaseType ActiveDatabaseType
		{
			[Token(Token = "0x6001A16")]
			[Address(RVA = "0x16430B8", Offset = "0x16430B8", VA = "0x16430B8", Slot = "11")]
			get
			{
				return default(DatabaseType);
			}
		}

		[Token(Token = "0x170003BD")]
		public AnimationItemInstance ActiveAnimation
		{
			[Token(Token = "0x6001A1A")]
			[Address(RVA = "0x16433CC", Offset = "0x16433CC", VA = "0x16433CC", Slot = "15")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003BE")]
		public float AnimationTime
		{
			[Token(Token = "0x6001A1B")]
			[Address(RVA = "0x164346C", Offset = "0x164346C", VA = "0x164346C", Slot = "16")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170003BF")]
		public float AnimationSpeed
		{
			[Token(Token = "0x6001A1C")]
			[Address(RVA = "0x1643510", Offset = "0x1643510", VA = "0x1643510", Slot = "17")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001A0E")]
		[Address(RVA = "0x16429A8", Offset = "0x16429A8", VA = "0x16429A8")]
		public AnatomyFunctionOrganizer(ISliceModule sliceModule, ILocationModule locationModule, IAntModeModule antModeModule, IVrResetModule vrResetModule, ISystemsModule systemsModule, IAnimationModule<AnimationItemInstance> animationModule)
		{
		}

		[Token(Token = "0x6001A10")]
		[Address(RVA = "0x1642AEC", Offset = "0x1642AEC", VA = "0x1642AEC", Slot = "5")]
		public Task SetLocationTypeAsync(LocationType value)
		{
			return null;
		}

		[Token(Token = "0x6001A12")]
		[Address(RVA = "0x1642CC0", Offset = "0x1642CC0", VA = "0x1642CC0", Slot = "7")]
		public Task SetLocationsEnabled(bool value)
		{
			return null;
		}

		[Token(Token = "0x6001A14")]
		[Address(RVA = "0x1642E0C", Offset = "0x1642E0C", VA = "0x1642E0C", Slot = "9")]
		public void SetAntModeEnabled(bool value)
		{
		}

		[Token(Token = "0x6001A17")]
		[Address(RVA = "0x164315C", Offset = "0x164315C", VA = "0x164315C", Slot = "12")]
		public Task SetSystemActiveAsync(Database.SystemType systemType, bool value)
		{
			return null;
		}

		[Token(Token = "0x6001A18")]
		[Address(RVA = "0x1643218", Offset = "0x1643218", VA = "0x1643218", Slot = "13")]
		public Task SetSystemsActiveAsync(IEnumerable<Database.SystemType> systems, bool value)
		{
			return null;
		}

		[Token(Token = "0x6001A19")]
		[Address(RVA = "0x16432D4", Offset = "0x16432D4", VA = "0x16432D4", Slot = "14")]
		[AsyncStateMachine(typeof(<SetDatabaseTypeAsync>d__22))]
		public Task SetDatabaseTypeAsync(DatabaseType databaseType)
		{
			return null;
		}

		[Token(Token = "0x6001A1D")]
		[Address(RVA = "0x16435B4", Offset = "0x16435B4", VA = "0x16435B4", Slot = "18")]
		public Task SetActiveAnimation(string value)
		{
			return null;
		}

		[Token(Token = "0x6001A1E")]
		[Address(RVA = "0x16436D4", Offset = "0x16436D4", VA = "0x16436D4", Slot = "19")]
		public void SetAnimationSpeed(float val)
		{
		}

		[Token(Token = "0x6001A1F")]
		[Address(RVA = "0x1643788", Offset = "0x1643788", VA = "0x1643788", Slot = "20")]
		public void SetAnimationTime(float val)
		{
		}
	}
	[Token(Token = "0x20004FB")]
	public class AnatomyItemSelectionModule : ISelectionModule<AnatomyItem>
	{
		[StructLayout(3)]
		[Token(Token = "0x20004FC")]
		[CompilerGenerated]
		private struct <SetSelectedObject>d__12 : IAsyncStateMachine
		{
			[Token(Token = "0x40017F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40017F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x40017F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AnatomyItemSelectionModule <>4__this;

			[Token(Token = "0x40017F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public AnatomyItem value;

			[Token(Token = "0x40017FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x6001A26")]
			[Address(RVA = "0x1643D5C", Offset = "0x1643D5C", VA = "0x1643D5C", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001A27")]
			[Address(RVA = "0x1644BC0", Offset = "0x1644BC0", VA = "0x1644BC0", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x40017EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly ISystemsModule _systemsModule;

		[Token(Token = "0x40017EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly ILocationModule _locationModule;

		[Token(Token = "0x40017F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly ILevelModule _levelModule;

		[Token(Token = "0x40017F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly IInstanceProvider<IInteractiveAnatomyItemInstanceCollection> _instanceProvider;

		[Token(Token = "0x40017F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly IHighlightModule<IInteractiveAnatomyItemInstance> _highlightModule;

		[Token(Token = "0x40017F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly ISubPartLayerModule<IInteractiveAnatomyItemInstance> _subPartLayerModule;

		[Token(Token = "0x40017F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private readonly IDisassembleModule<IInteractiveAnatomyItemInstance> _disassembleModule;

		[Token(Token = "0x170003C0")]
		public AnatomyItem SelectedObject
		{
			[Token(Token = "0x6001A22")]
			[Address(RVA = "0x1643B88", Offset = "0x1643B88", VA = "0x1643B88", Slot = "4")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A23")]
			[Address(RVA = "0x1643B90", Offset = "0x1643B90", VA = "0x1643B90")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6001A24")]
		[Address(RVA = "0x1643B98", Offset = "0x1643B98", VA = "0x1643B98")]
		public AnatomyItemSelectionModule(ISystemsModule systemsModule, ILocationModule locationModule, ILevelModule levelModule, IInstanceProvider<IInteractiveAnatomyItemInstanceCollection> instanceProvider, IHighlightModule<IInteractiveAnatomyItemInstance> highlightModule, ISubPartLayerModule<IInteractiveAnatomyItemInstance> subPartLayerModule, IDisassembleModule<IInteractiveAnatomyItemInstance> disassembleModule)
		{
		}

		[Token(Token = "0x6001A25")]
		[Address(RVA = "0x1643C58", Offset = "0x1643C58", VA = "0x1643C58", Slot = "5")]
		[AsyncStateMachine(typeof(<SetSelectedObject>d__12))]
		public Task SetSelectedObject(AnatomyItem value, CancellationToken cancellationToken)
		{
			return null;
		}
	}
	[Token(Token = "0x20004FD")]
	public interface IPoseData
	{
		[Token(Token = "0x170003C1")]
		Vector3 Position
		{
			[Token(Token = "0x6001A28")]
			get;
		}

		[Token(Token = "0x170003C2")]
		Quaternion Rotation
		{
			[Token(Token = "0x6001A29")]
			get;
		}

		[Token(Token = "0x170003C3")]
		Vector3 Scale
		{
			[Token(Token = "0x6001A2A")]
			get;
		}
	}
	[Token(Token = "0x20004FE")]
	public interface IAnatomyModel<T>
	{
		[Token(Token = "0x170003C4")]
		IEnumerable<T> HiddenObjects
		{
			[Token(Token = "0x6001A2B")]
			get;
		}

		[Token(Token = "0x170003C5")]
		IEnumerable<T> HighlightedObjects
		{
			[Token(Token = "0x6001A2C")]
			get;
		}

		[Token(Token = "0x170003C6")]
		IEnumerable<KeyValuePair<T, DisassembleState>> DisassembledObjects
		{
			[Token(Token = "0x6001A2D")]
			get;
		}

		[Token(Token = "0x170003C7")]
		IEnumerable<KeyValuePair<T, int>> ObjectLayers
		{
			[Token(Token = "0x6001A2E")]
			get;
		}

		[Token(Token = "0x170003C8")]
		IEnumerable<Database.SystemType> HighlightedSystems
		{
			[Token(Token = "0x6001A2F")]
			get;
		}

		[Token(Token = "0x170003C9")]
		IEnumerable<Database.SystemType> FadedSystems
		{
			[Token(Token = "0x6001A30")]
			get;
		}

		[Token(Token = "0x170003CA")]
		DatabaseType ActiveDatabaseType
		{
			[Token(Token = "0x6001A31")]
			get;
		}

		[Token(Token = "0x170003CB")]
		LocationType ActiveLocationType
		{
			[Token(Token = "0x6001A32")]
			get;
		}

		[Token(Token = "0x170003CC")]
		IEnumerable<Database.SystemType> ActiveSystems
		{
			[Token(Token = "0x6001A33")]
			get;
		}

		[Token(Token = "0x170003CD")]
		IEnumerable<KeyValuePair<Database.SystemType, int>> SystemStructureLevels
		{
			[Token(Token = "0x6001A34")]
			get;
		}

		[Token(Token = "0x170003CE")]
		SubpartType ActiveSubpartType
		{
			[Token(Token = "0x6001A35")]
			get;
		}

		[Token(Token = "0x170003CF")]
		bool AntModeEnabled
		{
			[Token(Token = "0x6001A36")]
			get;
		}

		[Token(Token = "0x170003D0")]
		bool SliceEnabled
		{
			[Token(Token = "0x6001A37")]
			get;
		}

		[Token(Token = "0x170003D1")]
		bool Rotation
		{
			[Token(Token = "0x6001A38")]
			get;
		}

		[Token(Token = "0x170003D2")]
		float SystemContainerScale
		{
			[Token(Token = "0x6001A39")]
			get;
		}

		[Token(Token = "0x170003D3")]
		float SystemContainerVerticalOffset
		{
			[Token(Token = "0x6001A3A")]
			get;
		}

		[Token(Token = "0x170003D4")]
		Vector3 SystemContainerRotation
		{
			[Token(Token = "0x6001A3B")]
			get;
		}

		[Token(Token = "0x170003D5")]
		string ActiveAnimation
		{
			[Token(Token = "0x6001A3C")]
			get;
		}

		[Token(Token = "0x170003D6")]
		bool LocationsEnabled
		{
			[Token(Token = "0x6001A3D")]
			get;
		}

		[Token(Token = "0x170003D7")]
		IPoseData SlicePlanePose
		{
			[Token(Token = "0x6001A3E")]
			get;
		}

		[Token(Token = "0x170003D8")]
		IEnumerable<KeyValuePair<T, IPoseData>> AnatomyItemPoses
		{
			[Token(Token = "0x6001A3F")]
			get;
		}

		[Token(Token = "0x170003D9")]
		IEnumerable<KeyValuePair<T, IPoseData>> AnatomySpherePoses
		{
			[Token(Token = "0x6001A40")]
			get;
		}

		[Token(Token = "0x170003DA")]
		int MaxSystemCount
		{
			[Token(Token = "0x6001A41")]
			get;
		}

		[Token(Token = "0x170003DB")]
		IEnumerable<string> HighlightedAnimationObjects
		{
			[Token(Token = "0x6001A42")]
			get;
		}

		[Token(Token = "0x170003DC")]
		IEnumerable<string> HiddenAnimationObjects
		{
			[Token(Token = "0x6001A43")]
			get;
		}

		[Token(Token = "0x170003DD")]
		float AnimationTime
		{
			[Token(Token = "0x6001A44")]
			get;
		}

		[Token(Token = "0x170003DE")]
		float AnimationSpeed
		{
			[Token(Token = "0x6001A45")]
			get;
		}
	}
	[Token(Token = "0x20004FF")]
	public class PoseData : IPoseData
	{
		[Token(Token = "0x170003DF")]
		public Vector3 Position
		{
			[Token(Token = "0x6001A46")]
			[Address(RVA = "0x1644BCC", Offset = "0x1644BCC", VA = "0x1644BCC", Slot = "4")]
			[CompilerGenerated]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001A47")]
			[Address(RVA = "0x1644BD8", Offset = "0x1644BD8", VA = "0x1644BD8")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170003E0")]
		public Quaternion Rotation
		{
			[Token(Token = "0x6001A48")]
			[Address(RVA = "0x1644BE4", Offset = "0x1644BE4", VA = "0x1644BE4", Slot = "5")]
			[CompilerGenerated]
			get
			{
				return default(Quaternion);
			}
			[Token(Token = "0x6001A49")]
			[Address(RVA = "0x1644BF0", Offset = "0x1644BF0", VA = "0x1644BF0")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170003E1")]
		public Vector3 Scale
		{
			[Token(Token = "0x6001A4A")]
			[Address(RVA = "0x1644BFC", Offset = "0x1644BFC", VA = "0x1644BFC", Slot = "6")]
			[CompilerGenerated]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001A4B")]
			[Address(RVA = "0x1644C08", Offset = "0x1644C08", VA = "0x1644C08")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6001A4C")]
		[Address(RVA = "0x1644C14", Offset = "0x1644C14", VA = "0x1644C14")]
		public PoseData()
		{
		}
	}
	[Token(Token = "0x2000500")]
	public class AnatomyModel<T> : IAnatomyModel<T>
	{
		[Token(Token = "0x170003E2")]
		public IEnumerable<T> HiddenObjects
		{
			[Token(Token = "0x6001A4D")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A4E")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170003E3")]
		public IEnumerable<T> HighlightedObjects
		{
			[Token(Token = "0x6001A4F")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A50")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170003E4")]
		public IEnumerable<KeyValuePair<T, DisassembleState>> DisassembledObjects
		{
			[Token(Token = "0x6001A51")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A52")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170003E5")]
		public IEnumerable<KeyValuePair<T, int>> ObjectLayers
		{
			[Token(Token = "0x6001A53")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A54")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170003E6")]
		public IEnumerable<Database.SystemType> HighlightedSystems
		{
			[Token(Token = "0x6001A55")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A56")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170003E7")]
		public IEnumerable<Database.SystemType> FadedSystems
		{
			[Token(Token = "0x6001A57")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A58")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170003E8")]
		public DatabaseType ActiveDatabaseType
		{
			[Token(Token = "0x6001A59")]
			[CompilerGenerated]
			get
			{
				return default(DatabaseType);
			}
			[Token(Token = "0x6001A5A")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170003E9")]
		public LocationType ActiveLocationType
		{
			[Token(Token = "0x6001A5B")]
			[CompilerGenerated]
			get
			{
				return default(LocationType);
			}
			[Token(Token = "0x6001A5C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170003EA")]
		public IEnumerable<Database.SystemType> ActiveSystems
		{
			[Token(Token = "0x6001A5D")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A5E")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170003EB")]
		public IEnumerable<KeyValuePair<Database.SystemType, int>> SystemStructureLevels
		{
			[Token(Token = "0x6001A5F")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A60")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170003EC")]
		public SubpartType ActiveSubpartType
		{
			[Token(Token = "0x6001A61")]
			[CompilerGenerated]
			get
			{
				return default(SubpartType);
			}
			[Token(Token = "0x6001A62")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170003ED")]
		public bool AntModeEnabled
		{
			[Token(Token = "0x6001A63")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001A64")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170003EE")]
		public bool SliceEnabled
		{
			[Token(Token = "0x6001A65")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001A66")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170003EF")]
		public bool Rotation
		{
			[Token(Token = "0x6001A67")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001A68")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170003F0")]
		public float SystemContainerScale
		{
			[Token(Token = "0x6001A69")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001A6A")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170003F1")]
		public float SystemContainerVerticalOffset
		{
			[Token(Token = "0x6001A6B")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001A6C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170003F2")]
		public Vector3 SystemContainerRotation
		{
			[Token(Token = "0x6001A6D")]
			[CompilerGenerated]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001A6E")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170003F3")]
		public string ActiveAnimation
		{
			[Token(Token = "0x6001A6F")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A70")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170003F4")]
		public bool LocationsEnabled
		{
			[Token(Token = "0x6001A71")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001A72")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170003F5")]
		public IPoseData SlicePlanePose
		{
			[Token(Token = "0x6001A73")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A74")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170003F6")]
		public IEnumerable<KeyValuePair<T, IPoseData>> AnatomyItemPoses
		{
			[Token(Token = "0x6001A75")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A76")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170003F7")]
		public IEnumerable<KeyValuePair<T, IPoseData>> AnatomySpherePoses
		{
			[Token(Token = "0x6001A77")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A78")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170003F8")]
		public int MaxSystemCount
		{
			[Token(Token = "0x6001A79")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001A7A")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170003F9")]
		public IEnumerable<string> HighlightedAnimationObjects
		{
			[Token(Token = "0x6001A7B")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A7C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170003FA")]
		public IEnumerable<string> HiddenAnimationObjects
		{
			[Token(Token = "0x6001A7D")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A7E")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170003FB")]
		public float AnimationTime
		{
			[Token(Token = "0x6001A7F")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001A80")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170003FC")]
		public float AnimationSpeed
		{
			[Token(Token = "0x6001A81")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001A82")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6001A83")]
		public AnatomyModel()
		{
		}
	}
	[Token(Token = "0x2000501")]
	public class AnatomyModelLoaderModule<TObj> : IModelLoaderModule<IAnatomyModel<TObj>> where TObj : IHideable, IGrabable, IDisassemblable, IAnatomyItemInstance
	{
		[StructLayout(3)]
		[Token(Token = "0x2000503")]
		[CompilerGenerated]
		private struct <LoadModel>d__25 : IAsyncStateMachine
		{
			[Token(Token = "0x4001836")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001837")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4001838")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public AnatomyModelLoaderModule<TObj> <>4__this;

			[Token(Token = "0x4001839")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IAnatomyModel<TObj> model;

			[Token(Token = "0x400183A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x6001A93")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001A94")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4001819")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IHideModule<TObj> _hideModule;

		[Token(Token = "0x400181A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IHighlightModule<TObj> _highlightModule;

		[Token(Token = "0x400181B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IDisassembleModule<TObj> _disassembleModule;

		[Token(Token = "0x400181C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly ISubPartLayerModule<TObj> _subPartLayerModule;

		[Token(Token = "0x400181D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IHighlightModule<Database.SystemType> _systemHighlightModule;

		[Token(Token = "0x400181E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IFadeModule<Database.SystemType> _systemFadeModule;

		[Token(Token = "0x400181F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly ISystemsModule _systemsModule;

		[Token(Token = "0x4001820")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly ILocationModule _locationModule;

		[Token(Token = "0x4001821")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly ILevelModule _levelModule;

		[Token(Token = "0x4001822")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly ISubpartTypeModule _subpartTypeModule;

		[Token(Token = "0x4001823")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly ISliceModule _sliceModule;

		[Token(Token = "0x4001824")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IAntModeModule _antModeModule;

		[Token(Token = "0x4001825")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IBodyRotationModule _bodyRotationModule;

		[Token(Token = "0x4001826")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly InteractiveSystemContainer _interactiveSystemContainer;

		[Token(Token = "0x4001827")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly ISceneManager<TObj> _sceneManager;

		[Token(Token = "0x4001828")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly ICountLimitedSystemsModule _countLimitedSystemsModule;

		[Token(Token = "0x4001829")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IAnimationModule<AnimationItemInstance> _animationModule;

		[Token(Token = "0x400182A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IHighlightModule<AnimationObjectInstance> _animationHighlightModule;

		[Token(Token = "0x400182B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IHideModule<AnimationObjectInstance> _animationHideModule;

		[Token(Token = "0x170003FD")]
		public IAnatomyModel<TObj> ModelCurrentlyBeingLoaded
		{
			[Token(Token = "0x6001A84")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A85")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6001A86")]
		public AnatomyModelLoaderModule(IHideModule<TObj> hideModule, IHighlightModule<TObj> highlightModule, IDisassembleModule<TObj> disassembleModule, ISubPartLayerModule<TObj> subPartLayerModule, IHighlightModule<Database.SystemType> systemHighlightModule, IFadeModule<Database.SystemType> systemFadeModule, ISystemsModule systemsModule, ILocationModule locationModule, ILevelModule levelModule, ISubpartTypeModule subpartTypeModule, ISliceModule sliceModule, IAntModeModule antModeModule, IBodyRotationModule bodyRotationModule, InteractiveSystemContainer interactiveSystemContainer, ISceneManager<TObj> sceneManager, ICountLimitedSystemsModule countLimitedSystemsModule, IAnimationModule<AnimationItemInstance> animationModule, IHighlightModule<AnimationObjectInstance> animationHighlightModule, IHideModule<AnimationObjectInstance> animationHideModule)
		{
		}

		[Token(Token = "0x6001A87")]
		public IAnatomyModel<TObj> GetModel()
		{
			return null;
		}

		[Token(Token = "0x6001A88")]
		[AsyncStateMachine(typeof(AnatomyModelLoaderModule<>.<LoadModel>d__25))]
		public Task LoadModel(IAnatomyModel<TObj> model, CancellationToken cancellationToken)
		{
			return null;
		}
	}
	[Token(Token = "0x2000504")]
	public static class AnatomyModelLoaderExtensions
	{
		[Token(Token = "0x6001A95")]
		public static AnatomyModel<TObj> ResolveFromId<TObj, TId>(this IResolver<TObj, TId> resolver, IAnatomyModel<TId> model)
		{
			return null;
		}

		[Token(Token = "0x6001A96")]
		public static AnatomyModel<TId> ResolveToId<TObj, TId>(this IResolver<TObj, TId> resolver, IAnatomyModel<TObj> model)
		{
			return null;
		}

		[Token(Token = "0x6001A97")]
		public static bool Validate<TObj>(this IAnatomyModel<TObj> model, out string message)
		{
			return default(bool);
		}
	}
	[Serializable]
	[Token(Token = "0x2000507")]
	public class AnimationModuleSettings
	{
		[Token(Token = "0x400183D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform AnimationModelParent;

		[Token(Token = "0x6001AA2")]
		[Address(RVA = "0x1644C1C", Offset = "0x1644C1C", VA = "0x1644C1C")]
		public AnimationModuleSettings()
		{
		}
	}
	[Token(Token = "0x2000508")]
	public class AnimationModule : IAnimationModule<AnimationItemInstance>
	{
		[StructLayout(3)]
		[Token(Token = "0x2000509")]
		[CompilerGenerated]
		private struct <SetActiveAnimation>d__13 : IAsyncStateMachine
		{
			[Token(Token = "0x4001843")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001844")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4001845")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string value;

			[Token(Token = "0x4001846")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public AnimationModule <>4__this;

			[Token(Token = "0x4001847")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TaskAwaiter<IEnumerable<LoadedAsset<GameObject>>> <>u__1;

			[Token(Token = "0x6001AAC")]
			[Address(RVA = "0x16450B4", Offset = "0x16450B4", VA = "0x16450B4", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001AAD")]
			[Address(RVA = "0x1645620", Offset = "0x1645620", VA = "0x1645620", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x200050A")]
		[CompilerGenerated]
		private sealed class <Yield>d__16<T> : IEnumerable<T>, IEnumerable, IEnumerator<T>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001848")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x4001849")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private T <>2__current;

			[Token(Token = "0x400184A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>l__initialThreadId;

			[Token(Token = "0x400184B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private T value;

			[Token(Token = "0x400184C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T <>3__value;

			[Token(Token = "0x17000401")]
			private T System.Collections.Generic.IEnumerator<T>.Current
			{
				[Token(Token = "0x6001AB1")]
				[DebuggerHidden]
				get
				{
					return (T)null;
				}
			}

			[Token(Token = "0x17000402")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001AB3")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001AAE")]
			[DebuggerHidden]
			public <Yield>d__16(int <>1__state)
			{
			}

			[Token(Token = "0x6001AAF")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001AB0")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001AB2")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6001AB4")]
			[DebuggerHidden]
			private IEnumerator<T> System.Collections.Generic.IEnumerable<T>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6001AB5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x400183E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly AnimationModuleSettings _settings;

		[Token(Token = "0x400183F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly IAssetInstanceProvider<GameObject> _animationAssetInstanceProvider;

		[Token(Token = "0x4001840")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly Action<AnimationItemInstance> _onBeforeAnimationDestroyed;

		[Token(Token = "0x4001841")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly Action<AnimationItemInstance> _onAnimationCreated;

		[Token(Token = "0x170003FE")]
		public AnimationItemInstance ActiveAnimation
		{
			[Token(Token = "0x6001AA3")]
			[Address(RVA = "0x1644C24", Offset = "0x1644C24", VA = "0x1644C24", Slot = "4")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001AA4")]
			[Address(RVA = "0x1644C2C", Offset = "0x1644C2C", VA = "0x1644C2C")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x170003FF")]
		public float AnimationTime
		{
			[Token(Token = "0x6001AA5")]
			[Address(RVA = "0x1644C34", Offset = "0x1644C34", VA = "0x1644C34", Slot = "5")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000400")]
		public float AnimationSpeed
		{
			[Token(Token = "0x6001AA6")]
			[Address(RVA = "0x1644CF4", Offset = "0x1644CF4", VA = "0x1644CF4", Slot = "6")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001AA7")]
		[Address(RVA = "0x1644D80", Offset = "0x1644D80", VA = "0x1644D80")]
		public AnimationModule(AnimationModuleSettings settings, IAssetInstanceProvider<GameObject> animationAssetInstanceProvider, [Optional] Action<AnimationItemInstance> onAnimationCreated, [Optional] Action<AnimationItemInstance> onBeforeAnimationDestroyed)
		{
		}

		[Token(Token = "0x6001AA8")]
		[Address(RVA = "0x1644DF4", Offset = "0x1644DF4", VA = "0x1644DF4", Slot = "7")]
		[AsyncStateMachine(typeof(<SetActiveAnimation>d__13))]
		public Task SetActiveAnimation(string value)
		{
			return null;
		}

		[Token(Token = "0x6001AA9")]
		[Address(RVA = "0x1644EF8", Offset = "0x1644EF8", VA = "0x1644EF8", Slot = "8")]
		public void SetAnimationSpeed(float val)
		{
		}

		[Token(Token = "0x6001AAA")]
		[Address(RVA = "0x1644FCC", Offset = "0x1644FCC", VA = "0x1644FCC", Slot = "9")]
		public void SetAnimationTime(float val)
		{
		}

		[Token(Token = "0x6001AAB")]
		[IteratorStateMachine(typeof(<Yield>d__16<>))]
		public static IEnumerable<T> Yield<T>(T value)
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x200050B")]
	public class AntModeModuleSettings
	{
		[Token(Token = "0x400184D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject Universe;

		[Token(Token = "0x400184E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float Scale;

		[Token(Token = "0x400184F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SceneEnvironmentsScriptableObject SceneEnvironmentsScriptableObject;

		[Token(Token = "0x6001AB6")]
		[Address(RVA = "0x164562C", Offset = "0x164562C", VA = "0x164562C")]
		public AntModeModuleSettings()
		{
		}
	}
	[Token(Token = "0x200050C")]
	public class AntModeModule : IAntModeModule, IDisposable
	{
		[Token(Token = "0x4001850")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly ISystemsModule _systemsModule;

		[Token(Token = "0x4001851")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly ILocationModule _locationModule;

		[Token(Token = "0x4001852")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly IAnatomyDatabase _anatomyDatabase;

		[Token(Token = "0x4001853")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly IInstanceProvider<IInteractiveAnatomyItemInstanceCollection> _instanceProvider;

		[Token(Token = "0x4001854")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly IInstanceCollectionModule<IInteractiveAnatomyItemInstanceCollection> _instanceCollectionModule;

		[Token(Token = "0x4001855")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly InteractiveSystemContainer _interactiveSystemContainer;

		[Token(Token = "0x4001856")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private readonly AntModeModuleSettings _settings;

		[Token(Token = "0x4001857")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private readonly Func<IPlayerHandler> _getPlayerHandler;

		[Token(Token = "0x4001858")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private readonly Action _onSetAntModeEnabledCompleted;

		[Token(Token = "0x4001859")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Collider _antModeUniverseCollider;

		[Token(Token = "0x400185A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private EnvironmentReferenceProvider _environmentReferenceProvider;

		[Token(Token = "0x400185B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private TriggerableEventSource _antModeColliderEventSource;

		[Token(Token = "0x400185C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Action<Collider> _onTriggerExit;

		[Token(Token = "0x400185D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private CancellationTokenSource _colliderExitDelayCancellationTokenSource;

		[Token(Token = "0x17000403")]
		public bool AntModeEnabled
		{
			[Token(Token = "0x6001AB7")]
			[Address(RVA = "0x164563C", Offset = "0x164563C", VA = "0x164563C", Slot = "4")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001AB8")]
			[Address(RVA = "0x1645644", Offset = "0x1645644", VA = "0x1645644")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000404")]
		private EnvironmentReferenceProvider EnvironmentReferenceProvider
		{
			[Token(Token = "0x6001AB9")]
			[Address(RVA = "0x1645650", Offset = "0x1645650", VA = "0x1645650")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001ABA")]
		[Address(RVA = "0x1645700", Offset = "0x1645700", VA = "0x1645700")]
		public AntModeModule(ISystemsModule systemsModule, ILocationModule locationModule, IAnatomyDatabase anatomyDatabase, IInstanceProvider<IInteractiveAnatomyItemInstanceCollection> instanceProvider, IInstanceCollectionModule<IInteractiveAnatomyItemInstanceCollection> instanceCollectionModule, InteractiveSystemContainer interactiveSystemContainer, AntModeModuleSettings settings, Func<IPlayerHandler> getPlayerHandler, Action onSetAntModeEnabledCompleted)
		{
		}

		[Token(Token = "0x6001ABB")]
		[Address(RVA = "0x1645948", Offset = "0x1645948", VA = "0x1645948")]
		private void OnSceneLoaded(UnityEngine.SceneManagement.Scene scene, LoadSceneMode loadSceneMode)
		{
		}

		[Token(Token = "0x6001ABC")]
		[Address(RVA = "0x1645B58", Offset = "0x1645B58", VA = "0x1645B58", Slot = "5")]
		public void SetAntModeEnabled(bool value)
		{
		}

		[Token(Token = "0x6001ABD")]
		[Address(RVA = "0x1646F80", Offset = "0x1646F80", VA = "0x1646F80")]
		private void OnInstanceCollectionSetActive(IInteractiveAnatomyItemInstanceCollection instanceCollection, bool value)
		{
		}

		[Token(Token = "0x6001ABE")]
		[Address(RVA = "0x1646698", Offset = "0x1646698", VA = "0x1646698")]
		private static void SetAntModeEnabled(IEnumerable<IInteractiveAnatomyItemInstanceCollection> instanceCollections, bool value)
		{
		}

		[Token(Token = "0x6001ABF")]
		[Address(RVA = "0x1646D10", Offset = "0x1646D10", VA = "0x1646D10")]
		private void AddAntModeColliderListeners(Collider antManUniverseCollider)
		{
		}

		[Token(Token = "0x6001AC0")]
		[Address(RVA = "0x1646EEC", Offset = "0x1646EEC", VA = "0x1646EEC")]
		private void RemoveAntModeColliderListeners()
		{
		}

		[Token(Token = "0x6001AC1")]
		[Address(RVA = "0x1647000", Offset = "0x1647000", VA = "0x1647000", Slot = "6")]
		public void Dispose()
		{
		}
	}
	[Token(Token = "0x2000511")]
	public static class AntModeModuleExtensions
	{
		[Token(Token = "0x6001ACF")]
		[Address(RVA = "0x1647B1C", Offset = "0x1647B1C", VA = "0x1647B1C")]
		public static void SetScale(this EnvironmentReferenceProvider environmentReferenceProvider, float scale)
		{
		}

		[Token(Token = "0x6001AD0")]
		[Address(RVA = "0x1645AE0", Offset = "0x1645AE0", VA = "0x1645AE0")]
		public static void SetupEnvironment(this EnvironmentReferenceProvider environmentReferenceProvider, bool antModeEnabled, float scale)
		{
		}
	}
	[Token(Token = "0x2000512")]
	public class BodyRotationModule : IBodyRotationModule
	{
		[Token(Token = "0x400186B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly InteractiveSystemContainer _interactiveSystemContainer;

		[Token(Token = "0x17000405")]
		public bool BodyRotation
		{
			[Token(Token = "0x6001AD2")]
			[Address(RVA = "0x1647EE0", Offset = "0x1647EE0", VA = "0x1647EE0", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001AD1")]
		[Address(RVA = "0x1647EB0", Offset = "0x1647EB0", VA = "0x1647EB0")]
		public BodyRotationModule(InteractiveSystemContainer interactiveSystemContainer)
		{
		}

		[Token(Token = "0x6001AD3")]
		[Address(RVA = "0x1647F5C", Offset = "0x1647F5C", VA = "0x1647F5C", Slot = "5")]
		public void SetBodyRotation(bool value)
		{
		}
	}
	[Token(Token = "0x2000513")]
	public class HierarchyItemModule : ISubPartLayerModule<IInteractiveAnatomyItemInstance>, IDisassembleModule<IInteractiveAnatomyItemInstance>
	{
		[Token(Token = "0x2000514")]
		public class DisassembleData
		{
			[Token(Token = "0x4001871")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Sequence Sequence;

			[Token(Token = "0x6001ADA")]
			[Address(RVA = "0x164A6C4", Offset = "0x164A6C4", VA = "0x164A6C4")]
			public DisassembleData()
			{
			}
		}

		[Token(Token = "0x400186C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly IInstanceProvider<IInteractiveAnatomyItemInstanceCollection> _instanceProvider;

		[Token(Token = "0x400186D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly Dictionary<IInteractiveAnatomyItemInstance, int> _objectLayers;

		[Token(Token = "0x400186E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly Dictionary<IInteractiveAnatomyItemInstance, DisassembleState> _disassembledObjects;

		[Token(Token = "0x400186F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly Dictionary<IInteractiveAnatomyItemInstance, DisassembleData> _disassembleData;

		[Token(Token = "0x4001870")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly IHighlightModule<IInteractiveAnatomyItemInstance> _highlightModule;

		[Token(Token = "0x17000406")]
		public System.Collections.Generic.IReadOnlyDictionary<IInteractiveAnatomyItemInstance, int> ObjectLayers
		{
			[Token(Token = "0x6001AD4")]
			[Address(RVA = "0x1647F7C", Offset = "0x1647F7C", VA = "0x1647F7C", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000407")]
		public System.Collections.Generic.IReadOnlyDictionary<IInteractiveAnatomyItemInstance, DisassembleState> DisassembledObjects
		{
			[Token(Token = "0x6001AD5")]
			[Address(RVA = "0x1647F84", Offset = "0x1647F84", VA = "0x1647F84", Slot = "6")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001AD6")]
		[Address(RVA = "0x1647F8C", Offset = "0x1647F8C", VA = "0x1647F8C")]
		public HierarchyItemModule(IInstanceProvider<IInteractiveAnatomyItemInstanceCollection> instanceProvider, IHighlightModule<IInteractiveAnatomyItemInstance> highlightModule)
		{
		}

		[Token(Token = "0x6001AD7")]
		[Address(RVA = "0x16480E4", Offset = "0x16480E4", VA = "0x16480E4", Slot = "5")]
		public void SetLayer(IInteractiveAnatomyItemInstance obj, int value)
		{
		}

		[Token(Token = "0x6001AD8")]
		[Address(RVA = "0x16484B8", Offset = "0x16484B8", VA = "0x16484B8")]
		public static void SetLayer(IInstanceCollection<IInteractiveAnatomyItemInstance> collection, IInteractiveAnatomyItemInstance obj, int value, DisassembleState? parentState, IHighlightModule<IInteractiveAnatomyItemInstance> highlightModule, [Optional] Action<IInteractiveAnatomyItemInstance> processChild)
		{
		}

		[Token(Token = "0x6001AD9")]
		[Address(RVA = "0x1648F8C", Offset = "0x1648F8C", VA = "0x1648F8C", Slot = "7")]
		public void SetDisassembled(IInteractiveAnatomyItemInstance obj, DisassembleState value)
		{
		}
	}
	[Token(Token = "0x2000519")]
	public class HighlightModule<T> : IHighlightModule<T> where T : IHighlightable
	{
		[Token(Token = "0x400187B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public readonly HashSet<T> HighlightedObjects;

		[Token(Token = "0x17000408")]
		private IReadOnlyCollection<T> VR.Modules.IHighlightModule<T>.HighlightedObjects
		{
			[Token(Token = "0x6001AE6")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001AE7")]
		public void SetHighlighted(T obj, bool value)
		{
		}

		[Token(Token = "0x6001AE8")]
		public HighlightModule()
		{
		}
	}
	[Token(Token = "0x200051A")]
	public interface IAnatomyModuleProvider
	{
		[Token(Token = "0x17000409")]
		bool Initialized
		{
			[Token(Token = "0x6001AEA")]
			get;
		}

		[Token(Token = "0x6001AE9")]
		Task Initialize(EducationLevel educationLevel);
	}
	[Token(Token = "0x200051B")]
	public interface IAntModeModule
	{
		[Token(Token = "0x1700040A")]
		bool AntModeEnabled
		{
			[Token(Token = "0x6001AEB")]
			get;
		}

		[Token(Token = "0x6001AEC")]
		void SetAntModeEnabled(bool value);
	}
	[Token(Token = "0x200051C")]
	public interface IBodyRotationModule
	{
		[Token(Token = "0x1700040B")]
		bool BodyRotation
		{
			[Token(Token = "0x6001AED")]
			get;
		}

		[Token(Token = "0x6001AEE")]
		void SetBodyRotation(bool value);
	}
	[Token(Token = "0x200051D")]
	public enum DisassembleState
	{
		[Token(Token = "0x400187D")]
		Merged,
		[Token(Token = "0x400187E")]
		Separated,
		[Token(Token = "0x400187F")]
		Disassembled
	}
	[Token(Token = "0x200051E")]
	public interface IDisassembleModule<T>
	{
		[Token(Token = "0x1700040C")]
		System.Collections.Generic.IReadOnlyDictionary<T, DisassembleState> DisassembledObjects
		{
			[Token(Token = "0x6001AEF")]
			get;
		}

		[Token(Token = "0x6001AF0")]
		void SetDisassembled(T obj, DisassembleState value);
	}
	[Token(Token = "0x200051F")]
	public static class DisassembleModuleExtensions
	{
		[Token(Token = "0x6001AF1")]
		public static void Reset<T>(this IDisassembleModule<T> module)
		{
		}
	}
	[Token(Token = "0x2000520")]
	public interface IHighlightModule<T>
	{
		[Token(Token = "0x1700040D")]
		IReadOnlyCollection<T> HighlightedObjects
		{
			[Token(Token = "0x6001AF2")]
			get;
		}

		[Token(Token = "0x6001AF3")]
		void SetHighlighted(T obj, bool value);
	}
	[Token(Token = "0x2000521")]
	public static class HighlightModuleExtensions
	{
		[Token(Token = "0x6001AF4")]
		public static void Reset<T>(this IHighlightModule<T> module)
		{
		}
	}
	[Token(Token = "0x2000522")]
	public interface ILocationModule
	{
		[Token(Token = "0x1700040E")]
		LocationType ActiveLocationType
		{
			[Token(Token = "0x6001AF5")]
			get;
		}

		[Token(Token = "0x1700040F")]
		bool LocationsEnabled
		{
			[Token(Token = "0x6001AF7")]
			get;
		}

		[Token(Token = "0x6001AF6")]
		Task SetLocationTypeAsync(LocationType value);

		[Token(Token = "0x6001AF8")]
		Task SetLocationsEnabled(bool value);
	}
	[Token(Token = "0x2000523")]
	public interface ISliceModule
	{
		[Token(Token = "0x17000410")]
		object SlicePlane
		{
			[Token(Token = "0x6001AF9")]
			get;
		}

		[Token(Token = "0x17000411")]
		bool SliceEnabled
		{
			[Token(Token = "0x6001AFA")]
			get;
		}

		[Token(Token = "0x6001AFB")]
		Task SetSliceEnabled(bool value);
	}
	[Token(Token = "0x2000524")]
	public interface ISortModule
	{
		[Token(Token = "0x6001AFC")]
		void SortItems();
	}
	[Token(Token = "0x2000525")]
	public interface ISubPartLayerModule<T>
	{
		[Token(Token = "0x17000412")]
		System.Collections.Generic.IReadOnlyDictionary<T, int> ObjectLayers
		{
			[Token(Token = "0x6001AFD")]
			get;
		}

		[Token(Token = "0x6001AFE")]
		void SetLayer(T obj, int level);
	}
	[Token(Token = "0x2000526")]
	public static class SubPartLayerModuleExtensions
	{
		[Token(Token = "0x6001AFF")]
		public static void Reset<T>(this ISubPartLayerModule<T> module)
		{
		}
	}
	[Token(Token = "0x2000527")]
	public interface ISystemsContainerModule
	{
		[Token(Token = "0x17000413")]
		InteractiveSystemContainer InteractiveSystemContainer
		{
			[Token(Token = "0x6001B00")]
			get;
		}
	}
	[Token(Token = "0x2000528")]
	public interface IVrResetModule
	{
		[Token(Token = "0x6001B01")]
		void ReturnAllItems();

		[Token(Token = "0x6001B02")]
		void ResetHighlightedItems();

		[Token(Token = "0x6001B03")]
		void ResetHiddenItems();
	}
	[Token(Token = "0x2000529")]
	public static class MaxSystemCountModule
	{
		[Token(Token = "0x6001B04")]
		[Address(RVA = "0x164AB38", Offset = "0x164AB38", VA = "0x164AB38")]
		public static int GetMaxSystemCount(this MaxSystemCountConfiguration maxSystemCountConfiguration, bool locationsEnabled)
		{
			return default(int);
		}

		[Token(Token = "0x6001B05")]
		[Address(RVA = "0x164AC3C", Offset = "0x164AC3C", VA = "0x164AC3C")]
		public static int GetMaxSystemCount(this MaxSystemCountConfiguration maxSystemCountConfiguration, bool locationsEnabled, string systemHeadsetType)
		{
			return default(int);
		}
	}
	[Serializable]
	[Token(Token = "0x200052A")]
	public class SliceModuleSettings
	{
		[Token(Token = "0x4001880")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GrabableItemBehaviour SlicePlane;

		[Token(Token = "0x4001881")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Collider PlaneCollider;

		[Token(Token = "0x4001882")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform SliceStartPosition;

		[Token(Token = "0x6001B06")]
		[Address(RVA = "0x164ADA4", Offset = "0x164ADA4", VA = "0x164ADA4")]
		public SliceModuleSettings()
		{
		}
	}
	[Token(Token = "0x200052B")]
	public class SliceModule : ISliceModule, IDisposable
	{
		[Token(Token = "0x200052C")]
		private sealed class SystemStructureLevelsEqualityComparer : IEqualityComparer<KeyValuePair<Database.SystemType, int>[]>
		{
			[Token(Token = "0x6001B16")]
			[Address(RVA = "0x164CDB0", Offset = "0x164CDB0", VA = "0x164CDB0", Slot = "4")]
			public bool Equals(KeyValuePair<Database.SystemType, int>[] x, KeyValuePair<Database.SystemType, int>[] y)
			{
				return default(bool);
			}

			[Token(Token = "0x6001B17")]
			[Address(RVA = "0x164CEDC", Offset = "0x164CEDC", VA = "0x164CEDC", Slot = "5")]
			public int GetHashCode(KeyValuePair<Database.SystemType, int>[] obj)
			{
				return default(int);
			}

			[Token(Token = "0x6001B18")]
			[Address(RVA = "0x164CB7C", Offset = "0x164CB7C", VA = "0x164CB7C")]
			public SystemStructureLevelsEqualityComparer()
			{
			}
		}

		[Token(Token = "0x4001883")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly SliceModuleSettings _settings;

		[Token(Token = "0x4001884")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly ISystemsModule _systemsModule;

		[Token(Token = "0x4001885")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly ILocationModule _locationModule;

		[Token(Token = "0x4001886")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly ILevelModule _levelModule;

		[Token(Token = "0x4001887")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly IInstanceProvider<IInteractiveAnatomyItemInstanceCollection> _instanceProvider;

		[Token(Token = "0x4001888")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly IAnatomyDatabase _anatomyDatabase;

		[Token(Token = "0x4001889")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private readonly IInstanceCollectionModule<IInteractiveAnatomyItemInstanceCollection> _instanceCollectionModule;

		[Token(Token = "0x400188A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private readonly InteractiveSystemContainer _interactiveSystemContainer;

		[Token(Token = "0x400188B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private readonly ISceneManager<IInteractiveAnatomyItemInstance> _sceneManager;

		[Token(Token = "0x400188C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private readonly HashSet<IInteractiveAnatomyItemInstanceCollection> _affectedInstanceCollections;

		[Token(Token = "0x400188D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private readonly CompositeDisposable _disposable;

		[Token(Token = "0x400188F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly SystemStructureLevelsEqualityComparer EqualityComparer;

		[Token(Token = "0x17000414")]
		public object SlicePlane
		{
			[Token(Token = "0x6001B07")]
			[Address(RVA = "0x164ADAC", Offset = "0x164ADAC", VA = "0x164ADAC", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000415")]
		public bool SliceEnabled
		{
			[Token(Token = "0x6001B08")]
			[Address(RVA = "0x164ADD4", Offset = "0x164ADD4", VA = "0x164ADD4", Slot = "5")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001B09")]
			[Address(RVA = "0x164ADDC", Offset = "0x164ADDC", VA = "0x164ADDC")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6001B0A")]
		[Address(RVA = "0x164ADE8", Offset = "0x164ADE8", VA = "0x164ADE8")]
		public SliceModule(SliceModuleSettings settings, ISystemsModule systemsModule, ILocationModule locationModule, ILevelModule levelModule, IInstanceProvider<IInteractiveAnatomyItemInstanceCollection> instanceProvider, IAnatomyDatabase anatomyDatabase, IInstanceCollectionModule<IInteractiveAnatomyItemInstanceCollection> instanceCollectionModule, InteractiveSystemContainer interactiveSystemContainer, ISceneManager<IInteractiveAnatomyItemInstance> sceneManager)
		{
		}

		[Token(Token = "0x6001B0B")]
		[Address(RVA = "0x164B044", Offset = "0x164B044", VA = "0x164B044", Slot = "6")]
		public Task SetSliceEnabled(bool value)
		{
			return null;
		}

		[Token(Token = "0x6001B0C")]
		[Address(RVA = "0x164B964", Offset = "0x164B964", VA = "0x164B964")]
		private void SetSliceEnabled(IEnumerable<IInteractiveAnatomyItemInstanceCollection> instanceCollections, bool value)
		{
		}

		[Token(Token = "0x6001B0D")]
		[Address(RVA = "0x164C58C", Offset = "0x164C58C", VA = "0x164C58C")]
		private void OnInstanceCollectionSetActive(IInteractiveAnatomyItemInstanceCollection instanceCollection, bool value)
		{
		}

		[Token(Token = "0x6001B0E")]
		[Address(RVA = "0x164C2B8", Offset = "0x164C2B8", VA = "0x164C2B8")]
		public void UpdateShaderProperties()
		{
		}

		[Token(Token = "0x6001B0F")]
		[Address(RVA = "0x164C60C", Offset = "0x164C60C", VA = "0x164C60C")]
		private void UpdateCompletelySliced(IEnumerable<ISliceable> items)
		{
		}

		[Token(Token = "0x6001B10")]
		[Address(RVA = "0x164C3FC", Offset = "0x164C3FC", VA = "0x164C3FC")]
		public static bool IsCompletelySliced(ISliceable item, Transform slicePlane, Collider planeCollider)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B11")]
		[Address(RVA = "0x164C9EC", Offset = "0x164C9EC", VA = "0x164C9EC", Slot = "7")]
		public void Dispose()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000530")]
	public class SortModuleSettings
	{
		[Token(Token = "0x4001899")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AudioClip SortAudioClip;

		[Token(Token = "0x6001B23")]
		[Address(RVA = "0x164D3F0", Offset = "0x164D3F0", VA = "0x164D3F0")]
		public SortModuleSettings()
		{
		}
	}
	[Token(Token = "0x2000531")]
	public class SortModule<T> : ISortModule where T : IAnatomyItemInstance, IGrabable
	{
		[Token(Token = "0x400189A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly SortModuleSettings _settings;

		[Token(Token = "0x400189B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly ISceneManager<T> _sceneManager;

		[Token(Token = "0x400189C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly AudioHandler _audioHandler;

		[Token(Token = "0x6001B24")]
		public SortModule(SortModuleSettings settings, ISceneManager<T> sceneManager, AudioHandler audioHandler)
		{
		}

		[Token(Token = "0x6001B25")]
		public void SortItems()
		{
		}

		[Token(Token = "0x6001B26")]
		private static double DegreeToRadian(double angle)
		{
			return default(double);
		}
	}
	[Token(Token = "0x2000532")]
	public struct SubpartInstanceId
	{
		[Token(Token = "0x400189D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int HostId;

		[Token(Token = "0x400189E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public byte ColorId;

		[Token(Token = "0x400189F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public SubpartType SubpartType;
	}
	[Token(Token = "0x2000533")]
	public class SubpartInstanceResolver<T> : IResolver<VR.Views.SubpartInstance, SubpartInstanceId> where T : VR.Views.ISubpartHost
	{
		[Token(Token = "0x40018A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IResolver<T, int> _subpartHostResolver;

		[Token(Token = "0x6001B27")]
		public SubpartInstanceResolver(IResolver<T, int> subpartHostResolver)
		{
		}

		[Token(Token = "0x6001B28")]
		public SubpartInstanceId GetId(VR.Views.SubpartInstance obj)
		{
			return default(SubpartInstanceId);
		}

		[Token(Token = "0x6001B29")]
		public VR.Views.SubpartInstance ResolveFromId(SubpartInstanceId obj)
		{
			return null;
		}
	}
	[Token(Token = "0x2000534")]
	public class SystemFadeModule<TCollection, TInstance> : IFadeModule<Database.SystemType> where TCollection : ILevelableCollection<TInstance>, IFadeable where TInstance : ILevelable
	{
		[Token(Token = "0x2000536")]
		[CompilerGenerated]
		private sealed class <Yield>d__10<T> : IEnumerable<T>, IEnumerable, IEnumerator<T>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40018A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x40018AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private T <>2__current;

			[Token(Token = "0x40018AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>l__initialThreadId;

			[Token(Token = "0x40018AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private T obj;

			[Token(Token = "0x40018AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T <>3__obj;

			[Token(Token = "0x17000417")]
			private T System.Collections.Generic.IEnumerator<T>.Current
			{
				[Token(Token = "0x6001B35")]
				[DebuggerHidden]
				get
				{
					return (T)null;
				}
			}

			[Token(Token = "0x17000418")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001B37")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001B32")]
			[DebuggerHidden]
			public <Yield>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x6001B33")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001B34")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001B36")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6001B38")]
			[DebuggerHidden]
			private IEnumerator<T> System.Collections.Generic.IEnumerable<T>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6001B39")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x40018A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IInstanceProvider<TCollection> _instanceProvider;

		[Token(Token = "0x40018A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IAnatomyDatabase _anatomyDatabase;

		[Token(Token = "0x40018A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly ISystemsModule _systemsModule;

		[Token(Token = "0x40018A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly ILocationModule _locationModule;

		[Token(Token = "0x40018A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly HashSet<Database.SystemType> _fadedObjects;

		[Token(Token = "0x17000416")]
		public IReadOnlyCollection<Database.SystemType> FadedObjects
		{
			[Token(Token = "0x6001B2A")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001B2B")]
		public SystemFadeModule(IInstanceProvider<TCollection> instanceProvider, IAnatomyDatabase anatomyDatabase, ISystemsModule systemsModule, ILocationModule locationModule)
		{
		}

		[Token(Token = "0x6001B2C")]
		public void SetFaded(Database.SystemType systemType, bool value)
		{
		}

		[Token(Token = "0x6001B2D")]
		public void SetFaded(Database.SystemType systemType, DatabaseType databaseType, LocationType locationType, bool value)
		{
		}

		[Token(Token = "0x6001B2E")]
		[IteratorStateMachine(typeof(<Yield>d__10<>))]
		public static IEnumerable<T> Yield<T>(T obj)
		{
			return null;
		}
	}
	[Token(Token = "0x2000537")]
	public class SystemHighlightModule<TCollection, TInstance> : IHighlightModule<Database.SystemType> where TCollection : ILevelableCollection<TInstance>, IHighlightable where TInstance : ILevelable
	{
		[Token(Token = "0x2000539")]
		[CompilerGenerated]
		private sealed class <Yield>d__10<T> : IEnumerable<T>, IEnumerable, IEnumerator<T>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40018B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x40018B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private T <>2__current;

			[Token(Token = "0x40018B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>l__initialThreadId;

			[Token(Token = "0x40018B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private T obj;

			[Token(Token = "0x40018BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T <>3__obj;

			[Token(Token = "0x1700041A")]
			private T System.Collections.Generic.IEnumerator<T>.Current
			{
				[Token(Token = "0x6001B45")]
				[DebuggerHidden]
				get
				{
					return (T)null;
				}
			}

			[Token(Token = "0x1700041B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001B47")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001B42")]
			[DebuggerHidden]
			public <Yield>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x6001B43")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001B44")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001B46")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6001B48")]
			[DebuggerHidden]
			private IEnumerator<T> System.Collections.Generic.IEnumerable<T>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6001B49")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x40018AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IInstanceProvider<TCollection> _instanceProvider;

		[Token(Token = "0x40018AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IAnatomyDatabase _anatomyDatabase;

		[Token(Token = "0x40018B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly ISystemsModule _systemsModule;

		[Token(Token = "0x40018B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly ILocationModule _locationModule;

		[Token(Token = "0x40018B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly HashSet<Database.SystemType> _highlightedObjects;

		[Token(Token = "0x17000419")]
		public IReadOnlyCollection<Database.SystemType> HighlightedObjects
		{
			[Token(Token = "0x6001B3A")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001B3B")]
		public SystemHighlightModule(IInstanceProvider<TCollection> instanceProvider, IAnatomyDatabase anatomyDatabase, ISystemsModule systemsModule, ILocationModule locationModule)
		{
		}

		[Token(Token = "0x6001B3C")]
		public void SetHighlighted(Database.SystemType systemType, bool value)
		{
		}

		[Token(Token = "0x6001B3D")]
		public void SetHighlighted(Database.SystemType systemType, DatabaseType databaseType, LocationType locationType, bool value)
		{
		}

		[Token(Token = "0x6001B3E")]
		[IteratorStateMachine(typeof(<Yield>d__10<>))]
		public static IEnumerable<T> Yield<T>(T obj)
		{
			return null;
		}
	}
	[Token(Token = "0x200053A")]
	public class SystemsContainerModule : ISystemsContainerModule
	{
		[Token(Token = "0x1700041C")]
		public InteractiveSystemContainer InteractiveSystemContainer
		{
			[Token(Token = "0x6001B4A")]
			[Address(RVA = "0x164D3F8", Offset = "0x164D3F8", VA = "0x164D3F8", Slot = "4")]
			[CompilerGenerated]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001B4B")]
		[Address(RVA = "0x164D400", Offset = "0x164D400", VA = "0x164D400")]
		public SystemsContainerModule(InteractiveSystemContainer interactiveSystemContainer)
		{
		}
	}
	[Token(Token = "0x200053B")]
	public class SystemsResetModule<TCollection, TInstance> : IDisposable where TCollection : ILevelableCollection<TInstance>, IHighlightable, IFadeable where TInstance : ILevelable, IAnatomyItemInstance, IGrabable, IPickable
	{
		[Token(Token = "0x40018BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly SystemHighlightModule<TCollection, TInstance> _systemHighlightModule;

		[Token(Token = "0x40018BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly SystemFadeModule<TCollection, TInstance> _systemFadeModule;

		[Token(Token = "0x40018BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IHideModule<TInstance> _hideModule;

		[Token(Token = "0x40018BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IHighlightModule<TInstance> _highlightModule;

		[Token(Token = "0x40018C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IDisassembleModule<TInstance> _disassembleModule;

		[Token(Token = "0x40018C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly ISubPartLayerModule<TInstance> _subPartLayerModule;

		[Token(Token = "0x40018C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly ISceneManager<TInstance> _sceneManager;

		[Token(Token = "0x40018C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly ISystemsModuleEvents _systemsModuleEvents;

		[Token(Token = "0x40018C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IInstanceCollectionModule<TCollection> _instanceCollectionModule;

		[Token(Token = "0x6001B4C")]
		public SystemsResetModule(ISystemsModuleEvents systemsModuleEvents, IInstanceCollectionModule<TCollection> instanceCollectionModule, SystemHighlightModule<TCollection, TInstance> systemHighlightModule, SystemFadeModule<TCollection, TInstance> systemFadeModule, IHideModule<TInstance> hideModule, IHighlightModule<TInstance> highlightModule, IDisassembleModule<TInstance> disassembleModule, ISubPartLayerModule<TInstance> subaLayerModule, ISceneManager<TInstance> sceneManager)
		{
		}

		[Token(Token = "0x6001B4D")]
		private Task OnSystemsSetActiveCompleted(IReadOnlyCollection<Database.SystemType> systemTypes, DatabaseType databaseType, LocationType locationType, bool value)
		{
			return null;
		}

		[Token(Token = "0x6001B4E")]
		private void OnInstanceCollectionSetActive(TCollection collection, bool value)
		{
		}

		[Token(Token = "0x6001B4F")]
		public void ReturnMovedItemsForCollection(TCollection collection)
		{
		}

		[Token(Token = "0x6001B50")]
		public void Dispose()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200053D")]
	public class VrAnatomyInstanceFactorySettings
	{
		[Token(Token = "0x40018C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public InteractiveAnatomyItemInstanceSettings AnatomyInstanceSettings;

		[Token(Token = "0x40018C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public global::Views.AnatomyItemInstance AnatomyItemInstancePrefab;

		[Token(Token = "0x40018C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AnatomySphereItem AnatomySphereItemPrefab;

		[Token(Token = "0x6001B5B")]
		[Address(RVA = "0x164D430", Offset = "0x164D430", VA = "0x164D430")]
		public VrAnatomyInstanceFactorySettings()
		{
		}
	}
	[Token(Token = "0x200053E")]
	public class VrAnatomyInstanceFactory : IAnatomyInstanceFactory<InteractiveAnatomyItemInstanceCollection>, IPickableEvents<IInteractiveAnatomyItemInstance>, IGrabableEvents<IInteractiveAnatomyItemInstance>
	{
		[Token(Token = "0x40018CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly VrAnatomyInstanceFactorySettings _settings;

		[Token(Token = "0x40018CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly System.Collections.Generic.IReadOnlyDictionary<Database.SystemType, SystemInstanceConfig> _systemConfigs;

		[Token(Token = "0x40018CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly IMaterialInstanceProvider _materialProvider;

		[Token(Token = "0x40018CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly IAnatomyDatabase _anatomyDatabase;

		[Token(Token = "0x40018CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly IObjectManipulatorService _objectManipulatorService;

		[Token(Token = "0x40018CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly ISceneManager<IInteractiveAnatomyItemInstance> _sceneManager;

		[Token(Token = "0x40018D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private readonly Dictionary<string, AnatomyUberShaderAnimationHandler> _shaderHandlers;

		[Token(Token = "0x40018D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private readonly System.Collections.Generic.IReadOnlyDictionary<string, Color> _subPartColors;

		[Token(Token = "0x1400005B")]
		public event Action<IInteractiveAnatomyItemInstance> ObjectPicked
		{
			[Token(Token = "0x6001B5C")]
			[Address(RVA = "0x164D438", Offset = "0x164D438", VA = "0x164D438", Slot = "8")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001B5D")]
			[Address(RVA = "0x164D4E8", Offset = "0x164D4E8", VA = "0x164D4E8", Slot = "9")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400005C")]
		public event Action<IInteractiveAnatomyItemInstance> ObjectReturned
		{
			[Token(Token = "0x6001B5E")]
			[Address(RVA = "0x164D598", Offset = "0x164D598", VA = "0x164D598", Slot = "10")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001B5F")]
			[Address(RVA = "0x164D648", Offset = "0x164D648", VA = "0x164D648", Slot = "11")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400005D")]
		public event Action<IInteractiveAnatomyItemInstance> ObjectThrowCompleted
		{
			[Token(Token = "0x6001B60")]
			[Address(RVA = "0x164D6F8", Offset = "0x164D6F8", VA = "0x164D6F8", Slot = "12")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001B61")]
			[Address(RVA = "0x164D7A8", Offset = "0x164D7A8", VA = "0x164D7A8", Slot = "13")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6001B62")]
		[Address(RVA = "0x164D858", Offset = "0x164D858", VA = "0x164D858")]
		public VrAnatomyInstanceFactory(VrAnatomyInstanceFactorySettings settings, System.Collections.Generic.IReadOnlyDictionary<Database.SystemType, SystemInstanceConfig> systemConfigs, IMaterialInstanceProvider materialProvider, IAnatomyDatabase anatomyDatabase, ISceneManager<IInteractiveAnatomyItemInstance> sceneManager, System.Collections.Generic.IReadOnlyDictionary<string, Color> subPartColors)
		{
		}

		[Token(Token = "0x6001B63")]
		[Address(RVA = "0x164DA28", Offset = "0x164DA28", VA = "0x164DA28", Slot = "4")]
		public InteractiveAnatomyItemInstanceCollection CreateCollection(SystemGroup systemGroup, LocationType locationType, GameObject gameObject)
		{
			return null;
		}

		[Token(Token = "0x6001B64")]
		[Address(RVA = "0x164DD04", Offset = "0x164DD04", VA = "0x164DD04", Slot = "5")]
		public void CreateInstance(InteractiveAnatomyItemInstanceCollection collection, AnatomyItem anatomyItem, System.Collections.Generic.IReadOnlyDictionary<string, ItemPoseData> itemPoseDatas)
		{
		}

		[Token(Token = "0x6001B65")]
		[Address(RVA = "0x164EC88", Offset = "0x164EC88", VA = "0x164EC88", Slot = "6")]
		public void InitializeCollection(InteractiveAnatomyItemInstanceCollection collection, System.Collections.Generic.IReadOnlyDictionary<string, Mesh> meshes, ItemMaterialDatabase itemMaterialDatabase)
		{
		}

		[Token(Token = "0x6001B66")]
		[Address(RVA = "0x164FA80", Offset = "0x164FA80", VA = "0x164FA80", Slot = "7")]
		public void ReleaseCollection(InteractiveAnatomyItemInstanceCollection collection, bool releaseMeshes, bool releaseMaterials)
		{
		}
	}
	[Token(Token = "0x2000542")]
	public class VrMemoryManagementModule : IDisposable
	{
		[Token(Token = "0x40018DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly Func<DatabaseType> _currentDatabaseType;

		[Token(Token = "0x40018DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly IMemoryManagementModule _memoryManagementModule;

		[Token(Token = "0x40018DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly IDisposable _disposable;

		[Token(Token = "0x40018DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private DatabaseType _previousDatabaseType;

		[Token(Token = "0x6001B72")]
		[Address(RVA = "0x16504D4", Offset = "0x16504D4", VA = "0x16504D4")]
		public VrMemoryManagementModule(IObservable<DatabaseType> databaseTypeChanged, Func<DatabaseType> currentDatabaseType, IMemoryManagementModule memoryManagementModule)
		{
		}

		[Token(Token = "0x6001B73")]
		[Address(RVA = "0x165067C", Offset = "0x165067C", VA = "0x165067C")]
		private void OnDatabaseTypeChanged(DatabaseType value)
		{
		}

		[Token(Token = "0x6001B74")]
		[Address(RVA = "0x1650764", Offset = "0x1650764", VA = "0x1650764", Slot = "4")]
		public void Dispose()
		{
		}
	}
	[Token(Token = "0x2000543")]
	public class VrResetModule : IVrResetModule, IDisposable
	{
		[Token(Token = "0x40018E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly IHighlightModule<IInteractiveAnatomyItemInstance> _highlightModule;

		[Token(Token = "0x40018E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly IHideModule<IInteractiveAnatomyItemInstance> _hideModule;

		[Token(Token = "0x40018E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly IDisassembleModule<IInteractiveAnatomyItemInstance> _disassembleModule;

		[Token(Token = "0x40018E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly ISubPartLayerModule<IInteractiveAnatomyItemInstance> _subPartLayerModule;

		[Token(Token = "0x40018E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly ISceneManager<IInteractiveAnatomyItemInstance> _sceneManager;

		[Token(Token = "0x40018E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly IHighlightModule<AnimationObjectInstance> _animationHighlightModule;

		[Token(Token = "0x40018E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private readonly IHideModule<AnimationObjectInstance> _animationHideModule;

		[Token(Token = "0x40018E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private readonly IHighlightModule<Database.SystemType> _systemHighlightModule;

		[Token(Token = "0x40018E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private readonly IFadeModule<Database.SystemType> _systemFadeModule;

		[Token(Token = "0x40018E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private readonly IPickableEvents<IInteractiveAnatomyItemInstance> _pickableEvents;

		[Token(Token = "0x40018EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private readonly Action _onReturnAllItemsCompleted;

		[Token(Token = "0x6001B75")]
		[Address(RVA = "0x1650804", Offset = "0x1650804", VA = "0x1650804")]
		public VrResetModule(IHighlightModule<IInteractiveAnatomyItemInstance> highlightModule, IHideModule<IInteractiveAnatomyItemInstance> hideModule, IDisassembleModule<IInteractiveAnatomyItemInstance> disassembleModule, ISubPartLayerModule<IInteractiveAnatomyItemInstance> subPartLayerModule, ISceneManager<IInteractiveAnatomyItemInstance> sceneManager, IHighlightModule<AnimationObjectInstance> animationHighlightModule, IHideModule<AnimationObjectInstance> animationHideModule, IHighlightModule<Database.SystemType> systemHighlightModule, IFadeModule<Database.SystemType> systemFadeModule, IPickableEvents<IInteractiveAnatomyItemInstance> pickableEvents, Action onReturnAllItemsCompleted)
		{
		}

		[Token(Token = "0x6001B76")]
		[Address(RVA = "0x1650A00", Offset = "0x1650A00", VA = "0x1650A00", Slot = "4")]
		public void ReturnAllItems()
		{
		}

		[Token(Token = "0x6001B77")]
		[Address(RVA = "0x1650AC0", Offset = "0x1650AC0", VA = "0x1650AC0", Slot = "5")]
		public void ResetHighlightedItems()
		{
		}

		[Token(Token = "0x6001B78")]
		[Address(RVA = "0x1650B50", Offset = "0x1650B50", VA = "0x1650B50", Slot = "6")]
		public void ResetHiddenItems()
		{
		}

		[Token(Token = "0x6001B79")]
		[Address(RVA = "0x1650BE0", Offset = "0x1650BE0", VA = "0x1650BE0")]
		private void OnObjectReturned(IInteractiveAnatomyItemInstance value)
		{
		}

		[Token(Token = "0x6001B7A")]
		[Address(RVA = "0x1650C90", Offset = "0x1650C90", VA = "0x1650C90", Slot = "7")]
		public void Dispose()
		{
		}
	}
	[Token(Token = "0x2000544")]
	public class AnatomyModelLoader : MonoBehaviour
	{
		[StructLayout(3)]
		[Token(Token = "0x2000546")]
		[CompilerGenerated]
		private struct <Start>d__5 : IAsyncStateMachine
		{
			[Token(Token = "0x40018F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40018F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x40018F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public AnatomyModelLoader <>4__this;

			[Token(Token = "0x40018F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x40018F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private TaskAwaiter<IAnatomyModel<int>> <>u__2;

			[Token(Token = "0x40018F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private TaskAwaiter<bool> <>u__3;

			[Token(Token = "0x6001B86")]
			[Address(RVA = "0x165137C", Offset = "0x165137C", VA = "0x165137C", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001B87")]
			[Address(RVA = "0x1651C94", Offset = "0x1651C94", VA = "0x1651C94", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000547")]
		[CompilerGenerated]
		private struct <OnLoadAnatomyModelReceived>d__9 : IAsyncStateMachine
		{
			[Token(Token = "0x40018F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40018F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x40018FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public AnatomyModelLoader <>4__this;

			[Token(Token = "0x40018FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public IAnatomyModel<int> value;

			[Token(Token = "0x40018FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x6001B88")]
			[Address(RVA = "0x1651CA0", Offset = "0x1651CA0", VA = "0x1651CA0", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001B89")]
			[Address(RVA = "0x1651EBC", Offset = "0x1651EBC", VA = "0x1651EBC", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x2000548")]
		[CompilerGenerated]
		private sealed class <>c__DisplayClass10_0
		{
			[Token(Token = "0x40018FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public IAnatomyModuleProvider anatomyModuleProvider;

			[Token(Token = "0x40018FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public IModelLoaderModule<IAnatomyModel<IInteractiveAnatomyItemInstance>> anatomyModelLoader;

			[Token(Token = "0x6001B8A")]
			[Address(RVA = "0x1651EC8", Offset = "0x1651EC8", VA = "0x1651EC8")]
			public <>c__DisplayClass10_0()
			{
			}

			[Token(Token = "0x6001B8B")]
			[Address(RVA = "0x1651ED0", Offset = "0x1651ED0", VA = "0x1651ED0")]
			internal bool <LoadModel>b__0()
			{
				return default(bool);
			}

			[Token(Token = "0x6001B8C")]
			[Address(RVA = "0x1651F74", Offset = "0x1651F74", VA = "0x1651F74")]
			internal bool <LoadModel>b__1()
			{
				return default(bool);
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000549")]
		[CompilerGenerated]
		private struct <LoadModel>d__10 : IAsyncStateMachine
		{
			[Token(Token = "0x40018FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001900")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4001901")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public INetworkModuleProviderFactory networkModuleProviderFactory;

			[Token(Token = "0x4001902")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public CancellationToken cancellationToken;

			[Token(Token = "0x4001903")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private <>c__DisplayClass10_0 <>8__1;

			[Token(Token = "0x4001904")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public IAnatomyModel<int> value;

			[Token(Token = "0x4001905")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private IResolver<IInteractiveAnatomyItemInstance, int> <resolver>5__2;

			[Token(Token = "0x4001906")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x6001B8D")]
			[Address(RVA = "0x1652020", Offset = "0x1652020", VA = "0x1652020", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001B8E")]
			[Address(RVA = "0x16528CC", Offset = "0x16528CC", VA = "0x16528CC", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x40018EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private NetworkModuleProviderFactory _moduleProviderFactory;

		[Token(Token = "0x40018EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private NetworkAnatomyServer _networkAnatomyServer;

		[Token(Token = "0x40018ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AnatomyConfiguration _anatomyConfiguration;

		[Token(Token = "0x40018EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private CancellationTokenSource _cancellationTokenSource;

		[Token(Token = "0x40018EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly CancellationTokenSource _disposeCancellationTokenSource;

		[Token(Token = "0x6001B7B")]
		[Address(RVA = "0x1650D80", Offset = "0x1650D80", VA = "0x1650D80")]
		[AsyncStateMachine(typeof(<Start>d__5))]
		private void Start()
		{
		}

		[Token(Token = "0x6001B7C")]
		[Address(RVA = "0x1650E38", Offset = "0x1650E38", VA = "0x1650E38")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001B7D")]
		[Address(RVA = "0x1650F28", Offset = "0x1650F28", VA = "0x1650F28")]
		public IAnatomyModel<int> GetStartModel()
		{
			return null;
		}

		[Token(Token = "0x6001B7E")]
		[Address(RVA = "0x1650FE4", Offset = "0x1650FE4", VA = "0x1650FE4")]
		public IAnatomyModel<int> GetStartModel(bool locationsEnabled)
		{
			return null;
		}

		[Token(Token = "0x6001B7F")]
		[Address(RVA = "0x1651028", Offset = "0x1651028", VA = "0x1651028")]
		[AsyncStateMachine(typeof(<OnLoadAnatomyModelReceived>d__9))]
		private void OnLoadAnatomyModelReceived(IAnatomyModel<int> value)
		{
		}

		[Token(Token = "0x6001B80")]
		[Address(RVA = "0x16510FC", Offset = "0x16510FC", VA = "0x16510FC")]
		[AsyncStateMachine(typeof(<LoadModel>d__10))]
		private static Task LoadModel(INetworkModuleProviderFactory networkModuleProviderFactory, IAnatomyModel<int> value, CancellationToken cancellationToken)
		{
			return null;
		}

		[Token(Token = "0x6001B81")]
		[Address(RVA = "0x165121C", Offset = "0x165121C", VA = "0x165121C")]
		public AnatomyModelLoader()
		{
		}
	}
	[Token(Token = "0x200054A")]
	public class AnatomyModuleProvider : MonoBehaviour, IAnatomyModuleProvider
	{
		[StructLayout(3)]
		[Token(Token = "0x200054C")]
		[CompilerGenerated]
		private struct <Awake>d__22 : IAsyncStateMachine
		{
			[Token(Token = "0x4001922")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001923")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4001924")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public AnatomyModuleProvider <>4__this;

			[Token(Token = "0x4001925")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x6001B9F")]
			[Address(RVA = "0x165492C", Offset = "0x165492C", VA = "0x165492C", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001BA0")]
			[Address(RVA = "0x1654D50", Offset = "0x1654D50", VA = "0x1654D50", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200054D")]
		[CompilerGenerated]
		private struct <Initialize>d__23 : IAsyncStateMachine
		{
			[Token(Token = "0x4001926")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001927")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4001928")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AnatomyModuleProvider <>4__this;

			[Token(Token = "0x4001929")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public EducationLevel educationLevel;

			[Token(Token = "0x400192A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x6001BA1")]
			[Address(RVA = "0x1654D5C", Offset = "0x1654D5C", VA = "0x1654D5C", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001BA2")]
			[Address(RVA = "0x165528C", Offset = "0x165528C", VA = "0x165528C", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4001907")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private ModuleProviderBehaviour _singlePlayerModuleProvider;

		[Token(Token = "0x4001908")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AnatomyInstanceProviderSettings _anatomyInstanceProviderSettings;

		[Token(Token = "0x4001909")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private VrAnatomyInstanceFactorySettings _vrAnatomyInstanceFactorySettings;

		[Token(Token = "0x400190A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private SerializableAnatomyDatabaseFactory _databaseFactory;

		[Token(Token = "0x400190B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private SliceModuleSettings _sliceModuleSettings;

		[Token(Token = "0x400190C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private InteractiveSystemContainer _interactiveSystemContainer;

		[Token(Token = "0x400190D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private AntModeModuleSettings _antModeModuleSettings;

		[Token(Token = "0x400190E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private AnatomyConfiguration _anatomyConfiguration;

		[Token(Token = "0x400190F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private FunctionStackBehaviour _functionStackBehaviour;

		[Token(Token = "0x4001910")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private AudioHandler _audioHandler;

		[Token(Token = "0x4001911")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private SortModuleSettings _sortModuleSettings;

		[Token(Token = "0x4001912")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private AnimationModuleSettings _animationModuleSettings;

		[Token(Token = "0x4001913")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private SkinnedMeshRendererRaycastControllerSettings _skinnedMeshRendererRaycastControllerSettings;

		[Token(Token = "0x4001914")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private SerializableAnimationDatabase _serializableAnimationDatabase;

		[Token(Token = "0x4001915")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private AnatomyLocalizationSettingsScriptableObject _anatomyLocalizationSettings;

		[Token(Token = "0x4001916")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private SerializableSubPartColors _serializableSubPartColors;

		[Token(Token = "0x4001918")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private readonly CancellationTokenSource _disposeCancellationTokenSource;

		[Token(Token = "0x4001919")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private readonly List<IDisposable> _disposables;

		[Token(Token = "0x1700041D")]
		public bool Initialized
		{
			[Token(Token = "0x6001B8F")]
			[Address(RVA = "0x16528D8", Offset = "0x16528D8", VA = "0x16528D8", Slot = "5")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001B90")]
			[Address(RVA = "0x16528E0", Offset = "0x16528E0", VA = "0x16528E0")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6001B91")]
		[Address(RVA = "0x16528EC", Offset = "0x16528EC", VA = "0x16528EC")]
		[AsyncStateMachine(typeof(<Awake>d__22))]
		private void Awake()
		{
		}

		[Token(Token = "0x6001B92")]
		[Address(RVA = "0x16529A4", Offset = "0x16529A4", VA = "0x16529A4", Slot = "4")]
		[AsyncStateMachine(typeof(<Initialize>d__23))]
		public Task Initialize(EducationLevel educationLevel)
		{
			return null;
		}

		[Token(Token = "0x6001B93")]
		[Address(RVA = "0x1652A9C", Offset = "0x1652A9C", VA = "0x1652A9C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001B94")]
		[Address(RVA = "0x1652BB4", Offset = "0x1652BB4", VA = "0x1652BB4")]
		private void RegisterModules(ModuleProvider moduleProvider, IAssetInstanceProvider<ItemMeshDatabase> meshInstanceProvider, IAssetInstanceProvider<ItemMaterialDatabase> materialInstanceProvider, IAssetInstanceProvider<GameObject> animationAssetProvider)
		{
		}

		[Token(Token = "0x6001B95")]
		[Address(RVA = "0x16544C8", Offset = "0x16544C8", VA = "0x16544C8")]
		public AnatomyModuleProvider()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200054F")]
	public class MaxSystemCountDefinition
	{
		[Token(Token = "0x4001931")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int Locations;

		[Token(Token = "0x4001932")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int FullBody;

		[Token(Token = "0x6001BAB")]
		[Address(RVA = "0x16554E4", Offset = "0x16554E4", VA = "0x16554E4")]
		public MaxSystemCountDefinition()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000550")]
	public class MaxSystemCountConfiguration
	{
		[Token(Token = "0x4001933")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private MaxSystemCountDefinition _debug;

		[Token(Token = "0x4001934")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MaxSystemCountDefinition _quest1;

		[Token(Token = "0x4001935")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MaxSystemCountDefinition _quest2;

		[Token(Token = "0x4001936")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MaxSystemCountDefinition _picoGeneric;

		[Token(Token = "0x4001937")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MaxSystemCountDefinition _pico4;

		[Token(Token = "0x1700041E")]
		public MaxSystemCountDefinition Debug
		{
			[Token(Token = "0x6001BAC")]
			[Address(RVA = "0x16554EC", Offset = "0x16554EC", VA = "0x16554EC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700041F")]
		public MaxSystemCountDefinition Quest1
		{
			[Token(Token = "0x6001BAD")]
			[Address(RVA = "0x16554F4", Offset = "0x16554F4", VA = "0x16554F4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000420")]
		public MaxSystemCountDefinition Quest2
		{
			[Token(Token = "0x6001BAE")]
			[Address(RVA = "0x16554FC", Offset = "0x16554FC", VA = "0x16554FC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000421")]
		public MaxSystemCountDefinition PicoGeneric
		{
			[Token(Token = "0x6001BAF")]
			[Address(RVA = "0x1655504", Offset = "0x1655504", VA = "0x1655504")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000422")]
		public MaxSystemCountDefinition Pico4
		{
			[Token(Token = "0x6001BB0")]
			[Address(RVA = "0x165550C", Offset = "0x165550C", VA = "0x165550C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001BB1")]
		[Address(RVA = "0x1655514", Offset = "0x1655514", VA = "0x1655514")]
		public MaxSystemCountConfiguration()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000551")]
	public class MemoryManagementDefinition
	{
		[Token(Token = "0x4001938")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AnatomyAssetPreloader.PreloadMethod MeshesPreloadMethod;

		[Token(Token = "0x4001939")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public AnatomyAssetPreloader.PreloadMethod MaterialsPreloadMethod;

		[Token(Token = "0x400193A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool BakeMeshes;

		[Token(Token = "0x400193B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool ReleaseMeshes;

		[Token(Token = "0x400193C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		public bool ReleaseMaterials;

		[Token(Token = "0x400193D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
		public bool UnloadUnusedAssets;

		[Token(Token = "0x6001BB2")]
		[Address(RVA = "0x165551C", Offset = "0x165551C", VA = "0x165551C")]
		public MemoryManagementDefinition()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000552")]
	public class MemoryManagementConfiguration
	{
		[Token(Token = "0x400193E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private MemoryManagementDefinition _debug;

		[Token(Token = "0x400193F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MemoryManagementDefinition _quest1;

		[Token(Token = "0x4001940")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MemoryManagementDefinition _quest2;

		[Token(Token = "0x4001941")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MemoryManagementDefinition _picoGeneric;

		[Token(Token = "0x4001942")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MemoryManagementDefinition _pico4;

		[Token(Token = "0x4001943")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private MemoryManagementDefinition _fallback;

		[Token(Token = "0x17000423")]
		public MemoryManagementDefinition Debug
		{
			[Token(Token = "0x6001BB3")]
			[Address(RVA = "0x1655524", Offset = "0x1655524", VA = "0x1655524")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000424")]
		public MemoryManagementDefinition Quest1
		{
			[Token(Token = "0x6001BB4")]
			[Address(RVA = "0x165552C", Offset = "0x165552C", VA = "0x165552C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000425")]
		public MemoryManagementDefinition Quest2
		{
			[Token(Token = "0x6001BB5")]
			[Address(RVA = "0x1655534", Offset = "0x1655534", VA = "0x1655534")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000426")]
		public MemoryManagementDefinition Pico4
		{
			[Token(Token = "0x6001BB6")]
			[Address(RVA = "0x165553C", Offset = "0x165553C", VA = "0x165553C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000427")]
		public MemoryManagementDefinition PicoGeneric
		{
			[Token(Token = "0x6001BB7")]
			[Address(RVA = "0x1655544", Offset = "0x1655544", VA = "0x1655544")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000428")]
		public MemoryManagementDefinition Fallback
		{
			[Token(Token = "0x6001BB8")]
			[Address(RVA = "0x165554C", Offset = "0x165554C", VA = "0x165554C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001BB9")]
		[Address(RVA = "0x1655554", Offset = "0x1655554", VA = "0x1655554")]
		public MemoryManagementConfiguration()
		{
		}
	}
	[Token(Token = "0x2000553")]
	public static class MemoryManagementConfigurationModule
	{
		[Token(Token = "0x6001BBA")]
		[Address(RVA = "0x16543DC", Offset = "0x16543DC", VA = "0x16543DC")]
		public static MemoryManagementDefinition GetMemoryManagementDefinition(this MemoryManagementConfiguration memoryManagementConfiguration)
		{
			return null;
		}

		[Token(Token = "0x6001BBB")]
		[Address(RVA = "0x165555C", Offset = "0x165555C", VA = "0x165555C")]
		public static MemoryManagementDefinition GetMemoryManagementDefinition(this MemoryManagementConfiguration memoryManagementConfiguration, string systemHeadsetType)
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x2000554")]
	public class SerializableAnswer : IAnswer
	{
		[Token(Token = "0x4001944")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string ParticipantId;

		[Token(Token = "0x4001945")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public byte QuestionId;

		[Token(Token = "0x4001946")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public byte SelectedAnswers;

		[Token(Token = "0x4001947")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly bool[] _selectedAnswers;

		[Token(Token = "0x17000429")]
		private string Modules.IAnswer.ParticipantId
		{
			[Token(Token = "0x6001BBC")]
			[Address(RVA = "0x16566AC", Offset = "0x16566AC", VA = "0x16566AC", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700042A")]
		private byte Modules.IAnswer.QuestionId
		{
			[Token(Token = "0x6001BBD")]
			[Address(RVA = "0x16566B4", Offset = "0x16566B4", VA = "0x16566B4", Slot = "5")]
			get
			{
				return default(byte);
			}
		}

		[Token(Token = "0x1700042B")]
		private bool[] Modules.IAnswer.SelectedAnswers
		{
			[Token(Token = "0x6001BBE")]
			[Address(RVA = "0x16566BC", Offset = "0x16566BC", VA = "0x16566BC", Slot = "6")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001BBF")]
		[Address(RVA = "0x16567E4", Offset = "0x16567E4", VA = "0x16567E4")]
		public SerializableAnswer()
		{
		}
	}
	[Token(Token = "0x2000555")]
	public class SerializableAnswerEqualityComparer : IEqualityComparer<SerializableAnswer>
	{
		[Token(Token = "0x6001BC0")]
		[Address(RVA = "0x1656848", Offset = "0x1656848", VA = "0x1656848", Slot = "4")]
		public bool Equals(SerializableAnswer x, SerializableAnswer y)
		{
			return default(bool);
		}

		[Token(Token = "0x6001BC1")]
		[Address(RVA = "0x1656924", Offset = "0x1656924", VA = "0x1656924", Slot = "5")]
		public int GetHashCode(SerializableAnswer obj)
		{
			return default(int);
		}

		[Token(Token = "0x6001BC2")]
		[Address(RVA = "0x1656968", Offset = "0x1656968", VA = "0x1656968")]
		public SerializableAnswerEqualityComparer()
		{
		}
	}
	[Token(Token = "0x2000556")]
	public class NetworkQuizModule : NetworkBehaviour, IQuizModule
	{
		[StructLayout(3)]
		[Token(Token = "0x2000558")]
		[CompilerGenerated]
		private struct <SetActiveQuiz>d__13 : IAsyncStateMachine
		{
			[Token(Token = "0x4001950")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001951")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4001952")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public NetworkQuizModule <>4__this;

			[Token(Token = "0x4001953")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Quiz quiz;

			[Token(Token = "0x4001954")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public CancellationToken cancellationToken;

			[Token(Token = "0x4001955")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private TaskAwaiter<object> <>u__1;

			[Token(Token = "0x6001BFB")]
			[Address(RVA = "0x165AFB0", Offset = "0x165AFB0", VA = "0x165AFB0", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001BFC")]
			[Address(RVA = "0x165B250", Offset = "0x165B250", VA = "0x165B250", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000559")]
		[CompilerGenerated]
		private struct <BeginActiveQuiz>d__14 : IAsyncStateMachine
		{
			[Token(Token = "0x4001956")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001957")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4001958")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public NetworkQuizModule <>4__this;

			[Token(Token = "0x4001959")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public CancellationToken cancellationToken;

			[Token(Token = "0x400195A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TaskAwaiter<object> <>u__1;

			[Token(Token = "0x6001BFD")]
			[Address(RVA = "0x165B25C", Offset = "0x165B25C", VA = "0x165B25C", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001BFE")]
			[Address(RVA = "0x165B4EC", Offset = "0x165B4EC", VA = "0x165B4EC", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200055B")]
		[CompilerGenerated]
		private struct <SetAnswer>d__15 : IAsyncStateMachine
		{
			[Token(Token = "0x400195E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x400195F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4001960")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public NetworkQuizModule <>4__this;

			[Token(Token = "0x4001961")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public byte questionId;

			[Token(Token = "0x4001962")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public IReadOnlyList<bool> selectedAnswers;

			[Token(Token = "0x4001963")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public CancellationToken cancellationToken;

			[Token(Token = "0x4001964")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private TaskAwaiter<object> <>u__1;

			[Token(Token = "0x6001C01")]
			[Address(RVA = "0x165B588", Offset = "0x165B588", VA = "0x165B588", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001C02")]
			[Address(RVA = "0x165B830", Offset = "0x165B830", VA = "0x165B830", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200055C")]
		[CompilerGenerated]
		private struct <GetAnswersOfLocalParticipant>d__16 : IAsyncStateMachine
		{
			[Token(Token = "0x4001965")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001966")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder<IEnumerable<IAnswer>> <>t__builder;

			[Token(Token = "0x4001967")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public NetworkQuizModule <>4__this;

			[Token(Token = "0x4001968")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public CancellationToken cancellationToken;

			[Token(Token = "0x4001969")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TaskAwaiter<object> <>u__1;

			[Token(Token = "0x6001C03")]
			[Address(RVA = "0x165B83C", Offset = "0x165B83C", VA = "0x165B83C", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001C04")]
			[Address(RVA = "0x165BAE0", Offset = "0x165BAE0", VA = "0x165BAE0", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200055D")]
		[CompilerGenerated]
		private struct <GetAnswersOfAllParticipants>d__17 : IAsyncStateMachine
		{
			[Token(Token = "0x400196A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x400196B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder<IEnumerable<IAnswer>> <>t__builder;

			[Token(Token = "0x400196C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public NetworkQuizModule <>4__this;

			[Token(Token = "0x400196D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public CancellationToken cancellationToken;

			[Token(Token = "0x400196E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TaskAwaiter<object> <>u__1;

			[Token(Token = "0x6001C05")]
			[Address(RVA = "0x165BB38", Offset = "0x165BB38", VA = "0x165BB38", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001C06")]
			[Address(RVA = "0x165BDDC", Offset = "0x165BDDC", VA = "0x165BDDC", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200055F")]
		[CompilerGenerated]
		private struct <GetAnswersOfParticipant>d__18 : IAsyncStateMachine
		{
			[Token(Token = "0x4001971")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001972")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder<IEnumerable<IAnswer>> <>t__builder;

			[Token(Token = "0x4001973")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public NetworkQuizModule <>4__this;

			[Token(Token = "0x4001974")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string participantId;

			[Token(Token = "0x4001975")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public CancellationToken cancellationToken;

			[Token(Token = "0x4001976")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private TaskAwaiter<object> <>u__1;

			[Token(Token = "0x6001C09")]
			[Address(RVA = "0x165BE5C", Offset = "0x165BE5C", VA = "0x165BE5C", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001C0A")]
			[Address(RVA = "0x165C160", Offset = "0x165C160", VA = "0x165C160", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4001948")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private NetworkRequestHandler _networkRequestHandler;

		[Token(Token = "0x4001949")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private readonly CachedNetworkConnectionComponentResolver<AnatomyNetworkPlayerHandler> _networkPlayerResolver;

		[Token(Token = "0x400194A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private readonly HashSet<SerializableAnswer> _answers;

		[Token(Token = "0x400194B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private readonly Dictionary<string, double> _participantStartTimes;

		[Token(Token = "0x400194C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private double _activeQuizStartTime;

		[Token(Token = "0x1700042C")]
		public Quiz ActiveQuiz
		{
			[Token(Token = "0x6001BC3")]
			[Address(RVA = "0x1656970", Offset = "0x1656970", VA = "0x1656970", Slot = "16")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001BC4")]
			[Address(RVA = "0x1656978", Offset = "0x1656978", VA = "0x1656978")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700042D")]
		public double ActiveQuizDuration
		{
			[Token(Token = "0x6001BC5")]
			[Address(RVA = "0x1656A38", Offset = "0x1656A38", VA = "0x1656A38", Slot = "17")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x1700042E")]
		public bool QuizBegun
		{
			[Token(Token = "0x6001BC6")]
			[Address(RVA = "0x1656AF8", Offset = "0x1656AF8", VA = "0x1656AF8", Slot = "18")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700042F")]
		public Quiz Network<ActiveQuiz>k__BackingField
		{
			[Token(Token = "0x6001BE0")]
			[Address(RVA = "0x1658D48", Offset = "0x1658D48", VA = "0x1658D48")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001BE1")]
			[Address(RVA = "0x165697C", Offset = "0x165697C", VA = "0x165697C")]
			[param: In]
			set
			{
			}
		}

		[Token(Token = "0x6001BC7")]
		[Address(RVA = "0x1656B08", Offset = "0x1656B08", VA = "0x1656B08", Slot = "24")]
		[AsyncStateMachine(typeof(<SetActiveQuiz>d__13))]
		public Task SetActiveQuiz(Quiz quiz, CancellationToken cancellationToken)
		{
			return null;
		}

		[Token(Token = "0x6001BC8")]
		[Address(RVA = "0x1656C24", Offset = "0x1656C24", VA = "0x1656C24", Slot = "19")]
		[AsyncStateMachine(typeof(<BeginActiveQuiz>d__14))]
		public Task BeginActiveQuiz(CancellationToken cancellationToken)
		{
			return null;
		}

		[Token(Token = "0x6001BC9")]
		[Address(RVA = "0x1656D28", Offset = "0x1656D28", VA = "0x1656D28", Slot = "20")]
		[AsyncStateMachine(typeof(<SetAnswer>d__15))]
		public Task SetAnswer(byte questionId, IReadOnlyList<bool> selectedAnswers, CancellationToken cancellationToken)
		{
			return null;
		}

		[Token(Token = "0x6001BCA")]
		[Address(RVA = "0x1656E50", Offset = "0x1656E50", VA = "0x1656E50", Slot = "21")]
		[AsyncStateMachine(typeof(<GetAnswersOfLocalParticipant>d__16))]
		public Task<IEnumerable<IAnswer>> GetAnswersOfLocalParticipant(CancellationToken cancellationToken)
		{
			return null;
		}

		[Token(Token = "0x6001BCB")]
		[Address(RVA = "0x1656F7C", Offset = "0x1656F7C", VA = "0x1656F7C", Slot = "22")]
		[AsyncStateMachine(typeof(<GetAnswersOfAllParticipants>d__17))]
		public Task<IEnumerable<IAnswer>> GetAnswersOfAllParticipants(CancellationToken cancellationToken)
		{
			return null;
		}

		[Token(Token = "0x6001BCC")]
		[Address(RVA = "0x16570A8", Offset = "0x16570A8", VA = "0x16570A8", Slot = "23")]
		[AsyncStateMachine(typeof(<GetAnswersOfParticipant>d__18))]
		public Task<IEnumerable<IAnswer>> GetAnswersOfParticipant(string participantId, CancellationToken cancellationToken)
		{
			return null;
		}

		[Token(Token = "0x6001BCD")]
		[Address(RVA = "0x16571E4", Offset = "0x16571E4", VA = "0x16571E4")]
		public static byte BoolArrayToByte(IReadOnlyList<bool> array)
		{
			return default(byte);
		}

		[Token(Token = "0x6001BCE")]
		[Address(RVA = "0x1656724", Offset = "0x1656724", VA = "0x1656724")]
		public static void ByteToBoolArray(byte value, bool[] result)
		{
		}

		[Token(Token = "0x6001BCF")]
		[Address(RVA = "0x16573EC", Offset = "0x16573EC", VA = "0x16573EC")]
		[Server]
		private bool ServerHasAuthority(NetworkConnectionToClient sender)
		{
			return default(bool);
		}

		[Token(Token = "0x6001BD0")]
		[Address(RVA = "0x165754C", Offset = "0x165754C", VA = "0x165754C")]
		[Command(requiresAuthority = false)]
		private void CmdSetActiveQuiz(byte requestId, Quiz quiz, [Optional] NetworkConnectionToClient sender)
		{
		}

		[Token(Token = "0x6001BD1")]
		[Address(RVA = "0x1657874", Offset = "0x1657874", VA = "0x1657874")]
		[ClientRpc]
		private void RpcSetActiveQuiz(byte requestId, int connectionId, Quiz quiz)
		{
		}

		[Token(Token = "0x6001BD2")]
		[Address(RVA = "0x1657A94", Offset = "0x1657A94", VA = "0x1657A94")]
		[Command(requiresAuthority = false)]
		private void CmdSetAnswer(byte requestId, byte questionId, byte selectedAnswers, [Optional] NetworkConnectionToClient sender)
		{
		}

		[Token(Token = "0x6001BD3")]
		[Address(RVA = "0x1657CB8", Offset = "0x1657CB8", VA = "0x1657CB8")]
		[TargetRpc]
		private void TargetSetAnswer(NetworkConnection target, byte requestId, int senderConnectionId)
		{
		}

		[Token(Token = "0x6001BD4")]
		[Address(RVA = "0x1657ECC", Offset = "0x1657ECC", VA = "0x1657ECC")]
		[Command(requiresAuthority = false)]
		private void CmdGetAnswersOfLocalParticipant(byte requestId, [Optional] NetworkConnectionToClient sender)
		{
		}

		[Token(Token = "0x6001BD5")]
		[Address(RVA = "0x16580C0", Offset = "0x16580C0", VA = "0x16580C0")]
		[Command(requiresAuthority = false)]
		private void CmdGetAnswersOfAllParticipants(byte requestId, [Optional] NetworkConnectionToClient sender)
		{
		}

		[Token(Token = "0x6001BD6")]
		[Address(RVA = "0x16582B4", Offset = "0x16582B4", VA = "0x16582B4")]
		[Command(requiresAuthority = false)]
		private void CmdGetAnswersOfParticipant(byte requestId, string participantId, [Optional] NetworkConnectionToClient sender)
		{
		}

		[Token(Token = "0x6001BD7")]
		[Address(RVA = "0x16584C4", Offset = "0x16584C4", VA = "0x16584C4")]
		[TargetRpc]
		private void TargetGetAnswers(NetworkConnection target, byte requestId, int senderConnectionId, SerializableAnswer[] answers)
		{
		}

		[Token(Token = "0x6001BD8")]
		[Address(RVA = "0x16586F4", Offset = "0x16586F4", VA = "0x16586F4")]
		[Command(requiresAuthority = false)]
		private void CmdBeginActiveQuiz(byte requestId, [Optional] NetworkConnectionToClient sender)
		{
		}

		[Token(Token = "0x6001BD9")]
		[Address(RVA = "0x16588E8", Offset = "0x16588E8", VA = "0x16588E8")]
		[TargetRpc]
		private void TargetBeginActiveQuiz(NetworkConnection target, byte requestId, int senderConnectionId, double activeQuizStartTime)
		{
		}

		[Token(Token = "0x6001BDA")]
		[Address(RVA = "0x1658B18", Offset = "0x1658B18", VA = "0x1658B18")]
		public NetworkQuizModule()
		{
		}

		[Token(Token = "0x6001BDF")]
		[Address(RVA = "0x1658D44", Offset = "0x1658D44", VA = "0x1658D44")]
		private void MirrorProcessed()
		{
		}

		[Token(Token = "0x6001BE2")]
		[Address(RVA = "0x1658D50", Offset = "0x1658D50", VA = "0x1658D50")]
		protected void UserCode_CmdSetActiveQuiz__Byte__Quiz__NetworkConnectionToClient(byte requestId, Quiz quiz, NetworkConnectionToClient sender)
		{
		}

		[Token(Token = "0x6001BE3")]
		[Address(RVA = "0x1658E30", Offset = "0x1658E30", VA = "0x1658E30")]
		protected static void InvokeUserCode_CmdSetActiveQuiz__Byte__Quiz__NetworkConnectionToClient(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x6001BE4")]
		[Address(RVA = "0x1659138", Offset = "0x1659138", VA = "0x1659138")]
		protected void UserCode_RpcSetActiveQuiz__Byte__Int32__Quiz(byte requestId, int connectionId, Quiz quiz)
		{
		}

		[Token(Token = "0x6001BE5")]
		[Address(RVA = "0x16591DC", Offset = "0x16591DC", VA = "0x16591DC")]
		protected static void InvokeUserCode_RpcSetActiveQuiz__Byte__Int32__Quiz(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x6001BE6")]
		[Address(RVA = "0x165933C", Offset = "0x165933C", VA = "0x165933C")]
		protected void UserCode_CmdSetAnswer__Byte__Byte__Byte__NetworkConnectionToClient(byte requestId, byte questionId, byte selectedAnswers, NetworkConnectionToClient sender)
		{
		}

		[Token(Token = "0x6001BE7")]
		[Address(RVA = "0x16595D4", Offset = "0x16595D4", VA = "0x16595D4")]
		protected static void InvokeUserCode_CmdSetAnswer__Byte__Byte__Byte__NetworkConnectionToClient(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x6001BE8")]
		[Address(RVA = "0x1659778", Offset = "0x1659778", VA = "0x1659778")]
		protected void UserCode_TargetSetAnswer__NetworkConnection__Byte__Int32(NetworkConnection target, byte requestId, int senderConnectionId)
		{
		}

		[Token(Token = "0x6001BE9")]
		[Address(RVA = "0x1659794", Offset = "0x1659794", VA = "0x1659794")]
		protected static void InvokeUserCode_TargetSetAnswer__NetworkConnection__Byte__Int32(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x6001BEA")]
		[Address(RVA = "0x1659934", Offset = "0x1659934", VA = "0x1659934")]
		protected void UserCode_CmdGetAnswersOfLocalParticipant__Byte__NetworkConnectionToClient(byte requestId, NetworkConnectionToClient sender)
		{
		}

		[Token(Token = "0x6001BEB")]
		[Address(RVA = "0x1659AA4", Offset = "0x1659AA4", VA = "0x1659AA4")]
		protected static void InvokeUserCode_CmdGetAnswersOfLocalParticipant__Byte__NetworkConnectionToClient(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x6001BEC")]
		[Address(RVA = "0x1659C24", Offset = "0x1659C24", VA = "0x1659C24")]
		protected void UserCode_CmdGetAnswersOfAllParticipants__Byte__NetworkConnectionToClient(byte requestId, NetworkConnectionToClient sender)
		{
		}

		[Token(Token = "0x6001BED")]
		[Address(RVA = "0x1659CD4", Offset = "0x1659CD4", VA = "0x1659CD4")]
		protected static void InvokeUserCode_CmdGetAnswersOfAllParticipants__Byte__NetworkConnectionToClient(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x6001BEE")]
		[Address(RVA = "0x1659E54", Offset = "0x1659E54", VA = "0x1659E54")]
		protected void UserCode_CmdGetAnswersOfParticipant__Byte__String__NetworkConnectionToClient(byte requestId, string participantId, NetworkConnectionToClient sender)
		{
		}

		[Token(Token = "0x6001BEF")]
		[Address(RVA = "0x1659FD0", Offset = "0x1659FD0", VA = "0x1659FD0")]
		protected static void InvokeUserCode_CmdGetAnswersOfParticipant__Byte__String__NetworkConnectionToClient(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x6001BF0")]
		[Address(RVA = "0x165A160", Offset = "0x165A160", VA = "0x165A160")]
		protected void UserCode_TargetGetAnswers__NetworkConnection__Byte__Int32__SerializableAnswer[](NetworkConnection target, byte requestId, int senderConnectionId, SerializableAnswer[] answers)
		{
		}

		[Token(Token = "0x6001BF1")]
		[Address(RVA = "0x165A17C", Offset = "0x165A17C", VA = "0x165A17C")]
		protected static void InvokeUserCode_TargetGetAnswers__NetworkConnection__Byte__Int32__SerializableAnswer[](NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x6001BF2")]
		[Address(RVA = "0x165A32C", Offset = "0x165A32C", VA = "0x165A32C")]
		protected void UserCode_CmdBeginActiveQuiz__Byte__NetworkConnectionToClient(byte requestId, NetworkConnectionToClient sender)
		{
		}

		[Token(Token = "0x6001BF3")]
		[Address(RVA = "0x165A550", Offset = "0x165A550", VA = "0x165A550")]
		protected static void InvokeUserCode_CmdBeginActiveQuiz__Byte__NetworkConnectionToClient(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x6001BF4")]
		[Address(RVA = "0x165A6D0", Offset = "0x165A6D0", VA = "0x165A6D0")]
		protected void UserCode_TargetBeginActiveQuiz__NetworkConnection__Byte__Int32__Double(NetworkConnection target, byte requestId, int senderConnectionId, double activeQuizStartTime)
		{
		}

		[Token(Token = "0x6001BF5")]
		[Address(RVA = "0x165A75C", Offset = "0x165A75C", VA = "0x165A75C")]
		protected static void InvokeUserCode_TargetBeginActiveQuiz__NetworkConnection__Byte__Int32__Double(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x6001BF6")]
		[Address(RVA = "0x165A900", Offset = "0x165A900", VA = "0x165A900")]
		static NetworkQuizModule()
		{
		}

		[Token(Token = "0x6001BF7")]
		[Address(RVA = "0x165AE24", Offset = "0x165AE24", VA = "0x165AE24", Slot = "6")]
		public override bool SerializeSyncVars(NetworkWriter writer, bool forceAll)
		{
			return default(bool);
		}

		[Token(Token = "0x6001BF8")]
		[Address(RVA = "0x165AED0", Offset = "0x165AED0", VA = "0x165AED0", Slot = "7")]
		public override void DeserializeSyncVars(NetworkReader reader, bool initialState)
		{
		}
	}
	[Token(Token = "0x2000563")]
	public static class NetworkQuizSerializers
	{
		[Token(Token = "0x400197B")]
		private const byte TRUE = 1;

		[Token(Token = "0x400197C")]
		private const byte FALSE = 0;

		[Token(Token = "0x6001C12")]
		[Address(RVA = "0x165C2D0", Offset = "0x165C2D0", VA = "0x165C2D0")]
		public static void WriteAnswer(this NetworkWriter writer, Answer answer)
		{
		}

		[Token(Token = "0x6001C13")]
		[Address(RVA = "0x165C34C", Offset = "0x165C34C", VA = "0x165C34C")]
		public static void WriteQuestion(this NetworkWriter writer, Question question)
		{
		}

		[Token(Token = "0x6001C14")]
		[Address(RVA = "0x1657758", Offset = "0x1657758", VA = "0x1657758")]
		public static void WriteQuiz(this NetworkWriter writer, Quiz quiz)
		{
		}

		[Token(Token = "0x6001C15")]
		[Address(RVA = "0x165C3E4", Offset = "0x165C3E4", VA = "0x165C3E4")]
		public static Answer ReadAnswer(this NetworkReader reader)
		{
			return null;
		}

		[Token(Token = "0x6001C16")]
		[Address(RVA = "0x165C498", Offset = "0x165C498", VA = "0x165C498")]
		public static Question ReadQuestion(this NetworkReader reader)
		{
			return null;
		}

		[Token(Token = "0x6001C17")]
		[Address(RVA = "0x1658FBC", Offset = "0x1658FBC", VA = "0x1658FBC")]
		public static Quiz ReadQuiz(this NetworkReader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x2000564")]
	public class NetworkQuizModuleProvider : MonoBehaviour
	{
		[Token(Token = "0x400197D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private NetworkQuizModule _networkQuizModule;

		[Token(Token = "0x400197E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private ModuleProviderBehaviour _networkModuleProvider;

		[Token(Token = "0x6001C18")]
		[Address(RVA = "0x165C570", Offset = "0x165C570", VA = "0x165C570")]
		private void Start()
		{
		}

		[Token(Token = "0x6001C19")]
		[Address(RVA = "0x165C5CC", Offset = "0x165C5CC", VA = "0x165C5CC")]
		public NetworkQuizModuleProvider()
		{
		}
	}
	[Token(Token = "0x2000565")]
	public static class SceneManagerExtensions
	{
		[Token(Token = "0x6001C1A")]
		public static void ReturnAllItems<T>(this ISceneManager<T> sceneManager, float duration) where T : IPickable, IGrabable
		{
		}
	}
	[Token(Token = "0x2000566")]
	public class PresentationModule<T> : IPresentationModule<T>
	{
		[Token(Token = "0x17000430")]
		public T Object
		{
			[Token(Token = "0x6001C1B")]
			[CompilerGenerated]
			get
			{
				return (T)null;
			}
			[Token(Token = "0x6001C1C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6001C1D")]
		public void SetObject(T value)
		{
		}

		[Token(Token = "0x6001C1E")]
		public PresentationModule()
		{
		}
	}
	[Token(Token = "0x2000567")]
	public class NetworkPresentationModule<T> : IPresentationModule<T>
	{
		[Token(Token = "0x4001980")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IPresentationModule<T> _objectModule;

		[Token(Token = "0x4001981")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly Action<T> _cmdSetObject;

		[Token(Token = "0x17000431")]
		public T Object
		{
			[Token(Token = "0x6001C1F")]
			get
			{
				return (T)null;
			}
		}

		[Token(Token = "0x6001C20")]
		public NetworkPresentationModule(IPresentationModule<T> objectModule, Action<T> cmdSetObject)
		{
		}

		[Token(Token = "0x6001C21")]
		public void SetObject(T value)
		{
		}
	}
	[Token(Token = "0x2000568")]
	public class UiModuleProvider : MonoBehaviour
	{
		[Token(Token = "0x4001982")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private ModuleProviderBehaviour _singlePlayerModuleProvider;

		[Token(Token = "0x4001983")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private ModuleProviderBehaviour _networkModuleProvider;

		[Token(Token = "0x4001984")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private NetworkUiPresenter _networkUiPresenter;

		[Token(Token = "0x4001985")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private CompositeObjectResolver _compositeObjectResolver;

		[Token(Token = "0x4001986")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private IDisposable _disposable;

		[Token(Token = "0x6001C22")]
		[Address(RVA = "0x165C5D4", Offset = "0x165C5D4", VA = "0x165C5D4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001C23")]
		[Address(RVA = "0x165C930", Offset = "0x165C930", VA = "0x165C930")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001C24")]
		[Address(RVA = "0x165C9D8", Offset = "0x165C9D8", VA = "0x165C9D8")]
		public UiModuleProvider()
		{
		}
	}
}
namespace VR.Models
{
	[Serializable]
	[Token(Token = "0x200056B")]
	public struct SerializableSystem
	{
		[Token(Token = "0x400198B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Database.SystemType SystemType;

		[Token(Token = "0x400198C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public bool Faded;

		[Token(Token = "0x400198D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5")]
		public bool Highlighted;

		[Token(Token = "0x400198E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int Level;
	}
	[Serializable]
	[Token(Token = "0x200056C")]
	public struct AnatomyModel
	{
		[Token(Token = "0x400198F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int[] HiddenItems;

		[Token(Token = "0x4001990")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int[] HighlightedItems;

		[Token(Token = "0x4001991")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int[] DisassembledItems;

		[Token(Token = "0x4001992")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SerializableKeyValuePair<int, DisassembleState>[] DisassembledObjects;

		[Token(Token = "0x4001993")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SerializableKeyValuePair<int, int>[] ObjectLayers;

		[Token(Token = "0x4001994")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SerializableSystem[] ActiveSystems;

		[Token(Token = "0x4001995")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public DatabaseType DatabaseType;

		[Token(Token = "0x4001996")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public bool AntManMode;

		[Token(Token = "0x4001997")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
		public bool Slice;

		[Token(Token = "0x4001998")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x36")]
		public bool Rotation;

		[Token(Token = "0x4001999")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public SubpartType SubPartType;

		[Token(Token = "0x400199A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public LocationType SelectedLocation;

		[Token(Token = "0x400199B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float SystemContainerScale;

		[Token(Token = "0x400199C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Vector3 SystemContainerRotation;

		[Token(Token = "0x400199D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float SystemContainerVerticalOffset;

		[Token(Token = "0x400199E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public bool LocationsEnabled;

		[Token(Token = "0x400199F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public SerializablePoseData SlicePlanePose;

		[Token(Token = "0x40019A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public SerializableObjectPoseData[] AnatomySpherePoses;

		[Token(Token = "0x40019A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public SerializableObjectPoseData[] AnatomyItemPoses;

		[Token(Token = "0x40019A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public string ActiveAnimation;

		[Token(Token = "0x40019A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public string[] HighlightedAnimationObjects;

		[Token(Token = "0x40019A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public string[] HiddenAnimationObjects;

		[Token(Token = "0x40019A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public float AnimationTime;

		[Token(Token = "0x40019A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		public float AnimationSpeed;

		[Token(Token = "0x40019A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public EducationLevel EducationLevel;

		[Token(Token = "0x6001C2B")]
		[Address(RVA = "0x165CDA8", Offset = "0x165CDA8", VA = "0x165CDA8")]
		public AnatomyModel(IAnatomyModel<int> anatomyModel, EducationLevel educationLevel)
		{
		}

		[Token(Token = "0x6001C2C")]
		[Address(RVA = "0x165E0FC", Offset = "0x165E0FC", VA = "0x165E0FC")]
		public static AnatomyModel<int> GetAnatomyModel(AnatomyModel anatomyModel)
		{
			return null;
		}
	}
	[Token(Token = "0x200056F")]
	public static class AnatomyModelExtensions
	{
		[Token(Token = "0x6001C43")]
		[Address(RVA = "0x165FB34", Offset = "0x165FB34", VA = "0x165FB34")]
		public static IEnumerable<Database.SystemType> ActiveSystems(this IVrAnatomyModel model)
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x2000571")]
	public class InteractionModel
	{
		[Token(Token = "0x17000432")]
		public bool HideEnabled
		{
			[Token(Token = "0x6001C48")]
			[Address(RVA = "0x165FE98", Offset = "0x165FE98", VA = "0x165FE98")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001C49")]
			[Address(RVA = "0x165FEA0", Offset = "0x165FEA0", VA = "0x165FEA0")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000433")]
		public bool InteractionEnabled
		{
			[Token(Token = "0x6001C4A")]
			[Address(RVA = "0x165FEAC", Offset = "0x165FEAC", VA = "0x165FEAC")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001C4B")]
			[Address(RVA = "0x165FEB4", Offset = "0x165FEB4", VA = "0x165FEB4")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000434")]
		public bool HighlightEnabled
		{
			[Token(Token = "0x6001C4C")]
			[Address(RVA = "0x165FEC0", Offset = "0x165FEC0", VA = "0x165FEC0")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001C4D")]
			[Address(RVA = "0x165FEC8", Offset = "0x165FEC8", VA = "0x165FEC8")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6001C4E")]
		[Address(RVA = "0x165FED4", Offset = "0x165FED4", VA = "0x165FED4")]
		public InteractionModel()
		{
		}
	}
	[Token(Token = "0x2000572")]
	public interface IVrAnatomyModel
	{
		[Token(Token = "0x17000435")]
		LocationType ActiveLocation
		{
			[Token(Token = "0x6001C4F")]
			get;
		}

		[Token(Token = "0x17000436")]
		DatabaseType ActiveDatabaseType
		{
			[Token(Token = "0x6001C50")]
			get;
		}

		[Token(Token = "0x17000437")]
		System.Collections.Generic.IReadOnlyDictionary<Database.SystemType, AnatomySystemModel> AnatomySystemModels
		{
			[Token(Token = "0x6001C51")]
			get;
		}

		[Token(Token = "0x17000438")]
		bool AntModeEnabled
		{
			[Token(Token = "0x6001C52")]
			get;
		}

		[Token(Token = "0x17000439")]
		bool SliceEnabled
		{
			[Token(Token = "0x6001C53")]
			get;
		}
	}
	[Token(Token = "0x2000573")]
	public class ReactiveAnatomySystemModel : IDisposable
	{
		[Token(Token = "0x40019C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly CompositeDisposable _disposable;

		[Token(Token = "0x1700043A")]
		public IReadOnlyReactiveProperty<bool> Active
		{
			[Token(Token = "0x6001C54")]
			[Address(RVA = "0x165FEE4", Offset = "0x165FEE4", VA = "0x165FEE4")]
			[CompilerGenerated]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700043B")]
		public IReadOnlyReactiveProperty<int> CurrentStructureLevel
		{
			[Token(Token = "0x6001C55")]
			[Address(RVA = "0x165FEEC", Offset = "0x165FEEC", VA = "0x165FEEC")]
			[CompilerGenerated]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001C56")]
		[Address(RVA = "0x165FEF4", Offset = "0x165FEF4", VA = "0x165FEF4")]
		public ReactiveAnatomySystemModel(AnatomySystemModel anatomySystemModel)
		{
		}

		[Token(Token = "0x6001C57")]
		[Address(RVA = "0x16601F4", Offset = "0x16601F4", VA = "0x16601F4", Slot = "4")]
		public void Dispose()
		{
		}
	}
	[Token(Token = "0x2000575")]
	public class ReactiveAnatomyModel : IDisposable
	{
		[Token(Token = "0x40019C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly CompositeDisposable _disposable;

		[Token(Token = "0x1700043C")]
		public IReadOnlyReactiveProperty<bool> SliceEnabled
		{
			[Token(Token = "0x6001C5C")]
			[Address(RVA = "0x16602B8", Offset = "0x16602B8", VA = "0x16602B8")]
			[CompilerGenerated]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700043D")]
		public IReadOnlyReactiveProperty<DatabaseType> ActiveDatabaseType
		{
			[Token(Token = "0x6001C5D")]
			[Address(RVA = "0x16602C0", Offset = "0x16602C0", VA = "0x16602C0")]
			[CompilerGenerated]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700043E")]
		public IReadOnlyReactiveProperty<bool> AntModeEnabled
		{
			[Token(Token = "0x6001C5E")]
			[Address(RVA = "0x16602C8", Offset = "0x16602C8", VA = "0x16602C8")]
			[CompilerGenerated]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700043F")]
		public IReadOnlyReactiveProperty<LocationType> ActiveLocation
		{
			[Token(Token = "0x6001C5F")]
			[Address(RVA = "0x16602D0", Offset = "0x16602D0", VA = "0x16602D0")]
			[CompilerGenerated]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000440")]
		public System.Collections.Generic.IReadOnlyDictionary<Database.SystemType, ReactiveAnatomySystemModel> AnatomySystemModels
		{
			[Token(Token = "0x6001C60")]
			[Address(RVA = "0x16602D8", Offset = "0x16602D8", VA = "0x16602D8")]
			[CompilerGenerated]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001C61")]
		[Address(RVA = "0x16602E0", Offset = "0x16602E0", VA = "0x16602E0")]
		public ReactiveAnatomyModel(IVrAnatomyModel vrAnatomyModel)
		{
		}

		[Token(Token = "0x6001C62")]
		[Address(RVA = "0x1660984", Offset = "0x1660984", VA = "0x1660984", Slot = "4")]
		public void Dispose()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000577")]
	public struct SerializablePoseData : IPoseData
	{
		[Token(Token = "0x40019D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 Position;

		[Token(Token = "0x40019D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Quaternion Rotation;

		[Token(Token = "0x40019D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 Scale;

		[Token(Token = "0x17000441")]
		private Vector3 VR.Modules.IPoseData.Position
		{
			[Token(Token = "0x6001C6B")]
			[Address(RVA = "0x1660D64", Offset = "0x1660D64", VA = "0x1660D64", Slot = "4")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000442")]
		private Quaternion VR.Modules.IPoseData.Rotation
		{
			[Token(Token = "0x6001C6C")]
			[Address(RVA = "0x1660D70", Offset = "0x1660D70", VA = "0x1660D70", Slot = "5")]
			get
			{
				return default(Quaternion);
			}
		}

		[Token(Token = "0x17000443")]
		private Vector3 VR.Modules.IPoseData.Scale
		{
			[Token(Token = "0x6001C6D")]
			[Address(RVA = "0x1660D7C", Offset = "0x1660D7C", VA = "0x1660D7C", Slot = "6")]
			get
			{
				return default(Vector3);
			}
		}
	}
	[Serializable]
	[Token(Token = "0x2000578")]
	public struct SerializableObjectPoseData
	{
		[Token(Token = "0x40019D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int Id;

		[Token(Token = "0x40019D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public SerializablePoseData SerializablePoseData;
	}
	[Serializable]
	[Token(Token = "0x2000579")]
	public struct SerializableKeyValuePair<TKey, TValue>
	{
		[Token(Token = "0x40019DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public TKey Key;

		[Token(Token = "0x40019DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public TValue Value;
	}
	[Serializable]
	[Token(Token = "0x200057A")]
	public class SerializableAnatomyModel : IAnatomyModel<int>
	{
		[Token(Token = "0x40019DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private int[] _hiddenObjects;

		[Token(Token = "0x40019DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private int[] _highlightedObjects;

		[Token(Token = "0x40019DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private SerializableKeyValuePair<int, DisassembleState>[] _disassembledObjects;

		[Token(Token = "0x40019DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private SerializableKeyValuePair<int, int>[] _layeredObjects;

		[Token(Token = "0x40019E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Database.SystemType[] _highlightedSystems;

		[Token(Token = "0x40019E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Database.SystemType[] _fadedSystems;

		[Token(Token = "0x40019E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private DatabaseType _activeDatabaseType;

		[Token(Token = "0x40019E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private LocationType _activeLocationType;

		[Token(Token = "0x40019E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Database.SystemType[] _activeSystems;

		[Token(Token = "0x40019E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private SerializableKeyValuePair<Database.SystemType, int>[] _systemStructureLevels;

		[Token(Token = "0x40019E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private SubpartType _activeSubpartType;

		[Token(Token = "0x40019E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[SerializeField]
		private bool _antModeEnabled;

		[Token(Token = "0x40019E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
		[SerializeField]
		private bool _sliceEnabled;

		[Token(Token = "0x40019E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5E")]
		[SerializeField]
		private bool _rotation;

		[Token(Token = "0x40019EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private float _systemContainerScale;

		[Token(Token = "0x40019EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[SerializeField]
		private Vector3 _systemContainerRotation;

		[Token(Token = "0x40019EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private float _systemContainerVerticalOffset;

		[Token(Token = "0x40019ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private string _activeAnimation;

		[Token(Token = "0x40019EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private bool _locationsEnabled;

		[Token(Token = "0x40019EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[SerializeField]
		private SerializablePoseData _slicePlanePose;

		[Token(Token = "0x40019F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private SerializableObjectPoseData[] _anatomySpherePoses;

		[Token(Token = "0x40019F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private SerializableObjectPoseData[] _anatomyItemPoses;

		[Token(Token = "0x40019F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private string[] _highlightedAnimationObjects;

		[Token(Token = "0x40019F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private string[] _hiddenAnimationObjects;

		[Token(Token = "0x40019F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private float _animationTime;

		[Token(Token = "0x40019F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		[SerializeField]
		private float _animationSpeed;

		[Token(Token = "0x17000444")]
		public IEnumerable<int> HiddenObjects
		{
			[Token(Token = "0x6001C6E")]
			[Address(RVA = "0x1660D88", Offset = "0x1660D88", VA = "0x1660D88", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000445")]
		public IEnumerable<int> HighlightedObjects
		{
			[Token(Token = "0x6001C6F")]
			[Address(RVA = "0x1660D90", Offset = "0x1660D90", VA = "0x1660D90", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000446")]
		public IEnumerable<KeyValuePair<int, DisassembleState>> DisassembledObjects
		{
			[Token(Token = "0x6001C70")]
			[Address(RVA = "0x1660D98", Offset = "0x1660D98", VA = "0x1660D98", Slot = "6")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000447")]
		public IEnumerable<KeyValuePair<int, int>> ObjectLayers
		{
			[Token(Token = "0x6001C71")]
			[Address(RVA = "0x1660E9C", Offset = "0x1660E9C", VA = "0x1660E9C", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000448")]
		public IEnumerable<Database.SystemType> HighlightedSystems
		{
			[Token(Token = "0x6001C72")]
			[Address(RVA = "0x1660FA0", Offset = "0x1660FA0", VA = "0x1660FA0", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000449")]
		public IEnumerable<Database.SystemType> FadedSystems
		{
			[Token(Token = "0x6001C73")]
			[Address(RVA = "0x1660FA8", Offset = "0x1660FA8", VA = "0x1660FA8", Slot = "9")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700044A")]
		public DatabaseType ActiveDatabaseType
		{
			[Token(Token = "0x6001C74")]
			[Address(RVA = "0x1660FB0", Offset = "0x1660FB0", VA = "0x1660FB0", Slot = "10")]
			get
			{
				return default(DatabaseType);
			}
		}

		[Token(Token = "0x1700044B")]
		public LocationType ActiveLocationType
		{
			[Token(Token = "0x6001C75")]
			[Address(RVA = "0x1660FB8", Offset = "0x1660FB8", VA = "0x1660FB8", Slot = "11")]
			get
			{
				return default(LocationType);
			}
		}

		[Token(Token = "0x1700044C")]
		public IEnumerable<Database.SystemType> ActiveSystems
		{
			[Token(Token = "0x6001C76")]
			[Address(RVA = "0x1660FC0", Offset = "0x1660FC0", VA = "0x1660FC0", Slot = "12")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700044D")]
		public IEnumerable<KeyValuePair<Database.SystemType, int>> SystemStructureLevels
		{
			[Token(Token = "0x6001C77")]
			[Address(RVA = "0x1660FC8", Offset = "0x1660FC8", VA = "0x1660FC8", Slot = "13")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700044E")]
		public SubpartType ActiveSubpartType
		{
			[Token(Token = "0x6001C78")]
			[Address(RVA = "0x16610CC", Offset = "0x16610CC", VA = "0x16610CC", Slot = "14")]
			get
			{
				return default(SubpartType);
			}
		}

		[Token(Token = "0x1700044F")]
		public bool AntModeEnabled
		{
			[Token(Token = "0x6001C79")]
			[Address(RVA = "0x16610D4", Offset = "0x16610D4", VA = "0x16610D4", Slot = "15")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000450")]
		public bool SliceEnabled
		{
			[Token(Token = "0x6001C7A")]
			[Address(RVA = "0x16610DC", Offset = "0x16610DC", VA = "0x16610DC", Slot = "16")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000451")]
		public bool Rotation
		{
			[Token(Token = "0x6001C7B")]
			[Address(RVA = "0x16610E4", Offset = "0x16610E4", VA = "0x16610E4", Slot = "17")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000452")]
		public float SystemContainerScale
		{
			[Token(Token = "0x6001C7C")]
			[Address(RVA = "0x16610EC", Offset = "0x16610EC", VA = "0x16610EC", Slot = "18")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000453")]
		public Vector3 SystemContainerRotation
		{
			[Token(Token = "0x6001C7D")]
			[Address(RVA = "0x16610F4", Offset = "0x16610F4", VA = "0x16610F4", Slot = "20")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000454")]
		public float SystemContainerVerticalOffset
		{
			[Token(Token = "0x6001C7E")]
			[Address(RVA = "0x1661100", Offset = "0x1661100", VA = "0x1661100", Slot = "19")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000455")]
		public string ActiveAnimation
		{
			[Token(Token = "0x6001C7F")]
			[Address(RVA = "0x1661108", Offset = "0x1661108", VA = "0x1661108", Slot = "21")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000456")]
		public bool LocationsEnabled
		{
			[Token(Token = "0x6001C80")]
			[Address(RVA = "0x1661110", Offset = "0x1661110", VA = "0x1661110", Slot = "22")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000457")]
		public IPoseData SlicePlanePose
		{
			[Token(Token = "0x6001C81")]
			[Address(RVA = "0x1661118", Offset = "0x1661118", VA = "0x1661118", Slot = "23")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000458")]
		public IEnumerable<KeyValuePair<int, IPoseData>> AnatomyItemPoses
		{
			[Token(Token = "0x6001C82")]
			[Address(RVA = "0x1661180", Offset = "0x1661180", VA = "0x1661180", Slot = "24")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000459")]
		public IEnumerable<KeyValuePair<int, IPoseData>> AnatomySpherePoses
		{
			[Token(Token = "0x6001C83")]
			[Address(RVA = "0x1661284", Offset = "0x1661284", VA = "0x1661284", Slot = "25")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700045A")]
		public int MaxSystemCount
		{
			[Token(Token = "0x6001C84")]
			[Address(RVA = "0x1661388", Offset = "0x1661388", VA = "0x1661388", Slot = "26")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001C85")]
			[Address(RVA = "0x1661390", Offset = "0x1661390", VA = "0x1661390")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700045B")]
		public IEnumerable<string> HighlightedAnimationObjects
		{
			[Token(Token = "0x6001C86")]
			[Address(RVA = "0x1661398", Offset = "0x1661398", VA = "0x1661398", Slot = "27")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700045C")]
		public IEnumerable<string> HiddenAnimationObjects
		{
			[Token(Token = "0x6001C87")]
			[Address(RVA = "0x16613A0", Offset = "0x16613A0", VA = "0x16613A0", Slot = "28")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700045D")]
		public float AnimationTime
		{
			[Token(Token = "0x6001C88")]
			[Address(RVA = "0x16613A8", Offset = "0x16613A8", VA = "0x16613A8", Slot = "29")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700045E")]
		public float AnimationSpeed
		{
			[Token(Token = "0x6001C89")]
			[Address(RVA = "0x16613B0", Offset = "0x16613B0", VA = "0x16613B0", Slot = "30")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001C8A")]
		[Address(RVA = "0x16613B8", Offset = "0x16613B8", VA = "0x16613B8")]
		public SerializableAnatomyModel()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200057C")]
	public class AnatomySystemModel
	{
		[Token(Token = "0x40019FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly Database.SystemType SystemType;

		[Token(Token = "0x1700045F")]
		public bool Active
		{
			[Token(Token = "0x6001C93")]
			[Address(RVA = "0x1661708", Offset = "0x1661708", VA = "0x1661708")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001C94")]
			[Address(RVA = "0x1661710", Offset = "0x1661710", VA = "0x1661710")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000460")]
		public int CurrentStructureLevel
		{
			[Token(Token = "0x6001C95")]
			[Address(RVA = "0x166171C", Offset = "0x166171C", VA = "0x166171C")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001C96")]
			[Address(RVA = "0x1661724", Offset = "0x1661724", VA = "0x1661724")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6001C92")]
		[Address(RVA = "0x16616E0", Offset = "0x16616E0", VA = "0x16616E0")]
		public AnatomySystemModel(Database.SystemType systemType)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200057D")]
	public class VrAnatomyModel : IVrAnatomyModel
	{
		[Token(Token = "0x17000461")]
		public SubpartType ActiveSubpartType
		{
			[Token(Token = "0x6001C97")]
			[Address(RVA = "0x166172C", Offset = "0x166172C", VA = "0x166172C")]
			[CompilerGenerated]
			get
			{
				return default(SubpartType);
			}
			[Token(Token = "0x6001C98")]
			[Address(RVA = "0x1661734", Offset = "0x1661734", VA = "0x1661734")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000462")]
		public LocationType ActiveLocation
		{
			[Token(Token = "0x6001C99")]
			[Address(RVA = "0x166173C", Offset = "0x166173C", VA = "0x166173C", Slot = "4")]
			[CompilerGenerated]
			get
			{
				return default(LocationType);
			}
			[Token(Token = "0x6001C9A")]
			[Address(RVA = "0x1661744", Offset = "0x1661744", VA = "0x1661744")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000463")]
		public DatabaseType ActiveDatabaseType
		{
			[Token(Token = "0x6001C9B")]
			[Address(RVA = "0x166174C", Offset = "0x166174C", VA = "0x166174C", Slot = "5")]
			[CompilerGenerated]
			get
			{
				return default(DatabaseType);
			}
			[Token(Token = "0x6001C9C")]
			[Address(RVA = "0x1661754", Offset = "0x1661754", VA = "0x1661754")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000464")]
		public System.Collections.Generic.IReadOnlyDictionary<Database.SystemType, AnatomySystemModel> AnatomySystemModels
		{
			[Token(Token = "0x6001C9D")]
			[Address(RVA = "0x166175C", Offset = "0x166175C", VA = "0x166175C", Slot = "6")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001C9E")]
			[Address(RVA = "0x1661764", Offset = "0x1661764", VA = "0x1661764")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000465")]
		public bool AntModeEnabled
		{
			[Token(Token = "0x6001C9F")]
			[Address(RVA = "0x166176C", Offset = "0x166176C", VA = "0x166176C", Slot = "7")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001CA0")]
			[Address(RVA = "0x1661774", Offset = "0x1661774", VA = "0x1661774")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000466")]
		public bool SliceEnabled
		{
			[Token(Token = "0x6001CA1")]
			[Address(RVA = "0x1661780", Offset = "0x1661780", VA = "0x1661780", Slot = "8")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001CA2")]
			[Address(RVA = "0x1661788", Offset = "0x1661788", VA = "0x1661788")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6001CA3")]
		[Address(RVA = "0x1661794", Offset = "0x1661794", VA = "0x1661794")]
		public VrAnatomyModel()
		{
		}
	}
	[Token(Token = "0x200057E")]
	public class InteractionModelBehaviour : MonoBehaviour
	{
		[Token(Token = "0x4001A06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private InteractionModel _interactionModel;

		[Token(Token = "0x17000467")]
		public InteractionModel InteractionModel
		{
			[Token(Token = "0x6001CA4")]
			[Address(RVA = "0x16617B0", Offset = "0x16617B0", VA = "0x16617B0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001CA5")]
		[Address(RVA = "0x16617B8", Offset = "0x16617B8", VA = "0x16617B8")]
		public InteractionModelBehaviour()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200057F")]
	public class PlayerModel
	{
		[Token(Token = "0x4001A07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 CameraPosition;

		[Token(Token = "0x4001A08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Quaternion CameraRotation;

		[Token(Token = "0x6001CA6")]
		[Address(RVA = "0x16617C0", Offset = "0x16617C0", VA = "0x16617C0")]
		public PlayerModel()
		{
		}
	}
}
namespace VR.FuncCommands
{
	[Token(Token = "0x2000580")]
	public class ChangeLayerFuncCommand : IFuncCommand
	{
		[Token(Token = "0x4001A09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly int _changeToLvl;

		[Token(Token = "0x4001A0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly INetworkModuleProviderFactory _moduleProviderFactory;

		[Token(Token = "0x4001A0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly int _changeFromLvl;

		[Token(Token = "0x4001A0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private readonly Database.SystemType _changeSystem;

		[Token(Token = "0x6001CA7")]
		[Address(RVA = "0x16617C8", Offset = "0x16617C8", VA = "0x16617C8")]
		public ChangeLayerFuncCommand(Database.SystemType systemType, int fromLevel, int toLevel, INetworkModuleProviderFactory moduleProviderFactory)
		{
		}

		[Token(Token = "0x6001CA8")]
		[Address(RVA = "0x166181C", Offset = "0x166181C", VA = "0x166181C", Slot = "4")]
		public bool Execute(bool useAnimation)
		{
			return default(bool);
		}

		[Token(Token = "0x6001CA9")]
		[Address(RVA = "0x16619E4", Offset = "0x16619E4", VA = "0x16619E4", Slot = "5")]
		public bool UnExecute(bool useAnimation)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000581")]
	public class DrawingCreateFuncCommand : IFuncCommand
	{
		[StructLayout(3)]
		[Token(Token = "0x2000582")]
		[CompilerGenerated]
		private struct <Execute>d__5 : IAsyncStateMachine
		{
			[Token(Token = "0x4001A10")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001A11")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4001A12")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public DrawingCreateFuncCommand <>4__this;

			[Token(Token = "0x4001A13")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TaskAwaiter<IDrawingObjectInstance> <>u__1;

			[Token(Token = "0x6001CAF")]
			[Address(RVA = "0x1661DA0", Offset = "0x1661DA0", VA = "0x1661DA0", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001CB0")]
			[Address(RVA = "0x16620F0", Offset = "0x16620F0", VA = "0x16620F0", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000583")]
		[CompilerGenerated]
		private struct <UnExecute>d__7 : IAsyncStateMachine
		{
			[Token(Token = "0x4001A14")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001A15")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4001A16")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public DrawingCreateFuncCommand <>4__this;

			[Token(Token = "0x4001A17")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x6001CB1")]
			[Address(RVA = "0x16620FC", Offset = "0x16620FC", VA = "0x16620FC", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001CB2")]
			[Address(RVA = "0x1662410", Offset = "0x1662410", VA = "0x1662410", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4001A0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly IDrawingObjectData _value;

		[Token(Token = "0x4001A0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly INetworkModuleProviderFactory _moduleProviderFactory;

		[Token(Token = "0x4001A0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly IDictionary<IDrawingObjectData, IDrawingObjectInstance> _drawingFunctionStackDictionary;

		[Token(Token = "0x6001CAA")]
		[Address(RVA = "0x1661BA8", Offset = "0x1661BA8", VA = "0x1661BA8")]
		public DrawingCreateFuncCommand(IDrawingObjectData value, INetworkModuleProviderFactory moduleProviderFactory, IDictionary<IDrawingObjectData, IDrawingObjectInstance> drawingFunctionStackDictionary)
		{
		}

		[Token(Token = "0x6001CAB")]
		[Address(RVA = "0x1661C08", Offset = "0x1661C08", VA = "0x1661C08", Slot = "4")]
		public bool Execute(bool useAnimation)
		{
			return default(bool);
		}

		[Token(Token = "0x6001CAC")]
		[Address(RVA = "0x1661C1C", Offset = "0x1661C1C", VA = "0x1661C1C")]
		[AsyncStateMachine(typeof(<Execute>d__5))]
		private void Execute()
		{
		}

		[Token(Token = "0x6001CAD")]
		[Address(RVA = "0x1661CD4", Offset = "0x1661CD4", VA = "0x1661CD4", Slot = "5")]
		public bool UnExecute(bool useAnimation)
		{
			return default(bool);
		}

		[Token(Token = "0x6001CAE")]
		[Address(RVA = "0x1661CE8", Offset = "0x1661CE8", VA = "0x1661CE8")]
		[AsyncStateMachine(typeof(<UnExecute>d__7))]
		private void UnExecute()
		{
		}
	}
	[Token(Token = "0x2000584")]
	public class DrawingDestroyFuncCommand : IFuncCommand
	{
		[StructLayout(3)]
		[Token(Token = "0x2000585")]
		[CompilerGenerated]
		private struct <Execute>d__6 : IAsyncStateMachine
		{
			[Token(Token = "0x4001A1C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001A1D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4001A1E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public DrawingDestroyFuncCommand <>4__this;

			[Token(Token = "0x4001A1F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x6001CB8")]
			[Address(RVA = "0x16626B0", Offset = "0x16626B0", VA = "0x16626B0", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001CB9")]
			[Address(RVA = "0x1662AB4", Offset = "0x1662AB4", VA = "0x1662AB4", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000586")]
		[CompilerGenerated]
		private struct <UnExecute>d__8 : IAsyncStateMachine
		{
			[Token(Token = "0x4001A20")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001A21")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4001A22")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public DrawingDestroyFuncCommand <>4__this;

			[Token(Token = "0x4001A23")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TaskAwaiter<IDrawingObjectInstance> <>u__1;

			[Token(Token = "0x6001CBA")]
			[Address(RVA = "0x1662AC0", Offset = "0x1662AC0", VA = "0x1662AC0", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001CBB")]
			[Address(RVA = "0x1662F00", Offset = "0x1662F00", VA = "0x1662F00", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4001A18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly IDrawingObjectInstance _value;

		[Token(Token = "0x4001A19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly IDrawingObjectData _data;

		[Token(Token = "0x4001A1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly INetworkModuleProviderFactory _moduleProviderFactory;

		[Token(Token = "0x4001A1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly IDictionary<IDrawingObjectData, IDrawingObjectInstance> _drawingFunctionStackDictionary;

		[Token(Token = "0x6001CB3")]
		[Address(RVA = "0x166241C", Offset = "0x166241C", VA = "0x166241C")]
		public DrawingDestroyFuncCommand(IDrawingObjectInstance value, INetworkModuleProviderFactory moduleProviderFactory, IDictionary<IDrawingObjectData, IDrawingObjectInstance> drawingFunctionStackDictionary)
		{
		}

		[Token(Token = "0x6001CB4")]
		[Address(RVA = "0x1662518", Offset = "0x1662518", VA = "0x1662518", Slot = "4")]
		public bool Execute(bool useAnimation)
		{
			return default(bool);
		}

		[Token(Token = "0x6001CB5")]
		[Address(RVA = "0x166252C", Offset = "0x166252C", VA = "0x166252C")]
		[AsyncStateMachine(typeof(<Execute>d__6))]
		private void Execute()
		{
		}

		[Token(Token = "0x6001CB6")]
		[Address(RVA = "0x16625E4", Offset = "0x16625E4", VA = "0x16625E4", Slot = "5")]
		public bool UnExecute(bool useAnimation)
		{
			return default(bool);
		}

		[Token(Token = "0x6001CB7")]
		[Address(RVA = "0x16625F8", Offset = "0x16625F8", VA = "0x16625F8")]
		[AsyncStateMachine(typeof(<UnExecute>d__8))]
		private void UnExecute()
		{
		}
	}
	[Token(Token = "0x2000587")]
	public class PickItemFuncCommand<T> : IFuncCommand where T : IGrabable
	{
		[Token(Token = "0x4001A24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public readonly T Item;

		[Token(Token = "0x4001A25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly ISceneManager<T> _sceneManager;

		[Token(Token = "0x4001A26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly Action<T, bool> _returnItem;

		[Token(Token = "0x4001A27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly Action<T, Vector3, Quaternion, Vector3, bool> _moveItem;

		[Token(Token = "0x4001A28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Vector3? _position;

		[Token(Token = "0x4001A29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Quaternion? _rotation;

		[Token(Token = "0x4001A2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Vector3? _scale;

		[Token(Token = "0x6001CBC")]
		public PickItemFuncCommand(T item, ISceneManager<T> sceneManager, Action<T, bool> returnItem, Action<T, Vector3, Quaternion, Vector3, bool> moveItem)
		{
		}

		[Token(Token = "0x6001CBD")]
		public bool Execute(bool useAnimation)
		{
			return default(bool);
		}

		[Token(Token = "0x6001CBE")]
		public bool UnExecute(bool useAnimation)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000588")]
	public class SetHiddenFuncCommand<T> : IFuncCommand where T : IHideable
	{
		[Token(Token = "0x4001A2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly T _item;

		[Token(Token = "0x4001A2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly bool _value;

		[Token(Token = "0x4001A2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly INetworkModuleProviderFactory _moduleProviderFactory;

		[Token(Token = "0x6001CBF")]
		public SetHiddenFuncCommand(T item, bool value, INetworkModuleProviderFactory moduleProviderFactory)
		{
		}

		[Token(Token = "0x6001CC0")]
		public bool Execute(bool useAnimation)
		{
			return default(bool);
		}

		[Token(Token = "0x6001CC1")]
		public bool UnExecute(bool useAnimation)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000589")]
	public class SetHighlightedFuncCommand<T> : IFuncCommand where T : IHighlightable
	{
		[Token(Token = "0x4001A2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly T _item;

		[Token(Token = "0x4001A2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly bool _value;

		[Token(Token = "0x4001A30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly INetworkModuleProviderFactory _moduleProviderFactory;

		[Token(Token = "0x6001CC2")]
		public SetHighlightedFuncCommand(T item, bool value, INetworkModuleProviderFactory moduleProviderFactory)
		{
		}

		[Token(Token = "0x6001CC3")]
		public bool Execute(bool useAnimation)
		{
			return default(bool);
		}

		[Token(Token = "0x6001CC4")]
		public bool UnExecute(bool useAnimation)
		{
			return default(bool);
		}
	}
}
namespace Views
{
	[Token(Token = "0x200058A")]
	public class AnatomyItemInstance : MonoBehaviour
	{
		[Token(Token = "0x4001A31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshFilter _meshFilter;

		[Token(Token = "0x4001A32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MeshCollider _meshCollider;

		[Token(Token = "0x4001A33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MeshRenderer _meshRenderer;

		[Token(Token = "0x4001A34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AssignableMonoBehaviourObject _monoBehaviourObject;

		[Token(Token = "0x4001A35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private ObjectManipulator _objectManipulator;

		[Token(Token = "0x17000468")]
		public MeshFilter MeshFilter
		{
			[Token(Token = "0x6001CC5")]
			[Address(RVA = "0x1662F0C", Offset = "0x1662F0C", VA = "0x1662F0C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000469")]
		public MeshCollider MeshCollider
		{
			[Token(Token = "0x6001CC6")]
			[Address(RVA = "0x1662F14", Offset = "0x1662F14", VA = "0x1662F14")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700046A")]
		public MeshRenderer MeshRenderer
		{
			[Token(Token = "0x6001CC7")]
			[Address(RVA = "0x1662F1C", Offset = "0x1662F1C", VA = "0x1662F1C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700046B")]
		public AssignableMonoBehaviourObject MonoBehaviourObject
		{
			[Token(Token = "0x6001CC8")]
			[Address(RVA = "0x1662F24", Offset = "0x1662F24", VA = "0x1662F24")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700046C")]
		public ObjectManipulator ObjectManipulator
		{
			[Token(Token = "0x6001CC9")]
			[Address(RVA = "0x1662F2C", Offset = "0x1662F2C", VA = "0x1662F2C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001CCA")]
		[Address(RVA = "0x1662F34", Offset = "0x1662F34", VA = "0x1662F34")]
		public AnatomyItemInstance()
		{
		}
	}
	[Token(Token = "0x200058B")]
	public interface IAnatomyItemInstance
	{
		[Token(Token = "0x1700046D")]
		IReadOnlyList<AnatomyItem> AnatomyItems
		{
			[Token(Token = "0x6001CCB")]
			get;
		}
	}
	[Token(Token = "0x200058C")]
	public interface IHideable
	{
		[Token(Token = "0x1700046E")]
		bool IsHidden
		{
			[Token(Token = "0x6001CCC")]
			get;
		}

		[Token(Token = "0x6001CCD")]
		void SetHidden(bool value);
	}
	[Token(Token = "0x200058D")]
	public interface IInstanceCollection<out T>
	{
		[Token(Token = "0x6001CCE")]
		T GetInstance(string id);
	}
	[Serializable]
	[Token(Token = "0x200058E")]
	public class SystemInstanceConfig
	{
		[Token(Token = "0x4001A36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[HideInInspector]
		public string name;

		[Token(Token = "0x4001A37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Database.SystemType SystemType;

		[Token(Token = "0x4001A38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Color HighlightColor;

		[Token(Token = "0x6001CCF")]
		[Address(RVA = "0x1662F3C", Offset = "0x1662F3C", VA = "0x1662F3C")]
		public SystemInstanceConfig()
		{
		}
	}
	[Token(Token = "0x200058F")]
	public class PresentableItem : Mobile.Views.IPresentable
	{
		[Token(Token = "0x1700046F")]
		public string Name
		{
			[Token(Token = "0x6001CD1")]
			[Address(RVA = "0x1662FB8", Offset = "0x1662FB8", VA = "0x1662FB8", Slot = "4")]
			[CompilerGenerated]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000470")]
		public string NameLat
		{
			[Token(Token = "0x6001CD2")]
			[Address(RVA = "0x1662FC0", Offset = "0x1662FC0", VA = "0x1662FC0", Slot = "5")]
			[CompilerGenerated]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000471")]
		public string Description
		{
			[Token(Token = "0x6001CD3")]
			[Address(RVA = "0x1662FC8", Offset = "0x1662FC8", VA = "0x1662FC8", Slot = "6")]
			[CompilerGenerated]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000472")]
		public Transform transform
		{
			[Token(Token = "0x6001CD4")]
			[Address(RVA = "0x1662FD0", Offset = "0x1662FD0", VA = "0x1662FD0", Slot = "7")]
			[CompilerGenerated]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001CD0")]
		[Address(RVA = "0x1662F44", Offset = "0x1662F44", VA = "0x1662F44")]
		public PresentableItem(string name, string latinName, string description, Transform transform)
		{
		}
	}
	[Token(Token = "0x2000590")]
	public class PresentableLocalizedItem : Mobile.Views.IPresentable
	{
		[Token(Token = "0x4001A3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly LocalizationManager _localizationManager;

		[Token(Token = "0x4001A3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly string _id;

		[Token(Token = "0x17000473")]
		public string NameLat
		{
			[Token(Token = "0x6001CD6")]
			[Address(RVA = "0x166304C", Offset = "0x166304C", VA = "0x166304C", Slot = "5")]
			[CompilerGenerated]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000474")]
		public string Name
		{
			[Token(Token = "0x6001CD7")]
			[Address(RVA = "0x1663054", Offset = "0x1663054", VA = "0x1663054", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000475")]
		public string Description
		{
			[Token(Token = "0x6001CD8")]
			[Address(RVA = "0x1663078", Offset = "0x1663078", VA = "0x1663078", Slot = "6")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000476")]
		public Transform transform
		{
			[Token(Token = "0x6001CD9")]
			[Address(RVA = "0x16630DC", Offset = "0x16630DC", VA = "0x16630DC", Slot = "7")]
			[CompilerGenerated]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001CD5")]
		[Address(RVA = "0x1662FD8", Offset = "0x1662FD8", VA = "0x1662FD8")]
		public PresentableLocalizedItem(string id, string latinName, Transform transform, LocalizationManager localizationManager)
		{
		}
	}
	[Token(Token = "0x2000591")]
	public class ClickableItemBehaviour : MonoBehaviour, IClickable
	{
		[Token(Token = "0x4001A41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool _clickEnabled;

		[Token(Token = "0x17000477")]
		public bool ClickEnabled
		{
			[Token(Token = "0x6001CDC")]
			[Address(RVA = "0x166321C", Offset = "0x166321C", VA = "0x166321C", Slot = "4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001CDD")]
			[Address(RVA = "0x1663224", Offset = "0x1663224", VA = "0x1663224")]
			set
			{
			}
		}

		[Token(Token = "0x1400005E")]
		public event Action Click
		{
			[Token(Token = "0x6001CDA")]
			[Address(RVA = "0x16630E4", Offset = "0x16630E4", VA = "0x16630E4")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001CDB")]
			[Address(RVA = "0x1663180", Offset = "0x1663180", VA = "0x1663180")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6001CDE")]
		[Address(RVA = "0x1663230", Offset = "0x1663230", VA = "0x1663230", Slot = "5")]
		public void OnClick()
		{
		}

		[Token(Token = "0x6001CDF")]
		[Address(RVA = "0x166324C", Offset = "0x166324C", VA = "0x166324C")]
		public ClickableItemBehaviour()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000592")]
	public class GrabableItemSettings
	{
		[Token(Token = "0x4001A43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool FocusEnabled;

		[Token(Token = "0x4001A44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool ManipulationEnabled;

		[Token(Token = "0x6001CE0")]
		[Address(RVA = "0x166325C", Offset = "0x166325C", VA = "0x166325C")]
		public GrabableItemSettings()
		{
		}
	}
	[Token(Token = "0x2000593")]
	public class GrabableItem : IGazeable, IGrabable
	{
		[Token(Token = "0x4001A45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly GrabableItemSettings _settings;

		[Token(Token = "0x4001A46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly GameObject _gameObject;

		[Token(Token = "0x17000478")]
		public IView<GrabableItem> View
		{
			[Token(Token = "0x6001CE1")]
			[Address(RVA = "0x166326C", Offset = "0x166326C", VA = "0x166326C")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001CE2")]
			[Address(RVA = "0x1663274", Offset = "0x1663274", VA = "0x1663274")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000479")]
		public uint FocusCount
		{
			[Token(Token = "0x6001CE4")]
			[Address(RVA = "0x16632C0", Offset = "0x16632C0", VA = "0x16632C0")]
			[CompilerGenerated]
			get
			{
				return default(uint);
			}
			[Token(Token = "0x6001CE5")]
			[Address(RVA = "0x16632C8", Offset = "0x16632C8", VA = "0x16632C8")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700047A")]
		public bool FocusEnabled
		{
			[Token(Token = "0x6001CE6")]
			[Address(RVA = "0x16632D0", Offset = "0x16632D0", VA = "0x16632D0", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700047B")]
		public bool ReparentWhenManipulating
		{
			[Token(Token = "0x6001CE8")]
			[Address(RVA = "0x16633BC", Offset = "0x16633BC", VA = "0x16633BC")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001CE9")]
			[Address(RVA = "0x16633C4", Offset = "0x16633C4", VA = "0x16633C4")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700047C")]
		public Transform ManipulationStartedParent
		{
			[Token(Token = "0x6001CEA")]
			[Address(RVA = "0x16633D0", Offset = "0x16633D0", VA = "0x16633D0")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001CEB")]
			[Address(RVA = "0x16633D8", Offset = "0x16633D8", VA = "0x16633D8")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700047D")]
		public Transform ManipulationStoppedParent
		{
			[Token(Token = "0x6001CEC")]
			[Address(RVA = "0x16633E0", Offset = "0x16633E0", VA = "0x16633E0")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001CED")]
			[Address(RVA = "0x16633E8", Offset = "0x16633E8", VA = "0x16633E8")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700047E")]
		public GameObject GameObject
		{
			[Token(Token = "0x6001CEE")]
			[Address(RVA = "0x16633F0", Offset = "0x16633F0", VA = "0x16633F0", Slot = "6")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700047F")]
		public bool ManipulationEnabled
		{
			[Token(Token = "0x6001CEF")]
			[Address(RVA = "0x16633F8", Offset = "0x16633F8", VA = "0x16633F8", Slot = "7")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000480")]
		public bool IsBeingManipulated
		{
			[Token(Token = "0x6001CF0")]
			[Address(RVA = "0x1663414", Offset = "0x1663414", VA = "0x1663414", Slot = "8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000481")]
		public uint ManipulationCount
		{
			[Token(Token = "0x6001CF1")]
			[Address(RVA = "0x1663424", Offset = "0x1663424", VA = "0x1663424")]
			[CompilerGenerated]
			get
			{
				return default(uint);
			}
			[Token(Token = "0x6001CF2")]
			[Address(RVA = "0x166342C", Offset = "0x166342C", VA = "0x166342C")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6001CE3")]
		[Address(RVA = "0x166327C", Offset = "0x166327C", VA = "0x166327C")]
		public GrabableItem(GrabableItemSettings settings, GameObject gameObject)
		{
		}

		[Token(Token = "0x6001CE7")]
		[Address(RVA = "0x16632EC", Offset = "0x16632EC", VA = "0x16632EC", Slot = "5")]
		public void SetFocused(bool value)
		{
		}

		[Token(Token = "0x6001CF3")]
		[Address(RVA = "0x1663434", Offset = "0x1663434", VA = "0x1663434", Slot = "9")]
		public void StartManipulation()
		{
		}

		[Token(Token = "0x6001CF4")]
		[Address(RVA = "0x1663550", Offset = "0x1663550", VA = "0x1663550", Slot = "10")]
		public void StopManipulation(Vector3 velocity, Vector3 angularVelocity)
		{
		}

		[Token(Token = "0x6001CF5")]
		[Address(RVA = "0x1663670", Offset = "0x1663670", VA = "0x1663670", Slot = "11")]
		public void ForceEndManipulation()
		{
		}
	}
	[Token(Token = "0x2000594")]
	public class GrabableItemBehaviour : MonoBehaviourObject<GrabableItem>
	{
		[Token(Token = "0x4001A4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GrabableItemSettings _settings;

		[Token(Token = "0x4001A4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MonoBehaviour<IView<GrabableItem>> _grabableView;

		[Token(Token = "0x6001CF6")]
		[Address(RVA = "0x16636D8", Offset = "0x16636D8", VA = "0x16636D8", Slot = "5")]
		protected override GrabableItem CreateInstance()
		{
			return null;
		}

		[Token(Token = "0x6001CF7")]
		[Address(RVA = "0x16637CC", Offset = "0x16637CC", VA = "0x16637CC")]
		public GrabableItemBehaviour()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000595")]
	public class GrabableViewSettings
	{
		[Token(Token = "0x4001A4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MeshRenderer MeshRenderer;

		[Token(Token = "0x4001A50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Color OriginalColor;

		[Token(Token = "0x4001A51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Color HighlightColor;

		[Token(Token = "0x4001A52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float OriginalPower;

		[Token(Token = "0x4001A53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float HighlightPower;

		[Token(Token = "0x4001A54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float TweenDuration;

		[Token(Token = "0x6001CF8")]
		[Address(RVA = "0x1663814", Offset = "0x1663814", VA = "0x1663814")]
		public GrabableViewSettings()
		{
		}
	}
	[Token(Token = "0x2000596")]
	public class GrabableView : IView<GrabableItem>
	{
		[Token(Token = "0x4001A55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly GrabableViewSettings _settings;

		[Token(Token = "0x4001A56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TweenerCore<Color, Color, ColorOptions> _colorTweener;

		[Token(Token = "0x4001A57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TweenerCore<float, float, FloatOptions> _intensityTweener;

		[Token(Token = "0x6001CF9")]
		[Address(RVA = "0x166381C", Offset = "0x166381C", VA = "0x166381C")]
		public GrabableView(GrabableViewSettings settings)
		{
		}

		[Token(Token = "0x6001CFA")]
		[Address(RVA = "0x166384C", Offset = "0x166384C", VA = "0x166384C", Slot = "4")]
		public void Update(GrabableItem obj)
		{
		}
	}
	[Token(Token = "0x2000597")]
	public class GrabableViewBehaviour : MonoBehaviour<IView<GrabableItem>>
	{
		[Token(Token = "0x4001A58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GrabableViewSettings _settings;

		[Token(Token = "0x6001CFB")]
		[Address(RVA = "0x1663A40", Offset = "0x1663A40", VA = "0x1663A40", Slot = "4")]
		protected override IView<GrabableItem> CreateInstance()
		{
			return null;
		}

		[Token(Token = "0x6001CFC")]
		[Address(RVA = "0x1663AB4", Offset = "0x1663AB4", VA = "0x1663AB4")]
		public GrabableViewBehaviour()
		{
		}
	}
	[Token(Token = "0x2000598")]
	public interface IView<in T>
	{
		[Token(Token = "0x6001CFD")]
		void Update(T obj);
	}
	[Token(Token = "0x2000599")]
	public class SkinnedMeshColliderComponent : MonoBehaviour
	{
		[Token(Token = "0x4001A59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private BoxCollider _boxCollider;

		[Token(Token = "0x4001A5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool _bakeEnabled;

		[Token(Token = "0x4001A5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float _lastBakeTime;

		[Token(Token = "0x17000482")]
		public BoxCollider BoxCollider
		{
			[Token(Token = "0x6001CFE")]
			[Address(RVA = "0x1663AFC", Offset = "0x1663AFC", VA = "0x1663AFC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000483")]
		public float MeshBakingInterval
		{
			[Token(Token = "0x6001CFF")]
			[Address(RVA = "0x1663B04", Offset = "0x1663B04", VA = "0x1663B04")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001D00")]
			[Address(RVA = "0x1663B0C", Offset = "0x1663B0C", VA = "0x1663B0C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000484")]
		public Transform Container
		{
			[Token(Token = "0x6001D01")]
			[Address(RVA = "0x1663B14", Offset = "0x1663B14", VA = "0x1663B14")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001D02")]
			[Address(RVA = "0x1663B1C", Offset = "0x1663B1C", VA = "0x1663B1C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000485")]
		public SkinnedMeshRenderer SkinnedMeshRenderer
		{
			[Token(Token = "0x6001D03")]
			[Address(RVA = "0x1663B24", Offset = "0x1663B24", VA = "0x1663B24")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001D04")]
			[Address(RVA = "0x1663B2C", Offset = "0x1663B2C", VA = "0x1663B2C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000486")]
		public MeshCollider MeshCollider
		{
			[Token(Token = "0x6001D05")]
			[Address(RVA = "0x1663B34", Offset = "0x1663B34", VA = "0x1663B34")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001D06")]
			[Address(RVA = "0x1663B3C", Offset = "0x1663B3C", VA = "0x1663B3C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000487")]
		public Transform UniverseTransform
		{
			[Token(Token = "0x6001D07")]
			[Address(RVA = "0x1663B44", Offset = "0x1663B44", VA = "0x1663B44")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001D08")]
			[Address(RVA = "0x1663B4C", Offset = "0x1663B4C", VA = "0x1663B4C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6001D09")]
		[Address(RVA = "0x1663B54", Offset = "0x1663B54", VA = "0x1663B54")]
		private void Update()
		{
		}

		[Token(Token = "0x6001D0A")]
		[Address(RVA = "0x1663CA4", Offset = "0x1663CA4", VA = "0x1663CA4")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001D0B")]
		[Address(RVA = "0x1663E64", Offset = "0x1663E64", VA = "0x1663E64")]
		public void SetBakeEnabled(bool value)
		{
		}

		[Token(Token = "0x6001D0C")]
		[Address(RVA = "0x1663E70", Offset = "0x1663E70", VA = "0x1663E70")]
		public SkinnedMeshColliderComponent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200059A")]
	public class GazableItemSettings
	{
		[Token(Token = "0x4001A61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SpriteRenderer SpriteRenderer;

		[Token(Token = "0x4001A62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float DefaultColor;

		[Token(Token = "0x4001A63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 OffsetText;

		[Token(Token = "0x4001A64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string Text;

		[Token(Token = "0x6001D0D")]
		[Address(RVA = "0x1663E78", Offset = "0x1663E78", VA = "0x1663E78")]
		public GazableItemSettings()
		{
		}
	}
	[Token(Token = "0x200059B")]
	public class SpriteRendererViewBehaviour : MonoBehaviour<IView<GrabableItem>>
	{
		[Token(Token = "0x4001A65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GazableItemSettings _gazableItemSettings;

		[Token(Token = "0x6001D0E")]
		[Address(RVA = "0x1663E88", Offset = "0x1663E88", VA = "0x1663E88", Slot = "4")]
		protected override IView<GrabableItem> CreateInstance()
		{
			return null;
		}

		[Token(Token = "0x6001D0F")]
		[Address(RVA = "0x1663F2C", Offset = "0x1663F2C", VA = "0x1663F2C")]
		public SpriteRendererViewBehaviour()
		{
		}
	}
	[Token(Token = "0x200059C")]
	public class SpriteRendererView : IView<GrabableItem>
	{
		[StructLayout(3)]
		[Token(Token = "0x200059D")]
		[CompilerGenerated]
		private struct <DisplayToolTip>d__6 : IAsyncStateMachine
		{
			[Token(Token = "0x4001A6A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001A6B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4001A6C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SpriteRendererView <>4__this;

			[Token(Token = "0x4001A6D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private CancellationToken <token>5__2;

			[Token(Token = "0x4001A6E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x6001D13")]
			[Address(RVA = "0x166416C", Offset = "0x166416C", VA = "0x166416C", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001D14")]
			[Address(RVA = "0x166445C", Offset = "0x166445C", VA = "0x166445C", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4001A66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly GazableItemSettings _settings;

		[Token(Token = "0x4001A67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TweenerCore<Color, Color, ColorOptions> _colorTweener;

		[Token(Token = "0x4001A68")]
		private const int _waitingTime = 300;

		[Token(Token = "0x4001A69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private CancellationTokenSource _cancellationTokenSource;

		[Token(Token = "0x6001D10")]
		[Address(RVA = "0x1663EFC", Offset = "0x1663EFC", VA = "0x1663EFC")]
		public SpriteRendererView(GazableItemSettings settings)
		{
		}

		[Token(Token = "0x6001D11")]
		[Address(RVA = "0x1663F74", Offset = "0x1663F74", VA = "0x1663F74", Slot = "4")]
		public void Update(GrabableItem obj)
		{
		}

		[Token(Token = "0x6001D12")]
		[Address(RVA = "0x16640B8", Offset = "0x16640B8", VA = "0x16640B8")]
		[AsyncStateMachine(typeof(<DisplayToolTip>d__6))]
		public void DisplayToolTip()
		{
		}
	}
	[Token(Token = "0x200059E")]
	public class AnatomySphereItem : MonoBehaviour
	{
		[Token(Token = "0x4001A6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private ObjectManipulator _objectManipulator;

		[Token(Token = "0x4001A70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AssignableMonoBehaviourObject _assignableMonoBehaviourObject;

		[Token(Token = "0x4001A71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MeshRenderer _meshRenderer;

		[Token(Token = "0x4001A72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float _rotationSpeed;

		[Token(Token = "0x4001A73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float _lastRotation;

		[Token(Token = "0x17000488")]
		public AssignableMonoBehaviourObject AssignableMonoBehaviourObject
		{
			[Token(Token = "0x6001D15")]
			[Address(RVA = "0x1664468", Offset = "0x1664468", VA = "0x1664468")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000489")]
		public ObjectManipulator ObjectManipulator
		{
			[Token(Token = "0x6001D16")]
			[Address(RVA = "0x1664470", Offset = "0x1664470", VA = "0x1664470")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D17")]
		[Address(RVA = "0x1664478", Offset = "0x1664478", VA = "0x1664478")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001D18")]
		[Address(RVA = "0x1664480", Offset = "0x1664480", VA = "0x1664480")]
		private void Update()
		{
		}

		[Token(Token = "0x6001D19")]
		[Address(RVA = "0x16645BC", Offset = "0x16645BC", VA = "0x16645BC")]
		public AnatomySphereItem()
		{
		}
	}
	[Token(Token = "0x200059F")]
	public enum EnvironmentType
	{
		[Token(Token = "0x4001A75")]
		None,
		[Token(Token = "0x4001A76")]
		Hospital,
		[Token(Token = "0x4001A77")]
		Andromeda
	}
	[Serializable]
	[Token(Token = "0x20005A0")]
	public class SceneField
	{
		[Token(Token = "0x4001A78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string Name;

		[Token(Token = "0x4001A79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Scene]
		[SerializeField]
		private string _scene;

		[Token(Token = "0x4001A7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Material _skybox;

		[Token(Token = "0x4001A7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private EnvironmentType _enviromentType;

		[Token(Token = "0x1700048A")]
		public string ScenePath
		{
			[Token(Token = "0x6001D1A")]
			[Address(RVA = "0x16645CC", Offset = "0x16645CC", VA = "0x16645CC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700048B")]
		public EnvironmentType EnviromentType
		{
			[Token(Token = "0x6001D1B")]
			[Address(RVA = "0x16645D4", Offset = "0x16645D4", VA = "0x16645D4")]
			get
			{
				return default(EnvironmentType);
			}
		}

		[Token(Token = "0x1700048C")]
		public Material Skybox
		{
			[Token(Token = "0x6001D1C")]
			[Address(RVA = "0x16645DC", Offset = "0x16645DC", VA = "0x16645DC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D1D")]
		[Address(RVA = "0x16645E4", Offset = "0x16645E4", VA = "0x16645E4")]
		public SceneField()
		{
		}
	}
}
namespace Views.Keyboard
{
	[Token(Token = "0x20005A1")]
	public class InteractiveKey : MonoBehaviour, IClickable, IGazeable
	{
		[Token(Token = "0x20005A2")]
		public enum KeyType
		{
			[Token(Token = "0x4001A8F")]
			Key,
			[Token(Token = "0x4001A90")]
			Backspace,
			[Token(Token = "0x4001A91")]
			Symbols,
			[Token(Token = "0x4001A92")]
			Shift,
			[Token(Token = "0x4001A93")]
			Enter
		}

		[Token(Token = "0x4001A7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool _clickEnabled;

		[Token(Token = "0x4001A7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[SerializeField]
		private bool _gazeEnabled;

		[Token(Token = "0x4001A7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private string _lowerCaseChar;

		[Token(Token = "0x4001A7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private string _upperCaseChar;

		[Token(Token = "0x4001A80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private string _symbolsChar;

		[Token(Token = "0x4001A81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		protected InteractiveKeyboard Keyboard;

		[Token(Token = "0x4001A82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		protected float HighlightEmmision;

		[Token(Token = "0x4001A83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		protected float AnimationTime;

		[Token(Token = "0x4001A84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		protected float PunchForce;

		[Token(Token = "0x4001A85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		private InteractiveKeyboard.KeyboardState _state;

		[Token(Token = "0x4001A86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		protected KeyType Type;

		[Token(Token = "0x4001A87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		protected AudioClip AudioClip;

		[Token(Token = "0x4001A88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected Color OriginalColor;

		[Token(Token = "0x4001A89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected Color HighlighColor;

		[Token(Token = "0x4001A8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		protected Renderer Renderer;

		[Token(Token = "0x4001A8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		protected bool IsPunched;

		[Token(Token = "0x1700048D")]
		public Vector3 OriginalPosition
		{
			[Token(Token = "0x6001D20")]
			[Address(RVA = "0x1664724", Offset = "0x1664724", VA = "0x1664724")]
			[CompilerGenerated]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001D21")]
			[Address(RVA = "0x1664730", Offset = "0x1664730", VA = "0x1664730")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700048E")]
		public bool ClickEnabled
		{
			[Token(Token = "0x6001D23")]
			[Address(RVA = "0x16647FC", Offset = "0x16647FC", VA = "0x16647FC", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700048F")]
		public bool FocusEnabled
		{
			[Token(Token = "0x6001D2C")]
			[Address(RVA = "0x1665068", Offset = "0x1665068", VA = "0x1665068", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1400005F")]
		public event Action Clicked
		{
			[Token(Token = "0x6001D1E")]
			[Address(RVA = "0x16645EC", Offset = "0x16645EC", VA = "0x16645EC")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001D1F")]
			[Address(RVA = "0x1664688", Offset = "0x1664688", VA = "0x1664688")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6001D22")]
		[Address(RVA = "0x166473C", Offset = "0x166473C", VA = "0x166473C", Slot = "8")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6001D24")]
		[Address(RVA = "0x1664804", Offset = "0x1664804", VA = "0x1664804", Slot = "5")]
		public void OnClick()
		{
		}

		[Token(Token = "0x6001D25")]
		[Address(RVA = "0x1664918", Offset = "0x1664918", VA = "0x1664918", Slot = "9")]
		public virtual void ChangeState(Material material, InteractiveKeyboard.KeyboardState state)
		{
		}

		[Token(Token = "0x6001D26")]
		[Address(RVA = "0x16649AC", Offset = "0x16649AC", VA = "0x16649AC")]
		protected void PunchAnimationSequence()
		{
		}

		[Token(Token = "0x6001D27")]
		[Address(RVA = "0x1664B6C", Offset = "0x1664B6C", VA = "0x1664B6C", Slot = "10")]
		public virtual void OnSelect()
		{
		}

		[Token(Token = "0x6001D28")]
		[Address(RVA = "0x1664CE8", Offset = "0x1664CE8", VA = "0x1664CE8")]
		private string GetKeyBasedOnState(InteractiveKeyboard.KeyboardState state)
		{
			return null;
		}

		[Token(Token = "0x6001D29")]
		[Address(RVA = "0x1665028", Offset = "0x1665028", VA = "0x1665028")]
		public void SetKey(string upperCase, string lowerCase)
		{
		}

		[Token(Token = "0x6001D2A")]
		[Address(RVA = "0x1665058", Offset = "0x1665058", VA = "0x1665058")]
		public void SetSymbol(string symbol)
		{
		}

		[Token(Token = "0x6001D2B")]
		[Address(RVA = "0x1665060", Offset = "0x1665060", VA = "0x1665060")]
		public void SetKeyboard(InteractiveKeyboard keyboard)
		{
		}

		[Token(Token = "0x6001D2D")]
		[Address(RVA = "0x1665070", Offset = "0x1665070", VA = "0x1665070", Slot = "11")]
		public virtual void SetFocused(bool value)
		{
		}

		[Token(Token = "0x6001D2E")]
		[Address(RVA = "0x1665108", Offset = "0x1665108", VA = "0x1665108")]
		public InteractiveKey()
		{
		}
	}
	[Token(Token = "0x20005A3")]
	public class InteractiveKeyboard : MonoBehaviour
	{
		[Token(Token = "0x20005A4")]
		public enum KeyboardState
		{
			[Token(Token = "0x4001AA3")]
			UpperCase,
			[Token(Token = "0x4001AA4")]
			LowerCase,
			[Token(Token = "0x4001AA5")]
			Symbols
		}

		[Serializable]
		[Token(Token = "0x20005A5")]
		public class KeyboardCollection
		{
			[Token(Token = "0x4001AA6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			public List<Keyboard> Keyboards;

			[Token(Token = "0x6001D58")]
			[Address(RVA = "0x1666EF0", Offset = "0x1666EF0", VA = "0x1666EF0")]
			public KeyboardCollection(List<Keyboard> collection)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20005A6")]
		public class Keyboard
		{
			[Token(Token = "0x4001AA7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string Key;

			[Token(Token = "0x4001AA8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string UpperCase;

			[Token(Token = "0x4001AA9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string LowerCase;

			[Token(Token = "0x4001AAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string Symbol;

			[Token(Token = "0x6001D59")]
			[Address(RVA = "0x1666F20", Offset = "0x1666F20", VA = "0x1666F20")]
			public Keyboard()
			{
			}

			[Token(Token = "0x6001D5A")]
			[Address(RVA = "0x1666F28", Offset = "0x1666F28", VA = "0x1666F28")]
			public Keyboard(string k, string symbol)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20005A7")]
		public class KeyboardMaterials
		{
			[Token(Token = "0x4001AAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Material LowerCaseMaterial;

			[Token(Token = "0x4001AAC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Material UpperCaseMaterial;

			[Token(Token = "0x4001AAD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Material SymbolsMaterial;

			[Token(Token = "0x6001D5B")]
			[Address(RVA = "0x1666FB8", Offset = "0x1666FB8", VA = "0x1666FB8")]
			public KeyboardMaterials()
			{
			}
		}

		[Token(Token = "0x4001A94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TextMeshPro _stringDisplay;

		[Token(Token = "0x4001A95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private List<InteractiveKey> _keys;

		[Token(Token = "0x4001A96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool _moveKeybord;

		[Token(Token = "0x4001A97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		[SerializeField]
		private bool _hideOnEnter;

		[Token(Token = "0x4001A98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Button _closeButton;

		[Token(Token = "0x4001A99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Toggle _pinToggle;

		[Token(Token = "0x4001A9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private RadialView _radialView;

		[Token(Token = "0x4001A9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		[HideInInspector]
		private KeyboardCollection _keyboard;

		[Token(Token = "0x4001A9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public ReactiveProperty<KeyboardState> State;

		[Token(Token = "0x4001A9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public ReactiveProperty<bool> Initialized;

		[Token(Token = "0x4001A9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public KeyboardMaterials Materials;

		[Token(Token = "0x4001A9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private ReactiveCollection<string> _keyboardCollection;

		[Token(Token = "0x4001AA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private TMP_InputField _interactiveInputField;

		[Token(Token = "0x4001AA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private readonly CompositeDisposable _disposable;

		[Token(Token = "0x17000490")]
		public TMP_InputField InputField
		{
			[Token(Token = "0x6001D31")]
			[Address(RVA = "0x16651C8", Offset = "0x16651C8", VA = "0x16651C8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001D32")]
			[Address(RVA = "0x16651D0", Offset = "0x16651D0", VA = "0x16651D0")]
			set
			{
			}
		}

		[Token(Token = "0x6001D33")]
		[Address(RVA = "0x16656CC", Offset = "0x16656CC", VA = "0x16656CC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001D34")]
		[Address(RVA = "0x166576C", Offset = "0x166576C", VA = "0x166576C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001D35")]
		[Address(RVA = "0x1665F08", Offset = "0x1665F08", VA = "0x1665F08")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001D36")]
		[Address(RVA = "0x1665F6C", Offset = "0x1665F6C", VA = "0x1665F6C")]
		public void SetText(string text)
		{
		}

		[Token(Token = "0x6001D37")]
		[Address(RVA = "0x1665470", Offset = "0x1665470", VA = "0x1665470")]
		public void InitKeyboardCollection(string text)
		{
		}

		[Token(Token = "0x6001D38")]
		[Address(RVA = "0x1664D5C", Offset = "0x1664D5C", VA = "0x1664D5C")]
		public void KeyPressed(string key)
		{
		}

		[Token(Token = "0x6001D39")]
		[Address(RVA = "0x1664DD0", Offset = "0x1664DD0", VA = "0x1664DD0")]
		public void Backspace()
		{
		}

		[Token(Token = "0x6001D3A")]
		[Address(RVA = "0x1665018", Offset = "0x1665018", VA = "0x1665018")]
		public void Enter()
		{
		}

		[Token(Token = "0x6001D3B")]
		[Address(RVA = "0x1664E9C", Offset = "0x1664E9C", VA = "0x1664E9C")]
		public void Symbols()
		{
		}

		[Token(Token = "0x6001D3C")]
		[Address(RVA = "0x1664F50", Offset = "0x1664F50", VA = "0x1664F50")]
		public void Shift()
		{
		}

		[Token(Token = "0x6001D3D")]
		[Address(RVA = "0x1666064", Offset = "0x1666064", VA = "0x1666064")]
		public void ClearText()
		{
		}

		[Token(Token = "0x6001D3E")]
		[Address(RVA = "0x1666118", Offset = "0x1666118", VA = "0x1666118")]
		public void StateChange(KeyboardState state)
		{
		}

		[Token(Token = "0x6001D3F")]
		[Address(RVA = "0x1666210", Offset = "0x1666210", VA = "0x1666210")]
		private Material GetStateMaterial(KeyboardState state)
		{
			return null;
		}

		[Token(Token = "0x6001D40")]
		[Address(RVA = "0x16662DC", Offset = "0x16662DC", VA = "0x16662DC")]
		public static void ForceUpdate(Solver solver)
		{
		}

		[Token(Token = "0x6001D41")]
		[Address(RVA = "0x1666318", Offset = "0x1666318", VA = "0x1666318")]
		public void ShowKeyboardAnimated()
		{
		}

		[Token(Token = "0x6001D42")]
		[Address(RVA = "0x1666040", Offset = "0x1666040", VA = "0x1666040")]
		public void HideKeyboardAnimated()
		{
		}

		[Token(Token = "0x6001D43")]
		[Address(RVA = "0x16664B8", Offset = "0x16664B8", VA = "0x16664B8")]
		[ContextMenu("Get All Keys")]
		public void GetAllKeys()
		{
		}

		[Token(Token = "0x6001D44")]
		[Address(RVA = "0x1666534", Offset = "0x1666534", VA = "0x1666534")]
		[ContextMenu("Get Keys UVs")]
		public void GetKeysUVs()
		{
		}

		[Token(Token = "0x6001D45")]
		[Address(RVA = "0x166663C", Offset = "0x166663C", VA = "0x166663C")]
		[ContextMenu("Load Keyboard From JSON")]
		public void LoadJson()
		{
		}

		[Token(Token = "0x6001D46")]
		[Address(RVA = "0x16666DC", Offset = "0x16666DC", VA = "0x16666DC")]
		[ContextMenu("Set Keys")]
		public void SetKeys()
		{
		}

		[Token(Token = "0x6001D47")]
		[Address(RVA = "0x166677C", Offset = "0x166677C", VA = "0x166677C")]
		public InteractiveKeyboard()
		{
		}
	}
	[Token(Token = "0x20005AB")]
	public class InteractiveToggleKey : InteractiveKey
	{
		[Token(Token = "0x4001AB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private bool _isOn;

		[Token(Token = "0x6001D65")]
		[Address(RVA = "0x16672D0", Offset = "0x16672D0", VA = "0x16672D0", Slot = "9")]
		public override void ChangeState(Material material, InteractiveKeyboard.KeyboardState state)
		{
		}

		[Token(Token = "0x6001D66")]
		[Address(RVA = "0x1667374", Offset = "0x1667374", VA = "0x1667374", Slot = "10")]
		public override void OnSelect()
		{
		}

		[Token(Token = "0x6001D67")]
		[Address(RVA = "0x16674E4", Offset = "0x16674E4", VA = "0x16674E4", Slot = "11")]
		public override void SetFocused(bool value)
		{
		}

		[Token(Token = "0x6001D68")]
		[Address(RVA = "0x16675B8", Offset = "0x16675B8", VA = "0x16675B8")]
		public InteractiveToggleKey()
		{
		}
	}
}
namespace Views.UI
{
	[Token(Token = "0x20005AC")]
	public class SystemUiComponent : MonoBehaviour
	{
		[Token(Token = "0x4001AB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Toggle _toggle;

		[Token(Token = "0x4001AB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject _levelPanel;

		[Token(Token = "0x4001AB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Button _levelPlus;

		[Token(Token = "0x4001AB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Button _levelMinus;

		[Token(Token = "0x4001ABA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Toggle _fade;

		[Token(Token = "0x4001ABB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Toggle _highlight;

		[Token(Token = "0x4001ABC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Database.SystemType _systemType;

		[Token(Token = "0x4001ABD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Image _icon;

		[Token(Token = "0x4001ABE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Image _levelIconPrefab;

		[Token(Token = "0x4001ABF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Transform _levelParent;

		[Token(Token = "0x4001AC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private List<Image> _levelIcons;

		[Token(Token = "0x4001AC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private LocalizedTextMeshProGui _localizedTextMeshProGui;

		[Token(Token = "0x4001AC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Color isOnColor;

		[Token(Token = "0x4001AC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private bool isInit;

		[Token(Token = "0x4001AC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private readonly CompositeDisposable _disposable;

		[Token(Token = "0x17000491")]
		public Database.SystemType SystemType
		{
			[Token(Token = "0x6001D69")]
			[Address(RVA = "0x16675BC", Offset = "0x16675BC", VA = "0x16675BC")]
			get
			{
				return default(Database.SystemType);
			}
		}

		[Token(Token = "0x17000492")]
		public GameObject LevelPanel
		{
			[Token(Token = "0x6001D6A")]
			[Address(RVA = "0x16675C4", Offset = "0x16675C4", VA = "0x16675C4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000493")]
		public Button LevelPlus
		{
			[Token(Token = "0x6001D6B")]
			[Address(RVA = "0x16675CC", Offset = "0x16675CC", VA = "0x16675CC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000494")]
		public Button LevelMinus
		{
			[Token(Token = "0x6001D6C")]
			[Address(RVA = "0x16675D4", Offset = "0x16675D4", VA = "0x16675D4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000495")]
		public Toggle Fade
		{
			[Token(Token = "0x6001D6D")]
			[Address(RVA = "0x16675DC", Offset = "0x16675DC", VA = "0x16675DC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000496")]
		public Toggle Highlight
		{
			[Token(Token = "0x6001D6E")]
			[Address(RVA = "0x16675E4", Offset = "0x16675E4", VA = "0x16675E4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000497")]
		public Toggle Toggle
		{
			[Token(Token = "0x6001D6F")]
			[Address(RVA = "0x16675EC", Offset = "0x16675EC", VA = "0x16675EC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000498")]
		public Image Icon
		{
			[Token(Token = "0x6001D70")]
			[Address(RVA = "0x16675F4", Offset = "0x16675F4", VA = "0x16675F4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D71")]
		[Address(RVA = "0x16675FC", Offset = "0x16675FC", VA = "0x16675FC")]
		public void Initialize(Database.SystemType systemType, Sprite iconSprite, string localizedTextId)
		{
		}

		[Token(Token = "0x6001D72")]
		[Address(RVA = "0x16676BC", Offset = "0x16676BC", VA = "0x16676BC")]
		protected void Start()
		{
		}

		[Token(Token = "0x6001D73")]
		[Address(RVA = "0x16678B4", Offset = "0x16678B4", VA = "0x16678B4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001D74")]
		[Address(RVA = "0x16678D0", Offset = "0x16678D0", VA = "0x16678D0")]
		public void SetInteractable(bool val)
		{
		}

		[Token(Token = "0x6001D75")]
		[Address(RVA = "0x1667944", Offset = "0x1667944", VA = "0x1667944")]
		public void UpdateLevelButtons(int currentLevel, int minLevel, int maxLevel)
		{
		}

		[Token(Token = "0x6001D76")]
		[Address(RVA = "0x1667BAC", Offset = "0x1667BAC", VA = "0x1667BAC")]
		private void InitLevelIcons(int max)
		{
		}

		[Token(Token = "0x6001D77")]
		[Address(RVA = "0x1667E10", Offset = "0x1667E10", VA = "0x1667E10")]
		public void SetActive(bool value)
		{
		}

		[Token(Token = "0x6001D78")]
		[Address(RVA = "0x1667E38", Offset = "0x1667E38", VA = "0x1667E38")]
		public SystemUiComponent()
		{
		}
	}
	[Token(Token = "0x20005AF")]
	public class PartsPanel : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20005B0")]
		public class LocationUiComponent
		{
			[Token(Token = "0x4001AD0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LocationType LocationType;

			[Token(Token = "0x4001AD1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public ClickableItemBehaviour ClickableItemBehaviour;

			[Token(Token = "0x6001D88")]
			[Address(RVA = "0x1668B2C", Offset = "0x1668B2C", VA = "0x1668B2C")]
			public LocationUiComponent()
			{
			}
		}

		[Token(Token = "0x20005B1")]
		[CompilerGenerated]
		private sealed class <>c__DisplayClass15_0
		{
			[StructLayout(3)]
			[Token(Token = "0x20005B2")]
			private struct <<Start>b__3>d : IAsyncStateMachine
			{
				[Token(Token = "0x4001AD6")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public int <>1__state;

				[Token(Token = "0x4001AD7")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
				public AsyncVoidMethodBuilder <>t__builder;

				[Token(Token = "0x4001AD8")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
				public <>c__DisplayClass15_0 <>4__this;

				[Token(Token = "0x4001AD9")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
				private TaskAwaiter <>u__1;

				[Token(Token = "0x6001D91")]
				[Address(RVA = "0x1669094", Offset = "0x1669094", VA = "0x1669094", Slot = "4")]
				private void MoveNext()
				{
				}

				[Token(Token = "0x6001D92")]
				[Address(RVA = "0x1669364", Offset = "0x1669364", VA = "0x1669364", Slot = "5")]
				[DebuggerHidden]
				private void SetStateMachine(IAsyncStateMachine stateMachine)
				{
				}
			}

			[Token(Token = "0x4001AD2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public IAnatomyModuleProvider anatomyModuleProvider;

			[Token(Token = "0x4001AD3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public PartsPanel <>4__this;

			[Token(Token = "0x4001AD4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ISystemsModule systemsModule;

			[Token(Token = "0x4001AD5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public ILocationModule locationModule;

			[Token(Token = "0x6001D89")]
			[Address(RVA = "0x1668B34", Offset = "0x1668B34", VA = "0x1668B34")]
			public <>c__DisplayClass15_0()
			{
			}

			[Token(Token = "0x6001D8A")]
			[Address(RVA = "0x1668B3C", Offset = "0x1668B3C", VA = "0x1668B3C")]
			internal bool <Start>b__0()
			{
				return default(bool);
			}

			[Token(Token = "0x6001D8B")]
			[Address(RVA = "0x1668BE0", Offset = "0x1668BE0", VA = "0x1668BE0")]
			internal void <Start>b__1(Action action)
			{
			}

			[Token(Token = "0x6001D8C")]
			[Address(RVA = "0x1668C00", Offset = "0x1668C00", VA = "0x1668C00")]
			internal void <Start>b__2(Action action)
			{
			}

			[Token(Token = "0x6001D8D")]
			[Address(RVA = "0x1668C20", Offset = "0x1668C20", VA = "0x1668C20")]
			[AsyncStateMachine(typeof(<<Start>b__3>d))]
			internal void <Start>b__3(Unit _)
			{
			}

			[Token(Token = "0x6001D8E")]
			[Address(RVA = "0x1668CD8", Offset = "0x1668CD8", VA = "0x1668CD8")]
			internal void <Start>b__5(bool locationsEnabled)
			{
			}

			[Token(Token = "0x6001D8F")]
			[Address(RVA = "0x1668E1C", Offset = "0x1668E1C", VA = "0x1668E1C")]
			internal void <Start>b__7(DatabaseType databaseType)
			{
			}

			[Token(Token = "0x6001D90")]
			[Address(RVA = "0x1668F4C", Offset = "0x1668F4C", VA = "0x1668F4C")]
			internal void <Start>b__9(LocationType locationType)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20005B4")]
		[CompilerGenerated]
		private struct <Start>d__15 : IAsyncStateMachine
		{
			[Token(Token = "0x4001ADF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001AE0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4001AE1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public PartsPanel <>4__this;

			[Token(Token = "0x4001AE2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private <>c__DisplayClass15_0 <>8__1;

			[Token(Token = "0x4001AE3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x6001D99")]
			[Address(RVA = "0x16695EC", Offset = "0x16695EC", VA = "0x16695EC", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001D9A")]
			[Address(RVA = "0x166A520", Offset = "0x166A520", VA = "0x166A520", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4001AC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private List<LocationUiComponent> _femaleLocationUiComponents;

		[Token(Token = "0x4001AC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private List<LocationUiComponent> _maleLocationUiComponents;

		[Token(Token = "0x4001ACA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ClickableItemBehaviour _unselectBodyPartButton;

		[Token(Token = "0x4001ACB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private NetworkModuleProviderFactory _moduleProviderFactory;

		[Token(Token = "0x4001ACC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GameObject _maleParts;

		[Token(Token = "0x4001ACD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private GameObject _femaleParts;

		[Token(Token = "0x4001ACE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private readonly CompositeDisposable _disposable;

		[Token(Token = "0x4001ACF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private readonly CancellationTokenSource _disposeCancellationTokenSource;

		[Token(Token = "0x17000499")]
		public ClickableItemBehaviour LocationButton
		{
			[Token(Token = "0x6001D80")]
			[Address(RVA = "0x1668248", Offset = "0x1668248", VA = "0x1668248")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700049A")]
		public IReadOnlyList<LocationUiComponent> FemaleLocationUiComponents
		{
			[Token(Token = "0x6001D81")]
			[Address(RVA = "0x1668250", Offset = "0x1668250", VA = "0x1668250")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700049B")]
		public IReadOnlyList<LocationUiComponent> MaleLocationUiComponents
		{
			[Token(Token = "0x6001D82")]
			[Address(RVA = "0x1668258", Offset = "0x1668258", VA = "0x1668258")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D83")]
		[Address(RVA = "0x1668260", Offset = "0x1668260", VA = "0x1668260")]
		[AsyncStateMachine(typeof(<Start>d__15))]
		private void Start()
		{
		}

		[Token(Token = "0x6001D84")]
		[Address(RVA = "0x1668314", Offset = "0x1668314", VA = "0x1668314")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001D85")]
		[Address(RVA = "0x1668344", Offset = "0x1668344", VA = "0x1668344")]
		private void UpdateView(bool locationsEnabled, DatabaseType databaseType, LocationType locationType)
		{
		}

		[Token(Token = "0x6001D86")]
		[Address(RVA = "0x16687BC", Offset = "0x16687BC", VA = "0x16687BC")]
		private void SetupAreaToggle(LocationUiComponent locationUiComponent)
		{
		}

		[Token(Token = "0x6001D87")]
		[Address(RVA = "0x1668A7C", Offset = "0x1668A7C", VA = "0x1668A7C")]
		public PartsPanel()
		{
		}
	}
}
namespace Utilities
{
	[Token(Token = "0x20005B7")]
	public interface IMaterialInstanceProvider
	{
		[Token(Token = "0x6001DA1")]
		Material GetOrCreateMaterial(string id, Material source);

		[Token(Token = "0x6001DA2")]
		void ReleaseOrDestroyMaterial(string id);

		[Token(Token = "0x6001DA3")]
		bool WillDestroyMaterial(string id);
	}
	[Token(Token = "0x20005B8")]
	public static class InstanceProviderExtensions
	{
		[Token(Token = "0x6001DA4")]
		[Address(RVA = "0x166A920", Offset = "0x166A920", VA = "0x166A920")]
		public static IInteractiveAnatomyItemInstance GetInstance(this IInstanceProvider<IInteractiveAnatomyItemInstanceCollection> instanceProvider, AnatomyItem anatomyItem)
		{
			return null;
		}

		[Token(Token = "0x6001DA5")]
		public static TInstance GetInstance<TCollection, TInstance>(this IInstanceProvider<TCollection> instanceProvider, AnatomyItem anatomyItem) where TCollection : IInstanceCollection<TInstance>
		{
			return (TInstance)null;
		}

		[Token(Token = "0x6001DA6")]
		public static T GetSystemGroupInstanceCollectionForLocation<T>(this IInstanceProvider<T> instanceProvider, SystemGroup systemGroup, LocationType locationType)
		{
			return (T)null;
		}

		[Token(Token = "0x6001DA7")]
		public static IEnumerable<T> GetSystemGroupInstanceCollections<T>(this IInstanceProvider<T> instanceProvider, SystemGroup systemGroup)
		{
			return null;
		}
	}
	[Token(Token = "0x20005B9")]
	public class ItemMaterialDatabase : ScriptableObject
	{
		[Token(Token = "0x4001AEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string StringId;

		[Token(Token = "0x4001AEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Material VrMaterial;

		[Token(Token = "0x4001AEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Material MobileMaterial;

		[Token(Token = "0x6001DA8")]
		[Address(RVA = "0x166A978", Offset = "0x166A978", VA = "0x166A978")]
		public ItemMaterialDatabase()
		{
		}
	}
	[Token(Token = "0x20005BA")]
	public static class LicenseManagerExtensions
	{
		[StructLayout(3)]
		[Token(Token = "0x20005BB")]
		[CompilerGenerated]
		private struct <Login>d__0 : IAsyncStateMachine
		{
			[Token(Token = "0x4001AEF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001AF0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder<LicenseData> <>t__builder;

			[Token(Token = "0x4001AF1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string licenseHolderName;

			[Token(Token = "0x4001AF2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string licenseId;

			[Token(Token = "0x4001AF3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public ILicenseManager licenseManager;

			[Token(Token = "0x4001AF4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public CancellationToken cancellationToken;

			[Token(Token = "0x4001AF5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public string username;

			[Token(Token = "0x4001AF6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private StoredLicenseData <storedLicenseData>5__2;

			[Token(Token = "0x4001AF7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private TaskAwaiter<bool> <>u__1;

			[Token(Token = "0x4001AF8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private TaskAwaiter<LicenseData> <>u__2;

			[Token(Token = "0x6001DAD")]
			[Address(RVA = "0x166AEB4", Offset = "0x166AEB4", VA = "0x166AEB4", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001DAE")]
			[Address(RVA = "0x166B57C", Offset = "0x166B57C", VA = "0x166B57C", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20005BC")]
		[CompilerGenerated]
		private struct <StartAutoLoginLoop>d__1 : IAsyncStateMachine
		{
			[Token(Token = "0x4001AF9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001AFA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4001AFB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string licenseHolderName;

			[Token(Token = "0x4001AFC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string licenseId;

			[Token(Token = "0x4001AFD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public int interval;

			[Token(Token = "0x4001AFE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public int maxAttempts;

			[Token(Token = "0x4001AFF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public ILicenseManager licenseManager;

			[Token(Token = "0x4001B00")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public CancellationToken cancellationToken;

			[Token(Token = "0x4001B01")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public Action<Exception> onException;

			[Token(Token = "0x4001B02")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private int <currentAttempt>5__2;

			[Token(Token = "0x4001B03")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private TaskAwaiter<bool> <>u__1;

			[Token(Token = "0x4001B04")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private TaskAwaiter <>u__2;

			[Token(Token = "0x6001DAF")]
			[Address(RVA = "0x166B5D4", Offset = "0x166B5D4", VA = "0x166B5D4", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001DB0")]
			[Address(RVA = "0x166BE00", Offset = "0x166BE00", VA = "0x166BE00", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4001AED")]
		public const string University = "University";

		[Token(Token = "0x4001AEE")]
		public const string HighSchool = "HighSchool";

		[Token(Token = "0x6001DA9")]
		[Address(RVA = "0x166A980", Offset = "0x166A980", VA = "0x166A980")]
		[AsyncStateMachine(typeof(<Login>d__0))]
		public static Task<LicenseData> Login(this ILicenseManager licenseManager, string licenseHolderName, string licenseId, string username, CancellationToken cancellationToken)
		{
			return null;
		}

		[Token(Token = "0x6001DAA")]
		[Address(RVA = "0x166AAF0", Offset = "0x166AAF0", VA = "0x166AAF0")]
		[AsyncStateMachine(typeof(<StartAutoLoginLoop>d__1))]
		public static Task StartAutoLoginLoop(this ILicenseManager licenseManager, string licenseHolderName, string licenseId, int interval, int maxAttempts, CancellationToken cancellationToken, [Optional] Action<Exception> onException)
		{
			return null;
		}

		[Token(Token = "0x6001DAB")]
		[Address(RVA = "0x166AC58", Offset = "0x166AC58", VA = "0x166AC58")]
		public static StoredLicenseData TryGetStoredLicenseData()
		{
			return null;
		}

		[Token(Token = "0x6001DAC")]
		[Address(RVA = "0x166AD60", Offset = "0x166AD60", VA = "0x166AD60")]
		public static EducationLevel GetEducationLevel(string licenseHolderType)
		{
			return default(EducationLevel);
		}
	}
	[Serializable]
	[Token(Token = "0x20005BD")]
	public struct LocalTransformContainer
	{
		[Token(Token = "0x4001B05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private Vector3 _localPosition;

		[Token(Token = "0x4001B06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[SerializeField]
		private Quaternion _localRotation;

		[Token(Token = "0x4001B07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private Vector3 _localScale;

		[Token(Token = "0x4001B08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform _parent;

		[Token(Token = "0x1700049C")]
		public Vector3 LocalPosition
		{
			[Token(Token = "0x6001DB1")]
			[Address(RVA = "0x166BE0C", Offset = "0x166BE0C", VA = "0x166BE0C")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x1700049D")]
		public Vector3 LocalScale
		{
			[Token(Token = "0x6001DB2")]
			[Address(RVA = "0x166BE18", Offset = "0x166BE18", VA = "0x166BE18")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x1700049E")]
		public Quaternion LocalRotation
		{
			[Token(Token = "0x6001DB3")]
			[Address(RVA = "0x166BE24", Offset = "0x166BE24", VA = "0x166BE24")]
			get
			{
				return default(Quaternion);
			}
		}

		[Token(Token = "0x1700049F")]
		public Transform Parent
		{
			[Token(Token = "0x6001DB4")]
			[Address(RVA = "0x166BE30", Offset = "0x166BE30", VA = "0x166BE30")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001DB5")]
		[Address(RVA = "0x166BE38", Offset = "0x166BE38", VA = "0x166BE38")]
		public LocalTransformContainer(Transform transform)
		{
		}
	}
	[Token(Token = "0x20005BE")]
	public class MaterialInstanceProvider : IMaterialInstanceProvider
	{
		[Token(Token = "0x20005BF")]
		private class MaterialData
		{
			[Token(Token = "0x4001B0B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Material Material;

			[Token(Token = "0x4001B0C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int UsageCount;

			[Token(Token = "0x6001DBA")]
			[Address(RVA = "0x166C088", Offset = "0x166C088", VA = "0x166C088")]
			public MaterialData()
			{
			}
		}

		[Token(Token = "0x4001B09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly Func<string, Material, Material> _createMaterial;

		[Token(Token = "0x4001B0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly Dictionary<string, MaterialData> _materials;

		[Token(Token = "0x6001DB6")]
		[Address(RVA = "0x166BEB0", Offset = "0x166BEB0", VA = "0x166BEB0")]
		public MaterialInstanceProvider(Func<string, Material, Material> createMaterial)
		{
		}

		[Token(Token = "0x6001DB7")]
		[Address(RVA = "0x166BF54", Offset = "0x166BF54", VA = "0x166BF54", Slot = "4")]
		public Material GetOrCreateMaterial(string id, Material source)
		{
			return null;
		}

		[Token(Token = "0x6001DB8")]
		[Address(RVA = "0x166C090", Offset = "0x166C090", VA = "0x166C090", Slot = "5")]
		public void ReleaseOrDestroyMaterial(string id)
		{
		}

		[Token(Token = "0x6001DB9")]
		[Address(RVA = "0x166C174", Offset = "0x166C174", VA = "0x166C174", Slot = "6")]
		public bool WillDestroyMaterial(string id)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20005C0")]
	public enum MovementSimulatorMode
	{
		[Token(Token = "0x4001B0E")]
		Local,
		[Token(Token = "0x4001B0F")]
		World
	}
	[Serializable]
	[Token(Token = "0x20005C1")]
	public class MovementSimulatorSettings
	{
		[Token(Token = "0x4001B10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 MovementSpeed;

		[Token(Token = "0x4001B11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 RotationSpeed;

		[Token(Token = "0x4001B12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float MovementChangeInterval;

		[Token(Token = "0x4001B13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float RotationChangeInterval;

		[Token(Token = "0x4001B14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 MovementConstrain;

		[Token(Token = "0x4001B15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public MovementSimulatorMode Mode;

		[Token(Token = "0x6001DBB")]
		[Address(RVA = "0x166C200", Offset = "0x166C200", VA = "0x166C200")]
		public MovementSimulatorSettings()
		{
		}
	}
	[Token(Token = "0x20005C2")]
	public class MovementSimulator
	{
		[Token(Token = "0x4001B16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly MovementSimulatorSettings Settings;

		[Token(Token = "0x4001B17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Vector3 _velocity;

		[Token(Token = "0x4001B18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Vector3 _angularVelocity;

		[Token(Token = "0x4001B19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float _nextVelocityUpdateTime;

		[Token(Token = "0x4001B1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float _nextAngularVelocityUpdateTime;

		[Token(Token = "0x6001DBC")]
		[Address(RVA = "0x166C294", Offset = "0x166C294", VA = "0x166C294")]
		public MovementSimulator(MovementSimulatorSettings settings)
		{
		}

		[Token(Token = "0x6001DBD")]
		[Address(RVA = "0x166C2C4", Offset = "0x166C2C4", VA = "0x166C2C4")]
		public void Update(Transform transform)
		{
		}

		[Token(Token = "0x6001DBE")]
		[Address(RVA = "0x166C63C", Offset = "0x166C63C", VA = "0x166C63C")]
		private static Vector3 Clamp(Vector3 value, Vector3 min, Vector3 max)
		{
			return default(Vector3);
		}
	}
	[Token(Token = "0x20005C3")]
	public static class SceneManagerExtensions
	{
		[Token(Token = "0x20005C4")]
		[CompilerGenerated]
		private sealed class <GetLoadedScenes>d__0 : IEnumerable<UnityEngine.SceneManagement.Scene>, IEnumerable, IEnumerator<UnityEngine.SceneManagement.Scene>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001B1B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001B1C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private UnityEngine.SceneManagement.Scene <>2__current;

			[Token(Token = "0x4001B1D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4001B1E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			private int <sceneCount>5__2;

			[Token(Token = "0x4001B1F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <i>5__3;

			[Token(Token = "0x170004A0")]
			private UnityEngine.SceneManagement.Scene System.Collections.Generic.IEnumerator<UnityEngine.SceneManagement.Scene>.Current
			{
				[Token(Token = "0x6001DC3")]
				[Address(RVA = "0x166C7E8", Offset = "0x166C7E8", VA = "0x166C7E8", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return default(UnityEngine.SceneManagement.Scene);
				}
			}

			[Token(Token = "0x170004A1")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001DC5")]
				[Address(RVA = "0x166C830", Offset = "0x166C830", VA = "0x166C830", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001DC0")]
			[Address(RVA = "0x166C6E8", Offset = "0x166C6E8", VA = "0x166C6E8")]
			[DebuggerHidden]
			public <GetLoadedScenes>d__0(int <>1__state)
			{
			}

			[Token(Token = "0x6001DC1")]
			[Address(RVA = "0x166C71C", Offset = "0x166C71C", VA = "0x166C71C", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001DC2")]
			[Address(RVA = "0x166C720", Offset = "0x166C720", VA = "0x166C720", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001DC4")]
			[Address(RVA = "0x166C7F0", Offset = "0x166C7F0", VA = "0x166C7F0", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6001DC6")]
			[Address(RVA = "0x166C88C", Offset = "0x166C88C", VA = "0x166C88C", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<UnityEngine.SceneManagement.Scene> System.Collections.Generic.IEnumerable<UnityEngine.SceneManagement.Scene>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6001DC7")]
			[Address(RVA = "0x166C924", Offset = "0x166C924", VA = "0x166C924", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x6001DBF")]
		[Address(RVA = "0x166C678", Offset = "0x166C678", VA = "0x166C678")]
		[IteratorStateMachine(typeof(<GetLoadedScenes>d__0))]
		public static IEnumerable<UnityEngine.SceneManagement.Scene> GetLoadedScenes()
		{
			return null;
		}
	}
	[Token(Token = "0x20005C5")]
	public class SliceStencilMovement : MonoBehaviour
	{
		[Token(Token = "0x4001B20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform _targetTransform;

		[Token(Token = "0x4001B21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _movementThreshold;

		[Token(Token = "0x4001B22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float _movementDistance;

		[Token(Token = "0x4001B23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 _originalPosition;

		[Token(Token = "0x4001B24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector3 _lastTargetPosition;

		[Token(Token = "0x6001DC8")]
		[Address(RVA = "0x166C928", Offset = "0x166C928", VA = "0x166C928")]
		private void Start()
		{
		}

		[Token(Token = "0x6001DC9")]
		[Address(RVA = "0x166C958", Offset = "0x166C958", VA = "0x166C958")]
		private void Update()
		{
		}

		[Token(Token = "0x6001DCA")]
		[Address(RVA = "0x166CA74", Offset = "0x166CA74", VA = "0x166CA74")]
		public SliceStencilMovement()
		{
		}
	}
	[Token(Token = "0x20005C6")]
	public static class StandardShaderUtils
	{
		[Token(Token = "0x20005C7")]
		private readonly struct Keywords
		{
			[Token(Token = "0x4001B2F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public readonly LocalKeyword AlphaTestOn;

			[Token(Token = "0x4001B30")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public readonly LocalKeyword AlphaBlendOn;

			[Token(Token = "0x4001B31")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public readonly LocalKeyword AlphaPremultiplyOn;

			[Token(Token = "0x6001DCD")]
			[Address(RVA = "0x166CEF4", Offset = "0x166CEF4", VA = "0x166CEF4")]
			public Keywords(LocalKeyword alphaTestOn, LocalKeyword alphaBlendOn, LocalKeyword alphaPremultiplyOn)
			{
			}
		}

		[Token(Token = "0x20005C8")]
		public enum BlendMode
		{
			[Token(Token = "0x4001B33")]
			Opaque,
			[Token(Token = "0x4001B34")]
			Cutout,
			[Token(Token = "0x4001B35")]
			Fade,
			[Token(Token = "0x4001B36")]
			Transparent
		}

		[Token(Token = "0x4001B25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int SrcBlend;

		[Token(Token = "0x4001B26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static readonly int DstBlend;

		[Token(Token = "0x4001B27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly int ZWrite;

		[Token(Token = "0x4001B28")]
		private const string ALPHATEST_ON = "_ALPHATEST_ON";

		[Token(Token = "0x4001B29")]
		private const string ALPHABLEND_ON = "_ALPHABLEND_ON";

		[Token(Token = "0x4001B2A")]
		private const string ALPHAPREMULTIPLY_ON = "_ALPHAPREMULTIPLY_ON";

		[Token(Token = "0x4001B2B")]
		public const int AlphaTest = 2450;

		[Token(Token = "0x4001B2C")]
		public const int Transparent = 3000;

		[Token(Token = "0x4001B2D")]
		public const int Overlay = 4000;

		[Token(Token = "0x4001B2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static readonly Dictionary<int, Keywords> ShaderKeywordCache;

		[Token(Token = "0x6001DCB")]
		[Address(RVA = "0x166CA7C", Offset = "0x166CA7C", VA = "0x166CA7C")]
		public static void SetBlendMode(this Material material, BlendMode blendMode, int renderQueue = int.MinValue)
		{
		}
	}
	[Token(Token = "0x20005C9")]
	public static class TaskUtilities
	{
		[Token(Token = "0x20005CA")]
		public class DisposableTask : IDisposable
		{
			[Token(Token = "0x4001B37")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private readonly Func<CancellationToken, Task> _task;

			[Token(Token = "0x4001B38")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private readonly CancellationTokenSource _cancellationTokenSource;

			[Token(Token = "0x6001DD4")]
			[Address(RVA = "0x166D5C0", Offset = "0x166D5C0", VA = "0x166D5C0")]
			public DisposableTask(Func<CancellationToken, Task> task)
			{
			}

			[Token(Token = "0x6001DD5")]
			[Address(RVA = "0x166D650", Offset = "0x166D650", VA = "0x166D650")]
			public Task Run()
			{
				return null;
			}

			[Token(Token = "0x6001DD6")]
			[Address(RVA = "0x166D6BC", Offset = "0x166D6BC", VA = "0x166D6BC", Slot = "4")]
			public void Dispose()
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20005CB")]
		[CompilerGenerated]
		private struct <WaitUntil>d__0 : IAsyncStateMachine
		{
			[Token(Token = "0x4001B39")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001B3A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4001B3B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CancellationToken cancellationToken;

			[Token(Token = "0x4001B3C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Func<bool> condition;

			[Token(Token = "0x4001B3D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private YieldAwaitable.YieldAwaiter <>u__1;

			[Token(Token = "0x6001DD7")]
			[Address(RVA = "0x166D6EC", Offset = "0x166D6EC", VA = "0x166D6EC", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001DD8")]
			[Address(RVA = "0x166D8C0", Offset = "0x166D8C0", VA = "0x166D8C0", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20005CC")]
		[CompilerGenerated]
		private struct <WaitUntilCancelled>d__1 : IAsyncStateMachine
		{
			[Token(Token = "0x4001B3E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001B3F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4001B40")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Func<bool> condition;

			[Token(Token = "0x4001B41")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public CancellationToken cancellationToken;

			[Token(Token = "0x4001B42")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private YieldAwaitable.YieldAwaiter <>u__1;

			[Token(Token = "0x6001DD9")]
			[Address(RVA = "0x166D8CC", Offset = "0x166D8CC", VA = "0x166D8CC", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001DDA")]
			[Address(RVA = "0x166DAA4", Offset = "0x166DAA4", VA = "0x166DAA4", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20005CD")]
		[CompilerGenerated]
		private struct <RepeatUntilCancelled>d__2 : IAsyncStateMachine
		{
			[Token(Token = "0x4001B43")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001B44")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4001B45")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Action action;

			[Token(Token = "0x4001B46")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public TimeSpan interval;

			[Token(Token = "0x4001B47")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public CancellationToken cancellationToken;

			[Token(Token = "0x4001B48")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x6001DDB")]
			[Address(RVA = "0x166DAB0", Offset = "0x166DAB0", VA = "0x166DAB0", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001DDC")]
			[Address(RVA = "0x166DC9C", Offset = "0x166DC9C", VA = "0x166DC9C", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20005CE")]
		[CompilerGenerated]
		private struct <RepeatUntilCancelled>d__3 : IAsyncStateMachine
		{
			[Token(Token = "0x4001B49")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001B4A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4001B4B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Action action;

			[Token(Token = "0x4001B4C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int millisecondsInterval;

			[Token(Token = "0x4001B4D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public CancellationToken cancellationToken;

			[Token(Token = "0x4001B4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x6001DDD")]
			[Address(RVA = "0x166DCA8", Offset = "0x166DCA8", VA = "0x166DCA8", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001DDE")]
			[Address(RVA = "0x166DE98", Offset = "0x166DE98", VA = "0x166DE98", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20005CF")]
		[CompilerGenerated]
		private struct <RepeatUntilCancelled>d__4 : IAsyncStateMachine
		{
			[Token(Token = "0x4001B4F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001B50")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4001B51")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Func<CancellationToken, Task> action;

			[Token(Token = "0x4001B52")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public CancellationToken cancellationToken;

			[Token(Token = "0x4001B53")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public TimeSpan interval;

			[Token(Token = "0x4001B54")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x6001DDF")]
			[Address(RVA = "0x166DEA4", Offset = "0x166DEA4", VA = "0x166DEA4", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001DE0")]
			[Address(RVA = "0x166E130", Offset = "0x166E130", VA = "0x166E130", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20005D0")]
		[CompilerGenerated]
		private struct <RepeatUntilCancelled>d__5 : IAsyncStateMachine
		{
			[Token(Token = "0x4001B55")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001B56")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4001B57")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Func<CancellationToken, Task> action;

			[Token(Token = "0x4001B58")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public CancellationToken cancellationToken;

			[Token(Token = "0x4001B59")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public int millisecondsInterval;

			[Token(Token = "0x4001B5A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x6001DE1")]
			[Address(RVA = "0x166E13C", Offset = "0x166E13C", VA = "0x166E13C", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001DE2")]
			[Address(RVA = "0x166E3CC", Offset = "0x166E3CC", VA = "0x166E3CC", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x6001DCE")]
		[Address(RVA = "0x166A41C", Offset = "0x166A41C", VA = "0x166A41C")]
		[AsyncStateMachine(typeof(<WaitUntil>d__0))]
		public static Task WaitUntil(Func<bool> condition, CancellationToken cancellationToken)
		{
			return null;
		}

		[Token(Token = "0x6001DCF")]
		[Address(RVA = "0x166D084", Offset = "0x166D084", VA = "0x166D084")]
		[AsyncStateMachine(typeof(<WaitUntilCancelled>d__1))]
		public static Task WaitUntilCancelled(Func<bool> condition, CancellationToken cancellationToken)
		{
			return null;
		}

		[Token(Token = "0x6001DD0")]
		[Address(RVA = "0x166D188", Offset = "0x166D188", VA = "0x166D188")]
		[AsyncStateMachine(typeof(<RepeatUntilCancelled>d__2))]
		public static Task RepeatUntilCancelled(Action action, TimeSpan interval, CancellationToken cancellationToken)
		{
			return null;
		}

		[Token(Token = "0x6001DD1")]
		[Address(RVA = "0x166D294", Offset = "0x166D294", VA = "0x166D294")]
		[AsyncStateMachine(typeof(<RepeatUntilCancelled>d__3))]
		public static Task RepeatUntilCancelled(Action action, int millisecondsInterval, CancellationToken cancellationToken)
		{
			return null;
		}

		[Token(Token = "0x6001DD2")]
		[Address(RVA = "0x166D3A4", Offset = "0x166D3A4", VA = "0x166D3A4")]
		[AsyncStateMachine(typeof(<RepeatUntilCancelled>d__4))]
		public static Task RepeatUntilCancelled(Func<CancellationToken, Task> action, TimeSpan interval, CancellationToken cancellationToken)
		{
			return null;
		}

		[Token(Token = "0x6001DD3")]
		[Address(RVA = "0x166D4B0", Offset = "0x166D4B0", VA = "0x166D4B0")]
		[AsyncStateMachine(typeof(<RepeatUntilCancelled>d__5))]
		public static Task RepeatUntilCancelled(Func<CancellationToken, Task> action, int millisecondsInterval, CancellationToken cancellationToken)
		{
			return null;
		}
	}
	[Token(Token = "0x20005D1")]
	public static class UpdatableExtensions
	{
		[Token(Token = "0x20005D2")]
		private class DisposeToken : IDisposable
		{
			[Token(Token = "0x170004A2")]
			public bool IsDisposed
			{
				[Token(Token = "0x6001DE7")]
				[Address(RVA = "0x166E5DC", Offset = "0x166E5DC", VA = "0x166E5DC")]
				[CompilerGenerated]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x6001DE8")]
				[Address(RVA = "0x166E5E4", Offset = "0x166E5E4", VA = "0x166E5E4")]
				[CompilerGenerated]
				private set
				{
				}
			}

			[Token(Token = "0x6001DE9")]
			[Address(RVA = "0x166E5F0", Offset = "0x166E5F0", VA = "0x166E5F0", Slot = "4")]
			public void Dispose()
			{
			}

			[Token(Token = "0x6001DEA")]
			[Address(RVA = "0x166E464", Offset = "0x166E464", VA = "0x166E464")]
			public DisposeToken()
			{
			}
		}

		[Token(Token = "0x20005D3")]
		[CompilerGenerated]
		private sealed class <Update>d__2 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001B5C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001B5D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001B5E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Action update;

			[Token(Token = "0x4001B5F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public DisposeToken disposeToken;

			[Token(Token = "0x170004A3")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001DEE")]
				[Address(RVA = "0x166E670", Offset = "0x166E670", VA = "0x166E670", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004A4")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001DF0")]
				[Address(RVA = "0x166E6B8", Offset = "0x166E6B8", VA = "0x166E6B8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001DEB")]
			[Address(RVA = "0x166E4FC", Offset = "0x166E4FC", VA = "0x166E4FC")]
			[DebuggerHidden]
			public <Update>d__2(int <>1__state)
			{
			}

			[Token(Token = "0x6001DEC")]
			[Address(RVA = "0x166E5FC", Offset = "0x166E5FC", VA = "0x166E5FC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001DED")]
			[Address(RVA = "0x166E600", Offset = "0x166E600", VA = "0x166E600", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001DEF")]
			[Address(RVA = "0x166E678", Offset = "0x166E678", VA = "0x166E678", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20005D4")]
		[CompilerGenerated]
		private sealed class <Update>d__4 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001B60")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001B61")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001B62")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public IUpdatable updatable;

			[Token(Token = "0x4001B63")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public DisposeToken disposeToken;

			[Token(Token = "0x170004A5")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001DF4")]
				[Address(RVA = "0x166E7AC", Offset = "0x166E7AC", VA = "0x166E7AC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004A6")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001DF6")]
				[Address(RVA = "0x166E7F4", Offset = "0x166E7F4", VA = "0x166E7F4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001DF1")]
			[Address(RVA = "0x166E5B4", Offset = "0x166E5B4", VA = "0x166E5B4")]
			[DebuggerHidden]
			public <Update>d__4(int <>1__state)
			{
			}

			[Token(Token = "0x6001DF2")]
			[Address(RVA = "0x166E6C0", Offset = "0x166E6C0", VA = "0x166E6C0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001DF3")]
			[Address(RVA = "0x166E6C4", Offset = "0x166E6C4", VA = "0x166E6C4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001DF5")]
			[Address(RVA = "0x166E7B4", Offset = "0x166E7B4", VA = "0x166E7B4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x6001DE3")]
		[Address(RVA = "0x166E3D8", Offset = "0x166E3D8", VA = "0x166E3D8")]
		public static IDisposable StartUpdateCoroutine(this MonoBehaviour monoBehaviour, Action update)
		{
			return null;
		}

		[Token(Token = "0x6001DE4")]
		[Address(RVA = "0x166E46C", Offset = "0x166E46C", VA = "0x166E46C")]
		[IteratorStateMachine(typeof(<Update>d__2))]
		private static IEnumerator Update(Action update, DisposeToken disposeToken)
		{
			return null;
		}

		[Token(Token = "0x6001DE5")]
		public static IDisposable StartUpdatableCoroutine<T>(this MonoBehaviour monoBehaviour, T updatable) where T : IUpdatable
		{
			return null;
		}

		[Token(Token = "0x6001DE6")]
		[Address(RVA = "0x166E524", Offset = "0x166E524", VA = "0x166E524")]
		[IteratorStateMachine(typeof(<Update>d__4))]
		private static IEnumerator Update(IUpdatable updatable, DisposeToken disposeToken)
		{
			return null;
		}
	}
	[Token(Token = "0x20005D5")]
	public static class Utilities
	{
		[Token(Token = "0x20005D6")]
		[CompilerGenerated]
		private sealed class <DistinctBy>d__1<TSource, TKey> : IEnumerable<TSource>, IEnumerable, IEnumerator<TSource>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001B64")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x4001B65")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private TSource <>2__current;

			[Token(Token = "0x4001B66")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4001B67")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private IEnumerable<TSource> source;

			[Token(Token = "0x4001B68")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IEnumerable<TSource> <>3__source;

			[Token(Token = "0x4001B69")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private Func<TSource, TKey> keySelector;

			[Token(Token = "0x4001B6A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Func<TSource, TKey> <>3__keySelector;

			[Token(Token = "0x4001B6B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private HashSet<TKey> <seenKeys>5__2;

			[Token(Token = "0x4001B6C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private IEnumerator<TSource> <>7__wrap2;

			[Token(Token = "0x170004A7")]
			private TSource System.Collections.Generic.IEnumerator<TSource>.Current
			{
				[Token(Token = "0x6001E04")]
				[DebuggerHidden]
				get
				{
					return (TSource)null;
				}
			}

			[Token(Token = "0x170004A8")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E06")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E00")]
			[DebuggerHidden]
			public <DistinctBy>d__1(int <>1__state)
			{
			}

			[Token(Token = "0x6001E01")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E02")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E03")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6001E05")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6001E07")]
			[DebuggerHidden]
			private IEnumerator<TSource> System.Collections.Generic.IEnumerable<TSource>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6001E08")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x20005D8")]
		[CompilerGenerated]
		private sealed class <DepthFirst>d__4<T> : IEnumerable<T>, IEnumerable, IEnumerator<T>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001B70")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x4001B71")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private T <>2__current;

			[Token(Token = "0x4001B72")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4001B73")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private T obj;

			[Token(Token = "0x4001B74")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T <>3__obj;

			[Token(Token = "0x4001B75")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private Func<T, IEnumerable<T>> getChildren;

			[Token(Token = "0x4001B76")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Func<T, IEnumerable<T>> <>3__getChildren;

			[Token(Token = "0x4001B77")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private Stack<T> <objects>5__2;

			[Token(Token = "0x170004A9")]
			private T System.Collections.Generic.IEnumerator<T>.Current
			{
				[Token(Token = "0x6001E10")]
				[DebuggerHidden]
				get
				{
					return (T)null;
				}
			}

			[Token(Token = "0x170004AA")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E12")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E0D")]
			[DebuggerHidden]
			public <DepthFirst>d__4(int <>1__state)
			{
			}

			[Token(Token = "0x6001E0E")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E0F")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E11")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6001E13")]
			[DebuggerHidden]
			private IEnumerator<T> System.Collections.Generic.IEnumerable<T>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6001E14")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x20005D9")]
		[CompilerGenerated]
		private sealed class <BreadthFirst>d__5<T> : IEnumerable<T>, IEnumerable, IEnumerator<T>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001B78")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x4001B79")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private T <>2__current;

			[Token(Token = "0x4001B7A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4001B7B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int maxDepth;

			[Token(Token = "0x4001B7C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>3__maxDepth;

			[Token(Token = "0x4001B7D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private T obj;

			[Token(Token = "0x4001B7E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T <>3__obj;

			[Token(Token = "0x4001B7F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private Func<T, IEnumerable<T>> getChildren;

			[Token(Token = "0x4001B80")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Func<T, IEnumerable<T>> <>3__getChildren;

			[Token(Token = "0x4001B81")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private Queue<(T, int)> <queue>5__2;

			[Token(Token = "0x4001B82")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <depth>5__3;

			[Token(Token = "0x4001B83")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private Queue<T> <queue>5__4;

			[Token(Token = "0x170004AB")]
			private T System.Collections.Generic.IEnumerator<T>.Current
			{
				[Token(Token = "0x6001E18")]
				[DebuggerHidden]
				get
				{
					return (T)null;
				}
			}

			[Token(Token = "0x170004AC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E1A")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E15")]
			[DebuggerHidden]
			public <BreadthFirst>d__5(int <>1__state)
			{
			}

			[Token(Token = "0x6001E16")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E17")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E19")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6001E1B")]
			[DebuggerHidden]
			private IEnumerator<T> System.Collections.Generic.IEnumerable<T>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6001E1C")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x20005DA")]
		[CompilerGenerated]
		private sealed class <Yield>d__6<T> : IEnumerable<T>, IEnumerable, IEnumerator<T>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001B84")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x4001B85")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private T <>2__current;

			[Token(Token = "0x4001B86")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4001B87")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private T item;

			[Token(Token = "0x4001B88")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T <>3__item;

			[Token(Token = "0x170004AD")]
			private T System.Collections.Generic.IEnumerator<T>.Current
			{
				[Token(Token = "0x6001E20")]
				[DebuggerHidden]
				get
				{
					return (T)null;
				}
			}

			[Token(Token = "0x170004AE")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E22")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E1D")]
			[DebuggerHidden]
			public <Yield>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x6001E1E")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E1F")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E21")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6001E23")]
			[DebuggerHidden]
			private IEnumerator<T> System.Collections.Generic.IEnumerable<T>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6001E24")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x6001DF7")]
		[Address(RVA = "0x166E7FC", Offset = "0x166E7FC", VA = "0x166E7FC")]
		public static string GetPath(Transform transform)
		{
			return null;
		}

		[Token(Token = "0x6001DF8")]
		[IteratorStateMachine(typeof(<DistinctBy>d__1<, >))]
		public static IEnumerable<TSource> DistinctBy<TSource, TKey>(this IEnumerable<TSource> source, Func<TSource, TKey> keySelector)
		{
			return null;
		}

		[Token(Token = "0x6001DF9")]
		[Address(RVA = "0x166E8E8", Offset = "0x166E8E8", VA = "0x166E8E8")]
		public static IEnumerable<Transform> DepthFirst(this Transform transform)
		{
			return null;
		}

		[Token(Token = "0x6001DFA")]
		[Address(RVA = "0x166EA68", Offset = "0x166EA68", VA = "0x166EA68")]
		public static IEnumerable<Transform> BreadthFirst(this Transform transform)
		{
			return null;
		}

		[Token(Token = "0x6001DFB")]
		[IteratorStateMachine(typeof(<DepthFirst>d__4<>))]
		public static IEnumerable<T> DepthFirst<T>(this T obj, Func<T, IEnumerable<T>> getChildren)
		{
			return null;
		}

		[Token(Token = "0x6001DFC")]
		[IteratorStateMachine(typeof(<BreadthFirst>d__5<>))]
		public static IEnumerable<T> BreadthFirst<T>(this T obj, Func<T, IEnumerable<T>> getChildren, int maxDepth = -1)
		{
			return null;
		}

		[Token(Token = "0x6001DFD")]
		[IteratorStateMachine(typeof(<Yield>d__6<>))]
		public static IEnumerable<T> Yield<T>(this T item)
		{
			return null;
		}

		[Token(Token = "0x6001DFE")]
		public static bool IsSingleBitSet<T>(this T value) where T : Enum
		{
			return default(bool);
		}

		[Token(Token = "0x6001DFF")]
		public static IEnumerable<T> GetUniqueSingleBitFlags<T>(this T flags) where T : Enum
		{
			return null;
		}
	}
	[Token(Token = "0x20005DC")]
	public class ValueChangeNotifier<T> : IUpdatable
	{
		[Token(Token = "0x4001B8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly Func<T> _getter;

		[Token(Token = "0x4001B8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly Action<T, T> _action;

		[Token(Token = "0x4001B8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T _lastValue;

		[Token(Token = "0x6001E27")]
		public ValueChangeNotifier(Func<T> getter, Action action, bool notifyOnCreate = true)
		{
		}

		[Token(Token = "0x6001E28")]
		public ValueChangeNotifier(Func<T> getter, Action<T> action, bool notifyOnCreate = true)
		{
		}

		[Token(Token = "0x6001E29")]
		public ValueChangeNotifier(Func<T> getter, Action<T, T> action, bool notifyOnCreate = true)
		{
		}

		[Token(Token = "0x6001E2A")]
		public void Update()
		{
		}
	}
	[Token(Token = "0x20005DF")]
	public static class ValueChangeNotifierExtensions
	{
		[Token(Token = "0x6001E2F")]
		public static void AddValueChangeNotifier<T>(this ICollection<IUpdatable> updatables, Func<T> getter, Action action, bool notifyOnCreate = true)
		{
		}

		[Token(Token = "0x6001E30")]
		public static void AddValueChangeNotifier<T>(this ICollection<IUpdatable> updatables, Func<T> getter, Action<T> action, bool notifyOnCreate = true)
		{
		}

		[Token(Token = "0x6001E31")]
		public static void AddValueChangeNotifier<T>(this ICollection<IUpdatable> updatables, Func<T> getter, Action<T, T> action, bool notifyOnCreate = true)
		{
		}

		[Token(Token = "0x6001E32")]
		public static IDisposable StartValueChangeCoroutine<T>(this MonoBehaviour monoBehaviour, Func<T> getter, Action action, bool notifyOnCreate = true)
		{
			return null;
		}

		[Token(Token = "0x6001E33")]
		public static IDisposable StartValueChangeCoroutine<T>(this MonoBehaviour monoBehaviour, Func<T> getter, Action<T> action, bool notifyOnCreate = true)
		{
			return null;
		}

		[Token(Token = "0x6001E34")]
		public static IDisposable StartValueChangeCoroutine<T>(this MonoBehaviour monoBehaviour, Func<T> getter, Action<T, T> action, bool notifyOnCreate = true)
		{
			return null;
		}
	}
	[Token(Token = "0x20005E0")]
	public class BoxColliderSizeSetter : MonoBehaviour
	{
		[Token(Token = "0x4001B8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private RectTransform _rectTransform;

		[Token(Token = "0x4001B90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private BoxCollider _boxCollider;

		[Token(Token = "0x170004AF")]
		public RectTransform RectTransform
		{
			[Token(Token = "0x6001E35")]
			[Address(RVA = "0x166ECF4", Offset = "0x166ECF4", VA = "0x166ECF4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001E36")]
			[Address(RVA = "0x166ECFC", Offset = "0x166ECFC", VA = "0x166ECFC")]
			set
			{
			}
		}

		[Token(Token = "0x6001E37")]
		[Address(RVA = "0x166ED04", Offset = "0x166ED04", VA = "0x166ED04")]
		private void Update()
		{
		}

		[Token(Token = "0x6001E38")]
		[Address(RVA = "0x166ED58", Offset = "0x166ED58", VA = "0x166ED58")]
		private static void SetSizeFromChildCanvasWithOffset(BoxCollider boxCollider, RectTransform rectTransform, float offset)
		{
		}

		[Token(Token = "0x6001E39")]
		[Address(RVA = "0x166EEB4", Offset = "0x166EEB4", VA = "0x166EEB4")]
		public BoxColliderSizeSetter()
		{
		}
	}
	[Token(Token = "0x20005E1")]
	public interface IObjectPool<T>
	{
		[Token(Token = "0x6001E3A")]
		T GetObject();

		[Token(Token = "0x6001E3B")]
		void ReturnObject(T value);
	}
	[Serializable]
	[Token(Token = "0x20005E2")]
	public class ComponentObjectPoolSettings<T>
	{
		[Token(Token = "0x4001B91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public T Prefab;

		[Token(Token = "0x4001B92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Transform DefaultParent;

		[Token(Token = "0x6001E3C")]
		public ComponentObjectPoolSettings()
		{
		}
	}
	[Token(Token = "0x20005E3")]
	public class ComponentObjectPool<T> : IObjectPool<T> where T : UnityEngine.Object
	{
		[Token(Token = "0x4001B93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly ComponentObjectPoolSettings<T> _settings;

		[Token(Token = "0x4001B94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly Action<T> _onObjectCreated;

		[Token(Token = "0x4001B95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly Queue<T> _objects;

		[Token(Token = "0x6001E3D")]
		public ComponentObjectPool(ComponentObjectPoolSettings<T> settings, [Optional] IEnumerable<T> initialItems, [Optional] Action<T> onObjectCreated)
		{
		}

		[Token(Token = "0x6001E3E")]
		public T GetObject()
		{
			return null;
		}

		[Token(Token = "0x6001E3F")]
		private T CreateInstance()
		{
			return null;
		}

		[Token(Token = "0x6001E40")]
		public void ReturnObject(T obj)
		{
		}
	}
	[Token(Token = "0x20005E4")]
	public static class Curver
	{
		[Token(Token = "0x6001E41")]
		[Address(RVA = "0x166EEBC", Offset = "0x166EEBC", VA = "0x166EEBC")]
		public static Vector3[] MakeSmoothCurve(Vector3[] arrayToCurve, float smoothness)
		{
			return null;
		}
	}
	[Token(Token = "0x20005E5")]
	public static class LineExtensions
	{
		[Token(Token = "0x6001E42")]
		[Address(RVA = "0x166F21C", Offset = "0x166F21C", VA = "0x166F21C")]
		public static Vector3 GetAverageVector3(this IList<Vector3> Vector3s)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001E43")]
		[Address(RVA = "0x166F650", Offset = "0x166F650", VA = "0x166F650")]
		public static void ClearPositions(this LineRenderer line)
		{
		}
	}
	[Token(Token = "0x20005E6")]
	public class DicomLocalAndroidProvider : MonoBehaviour
	{
		[StructLayout(3)]
		[Token(Token = "0x20005EA")]
		[CompilerGenerated]
		private struct <LoadZipAsync>d__6 : IAsyncStateMachine
		{
			[Token(Token = "0x4001BA2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001BA3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder<byte[]> <>t__builder;

			[Token(Token = "0x4001BA4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string path;

			[Token(Token = "0x4001BA5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private UnityWebRequest <request>5__2;

			[Token(Token = "0x4001BA6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UnityWebRequestAsyncOperationAwaiter <>u__1;

			[Token(Token = "0x6001E50")]
			[Address(RVA = "0x1670010", Offset = "0x1670010", VA = "0x1670010", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001E51")]
			[Address(RVA = "0x1670248", Offset = "0x1670248", VA = "0x1670248", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4001B96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string _extensionString;

		[Token(Token = "0x4001B97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private List<string> _oldZipFilePath;

		[Token(Token = "0x4001B98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private List<string> _zipFilePaths;

		[Token(Token = "0x4001B99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private List<UnityEngine.Object> _zipFiles;

		[Token(Token = "0x4001B9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private string _unzipDirectoryPath;

		[Token(Token = "0x6001E44")]
		[Address(RVA = "0x166F668", Offset = "0x166F668", VA = "0x166F668")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001E45")]
		[Address(RVA = "0x166F7C4", Offset = "0x166F7C4", VA = "0x166F7C4")]
		[AsyncStateMachine(typeof(<LoadZipAsync>d__6))]
		private Task<byte[]> LoadZipAsync(string path)
		{
			return null;
		}

		[Token(Token = "0x6001E46")]
		[Address(RVA = "0x166F8D0", Offset = "0x166F8D0", VA = "0x166F8D0")]
		private static void ExtractToDirectory(byte[] data, string path)
		{
		}

		[Token(Token = "0x6001E47")]
		[Address(RVA = "0x166FBB8", Offset = "0x166FBB8", VA = "0x166FBB8")]
		public DicomLocalAndroidProvider()
		{
		}
	}
	[Token(Token = "0x20005EC")]
	public class DigitalClock : MonoBehaviour
	{
		[Token(Token = "0x4001BAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TextMeshPro _textMeshProClock;

		[Token(Token = "0x6001E54")]
		[Address(RVA = "0x1671884", Offset = "0x1671884", VA = "0x1671884")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001E55")]
		[Address(RVA = "0x167195C", Offset = "0x167195C", VA = "0x167195C")]
		public static string LeadingZero(int n)
		{
			return null;
		}

		[Token(Token = "0x6001E56")]
		[Address(RVA = "0x1671990", Offset = "0x1671990", VA = "0x1671990")]
		public DigitalClock()
		{
		}
	}
	[Token(Token = "0x20005ED")]
	public class EnvironmentReferenceProvider : MonoBehaviour
	{
		[Token(Token = "0x4001BB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _environment;

		[Token(Token = "0x4001BB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Collider _antModeCollider;

		[Token(Token = "0x4001BB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject _desktopAddonsPrefab;

		[Token(Token = "0x4001BB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private SceneEnvironmentsScriptableObject _sceneEnvironmentsScriptableObject;

		[Token(Token = "0x4001BB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private List<GameObject> _passthroughGameObjects;

		[Token(Token = "0x4001BB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private MeshRenderer _teleportCollider;

		[Token(Token = "0x4001BB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private KeyValuePair<ReflectionProbe, Vector3>[] _initialProbeSizes;

		[Token(Token = "0x170004B0")]
		public IEnumerable<KeyValuePair<ReflectionProbe, Vector3>> InitialProbeSizes
		{
			[Token(Token = "0x6001E57")]
			[Address(RVA = "0x1671998", Offset = "0x1671998", VA = "0x1671998")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004B1")]
		public GameObject Environment
		{
			[Token(Token = "0x6001E58")]
			[Address(RVA = "0x16719A0", Offset = "0x16719A0", VA = "0x16719A0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004B2")]
		public Collider AntModeCollider
		{
			[Token(Token = "0x6001E59")]
			[Address(RVA = "0x16719A8", Offset = "0x16719A8", VA = "0x16719A8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001E5A")]
		[Address(RVA = "0x16719B0", Offset = "0x16719B0", VA = "0x16719B0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001E5B")]
		[Address(RVA = "0x1671B0C", Offset = "0x1671B0C", VA = "0x1671B0C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001E5C")]
		[Address(RVA = "0x1671E1C", Offset = "0x1671E1C", VA = "0x1671E1C")]
		public void SetPassthrough(bool val)
		{
		}

		[Token(Token = "0x6001E5D")]
		[Address(RVA = "0x1671F68", Offset = "0x1671F68", VA = "0x1671F68")]
		public EnvironmentReferenceProvider()
		{
		}
	}
	[Token(Token = "0x20005F0")]
	public static class Extensions
	{
		[Token(Token = "0x6001E63")]
		[Address(RVA = "0x1672080", Offset = "0x1672080", VA = "0x1672080")]
		public static Color SetAlpha(this Color color, float value)
		{
			return default(Color);
		}

		[Token(Token = "0x6001E64")]
		[Address(RVA = "0x1672088", Offset = "0x1672088", VA = "0x1672088")]
		public static Color SetValues(this Color color, float? r, float? g, float? b, float? a)
		{
			return default(Color);
		}

		[Token(Token = "0x6001E65")]
		[Address(RVA = "0x167217C", Offset = "0x167217C", VA = "0x167217C")]
		public static Vector2 SetValues(this Vector2 vector, float? x, float? y)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001E66")]
		[Address(RVA = "0x1672224", Offset = "0x1672224", VA = "0x1672224")]
		public static Vector3 SetValues(this Vector3 vector, float? x, float? y, float? z)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001E67")]
		[Address(RVA = "0x16722F8", Offset = "0x16722F8", VA = "0x16722F8")]
		public static Vector4 SetValues(this Vector4 vector, float? x, float? y, float? z, float? w)
		{
			return default(Vector4);
		}

		[Token(Token = "0x6001E68")]
		[Address(RVA = "0x16723EC", Offset = "0x16723EC", VA = "0x16723EC")]
		public static void DontDestroyOnLoad(this UnityEngine.Object target)
		{
		}

		[Token(Token = "0x6001E69")]
		[Address(RVA = "0x1672444", Offset = "0x1672444", VA = "0x1672444")]
		public static GameObject GetParentRoot(this GameObject child)
		{
			return null;
		}

		[Token(Token = "0x6001E6A")]
		[Address(RVA = "0x16724FC", Offset = "0x16724FC", VA = "0x16724FC")]
		public static List<Transform> Children(this Transform transform)
		{
			return null;
		}

		[Token(Token = "0x6001E6B")]
		[Address(RVA = "0x1672568", Offset = "0x1672568", VA = "0x1672568")]
		public static TransformContainer Snapshot(this Transform transform)
		{
			return default(TransformContainer);
		}

		[Token(Token = "0x6001E6C")]
		[Address(RVA = "0x1672624", Offset = "0x1672624", VA = "0x1672624")]
		public static void Reset(this Transform transform)
		{
		}

		[Token(Token = "0x6001E6D")]
		[Address(RVA = "0x1672704", Offset = "0x1672704", VA = "0x1672704")]
		public static bool IsAbove(this Vector3 position, Transform baseObj)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E6E")]
		[Address(RVA = "0x16727CC", Offset = "0x16727CC", VA = "0x16727CC")]
		public static Transform FindInChildren(this Transform transform, string name)
		{
			return null;
		}

		[Token(Token = "0x6001E6F")]
		[Address(RVA = "0x16728E4", Offset = "0x16728E4", VA = "0x16728E4")]
		public static bool Contains(this string source, string value, CompareOptions options, CultureInfo culture)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20005F2")]
	public static class GradientExtensions
	{
		[Token(Token = "0x20005F3")]
		[BurstCompile]
		public struct SampleGradientColorsJob : IJobParallelFor
		{
			[Token(Token = "0x4001BBB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[Unity.Collections.ReadOnly]
			public NativeArray<GradientKey<float>> Keys;

			[Token(Token = "0x4001BBC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[WriteOnly]
			public NativeArray<UnityEngine.Color32> Output;

			[Token(Token = "0x4001BBD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[Unity.Collections.ReadOnly]
			public float Step;

			[Token(Token = "0x4001BBE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			private Color _leftColor;

			[Token(Token = "0x4001BBF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private Color _rightColor;

			[Token(Token = "0x4001BC0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private float4 _leftColorVector;

			[Token(Token = "0x4001BC1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			private float4 _rightColorVector;

			[Token(Token = "0x4001BC2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			private float4 _o;

			[Token(Token = "0x6001E7B")]
			[Address(RVA = "0x1673974", Offset = "0x1673974", VA = "0x1673974", Slot = "4")]
			public void Execute(int index)
			{
			}
		}

		[Token(Token = "0x20005F6")]
		[CompilerGenerated]
		private sealed class <Tuplify>d__9<T> : IEnumerable<(T, T)>, IEnumerable, IEnumerator<(T, T)>, IEnumerator, IDisposable where T : struct
		{
			[Token(Token = "0x4001BC7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x4001BC8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private (T, T) <>2__current;

			[Token(Token = "0x4001BC9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4001BCA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private IEnumerable<T> enumerable;

			[Token(Token = "0x4001BCB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IEnumerable<T> <>3__enumerable;

			[Token(Token = "0x4001BCC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private IEnumerator<T> <>7__wrap1;

			[Token(Token = "0x4001BCD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private T <t>5__3;

			[Token(Token = "0x170004B3")]
			private (T, T) System.Collections.Generic.IEnumerator<(T,T)>.Current
			{
				[Token(Token = "0x6001E86")]
				[DebuggerHidden]
				get
				{
					return default((T, T));
				}
			}

			[Token(Token = "0x170004B4")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E88")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E82")]
			[DebuggerHidden]
			public <Tuplify>d__9(int <>1__state)
			{
			}

			[Token(Token = "0x6001E83")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E84")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E85")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6001E87")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6001E89")]
			[DebuggerHidden]
			private IEnumerator<(T, T)> System.Collections.Generic.IEnumerable<(T,T)>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6001E8A")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x6001E72")]
		[Address(RVA = "0x1672970", Offset = "0x1672970", VA = "0x1672970")]
		public static Texture2D ToTexture2D(this UnityEngine.Gradient gradient, int width, int height, TextureFormat textureFormat = TextureFormat.RGB24)
		{
			return null;
		}

		[Token(Token = "0x6001E73")]
		[Address(RVA = "0x1672AC4", Offset = "0x1672AC4", VA = "0x1672AC4")]
		public static void FillTextureWithGradient(this Texture2D texture2D, UnityEngine.Gradient gradient)
		{
		}

		[Token(Token = "0x6001E74")]
		[Address(RVA = "0x1672B30", Offset = "0x1672B30", VA = "0x1672B30")]
		public static UnityEngine.Color32[] SampleGradientLine(UnityEngine.Gradient gradient, int width)
		{
			return null;
		}

		[Token(Token = "0x6001E75")]
		[Address(RVA = "0x1672A1C", Offset = "0x1672A1C", VA = "0x1672A1C")]
		public static UnityEngine.Color32[] GetGradientPixels(UnityEngine.Gradient gradient, int width, int height)
		{
			return null;
		}

		[Token(Token = "0x6001E76")]
		[Address(RVA = "0x1672EBC", Offset = "0x1672EBC", VA = "0x1672EBC")]
		public static void SetFrom(this ref float4 vector, ref Color color)
		{
		}

		[Token(Token = "0x6001E77")]
		[Address(RVA = "0x1672EC8", Offset = "0x1672EC8", VA = "0x1672EC8")]
		public static void Evaluate(this ref NativeArray<GradientKey<float>> keys, ref NativeArray<UnityEngine.Color32> colors)
		{
		}

		[Token(Token = "0x6001E78")]
		[Address(RVA = "0x1672F8C", Offset = "0x1672F8C", VA = "0x1672F8C")]
		public static void ApplyGradient(this Texture2D texture, IReadOnlyCollection<GradientKey<float>> keys, ref NativeArray<UnityEngine.Color32> nativeColors, ref NativeArray<GradientKey<float>> nativeKeys, ref UnityEngine.Color32[] colors)
		{
		}

		[Token(Token = "0x6001E79")]
		[Address(RVA = "0x1673744", Offset = "0x1673744", VA = "0x1673744")]
		public static Color Evaluate(this IEnumerable<GradientKey<float>> keys, float position)
		{
			return default(Color);
		}

		[Token(Token = "0x6001E7A")]
		[IteratorStateMachine(typeof(<Tuplify>d__9<>))]
		public static IEnumerable<(T, T)> Tuplify<T>(this IEnumerable<T> enumerable) where T : struct
		{
			return null;
		}
	}
	[Token(Token = "0x20005F7")]
	public class Follow : MonoBehaviour
	{
		[Token(Token = "0x4001BCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform Target;

		[Token(Token = "0x6001E8B")]
		[Address(RVA = "0x16743C4", Offset = "0x16743C4", VA = "0x16743C4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001E8C")]
		[Address(RVA = "0x1674468", Offset = "0x1674468", VA = "0x1674468")]
		public void ForceUpdate()
		{
		}

		[Token(Token = "0x6001E8D")]
		[Address(RVA = "0x167450C", Offset = "0x167450C", VA = "0x167450C")]
		public Follow()
		{
		}
	}
	[Token(Token = "0x20005F8")]
	public abstract class MonoBehaviour<T> : MonoBehaviour
	{
		[Token(Token = "0x4001BCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T _instance;

		[Token(Token = "0x170004B5")]
		public T Instance
		{
			[Token(Token = "0x6001E8E")]
			get
			{
				return (T)null;
			}
		}

		[Token(Token = "0x6001E8F")]
		protected abstract T CreateInstance();

		[Token(Token = "0x6001E90")]
		protected MonoBehaviour()
		{
		}
	}
	[Token(Token = "0x20005F9")]
	public abstract class MonoBehaviourObject : MonoBehaviour
	{
		[Token(Token = "0x170004B6")]
		public abstract object Object
		{
			[Token(Token = "0x6001E91")]
			get;
		}

		[Token(Token = "0x6001E92")]
		[Address(RVA = "0x1674514", Offset = "0x1674514", VA = "0x1674514")]
		protected MonoBehaviourObject()
		{
		}
	}
	[Token(Token = "0x20005FA")]
	public abstract class MonoBehaviourObject<T> : MonoBehaviourObject
	{
		[Token(Token = "0x4001BD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T _instance;

		[Token(Token = "0x170004B7")]
		public T Instance
		{
			[Token(Token = "0x6001E93")]
			get
			{
				return (T)null;
			}
		}

		[Token(Token = "0x170004B8")]
		public override object Object
		{
			[Token(Token = "0x6001E95")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001E94")]
		protected abstract T CreateInstance();

		[Token(Token = "0x6001E96")]
		protected MonoBehaviourObject()
		{
		}
	}
	[Token(Token = "0x20005FB")]
	public static class PassthroughExtensions
	{
		[Token(Token = "0x6001E97")]
		[Address(RVA = "0x167451C", Offset = "0x167451C", VA = "0x167451C")]
		public static void SetPassthroughEnabled(this IPlayerHandler playerHandler, bool value)
		{
		}

		[Token(Token = "0x6001E98")]
		[Address(RVA = "0x16749CC", Offset = "0x16749CC", VA = "0x16749CC")]
		public static bool IsPassthroughEnabled(this IPlayerHandler playerHandler)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E99")]
		[Address(RVA = "0x1674AEC", Offset = "0x1674AEC", VA = "0x1674AEC")]
		public static TweenerCore<float, float, FloatOptions> DoFade(this IPassthroughLayer passthroughLayer, float value, float duration)
		{
			return null;
		}
	}
	[Token(Token = "0x20005FD")]
	[CreateAssetMenu(fileName = "RuntimeBuildInfo", menuName = "Utilities/RuntimeBuildInfo")]
	public class RuntimeBuildInfo : ScriptableObject
	{
		[Token(Token = "0x4001BD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string _version;

		[Token(Token = "0x4001BD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private string _buildCode;

		[Token(Token = "0x170004B9")]
		public string Version
		{
			[Token(Token = "0x6001E9D")]
			[Address(RVA = "0x1674D98", Offset = "0x1674D98", VA = "0x1674D98")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004BA")]
		public string BuildCode
		{
			[Token(Token = "0x6001E9E")]
			[Address(RVA = "0x1674DA0", Offset = "0x1674DA0", VA = "0x1674DA0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001E9F")]
		[Address(RVA = "0x1674DA8", Offset = "0x1674DA8", VA = "0x1674DA8")]
		public RuntimeBuildInfo()
		{
		}
	}
	[Token(Token = "0x20005FE")]
	[CreateAssetMenu]
	public class SceneEnvironmentsScriptableObject : ScriptableObject
	{
		[Token(Token = "0x4001BD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<SceneField> SceneFields;

		[Token(Token = "0x6001EA0")]
		[Address(RVA = "0x1674DB0", Offset = "0x1674DB0", VA = "0x1674DB0")]
		public SceneEnvironmentsScriptableObject()
		{
		}
	}
	[Token(Token = "0x20005FF")]
	public static class SceneEnvironmentScriptableObjectExtensions
	{
		[Token(Token = "0x6001EA1")]
		[Address(RVA = "0x1674DB8", Offset = "0x1674DB8", VA = "0x1674DB8")]
		public static EnvironmentType? GetLoadedEnvironmentType(this SceneEnvironmentsScriptableObject environment)
		{
			return null;
		}

		[Token(Token = "0x6001EA2")]
		[Address(RVA = "0x1671BF0", Offset = "0x1671BF0", VA = "0x1671BF0")]
		public static UnityEngine.SceneManagement.Scene GetCurrentActiveAdditiveScene(this SceneEnvironmentsScriptableObject environment)
		{
			return default(UnityEngine.SceneManagement.Scene);
		}

		[Token(Token = "0x6001EA3")]
		[Address(RVA = "0x16750C8", Offset = "0x16750C8", VA = "0x16750C8")]
		public static AsyncOperation LoadEnvironmentAdditive(this SceneEnvironmentsScriptableObject environment, EnvironmentType enviromentType)
		{
			return null;
		}

		[Token(Token = "0x6001EA4")]
		[Address(RVA = "0x1675274", Offset = "0x1675274", VA = "0x1675274")]
		public static void UnloadAdditiveScenes(this SceneEnvironmentsScriptableObject environments)
		{
		}
	}
	[Token(Token = "0x2000605")]
	public abstract class ScriptableObject<T> : ScriptableObject
	{
		[Token(Token = "0x4001BDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T _instance;

		[Token(Token = "0x170004BB")]
		public T Instance
		{
			[Token(Token = "0x6001EB4")]
			get
			{
				return (T)null;
			}
		}

		[Token(Token = "0x6001EB5")]
		protected abstract T CreateInstance();

		[Token(Token = "0x6001EB6")]
		protected ScriptableObject()
		{
		}
	}
	[Token(Token = "0x2000606")]
	public class Singleton<T> : MonoBehaviour where T : Singleton<T>
	{
		[Token(Token = "0x4001BE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static T _instance;

		[Token(Token = "0x4001BE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool searchForInstance;

		[Token(Token = "0x170004BC")]
		public static T Instance
		{
			[Token(Token = "0x6001EB7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004BD")]
		public static bool IsInitialized
		{
			[Token(Token = "0x6001EB9")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001EB8")]
		public static void AssertIsInitialized()
		{
		}

		[Token(Token = "0x6001EBA")]
		public static bool ConfirmInitialized()
		{
			return default(bool);
		}

		[Token(Token = "0x6001EBB")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6001EBC")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6001EBD")]
		public Singleton()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000607")]
	public class SkinnedMeshRendererRaycastControllerSettings
	{
		[Token(Token = "0x4001BE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SkinnedMeshColliderComponent SkinnedColliderPrefab;

		[Token(Token = "0x4001BE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float MeshBakingInterval;

		[Token(Token = "0x4001BE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform AnimationRoot;

		[Token(Token = "0x4001BE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform UniverseRoot;

		[Token(Token = "0x4001BE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AnatomyConfiguration AnatomyConfiguration;

		[Token(Token = "0x6001EBF")]
		[Address(RVA = "0x1675750", Offset = "0x1675750", VA = "0x1675750")]
		public SkinnedMeshRendererRaycastControllerSettings()
		{
		}
	}
	[Token(Token = "0x2000608")]
	public static class SkinnedMeshColliderHelpers
	{
		[Token(Token = "0x6001EC0")]
		[Address(RVA = "0x1675764", Offset = "0x1675764", VA = "0x1675764")]
		public static void InitializeAnimationItemInstance(SkinnedMeshRendererRaycastControllerSettings settings, AnimationItemInstance animationItemInstance)
		{
		}
	}
	[Token(Token = "0x200060A")]
	public class StaticGameObjectSetter : MonoBehaviour
	{
		[Token(Token = "0x4001BE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _parent;

		[Token(Token = "0x4001BEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool _combineMeshes;

		[Token(Token = "0x6001EC4")]
		[Address(RVA = "0x1675DBC", Offset = "0x1675DBC", VA = "0x1675DBC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001EC5")]
		[Address(RVA = "0x1675E2C", Offset = "0x1675E2C", VA = "0x1675E2C")]
		public void SetStatic(bool val)
		{
		}

		[Token(Token = "0x6001EC6")]
		[Address(RVA = "0x1675EF4", Offset = "0x1675EF4", VA = "0x1675EF4")]
		public StaticGameObjectSetter()
		{
		}
	}
	[Token(Token = "0x200060B")]
	public struct TransformContainer
	{
		[Token(Token = "0x4001BEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 Position;

		[Token(Token = "0x4001BEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Quaternion Rotation;

		[Token(Token = "0x4001BED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 LocalPosition;

		[Token(Token = "0x4001BEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 LocalScale;

		[Token(Token = "0x4001BEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Quaternion LocalRotation;

		[Token(Token = "0x4001BF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Transform Parent;

		[Token(Token = "0x6001EC7")]
		[Address(RVA = "0x1672584", Offset = "0x1672584", VA = "0x1672584")]
		public TransformContainer(Transform transform)
		{
		}
	}
	[Token(Token = "0x200060C")]
	public class UnityServicesInitializer : MonoBehaviour
	{
		[StructLayout(3)]
		[Token(Token = "0x200060E")]
		[CompilerGenerated]
		private struct <Initialize>d__10 : IAsyncStateMachine
		{
			[Token(Token = "0x4001BF8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001BF9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4001BFA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string environment;

			[Token(Token = "0x4001BFB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public UnityServicesInitializer <>4__this;

			[Token(Token = "0x4001BFC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x6001ED1")]
			[Address(RVA = "0x16765D0", Offset = "0x16765D0", VA = "0x16765D0", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001ED2")]
			[Address(RVA = "0x16768B8", Offset = "0x16768B8", VA = "0x16768B8", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200060F")]
		[CompilerGenerated]
		private struct <CheckForRequiredConsents>d__11 : IAsyncStateMachine
		{
			[Token(Token = "0x4001BFD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001BFE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4001BFF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int interval;

			[Token(Token = "0x4001C00")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public CancellationToken cancellationToken;

			[Token(Token = "0x4001C01")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private bool <checkSuccessful>5__2;

			[Token(Token = "0x4001C02")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
			private bool <error>5__3;

			[Token(Token = "0x4001C03")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private TaskAwaiter<List<string>> <>u__1;

			[Token(Token = "0x4001C04")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private TaskAwaiter <>u__2;

			[Token(Token = "0x6001ED3")]
			[Address(RVA = "0x16768C4", Offset = "0x16768C4", VA = "0x16768C4", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001ED4")]
			[Address(RVA = "0x1676D0C", Offset = "0x1676D0C", VA = "0x1676D0C", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4001BF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private LicenseManagerBehaviour _licenseManagerBehaviour;

		[Token(Token = "0x4001BF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _loginTimeLimit;

		[Token(Token = "0x4001BF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private string[] _testLicenseHolderNames;

		[Token(Token = "0x4001BF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string _lastLicenseHolderName;

		[Token(Token = "0x4001BF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool _initializationRequested;

		[Token(Token = "0x4001BF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private readonly CancellationTokenSource _cancellationTokenSource;

		[Token(Token = "0x6001EC8")]
		[Address(RVA = "0x1675F04", Offset = "0x1675F04", VA = "0x1675F04")]
		private void Start()
		{
		}

		[Token(Token = "0x6001EC9")]
		[Address(RVA = "0x167605C", Offset = "0x167605C", VA = "0x167605C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001ECA")]
		[Address(RVA = "0x167608C", Offset = "0x167608C", VA = "0x167608C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001ECB")]
		[Address(RVA = "0x1676360", Offset = "0x1676360", VA = "0x1676360")]
		private string GetEnvironmentName(string licenseHolderName)
		{
			return null;
		}

		[Token(Token = "0x6001ECC")]
		[Address(RVA = "0x1675F88", Offset = "0x1675F88", VA = "0x1675F88")]
		[AsyncStateMachine(typeof(<Initialize>d__10))]
		private void Initialize(string environment)
		{
		}

		[Token(Token = "0x6001ECD")]
		[Address(RVA = "0x1676470", Offset = "0x1676470", VA = "0x1676470")]
		[AsyncStateMachine(typeof(<CheckForRequiredConsents>d__11))]
		private static void CheckForRequiredConsents(int interval, CancellationToken cancellationToken)
		{
		}

		[Token(Token = "0x6001ECE")]
		[Address(RVA = "0x1676534", Offset = "0x1676534", VA = "0x1676534")]
		public UnityServicesInitializer()
		{
		}
	}
	[Token(Token = "0x2000610")]
	public static class XrExtensions
	{
		[Token(Token = "0x4001C05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly List<XRInputSubsystem> XRInputSubsystems;

		[Token(Token = "0x6001ED5")]
		[Address(RVA = "0x1676D18", Offset = "0x1676D18", VA = "0x1676D18")]
		public static XRInputSubsystem GetCurrentInputSubsystem()
		{
			return null;
		}
	}
}
namespace Utilities.CameraFade
{
	[Token(Token = "0x2000611")]
	public static class DOTweenFaderExtensions
	{
		[Token(Token = "0x6001ED7")]
		[Address(RVA = "0x1676EC8", Offset = "0x1676EC8", VA = "0x1676EC8")]
		public static TweenerCore<float, float, FloatOptions> DOFade(this IFader fader, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6001ED8")]
		[Address(RVA = "0x1677078", Offset = "0x1677078", VA = "0x1677078")]
		public static TweenerCore<float, float, FloatOptions> DOFadeIn(this IFader fader, float duration)
		{
			return null;
		}

		[Token(Token = "0x6001ED9")]
		[Address(RVA = "0x1677084", Offset = "0x1677084", VA = "0x1677084")]
		public static TweenerCore<float, float, FloatOptions> DOFadeOut(this IFader fader, float duration)
		{
			return null;
		}
	}
	[Token(Token = "0x2000613")]
	public class FadeAggregator
	{
		[Token(Token = "0x2000614")]
		public class FadeAggregatorFader : IFader
		{
			[Token(Token = "0x4001C09")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public readonly FadeAggregator FadeAggregator;

			[Token(Token = "0x170004BF")]
			public float FadeAmount
			{
				[Token(Token = "0x6001EE1")]
				[Address(RVA = "0x1677470", Offset = "0x1677470", VA = "0x1677470", Slot = "4")]
				[CompilerGenerated]
				get
				{
					return default(float);
				}
				[Token(Token = "0x6001EE2")]
				[Address(RVA = "0x1677478", Offset = "0x1677478", VA = "0x1677478")]
				[CompilerGenerated]
				private set
				{
				}
			}

			[Token(Token = "0x6001EE3")]
			[Address(RVA = "0x16772C8", Offset = "0x16772C8", VA = "0x16772C8")]
			public FadeAggregatorFader(FadeAggregator fadeAggregator)
			{
			}

			[Token(Token = "0x6001EE4")]
			[Address(RVA = "0x1677480", Offset = "0x1677480", VA = "0x1677480", Slot = "5")]
			public void SetFadeAmount(float value)
			{
			}
		}

		[Token(Token = "0x4001C07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly Action<float> _setFadeAmount;

		[Token(Token = "0x4001C08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly List<FadeAggregatorFader> _registeredFaders;

		[Token(Token = "0x170004BE")]
		public IReadOnlyList<FadeAggregatorFader> RegisteredFaders
		{
			[Token(Token = "0x6001EDC")]
			[Address(RVA = "0x1677130", Offset = "0x1677130", VA = "0x1677130")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001EDD")]
		[Address(RVA = "0x1677138", Offset = "0x1677138", VA = "0x1677138")]
		public FadeAggregator(Action<float> setFadeAmount)
		{
		}

		[Token(Token = "0x6001EDE")]
		[Address(RVA = "0x16771DC", Offset = "0x16771DC", VA = "0x16771DC")]
		public FadeAggregatorFader CreateFader()
		{
			return null;
		}

		[Token(Token = "0x6001EDF")]
		[Address(RVA = "0x16772F8", Offset = "0x16772F8", VA = "0x16772F8")]
		public bool DestroyFader(FadeAggregatorFader fadeAggregatorFader)
		{
			return default(bool);
		}

		[Token(Token = "0x6001EE0")]
		[Address(RVA = "0x1677350", Offset = "0x1677350", VA = "0x1677350")]
		private void UpdateFadeAmount()
		{
		}
	}
	[Token(Token = "0x2000616")]
	public interface IFader
	{
		[Token(Token = "0x170004C0")]
		float FadeAmount
		{
			[Token(Token = "0x6001EE8")]
			get;
		}

		[Token(Token = "0x6001EE9")]
		void SetFadeAmount(float value);
	}
}
namespace Modules
{
	[Token(Token = "0x2000617")]
	public class AnatomyHideModule<TCollection, TInstance> : IHideModule<TInstance> where TCollection : IInstanceCollection<TInstance> where TInstance : IHideable, IAnatomyItemInstance
	{
		[Token(Token = "0x4001C0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IInstanceProvider<TCollection> _instanceProvider;

		[Token(Token = "0x4001C0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly HashSet<TInstance> _hiddenObjects;

		[Token(Token = "0x170004C1")]
		public IReadOnlyCollection<TInstance> HiddenObjects
		{
			[Token(Token = "0x6001EEA")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001EEB")]
		public AnatomyHideModule(IInstanceProvider<TCollection> instanceProvider)
		{
		}

		[Token(Token = "0x6001EEC")]
		public void SetHidden(TInstance hideable, bool value)
		{
		}
	}
	[Token(Token = "0x2000618")]
	public class AnatomyInstanceProvider<TCollection, TCollectionImpl> : IInstanceProvider<TCollection>, IInstanceProvider where TCollectionImpl : TCollection
	{
		[Token(Token = "0x2000619")]
		public class InstanceCollection
		{
			[Token(Token = "0x4001C15")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public TCollectionImpl Collection;

			[Token(Token = "0x4001C16")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool Initialized;

			[Token(Token = "0x6001EFC")]
			public InstanceCollection()
			{
			}
		}

		[Token(Token = "0x200061A")]
		[CompilerGenerated]
		private sealed class <Yield>d__18<T> : IEnumerable<T>, IEnumerable, IEnumerator<T>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001C17")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x4001C18")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private T <>2__current;

			[Token(Token = "0x4001C19")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4001C1A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private T item;

			[Token(Token = "0x4001C1B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T <>3__item;

			[Token(Token = "0x170004C5")]
			private T System.Collections.Generic.IEnumerator<T>.Current
			{
				[Token(Token = "0x6001F00")]
				[DebuggerHidden]
				get
				{
					return (T)null;
				}
			}

			[Token(Token = "0x170004C6")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001F02")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001EFD")]
			[DebuggerHidden]
			public <Yield>d__18(int <>1__state)
			{
			}

			[Token(Token = "0x6001EFE")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001EFF")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001F01")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6001F03")]
			[DebuggerHidden]
			private IEnumerator<T> System.Collections.Generic.IEnumerable<T>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6001F04")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200061B")]
		[CompilerGenerated]
		private struct <RequestInstance>d__20 : IAsyncStateMachine
		{
			[Token(Token = "0x4001C1C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001C1D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public AsyncTaskMethodBuilder<TCollection> <>t__builder;

			[Token(Token = "0x4001C1E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public AnatomyInstanceProvider<TCollection, TCollectionImpl> <>4__this;

			[Token(Token = "0x4001C1F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string id;

			[Token(Token = "0x4001C20")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private Task<IEnumerable<LoadedAsset<ItemMeshDatabase>>> <meshTask>5__2;

			[Token(Token = "0x4001C21")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private Task<IEnumerable<LoadedAsset<ItemMaterialDatabase>>> <materialTask>5__3;

			[Token(Token = "0x4001C22")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x6001F05")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001F06")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200061C")]
		[CompilerGenerated]
		private struct <RequestInstances>d__21 : IAsyncStateMachine
		{
			[Token(Token = "0x4001C23")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001C24")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public AsyncTaskMethodBuilder<IEnumerable<TCollection>> <>t__builder;

			[Token(Token = "0x4001C25")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IEnumerable<string> ids;

			[Token(Token = "0x4001C26")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public AnatomyInstanceProvider<TCollection, TCollectionImpl> <>4__this;

			[Token(Token = "0x4001C27")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private string[] <spawnableIds>5__2;

			[Token(Token = "0x4001C28")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private Task<IEnumerable<LoadedAsset<ItemMeshDatabase>>> <meshesTask>5__3;

			[Token(Token = "0x4001C29")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private Task<IEnumerable<LoadedAsset<ItemMaterialDatabase>>> <materialsTask>5__4;

			[Token(Token = "0x4001C2A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private TCollection[] <anatomyItemInstanceCollections>5__5;

			[Token(Token = "0x4001C2B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private LoadedAsset<ItemMeshDatabase>[] <meshes>5__6;

			[Token(Token = "0x4001C2C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private LoadedAsset<ItemMaterialDatabase>[] <materials>5__7;

			[Token(Token = "0x4001C2D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x4001C2E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <i>5__8;

			[Token(Token = "0x4001C2F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private YieldAwaitable.YieldAwaiter <>u__2;

			[Token(Token = "0x6001F07")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001F08")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4001C0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly Dictionary<string, InstanceCollection> _instances;

		[Token(Token = "0x4001C10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IAssetInstanceProvider<ItemMeshDatabase> _itemMeshAssetInstanceProvider;

		[Token(Token = "0x4001C11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IAssetInstanceProvider<ItemMaterialDatabase> _itemMaterialAssetInstanceProvider;

		[Token(Token = "0x4001C12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public readonly IAnatomyInstanceFactory<TCollectionImpl> AnatomyInstanceFactory;

		[Token(Token = "0x170004C2")]
		public bool ReleaseMeshes
		{
			[Token(Token = "0x6001EED")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001EEE")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170004C3")]
		public bool ReleaseMaterials
		{
			[Token(Token = "0x6001EEF")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001EF0")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170004C4")]
		public System.Collections.Generic.IReadOnlyDictionary<string, InstanceCollection> Instances
		{
			[Token(Token = "0x6001EF1")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001EF2")]
		public AnatomyInstanceProvider(IAssetInstanceProvider<ItemMeshDatabase> itemMeshAssetInstanceProvider, IAssetInstanceProvider<ItemMaterialDatabase> itemMaterialAssetInstanceProvider, IAnatomyInstanceFactory<TCollectionImpl> anatomyInstanceFactory, System.Collections.Generic.IReadOnlyDictionary<string, TCollectionImpl> instances)
		{
		}

		[Token(Token = "0x6001EF3")]
		public void SetInstances(System.Collections.Generic.IReadOnlyDictionary<string, TCollectionImpl> instances)
		{
		}

		[Token(Token = "0x6001EF4")]
		public void ReleaseInstances(IEnumerable<string> ids)
		{
		}

		[Token(Token = "0x6001EF5")]
		[IteratorStateMachine(typeof(<Yield>d__18<>))]
		public static IEnumerable<T> Yield<T>(T item)
		{
			return null;
		}

		[Token(Token = "0x6001EF6")]
		public bool IsInstanceInitialized(string id)
		{
			return default(bool);
		}

		[Token(Token = "0x6001EF7")]
		[AsyncStateMachine(typeof(AnatomyInstanceProvider<, >.<RequestInstance>d__20))]
		public Task<TCollection> RequestInstance(string id)
		{
			return null;
		}

		[Token(Token = "0x6001EF8")]
		[AsyncStateMachine(typeof(AnatomyInstanceProvider<, >.<RequestInstances>d__21))]
		public Task<IEnumerable<TCollection>> RequestInstances(IEnumerable<string> ids)
		{
			return null;
		}

		[Token(Token = "0x6001EF9")]
		public TCollection GetInstance(string id)
		{
			return (TCollection)null;
		}

		[Token(Token = "0x6001EFA")]
		public IEnumerable<TCollection> GetInstances(IEnumerable<string> ids)
		{
			return null;
		}

		[Token(Token = "0x6001EFB")]
		private TCollection GetOrInitializeInstance(string id, ItemMeshDatabase itemMeshDatabase, ItemMaterialDatabase itemMaterialDatabase, out bool wasInitialized)
		{
			return (TCollection)null;
		}
	}
	[Token(Token = "0x200061F")]
	public class AnatomyInstanceResolver<TCollection, TInstance> : IResolver<TInstance, int> where TCollection : IInstanceCollection<TInstance> where TInstance : class, IAnatomyItemInstance
	{
		[Token(Token = "0x4001C36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IInstanceProvider<TCollection> _instanceProvider;

		[Token(Token = "0x4001C37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IAnatomyDatabase _anatomyDatabase;

		[Token(Token = "0x6001F0F")]
		public AnatomyInstanceResolver(IInstanceProvider<TCollection> instanceProvider, IAnatomyDatabase anatomyDatabase)
		{
		}

		[Token(Token = "0x6001F10")]
		public int GetId(TInstance obj)
		{
			return default(int);
		}

		[Token(Token = "0x6001F11")]
		public TInstance ResolveFromId(int obj)
		{
			return null;
		}
	}
	[Token(Token = "0x2000620")]
	public interface IAnimationObjectInstance
	{
		[Token(Token = "0x170004C7")]
		string Id
		{
			[Token(Token = "0x6001F12")]
			get;
		}
	}
	[Token(Token = "0x2000621")]
	public class AnimationInstanceResolver<T> : IResolver<T, string> where T : IAnimationObjectInstance
	{
		[Token(Token = "0x4001C38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IAnimationModule<AnimationItemInstance> _animationModule;

		[Token(Token = "0x6001F13")]
		public AnimationInstanceResolver(IAnimationModule<AnimationItemInstance> animationModule)
		{
		}

		[Token(Token = "0x6001F14")]
		public string GetId(T obj)
		{
			return null;
		}

		[Token(Token = "0x6001F15")]
		public T ResolveFromId(string obj)
		{
			return (T)null;
		}
	}
	[Token(Token = "0x2000622")]
	public class CountLimitedSystemsModule : ICountLimitedSystemsModule, ISystemsModule, ILocationModule
	{
		[StructLayout(3)]
		[Token(Token = "0x2000623")]
		[CompilerGenerated]
		private struct <SetSystemActiveAsync>d__18 : IAsyncStateMachine
		{
			[Token(Token = "0x4001C3D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001C3E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4001C3F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CountLimitedSystemsModule <>4__this;

			[Token(Token = "0x4001C40")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool value;

			[Token(Token = "0x4001C41")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public Database.SystemType systemType;

			[Token(Token = "0x4001C42")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x6001F25")]
			[Address(RVA = "0x16782B0", Offset = "0x16782B0", VA = "0x16782B0", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001F26")]
			[Address(RVA = "0x16787C8", Offset = "0x16787C8", VA = "0x16787C8", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000624")]
		[CompilerGenerated]
		private struct <SetSystemsActiveAsync>d__19 : IAsyncStateMachine
		{
			[Token(Token = "0x4001C43")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001C44")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4001C45")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public IEnumerable<Database.SystemType> systems;

			[Token(Token = "0x4001C46")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public CountLimitedSystemsModule <>4__this;

			[Token(Token = "0x4001C47")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public bool value;

			[Token(Token = "0x4001C48")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x6001F27")]
			[Address(RVA = "0x16787D4", Offset = "0x16787D4", VA = "0x16787D4", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001F28")]
			[Address(RVA = "0x1678EB0", Offset = "0x1678EB0", VA = "0x1678EB0", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000625")]
		[CompilerGenerated]
		private struct <SetDatabaseTypeAsync>d__20 : IAsyncStateMachine
		{
			[Token(Token = "0x4001C49")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001C4A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4001C4B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CountLimitedSystemsModule <>4__this;

			[Token(Token = "0x4001C4C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public DatabaseType databaseType;

			[Token(Token = "0x4001C4D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x6001F29")]
			[Address(RVA = "0x1678EBC", Offset = "0x1678EBC", VA = "0x1678EBC", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001F2A")]
			[Address(RVA = "0x1679164", Offset = "0x1679164", VA = "0x1679164", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000626")]
		[CompilerGenerated]
		private struct <SetLocationTypeAsync>d__21 : IAsyncStateMachine
		{
			[Token(Token = "0x4001C4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001C4F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4001C50")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CountLimitedSystemsModule <>4__this;

			[Token(Token = "0x4001C51")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public LocationType value;

			[Token(Token = "0x4001C52")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x6001F2B")]
			[Address(RVA = "0x1679170", Offset = "0x1679170", VA = "0x1679170", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001F2C")]
			[Address(RVA = "0x1679424", Offset = "0x1679424", VA = "0x1679424", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000627")]
		[CompilerGenerated]
		private struct <SetLocationsEnabled>d__22 : IAsyncStateMachine
		{
			[Token(Token = "0x4001C53")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001C54")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4001C55")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CountLimitedSystemsModule <>4__this;

			[Token(Token = "0x4001C56")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool value;

			[Token(Token = "0x4001C57")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x6001F2D")]
			[Address(RVA = "0x1679430", Offset = "0x1679430", VA = "0x1679430", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001F2E")]
			[Address(RVA = "0x16796E8", Offset = "0x16796E8", VA = "0x16796E8", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000628")]
		[CompilerGenerated]
		private struct <SetMaxSystemCount>d__23 : IAsyncStateMachine
		{
			[Token(Token = "0x4001C58")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001C59")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4001C5A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int value;

			[Token(Token = "0x4001C5B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public CountLimitedSystemsModule <>4__this;

			[Token(Token = "0x4001C5C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x6001F2F")]
			[Address(RVA = "0x16796F4", Offset = "0x16796F4", VA = "0x16796F4", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001F30")]
			[Address(RVA = "0x1679AC0", Offset = "0x1679AC0", VA = "0x1679AC0", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4001C39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly ISystemsModule _systemsModule;

		[Token(Token = "0x4001C3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly ILocationModule _locationModule;

		[Token(Token = "0x4001C3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly LinkedList<Database.SystemType> _systemsQueue;

		[Token(Token = "0x170004C8")]
		public IReadOnlyCollection<Database.SystemType> ActiveSystems
		{
			[Token(Token = "0x6001F16")]
			[Address(RVA = "0x1677530", Offset = "0x1677530", VA = "0x1677530", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004C9")]
		public DatabaseType ActiveDatabaseType
		{
			[Token(Token = "0x6001F17")]
			[Address(RVA = "0x16775D0", Offset = "0x16775D0", VA = "0x16775D0", Slot = "8")]
			get
			{
				return default(DatabaseType);
			}
		}

		[Token(Token = "0x170004CA")]
		public IReadOnlyCollection<Database.SystemType> SystemsQueue
		{
			[Token(Token = "0x6001F18")]
			[Address(RVA = "0x1677674", Offset = "0x1677674", VA = "0x1677674", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004CB")]
		public int MaxSystemCount
		{
			[Token(Token = "0x6001F19")]
			[Address(RVA = "0x167767C", Offset = "0x167767C", VA = "0x167767C", Slot = "5")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001F1A")]
			[Address(RVA = "0x1677684", Offset = "0x1677684", VA = "0x1677684")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170004CC")]
		public LocationType ActiveLocationType
		{
			[Token(Token = "0x6001F1B")]
			[Address(RVA = "0x167768C", Offset = "0x167768C", VA = "0x167768C", Slot = "12")]
			get
			{
				return default(LocationType);
			}
		}

		[Token(Token = "0x170004CD")]
		public bool LocationsEnabled
		{
			[Token(Token = "0x6001F1C")]
			[Address(RVA = "0x167772C", Offset = "0x167772C", VA = "0x167772C", Slot = "14")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001F1D")]
		[Address(RVA = "0x16777D0", Offset = "0x16777D0", VA = "0x16777D0")]
		public CountLimitedSystemsModule(ISystemsModule systemsModule, ILocationModule locationModule)
		{
		}

		[Token(Token = "0x6001F1E")]
		[Address(RVA = "0x1677888", Offset = "0x1677888", VA = "0x1677888", Slot = "9")]
		[AsyncStateMachine(typeof(<SetSystemActiveAsync>d__18))]
		public Task SetSystemActiveAsync(Database.SystemType systemType, bool value)
		{
			return null;
		}

		[Token(Token = "0x6001F1F")]
		[Address(RVA = "0x1677990", Offset = "0x1677990", VA = "0x1677990", Slot = "10")]
		[AsyncStateMachine(typeof(<SetSystemsActiveAsync>d__19))]
		public Task SetSystemsActiveAsync(IEnumerable<Database.SystemType> systems, bool value)
		{
			return null;
		}

		[Token(Token = "0x6001F20")]
		[Address(RVA = "0x1677AA0", Offset = "0x1677AA0", VA = "0x1677AA0", Slot = "11")]
		[AsyncStateMachine(typeof(<SetDatabaseTypeAsync>d__20))]
		public Task SetDatabaseTypeAsync(DatabaseType databaseType)
		{
			return null;
		}

		[Token(Token = "0x6001F21")]
		[Address(RVA = "0x1677B98", Offset = "0x1677B98", VA = "0x1677B98", Slot = "13")]
		[AsyncStateMachine(typeof(<SetLocationTypeAsync>d__21))]
		public Task SetLocationTypeAsync(LocationType value)
		{
			return null;
		}

		[Token(Token = "0x6001F22")]
		[Address(RVA = "0x1677C90", Offset = "0x1677C90", VA = "0x1677C90", Slot = "15")]
		[AsyncStateMachine(typeof(<SetLocationsEnabled>d__22))]
		public Task SetLocationsEnabled(bool value)
		{
			return null;
		}

		[Token(Token = "0x6001F23")]
		[Address(RVA = "0x1677D88", Offset = "0x1677D88", VA = "0x1677D88", Slot = "6")]
		[AsyncStateMachine(typeof(<SetMaxSystemCount>d__23))]
		public Task SetMaxSystemCount(int value)
		{
			return null;
		}

		[Token(Token = "0x6001F24")]
		[Address(RVA = "0x1677E80", Offset = "0x1677E80", VA = "0x1677E80")]
		public static void EnsureSystemsQueueIntegrity(LinkedList<Database.SystemType> systemsQueue, IReadOnlyCollection<Database.SystemType> activeSystems)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000629")]
	public class DatabaseTypeSettings
	{
		[Token(Token = "0x4001C5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform Transform;

		[Token(Token = "0x4001C5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public DatabaseType DatabaseType;

		[Token(Token = "0x6001F31")]
		[Address(RVA = "0x1679ACC", Offset = "0x1679ACC", VA = "0x1679ACC")]
		public DatabaseTypeSettings()
		{
		}
	}
	[Token(Token = "0x200062A")]
	public class HideModule<T> : IHideModule<T> where T : IHideable
	{
		[Token(Token = "0x4001C5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public readonly HashSet<T> HiddenObjects;

		[Token(Token = "0x170004CE")]
		private IReadOnlyCollection<T> Modules.IHideModule<T>.HiddenObjects
		{
			[Token(Token = "0x6001F32")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001F33")]
		public void SetHidden(T obj, bool value)
		{
		}

		[Token(Token = "0x6001F34")]
		public HideModule()
		{
		}
	}
	[Token(Token = "0x200062B")]
	public interface IAnatomyInstanceFactory<TCollection>
	{
		[Token(Token = "0x6001F35")]
		TCollection CreateCollection(SystemGroup systemGroup, LocationType locationType, GameObject gameObject);

		[Token(Token = "0x6001F36")]
		void CreateInstance(TCollection collection, AnatomyItem anatomyItem, System.Collections.Generic.IReadOnlyDictionary<string, ItemPoseData> itemPoseDatas);

		[Token(Token = "0x6001F37")]
		void InitializeCollection(TCollection collection, System.Collections.Generic.IReadOnlyDictionary<string, Mesh> meshes, ItemMaterialDatabase itemMaterialDatabase);

		[Token(Token = "0x6001F38")]
		void ReleaseCollection(TCollection collection, bool releaseMeshes, bool releaseMaterials);
	}
	[Serializable]
	[Token(Token = "0x200062C")]
	public class AnatomyInstanceProviderSettings
	{
		[Token(Token = "0x4001C60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<DatabaseTypeSettings> DatabaseTypeSettings;

		[Token(Token = "0x6001F39")]
		[Address(RVA = "0x1679AD4", Offset = "0x1679AD4", VA = "0x1679AD4")]
		public AnatomyInstanceProviderSettings()
		{
		}
	}
	[Token(Token = "0x200062D")]
	public static class AnatomyInstanceFactoryExtensions
	{
		[Token(Token = "0x6001F3A")]
		[Address(RVA = "0x1679ADC", Offset = "0x1679ADC", VA = "0x1679ADC")]
		public static void DestroyHierarchy(AnatomyInstanceProviderSettings settings)
		{
		}

		[Token(Token = "0x6001F3B")]
		public static Dictionary<string, TCollection> CreateHierarchy<TCollection>(this IAnatomyInstanceFactory<TCollection> anatomyInstanceFactory, IAnatomyDatabase anatomyDatabase, AnatomyInstanceProviderSettings settings, System.Collections.Generic.IReadOnlyDictionary<DatabaseType, System.Collections.Generic.IReadOnlyDictionary<string, ItemPoseData>> poseData)
		{
			return null;
		}
	}
	[Token(Token = "0x200062F")]
	public interface IAnimationModule<out T>
	{
		[Token(Token = "0x170004CF")]
		T ActiveAnimation
		{
			[Token(Token = "0x6001F40")]
			get;
		}

		[Token(Token = "0x170004D0")]
		float AnimationTime
		{
			[Token(Token = "0x6001F41")]
			get;
		}

		[Token(Token = "0x170004D1")]
		float AnimationSpeed
		{
			[Token(Token = "0x6001F42")]
			get;
		}

		[Token(Token = "0x6001F43")]
		Task SetActiveAnimation(string value);

		[Token(Token = "0x6001F44")]
		void SetAnimationSpeed(float val);

		[Token(Token = "0x6001F45")]
		void SetAnimationTime(float val);
	}
	[Token(Token = "0x2000630")]
	public interface ICountLimitedSystemsModule
	{
		[Token(Token = "0x170004D2")]
		IReadOnlyCollection<Database.SystemType> SystemsQueue
		{
			[Token(Token = "0x6001F46")]
			get;
		}

		[Token(Token = "0x170004D3")]
		int MaxSystemCount
		{
			[Token(Token = "0x6001F47")]
			get;
		}

		[Token(Token = "0x6001F48")]
		Task SetMaxSystemCount(int value);
	}
	[Token(Token = "0x2000631")]
	public interface IFadeModule<T>
	{
		[Token(Token = "0x170004D4")]
		IReadOnlyCollection<T> FadedObjects
		{
			[Token(Token = "0x6001F49")]
			get;
		}

		[Token(Token = "0x6001F4A")]
		void SetFaded(T obj, bool value);
	}
	[Token(Token = "0x2000632")]
	public static class FadeModuleExtensions
	{
		[Token(Token = "0x6001F4B")]
		public static void Reset<T>(this IFadeModule<T> module)
		{
		}
	}
	[Token(Token = "0x2000633")]
	public interface IHideModule<T>
	{
		[Token(Token = "0x170004D5")]
		IReadOnlyCollection<T> HiddenObjects
		{
			[Token(Token = "0x6001F4C")]
			get;
		}

		[Token(Token = "0x6001F4D")]
		void SetHidden(T hideable, bool value);
	}
	[Token(Token = "0x2000634")]
	public static class HideModuleExtensions
	{
		[Token(Token = "0x6001F4E")]
		public static void Reset<T>(this IHideModule<T> module)
		{
		}
	}
	[Token(Token = "0x2000635")]
	public interface IInstanceCollectionModule<T>
	{
		[Token(Token = "0x170004D6")]
		System.Collections.Generic.IReadOnlyDictionary<string, int> InstanceCollectionReferenceCount
		{
			[Token(Token = "0x6001F4F")]
			get;
		}

		[Token(Token = "0x14000060")]
		event Action<T, bool> InstanceCollectionSetActive;

		[Token(Token = "0x6001F50")]
		void SetInstancesActive(IEnumerable<T> instances, bool value);
	}
	[Token(Token = "0x2000636")]
	public interface ISystemsModule
	{
		[Token(Token = "0x170004D7")]
		IReadOnlyCollection<Database.SystemType> ActiveSystems
		{
			[Token(Token = "0x6001F53")]
			get;
		}

		[Token(Token = "0x170004D8")]
		DatabaseType ActiveDatabaseType
		{
			[Token(Token = "0x6001F54")]
			get;
		}

		[Token(Token = "0x6001F55")]
		Task SetSystemActiveAsync(Database.SystemType systemType, bool value);

		[Token(Token = "0x6001F56")]
		Task SetSystemsActiveAsync(IEnumerable<Database.SystemType> systems, bool value);

		[Token(Token = "0x6001F57")]
		Task SetDatabaseTypeAsync(DatabaseType databaseType);
	}
	[Token(Token = "0x2000637")]
	public interface ISystemsModuleEvents
	{
		[Token(Token = "0x14000061")]
		event Action<IReadOnlyCollection<Database.SystemType>, DatabaseType, LocationType, bool> SystemsSetActiveStarted;

		[Token(Token = "0x14000062")]
		event Func<IReadOnlyCollection<Database.SystemType>, DatabaseType, LocationType, bool, Task> SystemsSetActiveCompleted;
	}
	[Token(Token = "0x2000638")]
	public interface ILevelModule
	{
		[Token(Token = "0x170004D9")]
		System.Collections.Generic.IReadOnlyDictionary<Database.SystemType, int> SystemStructureLevels
		{
			[Token(Token = "0x6001F5C")]
			get;
		}

		[Token(Token = "0x6001F5D")]
		void UpdateStructureLevel(Database.SystemType system, int level);
	}
	[Token(Token = "0x2000639")]
	public interface IMemoryManagementModule
	{
		[Token(Token = "0x6001F5E")]
		void ReleaseSystems(DatabaseType databaseType);

		[Token(Token = "0x6001F5F")]
		void ReleaseSystems(IEnumerable<Database.SystemType> systemTypes, DatabaseType databaseType);
	}
	[Token(Token = "0x200063A")]
	public interface ISystemPart
	{
		[Token(Token = "0x170004DA")]
		string StringId
		{
			[Token(Token = "0x6001F60")]
			get;
		}

		[Token(Token = "0x170004DB")]
		GameObject GameObject
		{
			[Token(Token = "0x6001F61")]
			get;
		}
	}
	[Token(Token = "0x200063B")]
	public class InstanceCollectionModule<T> : IInstanceCollectionModule<T> where T : ISystemPart
	{
		[Token(Token = "0x4001C64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly Dictionary<string, int> _spawnableReferencesCount;

		[Token(Token = "0x170004DC")]
		public System.Collections.Generic.IReadOnlyDictionary<string, int> InstanceCollectionReferenceCount
		{
			[Token(Token = "0x6001F62")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x14000063")]
		public event Action<T, bool> InstanceCollectionSetActive
		{
			[Token(Token = "0x6001F63")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001F64")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6001F65")]
		public InstanceCollectionModule()
		{
		}

		[Token(Token = "0x6001F66")]
		public void SetInstancesActive(IEnumerable<T> instances, bool value)
		{
		}

		[Token(Token = "0x6001F67")]
		private int GetSpawnableReferenceCount(string id)
		{
			return default(int);
		}
	}
	[Token(Token = "0x200063C")]
	public interface IPresentationModule<T>
	{
		[Token(Token = "0x170004DD")]
		T Object
		{
			[Token(Token = "0x6001F68")]
			get;
		}

		[Token(Token = "0x6001F69")]
		void SetObject(T value);
	}
	[Token(Token = "0x200063D")]
	public interface IAnswer
	{
		[Token(Token = "0x170004DE")]
		string ParticipantId
		{
			[Token(Token = "0x6001F6A")]
			get;
		}

		[Token(Token = "0x170004DF")]
		byte QuestionId
		{
			[Token(Token = "0x6001F6B")]
			get;
		}

		[Token(Token = "0x170004E0")]
		bool[] SelectedAnswers
		{
			[Token(Token = "0x6001F6C")]
			get;
		}
	}
	[Token(Token = "0x200063E")]
	public interface IQuizModule
	{
		[Token(Token = "0x170004E1")]
		Quiz ActiveQuiz
		{
			[Token(Token = "0x6001F6D")]
			get;
		}

		[Token(Token = "0x170004E2")]
		double ActiveQuizDuration
		{
			[Token(Token = "0x6001F6E")]
			get;
		}

		[Token(Token = "0x170004E3")]
		bool QuizBegun
		{
			[Token(Token = "0x6001F6F")]
			get;
		}

		[Token(Token = "0x6001F70")]
		Task BeginActiveQuiz(CancellationToken cancellationToken);

		[Token(Token = "0x6001F71")]
		Task SetAnswer(byte questionId, IReadOnlyList<bool> selectedAnswers, CancellationToken cancellationToken);

		[Token(Token = "0x6001F72")]
		Task<IEnumerable<IAnswer>> GetAnswersOfLocalParticipant(CancellationToken cancellationToken);

		[Token(Token = "0x6001F73")]
		Task<IEnumerable<IAnswer>> GetAnswersOfAllParticipants(CancellationToken cancellationToken);

		[Token(Token = "0x6001F74")]
		Task<IEnumerable<IAnswer>> GetAnswersOfParticipant(string participantId, CancellationToken cancellationToken);

		[Token(Token = "0x6001F75")]
		Task SetActiveQuiz(Quiz quiz, CancellationToken cancellationToken);
	}
	[Token(Token = "0x200063F")]
	public interface ISelectionModule<T>
	{
		[Token(Token = "0x170004E4")]
		T SelectedObject
		{
			[Token(Token = "0x6001F76")]
			get;
		}

		[Token(Token = "0x6001F77")]
		Task SetSelectedObject(T value, CancellationToken cancellationToken);
	}
	[Token(Token = "0x2000640")]
	public interface ISubpartTypeModule
	{
		[Token(Token = "0x170004E5")]
		SubpartType ActiveSubpartType
		{
			[Token(Token = "0x6001F78")]
			get;
		}

		[Token(Token = "0x6001F79")]
		void SetSubpartType(SubpartType subpartType);
	}
	[Token(Token = "0x2000641")]
	public interface ISystemInfoModule
	{
		[Token(Token = "0x170004E6")]
		int SystemMemorySize
		{
			[Token(Token = "0x6001F7A")]
			get;
		}

		[Token(Token = "0x14000064")]
		event Action LowMemory;
	}
	[Token(Token = "0x2000642")]
	public interface ILevelable
	{
		[Token(Token = "0x170004E7")]
		bool IsLeveled
		{
			[Token(Token = "0x6001F7D")]
			get;
		}

		[Token(Token = "0x6001F7E")]
		void SetLeveled(bool value);
	}
	[Token(Token = "0x2000643")]
	public interface ILevelableCollection<out T> where T : ILevelable
	{
		[Token(Token = "0x170004E8")]
		SystemGroup SystemGroup
		{
			[Token(Token = "0x6001F80")]
			get;
		}

		[Token(Token = "0x6001F7F")]
		IEnumerable<T> GetAllInstances();
	}
	[Token(Token = "0x2000644")]
	public class LevelModule<TCollection, TInstance> : IDisposable, ILevelModule where TCollection : ILevelableCollection<TInstance> where TInstance : ILevelable, IAnatomyItemInstance
	{
		[Token(Token = "0x4001C66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly Dictionary<Database.SystemType, int> _systemStructureLevels;

		[Token(Token = "0x4001C67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IInstanceProvider<TCollection> _instanceProvider;

		[Token(Token = "0x4001C68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IAnatomyDatabase _anatomyDatabase;

		[Token(Token = "0x4001C69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly ISystemsModuleEvents _systemsModuleEvents;

		[Token(Token = "0x4001C6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IInstanceCollectionModule<TCollection> _instanceCollectionModule;

		[Token(Token = "0x4001C6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly ISystemsModule _systemsModule;

		[Token(Token = "0x4001C6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly ILocationModule _locationModule;

		[Token(Token = "0x170004E9")]
		public System.Collections.Generic.IReadOnlyDictionary<Database.SystemType, int> SystemStructureLevels
		{
			[Token(Token = "0x6001F81")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001F82")]
		public LevelModule(IInstanceProvider<TCollection> instanceProvider, IAnatomyDatabase anatomyDatabase, ISystemsModuleEvents systemsModuleEvents, IInstanceCollectionModule<TCollection> instanceCollectionModule, ISystemsModule systemsModule, ILocationModule locationModule)
		{
		}

		[Token(Token = "0x6001F83")]
		private Task OnSystemsSetActiveCompleted(IReadOnlyCollection<Database.SystemType> systemTypes, DatabaseType databaseType, LocationType locationType, bool value)
		{
			return null;
		}

		[Token(Token = "0x6001F84")]
		private static void OnInstanceCollectionSetActive(TCollection instanceCollection, bool value)
		{
		}

		[Token(Token = "0x6001F85")]
		public void UpdateStructureLevel(Database.SystemType system, int level)
		{
		}

		[Token(Token = "0x6001F86")]
		public void Dispose()
		{
		}

		[Token(Token = "0x6001F87")]
		public bool IsLeveledForSystem(TInstance instance, IReadOnlyCollection<Database.SystemType> activeSystems, Database.SystemType system, int level)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000648")]
	public class MemoryManagementModule<TCollection> : IMemoryManagementModule
	{
		[Token(Token = "0x4001C82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IInstanceProvider<TCollection> _instanceProvider;

		[Token(Token = "0x4001C83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IInstanceCollectionModule<TCollection> _instanceModule;

		[Token(Token = "0x4001C84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IAnatomyDatabase _anatomyDatabase;

		[Token(Token = "0x170004EA")]
		public IReadOnlyCollection<string> IdsToIgnore
		{
			[Token(Token = "0x6001F9E")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001F9F")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170004EB")]
		public bool UnloadUnusedAssets
		{
			[Token(Token = "0x6001FA0")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001FA1")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6001FA2")]
		public MemoryManagementModule(IInstanceProvider<TCollection> instanceProvider, IInstanceCollectionModule<TCollection> instanceModule, IAnatomyDatabase anatomyDatabase)
		{
		}

		[Token(Token = "0x6001FA3")]
		public void ReleaseSystems(DatabaseType databaseType)
		{
		}

		[Token(Token = "0x6001FA4")]
		public void ReleaseSystems(IEnumerable<Database.SystemType> systemTypes, DatabaseType databaseType)
		{
		}

		[Token(Token = "0x6001FA5")]
		private void ReleaseSystems(IEnumerable<AnatomySystem> anatomySystems)
		{
		}
	}
	[Token(Token = "0x200064B")]
	public class ModuleProvider : IModuleProvider
	{
		[Token(Token = "0x4001C8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly Dictionary<Type, object> _modules;

		[Token(Token = "0x4001C8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly HashSet<Type> ReservedTypes;

		[Token(Token = "0x170004EC")]
		public System.Collections.Generic.IReadOnlyDictionary<Type, object> Modules
		{
			[Token(Token = "0x6001FAE")]
			[Address(RVA = "0x1679F24", Offset = "0x1679F24", VA = "0x1679F24")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001FAF")]
		[Address(RVA = "0x1679F2C", Offset = "0x1679F2C", VA = "0x1679F2C")]
		public ModuleProvider()
		{
		}

		[Token(Token = "0x6001FB0")]
		[Address(RVA = "0x1679FB4", Offset = "0x1679FB4", VA = "0x1679FB4")]
		public void RegisterModule(object module)
		{
		}

		[Token(Token = "0x6001FB1")]
		public void RegisterModule<T>(object module)
		{
		}

		[Token(Token = "0x6001FB2")]
		[Address(RVA = "0x167A394", Offset = "0x167A394", VA = "0x167A394")]
		public void RegisterModule(Type type, object module)
		{
		}

		[Token(Token = "0x6001FB3")]
		public T GetModule<T>() where T : class
		{
			return null;
		}
	}
	[Token(Token = "0x200064D")]
	public class SceneManager<T> : ISceneManager<T>
	{
		[Token(Token = "0x4001C90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly HashSet<T> _items;

		[Token(Token = "0x170004ED")]
		public IReadOnlyCollection<T> Objects
		{
			[Token(Token = "0x6001FB8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001FB9")]
		public SceneManager()
		{
		}

		[Token(Token = "0x6001FBA")]
		public void Add(T item)
		{
		}

		[Token(Token = "0x6001FBB")]
		public bool Remove(T item)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200064E")]
	public interface ISelectable
	{
		[Token(Token = "0x170004EE")]
		bool IsSelected
		{
			[Token(Token = "0x6001FBC")]
			get;
		}

		[Token(Token = "0x6001FBD")]
		void SetSelected(bool value);
	}
	[Token(Token = "0x200064F")]
	public class SelectionModule<T> : ISelectionModule<T> where T : ISelectable
	{
		[Token(Token = "0x170004EF")]
		public T SelectedObject
		{
			[Token(Token = "0x6001FBE")]
			[CompilerGenerated]
			get
			{
				return (T)null;
			}
			[Token(Token = "0x6001FBF")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6001FC0")]
		public Task SetSelectedObject(T value, CancellationToken cancellationToken)
		{
			return null;
		}

		[Token(Token = "0x6001FC1")]
		public SelectionModule()
		{
		}
	}
	[Token(Token = "0x2000650")]
	public class SubpartTypeModule : ISubpartTypeModule
	{
		[Token(Token = "0x170004F0")]
		public SubpartType ActiveSubpartType
		{
			[Token(Token = "0x6001FC2")]
			[Address(RVA = "0x167A704", Offset = "0x167A704", VA = "0x167A704", Slot = "4")]
			[CompilerGenerated]
			get
			{
				return default(SubpartType);
			}
			[Token(Token = "0x6001FC3")]
			[Address(RVA = "0x167A70C", Offset = "0x167A70C", VA = "0x167A70C")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6001FC4")]
		[Address(RVA = "0x167A714", Offset = "0x167A714", VA = "0x167A714", Slot = "5")]
		public void SetSubpartType(SubpartType subpartType)
		{
		}

		[Token(Token = "0x6001FC5")]
		[Address(RVA = "0x167A848", Offset = "0x167A848", VA = "0x167A848")]
		public SubpartTypeModule()
		{
		}
	}
	[Token(Token = "0x2000651")]
	public class UberShaderSubpartTypeModule : ISubpartTypeModule
	{
		[Token(Token = "0x170004F1")]
		public SubpartType ActiveSubpartType
		{
			[Token(Token = "0x6001FC6")]
			[Address(RVA = "0x167A850", Offset = "0x167A850", VA = "0x167A850", Slot = "4")]
			[CompilerGenerated]
			get
			{
				return default(SubpartType);
			}
			[Token(Token = "0x6001FC7")]
			[Address(RVA = "0x167A858", Offset = "0x167A858", VA = "0x167A858")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6001FC8")]
		[Address(RVA = "0x167A860", Offset = "0x167A860", VA = "0x167A860", Slot = "5")]
		public void SetSubpartType(SubpartType subpartType)
		{
		}

		[Token(Token = "0x6001FC9")]
		[Address(RVA = "0x167A994", Offset = "0x167A994", VA = "0x167A994")]
		public UberShaderSubpartTypeModule()
		{
		}
	}
	[Token(Token = "0x2000652")]
	public class SystemInfoModule : ISystemInfoModule
	{
		[Token(Token = "0x170004F2")]
		public int SystemMemorySize
		{
			[Token(Token = "0x6001FCA")]
			[Address(RVA = "0x167A99C", Offset = "0x167A99C", VA = "0x167A99C", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x14000065")]
		public event Action LowMemory
		{
			[Token(Token = "0x6001FCB")]
			[Address(RVA = "0x167A9A4", Offset = "0x167A9A4", VA = "0x167A9A4", Slot = "5")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001FCC")]
			[Address(RVA = "0x167AA40", Offset = "0x167AA40", VA = "0x167AA40", Slot = "6")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6001FCD")]
		[Address(RVA = "0x167AADC", Offset = "0x167AADC", VA = "0x167AADC")]
		public SystemInfoModule()
		{
		}

		[Token(Token = "0x6001FCE")]
		[Address(RVA = "0x167AB68", Offset = "0x167AB68", VA = "0x167AB68")]
		private void OnLowMemory()
		{
		}
	}
	[Token(Token = "0x2000653")]
	public class SystemsBatcher<TCollection> : IDisposable where TCollection : ISystemPart
	{
		[StructLayout(3)]
		[Token(Token = "0x2000655")]
		[CompilerGenerated]
		private struct <OnSystemsSetActiveCompleted>d__6 : IAsyncStateMachine
		{
			[Token(Token = "0x4001C9C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001C9D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4001C9E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool value;

			[Token(Token = "0x4001C9F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public SystemsBatcher<TCollection> <>4__this;

			[Token(Token = "0x4001CA0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IReadOnlyCollection<Database.SystemType> systemTypes;

			[Token(Token = "0x4001CA1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public DatabaseType databaseType;

			[Token(Token = "0x4001CA2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public LocationType locationType;

			[Token(Token = "0x4001CA3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private IEnumerator<GameObject> <>7__wrap1;

			[Token(Token = "0x4001CA4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private GameObject <gameObject>5__3;

			[Token(Token = "0x4001CA5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private YieldAwaitable.YieldAwaiter <>u__1;

			[Token(Token = "0x6001FD5")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001FD6")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4001C95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IInstanceProvider<TCollection> _instanceProvider;

		[Token(Token = "0x4001C96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly ISystemsModuleEvents _systemsModuleEvents;

		[Token(Token = "0x4001C97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IInstanceCollectionModule<TCollection> _instanceModule;

		[Token(Token = "0x4001C98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IAnatomyDatabase _anatomyDatabase;

		[Token(Token = "0x4001C99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly Func<bool> _locationsEnabled;

		[Token(Token = "0x6001FCF")]
		public SystemsBatcher(IInstanceProvider<TCollection> instanceProvider, ISystemsModuleEvents systemsModuleEvents, IAnatomyDatabase anatomyDatabase, Func<bool> locationsEnabled)
		{
		}

		[Token(Token = "0x6001FD0")]
		[AsyncStateMachine(typeof(SystemsBatcher<>.<OnSystemsSetActiveCompleted>d__6))]
		private Task OnSystemsSetActiveCompleted(IReadOnlyCollection<Database.SystemType> systemTypes, DatabaseType databaseType, LocationType locationType, bool value)
		{
			return null;
		}

		[Token(Token = "0x6001FD1")]
		public void Dispose()
		{
		}
	}
	[Token(Token = "0x2000656")]
	public class SystemsModule<TCollection> : ISystemsModule, ILocationModule, ISystemsModuleEvents
	{
		[Token(Token = "0x2000657")]
		[CompilerGenerated]
		private sealed class <>c__DisplayClass26_0
		{
			[Token(Token = "0x4001CB0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public LocationType locationType;

			[Token(Token = "0x6001FEB")]
			public <>c__DisplayClass26_0()
			{
			}

			[Token(Token = "0x6001FEC")]
			internal bool <SetLocationTypeAsync>b__0(SystemGroup val)
			{
				return default(bool);
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000658")]
		[CompilerGenerated]
		private struct <SetLocationTypeAsync>d__26 : IAsyncStateMachine
		{
			[Token(Token = "0x4001CB1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001CB2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4001CB3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public LocationType locationType;

			[Token(Token = "0x4001CB4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public SystemsModule<TCollection> <>4__this;

			[Token(Token = "0x4001CB5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private <>c__DisplayClass26_0 <>8__1;

			[Token(Token = "0x4001CB6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x6001FED")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001FEE")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000659")]
		[CompilerGenerated]
		private struct <SetLocationsEnabled>d__27 : IAsyncStateMachine
		{
			[Token(Token = "0x4001CB7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001CB8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4001CB9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public SystemsModule<TCollection> <>4__this;

			[Token(Token = "0x4001CBA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool value;

			[Token(Token = "0x4001CBB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x6001FEF")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001FF0")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x200065A")]
		[CompilerGenerated]
		private sealed class <>c__DisplayClass28_0
		{
			[Token(Token = "0x4001CBC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public SystemsModule<TCollection> <>4__this;

			[Token(Token = "0x4001CBD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public DatabaseType databaseType;

			[Token(Token = "0x6001FF1")]
			public <>c__DisplayClass28_0()
			{
			}

			[Token(Token = "0x6001FF2")]
			internal (Database.SystemType, bool) <SetDatabaseTypeAsync>b__0(Database.SystemType systemType)
			{
				return default((Database.SystemType, bool));
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200065C")]
		[CompilerGenerated]
		private struct <SetDatabaseTypeAsync>d__28 : IAsyncStateMachine
		{
			[Token(Token = "0x4001CC2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001CC3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4001CC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public SystemsModule<TCollection> <>4__this;

			[Token(Token = "0x4001CC5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public DatabaseType databaseType;

			[Token(Token = "0x4001CC6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private <>c__DisplayClass28_0 <>8__1;

			[Token(Token = "0x4001CC7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private List<(Database.SystemType SystemType, bool Available)> <previouslyActiveSystems>5__2;

			[Token(Token = "0x4001CC8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x6001FF8")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001FF9")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200065D")]
		[CompilerGenerated]
		private struct <SetSystemActiveAsync>d__29 : IAsyncStateMachine
		{
			[Token(Token = "0x4001CC9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001CCA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4001CCB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public SystemsModule<TCollection> <>4__this;

			[Token(Token = "0x4001CCC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Database.SystemType systemType;

			[Token(Token = "0x4001CCD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool value;

			[Token(Token = "0x4001CCE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x6001FFA")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001FFB")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200065E")]
		[CompilerGenerated]
		private struct <SetSystemsActiveAsync>d__30 : IAsyncStateMachine
		{
			[Token(Token = "0x4001CCF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001CD0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4001CD1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IEnumerable<Database.SystemType> systems;

			[Token(Token = "0x4001CD2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool value;

			[Token(Token = "0x4001CD3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public SystemsModule<TCollection> <>4__this;

			[Token(Token = "0x4001CD4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private List<Database.SystemType> <systemsToSetActive>5__2;

			[Token(Token = "0x4001CD5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x6001FFC")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001FFD")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200065F")]
		[CompilerGenerated]
		private struct <SetSystemsActiveAsync>d__31 : IAsyncStateMachine
		{
			[Token(Token = "0x4001CD6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001CD7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4001CD8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public SystemsModule<TCollection> <>4__this;

			[Token(Token = "0x4001CD9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IReadOnlyCollection<Database.SystemType> systems;

			[Token(Token = "0x4001CDA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public DatabaseType databaseType;

			[Token(Token = "0x4001CDB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public LocationType locationType;

			[Token(Token = "0x4001CDC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool locationsEnabled;

			[Token(Token = "0x4001CDD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private TaskAwaiter<IEnumerable<TCollection>> <>u__1;

			[Token(Token = "0x4001CDE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private TaskAwaiter <>u__2;

			[Token(Token = "0x6001FFE")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001FFF")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4001CA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly System.Collections.Generic.IReadOnlyDictionary<DatabaseType, Database.SystemType> DefaultSystemTypes;

		[Token(Token = "0x4001CA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly HashSet<Database.SystemType> _activeSystems;

		[Token(Token = "0x4001CA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IInstanceProvider<TCollection> _instanceProvider;

		[Token(Token = "0x4001CA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IInstanceCollectionModule<TCollection> _instanceModule;

		[Token(Token = "0x4001CAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IAnatomyDatabase _anatomyDatabase;

		[Token(Token = "0x170004F3")]
		public IReadOnlyCollection<Database.SystemType> ActiveSystems
		{
			[Token(Token = "0x6001FD7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004F4")]
		public DatabaseType ActiveDatabaseType
		{
			[Token(Token = "0x6001FD8")]
			[CompilerGenerated]
			get
			{
				return default(DatabaseType);
			}
			[Token(Token = "0x6001FD9")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x170004F5")]
		public LocationType ActiveLocationType
		{
			[Token(Token = "0x6001FDA")]
			[CompilerGenerated]
			get
			{
				return default(LocationType);
			}
			[Token(Token = "0x6001FDB")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x170004F6")]
		public bool LocationsEnabled
		{
			[Token(Token = "0x6001FDC")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001FDD")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x14000066")]
		public event Action<IReadOnlyCollection<Database.SystemType>, DatabaseType, LocationType, bool> SystemsSetActiveStarted
		{
			[Token(Token = "0x6001FDE")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001FDF")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000067")]
		public event Func<IReadOnlyCollection<Database.SystemType>, DatabaseType, LocationType, bool, Task> SystemsSetActiveCompleted
		{
			[Token(Token = "0x6001FE0")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001FE1")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6001FE2")]
		public SystemsModule(IInstanceProvider<TCollection> instanceProvider, IAnatomyDatabase anatomyDatabase, IInstanceCollectionModule<TCollection> instanceModule, bool locationsEnabled)
		{
		}

		[Token(Token = "0x6001FE3")]
		[AsyncStateMachine(typeof(SystemsModule<>.<SetLocationTypeAsync>d__26))]
		public Task SetLocationTypeAsync(LocationType locationType)
		{
			return null;
		}

		[Token(Token = "0x6001FE4")]
		[AsyncStateMachine(typeof(SystemsModule<>.<SetLocationsEnabled>d__27))]
		public Task SetLocationsEnabled(bool value)
		{
			return null;
		}

		[Token(Token = "0x6001FE5")]
		[AsyncStateMachine(typeof(SystemsModule<>.<SetDatabaseTypeAsync>d__28))]
		public Task SetDatabaseTypeAsync(DatabaseType databaseType)
		{
			return null;
		}

		[Token(Token = "0x6001FE6")]
		[AsyncStateMachine(typeof(SystemsModule<>.<SetSystemActiveAsync>d__29))]
		public Task SetSystemActiveAsync(Database.SystemType systemType, bool value)
		{
			return null;
		}

		[Token(Token = "0x6001FE7")]
		[AsyncStateMachine(typeof(SystemsModule<>.<SetSystemsActiveAsync>d__30))]
		public Task SetSystemsActiveAsync(IEnumerable<Database.SystemType> systems, bool value)
		{
			return null;
		}

		[Token(Token = "0x6001FE8")]
		[AsyncStateMachine(typeof(SystemsModule<>.<SetSystemsActiveAsync>d__31))]
		private Task SetSystemsActiveAsync(IReadOnlyCollection<Database.SystemType> systems, DatabaseType databaseType, LocationType locationType, bool locationsEnabled)
		{
			return null;
		}

		[Token(Token = "0x6001FE9")]
		private void SetSystemsInactive(IReadOnlyCollection<Database.SystemType> systems, DatabaseType databaseType, LocationType locationType, bool locationsEnabled)
		{
		}
	}
	[Token(Token = "0x2000660")]
	public class ModuleProviderBehaviour : MonoBehaviour
	{
		[Token(Token = "0x4001CDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly ModuleProvider ModuleProvider;

		[Token(Token = "0x6002000")]
		[Address(RVA = "0x167AB84", Offset = "0x167AB84", VA = "0x167AB84")]
		public ModuleProviderBehaviour()
		{
		}
	}
	[Token(Token = "0x2000661")]
	public class NetworkModuleProviderFactory : MonoBehaviour, INetworkModuleProviderFactory
	{
		[Token(Token = "0x4001CE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private ModuleProviderBehaviour _singlePlayerModuleProvider;

		[Token(Token = "0x4001CE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private ModuleProviderBehaviour _networkModuleProvider;

		[Token(Token = "0x170004F7")]
		public IModuleProvider ModuleProvider
		{
			[Token(Token = "0x6002001")]
			[Address(RVA = "0x167ABF4", Offset = "0x167ABF4", VA = "0x167ABF4", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004F8")]
		public IModuleProvider NetworkModuleProvider
		{
			[Token(Token = "0x6002002")]
			[Address(RVA = "0x167AC10", Offset = "0x167AC10", VA = "0x167AC10", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002003")]
		[Address(RVA = "0x167AD64", Offset = "0x167AD64", VA = "0x167AD64")]
		public NetworkModuleProviderFactory()
		{
		}
	}
}
namespace Networking
{
	[Token(Token = "0x2000662")]
	public interface INetworkModuleProviderFactory
	{
		[Token(Token = "0x170004F9")]
		IModuleProvider ModuleProvider
		{
			[Token(Token = "0x6002004")]
			get;
		}

		[Token(Token = "0x170004FA")]
		IModuleProvider NetworkModuleProvider
		{
			[Token(Token = "0x6002005")]
			get;
		}
	}
	[Token(Token = "0x2000663")]
	public static class LicenseManagerNetworkExtensions
	{
		[Token(Token = "0x2000664")]
		public enum RequestResult
		{
			[Token(Token = "0x4001CE3")]
			Success,
			[Token(Token = "0x4001CE4")]
			NoPurchasedLicenses,
			[Token(Token = "0x4001CE5")]
			ConnectionFailed,
			[Token(Token = "0x4001CE6")]
			NoLicensesAvailable
		}

		[StructLayout(3)]
		[Token(Token = "0x2000665")]
		[CompilerGenerated]
		private struct <GetMultiplayerLicenseCount>d__1 : IAsyncStateMachine
		{
			[Token(Token = "0x4001CE7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001CE8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder<int> <>t__builder;

			[Token(Token = "0x4001CE9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LicenseData licenseData;

			[Token(Token = "0x4001CEA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public ILicenseManager licenseManager;

			[Token(Token = "0x4001CEB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public CancellationToken cancellationToken;

			[Token(Token = "0x4001CEC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private TaskAwaiter<int> <>u__1;

			[Token(Token = "0x6002008")]
			[Address(RVA = "0x167AFF0", Offset = "0x167AFF0", VA = "0x167AFF0", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6002009")]
			[Address(RVA = "0x167B2C8", Offset = "0x167B2C8", VA = "0x167B2C8", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000666")]
		[CompilerGenerated]
		private struct <MultiplayerLicenseAvailable>d__2 : IAsyncStateMachine
		{
			[Token(Token = "0x4001CED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001CEE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder<RequestResult> <>t__builder;

			[Token(Token = "0x4001CEF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ILicenseManager licenseManager;

			[Token(Token = "0x4001CF0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public CancellationToken cancellationToken;

			[Token(Token = "0x4001CF1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public IMatchmaker matchmaker;

			[Token(Token = "0x4001CF2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private int <licenseCount>5__2;

			[Token(Token = "0x4001CF3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private TaskAwaiter<int> <>u__1;

			[Token(Token = "0x600200A")]
			[Address(RVA = "0x167B320", Offset = "0x167B320", VA = "0x167B320", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x600200B")]
			[Address(RVA = "0x167B81C", Offset = "0x167B81C", VA = "0x167B81C", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x6002006")]
		[Address(RVA = "0x167AD6C", Offset = "0x167AD6C", VA = "0x167AD6C")]
		[AsyncStateMachine(typeof(<GetMultiplayerLicenseCount>d__1))]
		public static Task<int> GetMultiplayerLicenseCount(this ILicenseManager licenseManager, LicenseData licenseData, CancellationToken cancellationToken)
		{
			return null;
		}

		[Token(Token = "0x6002007")]
		[Address(RVA = "0x167AEB0", Offset = "0x167AEB0", VA = "0x167AEB0")]
		[AsyncStateMachine(typeof(<MultiplayerLicenseAvailable>d__2))]
		public static Task<RequestResult> MultiplayerLicenseAvailable(this ILicenseManager licenseManager, IMatchmaker matchmaker, CancellationToken cancellationToken)
		{
			return null;
		}
	}
	[Token(Token = "0x2000667")]
	public interface IServerInfo
	{
		[Token(Token = "0x170004FB")]
		string Name
		{
			[Token(Token = "0x600200C")]
			get;
		}

		[Token(Token = "0x170004FC")]
		string DomainId
		{
			[Token(Token = "0x600200D")]
			get;
		}

		[Token(Token = "0x170004FD")]
		Uri Uri
		{
			[Token(Token = "0x600200E")]
			get;
		}

		[Token(Token = "0x170004FE")]
		byte ActiveConnections
		{
			[Token(Token = "0x600200F")]
			get;
		}

		[Token(Token = "0x170004FF")]
		byte MaxConnections
		{
			[Token(Token = "0x6002010")]
			get;
		}

		[Token(Token = "0x17000500")]
		ServerType ServerType
		{
			[Token(Token = "0x6002011")]
			get;
		}

		[Token(Token = "0x17000501")]
		ApplicationMode ApplicationMode
		{
			[Token(Token = "0x6002012")]
			get;
		}

		[Token(Token = "0x17000502")]
		int MaxSystemCount
		{
			[Token(Token = "0x6002013")]
			get;
		}
	}
	[Token(Token = "0x2000668")]
	public enum ServerType
	{
		[Token(Token = "0x4001CF5")]
		LAN,
		[Token(Token = "0x4001CF6")]
		WAN
	}
	[Token(Token = "0x2000669")]
	public enum ApplicationMode
	{
		[Token(Token = "0x4001CF8")]
		VR,
		[Token(Token = "0x4001CF9")]
		Mobile
	}
	[Token(Token = "0x200066A")]
	public class ServerInfo : IServerInfo
	{
		[Token(Token = "0x17000503")]
		public string Name
		{
			[Token(Token = "0x6002014")]
			[Address(RVA = "0x167B874", Offset = "0x167B874", VA = "0x167B874", Slot = "4")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6002015")]
			[Address(RVA = "0x167B87C", Offset = "0x167B87C", VA = "0x167B87C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000504")]
		public string DomainId
		{
			[Token(Token = "0x6002016")]
			[Address(RVA = "0x167B884", Offset = "0x167B884", VA = "0x167B884", Slot = "5")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6002017")]
			[Address(RVA = "0x167B88C", Offset = "0x167B88C", VA = "0x167B88C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000505")]
		public Uri Uri
		{
			[Token(Token = "0x6002018")]
			[Address(RVA = "0x167B894", Offset = "0x167B894", VA = "0x167B894", Slot = "6")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6002019")]
			[Address(RVA = "0x167B89C", Offset = "0x167B89C", VA = "0x167B89C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000506")]
		public byte ActiveConnections
		{
			[Token(Token = "0x600201A")]
			[Address(RVA = "0x167B8A4", Offset = "0x167B8A4", VA = "0x167B8A4", Slot = "7")]
			[CompilerGenerated]
			get
			{
				return default(byte);
			}
			[Token(Token = "0x600201B")]
			[Address(RVA = "0x167B8AC", Offset = "0x167B8AC", VA = "0x167B8AC")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000507")]
		public byte MaxConnections
		{
			[Token(Token = "0x600201C")]
			[Address(RVA = "0x167B8B4", Offset = "0x167B8B4", VA = "0x167B8B4", Slot = "8")]
			[CompilerGenerated]
			get
			{
				return default(byte);
			}
			[Token(Token = "0x600201D")]
			[Address(RVA = "0x167B8BC", Offset = "0x167B8BC", VA = "0x167B8BC")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000508")]
		public ServerType ServerType
		{
			[Token(Token = "0x600201E")]
			[Address(RVA = "0x167B8C4", Offset = "0x167B8C4", VA = "0x167B8C4", Slot = "9")]
			[CompilerGenerated]
			get
			{
				return default(ServerType);
			}
			[Token(Token = "0x600201F")]
			[Address(RVA = "0x167B8CC", Offset = "0x167B8CC", VA = "0x167B8CC")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000509")]
		public ApplicationMode ApplicationMode
		{
			[Token(Token = "0x6002020")]
			[Address(RVA = "0x167B8D4", Offset = "0x167B8D4", VA = "0x167B8D4", Slot = "10")]
			[CompilerGenerated]
			get
			{
				return default(ApplicationMode);
			}
			[Token(Token = "0x6002021")]
			[Address(RVA = "0x167B8DC", Offset = "0x167B8DC", VA = "0x167B8DC")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700050A")]
		public int MaxSystemCount
		{
			[Token(Token = "0x6002022")]
			[Address(RVA = "0x167B8E4", Offset = "0x167B8E4", VA = "0x167B8E4", Slot = "11")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002023")]
			[Address(RVA = "0x167B8EC", Offset = "0x167B8EC", VA = "0x167B8EC")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6002024")]
		[Address(RVA = "0x167B8F4", Offset = "0x167B8F4", VA = "0x167B8F4")]
		public ServerInfo()
		{
		}

		[Token(Token = "0x6002025")]
		[Address(RVA = "0x167B8FC", Offset = "0x167B8FC", VA = "0x167B8FC")]
		public ServerInfo(IServerInfo serverInfo)
		{
		}

		[Token(Token = "0x6002026")]
		[Address(RVA = "0x167BC74", Offset = "0x167BC74", VA = "0x167BC74", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x200066B")]
	public class MobileNetworkPlayerHandler : NetworkBehaviour
	{
		[Token(Token = "0x4001D02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SyncVar]
		private string _name;

		[Token(Token = "0x4001D03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SyncVar]
		private AnatomyNetworkManager.SelectedRole _role;

		[Token(Token = "0x1700050B")]
		public string Name
		{
			[Token(Token = "0x6002027")]
			[Address(RVA = "0x167BC7C", Offset = "0x167BC7C", VA = "0x167BC7C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002028")]
			[Address(RVA = "0x167BC84", Offset = "0x167BC84", VA = "0x167BC84")]
			set
			{
			}
		}

		[Token(Token = "0x1700050C")]
		public AnatomyNetworkManager.SelectedRole Role
		{
			[Token(Token = "0x6002029")]
			[Address(RVA = "0x167BD44", Offset = "0x167BD44", VA = "0x167BD44")]
			get
			{
				return default(AnatomyNetworkManager.SelectedRole);
			}
			[Token(Token = "0x600202A")]
			[Address(RVA = "0x167BD4C", Offset = "0x167BD4C", VA = "0x167BD4C")]
			set
			{
			}
		}

		[Token(Token = "0x1700050D")]
		public string Network_name
		{
			[Token(Token = "0x600202D")]
			[Address(RVA = "0x167BE18", Offset = "0x167BE18", VA = "0x167BE18")]
			get
			{
				return null;
			}
			[Token(Token = "0x600202E")]
			[Address(RVA = "0x167BC88", Offset = "0x167BC88", VA = "0x167BC88")]
			[param: In]
			set
			{
			}
		}

		[Token(Token = "0x1700050E")]
		public AnatomyNetworkManager.SelectedRole Network_role
		{
			[Token(Token = "0x600202F")]
			[Address(RVA = "0x167BE20", Offset = "0x167BE20", VA = "0x167BE20")]
			get
			{
				return default(AnatomyNetworkManager.SelectedRole);
			}
			[Token(Token = "0x6002030")]
			[Address(RVA = "0x167BD50", Offset = "0x167BD50", VA = "0x167BD50")]
			[param: In]
			set
			{
			}
		}

		[Token(Token = "0x600202B")]
		[Address(RVA = "0x167BE0C", Offset = "0x167BE0C", VA = "0x167BE0C")]
		public MobileNetworkPlayerHandler()
		{
		}

		[Token(Token = "0x600202C")]
		[Address(RVA = "0x167BE14", Offset = "0x167BE14", VA = "0x167BE14")]
		private void MirrorProcessed()
		{
		}

		[Token(Token = "0x6002031")]
		[Address(RVA = "0x167BE28", Offset = "0x167BE28", VA = "0x167BE28", Slot = "6")]
		public override bool SerializeSyncVars(NetworkWriter writer, bool forceAll)
		{
			return default(bool);
		}

		[Token(Token = "0x6002032")]
		[Address(RVA = "0x167BF30", Offset = "0x167BF30", VA = "0x167BF30", Slot = "7")]
		public override void DeserializeSyncVars(NetworkReader reader, bool initialState)
		{
		}
	}
	[Token(Token = "0x200066C")]
	public class AutoConnect : MonoBehaviour
	{
		[StructLayout(3)]
		[Token(Token = "0x200066D")]
		[CompilerGenerated]
		private struct <Start>d__2 : IAsyncStateMachine
		{
			[Token(Token = "0x4001D06")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001D07")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4001D08")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public AutoConnect <>4__this;

			[Token(Token = "0x4001D09")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private IMatchmaker <matchmaker>5__2;

			[Token(Token = "0x4001D0A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private IServerInfo[] <matchlist>5__3;

			[Token(Token = "0x4001D0B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private TaskAwaiter<IServerInfo[]> <>u__1;

			[Token(Token = "0x4001D0C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private TaskAwaiter <>u__2;

			[Token(Token = "0x6002038")]
			[Address(RVA = "0x167C33C", Offset = "0x167C33C", VA = "0x167C33C", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6002039")]
			[Address(RVA = "0x167CE24", Offset = "0x167CE24", VA = "0x167CE24", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200066E")]
		[CompilerGenerated]
		private struct <MatchmakingUiOnServerSelected>d__5 : IAsyncStateMachine
		{
			[Token(Token = "0x4001D0D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001D0E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4001D0F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public IServerInfo serverInfo;

			[Token(Token = "0x4001D10")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public CancellationToken cancellationToken;

			[Token(Token = "0x4001D11")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public AutoConnect <>4__this;

			[Token(Token = "0x4001D12")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private TaskAwaiter<bool> <>u__1;

			[Token(Token = "0x600203A")]
			[Address(RVA = "0x167CE30", Offset = "0x167CE30", VA = "0x167CE30", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x600203B")]
			[Address(RVA = "0x167D298", Offset = "0x167D298", VA = "0x167D298", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4001D04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private ServerType _serverType;

		[Token(Token = "0x4001D05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly CancellationTokenSource _disposeCancellationTokenSource;

		[Token(Token = "0x6002033")]
		[Address(RVA = "0x167C04C", Offset = "0x167C04C", VA = "0x167C04C")]
		[AsyncStateMachine(typeof(<Start>d__2))]
		private void Start()
		{
		}

		[Token(Token = "0x6002034")]
		[Address(RVA = "0x167C104", Offset = "0x167C104", VA = "0x167C104")]
		private static string GetCommandLineArg(string arg)
		{
			return null;
		}

		[Token(Token = "0x6002035")]
		[Address(RVA = "0x167C1A8", Offset = "0x167C1A8", VA = "0x167C1A8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6002036")]
		[Address(RVA = "0x167C1DC", Offset = "0x167C1DC", VA = "0x167C1DC")]
		[AsyncStateMachine(typeof(<MatchmakingUiOnServerSelected>d__5))]
		private void MatchmakingUiOnServerSelected(IServerInfo serverInfo, CancellationToken cancellationToken)
		{
		}

		[Token(Token = "0x6002037")]
		[Address(RVA = "0x167C2C8", Offset = "0x167C2C8", VA = "0x167C2C8")]
		public AutoConnect()
		{
		}
	}
	[Token(Token = "0x200066F")]
	public class CustomLogHandler : ILogHandler
	{
		[Token(Token = "0x4001D13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly ILogHandler _logHandler;

		[Token(Token = "0x600203C")]
		[Address(RVA = "0x167D2A4", Offset = "0x167D2A4", VA = "0x167D2A4")]
		public CustomLogHandler(ILogHandler logHandler)
		{
		}

		[Token(Token = "0x600203D")]
		[Address(RVA = "0x167D2D4", Offset = "0x167D2D4", VA = "0x167D2D4", Slot = "4")]
		public void LogFormat(LogType logType, UnityEngine.Object context, string format, params object[] args)
		{
		}

		[Token(Token = "0x600203E")]
		[Address(RVA = "0x167D418", Offset = "0x167D418", VA = "0x167D418", Slot = "5")]
		public void LogException(Exception exception, UnityEngine.Object context)
		{
		}
	}
	[Token(Token = "0x2000670")]
	public interface INetworkManager
	{
		[Token(Token = "0x1700050F")]
		NetworkManagerMode Mode
		{
			[Token(Token = "0x600203F")]
			get;
		}

		[Token(Token = "0x17000510")]
		Transport Transport
		{
			[Token(Token = "0x6002040")]
			get;
		}

		[Token(Token = "0x17000511")]
		int MaxConnections
		{
			[Token(Token = "0x6002041")]
			get;
			[Token(Token = "0x6002042")]
			set;
		}

		[Token(Token = "0x17000512")]
		string OnlineScene
		{
			[Token(Token = "0x6002043")]
			get;
			[Token(Token = "0x6002044")]
			set;
		}

		[Token(Token = "0x17000513")]
		string NetworkAddress
		{
			[Token(Token = "0x6002045")]
			get;
			[Token(Token = "0x6002046")]
			set;
		}

		[Token(Token = "0x17000514")]
		int NetworkPort
		{
			[Token(Token = "0x6002047")]
			get;
			[Token(Token = "0x6002048")]
			set;
		}

		[Token(Token = "0x17000515")]
		int NumPlayers
		{
			[Token(Token = "0x6002049")]
			get;
		}

		[Token(Token = "0x14000068")]
		event Action ClientStopped;

		[Token(Token = "0x14000069")]
		event Action ServerStarted;

		[Token(Token = "0x1400006A")]
		event Action ServerStopped;

		[Token(Token = "0x1400006B")]
		event Action<NetworkConnection> ClientSceneChanged;

		[Token(Token = "0x1400006C")]
		event Action<NetworkConnectionToClient> ServerClientDisconnected;

		[Token(Token = "0x1400006D")]
		event Action<string, ushort> ServerPrepared;

		[Token(Token = "0x600204A")]
		void StartClient();

		[Token(Token = "0x600204B")]
		void StartClientLANOnly();

		[Token(Token = "0x600204C")]
		void StopClient();

		[Token(Token = "0x600204D")]
		void StartHost();

		[Token(Token = "0x600204E")]
		void StartHostLANOnly();

		[Token(Token = "0x600204F")]
		void StopHost();

		[Token(Token = "0x6002050")]
		Transform GetStartPosition();
	}
	[Token(Token = "0x2000671")]
	public class MirrorNetworkManager : global::Mirror.NetworkManager, INetworkManager
	{
		[Token(Token = "0x17000516")]
		public NetworkManagerMode Mode
		{
			[Token(Token = "0x600205D")]
			[Address(RVA = "0x167D4D4", Offset = "0x167D4D4", VA = "0x167D4D4", Slot = "32")]
			get
			{
				return default(NetworkManagerMode);
			}
		}

		[Token(Token = "0x17000517")]
		public Transport Transport
		{
			[Token(Token = "0x600205E")]
			[Address(RVA = "0x167D4DC", Offset = "0x167D4DC", VA = "0x167D4DC", Slot = "33")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000518")]
		public int MaxConnections
		{
			[Token(Token = "0x600205F")]
			[Address(RVA = "0x167D4E4", Offset = "0x167D4E4", VA = "0x167D4E4", Slot = "34")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002060")]
			[Address(RVA = "0x167D4EC", Offset = "0x167D4EC", VA = "0x167D4EC", Slot = "35")]
			set
			{
			}
		}

		[Token(Token = "0x17000519")]
		public string OnlineScene
		{
			[Token(Token = "0x6002061")]
			[Address(RVA = "0x167D4F4", Offset = "0x167D4F4", VA = "0x167D4F4", Slot = "36")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002062")]
			[Address(RVA = "0x167D4FC", Offset = "0x167D4FC", VA = "0x167D4FC", Slot = "37")]
			set
			{
			}
		}

		[Token(Token = "0x1700051A")]
		public string NetworkAddress
		{
			[Token(Token = "0x6002063")]
			[Address(RVA = "0x167D504", Offset = "0x167D504", VA = "0x167D504", Slot = "38")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002064")]
			[Address(RVA = "0x167D50C", Offset = "0x167D50C", VA = "0x167D50C", Slot = "39")]
			set
			{
			}
		}

		[Token(Token = "0x1700051B")]
		public int NetworkPort
		{
			[Token(Token = "0x6002065")]
			[Address(RVA = "0x167D514", Offset = "0x167D514", VA = "0x167D514", Slot = "40")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002066")]
			[Address(RVA = "0x167D5A0", Offset = "0x167D5A0", VA = "0x167D5A0", Slot = "41")]
			set
			{
			}
		}

		[Token(Token = "0x1700051C")]
		public int NumPlayers
		{
			[Token(Token = "0x6002067")]
			[Address(RVA = "0x167D628", Offset = "0x167D628", VA = "0x167D628", Slot = "42")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1400006E")]
		public event Action ClientStopped
		{
			[Token(Token = "0x6002068")]
			[Address(RVA = "0x167D630", Offset = "0x167D630", VA = "0x167D630", Slot = "50")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6002069")]
			[Address(RVA = "0x167D6CC", Offset = "0x167D6CC", VA = "0x167D6CC", Slot = "51")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400006F")]
		public event Action ServerStarted
		{
			[Token(Token = "0x600206A")]
			[Address(RVA = "0x167D768", Offset = "0x167D768", VA = "0x167D768", Slot = "52")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x600206B")]
			[Address(RVA = "0x167D804", Offset = "0x167D804", VA = "0x167D804", Slot = "53")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000070")]
		public event Action ServerStopped
		{
			[Token(Token = "0x600206C")]
			[Address(RVA = "0x167D8A0", Offset = "0x167D8A0", VA = "0x167D8A0", Slot = "54")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x600206D")]
			[Address(RVA = "0x167D93C", Offset = "0x167D93C", VA = "0x167D93C", Slot = "55")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000071")]
		public event Action<NetworkConnection> ClientSceneChanged
		{
			[Token(Token = "0x600206E")]
			[Address(RVA = "0x167D9D8", Offset = "0x167D9D8", VA = "0x167D9D8", Slot = "56")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x600206F")]
			[Address(RVA = "0x167DA88", Offset = "0x167DA88", VA = "0x167DA88", Slot = "57")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000072")]
		public event Action<NetworkConnectionToClient> ServerClientDisconnected
		{
			[Token(Token = "0x6002070")]
			[Address(RVA = "0x167DB38", Offset = "0x167DB38", VA = "0x167DB38", Slot = "58")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6002071")]
			[Address(RVA = "0x167DBE8", Offset = "0x167DBE8", VA = "0x167DBE8", Slot = "59")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000073")]
		public event Action<string, ushort> ServerPrepared
		{
			[Token(Token = "0x6002072")]
			[Address(RVA = "0x167DC98", Offset = "0x167DC98", VA = "0x167DC98", Slot = "60")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6002073")]
			[Address(RVA = "0x167DD48", Offset = "0x167DD48", VA = "0x167DD48", Slot = "61")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6002074")]
		[Address(RVA = "0x167DDF8", Offset = "0x167DDF8", VA = "0x167DDF8", Slot = "44")]
		public void StartClientLANOnly()
		{
		}

		[Token(Token = "0x6002075")]
		[Address(RVA = "0x167DE00", Offset = "0x167DE00", VA = "0x167DE00", Slot = "47")]
		public void StartHostLANOnly()
		{
		}

		[Token(Token = "0x6002076")]
		[Address(RVA = "0x167DE08", Offset = "0x167DE08", VA = "0x167DE08", Slot = "27")]
		public override void OnStartServer()
		{
		}

		[Token(Token = "0x6002077")]
		[Address(RVA = "0x167DE78", Offset = "0x167DE78", VA = "0x167DE78", Slot = "29")]
		public override void OnStopServer()
		{
		}

		[Token(Token = "0x6002078")]
		[Address(RVA = "0x167DEAC", Offset = "0x167DEAC", VA = "0x167DEAC", Slot = "30")]
		public override void OnStopClient()
		{
		}

		[Token(Token = "0x6002079")]
		[Address(RVA = "0x167DEE0", Offset = "0x167DEE0", VA = "0x167DEE0", Slot = "25")]
		public override void OnClientSceneChanged()
		{
		}

		[Token(Token = "0x600207A")]
		[Address(RVA = "0x167DF98", Offset = "0x167DF98", VA = "0x167DF98", Slot = "14")]
		public override void OnServerDisconnect(NetworkConnectionToClient conn)
		{
		}

		[Token(Token = "0x600207B")]
		[Address(RVA = "0x167DFE0", Offset = "0x167DFE0", VA = "0x167DFE0")]
		public MirrorNetworkManager()
		{
		}

		[Token(Token = "0x600207C")]
		[Address(RVA = "0x167E038", Offset = "0x167E038", VA = "0x167E038", Slot = "43")]
		private void Networking.INetworkManager.StartClient()
		{
		}

		[Token(Token = "0x600207D")]
		[Address(RVA = "0x167E040", Offset = "0x167E040", VA = "0x167E040", Slot = "45")]
		private void Networking.INetworkManager.StopClient()
		{
		}

		[Token(Token = "0x600207E")]
		[Address(RVA = "0x167E048", Offset = "0x167E048", VA = "0x167E048", Slot = "46")]
		private void Networking.INetworkManager.StartHost()
		{
		}

		[Token(Token = "0x600207F")]
		[Address(RVA = "0x167E050", Offset = "0x167E050", VA = "0x167E050", Slot = "48")]
		private void Networking.INetworkManager.StopHost()
		{
		}

		[Token(Token = "0x6002080")]
		[Address(RVA = "0x167E058", Offset = "0x167E058", VA = "0x167E058", Slot = "49")]
		private Transform Networking.INetworkManager.GetStartPosition()
		{
			return null;
		}
	}
	[Token(Token = "0x2000672")]
	public static class NetworkingExtensions
	{
		[Token(Token = "0x1700051D")]
		public static bool NetworkingActive
		{
			[Token(Token = "0x6002083")]
			[Address(RVA = "0x167AC40", Offset = "0x167AC40", VA = "0x167AC40")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700051E")]
		public static bool IsHost
		{
			[Token(Token = "0x6002084")]
			[Address(RVA = "0x167E060", Offset = "0x167E060", VA = "0x167E060")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6002081")]
		public static IEnumerable<T> GetNetworkBehavioursOfType<T>(this IEnumerable<NetworkIdentity> networkIdentities)
		{
			return null;
		}

		[Token(Token = "0x6002082")]
		public static IEnumerable<T> GetClientOwnedObjectsOfType<T>(this NetworkConnection networkConnection)
		{
			return null;
		}
	}
	[Token(Token = "0x2000675")]
	public class NetworkRequestHandler : NetworkBehaviour
	{
		[Token(Token = "0x2000676")]
		public enum ExceptionType
		{
			[Token(Token = "0x4001D25")]
			Reserved,
			[Token(Token = "0x4001D26")]
			UnauthorizedAccess,
			[Token(Token = "0x4001D27")]
			InvalidOperation
		}

		[Token(Token = "0x2000677")]
		private class NetworkRequest
		{
			[Token(Token = "0x17000520")]
			public bool Done
			{
				[Token(Token = "0x60020A2")]
				[Address(RVA = "0x167FD28", Offset = "0x167FD28", VA = "0x167FD28")]
				[CompilerGenerated]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x60020A3")]
				[Address(RVA = "0x167FD30", Offset = "0x167FD30", VA = "0x167FD30")]
				[CompilerGenerated]
				set
				{
				}
			}

			[Token(Token = "0x17000521")]
			public object Data
			{
				[Token(Token = "0x60020A4")]
				[Address(RVA = "0x167FD3C", Offset = "0x167FD3C", VA = "0x167FD3C")]
				[CompilerGenerated]
				get
				{
					return null;
				}
				[Token(Token = "0x60020A5")]
				[Address(RVA = "0x167FD44", Offset = "0x167FD44", VA = "0x167FD44")]
				[CompilerGenerated]
				set
				{
				}
			}

			[Token(Token = "0x17000522")]
			public ExceptionType? Exception
			{
				[Token(Token = "0x60020A6")]
				[Address(RVA = "0x167FD4C", Offset = "0x167FD4C", VA = "0x167FD4C")]
				[CompilerGenerated]
				get
				{
					return null;
				}
				[Token(Token = "0x60020A7")]
				[Address(RVA = "0x167FD54", Offset = "0x167FD54", VA = "0x167FD54")]
				[CompilerGenerated]
				set
				{
				}
			}

			[Token(Token = "0x17000523")]
			public string ExceptionMessage
			{
				[Token(Token = "0x60020A8")]
				[Address(RVA = "0x167FD5C", Offset = "0x167FD5C", VA = "0x167FD5C")]
				[CompilerGenerated]
				get
				{
					return null;
				}
				[Token(Token = "0x60020A9")]
				[Address(RVA = "0x167FD64", Offset = "0x167FD64", VA = "0x167FD64")]
				[CompilerGenerated]
				set
				{
				}
			}

			[Token(Token = "0x60020AA")]
			[Address(RVA = "0x167FD6C", Offset = "0x167FD6C", VA = "0x167FD6C")]
			public NetworkRequest()
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000678")]
		[CompilerGenerated]
		private struct <ClientSendRequest>d__11 : IAsyncStateMachine
		{
			[Token(Token = "0x4001D2C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001D2D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder<object> <>t__builder;

			[Token(Token = "0x4001D2E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CancellationToken cancellationToken;

			[Token(Token = "0x4001D2F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public NetworkRequestHandler <>4__this;

			[Token(Token = "0x4001D30")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Action<byte> requestCommand;

			[Token(Token = "0x4001D31")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private byte <requestId>5__2;

			[Token(Token = "0x4001D32")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private NetworkRequest <networkRequest>5__3;

			[Token(Token = "0x4001D33")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private YieldAwaitable.YieldAwaiter <>u__1;

			[Token(Token = "0x60020AB")]
			[Address(RVA = "0x167FD74", Offset = "0x167FD74", VA = "0x167FD74", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60020AC")]
			[Address(RVA = "0x1680354", Offset = "0x1680354", VA = "0x1680354", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4001D1E")]
		private const int InvalidServerConnectionId = -1;

		[Token(Token = "0x4001D1F")]
		private const byte MaxRequestId = byte.MaxValue;

		[Token(Token = "0x4001D20")]
		private const byte MinRequestId = 0;

		[Token(Token = "0x4001D21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private readonly NetworkRequest[] _pendingRequests;

		[Token(Token = "0x4001D22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private int _serverConnectionId;

		[Token(Token = "0x4001D23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private byte _lastRequestId;

		[Token(Token = "0x1700051F")]
		public bool Initialized
		{
			[Token(Token = "0x600208B")]
			[Address(RVA = "0x167E184", Offset = "0x167E184", VA = "0x167E184")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600208C")]
		[Address(RVA = "0x167E194", Offset = "0x167E194", VA = "0x167E194", Slot = "10")]
		[Client]
		public override void OnStartClient()
		{
		}

		[Token(Token = "0x600208D")]
		[Address(RVA = "0x167E404", Offset = "0x167E404", VA = "0x167E404")]
		[Client]
		[AsyncStateMachine(typeof(<ClientSendRequest>d__11))]
		public Task<object> ClientSendRequest(Action<byte> requestCommand, CancellationToken cancellationToken)
		{
			return null;
		}

		[Token(Token = "0x600208E")]
		[Address(RVA = "0x167E5C8", Offset = "0x167E5C8", VA = "0x167E5C8")]
		[Client]
		private byte ClientGenerateRequestId()
		{
			return default(byte);
		}

		[Token(Token = "0x600208F")]
		[Address(RVA = "0x167E684", Offset = "0x167E684", VA = "0x167E684")]
		[Client]
		public bool ClientTryProcessRequest(byte requestId, int connectionId, object data)
		{
			return default(bool);
		}

		[Token(Token = "0x6002090")]
		[Address(RVA = "0x167E7F0", Offset = "0x167E7F0", VA = "0x167E7F0")]
		[Server]
		public void ServerRaiseException(byte requestId, ExceptionType exceptionType, string message, NetworkConnectionToClient sender)
		{
		}

		[Token(Token = "0x6002091")]
		[Address(RVA = "0x167EB38", Offset = "0x167EB38", VA = "0x167EB38")]
		[Server]
		public void ServerRaiseUnauthorizedException(byte requestId, NetworkConnectionToClient sender)
		{
		}

		[Token(Token = "0x6002092")]
		[Address(RVA = "0x167E248", Offset = "0x167E248", VA = "0x167E248")]
		[Command(requiresAuthority = false)]
		private void CmdSetServerConnectionId([Optional] NetworkConnectionToClient sender)
		{
		}

		[Token(Token = "0x6002093")]
		[Address(RVA = "0x167EE4C", Offset = "0x167EE4C", VA = "0x167EE4C")]
		[TargetRpc]
		private void TargetSetServerConnectionId(NetworkConnection target, int value)
		{
		}

		[Token(Token = "0x6002094")]
		[Address(RVA = "0x167EC38", Offset = "0x167EC38", VA = "0x167EC38")]
		[TargetRpc]
		private void TargetRaiseException(NetworkConnection target, byte requestId, byte exceptionType)
		{
		}

		[Token(Token = "0x6002095")]
		[Address(RVA = "0x167E908", Offset = "0x167E908", VA = "0x167E908")]
		[TargetRpc]
		private void TargetRaiseExceptionWithMessage(NetworkConnection target, byte requestId, byte exceptionType, string message)
		{
		}

		[Token(Token = "0x6002096")]
		[Address(RVA = "0x167F04C", Offset = "0x167F04C", VA = "0x167F04C")]
		private static Exception DeserializeException(ExceptionType exceptionType, [Optional] string message)
		{
			return null;
		}

		[Token(Token = "0x6002097")]
		[Address(RVA = "0x167F220", Offset = "0x167F220", VA = "0x167F220")]
		public NetworkRequestHandler()
		{
		}

		[Token(Token = "0x6002098")]
		[Address(RVA = "0x167F28C", Offset = "0x167F28C", VA = "0x167F28C")]
		private void MirrorProcessed()
		{
		}

		[Token(Token = "0x6002099")]
		[Address(RVA = "0x167F290", Offset = "0x167F290", VA = "0x167F290")]
		protected void UserCode_CmdSetServerConnectionId__NetworkConnectionToClient(NetworkConnectionToClient sender)
		{
		}

		[Token(Token = "0x600209A")]
		[Address(RVA = "0x167F2A8", Offset = "0x167F2A8", VA = "0x167F2A8")]
		protected static void InvokeUserCode_CmdSetServerConnectionId__NetworkConnectionToClient(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x600209B")]
		[Address(RVA = "0x167F3EC", Offset = "0x167F3EC", VA = "0x167F3EC")]
		protected void UserCode_TargetSetServerConnectionId__NetworkConnection__Int32(NetworkConnection target, int value)
		{
		}

		[Token(Token = "0x600209C")]
		[Address(RVA = "0x167F3F4", Offset = "0x167F3F4", VA = "0x167F3F4")]
		protected static void InvokeUserCode_TargetSetServerConnectionId__NetworkConnection__Int32(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x600209D")]
		[Address(RVA = "0x167F570", Offset = "0x167F570", VA = "0x167F570")]
		protected void UserCode_TargetRaiseException__NetworkConnection__Byte__Byte(NetworkConnection target, byte requestId, byte exceptionType)
		{
		}

		[Token(Token = "0x600209E")]
		[Address(RVA = "0x167F654", Offset = "0x167F654", VA = "0x167F654")]
		protected static void InvokeUserCode_TargetRaiseException__NetworkConnection__Byte__Byte(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x600209F")]
		[Address(RVA = "0x167F7E8", Offset = "0x167F7E8", VA = "0x167F7E8")]
		protected void UserCode_TargetRaiseExceptionWithMessage__NetworkConnection__Byte__Byte__String(NetworkConnection target, byte requestId, byte exceptionType, string message)
		{
		}

		[Token(Token = "0x60020A0")]
		[Address(RVA = "0x167F910", Offset = "0x167F910", VA = "0x167F910")]
		protected static void InvokeUserCode_TargetRaiseExceptionWithMessage__NetworkConnection__Byte__Byte__String(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x60020A1")]
		[Address(RVA = "0x167FAB8", Offset = "0x167FAB8", VA = "0x167FAB8")]
		static NetworkRequestHandler()
		{
		}
	}
	[Token(Token = "0x2000679")]
	public class NetworkRequestException : Exception
	{
		[Token(Token = "0x60020AD")]
		[Address(RVA = "0x167F1B8", Offset = "0x167F1B8", VA = "0x167F1B8")]
		public NetworkRequestException(string message)
		{
		}
	}
	[Token(Token = "0x200067A")]
	public static class NetworkRequestHandlerExtensions
	{
		[Token(Token = "0x60020AE")]
		[Address(RVA = "0x16803AC", Offset = "0x16803AC", VA = "0x16803AC")]
		public static void ClientTryProcessRpc(this NetworkRequestHandler networkRequestHandler, byte requestId, int senderConnectionId, object data, [Optional] Action action)
		{
		}
	}
	[Token(Token = "0x200067B")]
	public class NobleNetworkManager : NobleConnect.Mirror.NobleNetworkManager, INetworkManager
	{
		[Token(Token = "0x17000524")]
		public NetworkManagerMode Mode
		{
			[Token(Token = "0x60020AF")]
			[Address(RVA = "0x1680488", Offset = "0x1680488", VA = "0x1680488", Slot = "39")]
			get
			{
				return default(NetworkManagerMode);
			}
		}

		[Token(Token = "0x17000525")]
		public Transport Transport
		{
			[Token(Token = "0x60020B0")]
			[Address(RVA = "0x1680490", Offset = "0x1680490", VA = "0x1680490", Slot = "40")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000526")]
		public int MaxConnections
		{
			[Token(Token = "0x60020B1")]
			[Address(RVA = "0x1680498", Offset = "0x1680498", VA = "0x1680498", Slot = "41")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60020B2")]
			[Address(RVA = "0x16804A0", Offset = "0x16804A0", VA = "0x16804A0", Slot = "42")]
			set
			{
			}
		}

		[Token(Token = "0x17000527")]
		public string OnlineScene
		{
			[Token(Token = "0x60020B3")]
			[Address(RVA = "0x16804A8", Offset = "0x16804A8", VA = "0x16804A8", Slot = "43")]
			get
			{
				return null;
			}
			[Token(Token = "0x60020B4")]
			[Address(RVA = "0x16804B0", Offset = "0x16804B0", VA = "0x16804B0", Slot = "44")]
			set
			{
			}
		}

		[Token(Token = "0x17000528")]
		public string NetworkAddress
		{
			[Token(Token = "0x60020B5")]
			[Address(RVA = "0x16804B8", Offset = "0x16804B8", VA = "0x16804B8", Slot = "45")]
			get
			{
				return null;
			}
			[Token(Token = "0x60020B6")]
			[Address(RVA = "0x16804C0", Offset = "0x16804C0", VA = "0x16804C0", Slot = "46")]
			set
			{
			}
		}

		[Token(Token = "0x17000529")]
		public int NetworkPort
		{
			[Token(Token = "0x60020B7")]
			[Address(RVA = "0x16804C8", Offset = "0x16804C8", VA = "0x16804C8", Slot = "47")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60020B8")]
			[Address(RVA = "0x16804D0", Offset = "0x16804D0", VA = "0x16804D0", Slot = "48")]
			set
			{
			}
		}

		[Token(Token = "0x1700052A")]
		public int NumPlayers
		{
			[Token(Token = "0x60020B9")]
			[Address(RVA = "0x16804D8", Offset = "0x16804D8", VA = "0x16804D8", Slot = "49")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x14000074")]
		public event Action ClientStopped
		{
			[Token(Token = "0x60020BA")]
			[Address(RVA = "0x16804E0", Offset = "0x16804E0", VA = "0x16804E0", Slot = "57")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60020BB")]
			[Address(RVA = "0x168057C", Offset = "0x168057C", VA = "0x168057C", Slot = "58")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000075")]
		public event Action ServerStarted
		{
			[Token(Token = "0x60020BC")]
			[Address(RVA = "0x1680618", Offset = "0x1680618", VA = "0x1680618", Slot = "59")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60020BD")]
			[Address(RVA = "0x16806B4", Offset = "0x16806B4", VA = "0x16806B4", Slot = "60")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000076")]
		public event Action ServerStopped
		{
			[Token(Token = "0x60020BE")]
			[Address(RVA = "0x1680750", Offset = "0x1680750", VA = "0x1680750", Slot = "61")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60020BF")]
			[Address(RVA = "0x16807EC", Offset = "0x16807EC", VA = "0x16807EC", Slot = "62")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000077")]
		public event Action<NetworkConnection> ClientSceneChanged
		{
			[Token(Token = "0x60020C0")]
			[Address(RVA = "0x1680888", Offset = "0x1680888", VA = "0x1680888", Slot = "63")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60020C1")]
			[Address(RVA = "0x168093C", Offset = "0x168093C", VA = "0x168093C", Slot = "64")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000078")]
		public event Action<NetworkConnectionToClient> ServerClientDisconnected
		{
			[Token(Token = "0x60020C2")]
			[Address(RVA = "0x16809F0", Offset = "0x16809F0", VA = "0x16809F0", Slot = "65")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60020C3")]
			[Address(RVA = "0x1680AA4", Offset = "0x1680AA4", VA = "0x1680AA4", Slot = "66")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000079")]
		public event Action<string, ushort> ServerPrepared
		{
			[Token(Token = "0x60020C4")]
			[Address(RVA = "0x1680B58", Offset = "0x1680B58", VA = "0x1680B58", Slot = "67")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60020C5")]
			[Address(RVA = "0x1680C0C", Offset = "0x1680C0C", VA = "0x1680C0C", Slot = "68")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x60020C6")]
		[Address(RVA = "0x1680CC0", Offset = "0x1680CC0", VA = "0x1680CC0", Slot = "27")]
		public override void OnStartServer()
		{
		}

		[Token(Token = "0x60020C7")]
		[Address(RVA = "0x1680CF4", Offset = "0x1680CF4", VA = "0x1680CF4", Slot = "29")]
		public override void OnStopServer()
		{
		}

		[Token(Token = "0x60020C8")]
		[Address(RVA = "0x1680D28", Offset = "0x1680D28", VA = "0x1680D28", Slot = "30")]
		public override void OnStopClient()
		{
		}

		[Token(Token = "0x60020C9")]
		[Address(RVA = "0x1680D5C", Offset = "0x1680D5C", VA = "0x1680D5C", Slot = "52")]
		public new void StopClient()
		{
		}

		[Token(Token = "0x60020CA")]
		[Address(RVA = "0x1680DA0", Offset = "0x1680DA0", VA = "0x1680DA0", Slot = "38")]
		public override void OnServerPrepared(string hostAddress, ushort hostPort)
		{
		}

		[Token(Token = "0x60020CB")]
		[Address(RVA = "0x1680DF0", Offset = "0x1680DF0", VA = "0x1680DF0", Slot = "25")]
		public override void OnClientSceneChanged()
		{
		}

		[Token(Token = "0x60020CC")]
		[Address(RVA = "0x1680EA8", Offset = "0x1680EA8", VA = "0x1680EA8", Slot = "14")]
		public override void OnServerDisconnect(NetworkConnectionToClient conn)
		{
		}

		[Token(Token = "0x60020CD")]
		[Address(RVA = "0x1680EF0", Offset = "0x1680EF0", VA = "0x1680EF0")]
		public NobleNetworkManager()
		{
		}

		[Token(Token = "0x60020CE")]
		[Address(RVA = "0x1680EF8", Offset = "0x1680EF8", VA = "0x1680EF8", Slot = "55")]
		private void Networking.INetworkManager.StopHost()
		{
		}

		[Token(Token = "0x60020CF")]
		[Address(RVA = "0x1680F00", Offset = "0x1680F00", VA = "0x1680F00", Slot = "56")]
		private Transform Networking.INetworkManager.GetStartPosition()
		{
			return null;
		}
	}
	[Token(Token = "0x200067C")]
	public class AnatomyNetworkManager : MonoBehaviour, IMatchmakerFactory
	{
		[Token(Token = "0x200067D")]
		public enum SelectedRole
		{
			[Token(Token = "0x4001D52")]
			Teacher,
			[Token(Token = "0x4001D53")]
			Student
		}

		[Token(Token = "0x200067E")]
		public enum ClientMode
		{
			[Token(Token = "0x4001D55")]
			Interactive,
			[Token(Token = "0x4001D56")]
			Observer
		}

		[Token(Token = "0x200067F")]
		public readonly struct UserModel : IEquatable<UserModel>
		{
			[Token(Token = "0x4001D57")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public readonly string Name;

			[Token(Token = "0x60020EF")]
			[Address(RVA = "0x16831E4", Offset = "0x16831E4", VA = "0x16831E4")]
			public UserModel(string name)
			{
			}

			[Token(Token = "0x60020F0")]
			[Address(RVA = "0x16831EC", Offset = "0x16831EC", VA = "0x16831EC", Slot = "4")]
			public bool Equals(UserModel other)
			{
				return default(bool);
			}

			[Token(Token = "0x60020F1")]
			[Address(RVA = "0x16831F8", Offset = "0x16831F8", VA = "0x16831F8", Slot = "0")]
			public override bool Equals(object obj)
			{
				return default(bool);
			}

			[Token(Token = "0x60020F2")]
			[Address(RVA = "0x1683274", Offset = "0x1683274", VA = "0x1683274", Slot = "2")]
			public override int GetHashCode()
			{
				return default(int);
			}
		}

		[Token(Token = "0x2000680")]
		private struct CreatePlayerMessage : NetworkMessage
		{
			[Token(Token = "0x4001D58")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public SelectedRole SelectedRole;

			[Token(Token = "0x4001D59")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public ClientMode ClientMode;

			[Token(Token = "0x4001D5A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public UserModel PlayerModel;
		}

		[Token(Token = "0x2000681")]
		public enum State
		{
			[Token(Token = "0x4001D5C")]
			Disconnected,
			[Token(Token = "0x4001D5D")]
			StartingHost,
			[Token(Token = "0x4001D5E")]
			ServerPrepared,
			[Token(Token = "0x4001D5F")]
			CreatingMatch,
			[Token(Token = "0x4001D60")]
			ServerRunning,
			[Token(Token = "0x4001D61")]
			ConnectionLost,
			[Token(Token = "0x4001D62")]
			JoiningMatch,
			[Token(Token = "0x4001D63")]
			MatchJoined,
			[Token(Token = "0x4001D64")]
			StartingClient,
			[Token(Token = "0x4001D65")]
			ClientConnected
		}

		[StructLayout(3)]
		[Token(Token = "0x2000682")]
		[CompilerGenerated]
		private struct <UpdateMatch>d__50 : IAsyncStateMachine
		{
			[Token(Token = "0x4001D66")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001D67")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder<bool> <>t__builder;

			[Token(Token = "0x4001D68")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AnatomyNetworkManager <>4__this;

			[Token(Token = "0x4001D69")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public IServerInfo serverInfo;

			[Token(Token = "0x4001D6A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public CancellationToken cancellationToken;

			[Token(Token = "0x4001D6B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public int repeatInterval;

			[Token(Token = "0x4001D6C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public int maxAttemptCount;

			[Token(Token = "0x4001D6D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private int <attemptCount>5__2;

			[Token(Token = "0x4001D6E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private IMatchmaker <matchmaker>5__3;

			[Token(Token = "0x4001D6F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private TaskAwaiter<IServerInfo> <>u__1;

			[Token(Token = "0x4001D70")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private TaskAwaiter <>u__2;

			[Token(Token = "0x60020F3")]
			[Address(RVA = "0x168328C", Offset = "0x168328C", VA = "0x168328C", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60020F4")]
			[Address(RVA = "0x1683908", Offset = "0x1683908", VA = "0x1683908", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000683")]
		[CompilerGenerated]
		private struct <CreateMatch>d__51 : IAsyncStateMachine
		{
			[Token(Token = "0x4001D71")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001D72")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder<bool> <>t__builder;

			[Token(Token = "0x4001D73")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AnatomyNetworkManager <>4__this;

			[Token(Token = "0x4001D74")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public IServerInfo serverInfo;

			[Token(Token = "0x4001D75")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public CancellationToken cancellationToken;

			[Token(Token = "0x4001D76")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private TaskAwaiter<bool> <>u__1;

			[Token(Token = "0x60020F5")]
			[Address(RVA = "0x1683960", Offset = "0x1683960", VA = "0x1683960", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60020F6")]
			[Address(RVA = "0x1683B78", Offset = "0x1683B78", VA = "0x1683B78", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000684")]
		[CompilerGenerated]
		private struct <CreateMatch>d__52 : IAsyncStateMachine
		{
			[Token(Token = "0x4001D77")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001D78")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder<bool> <>t__builder;

			[Token(Token = "0x4001D79")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AnatomyNetworkManager <>4__this;

			[Token(Token = "0x4001D7A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public IServerInfo serverInfo;

			[Token(Token = "0x4001D7B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public CancellationToken cancellationToken;

			[Token(Token = "0x4001D7C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public int repeatInterval;

			[Token(Token = "0x4001D7D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public int maxAttemptCount;

			[Token(Token = "0x4001D7E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private IMatchmaker <matchmaker>5__2;

			[Token(Token = "0x4001D7F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private int <attemptCount>5__3;

			[Token(Token = "0x4001D80")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private TaskAwaiter<IServerInfo> <>u__1;

			[Token(Token = "0x4001D81")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private TaskAwaiter <>u__2;

			[Token(Token = "0x60020F7")]
			[Address(RVA = "0x1683BD0", Offset = "0x1683BD0", VA = "0x1683BD0", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60020F8")]
			[Address(RVA = "0x1684660", Offset = "0x1684660", VA = "0x1684660", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000685")]
		[CompilerGenerated]
		private struct <JoinMatch>d__53 : IAsyncStateMachine
		{
			[Token(Token = "0x4001D82")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001D83")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder<IServerInfo> <>t__builder;

			[Token(Token = "0x4001D84")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AnatomyNetworkManager <>4__this;

			[Token(Token = "0x4001D85")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public IServerInfo serverInfo;

			[Token(Token = "0x4001D86")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public CancellationToken cancellationToken;

			[Token(Token = "0x4001D87")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public int repeatInterval;

			[Token(Token = "0x4001D88")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public int maxAttemptCount;

			[Token(Token = "0x4001D89")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private int <attemptCount>5__2;

			[Token(Token = "0x4001D8A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private IMatchmaker <matchmaker>5__3;

			[Token(Token = "0x4001D8B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private TaskAwaiter<IServerInfo> <>u__1;

			[Token(Token = "0x4001D8C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private TaskAwaiter <>u__2;

			[Token(Token = "0x60020F9")]
			[Address(RVA = "0x16846B8", Offset = "0x16846B8", VA = "0x16846B8", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60020FA")]
			[Address(RVA = "0x1684C20", Offset = "0x1684C20", VA = "0x1684C20", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000687")]
		[CompilerGenerated]
		private struct <StartConnect>d__54 : IAsyncStateMachine
		{
			[Token(Token = "0x4001D91")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001D92")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder<bool> <>t__builder;

			[Token(Token = "0x4001D93")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public IServerInfo serverInfo;

			[Token(Token = "0x4001D94")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public AnatomyNetworkManager <>4__this;

			[Token(Token = "0x4001D95")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public CancellationToken cancellationToken;

			[Token(Token = "0x4001D96")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public int timeoutInterval;

			[Token(Token = "0x4001D97")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public int maxAttemptCount;

			[Token(Token = "0x4001D98")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private int <attemptCount>5__2;

			[Token(Token = "0x4001D99")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x6002100")]
			[Address(RVA = "0x1684ED0", Offset = "0x1684ED0", VA = "0x1684ED0", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6002101")]
			[Address(RVA = "0x168589C", Offset = "0x168589C", VA = "0x168589C", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000688")]
		[CompilerGenerated]
		private struct <OnNumPlayersChanged>d__57 : IAsyncStateMachine
		{
			[Token(Token = "0x4001D9A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001D9B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4001D9C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public AnatomyNetworkManager <>4__this;

			[Token(Token = "0x4001D9D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public int newValue;

			[Token(Token = "0x4001D9E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private TaskAwaiter<bool> <>u__1;

			[Token(Token = "0x6002102")]
			[Address(RVA = "0x16858F4", Offset = "0x16858F4", VA = "0x16858F4", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6002103")]
			[Address(RVA = "0x1685C70", Offset = "0x1685C70", VA = "0x1685C70", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000689")]
		[CompilerGenerated]
		private struct <OnMatchmakerConnectionLost>d__58 : IAsyncStateMachine
		{
			[Token(Token = "0x4001D9F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001DA0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4001DA1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public AnatomyNetworkManager <>4__this;

			[Token(Token = "0x4001DA2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x6002104")]
			[Address(RVA = "0x1685C7C", Offset = "0x1685C7C", VA = "0x1685C7C", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6002105")]
			[Address(RVA = "0x168602C", Offset = "0x168602C", VA = "0x168602C", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x200068A")]
		[CompilerGenerated]
		private sealed class <>c__DisplayClass59_0
		{
			[Token(Token = "0x4001DA3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public object serverPrepared;

			[Token(Token = "0x4001DA4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string hostAddress;

			[Token(Token = "0x4001DA5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ushort hostPort;

			[Token(Token = "0x6002106")]
			[Address(RVA = "0x1686038", Offset = "0x1686038", VA = "0x1686038")]
			public <>c__DisplayClass59_0()
			{
			}

			[Token(Token = "0x6002107")]
			[Address(RVA = "0x1686040", Offset = "0x1686040", VA = "0x1686040")]
			internal void <CreateServer>b__0(string ha, ushort hp)
			{
			}

			[Token(Token = "0x6002108")]
			[Address(RVA = "0x16860D0", Offset = "0x16860D0", VA = "0x16860D0")]
			internal bool <CreateServer>b__1()
			{
				return default(bool);
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200068B")]
		[CompilerGenerated]
		private struct <CreateServer>d__59 : IAsyncStateMachine
		{
			[Token(Token = "0x4001DA6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001DA7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4001DA8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AnatomyNetworkManager <>4__this;

			[Token(Token = "0x4001DA9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public IServerInfo serverInfo;

			[Token(Token = "0x4001DAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public CancellationToken cancellationToken;

			[Token(Token = "0x4001DAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private <>c__DisplayClass59_0 <>8__1;

			[Token(Token = "0x4001DAC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x6002109")]
			[Address(RVA = "0x16860E0", Offset = "0x16860E0", VA = "0x16860E0", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x600210A")]
			[Address(RVA = "0x1686944", Offset = "0x1686944", VA = "0x1686944", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200068C")]
		[CompilerGenerated]
		private struct <Connect>d__60 : IAsyncStateMachine
		{
			[Token(Token = "0x4001DAD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001DAE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder<bool> <>t__builder;

			[Token(Token = "0x4001DAF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AnatomyNetworkManager <>4__this;

			[Token(Token = "0x4001DB0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public IServerInfo serverInfo;

			[Token(Token = "0x4001DB1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public CancellationToken cancellationToken;

			[Token(Token = "0x4001DB2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private TaskAwaiter<IServerInfo> <>u__1;

			[Token(Token = "0x4001DB3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private TaskAwaiter<bool> <>u__2;

			[Token(Token = "0x600210B")]
			[Address(RVA = "0x1686950", Offset = "0x1686950", VA = "0x1686950", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x600210C")]
			[Address(RVA = "0x1686E68", Offset = "0x1686E68", VA = "0x1686E68", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4001D3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static AnatomyNetworkManager _instance;

		[Token(Token = "0x4001D3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private ClientMode _clientMode;

		[Token(Token = "0x4001D3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject _mobilePlayerPrefab;

		[Token(Token = "0x4001D3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject _vrPlayerPrefab;

		[Token(Token = "0x4001D3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject _observerPrefab;

		[Token(Token = "0x4001D3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private VrNetworkDiscovery _vrNetworkDiscovery;

		[Token(Token = "0x4001D40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private int _createMatchMaxAttempts;

		[Token(Token = "0x4001D41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private float _createMatchRepeatInterval;

		[Token(Token = "0x4001D42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private int _updateMatchMaxAttempts;

		[Token(Token = "0x4001D43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		private float _updateMatchRepeatInterval;

		[Token(Token = "0x4001D44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private int _joinMatchMaxAttempts;

		[Token(Token = "0x4001D45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		private float _joinMatchRepeatInterval;

		[Token(Token = "0x4001D46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private float _clientConnectTimeout;

		[Token(Token = "0x4001D47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[SerializeField]
		private int _clientConnectMaxAttempts;

		[Token(Token = "0x4001D48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private ServerInfo _serverInfo;

		[Token(Token = "0x4001D49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private MatchUpMatchmaker _matchUpMatchmaker;

		[Token(Token = "0x4001D4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private int _lastNumPlayers;

		[Token(Token = "0x4001D4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private bool _matchCreated;

		[Token(Token = "0x4001D4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private CancellationTokenSource _updateMatchCancellationTokenSource;

		[Token(Token = "0x4001D4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private INetworkManager _networkManager;

		[Token(Token = "0x1700052B")]
		public static AnatomyNetworkManager Instance
		{
			[Token(Token = "0x60020D0")]
			[Address(RVA = "0x167CB40", Offset = "0x167CB40", VA = "0x167CB40")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700052C")]
		private INetworkManager NetworkManager
		{
			[Token(Token = "0x60020D1")]
			[Address(RVA = "0x1680F08", Offset = "0x1680F08", VA = "0x1680F08")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700052D")]
		public IServerInfo ServerInfo
		{
			[Token(Token = "0x60020D2")]
			[Address(RVA = "0x1680F78", Offset = "0x1680F78", VA = "0x1680F78")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700052E")]
		public State CurrentState
		{
			[Token(Token = "0x60020D3")]
			[Address(RVA = "0x1680F80", Offset = "0x1680F80", VA = "0x1680F80")]
			[CompilerGenerated]
			get
			{
				return default(State);
			}
			[Token(Token = "0x60020D4")]
			[Address(RVA = "0x1680F88", Offset = "0x1680F88", VA = "0x1680F88")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700052F")]
		public Guid Id
		{
			[Token(Token = "0x60020D7")]
			[Address(RVA = "0x16810F0", Offset = "0x16810F0", VA = "0x16810F0")]
			[CompilerGenerated]
			get
			{
				return default(Guid);
			}
			[Token(Token = "0x60020D8")]
			[Address(RVA = "0x16810FC", Offset = "0x16810FC", VA = "0x16810FC")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1400007A")]
		public event Action<NetworkConnection> ClientDisconnected
		{
			[Token(Token = "0x60020D5")]
			[Address(RVA = "0x1680F90", Offset = "0x1680F90", VA = "0x1680F90")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60020D6")]
			[Address(RVA = "0x1681040", Offset = "0x1681040", VA = "0x1681040")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x60020D9")]
		[Address(RVA = "0x1681104", Offset = "0x1681104", VA = "0x1681104")]
		public void OnStartServer()
		{
		}

		[Token(Token = "0x60020DA")]
		[Address(RVA = "0x16811D4", Offset = "0x16811D4", VA = "0x16811D4")]
		public void OnStopServer()
		{
		}

		[Token(Token = "0x60020DB")]
		[Address(RVA = "0x16812D8", Offset = "0x16812D8", VA = "0x16812D8")]
		public void OnStopClient()
		{
		}

		[Token(Token = "0x60020DC")]
		[Address(RVA = "0x16813A8", Offset = "0x16813A8", VA = "0x16813A8")]
		public void OnClientSceneChanged(NetworkConnection conn)
		{
		}

		[Token(Token = "0x60020DD")]
		[Address(RVA = "0x1681600", Offset = "0x1681600", VA = "0x1681600")]
		public void OnServerDisconnect(NetworkConnection conn)
		{
		}

		[Token(Token = "0x60020DE")]
		[Address(RVA = "0x168161C", Offset = "0x168161C", VA = "0x168161C")]
		private void Start()
		{
		}

		[Token(Token = "0x60020DF")]
		[Address(RVA = "0x16819E8", Offset = "0x16819E8", VA = "0x16819E8")]
		public void Update()
		{
		}

		[Token(Token = "0x60020E0")]
		[Address(RVA = "0x1681B74", Offset = "0x1681B74", VA = "0x1681B74")]
		public void OnDestroy()
		{
		}

		[Token(Token = "0x60020E1")]
		[Address(RVA = "0x1681F40", Offset = "0x1681F40", VA = "0x1681F40")]
		[AsyncStateMachine(typeof(<UpdateMatch>d__50))]
		private Task<bool> UpdateMatch(IServerInfo serverInfo, int maxAttemptCount, int repeatInterval, CancellationToken cancellationToken)
		{
			return null;
		}

		[Token(Token = "0x60020E2")]
		[Address(RVA = "0x168209C", Offset = "0x168209C", VA = "0x168209C")]
		[AsyncStateMachine(typeof(<CreateMatch>d__51))]
		public Task<bool> CreateMatch(IServerInfo serverInfo, CancellationToken cancellationToken)
		{
			return null;
		}

		[Token(Token = "0x60020E3")]
		[Address(RVA = "0x16821E0", Offset = "0x16821E0", VA = "0x16821E0")]
		[AsyncStateMachine(typeof(<CreateMatch>d__52))]
		private Task<bool> CreateMatch(IServerInfo serverInfo, int maxAttemptCount, int repeatInterval, CancellationToken cancellationToken)
		{
			return null;
		}

		[Token(Token = "0x60020E4")]
		[Address(RVA = "0x168233C", Offset = "0x168233C", VA = "0x168233C")]
		[AsyncStateMachine(typeof(<JoinMatch>d__53))]
		private Task<IServerInfo> JoinMatch(IServerInfo serverInfo, int maxAttemptCount, int repeatInterval, CancellationToken cancellationToken)
		{
			return null;
		}

		[Token(Token = "0x60020E5")]
		[Address(RVA = "0x1682490", Offset = "0x1682490", VA = "0x1682490")]
		[AsyncStateMachine(typeof(<StartConnect>d__54))]
		private Task<bool> StartConnect(IServerInfo serverInfo, int maxAttemptCount, int timeoutInterval, CancellationToken cancellationToken)
		{
			return null;
		}

		[Token(Token = "0x60020E6")]
		[Address(RVA = "0x16825EC", Offset = "0x16825EC", VA = "0x16825EC")]
		private void OnCreatePlayer(NetworkConnectionToClient conn, CreatePlayerMessage message)
		{
		}

		[Token(Token = "0x60020E7")]
		[Address(RVA = "0x16813AC", Offset = "0x16813AC", VA = "0x16813AC")]
		public void SendAddPlayerMessage(NetworkConnection conn)
		{
		}

		[Token(Token = "0x60020E8")]
		[Address(RVA = "0x1681AB8", Offset = "0x1681AB8", VA = "0x1681AB8")]
		[AsyncStateMachine(typeof(<OnNumPlayersChanged>d__57))]
		private void OnNumPlayersChanged(int oldValue, int newValue)
		{
		}

		[Token(Token = "0x60020E9")]
		[Address(RVA = "0x1682C80", Offset = "0x1682C80", VA = "0x1682C80")]
		[AsyncStateMachine(typeof(<OnMatchmakerConnectionLost>d__58))]
		private void OnMatchmakerConnectionLost()
		{
		}

		[Token(Token = "0x60020EA")]
		[Address(RVA = "0x1682D38", Offset = "0x1682D38", VA = "0x1682D38")]
		[AsyncStateMachine(typeof(<CreateServer>d__59))]
		public Task CreateServer(IServerInfo serverInfo, CancellationToken cancellationToken)
		{
			return null;
		}

		[Token(Token = "0x60020EB")]
		[Address(RVA = "0x167D150", Offset = "0x167D150", VA = "0x167D150")]
		[AsyncStateMachine(typeof(<Connect>d__60))]
		public Task<bool> Connect(IServerInfo serverInfo, CancellationToken cancellationToken)
		{
			return null;
		}

		[Token(Token = "0x60020EC")]
		[Address(RVA = "0x1682E58", Offset = "0x1682E58", VA = "0x1682E58")]
		public void Disconnect()
		{
		}

		[Token(Token = "0x60020ED")]
		[Address(RVA = "0x167CCEC", Offset = "0x167CCEC", VA = "0x167CCEC", Slot = "4")]
		public IMatchmaker GetMatchmaker(ServerType serverType)
		{
			return null;
		}

		[Token(Token = "0x60020EE")]
		[Address(RVA = "0x16831B4", Offset = "0x16831B4", VA = "0x16831B4")]
		public AnatomyNetworkManager()
		{
		}
	}
	[Token(Token = "0x200068D")]
	public class AnatomyNetworkPlayerHandler : NetworkBehaviour
	{
		[Token(Token = "0x4001DB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private AvatarBodyBehaviour _avatar;

		[Token(Token = "0x4001DB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private AvatarContainer _avatarContainer;

		[Token(Token = "0x4001DB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private TextMeshPro _nameTag;

		[Token(Token = "0x4001DB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SyncVar]
		private string _name;

		[Token(Token = "0x4001DB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SyncVar]
		private AnatomyNetworkManager.SelectedRole _role;

		[Token(Token = "0x4001DB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[SyncVar]
		private Avatars.Avatar _avatarVisuals;

		[Token(Token = "0x4001DBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private string _lastName;

		[Token(Token = "0x4001DBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private AnatomyNetworkManager.SelectedRole _lastRole;

		[Token(Token = "0x4001DBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private Avatars.Avatar _lastAvatarVisuals;

		[Token(Token = "0x4001DBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		private bool _avatarActive;

		[Token(Token = "0x4001DBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13D")]
		private bool _isNameTagNotNull;

		[Token(Token = "0x17000530")]
		public string Name
		{
			[Token(Token = "0x600210D")]
			[Address(RVA = "0x1684E3C", Offset = "0x1684E3C", VA = "0x1684E3C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600210E")]
			[Address(RVA = "0x1682C78", Offset = "0x1682C78", VA = "0x1682C78")]
			set
			{
			}
		}

		[Token(Token = "0x17000531")]
		public AnatomyNetworkManager.SelectedRole Role
		{
			[Token(Token = "0x600210F")]
			[Address(RVA = "0x1686F7C", Offset = "0x1686F7C", VA = "0x1686F7C")]
			get
			{
				return default(AnatomyNetworkManager.SelectedRole);
			}
			[Token(Token = "0x6002110")]
			[Address(RVA = "0x1682C7C", Offset = "0x1682C7C", VA = "0x1682C7C")]
			set
			{
			}
		}

		[Token(Token = "0x17000532")]
		public string Network_name
		{
			[Token(Token = "0x6002119")]
			[Address(RVA = "0x16877B4", Offset = "0x16877B4", VA = "0x16877B4")]
			get
			{
				return null;
			}
			[Token(Token = "0x600211A")]
			[Address(RVA = "0x1686EC0", Offset = "0x1686EC0", VA = "0x1686EC0")]
			[param: In]
			set
			{
			}
		}

		[Token(Token = "0x17000533")]
		public AnatomyNetworkManager.SelectedRole Network_role
		{
			[Token(Token = "0x600211B")]
			[Address(RVA = "0x16877BC", Offset = "0x16877BC", VA = "0x16877BC")]
			get
			{
				return default(AnatomyNetworkManager.SelectedRole);
			}
			[Token(Token = "0x600211C")]
			[Address(RVA = "0x1686F84", Offset = "0x1686F84", VA = "0x1686F84")]
			[param: In]
			set
			{
			}
		}

		[Token(Token = "0x17000534")]
		public Avatars.Avatar Network_avatarVisuals
		{
			[Token(Token = "0x600211D")]
			[Address(RVA = "0x16877C4", Offset = "0x16877C4", VA = "0x16877C4")]
			get
			{
				return default(Avatars.Avatar);
			}
			[Token(Token = "0x600211E")]
			[Address(RVA = "0x16874AC", Offset = "0x16874AC", VA = "0x16874AC")]
			[param: In]
			set
			{
			}
		}

		[Token(Token = "0x6002111")]
		[Address(RVA = "0x1687040", Offset = "0x1687040", VA = "0x1687040")]
		private void Start()
		{
		}

		[Token(Token = "0x6002112")]
		[Address(RVA = "0x16870AC", Offset = "0x16870AC", VA = "0x16870AC")]
		public void SetAvatarActive(bool value)
		{
		}

		[Token(Token = "0x6002113")]
		[Address(RVA = "0x1687154", Offset = "0x1687154", VA = "0x1687154")]
		private void SetupAvatar(AnatomyNetworkManager.SelectedRole role, string name)
		{
		}

		[Token(Token = "0x6002114")]
		[Address(RVA = "0x1687200", Offset = "0x1687200", VA = "0x1687200")]
		private void Update()
		{
		}

		[Token(Token = "0x6002115")]
		[Address(RVA = "0x16873A8", Offset = "0x16873A8", VA = "0x16873A8", Slot = "12")]
		public override void OnStartLocalPlayer()
		{
		}

		[Token(Token = "0x6002116")]
		[Address(RVA = "0x16875B4", Offset = "0x16875B4", VA = "0x16875B4")]
		[Command]
		private void CmdSetAvatar(Avatars.Avatar avatarVisuals)
		{
		}

		[Token(Token = "0x6002117")]
		[Address(RVA = "0x16877A0", Offset = "0x16877A0", VA = "0x16877A0")]
		public AnatomyNetworkPlayerHandler()
		{
		}

		[Token(Token = "0x6002118")]
		[Address(RVA = "0x16877B0", Offset = "0x16877B0", VA = "0x16877B0")]
		private void MirrorProcessed()
		{
		}

		[Token(Token = "0x600211F")]
		[Address(RVA = "0x16877D4", Offset = "0x16877D4", VA = "0x16877D4")]
		protected void UserCode_CmdSetAvatar__Avatar(Avatars.Avatar avatarVisuals)
		{
		}

		[Token(Token = "0x6002120")]
		[Address(RVA = "0x1687804", Offset = "0x1687804", VA = "0x1687804")]
		protected static void InvokeUserCode_CmdSetAvatar__Avatar(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x6002121")]
		[Address(RVA = "0x1687988", Offset = "0x1687988", VA = "0x1687988")]
		static AnatomyNetworkPlayerHandler()
		{
		}

		[Token(Token = "0x6002122")]
		[Address(RVA = "0x1687AA0", Offset = "0x1687AA0", VA = "0x1687AA0", Slot = "6")]
		public override bool SerializeSyncVars(NetworkWriter writer, bool forceAll)
		{
			return default(bool);
		}

		[Token(Token = "0x6002123")]
		[Address(RVA = "0x1687C00", Offset = "0x1687C00", VA = "0x1687C00", Slot = "7")]
		public override void DeserializeSyncVars(NetworkReader reader, bool initialState)
		{
		}
	}
	[Token(Token = "0x200068E")]
	public class NetworkObserver : NetworkBehaviour
	{
		[Token(Token = "0x4001DBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject _playerPrefab;

		[Token(Token = "0x4001DC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private VivoxNetworkHandler _vivoxNetworkHandler;

		[Token(Token = "0x4001DC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private NetworkBehaviour _teacher;

		[Token(Token = "0x4001DC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private FollowCamera _followCamera;

		[Token(Token = "0x17000535")]
		public string Name
		{
			[Token(Token = "0x6002124")]
			[Address(RVA = "0x1687D94", Offset = "0x1687D94", VA = "0x1687D94")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6002125")]
			[Address(RVA = "0x1687D9C", Offset = "0x1687D9C", VA = "0x1687D9C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6002126")]
		[Address(RVA = "0x1687DA4", Offset = "0x1687DA4", VA = "0x1687DA4")]
		private void SetupScene()
		{
		}

		[Token(Token = "0x6002127")]
		[Address(RVA = "0x1687DB0", Offset = "0x1687DB0", VA = "0x1687DB0")]
		public static NetworkBehaviour GetTeacher()
		{
			return null;
		}

		[Token(Token = "0x6002128")]
		[Address(RVA = "0x1688038", Offset = "0x1688038", VA = "0x1688038")]
		private void TryInitTeacher()
		{
		}

		[Token(Token = "0x6002129")]
		[Address(RVA = "0x168821C", Offset = "0x168821C", VA = "0x168821C")]
		private void Update()
		{
		}

		[Token(Token = "0x600212A")]
		[Address(RVA = "0x16882A0", Offset = "0x16882A0", VA = "0x16882A0")]
		public NetworkObserver()
		{
		}

		[Token(Token = "0x600212B")]
		[Address(RVA = "0x16882A8", Offset = "0x16882A8", VA = "0x16882A8")]
		private void MirrorProcessed()
		{
		}
	}
	[Token(Token = "0x200068F")]
	public class NetworkTestController : NetworkBehaviour
	{
		[Token(Token = "0x4001DC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private TestController _testController;

		[Token(Token = "0x600212C")]
		[Address(RVA = "0x16882AC", Offset = "0x16882AC", VA = "0x16882AC")]
		[Command(requiresAuthority = false)]
		public void CmdStartTest(string json)
		{
		}

		[Token(Token = "0x600212D")]
		[Address(RVA = "0x16884A0", Offset = "0x16884A0", VA = "0x16884A0")]
		[Command(requiresAuthority = false)]
		public void CmdCancelTest()
		{
		}

		[Token(Token = "0x600212E")]
		[Address(RVA = "0x168865C", Offset = "0x168865C", VA = "0x168865C")]
		[ClientRpc]
		private void RpcStartTest(string json)
		{
		}

		[Token(Token = "0x600212F")]
		[Address(RVA = "0x1688850", Offset = "0x1688850", VA = "0x1688850")]
		[ClientRpc]
		private void RpcCancelTest()
		{
		}

		[Token(Token = "0x6002130")]
		[Address(RVA = "0x1688A0C", Offset = "0x1688A0C", VA = "0x1688A0C")]
		public NetworkTestController()
		{
		}

		[Token(Token = "0x6002131")]
		[Address(RVA = "0x1688A14", Offset = "0x1688A14", VA = "0x1688A14")]
		private void MirrorProcessed()
		{
		}

		[Token(Token = "0x6002132")]
		[Address(RVA = "0x1688A18", Offset = "0x1688A18", VA = "0x1688A18")]
		protected void UserCode_CmdStartTest__String(string json)
		{
		}

		[Token(Token = "0x6002133")]
		[Address(RVA = "0x1688A1C", Offset = "0x1688A1C", VA = "0x1688A1C")]
		protected static void InvokeUserCode_CmdStartTest__String(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x6002134")]
		[Address(RVA = "0x1688B94", Offset = "0x1688B94", VA = "0x1688B94")]
		protected void UserCode_CmdCancelTest()
		{
		}

		[Token(Token = "0x6002135")]
		[Address(RVA = "0x1688B98", Offset = "0x1688B98", VA = "0x1688B98")]
		protected static void InvokeUserCode_CmdCancelTest(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x6002136")]
		[Address(RVA = "0x1688CC8", Offset = "0x1688CC8", VA = "0x1688CC8")]
		protected void UserCode_RpcStartTest__String(string json)
		{
		}

		[Token(Token = "0x6002137")]
		[Address(RVA = "0x1688DDC", Offset = "0x1688DDC", VA = "0x1688DDC")]
		protected static void InvokeUserCode_RpcStartTest__String(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x6002138")]
		[Address(RVA = "0x1688F20", Offset = "0x1688F20", VA = "0x1688F20")]
		protected void UserCode_RpcCancelTest()
		{
		}

		[Token(Token = "0x6002139")]
		[Address(RVA = "0x1688FD8", Offset = "0x1688FD8", VA = "0x1688FD8")]
		protected static void InvokeUserCode_RpcCancelTest(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x600213A")]
		[Address(RVA = "0x16890D4", Offset = "0x16890D4", VA = "0x16890D4")]
		static NetworkTestController()
		{
		}
	}
	[Token(Token = "0x2000690")]
	public class NetworkUiPresenter : NetworkBehaviour
	{
		[Token(Token = "0x17000536")]
		public bool InteractionEnabled
		{
			[Token(Token = "0x600213B")]
			[Address(RVA = "0x1689348", Offset = "0x1689348", VA = "0x1689348")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600213C")]
			[Address(RVA = "0x1689350", Offset = "0x1689350", VA = "0x1689350")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000537")]
		public bool AvatarsEnabled
		{
			[Token(Token = "0x600213D")]
			[Address(RVA = "0x1689418", Offset = "0x1689418", VA = "0x1689418")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600213E")]
			[Address(RVA = "0x1689420", Offset = "0x1689420", VA = "0x1689420")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000538")]
		public EnvironmentType? EnvironmentType
		{
			[Token(Token = "0x600213F")]
			[Address(RVA = "0x16894E8", Offset = "0x16894E8", VA = "0x16894E8")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6002140")]
			[Address(RVA = "0x16894F0", Offset = "0x16894F0", VA = "0x16894F0")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000539")]
		public SerializedObjectInfo PresentedObject
		{
			[Token(Token = "0x6002141")]
			[Address(RVA = "0x16895B0", Offset = "0x16895B0", VA = "0x16895B0")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6002142")]
			[Address(RVA = "0x16895B8", Offset = "0x16895B8", VA = "0x16895B8")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700053A")]
		public bool Network<InteractionEnabled>k__BackingField
		{
			[Token(Token = "0x600214D")]
			[Address(RVA = "0x168A42C", Offset = "0x168A42C", VA = "0x168A42C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600214E")]
			[Address(RVA = "0x1689358", Offset = "0x1689358", VA = "0x1689358")]
			[param: In]
			set
			{
			}
		}

		[Token(Token = "0x1700053B")]
		public bool Network<AvatarsEnabled>k__BackingField
		{
			[Token(Token = "0x600214F")]
			[Address(RVA = "0x168A434", Offset = "0x168A434", VA = "0x168A434")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002150")]
			[Address(RVA = "0x1689428", Offset = "0x1689428", VA = "0x1689428")]
			[param: In]
			set
			{
			}
		}

		[Token(Token = "0x1700053C")]
		public EnvironmentType? Network<EnvironmentType>k__BackingField
		{
			[Token(Token = "0x6002151")]
			[Address(RVA = "0x168A43C", Offset = "0x168A43C", VA = "0x168A43C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002152")]
			[Address(RVA = "0x16894F4", Offset = "0x16894F4", VA = "0x16894F4")]
			[param: In]
			set
			{
			}
		}

		[Token(Token = "0x1700053D")]
		public SerializedObjectInfo Network<PresentedObject>k__BackingField
		{
			[Token(Token = "0x6002153")]
			[Address(RVA = "0x168A444", Offset = "0x168A444", VA = "0x168A444")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002154")]
			[Address(RVA = "0x16895BC", Offset = "0x16895BC", VA = "0x16895BC")]
			[param: In]
			set
			{
			}
		}

		[Token(Token = "0x1400007B")]
		public event Action<(Vector3, float)> StudentsCalled
		{
			[Token(Token = "0x6002143")]
			[Address(RVA = "0x1689678", Offset = "0x1689678", VA = "0x1689678")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6002144")]
			[Address(RVA = "0x1689728", Offset = "0x1689728", VA = "0x1689728")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6002145")]
		[Address(RVA = "0x16897D8", Offset = "0x16897D8", VA = "0x16897D8")]
		[Command(requiresAuthority = false)]
		public void CmdSetInteractionEnabled(bool value)
		{
		}

		[Token(Token = "0x6002146")]
		[Address(RVA = "0x16899CC", Offset = "0x16899CC", VA = "0x16899CC")]
		[Command(requiresAuthority = false)]
		public void CmdSetAvatarsEnabled(bool value)
		{
		}

		[Token(Token = "0x6002147")]
		[Address(RVA = "0x1689BC0", Offset = "0x1689BC0", VA = "0x1689BC0")]
		[Command(requiresAuthority = false)]
		public void CmdSetEnvironmentType(EnvironmentType value)
		{
		}

		[Token(Token = "0x6002148")]
		[Address(RVA = "0x1689D90", Offset = "0x1689D90", VA = "0x1689D90")]
		[Command(requiresAuthority = false)]
		public void CmdSetPresentedObject(SerializedObjectInfo value)
		{
		}

		[Token(Token = "0x6002149")]
		[Address(RVA = "0x1689F60", Offset = "0x1689F60", VA = "0x1689F60")]
		[Command(requiresAuthority = false)]
		public void CmdCallStudents(Vector3 position, float rotation)
		{
		}

		[Token(Token = "0x600214A")]
		[Address(RVA = "0x168A188", Offset = "0x168A188", VA = "0x168A188")]
		[ClientRpc]
		public void RpcCallStudents(Vector3 position, float rotation)
		{
		}

		[Token(Token = "0x600214B")]
		[Address(RVA = "0x168A3B0", Offset = "0x168A3B0", VA = "0x168A3B0")]
		public NetworkUiPresenter()
		{
		}

		[Token(Token = "0x600214C")]
		[Address(RVA = "0x168A428", Offset = "0x168A428", VA = "0x168A428")]
		private void MirrorProcessed()
		{
		}

		[Token(Token = "0x6002155")]
		[Address(RVA = "0x168A44C", Offset = "0x168A44C", VA = "0x168A44C")]
		protected void UserCode_CmdSetInteractionEnabled__Boolean(bool value)
		{
		}

		[Token(Token = "0x6002156")]
		[Address(RVA = "0x168A454", Offset = "0x168A454", VA = "0x168A454")]
		protected static void InvokeUserCode_CmdSetInteractionEnabled__Boolean(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x6002157")]
		[Address(RVA = "0x168A5C8", Offset = "0x168A5C8", VA = "0x168A5C8")]
		protected void UserCode_CmdSetAvatarsEnabled__Boolean(bool value)
		{
		}

		[Token(Token = "0x6002158")]
		[Address(RVA = "0x168A5D0", Offset = "0x168A5D0", VA = "0x168A5D0")]
		protected static void InvokeUserCode_CmdSetAvatarsEnabled__Boolean(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x6002159")]
		[Address(RVA = "0x168A744", Offset = "0x168A744", VA = "0x168A744")]
		protected void UserCode_CmdSetEnvironmentType__EnvironmentType(EnvironmentType value)
		{
		}

		[Token(Token = "0x600215A")]
		[Address(RVA = "0x168A7B0", Offset = "0x168A7B0", VA = "0x168A7B0")]
		protected static void InvokeUserCode_CmdSetEnvironmentType__EnvironmentType(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x600215B")]
		[Address(RVA = "0x168A904", Offset = "0x168A904", VA = "0x168A904")]
		protected void UserCode_CmdSetPresentedObject__SerializedObjectInfo(SerializedObjectInfo value)
		{
		}

		[Token(Token = "0x600215C")]
		[Address(RVA = "0x168A908", Offset = "0x168A908", VA = "0x168A908")]
		protected static void InvokeUserCode_CmdSetPresentedObject__SerializedObjectInfo(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x600215D")]
		[Address(RVA = "0x168AA5C", Offset = "0x168AA5C", VA = "0x168AA5C")]
		protected void UserCode_CmdCallStudents__Vector3__Single(Vector3 position, float rotation)
		{
		}

		[Token(Token = "0x600215E")]
		[Address(RVA = "0x168AA60", Offset = "0x168AA60", VA = "0x168AA60")]
		protected static void InvokeUserCode_CmdCallStudents__Vector3__Single(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x600215F")]
		[Address(RVA = "0x168AC10", Offset = "0x168AC10", VA = "0x168AC10")]
		protected void UserCode_RpcCallStudents__Vector3__Single(Vector3 position, float rotation)
		{
		}

		[Token(Token = "0x6002160")]
		[Address(RVA = "0x168AD50", Offset = "0x168AD50", VA = "0x168AD50")]
		protected static void InvokeUserCode_RpcCallStudents__Vector3__Single(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x6002161")]
		[Address(RVA = "0x168AECC", Offset = "0x168AECC", VA = "0x168AECC")]
		static NetworkUiPresenter()
		{
		}

		[Token(Token = "0x6002162")]
		[Address(RVA = "0x168B22C", Offset = "0x168B22C", VA = "0x168B22C", Slot = "6")]
		public override bool SerializeSyncVars(NetworkWriter writer, bool forceAll)
		{
			return default(bool);
		}

		[Token(Token = "0x6002163")]
		[Address(RVA = "0x168B444", Offset = "0x168B444", VA = "0x168B444", Slot = "7")]
		public override void DeserializeSyncVars(NetworkReader reader, bool initialState)
		{
		}
	}
	[Token(Token = "0x2000691")]
	public static class NetworkUiPresenterSerializers
	{
		[Token(Token = "0x6002164")]
		[Address(RVA = "0x168B3B4", Offset = "0x168B3B4", VA = "0x168B3B4")]
		public static void WriteEnvironmentType(this NetworkWriter writer, EnvironmentType? value)
		{
		}

		[Token(Token = "0x6002165")]
		[Address(RVA = "0x168B5D0", Offset = "0x168B5D0", VA = "0x168B5D0")]
		public static EnvironmentType? ReadEnvironmentType(this NetworkReader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x2000692")]
	public class ServerPauseHandler : NetworkBehaviour
	{
		[Token(Token = "0x6002166")]
		[Address(RVA = "0x168B650", Offset = "0x168B650", VA = "0x168B650", Slot = "12")]
		public override void OnStartLocalPlayer()
		{
		}

		[Token(Token = "0x6002167")]
		[Address(RVA = "0x168B654", Offset = "0x168B654", VA = "0x168B654")]
		private void OnServerPaused(bool value)
		{
		}

		[Token(Token = "0x6002168")]
		[Address(RVA = "0x168B658", Offset = "0x168B658", VA = "0x168B658")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6002169")]
		[Address(RVA = "0x168B65C", Offset = "0x168B65C", VA = "0x168B65C")]
		public ServerPauseHandler()
		{
		}

		[Token(Token = "0x600216A")]
		[Address(RVA = "0x168B664", Offset = "0x168B664", VA = "0x168B664")]
		private void MirrorProcessed()
		{
		}
	}
}
namespace Networking.Mirror
{
	[Token(Token = "0x2000693")]
	public class NetworkProfiler : MonoBehaviour
	{
		[Token(Token = "0x2000694")]
		private class ConnectionInfo
		{
			[Token(Token = "0x4001DDC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public readonly int[] DataSent;

			[Token(Token = "0x4001DDD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int DataReceived;

			[Token(Token = "0x4001DDE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public float TimeConnected;

			[Token(Token = "0x4001DDF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float TimeDisconnected;

			[Token(Token = "0x600217C")]
			[Address(RVA = "0x168CBA0", Offset = "0x168CBA0", VA = "0x168CBA0")]
			public ConnectionInfo()
			{
			}
		}

		[Token(Token = "0x4001DCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transport _transport;

		[Token(Token = "0x4001DCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool _showGui;

		[Token(Token = "0x4001DCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly Dictionary<int, ConnectionInfo> _connectionInfo;

		[Token(Token = "0x4001DCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private IDisposable _disposable;

		[Token(Token = "0x4001DCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Action<int> _lastOnServerConnectedAction;

		[Token(Token = "0x4001DCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Action<int> _lastOnServerDisconnectedAction;

		[Token(Token = "0x4001DD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Action<int, ArraySegment<byte>, int> _lastOnServerDataReceivedAction;

		[Token(Token = "0x4001DD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private readonly NetworkLoopStats.SimpleMovingAverage _updateAverage;

		[Token(Token = "0x4001DD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private string _sessionTime;

		[Token(Token = "0x4001DD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private double _earlyUpdateAvg;

		[Token(Token = "0x4001DD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private double _updateAvg;

		[Token(Token = "0x4001DD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private double _lateUpdateAvg;

		[Token(Token = "0x4001DD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float _recordingStartTime;

		[Token(Token = "0x4001DD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private float _recordingTime;

		[Token(Token = "0x4001DD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int _cc;

		[Token(Token = "0x4001DD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private long _r;

		[Token(Token = "0x4001DDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private long _su;

		[Token(Token = "0x4001DDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private long _sr;

		[Token(Token = "0x600216B")]
		[Address(RVA = "0x168B668", Offset = "0x168B668", VA = "0x168B668")]
		private void Start()
		{
		}

		[Token(Token = "0x600216C")]
		[Address(RVA = "0x168BC0C", Offset = "0x168BC0C", VA = "0x168BC0C")]
		private void Update()
		{
		}

		[Token(Token = "0x600216D")]
		[Address(RVA = "0x168BC58", Offset = "0x168BC58", VA = "0x168BC58")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x600216E")]
		[Address(RVA = "0x168C508", Offset = "0x168C508", VA = "0x168C508")]
		private void StopRecording()
		{
		}

		[Token(Token = "0x600216F")]
		[Address(RVA = "0x168C9F0", Offset = "0x168C9F0", VA = "0x168C9F0")]
		private void OnServerConnected(int connectionId)
		{
		}

		[Token(Token = "0x6002170")]
		[Address(RVA = "0x168CC04", Offset = "0x168CC04", VA = "0x168CC04")]
		private void OnServerDataReceived(int connectionId, ArraySegment<byte> segment, int channelId)
		{
		}

		[Token(Token = "0x6002171")]
		[Address(RVA = "0x168CCC4", Offset = "0x168CCC4", VA = "0x168CCC4")]
		private void OnServerDisconnected(int connectionId)
		{
		}

		[Token(Token = "0x6002172")]
		[Address(RVA = "0x168CD50", Offset = "0x168CD50", VA = "0x168CD50")]
		private void OnServerDataSent(int connectionId, ArraySegment<byte> segment, int channelId)
		{
		}

		[Token(Token = "0x6002173")]
		[Address(RVA = "0x168CDF8", Offset = "0x168CDF8", VA = "0x168CDF8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6002174")]
		[Address(RVA = "0x168C7D8", Offset = "0x168C7D8", VA = "0x168C7D8")]
		private void GetData(out int cc, out long r, out long su, out long sr)
		{
		}

		[Token(Token = "0x6002175")]
		[Address(RVA = "0x168C3EC", Offset = "0x168C3EC", VA = "0x168C3EC")]
		private void ResetStats()
		{
		}

		[Token(Token = "0x6002176")]
		[Address(RVA = "0x168CEA0", Offset = "0x168CEA0", VA = "0x168CEA0")]
		private void Test()
		{
		}

		[Token(Token = "0x6002177")]
		[Address(RVA = "0x168CF5C", Offset = "0x168CF5C", VA = "0x168CF5C")]
		private void PrintData()
		{
		}

		[Token(Token = "0x6002178")]
		[Address(RVA = "0x168CF60", Offset = "0x168CF60", VA = "0x168CF60")]
		public NetworkProfiler()
		{
		}
	}
	[Token(Token = "0x2000696")]
	public static class NetworkLoopStats
	{
		[Token(Token = "0x2000697")]
		public class SimpleMovingAverage
		{
			[Token(Token = "0x4001DE8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public readonly int K;

			[Token(Token = "0x4001DE9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public readonly long[] Values;

			[Token(Token = "0x4001DEA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public long Index;

			[Token(Token = "0x4001DEB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public long Sum;

			[Token(Token = "0x6002187")]
			[Address(RVA = "0x168D6C0", Offset = "0x168D6C0", VA = "0x168D6C0")]
			public SimpleMovingAverage(int k)
			{
			}

			[Token(Token = "0x6002188")]
			[Address(RVA = "0x168D794", Offset = "0x168D794", VA = "0x168D794")]
			public void Update(long nextInput)
			{
			}
		}

		[Token(Token = "0x4001DE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly SimpleMovingAverage EarlyUpdateAverageTime;

		[Token(Token = "0x4001DE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly SimpleMovingAverage LateUpdateAverageTime;

		[Token(Token = "0x4001DE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static readonly Stopwatch EarlyUpdateStopwatch;

		[Token(Token = "0x4001DE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static readonly Stopwatch LateUpdateStopwatch;

		[Token(Token = "0x6002182")]
		[Address(RVA = "0x168D3DC", Offset = "0x168D3DC", VA = "0x168D3DC")]
		internal static void EarlyUpdateStarted()
		{
		}

		[Token(Token = "0x6002183")]
		[Address(RVA = "0x168D440", Offset = "0x168D440", VA = "0x168D440")]
		internal static void EarlyUpdateCompleted()
		{
		}

		[Token(Token = "0x6002184")]
		[Address(RVA = "0x168D4BC", Offset = "0x168D4BC", VA = "0x168D4BC")]
		internal static void LateUpdateStarted()
		{
		}

		[Token(Token = "0x6002185")]
		[Address(RVA = "0x168D520", Offset = "0x168D520", VA = "0x168D520")]
		internal static void LateUpdateCompleted()
		{
		}
	}
}
namespace Networking.Components
{
	[Token(Token = "0x2000698")]
	[DisallowMultipleComponent]
	[AddComponentMenu("Network/NetworkTransform")]
	[HelpURL("https://mirror-networking.gitbook.io/docs/components/network-transform")]
	public class NetworkTransform : NetworkTransformBase
	{
		[Token(Token = "0x1700053E")]
		protected override Transform targetComponent
		{
			[Token(Token = "0x6002189")]
			[Address(RVA = "0x168D824", Offset = "0x168D824", VA = "0x168D824", Slot = "16")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600218A")]
		[Address(RVA = "0x168D82C", Offset = "0x168D82C", VA = "0x168D82C")]
		public NetworkTransform()
		{
		}

		[Token(Token = "0x600218B")]
		[Address(RVA = "0x168D8C4", Offset = "0x168D8C4", VA = "0x168D8C4")]
		private void MirrorProcessed()
		{
		}
	}
	[Token(Token = "0x2000699")]
	public abstract class NetworkTransformBase : NetworkBehaviour
	{
		[Token(Token = "0x200069A")]
		public class DataPoint
		{
			[Token(Token = "0x4001DFC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float timeStamp;

			[Token(Token = "0x4001DFD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public Vector3 localPosition;

			[Token(Token = "0x4001DFE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Quaternion localRotation;

			[Token(Token = "0x4001DFF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Vector3 localScale;

			[Token(Token = "0x4001E00")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public float movementSpeed;

			[Token(Token = "0x60021AD")]
			[Address(RVA = "0x168E21C", Offset = "0x168E21C", VA = "0x168E21C")]
			public DataPoint()
			{
			}
		}

		[Token(Token = "0x4001DEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Header("Authority")]
		[Tooltip("Set to true if moves come from owner client, set to false if moves always come from server")]
		public bool clientAuthority;

		[Token(Token = "0x4001DED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		private bool clientAuthorityBeforeTeleport;

		[Token(Token = "0x4001DEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[Header("Sensitivity")]
		[Tooltip("Changes to the transform must exceed these values to be transmitted on the network.")]
		public float localPositionSensitivity;

		[Token(Token = "0x4001DEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Tooltip("If rotation exceeds this angle, it will be transmitted on the network")]
		public float localRotationSensitivity;

		[Token(Token = "0x4001DF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[Tooltip("Changes to the transform must exceed these values to be transmitted on the network.")]
		public float localScaleSensitivity;

		[Token(Token = "0x4001DF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[Header("Compression")]
		[Tooltip("Enables smallest-three quaternion compression, which is lossy. Great for 3D, not great for 2D where minimal sprite rotations would look wobbly.")]
		public bool compressRotation;

		[Token(Token = "0x4001DF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
		[Tooltip("Set to true if position should be interpolated, false is ideal for grid bassed movement")]
		[Header("Interpolation")]
		public bool interpolatePosition;

		[Token(Token = "0x4001DF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6A")]
		[Tooltip("Set to true if rotation should be interpolated, false is ideal for instant turning, common in retro 2d style games")]
		public bool interpolateRotation;

		[Token(Token = "0x4001DF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6B")]
		[Tooltip("Set to true if scale should be interpolated, false is ideal for instant sprite flipping.")]
		public bool interpolateScale;

		[Token(Token = "0x4001DF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[Header("Synchronization")]
		[Tooltip("Set to false to not continuously send scale data, and save bandwidth.")]
		public bool syncScale;

		[Token(Token = "0x4001DF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Vector3 lastPosition;

		[Token(Token = "0x4001DF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private Quaternion lastRotation;

		[Token(Token = "0x4001DF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private Vector3 lastScale;

		[Token(Token = "0x4001DF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private DataPoint start;

		[Token(Token = "0x4001DFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private DataPoint goal;

		[Token(Token = "0x4001DFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private float lastClientSendTime;

		[Token(Token = "0x1700053F")]
		private bool IsClientWithAuthority
		{
			[Token(Token = "0x600218C")]
			[Address(RVA = "0x168D8C8", Offset = "0x168D8C8", VA = "0x168D8C8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000540")]
		protected abstract Transform targetComponent
		{
			[Token(Token = "0x600218D")]
			get;
		}

		[Token(Token = "0x600218E")]
		[Address(RVA = "0x168D8F8", Offset = "0x168D8F8", VA = "0x168D8F8")]
		public static void SerializeIntoWriter(NetworkWriter writer, Vector3 position, Quaternion rotation, Vector3 scale, bool compressRotation, bool syncScale)
		{
		}

		[Token(Token = "0x600218F")]
		[Address(RVA = "0x168DA80", Offset = "0x168DA80", VA = "0x168DA80", Slot = "4")]
		public override bool OnSerialize(NetworkWriter writer, bool initialState)
		{
			return default(bool);
		}

		[Token(Token = "0x6002190")]
		[Address(RVA = "0x168DBD0", Offset = "0x168DBD0", VA = "0x168DBD0")]
		private static float EstimateMovementSpeed(DataPoint from, DataPoint to, Transform transform, float sendInterval)
		{
			return default(float);
		}

		[Token(Token = "0x6002191")]
		[Address(RVA = "0x168DCB0", Offset = "0x168DCB0", VA = "0x168DCB0")]
		private void DeserializeFromReader(NetworkReader reader)
		{
		}

		[Token(Token = "0x6002192")]
		[Address(RVA = "0x168E224", Offset = "0x168E224", VA = "0x168E224", Slot = "5")]
		public override void OnDeserialize(NetworkReader reader, bool initialState)
		{
		}

		[Token(Token = "0x6002193")]
		[Address(RVA = "0x168E228", Offset = "0x168E228", VA = "0x168E228")]
		[Command(channel = 1)]
		private void CmdClientToServerSync(ArraySegment<byte> payload)
		{
		}

		[Token(Token = "0x6002194")]
		[Address(RVA = "0x168E42C", Offset = "0x168E42C", VA = "0x168E42C")]
		private static float CurrentInterpolationFactor(DataPoint start, DataPoint goal)
		{
			return default(float);
		}

		[Token(Token = "0x6002195")]
		[Address(RVA = "0x168E480", Offset = "0x168E480", VA = "0x168E480")]
		private Vector3 InterpolatePosition(DataPoint start, DataPoint goal, Vector3 currentPosition)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002196")]
		[Address(RVA = "0x168E5EC", Offset = "0x168E5EC", VA = "0x168E5EC")]
		private Quaternion InterpolateRotation(DataPoint start, DataPoint goal, Quaternion defaultRotation)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6002197")]
		[Address(RVA = "0x168E6E4", Offset = "0x168E6E4", VA = "0x168E6E4")]
		private Vector3 InterpolateScale(DataPoint start, DataPoint goal, Vector3 currentScale)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002198")]
		[Address(RVA = "0x168E7E0", Offset = "0x168E7E0", VA = "0x168E7E0")]
		private bool NeedsTeleport()
		{
			return default(bool);
		}

		[Token(Token = "0x6002199")]
		[Address(RVA = "0x168E854", Offset = "0x168E854", VA = "0x168E854")]
		private bool HasEitherMovedRotatedScaled()
		{
			return default(bool);
		}

		[Token(Token = "0x600219A")]
		[Address(RVA = "0x168EAF0", Offset = "0x168EAF0", VA = "0x168EAF0")]
		private void ApplyPositionRotationScale(Vector3 position, Quaternion rotation, Vector3 scale)
		{
		}

		[Token(Token = "0x600219B")]
		[Address(RVA = "0x168EBD4", Offset = "0x168EBD4", VA = "0x168EBD4")]
		private void Update()
		{
		}

		[Token(Token = "0x600219C")]
		[Address(RVA = "0x168F1A4", Offset = "0x168F1A4", VA = "0x168F1A4")]
		[Server]
		public void ServerTeleport(Vector3 position)
		{
		}

		[Token(Token = "0x600219D")]
		[Address(RVA = "0x168F2F0", Offset = "0x168F2F0", VA = "0x168F2F0")]
		[Server]
		public void ServerTeleport(Vector3 position, Quaternion rotation)
		{
		}

		[Token(Token = "0x600219E")]
		[Address(RVA = "0x168F47C", Offset = "0x168F47C", VA = "0x168F47C")]
		private void DoTeleport(Vector3 newPosition, Quaternion newRotation)
		{
		}

		[Token(Token = "0x600219F")]
		[Address(RVA = "0x168F544", Offset = "0x168F544", VA = "0x168F544")]
		[ClientRpc]
		private void RpcTeleport(Vector3 newPosition, Quaternion newRotation, bool isClientAuthority)
		{
		}

		[Token(Token = "0x60021A0")]
		[Address(RVA = "0x168F7A8", Offset = "0x168F7A8", VA = "0x168F7A8")]
		[Command]
		private void CmdTeleportFinished()
		{
		}

		[Token(Token = "0x60021A1")]
		[Address(RVA = "0x168F964", Offset = "0x168F964", VA = "0x168F964")]
		private static void DrawDataPointGizmo(DataPoint data, Color color)
		{
		}

		[Token(Token = "0x60021A2")]
		[Address(RVA = "0x168FB8C", Offset = "0x168FB8C", VA = "0x168FB8C")]
		private static void DrawLineBetweenDataPoints(DataPoint data1, DataPoint data2, Color color)
		{
		}

		[Token(Token = "0x60021A3")]
		[Address(RVA = "0x168FBD0", Offset = "0x168FBD0", VA = "0x168FBD0")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x60021A4")]
		[Address(RVA = "0x168D8A0", Offset = "0x168D8A0", VA = "0x168D8A0")]
		protected NetworkTransformBase()
		{
		}

		[Token(Token = "0x60021A5")]
		[Address(RVA = "0x168FCB4", Offset = "0x168FCB4", VA = "0x168FCB4")]
		private void MirrorProcessed()
		{
		}

		[Token(Token = "0x60021A6")]
		[Address(RVA = "0x168FCB8", Offset = "0x168FCB8", VA = "0x168FCB8")]
		protected void UserCode_CmdClientToServerSync__ArraySegment`1(ArraySegment<byte> payload)
		{
		}

		[Token(Token = "0x60021A7")]
		[Address(RVA = "0x168FFA4", Offset = "0x168FFA4", VA = "0x168FFA4")]
		protected static void InvokeUserCode_CmdClientToServerSync__ArraySegment`1(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x60021A8")]
		[Address(RVA = "0x1690124", Offset = "0x1690124", VA = "0x1690124")]
		protected void UserCode_RpcTeleport__Vector3__Quaternion__Boolean(Vector3 newPosition, Quaternion newRotation, bool isClientAuthority)
		{
		}

		[Token(Token = "0x60021A9")]
		[Address(RVA = "0x1690168", Offset = "0x1690168", VA = "0x1690168")]
		protected static void InvokeUserCode_RpcTeleport__Vector3__Quaternion__Boolean(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x60021AA")]
		[Address(RVA = "0x1690328", Offset = "0x1690328", VA = "0x1690328")]
		protected void UserCode_CmdTeleportFinished()
		{
		}

		[Token(Token = "0x60021AB")]
		[Address(RVA = "0x16903B4", Offset = "0x16903B4", VA = "0x16903B4")]
		protected static void InvokeUserCode_CmdTeleportFinished(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x60021AC")]
		[Address(RVA = "0x16904E4", Offset = "0x16904E4", VA = "0x16904E4")]
		static NetworkTransformBase()
		{
		}
	}
	[Token(Token = "0x200069B")]
	[HelpURL("https://mirror-networking.gitbook.io/docs/components/network-transform-child")]
	[AddComponentMenu("Network/NetworkTransformChild")]
	public class NetworkTransformChild : NetworkTransformBase
	{
		[Token(Token = "0x4001E01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[Header("Target")]
		public Transform target;

		[Token(Token = "0x17000541")]
		protected override Transform targetComponent
		{
			[Token(Token = "0x60021AE")]
			[Address(RVA = "0x16906E8", Offset = "0x16906E8", VA = "0x16906E8", Slot = "16")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60021AF")]
		[Address(RVA = "0x16906F0", Offset = "0x16906F0", VA = "0x16906F0")]
		public NetworkTransformChild()
		{
		}

		[Token(Token = "0x60021B0")]
		[Address(RVA = "0x1690764", Offset = "0x1690764", VA = "0x1690764")]
		private void MirrorProcessed()
		{
		}
	}
}
namespace Networking.MatchUp
{
	[Token(Token = "0x200069C")]
	public static class MatchmakerExtensions
	{
		[Token(Token = "0x200069D")]
		[CompilerGenerated]
		private sealed class <>c__DisplayClass0_0
		{
			[Token(Token = "0x4001E02")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool? success;

			[Token(Token = "0x4001E03")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Match match;

			[Token(Token = "0x60021B8")]
			[Address(RVA = "0x169105C", Offset = "0x169105C", VA = "0x169105C")]
			public <>c__DisplayClass0_0()
			{
			}

			[Token(Token = "0x60021B9")]
			[Address(RVA = "0x1691064", Offset = "0x1691064", VA = "0x1691064")]
			internal void <CreateMatchAsync>b__0(bool b, Match m)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200069E")]
		[CompilerGenerated]
		private struct <CreateMatchAsync>d__0 : IAsyncStateMachine
		{
			[Token(Token = "0x4001E04")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001E05")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder<(bool Success, Match Match)> <>t__builder;

			[Token(Token = "0x4001E06")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Matchmaker matchmaker;

			[Token(Token = "0x4001E07")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int maxClients;

			[Token(Token = "0x4001E08")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Dictionary<string, MatchData> matchData;

			[Token(Token = "0x4001E09")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public CancellationToken cancellationToken;

			[Token(Token = "0x4001E0A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private <>c__DisplayClass0_0 <>8__1;

			[Token(Token = "0x4001E0B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private YieldAwaitable.YieldAwaiter <>u__1;

			[Token(Token = "0x60021BA")]
			[Address(RVA = "0x16910E8", Offset = "0x16910E8", VA = "0x16910E8", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60021BB")]
			[Address(RVA = "0x1691488", Offset = "0x1691488", VA = "0x1691488", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x200069F")]
		[CompilerGenerated]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x4001E0C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool? success;

			[Token(Token = "0x4001E0D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Match match;

			[Token(Token = "0x60021BC")]
			[Address(RVA = "0x16914E0", Offset = "0x16914E0", VA = "0x16914E0")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x60021BD")]
			[Address(RVA = "0x16914E8", Offset = "0x16914E8", VA = "0x16914E8")]
			internal void <JoinMatchAsync>b__0(bool b, Match m)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20006A0")]
		[CompilerGenerated]
		private struct <JoinMatchAsync>d__1 : IAsyncStateMachine
		{
			[Token(Token = "0x4001E0E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001E0F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder<(bool Success, Match Match)> <>t__builder;

			[Token(Token = "0x4001E10")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Match match;

			[Token(Token = "0x4001E11")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Matchmaker matchmaker;

			[Token(Token = "0x4001E12")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public CancellationToken cancellationToken;

			[Token(Token = "0x4001E13")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private <>c__DisplayClass1_0 <>8__1;

			[Token(Token = "0x4001E14")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private YieldAwaitable.YieldAwaiter <>u__1;

			[Token(Token = "0x60021BE")]
			[Address(RVA = "0x169156C", Offset = "0x169156C", VA = "0x169156C", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60021BF")]
			[Address(RVA = "0x1691908", Offset = "0x1691908", VA = "0x1691908", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x20006A1")]
		[CompilerGenerated]
		private sealed class <>c__DisplayClass2_0
		{
			[Token(Token = "0x4001E15")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool? success;

			[Token(Token = "0x4001E16")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Match match;

			[Token(Token = "0x60021C0")]
			[Address(RVA = "0x1691960", Offset = "0x1691960", VA = "0x1691960")]
			public <>c__DisplayClass2_0()
			{
			}

			[Token(Token = "0x60021C1")]
			[Address(RVA = "0x1691968", Offset = "0x1691968", VA = "0x1691968")]
			internal void <SetMatchDataAsync>b__0(bool b, Match m)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20006A2")]
		[CompilerGenerated]
		private struct <SetMatchDataAsync>d__2 : IAsyncStateMachine
		{
			[Token(Token = "0x4001E17")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001E18")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder<(bool Success, Match Match)> <>t__builder;

			[Token(Token = "0x4001E19")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Matchmaker matchmaker;

			[Token(Token = "0x4001E1A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Dictionary<string, MatchData> matchData;

			[Token(Token = "0x4001E1B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public CancellationToken cancellationToken;

			[Token(Token = "0x4001E1C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private <>c__DisplayClass2_0 <>8__1;

			[Token(Token = "0x4001E1D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private YieldAwaitable.YieldAwaiter <>u__1;

			[Token(Token = "0x60021C2")]
			[Address(RVA = "0x16919EC", Offset = "0x16919EC", VA = "0x16919EC", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60021C3")]
			[Address(RVA = "0x1691D78", Offset = "0x1691D78", VA = "0x1691D78", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x20006A3")]
		[CompilerGenerated]
		private sealed class <>c__DisplayClass3_0
		{
			[Token(Token = "0x4001E1E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool? success;

			[Token(Token = "0x4001E1F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Match match;

			[Token(Token = "0x60021C4")]
			[Address(RVA = "0x1691DD0", Offset = "0x1691DD0", VA = "0x1691DD0")]
			public <>c__DisplayClass3_0()
			{
			}

			[Token(Token = "0x60021C5")]
			[Address(RVA = "0x1691DD8", Offset = "0x1691DD8", VA = "0x1691DD8")]
			internal void <SetMatchDataAsync>b__0(bool b, Match m)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20006A4")]
		[CompilerGenerated]
		private struct <SetMatchDataAsync>d__3 : IAsyncStateMachine
		{
			[Token(Token = "0x4001E20")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001E21")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder<(bool Success, Match Match)> <>t__builder;

			[Token(Token = "0x4001E22")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Matchmaker matchmaker;

			[Token(Token = "0x4001E23")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string key;

			[Token(Token = "0x4001E24")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public MatchData matchData;

			[Token(Token = "0x4001E25")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public CancellationToken cancellationToken;

			[Token(Token = "0x4001E26")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private <>c__DisplayClass3_0 <>8__1;

			[Token(Token = "0x4001E27")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private YieldAwaitable.YieldAwaiter <>u__1;

			[Token(Token = "0x60021C6")]
			[Address(RVA = "0x1691E5C", Offset = "0x1691E5C", VA = "0x1691E5C", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60021C7")]
			[Address(RVA = "0x16921F8", Offset = "0x16921F8", VA = "0x16921F8", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x20006A5")]
		[CompilerGenerated]
		private sealed class <>c__DisplayClass4_0
		{
			[Token(Token = "0x4001E28")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool? success;

			[Token(Token = "0x4001E29")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Match[] matches;

			[Token(Token = "0x60021C8")]
			[Address(RVA = "0x1692250", Offset = "0x1692250", VA = "0x1692250")]
			public <>c__DisplayClass4_0()
			{
			}

			[Token(Token = "0x60021C9")]
			[Address(RVA = "0x1692258", Offset = "0x1692258", VA = "0x1692258")]
			internal void <GetMatchListAsync>b__0(bool b, Match[] m)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20006A6")]
		[CompilerGenerated]
		private struct <GetMatchListAsync>d__4 : IAsyncStateMachine
		{
			[Token(Token = "0x4001E2A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001E2B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder<(bool Success, Match[] Matches)> <>t__builder;

			[Token(Token = "0x4001E2C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Matchmaker matchmaker;

			[Token(Token = "0x4001E2D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int pageNumber;

			[Token(Token = "0x4001E2E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public int resultsPerPage;

			[Token(Token = "0x4001E2F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public List<MatchFilter> filters;

			[Token(Token = "0x4001E30")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public bool includeMatchData;

			[Token(Token = "0x4001E31")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public CancellationToken cancellationToken;

			[Token(Token = "0x4001E32")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private <>c__DisplayClass4_0 <>8__1;

			[Token(Token = "0x4001E33")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private YieldAwaitable.YieldAwaiter <>u__1;

			[Token(Token = "0x60021CA")]
			[Address(RVA = "0x16922DC", Offset = "0x16922DC", VA = "0x16922DC", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60021CB")]
			[Address(RVA = "0x1692674", Offset = "0x1692674", VA = "0x1692674", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x20006A7")]
		[CompilerGenerated]
		private sealed class <>c__DisplayClass5_0
		{
			[Token(Token = "0x4001E34")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool? success;

			[Token(Token = "0x60021CC")]
			[Address(RVA = "0x16926CC", Offset = "0x16926CC", VA = "0x16926CC")]
			public <>c__DisplayClass5_0()
			{
			}

			[Token(Token = "0x60021CD")]
			[Address(RVA = "0x16926D4", Offset = "0x16926D4", VA = "0x16926D4")]
			internal void <LeaveMatchAsync>b__0(bool b)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20006A8")]
		[CompilerGenerated]
		private struct <LeaveMatchAsync>d__5 : IAsyncStateMachine
		{
			[Token(Token = "0x4001E35")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001E36")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder<bool> <>t__builder;

			[Token(Token = "0x4001E37")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Matchmaker matchmaker;

			[Token(Token = "0x4001E38")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public CancellationToken cancellationToken;

			[Token(Token = "0x4001E39")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private <>c__DisplayClass5_0 <>8__1;

			[Token(Token = "0x4001E3A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private YieldAwaitable.YieldAwaiter <>u__1;

			[Token(Token = "0x60021CE")]
			[Address(RVA = "0x169273C", Offset = "0x169273C", VA = "0x169273C", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60021CF")]
			[Address(RVA = "0x1692A64", Offset = "0x1692A64", VA = "0x1692A64", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x20006A9")]
		[CompilerGenerated]
		private sealed class <>c__DisplayClass6_0
		{
			[Token(Token = "0x4001E3B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool? success;

			[Token(Token = "0x60021D0")]
			[Address(RVA = "0x1692ABC", Offset = "0x1692ABC", VA = "0x1692ABC")]
			public <>c__DisplayClass6_0()
			{
			}

			[Token(Token = "0x60021D1")]
			[Address(RVA = "0x1692AC4", Offset = "0x1692AC4", VA = "0x1692AC4")]
			internal void <DestroyMatchAsync>b__0(bool b)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20006AA")]
		[CompilerGenerated]
		private struct <DestroyMatchAsync>d__6 : IAsyncStateMachine
		{
			[Token(Token = "0x4001E3C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001E3D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder<bool> <>t__builder;

			[Token(Token = "0x4001E3E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Matchmaker matchmaker;

			[Token(Token = "0x4001E3F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public CancellationToken cancellationToken;

			[Token(Token = "0x4001E40")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private <>c__DisplayClass6_0 <>8__1;

			[Token(Token = "0x4001E41")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private YieldAwaitable.YieldAwaiter <>u__1;

			[Token(Token = "0x60021D2")]
			[Address(RVA = "0x1692B2C", Offset = "0x1692B2C", VA = "0x1692B2C", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60021D3")]
			[Address(RVA = "0x1692E54", Offset = "0x1692E54", VA = "0x1692E54", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x60021B1")]
		[Address(RVA = "0x1690768", Offset = "0x1690768", VA = "0x1690768")]
		[AsyncStateMachine(typeof(<CreateMatchAsync>d__0))]
		public static Task<(bool, Match)> CreateMatchAsync(this Matchmaker matchmaker, int maxClients, CancellationToken cancellationToken, [Optional] Dictionary<string, MatchData> matchData)
		{
			return null;
		}

		[Token(Token = "0x60021B2")]
		[Address(RVA = "0x16908B8", Offset = "0x16908B8", VA = "0x16908B8")]
		[AsyncStateMachine(typeof(<JoinMatchAsync>d__1))]
		public static Task<(bool, Match)> JoinMatchAsync(this Matchmaker matchmaker, Match match, CancellationToken cancellationToken)
		{
			return null;
		}

		[Token(Token = "0x60021B3")]
		[Address(RVA = "0x16909F8", Offset = "0x16909F8", VA = "0x16909F8")]
		[AsyncStateMachine(typeof(<SetMatchDataAsync>d__2))]
		public static Task<(bool, Match)> SetMatchDataAsync(this Matchmaker matchmaker, Dictionary<string, MatchData> matchData, CancellationToken cancellationToken)
		{
			return null;
		}

		[Token(Token = "0x60021B4")]
		[Address(RVA = "0x1690B38", Offset = "0x1690B38", VA = "0x1690B38")]
		[AsyncStateMachine(typeof(<SetMatchDataAsync>d__3))]
		public static Task<(bool, Match)> SetMatchDataAsync(this Matchmaker matchmaker, string key, MatchData matchData, CancellationToken cancellationToken)
		{
			return null;
		}

		[Token(Token = "0x60021B5")]
		[Address(RVA = "0x1690C94", Offset = "0x1690C94", VA = "0x1690C94")]
		[AsyncStateMachine(typeof(<GetMatchListAsync>d__4))]
		public static Task<(bool, Match[])> GetMatchListAsync(this Matchmaker matchmaker, CancellationToken cancellationToken, int pageNumber = 0, int resultsPerPage = 10, [Optional] List<MatchFilter> filters, bool includeMatchData = true)
		{
			return null;
		}

		[Token(Token = "0x60021B6")]
		[Address(RVA = "0x1690DFC", Offset = "0x1690DFC", VA = "0x1690DFC")]
		[AsyncStateMachine(typeof(<LeaveMatchAsync>d__5))]
		public static Task<bool> LeaveMatchAsync(this Matchmaker matchmaker, CancellationToken cancellationToken)
		{
			return null;
		}

		[Token(Token = "0x60021B7")]
		[Address(RVA = "0x1690F2C", Offset = "0x1690F2C", VA = "0x1690F2C")]
		[AsyncStateMachine(typeof(<DestroyMatchAsync>d__6))]
		public static Task<bool> DestroyMatchAsync(this Matchmaker matchmaker, CancellationToken cancellationToken)
		{
			return null;
		}
	}
}
namespace Networking.Matchmaking
{
	[Token(Token = "0x20006AB")]
	public interface IMatchmaker
	{
		[Token(Token = "0x17000542")]
		bool IsReady
		{
			[Token(Token = "0x60021DE")]
			get;
		}

		[Token(Token = "0x1400007C")]
		event Action ConnectionLost;

		[Token(Token = "0x60021D6")]
		Task<IServerInfo> CreateMatch(IServerInfo serverInfo, CancellationToken cancellationToken);

		[Token(Token = "0x60021D7")]
		Task<IServerInfo> JoinMatch(IServerInfo serverInfo, CancellationToken cancellationToken);

		[Token(Token = "0x60021D8")]
		Task<IServerInfo> UpdateMatch(IServerInfo serverInfo, CancellationToken cancellationToken);

		[Token(Token = "0x60021D9")]
		Task<bool> LeaveMatch(CancellationToken cancellationToken);

		[Token(Token = "0x60021DA")]
		Task<bool> DestroyMatch(CancellationToken cancellationToken);

		[Token(Token = "0x60021DB")]
		Task<IServerInfo[]> GetMatchList(CancellationToken cancellationToken, int pageNumber = 0, int resultsPerPage = 10, [Optional] IEnumerable<ServerInfoFilter> filters);

		[Token(Token = "0x60021DC")]
		void Connect();

		[Token(Token = "0x60021DD")]
		void Disconnect();

		[Token(Token = "0x60021DF")]
		void Reset();
	}
	[Token(Token = "0x20006AC")]
	public interface IMatchmakerFactory
	{
		[Token(Token = "0x60021E0")]
		IMatchmaker GetMatchmaker(ServerType serverType);
	}
	[Token(Token = "0x20006AD")]
	public enum OperationType
	{
		[Token(Token = "0x4001E43")]
		Equals,
		[Token(Token = "0x4001E44")]
		NotEquals,
		[Token(Token = "0x4001E45")]
		Like,
		[Token(Token = "0x4001E46")]
		NotLike,
		[Token(Token = "0x4001E47")]
		Less,
		[Token(Token = "0x4001E48")]
		Greater
	}
	[Token(Token = "0x20006AE")]
	public readonly struct ServerInfoFilter
	{
		[Token(Token = "0x4001E49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public readonly string Key;

		[Token(Token = "0x4001E4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly object Value;

		[Token(Token = "0x4001E4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly OperationType Operation;

		[Token(Token = "0x60021E1")]
		[Address(RVA = "0x1692EAC", Offset = "0x1692EAC", VA = "0x1692EAC")]
		private ServerInfoFilter(string key, object value, OperationType operation)
		{
		}

		[Token(Token = "0x60021E2")]
		[Address(RVA = "0x1692EE8", Offset = "0x1692EE8", VA = "0x1692EE8")]
		public static ServerInfoFilter Name(string value, OperationType operation)
		{
			return default(ServerInfoFilter);
		}

		[Token(Token = "0x60021E3")]
		[Address(RVA = "0x1692F68", Offset = "0x1692F68", VA = "0x1692F68")]
		public static ServerInfoFilter DomainId(string value, OperationType operation)
		{
			return default(ServerInfoFilter);
		}

		[Token(Token = "0x60021E4")]
		[Address(RVA = "0x1692FE8", Offset = "0x1692FE8", VA = "0x1692FE8")]
		public static ServerInfoFilter ActiveConnections(byte value, OperationType operation)
		{
			return default(ServerInfoFilter);
		}

		[Token(Token = "0x60021E5")]
		[Address(RVA = "0x1693098", Offset = "0x1693098", VA = "0x1693098")]
		public static ServerInfoFilter MaxConnections(byte value, OperationType operation)
		{
			return default(ServerInfoFilter);
		}

		[Token(Token = "0x60021E6")]
		[Address(RVA = "0x1693148", Offset = "0x1693148", VA = "0x1693148")]
		public static ServerInfoFilter ApplicationMode(ApplicationMode value, OperationType operation)
		{
			return default(ServerInfoFilter);
		}
	}
	[Token(Token = "0x20006AF")]
	public static class MatchmakerExtensions
	{
		[StructLayout(3)]
		[Token(Token = "0x20006B1")]
		[CompilerGenerated]
		private struct <GetActivePlayersCountAsync>d__0 : IAsyncStateMachine
		{
			[Token(Token = "0x4001E4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001E4F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder<int> <>t__builder;

			[Token(Token = "0x4001E50")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public IMatchmaker matchmaker;

			[Token(Token = "0x4001E51")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public CancellationToken cancellationToken;

			[Token(Token = "0x4001E52")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public IEnumerable<ServerInfoFilter> filters;

			[Token(Token = "0x4001E53")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private TaskAwaiter<IServerInfo[]> <>u__1;

			[Token(Token = "0x60021EC")]
			[Address(RVA = "0x1693584", Offset = "0x1693584", VA = "0x1693584", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60021ED")]
			[Address(RVA = "0x16939DC", Offset = "0x16939DC", VA = "0x16939DC", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20006B2")]
		[CompilerGenerated]
		private struct <StartGetMatchListRefresh>d__1 : IAsyncStateMachine
		{
			[Token(Token = "0x4001E54")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001E55")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4001E56")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public IMatchmaker matchmaker;

			[Token(Token = "0x4001E57")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public CancellationToken cancellationToken;

			[Token(Token = "0x4001E58")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public int requestTimeout;

			[Token(Token = "0x4001E59")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public IEnumerable<ServerInfoFilter> filters;

			[Token(Token = "0x4001E5A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public Action<IServerInfo[]> onResultReceived;

			[Token(Token = "0x4001E5B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public int refreshInterval;

			[Token(Token = "0x4001E5C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private TaskAwaiter<IServerInfo[]> <>u__1;

			[Token(Token = "0x4001E5D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private TaskAwaiter <>u__2;

			[Token(Token = "0x60021EE")]
			[Address(RVA = "0x1693A34", Offset = "0x1693A34", VA = "0x1693A34", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60021EF")]
			[Address(RVA = "0x1693F6C", Offset = "0x1693F6C", VA = "0x1693F6C", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x60021E7")]
		[Address(RVA = "0x16931F8", Offset = "0x16931F8", VA = "0x16931F8")]
		[AsyncStateMachine(typeof(<GetActivePlayersCountAsync>d__0))]
		public static Task<int> GetActivePlayersCountAsync(this IMatchmaker matchmaker, CancellationToken cancellationToken, [Optional] IEnumerable<ServerInfoFilter> filters)
		{
			return null;
		}

		[Token(Token = "0x60021E8")]
		[Address(RVA = "0x169333C", Offset = "0x169333C", VA = "0x169333C")]
		[AsyncStateMachine(typeof(<StartGetMatchListRefresh>d__1))]
		public static void StartGetMatchListRefresh(this IMatchmaker matchmaker, int refreshInterval, int requestTimeout, Action<IServerInfo[]> onResultReceived, CancellationToken cancellationToken, [Optional] IEnumerable<ServerInfoFilter> filters)
		{
		}
	}
	[Token(Token = "0x20006B3")]
	public class MatchmakerRefreshHelper
	{
		[Token(Token = "0x4001E5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly Dictionary<IMatchmaker, IServerInfo[]> _matchmakerServerInfos;

		[Token(Token = "0x4001E5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly Dictionary<IMatchmaker, CancellationTokenSource> _cancellationTokenSources;

		[Token(Token = "0x17000543")]
		public System.Collections.Generic.IReadOnlyDictionary<IMatchmaker, IServerInfo[]> MatchmakerServerInfos
		{
			[Token(Token = "0x60021F0")]
			[Address(RVA = "0x1693F78", Offset = "0x1693F78", VA = "0x1693F78")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60021F1")]
		[Address(RVA = "0x1693F80", Offset = "0x1693F80", VA = "0x1693F80")]
		public MatchmakerRefreshHelper()
		{
		}

		[Token(Token = "0x60021F2")]
		[Address(RVA = "0x1694058", Offset = "0x1694058", VA = "0x1694058")]
		public void StartRefresh(IMatchmaker matchmaker, int refreshInterval, int requestTimeout, [Optional] Action<IServerInfo[]> onResultReceived, [Optional] IEnumerable<ServerInfoFilter> filters)
		{
		}

		[Token(Token = "0x60021F3")]
		[Address(RVA = "0x16942D8", Offset = "0x16942D8", VA = "0x16942D8")]
		public void StopRefresh(IMatchmaker matchmaker)
		{
		}

		[Token(Token = "0x60021F4")]
		[Address(RVA = "0x1694384", Offset = "0x1694384", VA = "0x1694384")]
		public void StopRefreshAll()
		{
		}
	}
	[Token(Token = "0x20006B5")]
	public class MatchUpMatchmaker : IMatchmaker
	{
		[Token(Token = "0x20006B6")]
		private class MatchUpServerInfo : IServerInfo
		{
			[Token(Token = "0x17000546")]
			public Match Match
			{
				[Token(Token = "0x600220B")]
				[Address(RVA = "0x1695D90", Offset = "0x1695D90", VA = "0x1695D90")]
				[CompilerGenerated]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000547")]
			public string Name
			{
				[Token(Token = "0x600220C")]
				[Address(RVA = "0x1695D98", Offset = "0x1695D98", VA = "0x1695D98", Slot = "4")]
				[CompilerGenerated]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000548")]
			public string DomainId
			{
				[Token(Token = "0x600220D")]
				[Address(RVA = "0x1695DA0", Offset = "0x1695DA0", VA = "0x1695DA0", Slot = "5")]
				[CompilerGenerated]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000549")]
			public Uri Uri
			{
				[Token(Token = "0x600220E")]
				[Address(RVA = "0x1695DA8", Offset = "0x1695DA8", VA = "0x1695DA8", Slot = "6")]
				[CompilerGenerated]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700054A")]
			public byte ActiveConnections
			{
				[Token(Token = "0x600220F")]
				[Address(RVA = "0x1695DB0", Offset = "0x1695DB0", VA = "0x1695DB0", Slot = "7")]
				[CompilerGenerated]
				get
				{
					return default(byte);
				}
			}

			[Token(Token = "0x1700054B")]
			public byte MaxConnections
			{
				[Token(Token = "0x6002210")]
				[Address(RVA = "0x1695DB8", Offset = "0x1695DB8", VA = "0x1695DB8", Slot = "8")]
				[CompilerGenerated]
				get
				{
					return default(byte);
				}
			}

			[Token(Token = "0x1700054C")]
			public ServerType ServerType
			{
				[Token(Token = "0x6002211")]
				[Address(RVA = "0x1695DC0", Offset = "0x1695DC0", VA = "0x1695DC0", Slot = "9")]
				[CompilerGenerated]
				get
				{
					return default(ServerType);
				}
			}

			[Token(Token = "0x1700054D")]
			public ApplicationMode ApplicationMode
			{
				[Token(Token = "0x6002212")]
				[Address(RVA = "0x1695DC8", Offset = "0x1695DC8", VA = "0x1695DC8", Slot = "10")]
				[CompilerGenerated]
				get
				{
					return default(ApplicationMode);
				}
			}

			[Token(Token = "0x1700054E")]
			public int MaxSystemCount
			{
				[Token(Token = "0x6002213")]
				[Address(RVA = "0x1695DD0", Offset = "0x1695DD0", VA = "0x1695DD0", Slot = "11")]
				[CompilerGenerated]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6002214")]
				[Address(RVA = "0x1695DD8", Offset = "0x1695DD8", VA = "0x1695DD8")]
				[CompilerGenerated]
				set
				{
				}
			}

			[Token(Token = "0x6002215")]
			[Address(RVA = "0x1695464", Offset = "0x1695464", VA = "0x1695464")]
			public MatchUpServerInfo(Match match)
			{
			}

			[Token(Token = "0x6002216")]
			[Address(RVA = "0x1695DE0", Offset = "0x1695DE0", VA = "0x1695DE0", Slot = "3")]
			public override string ToString()
			{
				return null;
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20006B7")]
		[CompilerGenerated]
		private struct <CreateMatch>d__10 : IAsyncStateMachine
		{
			[Token(Token = "0x4001E6F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001E70")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder<IServerInfo> <>t__builder;

			[Token(Token = "0x4001E71")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MatchUpMatchmaker <>4__this;

			[Token(Token = "0x4001E72")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public IServerInfo serverInfo;

			[Token(Token = "0x4001E73")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public CancellationToken cancellationToken;

			[Token(Token = "0x4001E74")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private TaskAwaiter<(bool Success, Match Match)> <>u__1;

			[Token(Token = "0x6002217")]
			[Address(RVA = "0x1695DE8", Offset = "0x1695DE8", VA = "0x1695DE8", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6002218")]
			[Address(RVA = "0x16961D0", Offset = "0x16961D0", VA = "0x16961D0", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20006B8")]
		[CompilerGenerated]
		private struct <JoinMatch>d__11 : IAsyncStateMachine
		{
			[Token(Token = "0x4001E75")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001E76")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder<IServerInfo> <>t__builder;

			[Token(Token = "0x4001E77")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public IServerInfo serverInfo;

			[Token(Token = "0x4001E78")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public MatchUpMatchmaker <>4__this;

			[Token(Token = "0x4001E79")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public CancellationToken cancellationToken;

			[Token(Token = "0x4001E7A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private TaskAwaiter<(bool Success, Match Match)> <>u__1;

			[Token(Token = "0x6002219")]
			[Address(RVA = "0x1696228", Offset = "0x1696228", VA = "0x1696228", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x600221A")]
			[Address(RVA = "0x16964F0", Offset = "0x16964F0", VA = "0x16964F0", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20006B9")]
		[CompilerGenerated]
		private struct <UpdateMatch>d__12 : IAsyncStateMachine
		{
			[Token(Token = "0x4001E7B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001E7C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder<IServerInfo> <>t__builder;

			[Token(Token = "0x4001E7D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MatchUpMatchmaker <>4__this;

			[Token(Token = "0x4001E7E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public IServerInfo serverInfo;

			[Token(Token = "0x4001E7F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public CancellationToken cancellationToken;

			[Token(Token = "0x4001E80")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private TaskAwaiter<(bool Success, Match Match)> <>u__1;

			[Token(Token = "0x600221B")]
			[Address(RVA = "0x1696548", Offset = "0x1696548", VA = "0x1696548", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x600221C")]
			[Address(RVA = "0x1696800", Offset = "0x1696800", VA = "0x1696800", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20006BA")]
		[CompilerGenerated]
		private struct <LeaveMatch>d__13 : IAsyncStateMachine
		{
			[Token(Token = "0x4001E81")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001E82")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder<bool> <>t__builder;

			[Token(Token = "0x4001E83")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MatchUpMatchmaker <>4__this;

			[Token(Token = "0x4001E84")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public CancellationToken cancellationToken;

			[Token(Token = "0x4001E85")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TaskAwaiter<bool> <>u__1;

			[Token(Token = "0x600221D")]
			[Address(RVA = "0x1696858", Offset = "0x1696858", VA = "0x1696858", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x600221E")]
			[Address(RVA = "0x1696A70", Offset = "0x1696A70", VA = "0x1696A70", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20006BB")]
		[CompilerGenerated]
		private struct <DestroyMatch>d__14 : IAsyncStateMachine
		{
			[Token(Token = "0x4001E86")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001E87")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder<bool> <>t__builder;

			[Token(Token = "0x4001E88")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MatchUpMatchmaker <>4__this;

			[Token(Token = "0x4001E89")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public CancellationToken cancellationToken;

			[Token(Token = "0x4001E8A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TaskAwaiter<bool> <>u__1;

			[Token(Token = "0x600221F")]
			[Address(RVA = "0x1696AC8", Offset = "0x1696AC8", VA = "0x1696AC8", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6002220")]
			[Address(RVA = "0x1696CE0", Offset = "0x1696CE0", VA = "0x1696CE0", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20006BC")]
		[CompilerGenerated]
		private struct <GetMatchList>d__15 : IAsyncStateMachine
		{
			[Token(Token = "0x4001E8B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001E8C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder<IServerInfo[]> <>t__builder;

			[Token(Token = "0x4001E8D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MatchUpMatchmaker <>4__this;

			[Token(Token = "0x4001E8E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public CancellationToken cancellationToken;

			[Token(Token = "0x4001E8F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public int pageNumber;

			[Token(Token = "0x4001E90")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public int resultsPerPage;

			[Token(Token = "0x4001E91")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public IEnumerable<ServerInfoFilter> filters;

			[Token(Token = "0x4001E92")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private TaskAwaiter<(bool Success, Match[] Matches)> <>u__1;

			[Token(Token = "0x6002221")]
			[Address(RVA = "0x1696D38", Offset = "0x1696D38", VA = "0x1696D38", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6002222")]
			[Address(RVA = "0x169704C", Offset = "0x169704C", VA = "0x169704C", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4001E63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly System.Collections.Generic.IReadOnlyDictionary<OperationType, MatchFilter.OperationType> OperationTypeMap;

		[Token(Token = "0x17000544")]
		public Matchmaker Matchmaker
		{
			[Token(Token = "0x60021F7")]
			[Address(RVA = "0x1694560", Offset = "0x1694560", VA = "0x1694560")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60021F8")]
			[Address(RVA = "0x1694568", Offset = "0x1694568", VA = "0x1694568")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000545")]
		public bool IsReady
		{
			[Token(Token = "0x6002202")]
			[Address(RVA = "0x1694ED0", Offset = "0x1694ED0", VA = "0x1694ED0", Slot = "14")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1400007D")]
		public event Action ConnectionLost
		{
			[Token(Token = "0x60021F9")]
			[Address(RVA = "0x1694570", Offset = "0x1694570", VA = "0x1694570", Slot = "4")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60021FA")]
			[Address(RVA = "0x169460C", Offset = "0x169460C", VA = "0x169460C", Slot = "5")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x60021FB")]
		[Address(RVA = "0x16946A8", Offset = "0x16946A8", VA = "0x16946A8")]
		public MatchUpMatchmaker(Matchmaker matchmaker)
		{
		}

		[Token(Token = "0x60021FC")]
		[Address(RVA = "0x1694760", Offset = "0x1694760", VA = "0x1694760", Slot = "6")]
		[AsyncStateMachine(typeof(<CreateMatch>d__10))]
		public Task<IServerInfo> CreateMatch(IServerInfo serverInfo, CancellationToken cancellationToken)
		{
			return null;
		}

		[Token(Token = "0x60021FD")]
		[Address(RVA = "0x169489C", Offset = "0x169489C", VA = "0x169489C", Slot = "7")]
		[AsyncStateMachine(typeof(<JoinMatch>d__11))]
		public Task<IServerInfo> JoinMatch(IServerInfo serverInfo, CancellationToken cancellationToken)
		{
			return null;
		}

		[Token(Token = "0x60021FE")]
		[Address(RVA = "0x16949D8", Offset = "0x16949D8", VA = "0x16949D8", Slot = "8")]
		[AsyncStateMachine(typeof(<UpdateMatch>d__12))]
		public Task<IServerInfo> UpdateMatch(IServerInfo serverInfo, CancellationToken cancellationToken)
		{
			return null;
		}

		[Token(Token = "0x60021FF")]
		[Address(RVA = "0x1694B14", Offset = "0x1694B14", VA = "0x1694B14", Slot = "9")]
		[AsyncStateMachine(typeof(<LeaveMatch>d__13))]
		public Task<bool> LeaveMatch(CancellationToken cancellationToken)
		{
			return null;
		}

		[Token(Token = "0x6002200")]
		[Address(RVA = "0x1694C48", Offset = "0x1694C48", VA = "0x1694C48", Slot = "10")]
		[AsyncStateMachine(typeof(<DestroyMatch>d__14))]
		public Task<bool> DestroyMatch(CancellationToken cancellationToken)
		{
			return null;
		}

		[Token(Token = "0x6002201")]
		[Address(RVA = "0x1694D7C", Offset = "0x1694D7C", VA = "0x1694D7C", Slot = "11")]
		[AsyncStateMachine(typeof(<GetMatchList>d__15))]
		public Task<IServerInfo[]> GetMatchList(CancellationToken cancellationToken, int pageNumber = 0, int resultsPerPage = 10, [Optional] IEnumerable<ServerInfoFilter> filters)
		{
			return null;
		}

		[Token(Token = "0x6002203")]
		[Address(RVA = "0x1694EEC", Offset = "0x1694EEC", VA = "0x1694EEC", Slot = "12")]
		public void Connect()
		{
		}

		[Token(Token = "0x6002204")]
		[Address(RVA = "0x1694F64", Offset = "0x1694F64", VA = "0x1694F64", Slot = "13")]
		public void Disconnect()
		{
		}

		[Token(Token = "0x6002205")]
		[Address(RVA = "0x1694F80", Offset = "0x1694F80", VA = "0x1694F80", Slot = "15")]
		public void Reset()
		{
		}

		[Token(Token = "0x6002206")]
		[Address(RVA = "0x16950F0", Offset = "0x16950F0", VA = "0x16950F0")]
		private void OnLostConnectionToMatchmakingServer(Exception obj)
		{
		}

		[Token(Token = "0x6002207")]
		[Address(RVA = "0x169510C", Offset = "0x169510C", VA = "0x169510C")]
		private static List<MatchFilter> ToMatchFilters(IEnumerable<ServerInfoFilter> filters)
		{
			return null;
		}

		[Token(Token = "0x6002208")]
		[Address(RVA = "0x1695340", Offset = "0x1695340", VA = "0x1695340")]
		private static IServerInfo[] ConvertMatches(Match[] matches)
		{
			return null;
		}

		[Token(Token = "0x6002209")]
		[Address(RVA = "0x1695740", Offset = "0x1695740", VA = "0x1695740")]
		private static Dictionary<string, MatchData> GetMatchData(IServerInfo serverInfo)
		{
			return null;
		}
	}
	[Token(Token = "0x20006BE")]
	public class VrMatchmakerView : MonoBehaviour
	{
		[Token(Token = "0x4001E96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform _content;

		[Token(Token = "0x4001E97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject _serverFieldPrefab;

		[Token(Token = "0x4001E98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private LocalizedTextMeshProGui _noServersFoundText;

		[Token(Token = "0x4001E99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Button _joinToggle;

		[Token(Token = "0x4001E9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private ToggleGroup _serverToggleGroup;

		[Token(Token = "0x4001E9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private readonly Dictionary<string, ServerField> _serverFields;

		[Token(Token = "0x1700054F")]
		public Transform Content
		{
			[Token(Token = "0x6002227")]
			[Address(RVA = "0x1697490", Offset = "0x1697490", VA = "0x1697490")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000550")]
		public Button JoinButton
		{
			[Token(Token = "0x6002228")]
			[Address(RVA = "0x1697498", Offset = "0x1697498", VA = "0x1697498")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000551")]
		public LocalizedTextMeshProGui NoServersFoundText
		{
			[Token(Token = "0x6002229")]
			[Address(RVA = "0x16974A0", Offset = "0x16974A0", VA = "0x16974A0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000552")]
		public IServerInfo SelectedServer
		{
			[Token(Token = "0x600222A")]
			[Address(RVA = "0x16974A8", Offset = "0x16974A8", VA = "0x16974A8")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600222B")]
			[Address(RVA = "0x16974B0", Offset = "0x16974B0", VA = "0x16974B0")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x600222C")]
		[Address(RVA = "0x16974B8", Offset = "0x16974B8", VA = "0x16974B8")]
		public void DisplayServerInfos(IServerInfo[] serverInfos)
		{
		}

		[Token(Token = "0x600222D")]
		[Address(RVA = "0x1697E94", Offset = "0x1697E94", VA = "0x1697E94")]
		public VrMatchmakerView()
		{
		}
	}
	[Token(Token = "0x20006C1")]
	public struct MatchServerResponse : NetworkMessage
	{
		[Token(Token = "0x4001EA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public long RequestId;

		[Token(Token = "0x4001EA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public long ServerId;

		[Token(Token = "0x4001EA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Uri Uri;

		[Token(Token = "0x4001EA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string Name;

		[Token(Token = "0x4001EA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string DomainId;

		[Token(Token = "0x4001EA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public byte ActiveConnections;

		[Token(Token = "0x4001EA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public byte MaxConnections;

		[Token(Token = "0x4001EA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public ApplicationMode ApplicationMode;

		[Token(Token = "0x4001EAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool LocationsEnabled;

		[Token(Token = "0x4001EAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public int MaxSystemCount;
	}
	[Token(Token = "0x20006C2")]
	public struct MatchServerRequest : NetworkMessage
	{
		[Token(Token = "0x4001EAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public long Id;
	}
	[Token(Token = "0x20006C3")]
	[AddComponentMenu("Network/VrNetworkDiscovery")]
	[DisallowMultipleComponent]
	public class VrNetworkDiscovery : NetworkDiscoveryBase<MatchServerRequest, MatchServerResponse>, IMatchmaker
	{
		[StructLayout(3)]
		[Token(Token = "0x20006C5")]
		[CompilerGenerated]
		private struct <GetMatchList>d__23 : IAsyncStateMachine
		{
			[Token(Token = "0x4001EB7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001EB8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder<IServerInfo[]> <>t__builder;

			[Token(Token = "0x4001EB9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VrNetworkDiscovery <>4__this;

			[Token(Token = "0x4001EBA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public CancellationToken cancellationToken;

			[Token(Token = "0x4001EBB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public int pageNumber;

			[Token(Token = "0x4001EBC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public int resultsPerPage;

			[Token(Token = "0x4001EBD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public IEnumerable<ServerInfoFilter> filters;

			[Token(Token = "0x4001EBE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Stopwatch <stopWatch>5__2;

			[Token(Token = "0x4001EBF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private long <requestId>5__3;

			[Token(Token = "0x4001EC0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private YieldAwaitable.YieldAwaiter <>u__1;

			[Token(Token = "0x6002250")]
			[Address(RVA = "0x1699CD0", Offset = "0x1699CD0", VA = "0x1699CD0", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6002251")]
			[Address(RVA = "0x169A418", Offset = "0x169A418", VA = "0x169A418", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4001EAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("Transport to be advertised during discovery")]
		public Transport transport;

		[Token(Token = "0x4001EAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private IServerInfo _serverInfo;

		[Token(Token = "0x4001EB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private readonly IDictionary<long, IDictionary<long, (float Time, MatchServerResponse Response)>> _waitingRequests;

		[Token(Token = "0x4001EB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private MatchServerRequest _request;

		[Token(Token = "0x4001EB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private int _responseTimeout;

		[Token(Token = "0x17000553")]
		public long ServerId
		{
			[Token(Token = "0x6002234")]
			[Address(RVA = "0x169806C", Offset = "0x169806C", VA = "0x169806C")]
			[CompilerGenerated]
			get
			{
				return default(long);
			}
			[Token(Token = "0x6002235")]
			[Address(RVA = "0x1698074", Offset = "0x1698074", VA = "0x1698074")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000554")]
		public bool IsReady
		{
			[Token(Token = "0x6002249")]
			[Address(RVA = "0x1699B58", Offset = "0x1699B58", VA = "0x1699B58", Slot = "19")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1400007E")]
		public event Action ConnectionLost
		{
			[Token(Token = "0x600223B")]
			[Address(RVA = "0x169887C", Offset = "0x169887C", VA = "0x169887C", Slot = "9")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x600223C")]
			[Address(RVA = "0x1698918", Offset = "0x1698918", VA = "0x1698918", Slot = "10")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6002236")]
		[Address(RVA = "0x169807C", Offset = "0x169807C", VA = "0x169807C", Slot = "4")]
		public override void Start()
		{
		}

		[Token(Token = "0x6002237")]
		[Address(RVA = "0x1698144", Offset = "0x1698144", VA = "0x1698144", Slot = "6")]
		protected override MatchServerResponse ProcessRequest(MatchServerRequest request, IPEndPoint endpoint)
		{
			return default(MatchServerResponse);
		}

		[Token(Token = "0x6002238")]
		[Address(RVA = "0x169825C", Offset = "0x169825C", VA = "0x169825C")]
		private MatchServerResponse GetMatchServerResponse()
		{
			return default(MatchServerResponse);
		}

		[Token(Token = "0x6002239")]
		[Address(RVA = "0x16985A0", Offset = "0x16985A0", VA = "0x16985A0", Slot = "7")]
		protected override MatchServerRequest GetRequest()
		{
			return default(MatchServerRequest);
		}

		[Token(Token = "0x600223A")]
		[Address(RVA = "0x16985A8", Offset = "0x16985A8", VA = "0x16985A8", Slot = "8")]
		protected override void ProcessResponse(MatchServerResponse response, IPEndPoint endpoint)
		{
		}

		[Token(Token = "0x600223D")]
		[Address(RVA = "0x16989B4", Offset = "0x16989B4", VA = "0x16989B4")]
		private static IServerInfo ConvertMatch(MatchServerResponse response)
		{
			return null;
		}

		[Token(Token = "0x600223E")]
		[Address(RVA = "0x1698A68", Offset = "0x1698A68", VA = "0x1698A68", Slot = "11")]
		public Task<IServerInfo> CreateMatch(IServerInfo serverInfo, CancellationToken cancellationToken)
		{
			return null;
		}

		[Token(Token = "0x600223F")]
		[Address(RVA = "0x1698BC0", Offset = "0x1698BC0", VA = "0x1698BC0", Slot = "12")]
		public Task<IServerInfo> JoinMatch(IServerInfo serverInfo, CancellationToken cancellationToken)
		{
			return null;
		}

		[Token(Token = "0x6002240")]
		[Address(RVA = "0x1698C2C", Offset = "0x1698C2C", VA = "0x1698C2C", Slot = "13")]
		public Task<IServerInfo> UpdateMatch(IServerInfo serverInfo, CancellationToken cancellationToken)
		{
			return null;
		}

		[Token(Token = "0x6002241")]
		[Address(RVA = "0x1698CB4", Offset = "0x1698CB4", VA = "0x1698CB4", Slot = "14")]
		public Task<bool> LeaveMatch(CancellationToken cancellationToken)
		{
			return null;
		}

		[Token(Token = "0x6002242")]
		[Address(RVA = "0x1698D1C", Offset = "0x1698D1C", VA = "0x1698D1C", Slot = "15")]
		public Task<bool> DestroyMatch(CancellationToken cancellationToken)
		{
			return null;
		}

		[Token(Token = "0x6002243")]
		[Address(RVA = "0x1698DB0", Offset = "0x1698DB0", VA = "0x1698DB0", Slot = "16")]
		[AsyncStateMachine(typeof(<GetMatchList>d__23))]
		public Task<IServerInfo[]> GetMatchList(CancellationToken cancellationToken, int pageNumber = 0, int resultsPerPage = 10, [Optional] IEnumerable<ServerInfoFilter> filters)
		{
			return null;
		}

		[Token(Token = "0x6002244")]
		[Address(RVA = "0x1698F08", Offset = "0x1698F08", VA = "0x1698F08")]
		private static IServerInfo[] FilterResponses(IServerInfo[] serverInfos, [Optional] IEnumerable<ServerInfoFilter> filters)
		{
			return null;
		}

		[Token(Token = "0x6002245")]
		[Address(RVA = "0x1699120", Offset = "0x1699120", VA = "0x1699120")]
		private static bool PassesFilters(IServerInfo serverInfo, System.Collections.Generic.IReadOnlyDictionary<string, ServerInfoFilter> filters)
		{
			return default(bool);
		}

		[Token(Token = "0x6002246")]
		[Address(RVA = "0x16999DC", Offset = "0x16999DC", VA = "0x16999DC")]
		private static bool Passes(object value1, object value2, OperationType operationType)
		{
			return default(bool);
		}

		[Token(Token = "0x6002247")]
		[Address(RVA = "0x1699AF4", Offset = "0x1699AF4", VA = "0x1699AF4", Slot = "17")]
		public void Connect()
		{
		}

		[Token(Token = "0x6002248")]
		[Address(RVA = "0x1699B00", Offset = "0x1699B00", VA = "0x1699B00", Slot = "18")]
		public void Disconnect()
		{
		}

		[Token(Token = "0x600224A")]
		[Address(RVA = "0x1699B60", Offset = "0x1699B60", VA = "0x1699B60", Slot = "20")]
		public void Reset()
		{
		}

		[Token(Token = "0x600224B")]
		[Address(RVA = "0x1699B64", Offset = "0x1699B64", VA = "0x1699B64")]
		public VrNetworkDiscovery()
		{
		}
	}
}
namespace Networking.Modules
{
	[Token(Token = "0x20006C7")]
	public class NetworkFadeModule<T> : IFadeModule<T> where T : IFadeable, IAnatomyItemInstance
	{
		[Token(Token = "0x4001EC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IFadeModule<T> _fadeModule;

		[Token(Token = "0x4001EC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly Action<int, bool> _setFadedItemCommand;

		[Token(Token = "0x17000555")]
		public IReadOnlyCollection<T> FadedObjects
		{
			[Token(Token = "0x6002254")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002255")]
		public NetworkFadeModule(IFadeModule<T> fadeModule, Action<int, bool> setFadedItemCommand)
		{
		}

		[Token(Token = "0x6002256")]
		public void SetFaded(T obj, bool value)
		{
		}
	}
	[Token(Token = "0x20006C8")]
	public class NetworkHideModule<T> : IHideModule<T> where T : IAnatomyItemInstance
	{
		[Token(Token = "0x4001EC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IHideModule<T> _hideModule;

		[Token(Token = "0x4001EC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly Action<int, bool> _setHiddenItemCommand;

		[Token(Token = "0x17000556")]
		public IReadOnlyCollection<T> HiddenObjects
		{
			[Token(Token = "0x6002257")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002258")]
		public NetworkHideModule(IHideModule<T> hideModule, Action<int, bool> setHiddenItemCommand)
		{
		}

		[Token(Token = "0x6002259")]
		public void SetHidden(T fadeable, bool value)
		{
		}
	}
	[Token(Token = "0x20006C9")]
	public class NetworkLevelModule : ILevelModule
	{
		[Token(Token = "0x4001EC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly ILevelModule _levelModule;

		[Token(Token = "0x4001EC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly Action<Database.SystemType, int> _updateStructureLevelCommand;

		[Token(Token = "0x17000557")]
		public System.Collections.Generic.IReadOnlyDictionary<Database.SystemType, int> SystemStructureLevels
		{
			[Token(Token = "0x600225A")]
			[Address(RVA = "0x169A480", Offset = "0x169A480", VA = "0x169A480", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600225B")]
		[Address(RVA = "0x169A520", Offset = "0x169A520", VA = "0x169A520")]
		public NetworkLevelModule(ILevelModule levelModule, Action<Database.SystemType, int> updateStructureLevelCommand)
		{
		}

		[Token(Token = "0x600225C")]
		[Address(RVA = "0x169A564", Offset = "0x169A564", VA = "0x169A564", Slot = "5")]
		public void UpdateStructureLevel(Database.SystemType system, int level)
		{
		}
	}
	[Token(Token = "0x20006CA")]
	public class NetworkSystemsModule : ISystemsModule
	{
		[Token(Token = "0x4001EC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly ISystemsModule _systemsModule;

		[Token(Token = "0x4001EC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly Action<Database.SystemType, bool> _setSystemActiveCommand;

		[Token(Token = "0x4001ECA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly Action<Database.SystemType[], bool> _setSystemsActiveCommand;

		[Token(Token = "0x4001ECB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly Action<DatabaseType> _toggleDatabaseTypeCommand;

		[Token(Token = "0x17000558")]
		public IReadOnlyCollection<Database.SystemType> ActiveSystems
		{
			[Token(Token = "0x600225D")]
			[Address(RVA = "0x169A580", Offset = "0x169A580", VA = "0x169A580", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000559")]
		public DatabaseType ActiveDatabaseType
		{
			[Token(Token = "0x600225E")]
			[Address(RVA = "0x169A620", Offset = "0x169A620", VA = "0x169A620", Slot = "5")]
			get
			{
				return default(DatabaseType);
			}
		}

		[Token(Token = "0x600225F")]
		[Address(RVA = "0x169A6C4", Offset = "0x169A6C4", VA = "0x169A6C4")]
		public NetworkSystemsModule(ISystemsModule systemsModule, Action<Database.SystemType, bool> setSystemActiveCommand, Action<Database.SystemType[], bool> setSystemsActiveCommand, Action<DatabaseType> toggleDatabaseTypeCommand)
		{
		}

		[Token(Token = "0x6002260")]
		[Address(RVA = "0x169A738", Offset = "0x169A738", VA = "0x169A738", Slot = "6")]
		public Task SetSystemActiveAsync(Database.SystemType systemType, bool value)
		{
			return null;
		}

		[Token(Token = "0x6002261")]
		[Address(RVA = "0x169A7F4", Offset = "0x169A7F4", VA = "0x169A7F4", Slot = "7")]
		public Task SetSystemsActiveAsync(IEnumerable<Database.SystemType> systems, bool value)
		{
			return null;
		}

		[Token(Token = "0x6002262")]
		[Address(RVA = "0x169A8D0", Offset = "0x169A8D0", VA = "0x169A8D0", Slot = "8")]
		public Task SetDatabaseTypeAsync(DatabaseType databaseType)
		{
			return null;
		}
	}
}
namespace Mobile
{
	[Token(Token = "0x20006CB")]
	public enum TapMode
	{
		[Token(Token = "0x4001ECD")]
		Select,
		[Token(Token = "0x4001ECE")]
		Center
	}
	[Token(Token = "0x20006CC")]
	public enum DoubleTapMode
	{
		[Token(Token = "0x4001ED0")]
		Focus,
		[Token(Token = "0x4001ED1")]
		Hide
	}
	[Token(Token = "0x20006CD")]
	public interface IInputHandlerSettings
	{
		[Token(Token = "0x1700055A")]
		TapMode TapMode
		{
			[Token(Token = "0x6002263")]
			get;
			[Token(Token = "0x6002264")]
			set;
		}

		[Token(Token = "0x1700055B")]
		DoubleTapMode DoubleTapMode
		{
			[Token(Token = "0x6002265")]
			get;
			[Token(Token = "0x6002266")]
			set;
		}
	}
	[Serializable]
	[Token(Token = "0x20006CE")]
	public class InputHandlerSettings : IInputHandlerSettings
	{
		[Token(Token = "0x4001ED2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private TapMode _tapMode;

		[Token(Token = "0x4001ED3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private DoubleTapMode _doubleTapMode;

		[Token(Token = "0x1700055C")]
		public TapMode TapMode
		{
			[Token(Token = "0x6002267")]
			[Address(RVA = "0x169A97C", Offset = "0x169A97C", VA = "0x169A97C", Slot = "4")]
			get
			{
				return default(TapMode);
			}
			[Token(Token = "0x6002268")]
			[Address(RVA = "0x169A984", Offset = "0x169A984", VA = "0x169A984", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x1700055D")]
		public DoubleTapMode DoubleTapMode
		{
			[Token(Token = "0x6002269")]
			[Address(RVA = "0x169A98C", Offset = "0x169A98C", VA = "0x169A98C", Slot = "6")]
			get
			{
				return default(DoubleTapMode);
			}
			[Token(Token = "0x600226A")]
			[Address(RVA = "0x169A994", Offset = "0x169A994", VA = "0x169A994", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x600226B")]
		[Address(RVA = "0x169A99C", Offset = "0x169A99C", VA = "0x169A99C")]
		public InputHandlerSettings()
		{
		}
	}
	[Token(Token = "0x20006CF")]
	public class InputHandler : MonoBehaviour
	{
		[Token(Token = "0x20006D0")]
		private class ResetAction : IAction, IDisposable
		{
			[Token(Token = "0x4001EE2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private readonly ITapProcessingModule _tapProcessingModule;

			[Token(Token = "0x4001EE3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private readonly IRaycastController _raycastController;

			[Token(Token = "0x1400007F")]
			public event Action Action
			{
				[Token(Token = "0x6002277")]
				[Address(RVA = "0x169B0AC", Offset = "0x169B0AC", VA = "0x169B0AC", Slot = "4")]
				[CompilerGenerated]
				add
				{
				}
				[Token(Token = "0x6002278")]
				[Address(RVA = "0x169B148", Offset = "0x169B148", VA = "0x169B148", Slot = "5")]
				[CompilerGenerated]
				remove
				{
				}
			}

			[Token(Token = "0x6002279")]
			[Address(RVA = "0x169B1E4", Offset = "0x169B1E4", VA = "0x169B1E4")]
			public ResetAction(ITapProcessingModule tapProcessingModule, IRaycastController raycastController)
			{
			}

			[Token(Token = "0x600227A")]
			[Address(RVA = "0x169B30C", Offset = "0x169B30C", VA = "0x169B30C")]
			private void OnDoubleTapped()
			{
			}

			[Token(Token = "0x600227B")]
			[Address(RVA = "0x169B3D8", Offset = "0x169B3D8", VA = "0x169B3D8", Slot = "6")]
			public void Dispose()
			{
			}
		}

		[Token(Token = "0x20006D1")]
		public class Observer<T> : IObserver<T>
		{
			[Token(Token = "0x4001EE5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly Action<T> _onNext;

			[Token(Token = "0x600227C")]
			public Observer(Action<T> onNext)
			{
			}

			[Token(Token = "0x600227D")]
			public void OnCompleted()
			{
			}

			[Token(Token = "0x600227E")]
			public void OnError(Exception error)
			{
			}

			[Token(Token = "0x600227F")]
			public void OnNext(T value)
			{
			}
		}

		[Token(Token = "0x20006D2")]
		[CompilerGenerated]
		private sealed class <>c__DisplayClass19_0
		{
			[Token(Token = "0x4001EE6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public MobileModuleProvider mobileModuleProvider;

			[Token(Token = "0x4001EE7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public InputHandler <>4__this;

			[Token(Token = "0x4001EE8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CameraSetupModule cameraSetupModule;

			[Token(Token = "0x4001EE9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public TapAction focusAction;

			[Token(Token = "0x4001EEA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public ResetAction resetAction;

			[Token(Token = "0x6002280")]
			[Address(RVA = "0x169B4C8", Offset = "0x169B4C8", VA = "0x169B4C8")]
			public <>c__DisplayClass19_0()
			{
			}

			[Token(Token = "0x6002281")]
			[Address(RVA = "0x169B4D0", Offset = "0x169B4D0", VA = "0x169B4D0")]
			internal bool <Awake>b__0()
			{
				return default(bool);
			}

			[Token(Token = "0x6002282")]
			[Address(RVA = "0x169B4EC", Offset = "0x169B4EC", VA = "0x169B4EC")]
			internal Camera <Awake>b__1()
			{
				return null;
			}

			[Token(Token = "0x6002283")]
			[Address(RVA = "0x169B53C", Offset = "0x169B53C", VA = "0x169B53C")]
			internal SubpartType <Awake>b__3()
			{
				return default(SubpartType);
			}

			[Token(Token = "0x6002284")]
			[Address(RVA = "0x169B68C", Offset = "0x169B68C", VA = "0x169B68C")]
			internal TapEvent <Awake>b__4()
			{
				return default(TapEvent);
			}

			[Token(Token = "0x6002285")]
			[Address(RVA = "0x169B6BC", Offset = "0x169B6BC", VA = "0x169B6BC")]
			internal TapEvent <Awake>b__5()
			{
				return default(TapEvent);
			}

			[Token(Token = "0x6002286")]
			[Address(RVA = "0x169B6F4", Offset = "0x169B6F4", VA = "0x169B6F4")]
			internal void <Awake>b__6(AppMode val)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20006D4")]
		[CompilerGenerated]
		private struct <Awake>d__19 : IAsyncStateMachine
		{
			[Token(Token = "0x4001EEF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001EF0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4001EF1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public InputHandler <>4__this;

			[Token(Token = "0x4001EF2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private <>c__DisplayClass19_0 <>8__1;

			[Token(Token = "0x4001EF3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x600228C")]
			[Address(RVA = "0x169BA6C", Offset = "0x169BA6C", VA = "0x169BA6C", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x600228D")]
			[Address(RVA = "0x169CBFC", Offset = "0x169CBFC", VA = "0x169CBFC", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4001ED4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TapProcessorSettings _tapProcessorSettings;

		[Token(Token = "0x4001ED5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private RaycastControllerSettings _raycastControllerSettings;

		[Token(Token = "0x4001ED6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private CameraSetup _cameraSetup;

		[Token(Token = "0x4001ED7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Camera _arCamera;

		[Token(Token = "0x4001ED8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private NetworkModuleProviderFactory _networkModuleProvider;

		[Token(Token = "0x4001ED9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private InputHandlerSettings _inputHandlerSettings;

		[Token(Token = "0x4001EDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private ARSwitcher _arSwitcher;

		[Token(Token = "0x4001EDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private CameraScreenPointRaycastController _raycastController;

		[Token(Token = "0x4001EDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private SelectionAction<MonoBehaviourObject> _meshItemSelectionModule;

		[Token(Token = "0x4001EDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private ITapProcessingModule _tapProcessingModule;

		[Token(Token = "0x4001EDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private SubpartSelectionAction _subpartSelectionAction;

		[Token(Token = "0x4001EDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private readonly HashSet<IUpdatable> _updatables;

		[Token(Token = "0x4001EE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private readonly List<IDisposable> _disposables;

		[Token(Token = "0x1700055E")]
		public IInputHandlerSettings InputHandlerSettings
		{
			[Token(Token = "0x600226C")]
			[Address(RVA = "0x169A9A4", Offset = "0x169A9A4", VA = "0x169A9A4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700055F")]
		public IFunctionStack FunctionStack
		{
			[Token(Token = "0x600226D")]
			[Address(RVA = "0x169A9AC", Offset = "0x169A9AC", VA = "0x169A9AC")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600226E")]
			[Address(RVA = "0x169A9B4", Offset = "0x169A9B4", VA = "0x169A9B4")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x600226F")]
		[Address(RVA = "0x169A9BC", Offset = "0x169A9BC", VA = "0x169A9BC")]
		[AsyncStateMachine(typeof(<Awake>d__19))]
		private void Awake()
		{
		}

		[Token(Token = "0x6002270")]
		[Address(RVA = "0x169AA70", Offset = "0x169AA70", VA = "0x169AA70")]
		private static IReadOnlyProperty<bool> GetSubpartRaycastEnabledProperty(IModuleProvider moduleProvider)
		{
			return null;
		}

		[Token(Token = "0x6002271")]
		[Address(RVA = "0x169ACA0", Offset = "0x169ACA0", VA = "0x169ACA0")]
		private static TapEvent GetFocusTapEvent(TapMode tapMode, DoubleTapMode doubleTapMode)
		{
			return default(TapEvent);
		}

		[Token(Token = "0x6002272")]
		[Address(RVA = "0x169ACB8", Offset = "0x169ACB8", VA = "0x169ACB8")]
		private static TapEvent GetHideTapEvent(DoubleTapMode doubleTapMode)
		{
			return default(TapEvent);
		}

		[Token(Token = "0x6002273")]
		[Address(RVA = "0x169ACC8", Offset = "0x169ACC8", VA = "0x169ACC8")]
		private static Camera GetActiveCamera(AppMode appMode, Camera mainCamera, Camera arCamera)
		{
			return null;
		}

		[Token(Token = "0x6002274")]
		[Address(RVA = "0x169ACD4", Offset = "0x169ACD4", VA = "0x169ACD4")]
		public void Update()
		{
		}

		[Token(Token = "0x6002275")]
		[Address(RVA = "0x169AE84", Offset = "0x169AE84", VA = "0x169AE84")]
		public void OnDestroy()
		{
		}

		[Token(Token = "0x6002276")]
		[Address(RVA = "0x169AF8C", Offset = "0x169AF8C", VA = "0x169AF8C")]
		public InputHandler()
		{
		}
	}
	[Token(Token = "0x20006D6")]
	public static class InputHandlerExtensions
	{
		[Token(Token = "0x6002290")]
		public static T AddTo<T>(this T disposable, ICollection<IDisposable> container) where T : IDisposable
		{
			return (T)null;
		}
	}
	[Token(Token = "0x20006D7")]
	public class Search : MonoBehaviour
	{
		[StructLayout(3)]
		[Token(Token = "0x20006DB")]
		[CompilerGenerated]
		private struct <ShowFoundResult>d__19 : IAsyncStateMachine
		{
			[Token(Token = "0x4001F10")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001F11")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4001F12")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Search <>4__this;

			[Token(Token = "0x4001F13")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public AnatomyItem item;

			[Token(Token = "0x4001F14")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x60022B0")]
			[Address(RVA = "0x169F408", Offset = "0x169F408", VA = "0x169F408", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60022B1")]
			[Address(RVA = "0x169F750", Offset = "0x169F750", VA = "0x169F750", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4001EF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private SearchResultButton _resultButtonPrefab;

		[Token(Token = "0x4001EF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject _contentParent;

		[Token(Token = "0x4001EF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Button _closeSearch;

		[Token(Token = "0x4001EF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Button _resetSearch;

		[Token(Token = "0x4001EFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private InputField _inputField;

		[Token(Token = "0x4001EFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Scrollbar _scrollBar;

		[Token(Token = "0x4001EFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Image _scrollBarHandle;

		[Token(Token = "0x4001EFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private TranslucentImage _searchBackground;

		[Token(Token = "0x4001EFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private List<GameObject> _results;

		[Token(Token = "0x4001EFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private MobileUiPresenter _uiPresenter;

		[Token(Token = "0x4001F00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private SubscriptionManager _subscriptionManager;

		[Token(Token = "0x4001F01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private IDisposable _searchDisposable;

		[Token(Token = "0x4001F02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private readonly CompositeDisposable _buttonDisposable;

		[Token(Token = "0x4001F03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private INetworkModuleProviderFactory _moduleProviderFactory;

		[Token(Token = "0x6002291")]
		[Address(RVA = "0x169CDBC", Offset = "0x169CDBC", VA = "0x169CDBC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002292")]
		[Address(RVA = "0x169CDDC", Offset = "0x169CDDC", VA = "0x169CDDC")]
		public void StartSearch(INetworkModuleProviderFactory moduleProviderFactory)
		{
		}

		[Token(Token = "0x6002293")]
		[Address(RVA = "0x169D458", Offset = "0x169D458", VA = "0x169D458")]
		private void SearchText(string text)
		{
		}

		[Token(Token = "0x6002294")]
		[Address(RVA = "0x169E2E0", Offset = "0x169E2E0", VA = "0x169E2E0")]
		private void InstantiateResult(AnatomyItem item, string searchText)
		{
		}

		[Token(Token = "0x6002295")]
		[Address(RVA = "0x169E7F8", Offset = "0x169E7F8", VA = "0x169E7F8")]
		private void PickItemFromSearchResult(AnatomyItem item)
		{
		}

		[Token(Token = "0x6002296")]
		[Address(RVA = "0x169EC28", Offset = "0x169EC28", VA = "0x169EC28")]
		[AsyncStateMachine(typeof(<ShowFoundResult>d__19))]
		private void ShowFoundResult(AnatomyItem item)
		{
		}

		[Token(Token = "0x6002297")]
		[Address(RVA = "0x169E098", Offset = "0x169E098", VA = "0x169E098")]
		private void DeleteResults()
		{
		}

		[Token(Token = "0x6002298")]
		[Address(RVA = "0x169EA10", Offset = "0x169EA10", VA = "0x169EA10")]
		private void CloseSearch()
		{
		}

		[Token(Token = "0x6002299")]
		[Address(RVA = "0x169ECFC", Offset = "0x169ECFC", VA = "0x169ECFC")]
		public void CloseInputField()
		{
		}

		[Token(Token = "0x600229A")]
		[Address(RVA = "0x169ED00", Offset = "0x169ED00", VA = "0x169ED00")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600229B")]
		[Address(RVA = "0x169EDB8", Offset = "0x169EDB8", VA = "0x169EDB8")]
		public Search()
		{
		}
	}
	[Token(Token = "0x20006DC")]
	public class SearchResultButton : MonoBehaviour
	{
		[Token(Token = "0x4001F15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Button Button;

		[Token(Token = "0x4001F16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Text Text;

		[Token(Token = "0x4001F17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ScrollRect ScrollRect;

		[Token(Token = "0x60022B2")]
		[Address(RVA = "0x169F75C", Offset = "0x169F75C", VA = "0x169F75C")]
		public SearchResultButton()
		{
		}
	}
	[Token(Token = "0x20006DD")]
	public class UISpawnerController : MonoBehaviour
	{
		[StructLayout(3)]
		[Token(Token = "0x20006DF")]
		[CompilerGenerated]
		private struct <Start>d__19 : IAsyncStateMachine
		{
			[Token(Token = "0x4001F25")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001F26")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4001F27")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public UISpawnerController <>4__this;

			[Token(Token = "0x4001F28")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x60022BE")]
			[Address(RVA = "0x169FD08", Offset = "0x169FD08", VA = "0x169FD08", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60022BF")]
			[Address(RVA = "0x16A00BC", Offset = "0x16A00BC", VA = "0x16A00BC", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4001F18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MobileUiPresenter _phoneUIPrefab;

		[Token(Token = "0x4001F19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MobileUiPresenter _tabletUIPrefab;

		[Token(Token = "0x4001F1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MobileUiPresenter _uiPresenter;

		[Token(Token = "0x4001F1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private LicenseManagerBehaviour _loginManager;

		[Token(Token = "0x4001F1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private CameraSetup _cameraSetup;

		[Token(Token = "0x4001F1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private UiMode _uiMode;

		[Token(Token = "0x4001F1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private NetworkModuleProviderFactory _moduleProvider;

		[Token(Token = "0x4001F1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private ARSwitcher _arSwitcher;

		[Token(Token = "0x4001F20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private UiSettings _uiSettings;

		[Token(Token = "0x4001F21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private InputHandler _inputHandler;

		[Token(Token = "0x4001F22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private readonly CancellationTokenSource _disposeCancellationTokenSource;

		[Token(Token = "0x17000560")]
		public MobileUiPresenter UiPresenter
		{
			[Token(Token = "0x60022B5")]
			[Address(RVA = "0x169F89C", Offset = "0x169F89C", VA = "0x169F89C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000561")]
		public UiMode UiMode
		{
			[Token(Token = "0x60022B6")]
			[Address(RVA = "0x169F8A4", Offset = "0x169F8A4", VA = "0x169F8A4")]
			get
			{
				return default(UiMode);
			}
		}

		[Token(Token = "0x14000080")]
		public event Action UiInitialized
		{
			[Token(Token = "0x60022B3")]
			[Address(RVA = "0x169F764", Offset = "0x169F764", VA = "0x169F764")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60022B4")]
			[Address(RVA = "0x169F800", Offset = "0x169F800", VA = "0x169F800")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x60022B7")]
		[Address(RVA = "0x169F8AC", Offset = "0x169F8AC", VA = "0x169F8AC")]
		private void Awake()
		{
		}

		[Token(Token = "0x60022B8")]
		[Address(RVA = "0x169F91C", Offset = "0x169F91C", VA = "0x169F91C")]
		[AsyncStateMachine(typeof(<Start>d__19))]
		private void Start()
		{
		}

		[Token(Token = "0x60022B9")]
		[Address(RVA = "0x169F9D4", Offset = "0x169F9D4", VA = "0x169F9D4")]
		private void SpawnUI()
		{
		}

		[Token(Token = "0x60022BA")]
		[Address(RVA = "0x169FBCC", Offset = "0x169FBCC", VA = "0x169FBCC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60022BB")]
		[Address(RVA = "0x169FBE8", Offset = "0x169FBE8", VA = "0x169FBE8")]
		public UISpawnerController()
		{
		}
	}
}
namespace Mobile.Utils
{
	[Token(Token = "0x20006E0")]
	public class AppRatingRequestHandler : MonoBehaviour
	{
		[Token(Token = "0x20006E1")]
		private enum AppRatingResponse
		{
			[Token(Token = "0x4001F36")]
			Now,
			[Token(Token = "0x4001F37")]
			Later,
			[Token(Token = "0x4001F38")]
			Never
		}

		[Token(Token = "0x4001F29")]
		private const string LAUNCH_COUNT_KEY = "AppRatingLaunchCount";

		[Token(Token = "0x4001F2A")]
		private const string RATING_RESPONSE_KEY = "AppRatingResponse";

		[Token(Token = "0x4001F2B")]
		private const string TIME_USED_KEY = "AppRatingTimeUsed";

		[Token(Token = "0x4001F2C")]
		private const int LAUNCH_COUNT_THRESHOLD = 5;

		[Token(Token = "0x4001F2D")]
		private const int LAUNCH_COUNT_LATER_DECREMENT = 3;

		[Token(Token = "0x4001F2E")]
		private const float TIME_USED_THRESHOLD = 600f;

		[Token(Token = "0x4001F2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool _sessionAlreadyProcessed;

		[Token(Token = "0x4001F30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static float _lastTimeSnapshot;

		[Token(Token = "0x4001F31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float _time;

		[Token(Token = "0x4001F32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject _additionalContentPrefab;

		[Token(Token = "0x4001F33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AppRatingAdditionalContent _additionalGuiContent;

		[Token(Token = "0x4001F34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private IDisposable _disposable;

		[Token(Token = "0x17000562")]
		private AppRatingAdditionalContent AdditionalContent
		{
			[Token(Token = "0x60022C0")]
			[Address(RVA = "0x16A00C8", Offset = "0x16A00C8", VA = "0x16A00C8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60022C1")]
		[Address(RVA = "0x16A01B0", Offset = "0x16A01B0", VA = "0x16A01B0")]
		private void Awake()
		{
		}

		[Token(Token = "0x60022C2")]
		[Address(RVA = "0x16A01B4", Offset = "0x16A01B4", VA = "0x16A01B4")]
		private void ProcessSession()
		{
		}

		[Token(Token = "0x60022C3")]
		[Address(RVA = "0x16A031C", Offset = "0x16A031C", VA = "0x16A031C")]
		private static bool ShouldSchedulePopup()
		{
			return default(bool);
		}

		[Token(Token = "0x60022C4")]
		[Address(RVA = "0x16A099C", Offset = "0x16A099C", VA = "0x16A099C")]
		private static bool CheckTimeUsed()
		{
			return default(bool);
		}

		[Token(Token = "0x60022C5")]
		[Address(RVA = "0x16A0750", Offset = "0x16A0750", VA = "0x16A0750")]
		private static bool CheckLaunchCount()
		{
			return default(bool);
		}

		[Token(Token = "0x60022C6")]
		[Address(RVA = "0x16A0BFC", Offset = "0x16A0BFC", VA = "0x16A0BFC")]
		private static bool CheckRandomCondition()
		{
			return default(bool);
		}

		[Token(Token = "0x60022C7")]
		[Address(RVA = "0x16A0588", Offset = "0x16A0588", VA = "0x16A0588")]
		private static bool AlreadyRatedOrSelectedNever()
		{
			return default(bool);
		}

		[Token(Token = "0x60022C8")]
		[Address(RVA = "0x16A0228", Offset = "0x16A0228", VA = "0x16A0228")]
		private static void IncrementLaunchCount()
		{
		}

		[Token(Token = "0x60022C9")]
		[Address(RVA = "0x16A0D44", Offset = "0x16A0D44", VA = "0x16A0D44")]
		private static int GetLaunchCount()
		{
			return default(int);
		}

		[Token(Token = "0x60022CA")]
		[Address(RVA = "0x16A0CFC", Offset = "0x16A0CFC", VA = "0x16A0CFC")]
		private static float GetTimeUsed()
		{
			return default(float);
		}

		[Token(Token = "0x60022CB")]
		[Address(RVA = "0x16A03B0", Offset = "0x16A03B0", VA = "0x16A03B0")]
		private void SchedulePopup()
		{
		}

		[Token(Token = "0x60022CC")]
		[Address(RVA = "0x16A0D8C", Offset = "0x16A0D8C", VA = "0x16A0D8C")]
		private bool CanDisplayPopup(long value)
		{
			return default(bool);
		}

		[Token(Token = "0x60022CD")]
		[Address(RVA = "0x16A0DA8", Offset = "0x16A0DA8", VA = "0x16A0DA8")]
		private void DisplayPopup()
		{
		}

		[Token(Token = "0x60022CE")]
		[Address(RVA = "0x16A1B50", Offset = "0x16A1B50", VA = "0x16A1B50")]
		private static void OnRateSelected()
		{
		}

		[Token(Token = "0x60022CF")]
		[Address(RVA = "0x16A1C00", Offset = "0x16A1C00", VA = "0x16A1C00")]
		private static void OnLaterSelected()
		{
		}

		[Token(Token = "0x60022D0")]
		[Address(RVA = "0x16A1C7C", Offset = "0x16A1C7C", VA = "0x16A1C7C")]
		private static void OnNeverSelected()
		{
		}

		[Token(Token = "0x60022D1")]
		[Address(RVA = "0x16A1BA4", Offset = "0x16A1BA4", VA = "0x16A1BA4")]
		private static void OpenRating()
		{
		}

		[Token(Token = "0x60022D2")]
		[Address(RVA = "0x16A1CCC", Offset = "0x16A1CCC", VA = "0x16A1CCC")]
		private void Update()
		{
		}

		[Token(Token = "0x60022D3")]
		[Address(RVA = "0x16A1CE8", Offset = "0x16A1CE8", VA = "0x16A1CE8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60022D4")]
		[Address(RVA = "0x16A1E04", Offset = "0x16A1E04", VA = "0x16A1E04")]
		public AppRatingRequestHandler()
		{
		}
	}
	[Token(Token = "0x20006E2")]
	public class IOSNetworkPermission
	{
		[Token(Token = "0x60022D6")]
		[Address(RVA = "0x16A1E10", Offset = "0x16A1E10", VA = "0x16A1E10")]
		public static void TriggerDialog()
		{
		}

		[Token(Token = "0x60022D7")]
		[Address(RVA = "0x16A1FBC", Offset = "0x16A1FBC", VA = "0x16A1FBC")]
		public IOSNetworkPermission()
		{
		}
	}
	[Token(Token = "0x20006E3")]
	public class ScrollRectMod : ScrollRect
	{
		[Token(Token = "0x60022D8")]
		[Address(RVA = "0x16A1FC4", Offset = "0x16A1FC4", VA = "0x16A1FC4", Slot = "44")]
		public override void OnBeginDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60022D9")]
		[Address(RVA = "0x16A1FC8", Offset = "0x16A1FC8", VA = "0x16A1FC8", Slot = "46")]
		public override void OnDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60022DA")]
		[Address(RVA = "0x16A1FCC", Offset = "0x16A1FCC", VA = "0x16A1FCC", Slot = "45")]
		public override void OnEndDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60022DB")]
		[Address(RVA = "0x16A1FD0", Offset = "0x16A1FD0", VA = "0x16A1FD0")]
		public ScrollRectMod()
		{
		}
	}
	[Token(Token = "0x20006E4")]
	public class OverlayScreen : MonoBehaviour
	{
		[Token(Token = "0x4001F39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Text _text;

		[Token(Token = "0x4001F3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private LocalizedTextMeshProGui _localizedText;

		[Token(Token = "0x60022DC")]
		[Address(RVA = "0x16A1FD8", Offset = "0x16A1FD8", VA = "0x16A1FD8")]
		public void StartLoading(bool val, string localizedText = "labelloading")
		{
		}

		[Token(Token = "0x60022DD")]
		[Address(RVA = "0x16A2180", Offset = "0x16A2180", VA = "0x16A2180")]
		public void StopLoading()
		{
		}

		[Token(Token = "0x60022DE")]
		[Address(RVA = "0x16A2040", Offset = "0x16A2040", VA = "0x16A2040")]
		private void DoPingPong(float value = 0f)
		{
		}

		[Token(Token = "0x60022DF")]
		[Address(RVA = "0x16A2204", Offset = "0x16A2204", VA = "0x16A2204")]
		public OverlayScreen()
		{
		}
	}
}
namespace Mobile.UI
{
	[Token(Token = "0x20006E6")]
	public class AdditionalContent : MonoBehaviour, IAdditionalModalContent
	{
		[Token(Token = "0x4001F3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Text _text;

		[Token(Token = "0x4001F3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Button _button;

		[Token(Token = "0x4001F3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Text _buttonText;

		[Token(Token = "0x4001F40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Button _button2;

		[Token(Token = "0x4001F41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Text _button2Text;

		[Token(Token = "0x17000563")]
		public Transform Transform
		{
			[Token(Token = "0x60022E5")]
			[Address(RVA = "0x16A2468", Offset = "0x16A2468", VA = "0x16A2468", Slot = "6")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000564")]
		public Text Text
		{
			[Token(Token = "0x60022E6")]
			[Address(RVA = "0x16A2470", Offset = "0x16A2470", VA = "0x16A2470")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000565")]
		public Button Button
		{
			[Token(Token = "0x60022E7")]
			[Address(RVA = "0x16A2478", Offset = "0x16A2478", VA = "0x16A2478")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000566")]
		public Text ButtonText
		{
			[Token(Token = "0x60022E8")]
			[Address(RVA = "0x16A2480", Offset = "0x16A2480", VA = "0x16A2480")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000567")]
		public Button Button2
		{
			[Token(Token = "0x60022E9")]
			[Address(RVA = "0x16A2488", Offset = "0x16A2488", VA = "0x16A2488")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000568")]
		public Text Button2Text
		{
			[Token(Token = "0x60022EA")]
			[Address(RVA = "0x16A2490", Offset = "0x16A2490", VA = "0x16A2490")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x14000081")]
		public event Action ModalFinished
		{
			[Token(Token = "0x60022E2")]
			[Address(RVA = "0x16A2240", Offset = "0x16A2240", VA = "0x16A2240", Slot = "4")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60022E3")]
			[Address(RVA = "0x16A22DC", Offset = "0x16A22DC", VA = "0x16A22DC", Slot = "5")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x60022E4")]
		[Address(RVA = "0x16A2378", Offset = "0x16A2378", VA = "0x16A2378")]
		private void Awake()
		{
		}

		[Token(Token = "0x60022EB")]
		[Address(RVA = "0x16A2498", Offset = "0x16A2498", VA = "0x16A2498")]
		public AdditionalContent()
		{
		}
	}
	[Token(Token = "0x20006E7")]
	public class AppRatingAdditionalContent : MonoBehaviour, IAdditionalModalContent
	{
		[Token(Token = "0x4001F43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Button _button;

		[Token(Token = "0x4001F44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Text _buttonText;

		[Token(Token = "0x4001F45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Button _button2;

		[Token(Token = "0x4001F46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Text _button2Text;

		[Token(Token = "0x4001F47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Button _button3;

		[Token(Token = "0x4001F48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Text _button3Text;

		[Token(Token = "0x17000569")]
		public Transform Transform
		{
			[Token(Token = "0x60022EE")]
			[Address(RVA = "0x16A24D8", Offset = "0x16A24D8", VA = "0x16A24D8", Slot = "6")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700056A")]
		public Button Button
		{
			[Token(Token = "0x60022F2")]
			[Address(RVA = "0x16A2734", Offset = "0x16A2734", VA = "0x16A2734")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700056B")]
		public Text ButtonText
		{
			[Token(Token = "0x60022F3")]
			[Address(RVA = "0x16A273C", Offset = "0x16A273C", VA = "0x16A273C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700056C")]
		public Button Button2
		{
			[Token(Token = "0x60022F4")]
			[Address(RVA = "0x16A2744", Offset = "0x16A2744", VA = "0x16A2744")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700056D")]
		public Text Button2Text
		{
			[Token(Token = "0x60022F5")]
			[Address(RVA = "0x16A274C", Offset = "0x16A274C", VA = "0x16A274C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700056E")]
		public Button Button3
		{
			[Token(Token = "0x60022F6")]
			[Address(RVA = "0x16A2754", Offset = "0x16A2754", VA = "0x16A2754")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700056F")]
		public Text Button3Text
		{
			[Token(Token = "0x60022F7")]
			[Address(RVA = "0x16A275C", Offset = "0x16A275C", VA = "0x16A275C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x14000082")]
		public event Action ModalFinished
		{
			[Token(Token = "0x60022EF")]
			[Address(RVA = "0x16A24E0", Offset = "0x16A24E0", VA = "0x16A24E0", Slot = "4")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60022F0")]
			[Address(RVA = "0x16A257C", Offset = "0x16A257C", VA = "0x16A257C", Slot = "5")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x60022F1")]
		[Address(RVA = "0x16A2618", Offset = "0x16A2618", VA = "0x16A2618")]
		private void Awake()
		{
		}

		[Token(Token = "0x60022F8")]
		[Address(RVA = "0x16A2764", Offset = "0x16A2764", VA = "0x16A2764")]
		private void InvokeModalFinished()
		{
		}

		[Token(Token = "0x60022F9")]
		[Address(RVA = "0x16A2780", Offset = "0x16A2780", VA = "0x16A2780")]
		public AppRatingAdditionalContent()
		{
		}
	}
	[Token(Token = "0x20006E8")]
	public class ConnectedUserField : MonoBehaviour
	{
		[Token(Token = "0x4001F4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Text _orderText;

		[Token(Token = "0x4001F4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Text _nameText;

		[Token(Token = "0x4001F4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Toggle _muteToggle;

		[Token(Token = "0x17000570")]
		public Text OrderText
		{
			[Token(Token = "0x60022FA")]
			[Address(RVA = "0x16A2788", Offset = "0x16A2788", VA = "0x16A2788")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000571")]
		public Text NameText
		{
			[Token(Token = "0x60022FB")]
			[Address(RVA = "0x16A2790", Offset = "0x16A2790", VA = "0x16A2790")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000572")]
		public Toggle MuteToggle
		{
			[Token(Token = "0x60022FC")]
			[Address(RVA = "0x16A2798", Offset = "0x16A2798", VA = "0x16A2798")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60022FD")]
		[Address(RVA = "0x16A27A0", Offset = "0x16A27A0", VA = "0x16A27A0")]
		public ConnectedUserField()
		{
		}
	}
	[Token(Token = "0x20006E9")]
	public class ConnectedUsersPanel : MonoBehaviour
	{
		[StructLayout(3)]
		[Token(Token = "0x20006ED")]
		[CompilerGenerated]
		private struct <StartUpdateConnectedUsers>d__8 : IAsyncStateMachine
		{
			[Token(Token = "0x4001F58")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001F59")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4001F5A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public ConnectedUsersPanel <>4__this;

			[Token(Token = "0x4001F5B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public INetworkModuleProviderFactory moduleProviderFactory;

			[Token(Token = "0x4001F5C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public int interval;

			[Token(Token = "0x4001F5D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private CancellationToken <cancellationToken>5__2;

			[Token(Token = "0x4001F5E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x6002309")]
			[Address(RVA = "0x16A2B28", Offset = "0x16A2B28", VA = "0x16A2B28", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x600230A")]
			[Address(RVA = "0x16A3A90", Offset = "0x16A3A90", VA = "0x16A3A90", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4001F4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _connectedUserFieldPrefab;

		[Token(Token = "0x4001F4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform _connectedUsersListContent;

		[Token(Token = "0x4001F4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ConnectedUserField[] _connectedUserFields;

		[Token(Token = "0x4001F50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Button _closeButton;

		[Token(Token = "0x4001F51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private IList<INetworkUser> _connectedUsers;

		[Token(Token = "0x4001F52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private CancellationTokenSource _updateCancellationTokenSource;

		[Token(Token = "0x17000573")]
		public Button CloseButton
		{
			[Token(Token = "0x60022FE")]
			[Address(RVA = "0x16A27A8", Offset = "0x16A27A8", VA = "0x16A27A8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60022FF")]
		[Address(RVA = "0x16A27B0", Offset = "0x16A27B0", VA = "0x16A27B0")]
		[AsyncStateMachine(typeof(<StartUpdateConnectedUsers>d__8))]
		public void StartUpdateConnectedUsers(INetworkModuleProviderFactory moduleProviderFactory, int interval)
		{
		}

		[Token(Token = "0x6002300")]
		[Address(RVA = "0x16A2890", Offset = "0x16A2890", VA = "0x16A2890")]
		public void StopUpdate()
		{
		}

		[Token(Token = "0x6002301")]
		[Address(RVA = "0x16A28A4", Offset = "0x16A28A4", VA = "0x16A28A4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6002302")]
		[Address(RVA = "0x16A28B8", Offset = "0x16A28B8", VA = "0x16A28B8")]
		public ConnectedUsersPanel()
		{
		}
	}
	[Token(Token = "0x20006EE")]
	public class InfomonitorToggleController : MonoBehaviour
	{
		[Token(Token = "0x4001F5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Toggle _toggle;

		[Token(Token = "0x4001F60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private InteractiveToggle2D _interactiveToggle2D;

		[Token(Token = "0x4001F61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Text _mainText;

		[Token(Token = "0x4001F62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Text _subText;

		[Token(Token = "0x4001F63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private RectTransform _infoMonitor;

		[Token(Token = "0x4001F64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private RectTransform _infoMonitorOnAnchor;

		[Token(Token = "0x4001F65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private RectTransform _infoMonitorOffAnchor;

		[Token(Token = "0x4001F66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private TestSwipePanel _swipePanel;

		[Token(Token = "0x4001F67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private MobileUiPresenter _uiPresenter;

		[Token(Token = "0x4001F68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private readonly CompositeDisposable _disposable;

		[Token(Token = "0x4001F69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool _wasInfoMonitorOpened;

		[Token(Token = "0x4001F6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private ICameraSetup _cameraSetup;

		[Token(Token = "0x4001F6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private IMobileAnatomyItemInstance _lastIsolatedObject;

		[Token(Token = "0x4001F6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private IIsolateModule<IMobileAnatomyItemInstance> _isolateModule;

		[Token(Token = "0x600230B")]
		[Address(RVA = "0x16A3A9C", Offset = "0x16A3A9C", VA = "0x16A3A9C")]
		public void Init(IIsolateModule<IMobileAnatomyItemInstance> isolateModule, ARSwitcher arManager, ICameraSetup cameraSetup)
		{
		}

		[Token(Token = "0x600230C")]
		[Address(RVA = "0x16A3F24", Offset = "0x16A3F24", VA = "0x16A3F24")]
		private void Update()
		{
		}

		[Token(Token = "0x600230D")]
		[Address(RVA = "0x16A40C8", Offset = "0x16A40C8", VA = "0x16A40C8")]
		private void OnIsolatedItemChanged(IMobileAnatomyItemInstance item)
		{
		}

		[Token(Token = "0x600230E")]
		[Address(RVA = "0x16A454C", Offset = "0x16A454C", VA = "0x16A454C")]
		public void ShowInfomonitor()
		{
		}

		[Token(Token = "0x600230F")]
		[Address(RVA = "0x16A457C", Offset = "0x16A457C", VA = "0x16A457C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6002310")]
		[Address(RVA = "0x16A4590", Offset = "0x16A4590", VA = "0x16A4590")]
		public InfomonitorToggleController()
		{
		}
	}
	[Token(Token = "0x20006F1")]
	public class LoadingScreen : MonoBehaviour
	{
		[Token(Token = "0x4001F71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Canvas _canvas;

		[Token(Token = "0x4001F72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Image _backgroundImage;

		[Token(Token = "0x4001F73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Image _render;

		[Token(Token = "0x4001F74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Image _vmLogo;

		[Token(Token = "0x4001F75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private TextMeshProUGUI _text;

		[Token(Token = "0x4001F76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private float _animationTime;

		[Token(Token = "0x4001F77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private float _delay;

		[Token(Token = "0x4001F78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private UISpawnerController _uiSpawnerController;

		[Token(Token = "0x4001F79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private NetworkModuleProviderFactory _moduleProvider;

		[Token(Token = "0x4001F7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Sequence _sequence;

		[Token(Token = "0x4001F7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool _uiInitialized;

		[Token(Token = "0x4001F7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private bool _loadingCompleted;

		[Token(Token = "0x600231B")]
		[Address(RVA = "0x16A5008", Offset = "0x16A5008", VA = "0x16A5008")]
		private void Awake()
		{
		}

		[Token(Token = "0x600231C")]
		[Address(RVA = "0x16A5024", Offset = "0x16A5024", VA = "0x16A5024")]
		private void Start()
		{
		}

		[Token(Token = "0x600231D")]
		[Address(RVA = "0x16A5148", Offset = "0x16A5148", VA = "0x16A5148")]
		private void OnUiInitialized()
		{
		}

		[Token(Token = "0x600231E")]
		[Address(RVA = "0x16A5338", Offset = "0x16A5338", VA = "0x16A5338")]
		private void Update()
		{
		}

		[Token(Token = "0x600231F")]
		[Address(RVA = "0x16A50C0", Offset = "0x16A50C0", VA = "0x16A50C0")]
		private void ShowLoadingScreen(float animationTime)
		{
		}

		[Token(Token = "0x6002320")]
		[Address(RVA = "0x16A52B0", Offset = "0x16A52B0", VA = "0x16A52B0")]
		private void HideLoadingScreen(float animationTime)
		{
		}

		[Token(Token = "0x6002321")]
		[Address(RVA = "0x16A54A8", Offset = "0x16A54A8", VA = "0x16A54A8")]
		private Sequence GetShowLoadingScreenSequence(float animationTime)
		{
			return null;
		}

		[Token(Token = "0x6002322")]
		[Address(RVA = "0x16A55DC", Offset = "0x16A55DC", VA = "0x16A55DC")]
		private Sequence GetHideLoadingScreenSequence(float animationTime)
		{
			return null;
		}

		[Token(Token = "0x6002323")]
		[Address(RVA = "0x16A5754", Offset = "0x16A5754", VA = "0x16A5754")]
		public LoadingScreen()
		{
		}
	}
	[Token(Token = "0x20006F2")]
	public class MobileMultiplayerUi : MonoBehaviour
	{
		[StructLayout(3)]
		[Token(Token = "0x20006F4")]
		[CompilerGenerated]
		private struct <CreateServer>d__26 : IAsyncStateMachine
		{
			[Token(Token = "0x4001F91")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001F92")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4001F93")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public MobileMultiplayerUi <>4__this;

			[Token(Token = "0x4001F94")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public string name;

			[Token(Token = "0x4001F95")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private CancellationToken <cancellationToken>5__2;

			[Token(Token = "0x4001F96")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private ServerInfo <serverInfo>5__3;

			[Token(Token = "0x4001F97")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private TaskAwaiter<int> <>u__1;

			[Token(Token = "0x4001F98")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private TaskAwaiter<LicenseManagerNetworkExtensions.RequestResult> <>u__2;

			[Token(Token = "0x4001F99")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private TaskAwaiter <>u__3;

			[Token(Token = "0x4001F9A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private TaskAwaiter<bool> <>u__4;

			[Token(Token = "0x6002337")]
			[Address(RVA = "0x16A67A4", Offset = "0x16A67A4", VA = "0x16A67A4", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6002338")]
			[Address(RVA = "0x16A7118", Offset = "0x16A7118", VA = "0x16A7118", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20006F5")]
		[CompilerGenerated]
		private struct <MatchmakingUiOnServerSelected>d__27 : IAsyncStateMachine
		{
			[Token(Token = "0x4001F9B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001F9C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4001F9D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public MobileMultiplayerUi <>4__this;

			[Token(Token = "0x4001F9E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public IServerInfo serverInfo;

			[Token(Token = "0x4001F9F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private CancellationToken <cancellationToken>5__2;

			[Token(Token = "0x4001FA0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private TaskAwaiter<LicenseManagerNetworkExtensions.RequestResult> <>u__1;

			[Token(Token = "0x4001FA1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private TaskAwaiter<bool> <>u__2;

			[Token(Token = "0x6002339")]
			[Address(RVA = "0x16A7124", Offset = "0x16A7124", VA = "0x16A7124", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x600233A")]
			[Address(RVA = "0x16A767C", Offset = "0x16A767C", VA = "0x16A767C", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4001F7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private ObserverMatchmakerView _matchmakingUi;

		[Token(Token = "0x4001F7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Text _roomNameText;

		[Token(Token = "0x4001F7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject _createRoomPanel;

		[Token(Token = "0x4001F80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject _joinRoomPanel;

		[Token(Token = "0x4001F81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Button _openJoinRoomButton;

		[Token(Token = "0x4001F82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Button _launchVrButton;

		[Token(Token = "0x4001F83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Button _backButton;

		[Token(Token = "0x4001F84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Button _openCreateRoomButton;

		[Token(Token = "0x4001F85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Button _createServerButton;

		[Token(Token = "0x4001F86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private RectTransform _loginPanel;

		[Token(Token = "0x4001F87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private RectTransform _matchMakerPanel;

		[Token(Token = "0x4001F88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private RectTransform _gamePanel;

		[Token(Token = "0x4001F89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private readonly CompositeDisposable _disposable;

		[Token(Token = "0x4001F8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private BoolReactiveProperty _isHorizontal;

		[Token(Token = "0x4001F8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private ILicenseManager _licenseManager;

		[Token(Token = "0x4001F8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private IMatchmakerFactory _matchmakerFactory;

		[Token(Token = "0x4001F8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private CancellationTokenSource _createServerCancellationTokenSource;

		[Token(Token = "0x4001F8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private CancellationTokenSource _joinServerCancellationTokenSource;

		[Token(Token = "0x17000574")]
		private AnatomyNetworkManager AnatomyNetworkManager
		{
			[Token(Token = "0x6002325")]
			[Address(RVA = "0x16A5784", Offset = "0x16A5784", VA = "0x16A5784")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002326")]
		[Address(RVA = "0x16A582C", Offset = "0x16A582C", VA = "0x16A582C")]
		public void Initialize(ILicenseManager licenseManager, IMatchmakerFactory matchmakerFactory)
		{
		}

		[Token(Token = "0x6002327")]
		[Address(RVA = "0x16A585C", Offset = "0x16A585C", VA = "0x16A585C")]
		private void Start()
		{
		}

		[Token(Token = "0x6002328")]
		[Address(RVA = "0x16A5CD0", Offset = "0x16A5CD0", VA = "0x16A5CD0")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6002329")]
		[Address(RVA = "0x16A5D30", Offset = "0x16A5D30", VA = "0x16A5D30")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600232A")]
		[Address(RVA = "0x16A5D80", Offset = "0x16A5D80", VA = "0x16A5D80")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600232B")]
		[Address(RVA = "0x16A5DC4", Offset = "0x16A5DC4", VA = "0x16A5DC4")]
		public void SetImageBasedOnOrientation(bool isHorizontal)
		{
		}

		[Token(Token = "0x600232C")]
		[Address(RVA = "0x16A5FEC", Offset = "0x16A5FEC", VA = "0x16A5FEC")]
		[AsyncStateMachine(typeof(<CreateServer>d__26))]
		public void CreateServer(string name)
		{
		}

		[Token(Token = "0x600232D")]
		[Address(RVA = "0x16A60C8", Offset = "0x16A60C8", VA = "0x16A60C8")]
		[AsyncStateMachine(typeof(<MatchmakingUiOnServerSelected>d__27))]
		public void MatchmakingUiOnServerSelected(IServerInfo serverInfo)
		{
		}

		[Token(Token = "0x600232E")]
		[Address(RVA = "0x16A61A0", Offset = "0x16A61A0", VA = "0x16A61A0")]
		private static void DisplayResult(LicenseManagerNetworkExtensions.RequestResult result)
		{
		}

		[Token(Token = "0x600232F")]
		[Address(RVA = "0x16A633C", Offset = "0x16A633C", VA = "0x16A633C")]
		public MobileMultiplayerUi()
		{
		}
	}
	[Token(Token = "0x20006F6")]
	public interface IAdditionalModalContent
	{
		[Token(Token = "0x17000575")]
		Transform Transform
		{
			[Token(Token = "0x600233D")]
			get;
		}

		[Token(Token = "0x14000083")]
		event Action ModalFinished;
	}
	[Token(Token = "0x20006F7")]
	public class EventButtonDetails
	{
		[Token(Token = "0x4001FA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string Text;

		[Token(Token = "0x4001FA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UnityAction Action;

		[Token(Token = "0x4001FA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color Color;

		[Token(Token = "0x600233E")]
		[Address(RVA = "0x16A6334", Offset = "0x16A6334", VA = "0x16A6334")]
		public EventButtonDetails()
		{
		}
	}
	[Token(Token = "0x20006F8")]
	public class ModalPanelDetails
	{
		[Token(Token = "0x4001FA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string Title;

		[Token(Token = "0x4001FA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string Text;

		[Token(Token = "0x4001FA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EventButtonDetails Button1Details;

		[Token(Token = "0x4001FA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public EventButtonDetails Button2Details;

		[Token(Token = "0x4001FA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public IAdditionalModalContent AdditionalContent;

		[Token(Token = "0x600233F")]
		[Address(RVA = "0x16A13BC", Offset = "0x16A13BC", VA = "0x16A13BC")]
		public ModalPanelDetails()
		{
		}
	}
	[Token(Token = "0x20006F9")]
	public class ModalPanel : MonoBehaviour
	{
		[Token(Token = "0x4001FAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Text _text;

		[Token(Token = "0x4001FAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Text _title;

		[Token(Token = "0x4001FAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Button _button1;

		[Token(Token = "0x4001FAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Button _button2;

		[Token(Token = "0x4001FAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Button _backgroundCancelButton;

		[Token(Token = "0x4001FAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Text _button1Text;

		[Token(Token = "0x4001FB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Text _button2Text;

		[Token(Token = "0x4001FB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private GameObject _modalPanelObject;

		[Token(Token = "0x4001FB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private IAdditionalModalContent _additionalContent;

		[Token(Token = "0x4001FB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Color _button1OriginalColor;

		[Token(Token = "0x4001FB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Color _button2OriginalColor;

		[Token(Token = "0x4001FB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static ModalPanel _modalPanel;

		[Token(Token = "0x17000576")]
		public static ModalPanel Instance
		{
			[Token(Token = "0x6002340")]
			[Address(RVA = "0x16A11D8", Offset = "0x16A11D8", VA = "0x16A11D8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002341")]
		[Address(RVA = "0x16A7688", Offset = "0x16A7688", VA = "0x16A7688")]
		private void Start()
		{
		}

		[Token(Token = "0x6002342")]
		[Address(RVA = "0x16A76B4", Offset = "0x16A76B4", VA = "0x16A76B4")]
		public void DisplayInfo(string text, [Optional] UnityAction action)
		{
		}

		[Token(Token = "0x6002343")]
		[Address(RVA = "0x16A13C4", Offset = "0x16A13C4", VA = "0x16A13C4")]
		public void DisplayModalPanel(ModalPanelDetails value)
		{
		}

		[Token(Token = "0x6002344")]
		[Address(RVA = "0x16A77A8", Offset = "0x16A77A8", VA = "0x16A77A8")]
		private void SetupButton(Button button, Text buttonText, EventButtonDetails details)
		{
		}

		[Token(Token = "0x6002345")]
		[Address(RVA = "0x16A7928", Offset = "0x16A7928", VA = "0x16A7928")]
		public void ClosePanel()
		{
		}

		[Token(Token = "0x6002346")]
		[Address(RVA = "0x16A7A6C", Offset = "0x16A7A6C", VA = "0x16A7A6C")]
		public ModalPanel()
		{
		}
	}
	[Token(Token = "0x20006FA")]
	public class SubscriptionManager : MonoBehaviour
	{
		[Token(Token = "0x4001FB6")]
		private const string SUBSCRIPTION_ID_MONTHLY_HS = "com.virtualmedicine.aranatomyhighschool.subscriptions.monthly";

		[Token(Token = "0x4001FB7")]
		private const string SUBSCRIPTION_ID_YEARLY_HS = "com.virtualmedicine.aranatomyhighschool.subscriptions.yearly";

		[Token(Token = "0x4001FB8")]
		private const string SUBSCRIPTION_ID_LIFETIME_HS = "com.virtualmedicine.aranatomyhighschool.nonconsumables.lifetime";

		[Token(Token = "0x4001FB9")]
		private const string SUBSCRIPTION_ID_MONTHLY_UNI = "com.virtualmedicine.aranatomy.subscriptions.monthly";

		[Token(Token = "0x4001FBA")]
		private const string SUBSCRIPTION_ID_YEARLY_UNI = "com.virtualmedicine.aranatomy.subscriptions.yearly";

		[Token(Token = "0x4001FBB")]
		private const string SUBSCRIPTION_ID_LIFETIME_UNI = "com.virtualmedicine.aranatomy.nonconsumables.lifetime";

		[Token(Token = "0x4001FBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private System.Collections.Generic.IReadOnlyDictionary<string, Subscription> _debugSubscriptions;

		[Token(Token = "0x4001FBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private System.Collections.Generic.IReadOnlyDictionary<string, VE.IAP.Product> _debugProducts;

		[Token(Token = "0x4001FBE")]
		private const int OFFER_WIDTH = 490;

		[Token(Token = "0x4001FBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private RectTransform _subscriptionPanel;

		[Token(Token = "0x4001FC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Text _titleText;

		[Token(Token = "0x4001FC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Text _descriptionText;

		[Token(Token = "0x4001FC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Text _additionalText;

		[Token(Token = "0x4001FC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Transform _offers;

		[Token(Token = "0x4001FC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Button _closeButton;

		[Token(Token = "0x4001FC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		[Header("Prefabs")]
		private GameObject _subscriptionOffer;

		[Token(Token = "0x4001FC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject _subscriptionOfferIOS;

		[Token(Token = "0x4001FC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private GameObject _enterpriseOffer;

		[Token(Token = "0x4001FC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private MobileUiPresenter _uiPresenter;

		[Token(Token = "0x4001FC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private IAPConfiguration _iapConfiguration;

		[Token(Token = "0x4001FCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private IPurchaseController _inapController;

		[Token(Token = "0x4001FCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private PurchaseControllerView _purchaseControllerView;

		[Token(Token = "0x17000577")]
		private GameObject SubscriptionOffer
		{
			[Token(Token = "0x600234D")]
			[Address(RVA = "0x16A850C", Offset = "0x16A850C", VA = "0x16A850C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000578")]
		public PurchaseControllerView PurchaseControllerView
		{
			[Token(Token = "0x600234E")]
			[Address(RVA = "0x16A8514", Offset = "0x16A8514", VA = "0x16A8514")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000579")]
		public IPurchaseController InapController
		{
			[Token(Token = "0x600234F")]
			[Address(RVA = "0x16A85DC", Offset = "0x16A85DC", VA = "0x16A85DC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700057A")]
		public ILicenseManager LicenseManager
		{
			[Token(Token = "0x6002350")]
			[Address(RVA = "0x16A8878", Offset = "0x16A8878", VA = "0x16A8878")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6002351")]
			[Address(RVA = "0x16A8880", Offset = "0x16A8880", VA = "0x16A8880")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700057B")]
		public RectTransform SubscriptionPanel
		{
			[Token(Token = "0x6002352")]
			[Address(RVA = "0x16A8888", Offset = "0x16A8888", VA = "0x16A8888")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700057C")]
		public Button CloseButton
		{
			[Token(Token = "0x6002353")]
			[Address(RVA = "0x16A8890", Offset = "0x16A8890", VA = "0x16A8890")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x14000084")]
		public event Action<string> PurchaseSuccessful
		{
			[Token(Token = "0x6002354")]
			[Address(RVA = "0x16A8898", Offset = "0x16A8898", VA = "0x16A8898")]
			add
			{
			}
			[Token(Token = "0x6002355")]
			[Address(RVA = "0x16A8948", Offset = "0x16A8948", VA = "0x16A8948")]
			remove
			{
			}
		}

		[Token(Token = "0x6002347")]
		[Address(RVA = "0x16A7A74", Offset = "0x16A7A74", VA = "0x16A7A74")]
		private static string GetSubscriptionIdMonthly(IAPTarget iapTarget)
		{
			return null;
		}

		[Token(Token = "0x6002348")]
		[Address(RVA = "0x16A7B4C", Offset = "0x16A7B4C", VA = "0x16A7B4C")]
		private static string GetSubscriptionIdYearly(IAPTarget iapTarget)
		{
			return null;
		}

		[Token(Token = "0x6002349")]
		[Address(RVA = "0x16A7C24", Offset = "0x16A7C24", VA = "0x16A7C24")]
		private static string GetSubscriptionIdLifeTime(IAPTarget iapTarget)
		{
			return null;
		}

		[Token(Token = "0x600234A")]
		[Address(RVA = "0x16A7CFC", Offset = "0x16A7CFC", VA = "0x16A7CFC")]
		private static string[] GetSubscriptionFeatureIds(IAPTarget iapTarget)
		{
			return null;
		}

		[Token(Token = "0x600234B")]
		[Address(RVA = "0x16A7DE4", Offset = "0x16A7DE4", VA = "0x16A7DE4")]
		private System.Collections.Generic.IReadOnlyDictionary<string, Subscription> GetDebugSubscriptions(IAPTarget iapTarget)
		{
			return null;
		}

		[Token(Token = "0x600234C")]
		[Address(RVA = "0x16A82C4", Offset = "0x16A82C4", VA = "0x16A82C4")]
		private System.Collections.Generic.IReadOnlyDictionary<string, VE.IAP.Product> GetDebugProducts(IAPTarget iapTarget)
		{
			return null;
		}

		[Token(Token = "0x6002356")]
		[Address(RVA = "0x16A89FC", Offset = "0x16A89FC", VA = "0x16A89FC")]
		public void Initialize(ILicenseManager licenseManager)
		{
		}

		[Token(Token = "0x6002357")]
		[Address(RVA = "0x16A8B98", Offset = "0x16A8B98", VA = "0x16A8B98")]
		private void CreateOffers()
		{
		}

		[Token(Token = "0x6002358")]
		[Address(RVA = "0x16A9490", Offset = "0x16A9490", VA = "0x16A9490")]
		private void CenterOffers(IEnumerable<SubscriptionOfferView> offers)
		{
		}

		[Token(Token = "0x6002359")]
		[Address(RVA = "0x16A9A84", Offset = "0x16A9A84", VA = "0x16A9A84")]
		private void InapControllerOnPurchaseSuccessful(string obj)
		{
		}

		[Token(Token = "0x600235A")]
		[Address(RVA = "0x16A9AB0", Offset = "0x16A9AB0", VA = "0x16A9AB0")]
		public bool IsSubscribed()
		{
			return default(bool);
		}

		[Token(Token = "0x600235B")]
		[Address(RVA = "0x16A8FAC", Offset = "0x16A8FAC", VA = "0x16A8FAC")]
		private IEnumerable<SubscriptionOfferView> CreateFirstOffers()
		{
			return null;
		}

		[Token(Token = "0x600235C")]
		[Address(RVA = "0x16A9C18", Offset = "0x16A9C18", VA = "0x16A9C18")]
		private void SetupSubscriptionOffer(SubscriptionOfferView view, Subscription subscription)
		{
		}

		[Token(Token = "0x600235D")]
		[Address(RVA = "0x16AA0E4", Offset = "0x16AA0E4", VA = "0x16AA0E4")]
		private void SetupProductOffer(SubscriptionOfferView view, VE.IAP.Product product)
		{
		}

		[Token(Token = "0x600235E")]
		[Address(RVA = "0x16AA44C", Offset = "0x16AA44C", VA = "0x16AA44C")]
		private static string FormatPriceText(string priceString, int textSize, float multiplier)
		{
			return null;
		}

		[Token(Token = "0x600235F")]
		[Address(RVA = "0x16AA568", Offset = "0x16AA568", VA = "0x16AA568")]
		public void ResetView(bool val)
		{
		}

		[Token(Token = "0x6002360")]
		[Address(RVA = "0x16A8CAC", Offset = "0x16A8CAC", VA = "0x16A8CAC")]
		private void DestroyOffers()
		{
		}

		[Token(Token = "0x6002361")]
		[Address(RVA = "0x16AA5B8", Offset = "0x16AA5B8", VA = "0x16AA5B8")]
		public SubscriptionManager()
		{
		}
	}
	[Token(Token = "0x20006FD")]
	public static class SubscriptionManagerExtensions
	{
		[Token(Token = "0x6002368")]
		[Address(RVA = "0x16AA730", Offset = "0x16AA730", VA = "0x16AA730")]
		public static bool IsPurchased(this SubscriptionManager subscriptionManager, Database.SystemType system)
		{
			return default(bool);
		}

		[Token(Token = "0x6002369")]
		[Address(RVA = "0x16AA778", Offset = "0x16AA778", VA = "0x16AA778")]
		public static bool IsLoggedIn(this SubscriptionManager subscriptionManager)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20006FE")]
	public class TestSwipePanel : MonoBehaviour
	{
		[Token(Token = "0x4001FD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private RectTransform _panel;

		[Token(Token = "0x4001FD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool _horizontal;

		[Token(Token = "0x4001FD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[SerializeField]
		private bool _vertical;

		[Token(Token = "0x4001FD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float _finalPosition;

		[Token(Token = "0x4001FD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private RectTransform _finalAnchor;

		[Token(Token = "0x4001FD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MobileUiPresenter _uiPresenter;

		[Token(Token = "0x4001FD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Subject<bool> _isPanelOpened;

		[Token(Token = "0x4001FD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector2 _originalPosition;

		[Token(Token = "0x4001FD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool IsolateModeActive;

		[Token(Token = "0x1700057D")]
		public IObservable<bool> IsPanelOpenedObservable
		{
			[Token(Token = "0x600236A")]
			[Address(RVA = "0x16AA830", Offset = "0x16AA830", VA = "0x16AA830")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600236B")]
		[Address(RVA = "0x16AA838", Offset = "0x16AA838", VA = "0x16AA838")]
		private void Awake()
		{
		}

		[Token(Token = "0x600236C")]
		[Address(RVA = "0x16AA8B4", Offset = "0x16AA8B4", VA = "0x16AA8B4")]
		public void Init()
		{
		}

		[Token(Token = "0x600236D")]
		[Address(RVA = "0x16AA904", Offset = "0x16AA904", VA = "0x16AA904")]
		public void PanGestureExecuted(GestureRecognizer gesture)
		{
		}

		[Token(Token = "0x600236E")]
		[Address(RVA = "0x16AAC08", Offset = "0x16AAC08", VA = "0x16AAC08")]
		public TestSwipePanel()
		{
		}
	}
	[Token(Token = "0x20006FF")]
	public class ToggleSystem : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000700")]
		private class ToggleSystemUISettings
		{
			[Serializable]
			[Token(Token = "0x2000701")]
			public class SignIcon
			{
				[Token(Token = "0x4001FF8")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public RectTransform RectTransform;

				[Token(Token = "0x4001FF9")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				public Image BackgroundImage;

				[Token(Token = "0x4001FFA")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				public Image SignImage;

				[Token(Token = "0x6002388")]
				[Address(RVA = "0x16ADEB4", Offset = "0x16ADEB4", VA = "0x16ADEB4")]
				public SignIcon()
				{
				}
			}

			[Token(Token = "0x4001FF0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float AnimationTime;

			[Token(Token = "0x4001FF1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public HorizontalLayoutGroup HorizontalLayoutGroup;

			[Token(Token = "0x4001FF2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int defaultHorizontalSpacing;

			[Token(Token = "0x4001FF3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public Vector2 DefaultSizeDelta;

			[Token(Token = "0x4001FF4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public SignIcon PlusSign;

			[Token(Token = "0x4001FF5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public SignIcon MinusSign;

			[Token(Token = "0x4001FF6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public Color BackgroundImageColor;

			[Token(Token = "0x4001FF7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public Color SignImageColor;

			[Token(Token = "0x6002387")]
			[Address(RVA = "0x16ADE90", Offset = "0x16ADE90", VA = "0x16ADE90")]
			public ToggleSystemUISettings()
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000705")]
		[CompilerGenerated]
		private struct <OnDatabaseTypeChanged>d__37 : IAsyncStateMachine
		{
			[Token(Token = "0x4002006")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4002007")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4002008")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public DatabaseType databaseType;

			[Token(Token = "0x4002009")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public ToggleSystem <>4__this;

			[Token(Token = "0x400200A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x60023A3")]
			[Address(RVA = "0x16AEFD8", Offset = "0x16AEFD8", VA = "0x16AEFD8", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60023A4")]
			[Address(RVA = "0x16B007C", Offset = "0x16B007C", VA = "0x16B007C", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000706")]
		[CompilerGenerated]
		private struct <OnSystemSetActive>d__38 : IAsyncStateMachine
		{
			[Token(Token = "0x400200B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x400200C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x400200D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool value;

			[Token(Token = "0x400200E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public ToggleSystem <>4__this;

			[Token(Token = "0x400200F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x60023A5")]
			[Address(RVA = "0x16B0088", Offset = "0x16B0088", VA = "0x16B0088", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60023A6")]
			[Address(RVA = "0x16B0678", Offset = "0x16B0678", VA = "0x16B0678", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000707")]
		[CompilerGenerated]
		private struct <OnToggleValueChanged>d__41 : IAsyncStateMachine
		{
			[Token(Token = "0x4002010")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4002011")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4002012")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public ToggleSystem <>4__this;

			[Token(Token = "0x4002013")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public bool value;

			[Token(Token = "0x4002014")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x60023A7")]
			[Address(RVA = "0x16B0684", Offset = "0x16B0684", VA = "0x16B0684", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60023A8")]
			[Address(RVA = "0x16B0FD4", Offset = "0x16B0FD4", VA = "0x16B0FD4", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4001FDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Toggle _toggle;

		[Token(Token = "0x4001FDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Database.SystemType _system;

		[Token(Token = "0x4001FDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Button _levelPlus;

		[Token(Token = "0x4001FDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Button _levelMinus;

		[Token(Token = "0x4001FDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Image _ramik;

		[Token(Token = "0x4001FDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Image _icon;

		[Token(Token = "0x4001FE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Image _toggleBackground;

		[Token(Token = "0x4001FE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Material _toggleOnButton;

		[Token(Token = "0x4001FE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Material _toggleOffButton;

		[Token(Token = "0x4001FE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Sprite _overwriteImage;

		[Token(Token = "0x4001FE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Sprite _defaultLevelImage;

		[Token(Token = "0x4001FE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private ToggleSystemUISettings _ui;

		[Token(Token = "0x4001FE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private Toggle _mainSwitchToggle;

		[Token(Token = "0x4001FE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private SubscriptionManager _subscriptionManager;

		[Token(Token = "0x4001FE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private MobileUiPresenter _uiPresenter;

		[Token(Token = "0x4001FE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Sequence _animationSequence;

		[Token(Token = "0x4001FEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private readonly CompositeDisposable _disposable;

		[Token(Token = "0x4001FEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private INetworkModuleProviderFactory _moduleProviderFactory;

		[Token(Token = "0x4001FEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private IAnatomyDatabase _anatomyDatabase;

		[Token(Token = "0x4001FED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly SubpartType[] SubpartOrder;

		[Token(Token = "0x4001FEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly System.Collections.Generic.IReadOnlyDictionary<SubpartType, int> SubpartOrderMap;

		[Token(Token = "0x1700057E")]
		public Toggle Toggle
		{
			[Token(Token = "0x600236F")]
			[Address(RVA = "0x16AAC10", Offset = "0x16AAC10", VA = "0x16AAC10")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700057F")]
		public Button LevelPlus
		{
			[Token(Token = "0x6002370")]
			[Address(RVA = "0x16AAC18", Offset = "0x16AAC18", VA = "0x16AAC18")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000580")]
		public Button LevelMinus
		{
			[Token(Token = "0x6002371")]
			[Address(RVA = "0x16AAC20", Offset = "0x16AAC20", VA = "0x16AAC20")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000581")]
		public Database.SystemType SystemType
		{
			[Token(Token = "0x6002372")]
			[Address(RVA = "0x16AAC28", Offset = "0x16AAC28", VA = "0x16AAC28")]
			get
			{
				return default(Database.SystemType);
			}
		}

		[Token(Token = "0x17000582")]
		public bool IsChangingState
		{
			[Token(Token = "0x6002373")]
			[Address(RVA = "0x16AAC30", Offset = "0x16AAC30", VA = "0x16AAC30")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002374")]
			[Address(RVA = "0x16AAC38", Offset = "0x16AAC38", VA = "0x16AAC38")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6002375")]
		[Address(RVA = "0x16AAC44", Offset = "0x16AAC44", VA = "0x16AAC44")]
		private void SetVisual()
		{
		}

		[Token(Token = "0x6002376")]
		[Address(RVA = "0x16AADE4", Offset = "0x16AADE4", VA = "0x16AADE4")]
		public void InitRx(INetworkModuleProviderFactory moduleProviderFactory)
		{
		}

		[Token(Token = "0x6002377")]
		[Address(RVA = "0x16AC6D0", Offset = "0x16AC6D0", VA = "0x16AC6D0")]
		private void OnPurchaseControllerInitialized()
		{
		}

		[Token(Token = "0x6002378")]
		[Address(RVA = "0x16AC6D4", Offset = "0x16AC6D4", VA = "0x16AC6D4")]
		private void InapControllerOnPurchaseSuccessful(string productId)
		{
		}

		[Token(Token = "0x6002379")]
		[Address(RVA = "0x16AC704", Offset = "0x16AC704", VA = "0x16AC704")]
		[AsyncStateMachine(typeof(<OnDatabaseTypeChanged>d__37))]
		private void OnDatabaseTypeChanged(DatabaseType databaseType)
		{
		}

		[Token(Token = "0x600237A")]
		[Address(RVA = "0x16AC608", Offset = "0x16AC608", VA = "0x16AC608")]
		[AsyncStateMachine(typeof(<OnSystemSetActive>d__38))]
		private void OnSystemSetActive(bool value)
		{
		}

		[Token(Token = "0x600237B")]
		[Address(RVA = "0x16AC7C4", Offset = "0x16AC7C4", VA = "0x16AC7C4")]
		private void SetLevelButtonsInteractable(int currentStructureLevel, int minStructureLevel, int maxStructureLevel)
		{
		}

		[Token(Token = "0x600237C")]
		[Address(RVA = "0x16AC814", Offset = "0x16AC814", VA = "0x16AC814")]
		private void OnToggleIsOnChanged(bool value)
		{
		}

		[Token(Token = "0x600237D")]
		[Address(RVA = "0x16ACA78", Offset = "0x16ACA78", VA = "0x16ACA78")]
		[AsyncStateMachine(typeof(<OnToggleValueChanged>d__41))]
		private void OnToggleValueChanged(bool value)
		{
		}

		[Token(Token = "0x600237E")]
		[Address(RVA = "0x16AC700", Offset = "0x16AC700", VA = "0x16AC700")]
		private void OnPurchaseSuccessful()
		{
		}

		[Token(Token = "0x600237F")]
		[Address(RVA = "0x16ACB34", Offset = "0x16ACB34", VA = "0x16ACB34")]
		private void OnLevelPlusClickedUpdateStructureLevel()
		{
		}

		[Token(Token = "0x6002380")]
		[Address(RVA = "0x16ACEAC", Offset = "0x16ACEAC", VA = "0x16ACEAC")]
		private void OnLevelMinusClickedUpdateStructureLevel()
		{
		}

		[Token(Token = "0x6002381")]
		[Address(RVA = "0x16AD3DC", Offset = "0x16AD3DC", VA = "0x16AD3DC")]
		private Sequence AnimateSystemSelection(ToggleSystemUISettings.SignIcon icon, bool value, float duration)
		{
			return null;
		}

		[Token(Token = "0x6002382")]
		[Address(RVA = "0x16AD914", Offset = "0x16AD914", VA = "0x16AD914")]
		private void ShowSystemSelection(ToggleSystemUISettings.SignIcon icon, bool value)
		{
		}

		[Token(Token = "0x6002383")]
		[Address(RVA = "0x16ADB50", Offset = "0x16ADB50", VA = "0x16ADB50")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6002384")]
		[Address(RVA = "0x16ADB64", Offset = "0x16ADB64", VA = "0x16ADB64")]
		public ToggleSystem()
		{
		}
	}
}
namespace Mobile.UI.IAP
{
	[Token(Token = "0x2000709")]
	public class PurchaseModalView : IPurchaseModalView
	{
		[Token(Token = "0x14000085")]
		public event Action<string> Confirmed
		{
			[Token(Token = "0x60023AF")]
			[Address(RVA = "0x16B10C4", Offset = "0x16B10C4", VA = "0x16B10C4", Slot = "4")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60023B0")]
			[Address(RVA = "0x16B1174", Offset = "0x16B1174", VA = "0x16B1174", Slot = "5")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000086")]
		public event Action<string> Declined
		{
			[Token(Token = "0x60023B1")]
			[Address(RVA = "0x16B1224", Offset = "0x16B1224", VA = "0x16B1224", Slot = "6")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60023B2")]
			[Address(RVA = "0x16B12D4", Offset = "0x16B12D4", VA = "0x16B12D4", Slot = "7")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x60023B3")]
		[Address(RVA = "0x16B1384", Offset = "0x16B1384", VA = "0x16B1384", Slot = "8")]
		public void DisplayPurchaseModal(VE.IAP.Product product)
		{
		}

		[Token(Token = "0x60023B4")]
		[Address(RVA = "0x16B13B8", Offset = "0x16B13B8", VA = "0x16B13B8", Slot = "9")]
		public void DisplayPurchaseModal(Subscription subscription)
		{
		}

		[Token(Token = "0x60023B5")]
		[Address(RVA = "0x16B13EC", Offset = "0x16B13EC", VA = "0x16B13EC", Slot = "10")]
		public void ClosePurchaseModal()
		{
		}

		[Token(Token = "0x60023B6")]
		[Address(RVA = "0x16B140C", Offset = "0x16B140C", VA = "0x16B140C")]
		public PurchaseModalView()
		{
		}
	}
}
namespace Mobile.Presenters
{
	[Token(Token = "0x200070A")]
	public enum UiMode
	{
		[Token(Token = "0x400201A")]
		Phone,
		[Token(Token = "0x400201B")]
		Tablet
	}
	[Serializable]
	[Token(Token = "0x200070B")]
	public class UiSettings
	{
		[Token(Token = "0x400201C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private Image _bgImage;

		[Token(Token = "0x17000583")]
		public Image BgImage
		{
			[Token(Token = "0x60023B7")]
			[Address(RVA = "0x16B1414", Offset = "0x16B1414", VA = "0x16B1414")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60023B8")]
		[Address(RVA = "0x16B141C", Offset = "0x16B141C", VA = "0x16B141C")]
		public UiSettings()
		{
		}
	}
	[Token(Token = "0x200070C")]
	public class MobileUiPresenter : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200070D")]
		public class MultiSystems
		{
			[Token(Token = "0x40020A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			private List<ToggleSystem> _toggleSystems;

			[Token(Token = "0x1700058A")]
			public IReadOnlyList<ToggleSystem> ToggleSystems
			{
				[Token(Token = "0x60023F7")]
				[Address(RVA = "0x16BE5BC", Offset = "0x16BE5BC", VA = "0x16BE5BC")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60023F8")]
			[Address(RVA = "0x16BE5C4", Offset = "0x16BE5C4", VA = "0x16BE5C4")]
			public MultiSystems()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200070E")]
		public class ArUiElements
		{
			[Token(Token = "0x40020A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			private UiButtonToggle _ARToggle;

			[Token(Token = "0x40020A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[SerializeField]
			private UiButtonToggle _orientationToggle;

			[Token(Token = "0x40020AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[SerializeField]
			private UiButtonToggle _ARPlaceButton;

			[Token(Token = "0x40020AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[SerializeField]
			private Slider _ARScaleSlider;

			[Token(Token = "0x40020AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[SerializeField]
			private UiAnimationHandler _sliderAnimationHandler;

			[Token(Token = "0x40020AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[SerializeField]
			private GameObject _arCompatibilityPopup;

			[Token(Token = "0x40020AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			[SerializeField]
			private GameObject _scanPopUpGameObject;

			[Token(Token = "0x40020AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			[SerializeField]
			private GameObject _placePopUpGameObject;

			[Token(Token = "0x40020B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[SerializeField]
			private GameObject _arCompatibilityCheck;

			[Token(Token = "0x1700058B")]
			public UiButtonToggle ARToggle
			{
				[Token(Token = "0x60023F9")]
				[Address(RVA = "0x16BE5CC", Offset = "0x16BE5CC", VA = "0x16BE5CC")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700058C")]
			public UiButtonToggle OrientationToggle
			{
				[Token(Token = "0x60023FA")]
				[Address(RVA = "0x16BE5D4", Offset = "0x16BE5D4", VA = "0x16BE5D4")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700058D")]
			public UiButtonToggle ARPlaceButton
			{
				[Token(Token = "0x60023FB")]
				[Address(RVA = "0x16BE5DC", Offset = "0x16BE5DC", VA = "0x16BE5DC")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700058E")]
			public Slider ARScaleSlider
			{
				[Token(Token = "0x60023FC")]
				[Address(RVA = "0x16BE5E4", Offset = "0x16BE5E4", VA = "0x16BE5E4")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700058F")]
			public GameObject ARCompatibilityCheck
			{
				[Token(Token = "0x60023FD")]
				[Address(RVA = "0x16BE5EC", Offset = "0x16BE5EC", VA = "0x16BE5EC")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60023FE")]
			[Address(RVA = "0x16BCF48", Offset = "0x16BCF48", VA = "0x16BCF48")]
			public void SetPopupVisibility(bool val)
			{
			}

			[Token(Token = "0x60023FF")]
			[Address(RVA = "0x16BE0BC", Offset = "0x16BE0BC", VA = "0x16BE0BC")]
			public void ShowCompatibilityPopup(CompositeDisposable disposable)
			{
			}

			[Token(Token = "0x6002400")]
			[Address(RVA = "0x16BE288", Offset = "0x16BE288", VA = "0x16BE288")]
			public void ChangePopUps(ARSwitcher.ARState state)
			{
			}

			[Token(Token = "0x6002401")]
			[Address(RVA = "0x16BE3B8", Offset = "0x16BE3B8", VA = "0x16BE3B8")]
			public void ChangeArUiBasedOnState(ARSwitcher.ARState state)
			{
			}

			[Token(Token = "0x6002402")]
			[Address(RVA = "0x16BE5F4", Offset = "0x16BE5F4", VA = "0x16BE5F4")]
			public ArUiElements()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200070F")]
		public class ARSwitchableUIObjects
		{
			[Token(Token = "0x40020B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			private AppMode _mode;

			[Token(Token = "0x40020B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[SerializeField]
			private List<GameObject> _gameObjects;

			[Token(Token = "0x6002404")]
			[Address(RVA = "0x16B97D8", Offset = "0x16B97D8", VA = "0x16B97D8")]
			public void SetState(AppMode mode)
			{
			}

			[Token(Token = "0x6002405")]
			[Address(RVA = "0x16BE648", Offset = "0x16BE648", VA = "0x16BE648")]
			public void SetActive(bool val)
			{
			}

			[Token(Token = "0x6002406")]
			[Address(RVA = "0x16BE730", Offset = "0x16BE730", VA = "0x16BE730")]
			public ARSwitchableUIObjects()
			{
			}
		}

		[Token(Token = "0x2000715")]
		[CompilerGenerated]
		private sealed class <GetActionUiElementsForAnalytics>d__154 : IEnumerable<(string, Selectable)>, IEnumerable, IEnumerator<(string, Selectable)>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40020BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40020BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private (string id, Selectable uiElement) <>2__current;

			[Token(Token = "0x40020BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <>l__initialThreadId;

			[Token(Token = "0x40020BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public MobileUiPresenter <>4__this;

			[Token(Token = "0x17000590")]
			private (string, Selectable) System.Collections.Generic.IEnumerator<(System.Stringid,UnityEngine.UI.SelectableuiElement)>.Current
			{
				[Token(Token = "0x6002415")]
				[Address(RVA = "0x16BF8EC", Offset = "0x16BF8EC", VA = "0x16BF8EC", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return default((string, Selectable));
				}
			}

			[Token(Token = "0x17000591")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002417")]
				[Address(RVA = "0x16BF938", Offset = "0x16BF938", VA = "0x16BF938", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002412")]
			[Address(RVA = "0x16B9744", Offset = "0x16B9744", VA = "0x16B9744")]
			[DebuggerHidden]
			public <GetActionUiElementsForAnalytics>d__154(int <>1__state)
			{
			}

			[Token(Token = "0x6002413")]
			[Address(RVA = "0x16BF060", Offset = "0x16BF060", VA = "0x16BF060", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002414")]
			[Address(RVA = "0x16BF064", Offset = "0x16BF064", VA = "0x16BF064", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002416")]
			[Address(RVA = "0x16BF8F8", Offset = "0x16BF8F8", VA = "0x16BF8F8", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6002418")]
			[Address(RVA = "0x16BF994", Offset = "0x16BF994", VA = "0x16BF994", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<(string, Selectable)> System.Collections.Generic.IEnumerable<(System.Stringid,UnityEngine.UI.SelectableuiElement)>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6002419")]
			[Address(RVA = "0x16BFA40", Offset = "0x16BFA40", VA = "0x16BFA40", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000717")]
		[CompilerGenerated]
		private struct <NetworkedStateChanged>d__159 : IAsyncStateMachine
		{
			[Token(Token = "0x40020E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40020E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x40020EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public MobileUiPresenter <>4__this;

			[Token(Token = "0x40020EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public AnatomyNetworkManager.State state;

			[Token(Token = "0x40020EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private IModelLoaderModule<IMobileAnatomyModel> <modelLoadingModule>5__2;

			[Token(Token = "0x40020ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x6002443")]
			[Address(RVA = "0x16C07D0", Offset = "0x16C07D0", VA = "0x16C07D0", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6002444")]
			[Address(RVA = "0x16C1164", Offset = "0x16C1164", VA = "0x16C1164", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000722")]
		[CompilerGenerated]
		private struct <SetLanguage>d__161 : IAsyncStateMachine
		{
			[Token(Token = "0x4002110")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4002111")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4002112")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public LocalizationLanguage value;

			[Token(Token = "0x4002113")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x6002492")]
			[Address(RVA = "0x16DDC50", Offset = "0x16DDC50", VA = "0x16DDC50", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6002493")]
			[Address(RVA = "0x16DDEDC", Offset = "0x16DDEDC", VA = "0x16DDEDC", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000723")]
		[CompilerGenerated]
		private struct <StartAutoLoginLoop>d__173 : IAsyncStateMachine
		{
			[Token(Token = "0x4002114")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4002115")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4002116")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public MobileUiPresenter <>4__this;

			[Token(Token = "0x4002117")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public ILicenseManager licenseManager;

			[Token(Token = "0x4002118")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public int interval;

			[Token(Token = "0x4002119")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public int maxAttempts;

			[Token(Token = "0x400211A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private CancellationToken <cancellationToken>5__2;

			[Token(Token = "0x400211B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x6002494")]
			[Address(RVA = "0x16DDEE8", Offset = "0x16DDEE8", VA = "0x16DDEE8", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6002495")]
			[Address(RVA = "0x16DE264", Offset = "0x16DE264", VA = "0x16DE264", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000724")]
		[CompilerGenerated]
		private struct <LoginViewOnLoginClicked>d__175 : IAsyncStateMachine
		{
			[Token(Token = "0x400211C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x400211D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x400211E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public MobileUiPresenter <>4__this;

			[Token(Token = "0x400211F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private LicenseData <licenseData>5__2;

			[Token(Token = "0x4002120")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private TaskAwaiter<LicenseData> <>u__1;

			[Token(Token = "0x6002496")]
			[Address(RVA = "0x16DE270", Offset = "0x16DE270", VA = "0x16DE270", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6002497")]
			[Address(RVA = "0x16DE804", Offset = "0x16DE804", VA = "0x16DE804", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x400201D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[Header("Buttons")]
		private Button _reset;

		[Token(Token = "0x400201E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Button _openSearch;

		[Token(Token = "0x400201F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Button _openCredits;

		[Token(Token = "0x4002020")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Button _closeCredits;

		[Token(Token = "0x4002021")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private LongClickButton _undoAll;

		[Token(Token = "0x4002022")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Button _ttsStop;

		[Token(Token = "0x4002023")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Button _closeControlls;

		[Token(Token = "0x4002024")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Button _subscribeButton;

		[Token(Token = "0x4002025")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Button _enterpriseLoginButton;

		[Token(Token = "0x4002026")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Button _restoreButton;

		[Token(Token = "0x4002027")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Button _disconnect;

		[Token(Token = "0x4002028")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Button _logoutHub;

		[Token(Token = "0x4002029")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private Button _backButton;

		[Token(Token = "0x400202A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private Button _openCreateRoomButton;

		[Token(Token = "0x400202B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private Button _openJoinRoomButton;

		[Token(Token = "0x400202C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private Button _connectedUsersButton;

		[Token(Token = "0x400202D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private Button _closeAnimationPanel;

		[Token(Token = "0x400202E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private Button _openAnimationPanel;

		[Token(Token = "0x400202F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		[Header("Toggle")]
		private Toggle _hide;

		[Token(Token = "0x4002030")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private Toggle _fade;

		[Token(Token = "0x4002031")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private Toggle _ttsToggle;

		[Token(Token = "0x4002032")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private Toggle _centerToggle;

		[Token(Token = "0x4002033")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private Toggle _systemToggle;

		[Token(Token = "0x4002034")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private Toggle _infoMonitorToggle;

		[Token(Token = "0x4002035")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private Toggle _settingsToggle;

		[Token(Token = "0x4002036")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private Toggle _isolateToggle;

		[Token(Token = "0x4002037")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		private Toggle _fadeOthersToggle;

		[Token(Token = "0x4002038")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		private Toggle _doubleClickToggle;

		[Token(Token = "0x4002039")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		private Toggle _backgroundToggle;

		[Token(Token = "0x400203A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		private Toggle _skToggle;

		[Token(Token = "0x400203B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[SerializeField]
		private Toggle _czToggle;

		[Token(Token = "0x400203C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[SerializeField]
		private Toggle _enToggle;

		[Token(Token = "0x400203D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[SerializeField]
		private Toggle _deToggle;

		[Token(Token = "0x400203E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[SerializeField]
		private Toggle _esToggle;

		[Token(Token = "0x400203F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[SerializeField]
		private Toggle _maleToggle;

		[Token(Token = "0x4002040")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[SerializeField]
		private Toggle _femaleToggle;

		[Token(Token = "0x4002041")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[SerializeField]
		private Toggle _microanatomyToggle;

		[Token(Token = "0x4002042")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[SerializeField]
		private Toggle _animationToggle;

		[Token(Token = "0x4002043")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[SerializeField]
		private Toggle _muteSelfToggle;

		[Token(Token = "0x4002044")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[SerializeField]
		[Header("Other")]
		private ToggleSystem _specialBonecSystemToggle;

		[Token(Token = "0x4002045")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		[SerializeField]
		private Text _labelTextPrimary;

		[Token(Token = "0x4002046")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		[SerializeField]
		private Text _labelTextSecondary;

		[Token(Token = "0x4002047")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		[SerializeField]
		private TextMeshProUGUI _detailText;

		[Token(Token = "0x4002048")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		[SerializeField]
		private InfomonitorToggleController _infomonitorToggleController;

		[Token(Token = "0x4002049")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		[SerializeField]
		private RectTransform _functionHorizontalLayout;

		[Token(Token = "0x400204A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		[SerializeField]
		private RectTransform _systemsPanel;

		[Token(Token = "0x400204B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		[SerializeField]
		private RectTransform _infoMonitor;

		[Token(Token = "0x400204C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		[SerializeField]
		private RectTransform _controlsPanel;

		[Token(Token = "0x400204D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		[SerializeField]
		private Image _controlPanelBackground;

		[Token(Token = "0x400204E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		[SerializeField]
		private GameObject _infoText;

		[Token(Token = "0x400204F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		[SerializeField]
		private GameObject _bgImage;

		[Token(Token = "0x4002050")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		[SerializeField]
		private GameObject _loadingScreen;

		[Token(Token = "0x4002051")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		[SerializeField]
		private RectTransform _bottomPanel;

		[Token(Token = "0x4002052")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		[SerializeField]
		private RectTransform _rightPanel;

		[Token(Token = "0x4002053")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		[SerializeField]
		private RectTransform _upPanel;

		[Token(Token = "0x4002054")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		[SerializeField]
		private RectTransform _downPanel;

		[Token(Token = "0x4002055")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		[SerializeField]
		private RectTransform _creditsPanel;

		[Token(Token = "0x4002056")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		[SerializeField]
		private RectTransform _searchPanel;

		[Token(Token = "0x4002057")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		[SerializeField]
		private RectTransform _infoPanelMask;

		[Token(Token = "0x4002058")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		[SerializeField]
		private RectTransform _networkingMenu;

		[Token(Token = "0x4002059")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		[SerializeField]
		private Search _search;

		[Token(Token = "0x400205A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		[SerializeField]
		private Scrollbar _infoMonitorScrollBar;

		[Token(Token = "0x400205B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		[SerializeField]
		private Image _scrollBarHandle;

		[Token(Token = "0x400205C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		[SerializeField]
		private Image _labelImage;

		[Token(Token = "0x400205D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		[SerializeField]
		private Image _settingsBgImage;

		[Token(Token = "0x400205E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		[SerializeField]
		private SubscriptionManager _subscriptionManager;

		[Token(Token = "0x400205F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		[SerializeField]
		private _2D.UI.LoginView _loginView;

		[Token(Token = "0x4002060")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		[SerializeField]
		private RectTransform _loginPanel;

		[Token(Token = "0x4002061")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
		[SerializeField]
		private GameObject _controlPanel;

		[Token(Token = "0x4002062")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
		[SerializeField]
		private GameObject _bottomMenuVisible;

		[Token(Token = "0x4002063")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
		[SerializeField]
		private GameObject _systemTogglePLaceHolder;

		[Token(Token = "0x4002064")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
		[SerializeField]
		private GameObject _upPanelLeft;

		[Token(Token = "0x4002065")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
		[SerializeField]
		private GameObject _upPanelRight;

		[Token(Token = "0x4002066")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
		[SerializeField]
		private RectTransform _languagesPanel;

		[Token(Token = "0x4002067")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
		[SerializeField]
		private TestSwipePanel _swipePanel;

		[Token(Token = "0x4002068")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
		[SerializeField]
		private GameObject _loginUi;

		[Token(Token = "0x4002069")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
		[SerializeField]
		private GameObject _createRoom;

		[Token(Token = "0x400206A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
		[SerializeField]
		private GameObject _joinRoom;

		[Token(Token = "0x400206B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
		[SerializeField]
		private GameObject _footerPanelRight;

		[Token(Token = "0x400206C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
		[SerializeField]
		private GameObject _settingsRightCollum;

		[Token(Token = "0x400206D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
		[SerializeField]
		private GameObject _animationSlider;

		[Token(Token = "0x400206E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
		[SerializeField]
		private ObserverMatchmakerView _matchmakingUi;

		[Token(Token = "0x400206F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
		[SerializeField]
		private ConnectedUsersPanel _connectedUsersPanel;

		[Token(Token = "0x4002070")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
		[SerializeField]
		private AnimationUiPresenter _animationUiPresenter;

		[Token(Token = "0x4002071")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
		[SerializeField]
		private MobileMultiplayerUi _observerLoginUi;

		[Token(Token = "0x4002072")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
		[SerializeField]
		private RuntimeBuildInfo _runtimeBuildInfo;

		[Token(Token = "0x4002073")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
		[SerializeField]
		private AnatomyLocalizationSettings _anatomyLocalizationSettings;

		[Token(Token = "0x4002074")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
		[Header("Multisystems")]
		public MultiSystems Multisystems;

		[Token(Token = "0x4002075")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
		[SerializeField]
		[Header("UI Animation anchors")]
		private RectTransform _infoMonitorOffAnchor;

		[Token(Token = "0x4002076")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
		[SerializeField]
		private RectTransform _infoMonitorMidAnchor;

		[Token(Token = "0x4002077")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
		[SerializeField]
		private RectTransform _infoMonitorOnAnchor;

		[Token(Token = "0x4002078")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F0")]
		[SerializeField]
		private RectTransform _controlsOnAnchor;

		[Token(Token = "0x4002079")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F8")]
		[SerializeField]
		private RectTransform _controlsOffAnchor;

		[Token(Token = "0x400207A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Vector3 _systemPanelOnPos;

		[Token(Token = "0x400207B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private static readonly Vector3 _systemPanelOffPos;

		[Token(Token = "0x400207C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x300")]
		private Vector3 _bottomPanelOnPos;

		[Token(Token = "0x400207D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static readonly Vector3 _bottomPanelOffPos;

		[Token(Token = "0x400207E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private static readonly Vector3 _creditsPanelOnPos;

		[Token(Token = "0x400207F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static readonly Vector3 _creditsPanelOffPos;

		[Token(Token = "0x4002080")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private static readonly Vector2 _infoPanelOffPos;

		[Token(Token = "0x4002081")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private static readonly Vector2 _infoPanelMidPos;

		[Token(Token = "0x4002082")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private static readonly Vector2 _infoPanelOnPos;

		[Token(Token = "0x4002083")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private static readonly Vector2 _searchPanelOnPos;

		[Token(Token = "0x4002084")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private static readonly Vector2 _searchPanelOffPos;

		[Token(Token = "0x4002085")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private static readonly Vector2 _controlsPanelOnPos;

		[Token(Token = "0x4002086")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private static readonly Vector2 _controlsPanelOffPos;

		[Token(Token = "0x4002087")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private static readonly Vector2 _headerPanelOffPos;

		[Token(Token = "0x4002088")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private static readonly Vector2 _headerPanelOnPos;

		[Token(Token = "0x4002089")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private static readonly Vector2 _subscriptionPanelOnPos;

		[Token(Token = "0x400208A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private static readonly Vector2 _subscriptionPanelOffPos;

		[Token(Token = "0x400208B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private static readonly IServerInfo[] EmptyResult;

		[Token(Token = "0x400208C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x310")]
		[Header("AR UI Elements references")]
		[SerializeField]
		private ArUiElements _arUiElements;

		[Token(Token = "0x400208D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x318")]
		[SerializeField]
		private ARSwitchableUIObjects _normalModeObjects;

		[Token(Token = "0x400208E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x320")]
		[SerializeField]
		private ARSwitchableUIObjects _arModeObjects;

		[Token(Token = "0x400208F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x328")]
		private Vector3 _cameraStartPosition;

		[Token(Token = "0x4002090")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x338")]
		private readonly List<Selectable> _systemControls;

		[Token(Token = "0x4002092")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x344")]
		private bool SearchEnabled;

		[Token(Token = "0x4002093")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x348")]
		private CompositeDisposable _presenterDisposable;

		[Token(Token = "0x4002094")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x350")]
		private CompositeDisposable _uiDisposable;

		[Token(Token = "0x4002095")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x358")]
		private readonly CompositeDisposable _disposable;

		[Token(Token = "0x4002096")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x360")]
		private IFunctionStack _functionStack;

		[Token(Token = "0x4002097")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x368")]
		private INetworkModuleProviderFactory _moduleProviderFactory;

		[Token(Token = "0x4002098")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x370")]
		private ICameraSetup _cameraSetup;

		[Token(Token = "0x4002099")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x378")]
		private TextToSpeech _textToSpeech;

		[Token(Token = "0x400209A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x380")]
		private ILicenseManager _licenseManager;

		[Token(Token = "0x400209B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x388")]
		private CancellationTokenSource _loginLoopCancellationTokenSource;

		[Token(Token = "0x400209C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x390")]
		private CancellationTokenSource _loginCancellationTokenSource;

		[Token(Token = "0x400209D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x398")]
		private CancellationTokenSource _matchmakerCancellationTokenSource;

		[Token(Token = "0x400209E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A0")]
		private List<ServerInfoFilter> _filters;

		[Token(Token = "0x40020A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3B0")]
		public IReactiveProperty<Mobile.Views.IPresentable> PresentedItem;

		[Token(Token = "0x40020A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C0")]
		private IDisposable _modelLoadingDisposable;

		[Token(Token = "0x40020A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C8")]
		private CompositeDisposable _networkingDisposable;

		[Token(Token = "0x40020A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D0")]
		private bool systemState;

		[Token(Token = "0x40020A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D1")]
		private bool setingsState;

		[Token(Token = "0x40020A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D2")]
		private bool _wasInInAp;

		[Token(Token = "0x17000584")]
		private static Mirror.NetworkManager NetworkManager
		{
			[Token(Token = "0x60023B9")]
			[Address(RVA = "0x16B1424", Offset = "0x16B1424", VA = "0x16B1424")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000585")]
		private static bool HasAuthority
		{
			[Token(Token = "0x60023BA")]
			[Address(RVA = "0x16B14AC", Offset = "0x16B14AC", VA = "0x16B14AC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000586")]
		public UiMode UiMode
		{
			[Token(Token = "0x60023BB")]
			[Address(RVA = "0x16B1594", Offset = "0x16B1594", VA = "0x16B1594")]
			[CompilerGenerated]
			get
			{
				return default(UiMode);
			}
			[Token(Token = "0x60023BC")]
			[Address(RVA = "0x16B159C", Offset = "0x16B159C", VA = "0x16B159C")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000587")]
		public ArUiElements ARElements
		{
			[Token(Token = "0x60023BD")]
			[Address(RVA = "0x16B15A4", Offset = "0x16B15A4", VA = "0x16B15A4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000588")]
		public UiSettings UiSettings
		{
			[Token(Token = "0x60023BE")]
			[Address(RVA = "0x16B15AC", Offset = "0x16B15AC", VA = "0x16B15AC")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60023BF")]
			[Address(RVA = "0x16B15B4", Offset = "0x16B15B4", VA = "0x16B15B4")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000589")]
		public IInputHandlerSettings InputHandlerSettings
		{
			[Token(Token = "0x60023C0")]
			[Address(RVA = "0x16B15C4", Offset = "0x16B15C4", VA = "0x16B15C4")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60023C1")]
			[Address(RVA = "0x16B15CC", Offset = "0x16B15CC", VA = "0x16B15CC")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x60023C2")]
		[Address(RVA = "0x16B15DC", Offset = "0x16B15DC", VA = "0x16B15DC")]
		private void Awake()
		{
		}

		[Token(Token = "0x60023C3")]
		[Address(RVA = "0x16B171C", Offset = "0x16B171C", VA = "0x16B171C")]
		public void Init(INetworkModuleProviderFactory networkModuleProviderFactory, ICameraSetup cameraSetup, UiMode uiMode, ARSwitcher arManager, ILicenseManager licenseManager, UiSettings uiSettings, IInputHandlerSettings inputHandlerSettings, IFunctionStack functionStack)
		{
		}

		[Token(Token = "0x60023C4")]
		[Address(RVA = "0x16B9278", Offset = "0x16B9278", VA = "0x16B9278")]
		private CompositeDisposable InitCustomAnalytics()
		{
			return null;
		}

		[Token(Token = "0x60023C5")]
		[Address(RVA = "0x16B8598", Offset = "0x16B8598", VA = "0x16B8598")]
		private CompositeDisposable InitAnalytics(IEnumerable<(string id, Selectable uiElement)> uiElements, string userActionElementCategory)
		{
			return null;
		}

		[Token(Token = "0x60023C6")]
		[Address(RVA = "0x16B8B60", Offset = "0x16B8B60", VA = "0x16B8B60")]
		private CompositeDisposable InitAnalytics(IEnumerable<ToggleSystem> systemToggles, INetworkModuleProviderFactory moduleProviderFactory)
		{
			return null;
		}

		[Token(Token = "0x60023C7")]
		[Address(RVA = "0x16B8514", Offset = "0x16B8514", VA = "0x16B8514")]
		[IteratorStateMachine(typeof(<GetActionUiElementsForAnalytics>d__154))]
		private IEnumerable<(string, Selectable)> GetActionUiElementsForAnalytics()
		{
			return null;
		}

		[Token(Token = "0x60023C8")]
		[Address(RVA = "0x16B9778", Offset = "0x16B9778", VA = "0x16B9778")]
		private void SwitchUIMode(AppMode mode)
		{
		}

		[Token(Token = "0x60023C9")]
		[Address(RVA = "0x16B97E8", Offset = "0x16B97E8", VA = "0x16B97E8")]
		public void ShowResetButton(bool val)
		{
		}

		[Token(Token = "0x60023CA")]
		[Address(RVA = "0x16B9818", Offset = "0x16B9818", VA = "0x16B9818")]
		public bool IsOnIsolate()
		{
			return default(bool);
		}

		[Token(Token = "0x60023CB")]
		[Address(RVA = "0x16B9834", Offset = "0x16B9834", VA = "0x16B9834")]
		[AsyncStateMachine(typeof(<NetworkedStateChanged>d__159))]
		private void NetworkedStateChanged(AnatomyNetworkManager.State state)
		{
		}

		[Token(Token = "0x60023CC")]
		[Address(RVA = "0x16B2288", Offset = "0x16B2288", VA = "0x16B2288")]
		private void InitUiRx()
		{
		}

		[Token(Token = "0x60023CD")]
		[Address(RVA = "0x16B9F10", Offset = "0x16B9F10", VA = "0x16B9F10")]
		[AsyncStateMachine(typeof(<SetLanguage>d__161))]
		private static void SetLanguage(LocalizationLanguage value)
		{
		}

		[Token(Token = "0x60023CE")]
		[Address(RVA = "0x16B9FB4", Offset = "0x16B9FB4", VA = "0x16B9FB4")]
		private void OnNetworkingActive(bool value)
		{
		}

		[Token(Token = "0x60023CF")]
		[Address(RVA = "0x16B9418", Offset = "0x16B9418", VA = "0x16B9418")]
		private void LogSessionStarted()
		{
		}

		[Token(Token = "0x60023D0")]
		[Address(RVA = "0x16BA55C", Offset = "0x16BA55C", VA = "0x16BA55C")]
		private void SetStudentLayout(bool state)
		{
		}

		[Token(Token = "0x60023D1")]
		[Address(RVA = "0x16BA77C", Offset = "0x16BA77C", VA = "0x16BA77C")]
		private void OnSelectionChanged(IMobileAnatomyItemInstance item)
		{
		}

		[Token(Token = "0x60023D2")]
		[Address(RVA = "0x16BB3F0", Offset = "0x16BB3F0", VA = "0x16BB3F0")]
		private void OnSelectionChanged(ISubpartInstance subpartInstance)
		{
		}

		[Token(Token = "0x60023D3")]
		[Address(RVA = "0x16BB8E0", Offset = "0x16BB8E0", VA = "0x16BB8E0")]
		private void OnActiveAnimationChanged(AnimationItemInstance value)
		{
		}

		[Token(Token = "0x60023D4")]
		[Address(RVA = "0x16BAA3C", Offset = "0x16BAA3C", VA = "0x16BAA3C")]
		private void UpdateToggles(IMobileAnatomyItemInstance item)
		{
		}

		[Token(Token = "0x60023D5")]
		[Address(RVA = "0x16BBA70", Offset = "0x16BBA70", VA = "0x16BBA70")]
		private void RestorePurchases()
		{
		}

		[Token(Token = "0x60023D6")]
		[Address(RVA = "0x16BBB74", Offset = "0x16BBB74", VA = "0x16BBB74")]
		private static void OnRestorePurchasesResult(bool result)
		{
		}

		[Token(Token = "0x60023D7")]
		[Address(RVA = "0x16BBBF8", Offset = "0x16BBBF8", VA = "0x16BBBF8")]
		private void ToggleInfoMonitor(bool state)
		{
		}

		[Token(Token = "0x60023D8")]
		[Address(RVA = "0x16B9E24", Offset = "0x16B9E24", VA = "0x16B9E24")]
		[AsyncStateMachine(typeof(<StartAutoLoginLoop>d__173))]
		private void StartAutoLoginLoop(ILicenseManager licenseManager, int interval, int maxAttempts)
		{
		}

		[Token(Token = "0x60023D9")]
		[Address(RVA = "0x16B9CD4", Offset = "0x16B9CD4", VA = "0x16B9CD4")]
		private void AddLoginListeners()
		{
		}

		[Token(Token = "0x60023DA")]
		[Address(RVA = "0x16BC268", Offset = "0x16BC268", VA = "0x16BC268")]
		[AsyncStateMachine(typeof(<LoginViewOnLoginClicked>d__175))]
		private void LoginViewOnLoginClicked()
		{
		}

		[Token(Token = "0x60023DB")]
		[Address(RVA = "0x16BC120", Offset = "0x16BC120", VA = "0x16BC120")]
		private void RemoveLoginListeners()
		{
		}

		[Token(Token = "0x60023DC")]
		[Address(RVA = "0x16BC31C", Offset = "0x16BC31C", VA = "0x16BC31C")]
		private static void OnLoginError(Exception exception)
		{
		}

		[Token(Token = "0x60023DD")]
		[Address(RVA = "0x16BCA5C", Offset = "0x16BCA5C", VA = "0x16BCA5C")]
		private void OnLoginCompleted(LicenseData licenseData)
		{
		}

		[Token(Token = "0x60023DE")]
		[Address(RVA = "0x16BCD7C", Offset = "0x16BCD7C", VA = "0x16BCD7C")]
		private void LoginViewOnCloseClicked()
		{
		}

		[Token(Token = "0x60023DF")]
		[Address(RVA = "0x16BCDB0", Offset = "0x16BCDB0", VA = "0x16BCDB0")]
		public void SetInfomonitorVisibility(bool val)
		{
		}

		[Token(Token = "0x60023E0")]
		[Address(RVA = "0x16B7DCC", Offset = "0x16B7DCC", VA = "0x16B7DCC")]
		private void InitArUiRx(ARSwitcher arManager, SessionAvailability arAvailability = SessionAvailability.Supported)
		{
		}

		[Token(Token = "0x60023E1")]
		[Address(RVA = "0x16BCF8C", Offset = "0x16BCF8C", VA = "0x16BCF8C")]
		private void SetMainUiStateBasedOnArState(ARSwitcher.ARState state)
		{
		}

		[Token(Token = "0x60023E2")]
		[Address(RVA = "0x16BD0BC", Offset = "0x16BD0BC", VA = "0x16BD0BC")]
		public void ToggleMainPanels(bool val)
		{
		}

		[Token(Token = "0x60023E3")]
		[Address(RVA = "0x16BD4A0", Offset = "0x16BD4A0", VA = "0x16BD4A0")]
		public void CloseSearch()
		{
		}

		[Token(Token = "0x60023E4")]
		[Address(RVA = "0x16B9BF4", Offset = "0x16B9BF4", VA = "0x16B9BF4")]
		public Tween EnablePanel(RectTransform panel, Vector2 position, bool val = true, float duration = 0.5f)
		{
			return null;
		}

		[Token(Token = "0x60023E5")]
		[Address(RVA = "0x16BD5BC", Offset = "0x16BD5BC", VA = "0x16BD5BC")]
		public Tween EnablePanelWithTransparency(Image panelImage, float alpha, bool val = true, float duration = 0.5f)
		{
			return null;
		}

		[Token(Token = "0x60023E6")]
		[Address(RVA = "0x16B0C94", Offset = "0x16B0C94", VA = "0x16B0C94")]
		public void ToggleSubscriptionPanel(bool value)
		{
		}

		[Token(Token = "0x60023E7")]
		[Address(RVA = "0x16B98FC", Offset = "0x16B98FC", VA = "0x16B98FC")]
		public void ToggleEnterpriseLogin(bool value, bool fromInAp = false)
		{
		}

		[Token(Token = "0x60023E8")]
		[Address(RVA = "0x16B21B8", Offset = "0x16B21B8", VA = "0x16B21B8")]
		private void LoadInapController()
		{
		}

		[Token(Token = "0x60023E9")]
		[Address(RVA = "0x16BD688", Offset = "0x16BD688", VA = "0x16BD688")]
		private void LogAnalyticsAction(string actionId, string uiActionElementCategory, [Optional] Dictionary<string, object> additionalData)
		{
		}

		[Token(Token = "0x60023EA")]
		[Address(RVA = "0x16BD8B4", Offset = "0x16BD8B4", VA = "0x16BD8B4")]
		protected void OnDestroy()
		{
		}

		[Token(Token = "0x60023EB")]
		[Address(RVA = "0x16BD90C", Offset = "0x16BD90C", VA = "0x16BD90C")]
		public MobileUiPresenter()
		{
		}
	}
}
namespace Mobile.Localization
{
	[Token(Token = "0x2000725")]
	[RequireComponent(typeof(Text))]
	public class LocalizedText : MonoBehaviour, ILocalized
	{
		[StructLayout(3)]
		[Token(Token = "0x2000726")]
		[CompilerGenerated]
		private struct <Start>d__6 : IAsyncStateMachine
		{
			[Token(Token = "0x4002123")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4002124")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4002125")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public LocalizedText <>4__this;

			[Token(Token = "0x4002126")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x600249E")]
			[Address(RVA = "0x16DE9BC", Offset = "0x16DE9BC", VA = "0x16DE9BC", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x600249F")]
			[Address(RVA = "0x16DED00", Offset = "0x16DED00", VA = "0x16DED00", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4002121")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string _key;

		[Token(Token = "0x4002122")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Text _text;

		[Token(Token = "0x17000592")]
		public Text Text
		{
			[Token(Token = "0x6002498")]
			[Address(RVA = "0x16DE810", Offset = "0x16DE810", VA = "0x16DE810")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000593")]
		public string Key
		{
			[Token(Token = "0x6002499")]
			[Address(RVA = "0x16DE8C0", Offset = "0x16DE8C0", VA = "0x16DE8C0", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600249A")]
		[Address(RVA = "0x16DE8C8", Offset = "0x16DE8C8", VA = "0x16DE8C8")]
		[AsyncStateMachine(typeof(<Start>d__6))]
		private void Start()
		{
		}

		[Token(Token = "0x600249B")]
		[Address(RVA = "0x16DE980", Offset = "0x16DE980", VA = "0x16DE980", Slot = "5")]
		public void UpdateText(string value)
		{
		}

		[Token(Token = "0x600249C")]
		[Address(RVA = "0x16DE9AC", Offset = "0x16DE9AC", VA = "0x16DE9AC")]
		public void SetKey(string key)
		{
		}

		[Token(Token = "0x600249D")]
		[Address(RVA = "0x16DE9B4", Offset = "0x16DE9B4", VA = "0x16DE9B4")]
		public LocalizedText()
		{
		}
	}
}
namespace Mobile.IAP
{
	[Token(Token = "0x2000727")]
	public enum IAPMode
	{
		[Token(Token = "0x4002128")]
		Disabled,
		[Token(Token = "0x4002129")]
		Debug,
		[Token(Token = "0x400212A")]
		Store
	}
	[Token(Token = "0x2000728")]
	public enum IAPTarget
	{
		[Token(Token = "0x400212C")]
		University,
		[Token(Token = "0x400212D")]
		HighSchool
	}
	[Token(Token = "0x2000729")]
	[CreateAssetMenu]
	public class IAPConfiguration : ScriptableObject
	{
		[Token(Token = "0x400212E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private IAPMode _iapMode;

		[Token(Token = "0x400212F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private IAPTarget _iapTarget;

		[Token(Token = "0x17000594")]
		public IAPMode IAPMode
		{
			[Token(Token = "0x60024A0")]
			[Address(RVA = "0x16DED0C", Offset = "0x16DED0C", VA = "0x16DED0C")]
			get
			{
				return default(IAPMode);
			}
		}

		[Token(Token = "0x17000595")]
		public IAPTarget IAPTarget
		{
			[Token(Token = "0x60024A1")]
			[Address(RVA = "0x16DED14", Offset = "0x16DED14", VA = "0x16DED14")]
			get
			{
				return default(IAPTarget);
			}
		}

		[Token(Token = "0x60024A2")]
		[Address(RVA = "0x16DED1C", Offset = "0x16DED1C", VA = "0x16DED1C")]
		public IAPConfiguration()
		{
		}
	}
}
namespace Mobile.Views
{
	[Token(Token = "0x200072A")]
	public interface IMobileAnatomyItemInstance : IAnatomyItemInstance, ILevelable, IHideable, ISelectable, IFadeable, ISubpartHost
	{
		[Token(Token = "0x17000596")]
		MeshRenderer MeshRenderer
		{
			[Token(Token = "0x60024A5")]
			get;
		}

		[Token(Token = "0x60024A3")]
		void SetInverseFaded(bool value, bool isFocused);

		[Token(Token = "0x60024A4")]
		void SetIsolated(bool value, bool isFocused);
	}
	[Token(Token = "0x200072B")]
	public interface ISubpartHost
	{
		[Token(Token = "0x17000597")]
		Texture2D SubpartTexture
		{
			[Token(Token = "0x60024A6")]
			get;
		}

		[Token(Token = "0x17000598")]
		bool HasSubparts
		{
			[Token(Token = "0x60024A7")]
			get;
		}

		[Token(Token = "0x17000599")]
		Transform transform
		{
			[Token(Token = "0x60024AA")]
			get;
		}

		[Token(Token = "0x60024A8")]
		ISubpartInstance GetSubpartInstance(SubpartType subpartType, byte colorId);

		[Token(Token = "0x60024A9")]
		void SetHighlightedSubpart(Subpart subpart);
	}
	[Token(Token = "0x200072C")]
	public interface IMobileAnatomyItemInstanceCollection : ISystemPart, ILevelableCollection<IMobileAnatomyItemInstance>, IInstanceCollection<IMobileAnatomyItemInstance>
	{
		[Token(Token = "0x60024AB")]
		void SetFaded(bool value);

		[Token(Token = "0x60024AC")]
		void SetIsolated(bool value);

		[Token(Token = "0x60024AD")]
		bool ContainsAnatomyItemInstance(string id);

		[Token(Token = "0x60024AE")]
		new IMobileAnatomyItemInstance GetInstance(string id);

		[Token(Token = "0x60024AF")]
		new IEnumerable<IMobileAnatomyItemInstance> GetAllInstances();
	}
	[Serializable]
	[Token(Token = "0x200072D")]
	public class MobileAnatomyItemInstanceSettings
	{
		[Token(Token = "0x4002130")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public VisualSettings VisualSettings;

		[Token(Token = "0x60024B0")]
		[Address(RVA = "0x16DED24", Offset = "0x16DED24", VA = "0x16DED24")]
		public MobileAnatomyItemInstanceSettings()
		{
		}
	}
	[Token(Token = "0x200072E")]
	public class MobileAnatomyItemInstance : IMobileAnatomyItemInstance, IAnatomyItemInstance, ILevelable, IHideable, ISelectable, IFadeable, ISubpartHost
	{
		[Token(Token = "0x4002131")]
		private const float ANIMATION_TIME = 0.3f;

		[Token(Token = "0x4002132")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly AnatomyItemInstance _anatomyItemInstance;

		[Token(Token = "0x4002133")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly MobileAnatomyItemInstanceSettings _settings;

		[Token(Token = "0x4002134")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Tween _animationTween;

		[Token(Token = "0x4002135")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Material _originalMaterial;

		[Token(Token = "0x4002136")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Material _defaultMaterial;

		[Token(Token = "0x400213D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Texture2D _subpartTexture;

		[Token(Token = "0x400213E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private readonly IDictionary<int, SubpartInstance> _subpartInstances;

		[Token(Token = "0x400213F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Sequence _pulseAnimationSequence;

		[Token(Token = "0x1700059A")]
		public MeshFilter MeshFilter
		{
			[Token(Token = "0x60024B1")]
			[Address(RVA = "0x16DED2C", Offset = "0x16DED2C", VA = "0x16DED2C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700059B")]
		public MeshCollider MeshCollider
		{
			[Token(Token = "0x60024B2")]
			[Address(RVA = "0x16DED48", Offset = "0x16DED48", VA = "0x16DED48")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700059C")]
		public MeshRenderer MeshRenderer
		{
			[Token(Token = "0x60024B3")]
			[Address(RVA = "0x16DED64", Offset = "0x16DED64", VA = "0x16DED64", Slot = "6")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700059D")]
		public GameObject gameObject
		{
			[Token(Token = "0x60024B4")]
			[Address(RVA = "0x16DED80", Offset = "0x16DED80", VA = "0x16DED80")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700059E")]
		public Transform transform
		{
			[Token(Token = "0x60024B5")]
			[Address(RVA = "0x16DED9C", Offset = "0x16DED9C", VA = "0x16DED9C", Slot = "19")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700059F")]
		public Material OriginalMaterial
		{
			[Token(Token = "0x60024B6")]
			[Address(RVA = "0x16DEDB8", Offset = "0x16DEDB8", VA = "0x16DEDB8")]
			get
			{
				return null;
			}
			[Token(Token = "0x60024B7")]
			[Address(RVA = "0x16DEDC0", Offset = "0x16DEDC0", VA = "0x16DEDC0")]
			set
			{
			}
		}

		[Token(Token = "0x170005A0")]
		public IReadOnlyList<AnatomyItem> AnatomyItems
		{
			[Token(Token = "0x60024B8")]
			[Address(RVA = "0x16DEDF0", Offset = "0x16DEDF0", VA = "0x16DEDF0", Slot = "7")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60024B9")]
			[Address(RVA = "0x16DEDF8", Offset = "0x16DEDF8", VA = "0x16DEDF8")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170005A1")]
		public System.Collections.Generic.IReadOnlyDictionary<(SubpartType SubpartType, byte ColorId), Subpart> Subparts
		{
			[Token(Token = "0x60024BA")]
			[Address(RVA = "0x16DEE00", Offset = "0x16DEE00", VA = "0x16DEE00")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60024BB")]
			[Address(RVA = "0x16DEE08", Offset = "0x16DEE08", VA = "0x16DEE08")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170005A2")]
		private AnatomyItem ItemData
		{
			[Token(Token = "0x60024BC")]
			[Address(RVA = "0x16DEE10", Offset = "0x16DEE10", VA = "0x16DEE10")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005A3")]
		public Color HighlightColor
		{
			[Token(Token = "0x60024BD")]
			[Address(RVA = "0x16DEEB4", Offset = "0x16DEEB4", VA = "0x16DEEB4")]
			[CompilerGenerated]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x60024BE")]
			[Address(RVA = "0x16DEEC0", Offset = "0x16DEEC0", VA = "0x16DEEC0")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170005A4")]
		private bool IsNotSupportedStructurure
		{
			[Token(Token = "0x60024BF")]
			[Address(RVA = "0x16DEECC", Offset = "0x16DEECC", VA = "0x16DEECC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170005A5")]
		public bool IsLeveled
		{
			[Token(Token = "0x60024C6")]
			[Address(RVA = "0x16DFCCC", Offset = "0x16DFCCC", VA = "0x16DFCCC", Slot = "8")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60024C7")]
			[Address(RVA = "0x16DFCD4", Offset = "0x16DFCD4", VA = "0x16DFCD4")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x170005A6")]
		public bool IsHidden
		{
			[Token(Token = "0x60024C9")]
			[Address(RVA = "0x16DFD3C", Offset = "0x16DFD3C", VA = "0x16DFD3C", Slot = "10")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60024CA")]
			[Address(RVA = "0x16DFD44", Offset = "0x16DFD44", VA = "0x16DFD44")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x170005A7")]
		public RaycastHit GazeHit
		{
			[Token(Token = "0x60024CC")]
			[Address(RVA = "0x16DFDAC", Offset = "0x16DFDAC", VA = "0x16DFDAC")]
			[CompilerGenerated]
			get
			{
				return default(RaycastHit);
			}
			[Token(Token = "0x60024CD")]
			[Address(RVA = "0x16DFDC4", Offset = "0x16DFDC4", VA = "0x16DFDC4")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170005A8")]
		public Texture2D SubpartTexture
		{
			[Token(Token = "0x60024CE")]
			[Address(RVA = "0x16DFDE4", Offset = "0x16DFDE4", VA = "0x16DFDE4", Slot = "15")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005A9")]
		public bool HasSubparts
		{
			[Token(Token = "0x60024CF")]
			[Address(RVA = "0x16DFF2C", Offset = "0x16DFF2C", VA = "0x16DFF2C", Slot = "16")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170005AA")]
		public bool IsSelected
		{
			[Token(Token = "0x60024D2")]
			[Address(RVA = "0x16E0498", Offset = "0x16E0498", VA = "0x16E0498", Slot = "12")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60024D3")]
			[Address(RVA = "0x16E04A0", Offset = "0x16E04A0", VA = "0x16E04A0")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x170005AB")]
		public bool IsFaded
		{
			[Token(Token = "0x60024D5")]
			[Address(RVA = "0x16E0508", Offset = "0x16E0508", VA = "0x16E0508")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60024D6")]
			[Address(RVA = "0x16E0510", Offset = "0x16E0510", VA = "0x16E0510")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x170005AC")]
		private bool? IsInverseFaded
		{
			[Token(Token = "0x60024D8")]
			[Address(RVA = "0x16E0574", Offset = "0x16E0574", VA = "0x16E0574")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60024D9")]
			[Address(RVA = "0x16E057C", Offset = "0x16E057C", VA = "0x16E057C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170005AD")]
		public string StringId
		{
			[Token(Token = "0x60024DA")]
			[Address(RVA = "0x16E0584", Offset = "0x16E0584", VA = "0x16E0584")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005AE")]
		private bool? IsIsolated
		{
			[Token(Token = "0x60024DC")]
			[Address(RVA = "0x16E067C", Offset = "0x16E067C", VA = "0x16E067C")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60024DD")]
			[Address(RVA = "0x16E0684", Offset = "0x16E0684", VA = "0x16E0684")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x60024C0")]
		[Address(RVA = "0x16DEF60", Offset = "0x16DEF60", VA = "0x16DEF60")]
		public MobileAnatomyItemInstance(IReadOnlyList<AnatomyItem> anatomyItems, MobileAnatomyItemInstanceSettings settings, AnatomyItemInstance anatomyItemInstance)
		{
		}

		[Token(Token = "0x60024C1")]
		[Address(RVA = "0x16DF10C", Offset = "0x16DF10C", VA = "0x16DF10C")]
		private void SetVisible(bool value, float duration = 0.3f)
		{
		}

		[Token(Token = "0x60024C2")]
		[Address(RVA = "0x16DF46C", Offset = "0x16DF46C", VA = "0x16DF46C")]
		private void SetVisual()
		{
		}

		[Token(Token = "0x60024C3")]
		[Address(RVA = "0x16DF84C", Offset = "0x16DF84C", VA = "0x16DF84C")]
		private void SetPhysics()
		{
		}

		[Token(Token = "0x60024C4")]
		[Address(RVA = "0x16DF488", Offset = "0x16DF488", VA = "0x16DF488")]
		private void SetVisual(bool isFaded, bool isSelected, bool isHidden, bool? isInverseFaded, bool? isIsolated, bool isLeveled)
		{
		}

		[Token(Token = "0x60024C5")]
		[Address(RVA = "0x16DF864", Offset = "0x16DF864", VA = "0x16DF864")]
		private void SetPhysics(bool isFaded, bool isHidden, bool? isInverseFaded, bool? isIsolated, bool isLeveled)
		{
		}

		[Token(Token = "0x60024C8")]
		[Address(RVA = "0x16DFCE0", Offset = "0x16DFCE0", VA = "0x16DFCE0", Slot = "9")]
		public void SetLeveled(bool value)
		{
		}

		[Token(Token = "0x60024CB")]
		[Address(RVA = "0x16DFD50", Offset = "0x16DFD50", VA = "0x16DFD50", Slot = "11")]
		public void SetHidden(bool value)
		{
		}

		[Token(Token = "0x60024D0")]
		[Address(RVA = "0x16DFF84", Offset = "0x16DFF84", VA = "0x16DFF84", Slot = "17")]
		public ISubpartInstance GetSubpartInstance(SubpartType subpartType, byte colorId)
		{
			return null;
		}

		[Token(Token = "0x60024D1")]
		[Address(RVA = "0x16E02E4", Offset = "0x16E02E4", VA = "0x16E02E4", Slot = "18")]
		public void SetHighlightedSubpart(Subpart subpart)
		{
		}

		[Token(Token = "0x60024D4")]
		[Address(RVA = "0x16E04AC", Offset = "0x16E04AC", VA = "0x16E04AC", Slot = "13")]
		public void SetSelected(bool value)
		{
		}

		[Token(Token = "0x60024D7")]
		[Address(RVA = "0x16E051C", Offset = "0x16E051C", VA = "0x16E051C", Slot = "14")]
		public void SetFaded(bool value)
		{
		}

		[Token(Token = "0x60024DB")]
		[Address(RVA = "0x16E05C4", Offset = "0x16E05C4", VA = "0x16E05C4", Slot = "4")]
		public void SetInverseFaded(bool value, bool isFocused)
		{
		}

		[Token(Token = "0x60024DE")]
		[Address(RVA = "0x16E068C", Offset = "0x16E068C", VA = "0x16E068C", Slot = "5")]
		public void SetIsolated(bool value, bool isFocused)
		{
		}
	}
	[Token(Token = "0x2000730")]
	public static class MobileAnatomyItemInstanceExtensions
	{
		[Token(Token = "0x60024E2")]
		[Address(RVA = "0x16DF980", Offset = "0x16DF980", VA = "0x16DF980")]
		public static Sequence PulseAnimationSequence(this Material material, Color hlColor, float delay = 0.5f)
		{
			return null;
		}
	}
	[Token(Token = "0x2000732")]
	public class MobileAnatomyItemInstanceCollection : IMobileAnatomyItemInstanceCollection, ISystemPart, ILevelableCollection<IMobileAnatomyItemInstance>, IInstanceCollection<IMobileAnatomyItemInstance>
	{
		[Token(Token = "0x4002149")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly VisualSettings _visualSettings;

		[Token(Token = "0x400214A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly IDictionary<string, MobileAnatomyItemInstance> ItemInstances;

		[Token(Token = "0x170005AF")]
		public Material Material
		{
			[Token(Token = "0x60024E6")]
			[Address(RVA = "0x16E091C", Offset = "0x16E091C", VA = "0x16E091C")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60024E7")]
			[Address(RVA = "0x16E0924", Offset = "0x16E0924", VA = "0x16E0924")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170005B0")]
		public Material TransparentMaterial
		{
			[Token(Token = "0x60024E8")]
			[Address(RVA = "0x16E092C", Offset = "0x16E092C", VA = "0x16E092C")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60024E9")]
			[Address(RVA = "0x16E0934", Offset = "0x16E0934", VA = "0x16E0934")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170005B1")]
		public Shader OriginalShader
		{
			[Token(Token = "0x60024EA")]
			[Address(RVA = "0x16E093C", Offset = "0x16E093C", VA = "0x16E093C")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60024EB")]
			[Address(RVA = "0x16E0944", Offset = "0x16E0944", VA = "0x16E0944")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170005B2")]
		public Shader OriginalTransparentShader
		{
			[Token(Token = "0x60024EC")]
			[Address(RVA = "0x16E094C", Offset = "0x16E094C", VA = "0x16E094C")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60024ED")]
			[Address(RVA = "0x16E0954", Offset = "0x16E0954", VA = "0x16E0954")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170005B3")]
		public SystemGroup SystemGroup
		{
			[Token(Token = "0x60024EE")]
			[Address(RVA = "0x16E095C", Offset = "0x16E095C", VA = "0x16E095C", Slot = "12")]
			[CompilerGenerated]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005B4")]
		public string StringId
		{
			[Token(Token = "0x60024EF")]
			[Address(RVA = "0x16E0964", Offset = "0x16E0964", VA = "0x16E0964", Slot = "9")]
			[CompilerGenerated]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005B5")]
		public GameObject GameObject
		{
			[Token(Token = "0x60024F0")]
			[Address(RVA = "0x16E096C", Offset = "0x16E096C", VA = "0x16E096C", Slot = "10")]
			[CompilerGenerated]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60024F1")]
		[Address(RVA = "0x16E0974", Offset = "0x16E0974", VA = "0x16E0974")]
		public MobileAnatomyItemInstanceCollection(SystemGroup systemGroup, string stringId, GameObject gameObject, VisualSettings visualSettings)
		{
		}

		[Token(Token = "0x60024F2")]
		[Address(RVA = "0x16E0A5C", Offset = "0x16E0A5C", VA = "0x16E0A5C", Slot = "13")]
		public IMobileAnatomyItemInstance GetInstance(string id)
		{
			return null;
		}

		[Token(Token = "0x60024F3")]
		[Address(RVA = "0x16E0B8C", Offset = "0x16E0B8C", VA = "0x16E0B8C", Slot = "11")]
		public IEnumerable<IMobileAnatomyItemInstance> GetAllInstances()
		{
			return null;
		}

		[Token(Token = "0x60024F4")]
		[Address(RVA = "0x16E0C30", Offset = "0x16E0C30", VA = "0x16E0C30", Slot = "6")]
		public bool ContainsAnatomyItemInstance(string id)
		{
			return default(bool);
		}

		[Token(Token = "0x60024F5")]
		[Address(RVA = "0x16E0CDC", Offset = "0x16E0CDC", VA = "0x16E0CDC", Slot = "4")]
		public void SetFaded(bool value)
		{
		}

		[Token(Token = "0x60024F6")]
		[Address(RVA = "0x16E0E88", Offset = "0x16E0E88", VA = "0x16E0E88", Slot = "5")]
		public void SetIsolated(bool value)
		{
		}
	}
	[Token(Token = "0x2000733")]
	public interface ISubpartInstance
	{
		[Token(Token = "0x170005B6")]
		ISubpartHost Host
		{
			[Token(Token = "0x60024F7")]
			get;
		}

		[Token(Token = "0x170005B7")]
		Subpart Data
		{
			[Token(Token = "0x60024F8")]
			get;
		}
	}
	[Token(Token = "0x2000734")]
	public class SubpartInstance : ISubpartInstance
	{
		[Token(Token = "0x170005B8")]
		public ISubpartHost Host
		{
			[Token(Token = "0x60024F9")]
			[Address(RVA = "0x16E0EA8", Offset = "0x16E0EA8", VA = "0x16E0EA8", Slot = "4")]
			[CompilerGenerated]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005B9")]
		public Subpart Data
		{
			[Token(Token = "0x60024FA")]
			[Address(RVA = "0x16E0EB0", Offset = "0x16E0EB0", VA = "0x16E0EB0", Slot = "5")]
			[CompilerGenerated]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60024FB")]
		[Address(RVA = "0x16E02A0", Offset = "0x16E02A0", VA = "0x16E02A0")]
		public SubpartInstance(Subpart data, ISubpartHost host)
		{
		}
	}
	[Token(Token = "0x2000735")]
	public class AnatomyItemInstance : MonoBehaviour
	{
		[Token(Token = "0x4002154")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshFilter _meshFilter;

		[Token(Token = "0x4002155")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MeshCollider _meshCollider;

		[Token(Token = "0x4002156")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MeshRenderer _meshRenderer;

		[Token(Token = "0x4002157")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AssignableMonoBehaviourObject _monoBehaviourObject;

		[Token(Token = "0x170005BA")]
		public MeshFilter MeshFilter
		{
			[Token(Token = "0x60024FC")]
			[Address(RVA = "0x16E0EB8", Offset = "0x16E0EB8", VA = "0x16E0EB8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005BB")]
		public MeshCollider MeshCollider
		{
			[Token(Token = "0x60024FD")]
			[Address(RVA = "0x16E0EC0", Offset = "0x16E0EC0", VA = "0x16E0EC0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005BC")]
		public MeshRenderer MeshRenderer
		{
			[Token(Token = "0x60024FE")]
			[Address(RVA = "0x16E0EC8", Offset = "0x16E0EC8", VA = "0x16E0EC8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005BD")]
		public AssignableMonoBehaviourObject MonoBehaviourObject
		{
			[Token(Token = "0x60024FF")]
			[Address(RVA = "0x16E0ED0", Offset = "0x16E0ED0", VA = "0x16E0ED0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002500")]
		[Address(RVA = "0x16E0ED8", Offset = "0x16E0ED8", VA = "0x16E0ED8")]
		public AnatomyItemInstance()
		{
		}
	}
	[Token(Token = "0x2000736")]
	public interface IPresentable
	{
		[Token(Token = "0x170005BE")]
		string Name
		{
			[Token(Token = "0x6002501")]
			get;
		}

		[Token(Token = "0x170005BF")]
		string NameLat
		{
			[Token(Token = "0x6002502")]
			get;
		}

		[Token(Token = "0x170005C0")]
		string Description
		{
			[Token(Token = "0x6002503")]
			get;
		}

		[Token(Token = "0x170005C1")]
		Transform transform
		{
			[Token(Token = "0x6002504")]
			get;
		}
	}
}
namespace Mobile.Networking
{
	[Token(Token = "0x2000737")]
	public class NetworkMobileModuleProvider : NetworkBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000738")]
		public struct ClientInfo
		{
			[Token(Token = "0x400215E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int MaxSystemCount;
		}

		[Serializable]
		[Token(Token = "0x2000739")]
		public class SerializableAnatomyItem
		{
			[Token(Token = "0x400215F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int Id;

			[Token(Token = "0x600258F")]
			[Address(RVA = "0x16E7658", Offset = "0x16E7658", VA = "0x16E7658")]
			public SerializableAnatomyItem()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200073A")]
		public class SerializableSubpart
		{
			[Token(Token = "0x4002160")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int ItemId;

			[Token(Token = "0x4002161")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public byte ColorId;

			[Token(Token = "0x4002162")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public SubpartType SubpartType;

			[Token(Token = "0x6002590")]
			[Address(RVA = "0x16E7868", Offset = "0x16E7868", VA = "0x16E7868")]
			public SerializableSubpart()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200073B")]
		public struct SerializableMobileAnatomyModel
		{
			[Token(Token = "0x4002163")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public SubpartType ActiveSubpartType;

			[Token(Token = "0x4002164")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public DatabaseType ActiveDatabaseType;

			[Token(Token = "0x4002165")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public SerializableAnatomyItem InverseFadedAnatomyItem;

			[Token(Token = "0x4002166")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SerializableAnatomyItem IsolatedAnatomyItem;

			[Token(Token = "0x4002167")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public SerializableAnatomyItem SelectedAnatomyItem;

			[Token(Token = "0x4002168")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string AnimatedItem;

			[Token(Token = "0x4002169")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SerializableSubpart SelectedSubpart;

			[Token(Token = "0x400216A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public int MaxSystemCount;
		}

		[Serializable]
		[Token(Token = "0x200073C")]
		public struct SerializableMobileAnatomySystemModel
		{
			[Token(Token = "0x400216B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int CurrentStructureLevel;

			[Token(Token = "0x400216C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public Database.SystemType SystemType;
		}

		[StructLayout(3)]
		[Token(Token = "0x200073D")]
		[CompilerGenerated]
		private struct <OnStopClient>d__16 : IAsyncStateMachine
		{
			[Token(Token = "0x400216D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x400216E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x400216F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public NetworkMobileModuleProvider <>4__this;

			[Token(Token = "0x4002170")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x6002591")]
			[Address(RVA = "0x16ECEA8", Offset = "0x16ECEA8", VA = "0x16ECEA8", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6002592")]
			[Address(RVA = "0x16ED22C", Offset = "0x16ED22C", VA = "0x16ED22C", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200073E")]
		[CompilerGenerated]
		private struct <CmdShowFoundResult>d__30 : IAsyncStateMachine
		{
			[Token(Token = "0x4002171")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4002172")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4002173")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public NetworkMobileModuleProvider <>4__this;

			[Token(Token = "0x4002174")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int id;

			[Token(Token = "0x4002175")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private Guid <command>5__2;

			[Token(Token = "0x4002176")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private CancellationToken <token>5__3;

			[Token(Token = "0x4002177")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private YieldAwaitable.YieldAwaiter <>u__1;

			[Token(Token = "0x4002178")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private TaskAwaiter <>u__2;

			[Token(Token = "0x6002593")]
			[Address(RVA = "0x16ED238", Offset = "0x16ED238", VA = "0x16ED238", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6002594")]
			[Address(RVA = "0x16ED754", Offset = "0x16ED754", VA = "0x16ED754", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200073F")]
		[CompilerGenerated]
		private struct <CmdLoadModel>d__34 : IAsyncStateMachine
		{
			[Token(Token = "0x4002179")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x400217A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x400217B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public NetworkMobileModuleProvider <>4__this;

			[Token(Token = "0x400217C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public NetworkConnectionToClient sender;

			[Token(Token = "0x400217D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public ClientInfo clientInfo;

			[Token(Token = "0x400217E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private ISystemsModule <systemsModule>5__2;

			[Token(Token = "0x400217F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private int <maxSystemCount>5__3;

			[Token(Token = "0x4002180")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x6002595")]
			[Address(RVA = "0x16ED760", Offset = "0x16ED760", VA = "0x16ED760", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6002596")]
			[Address(RVA = "0x16EE5C0", Offset = "0x16EE5C0", VA = "0x16EE5C0", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000741")]
		[CompilerGenerated]
		private struct <TargetLoadAnatomyModel>d__52 : IAsyncStateMachine
		{
			[Token(Token = "0x4002186")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4002187")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4002188")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public NetworkMobileModuleProvider <>4__this;

			[Token(Token = "0x4002189")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public SerializableMobileAnatomyModel model;

			[Token(Token = "0x400218A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public Database.SystemType[] activeSystems;

			[Token(Token = "0x400218B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			public SerializableMobileAnatomySystemModel[] systemModels;

			[Token(Token = "0x400218C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			public SerializableAnatomyItem[] hiddenItems;

			[Token(Token = "0x400218D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			public SerializableAnatomyItem[] fadedItems;

			[Token(Token = "0x400218E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x600259D")]
			[Address(RVA = "0x16EE684", Offset = "0x16EE684", VA = "0x16EE684", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x600259E")]
			[Address(RVA = "0x16EEF00", Offset = "0x16EEF00", VA = "0x16EEF00", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000742")]
		[CompilerGenerated]
		private struct <RpcSetSystemActiveAsync>d__54 : IAsyncStateMachine
		{
			[Token(Token = "0x400218F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4002190")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4002191")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public NetworkMobileModuleProvider <>4__this;

			[Token(Token = "0x4002192")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Database.SystemType systemType;

			[Token(Token = "0x4002193")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public bool value;

			[Token(Token = "0x4002194")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x600259F")]
			[Address(RVA = "0x16EEF0C", Offset = "0x16EEF0C", VA = "0x16EEF0C", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60025A0")]
			[Address(RVA = "0x16EF170", Offset = "0x16EF170", VA = "0x16EF170", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000743")]
		[CompilerGenerated]
		private struct <RpcToggleDatabaseTypeAsync>d__55 : IAsyncStateMachine
		{
			[Token(Token = "0x4002195")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4002196")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4002197")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public NetworkMobileModuleProvider <>4__this;

			[Token(Token = "0x4002198")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public DatabaseType databaseType;

			[Token(Token = "0x4002199")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x60025A1")]
			[Address(RVA = "0x16EF17C", Offset = "0x16EF17C", VA = "0x16EF17C", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60025A2")]
			[Address(RVA = "0x16EF3D4", Offset = "0x16EF3D4", VA = "0x16EF3D4", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000744")]
		[CompilerGenerated]
		private struct <RpcSetSelectedItem>d__58 : IAsyncStateMachine
		{
			[Token(Token = "0x400219A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x400219B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x400219C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public NetworkMobileModuleProvider <>4__this;

			[Token(Token = "0x400219D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public int? itemId;

			[Token(Token = "0x400219E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x60025A3")]
			[Address(RVA = "0x16EF3E0", Offset = "0x16EF3E0", VA = "0x16EF3E0", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60025A4")]
			[Address(RVA = "0x16EF680", Offset = "0x16EF680", VA = "0x16EF680", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000745")]
		[CompilerGenerated]
		private struct <RpcShowFoundResult>d__65 : IAsyncStateMachine
		{
			[Token(Token = "0x400219F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40021A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x40021A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public byte[] commandId;

			[Token(Token = "0x40021A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public NetworkMobileModuleProvider <>4__this;

			[Token(Token = "0x40021A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public int anatomyItemId;

			[Token(Token = "0x40021A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x60025A5")]
			[Address(RVA = "0x16EF68C", Offset = "0x16EF68C", VA = "0x16EF68C", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60025A6")]
			[Address(RVA = "0x16EFA08", Offset = "0x16EFA08", VA = "0x16EFA08", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4002158")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private ModuleProviderBehaviour _singlePlayerModuleProvider;

		[Token(Token = "0x4002159")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private ModuleProviderBehaviour _networkModuleProvider;

		[Token(Token = "0x400215A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private int _defaultCommandTimeout;

		[Token(Token = "0x400215B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private readonly HashSet<Guid> _pendingCommands;

		[Token(Token = "0x400215C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private readonly IDictionary<int, int> _clientsSystemCount;

		[Token(Token = "0x400215D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private bool _modulesRegistered;

		[Token(Token = "0x170005C2")]
		public static bool HasAuthority
		{
			[Token(Token = "0x6002505")]
			[Address(RVA = "0x16E0EE0", Offset = "0x16E0EE0", VA = "0x16E0EE0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6002506")]
		[Address(RVA = "0x16E1060", Offset = "0x16E1060", VA = "0x16E1060")]
		private void RegisterModules()
		{
		}

		[Token(Token = "0x6002507")]
		[Address(RVA = "0x16E1C84", Offset = "0x16E1C84", VA = "0x16E1C84", Slot = "10")]
		public override void OnStartClient()
		{
		}

		[Token(Token = "0x6002508")]
		[Address(RVA = "0x16E217C", Offset = "0x16E217C", VA = "0x16E217C", Slot = "8")]
		public override void OnStartServer()
		{
		}

		[Token(Token = "0x6002509")]
		[Address(RVA = "0x16E2260", Offset = "0x16E2260", VA = "0x16E2260", Slot = "11")]
		[AsyncStateMachine(typeof(<OnStopClient>d__16))]
		public override void OnStopClient()
		{
		}

		[Token(Token = "0x600250A")]
		[Address(RVA = "0x16E2318", Offset = "0x16E2318", VA = "0x16E2318")]
		private void OnClientDisconnected(NetworkConnection networkConnection)
		{
		}

		[Token(Token = "0x600250B")]
		[Address(RVA = "0x16E26D0", Offset = "0x16E26D0", VA = "0x16E26D0")]
		private void CmdSetFaded(int item, bool value)
		{
		}

		[Token(Token = "0x600250C")]
		[Address(RVA = "0x16E2964", Offset = "0x16E2964", VA = "0x16E2964")]
		private void CmdSetHidden(int item, bool value)
		{
		}

		[Token(Token = "0x600250D")]
		[Address(RVA = "0x16E2BF8", Offset = "0x16E2BF8", VA = "0x16E2BF8")]
		private void CmdSetInverseFadedObject(int? item)
		{
		}

		[Token(Token = "0x600250E")]
		[Address(RVA = "0x16E2E68", Offset = "0x16E2E68", VA = "0x16E2E68")]
		private void CmdSetIsolatedObject(int? item)
		{
		}

		[Token(Token = "0x600250F")]
		[Address(RVA = "0x16E30D8", Offset = "0x16E30D8", VA = "0x16E30D8")]
		private void CmdSetSubpartType(SubpartType subpartType)
		{
		}

		[Token(Token = "0x6002510")]
		[Address(RVA = "0x16E3324", Offset = "0x16E3324", VA = "0x16E3324")]
		private void CmdSetSelectedSubpart(int? itemId, byte? colorId, SubpartType? subpartType)
		{
		}

		[Token(Token = "0x6002511")]
		[Address(RVA = "0x16E35DC", Offset = "0x16E35DC", VA = "0x16E35DC")]
		private void CmdUpdateStructureLevel(Database.SystemType system, int level)
		{
		}

		[Token(Token = "0x6002512")]
		[Address(RVA = "0x16E3870", Offset = "0x16E3870", VA = "0x16E3870")]
		private void CmdSetSystemActiveAsync(Database.SystemType systemType, bool value)
		{
		}

		[Token(Token = "0x6002513")]
		[Address(RVA = "0x16E3B04", Offset = "0x16E3B04", VA = "0x16E3B04")]
		private void CmdToggleDatabaseTypeAsync(DatabaseType databaseType)
		{
		}

		[Token(Token = "0x6002514")]
		[Address(RVA = "0x16E3D50", Offset = "0x16E3D50", VA = "0x16E3D50")]
		private void CmdSetSelectedItem(int? itemId)
		{
		}

		[Token(Token = "0x6002515")]
		[Address(RVA = "0x16E3FC0", Offset = "0x16E3FC0", VA = "0x16E3FC0")]
		private void CmdResetEditedItems()
		{
		}

		[Token(Token = "0x6002516")]
		[Address(RVA = "0x16E41E4", Offset = "0x16E41E4", VA = "0x16E41E4")]
		private void CmdResetEditedItemsForSystems(Database.SystemType[] systems)
		{
		}

		[Token(Token = "0x6002517")]
		[Address(RVA = "0x16E4430", Offset = "0x16E4430", VA = "0x16E4430")]
		[AsyncStateMachine(typeof(<CmdShowFoundResult>d__30))]
		private Task CmdShowFoundResult(int id)
		{
			return null;
		}

		[Token(Token = "0x6002518")]
		[Address(RVA = "0x16E452C", Offset = "0x16E452C", VA = "0x16E452C")]
		private void CmdSetActiveAnimation(string value)
		{
		}

		[Token(Token = "0x6002519")]
		[Address(RVA = "0x16E479C", Offset = "0x16E479C", VA = "0x16E479C")]
		private void CmdSetAnimationSpeed(float value)
		{
		}

		[Token(Token = "0x600251A")]
		[Address(RVA = "0x16E4A14", Offset = "0x16E4A14", VA = "0x16E4A14")]
		private void CmdSetAnimationTime(float value)
		{
		}

		[Token(Token = "0x600251B")]
		[Address(RVA = "0x16E1FAC", Offset = "0x16E1FAC", VA = "0x16E1FAC")]
		[Command(requiresAuthority = false)]
		[AsyncStateMachine(typeof(<CmdLoadModel>d__34))]
		private void CmdLoadModel(ClientInfo clientInfo, [Optional] NetworkConnectionToClient sender)
		{
		}

		[Token(Token = "0x600251C")]
		[Address(RVA = "0x16E3660", Offset = "0x16E3660", VA = "0x16E3660")]
		[Command(requiresAuthority = false)]
		private void CmdUpdateStructureLevelInternal(Database.SystemType system, int level)
		{
		}

		[Token(Token = "0x600251D")]
		[Address(RVA = "0x16E38F4", Offset = "0x16E38F4", VA = "0x16E38F4")]
		[Command(requiresAuthority = false)]
		private void CmdSetSystemActiveInternal(Database.SystemType systemType, bool value)
		{
		}

		[Token(Token = "0x600251E")]
		[Address(RVA = "0x16E3B80", Offset = "0x16E3B80", VA = "0x16E3B80")]
		[Command(requiresAuthority = false)]
		private void CmdToggleDatabaseTypeInternal(DatabaseType databaseType)
		{
		}

		[Token(Token = "0x600251F")]
		[Address(RVA = "0x16E2754", Offset = "0x16E2754", VA = "0x16E2754")]
		[Command(requiresAuthority = false)]
		private void CmdSetItemFaded(int itemId, bool value)
		{
		}

		[Token(Token = "0x6002520")]
		[Address(RVA = "0x16E29E8", Offset = "0x16E29E8", VA = "0x16E29E8")]
		[Command(requiresAuthority = false)]
		private void CmdSetItemHidden(int itemId, bool value)
		{
		}

		[Token(Token = "0x6002521")]
		[Address(RVA = "0x16E3DCC", Offset = "0x16E3DCC", VA = "0x16E3DCC")]
		[Command(requiresAuthority = false)]
		private void CmdSetSelectedItemInternal(int? itemId)
		{
		}

		[Token(Token = "0x6002522")]
		[Address(RVA = "0x16E2C74", Offset = "0x16E2C74", VA = "0x16E2C74")]
		[Command(requiresAuthority = false)]
		private void CmdSetInverseFadedItemInternal(int? itemId)
		{
		}

		[Token(Token = "0x6002523")]
		[Address(RVA = "0x16E2EE4", Offset = "0x16E2EE4", VA = "0x16E2EE4")]
		[Command(requiresAuthority = false)]
		private void CmdSetIsolatedItemInternal(int? itemId)
		{
		}

		[Token(Token = "0x6002524")]
		[Address(RVA = "0x16E3154", Offset = "0x16E3154", VA = "0x16E3154")]
		[Command(requiresAuthority = false)]
		private void CmdSetSubpartTypeInternal(SubpartType subpartType)
		{
		}

		[Token(Token = "0x6002525")]
		[Address(RVA = "0x16E33BC", Offset = "0x16E33BC", VA = "0x16E33BC")]
		[Command(requiresAuthority = false)]
		private void CmdSetSelectedSubpartInternal(int? itemId, byte? colorId, SubpartType? subpartType)
		{
		}

		[Token(Token = "0x6002526")]
		[Address(RVA = "0x16E4028", Offset = "0x16E4028", VA = "0x16E4028")]
		[Command(requiresAuthority = false)]
		private void CmdResetEditedItemsInternal()
		{
		}

		[Token(Token = "0x6002527")]
		[Address(RVA = "0x16E4260", Offset = "0x16E4260", VA = "0x16E4260")]
		[Command(requiresAuthority = false)]
		private void CmdResetEditedItemsForSystemsInternal(Database.SystemType[] systems)
		{
		}

		[Token(Token = "0x6002528")]
		[Address(RVA = "0x16E4D1C", Offset = "0x16E4D1C", VA = "0x16E4D1C")]
		[Command(requiresAuthority = false)]
		private void CmdShowFoundResultInternal(int anatomyItemId, byte[] commandId)
		{
		}

		[Token(Token = "0x6002529")]
		[Address(RVA = "0x16E24DC", Offset = "0x16E24DC", VA = "0x16E24DC")]
		[Command(requiresAuthority = false)]
		private void CmdSetMaxSystemsCount(int value)
		{
		}

		[Token(Token = "0x600252A")]
		[Address(RVA = "0x16E45A8", Offset = "0x16E45A8", VA = "0x16E45A8")]
		[Command(requiresAuthority = false)]
		private void CmdSetActiveAnimationInternal(string value)
		{
		}

		[Token(Token = "0x600252B")]
		[Address(RVA = "0x16E4818", Offset = "0x16E4818", VA = "0x16E4818")]
		[Command(requiresAuthority = false)]
		private void CmdSetAnimationSpeedInternal(float value)
		{
		}

		[Token(Token = "0x600252C")]
		[Address(RVA = "0x16E4A90", Offset = "0x16E4A90", VA = "0x16E4A90")]
		[Command(requiresAuthority = false)]
		private void CmdSetAnimationTimeInternal(float value)
		{
		}

		[Token(Token = "0x600252D")]
		[Address(RVA = "0x16E4F2C", Offset = "0x16E4F2C", VA = "0x16E4F2C")]
		[TargetRpc]
		[AsyncStateMachine(typeof(<TargetLoadAnatomyModel>d__52))]
		private void TargetLoadAnatomyModel(NetworkConnection target, SerializableMobileAnatomyModel model, SerializableMobileAnatomySystemModel[] systemModels, Database.SystemType[] activeSystems, SerializableAnatomyItem[] hiddenItems, SerializableAnatomyItem[] fadedItems)
		{
		}

		[Token(Token = "0x600252E")]
		[Address(RVA = "0x16E518C", Offset = "0x16E518C", VA = "0x16E518C")]
		[ClientRpc]
		private void RpcUpdateStructureLevel(Database.SystemType system, int level)
		{
		}

		[Token(Token = "0x600252F")]
		[Address(RVA = "0x16E539C", Offset = "0x16E539C", VA = "0x16E539C")]
		[AsyncStateMachine(typeof(<RpcSetSystemActiveAsync>d__54))]
		[ClientRpc]
		private void RpcSetSystemActiveAsync(Database.SystemType systemType, bool value)
		{
		}

		[Token(Token = "0x6002530")]
		[Address(RVA = "0x16E55AC", Offset = "0x16E55AC", VA = "0x16E55AC")]
		[ClientRpc]
		[AsyncStateMachine(typeof(<RpcToggleDatabaseTypeAsync>d__55))]
		private void RpcToggleDatabaseTypeAsync(DatabaseType databaseType)
		{
		}

		[Token(Token = "0x6002531")]
		[Address(RVA = "0x16E577C", Offset = "0x16E577C", VA = "0x16E577C")]
		[ClientRpc]
		private void RpcSetItemFaded(int itemId, bool value)
		{
		}

		[Token(Token = "0x6002532")]
		[Address(RVA = "0x16E598C", Offset = "0x16E598C", VA = "0x16E598C")]
		[ClientRpc]
		private void RpcSetItemHidden(int itemId, bool value)
		{
		}

		[Token(Token = "0x6002533")]
		[Address(RVA = "0x16E5B9C", Offset = "0x16E5B9C", VA = "0x16E5B9C")]
		[AsyncStateMachine(typeof(<RpcSetSelectedItem>d__58))]
		[ClientRpc]
		private void RpcSetSelectedItem(int? itemId)
		{
		}

		[Token(Token = "0x6002534")]
		[Address(RVA = "0x16E5D90", Offset = "0x16E5D90", VA = "0x16E5D90")]
		[ClientRpc]
		private void RpcSetInverseFadedItem(int? itemId)
		{
		}

		[Token(Token = "0x6002535")]
		[Address(RVA = "0x16E5F84", Offset = "0x16E5F84", VA = "0x16E5F84")]
		[ClientRpc]
		private void RpcSetIsolatedItem(int? itemId)
		{
		}

		[Token(Token = "0x6002536")]
		[Address(RVA = "0x16E6178", Offset = "0x16E6178", VA = "0x16E6178")]
		[ClientRpc]
		private void RpcSetSubpartType(SubpartType subpartType)
		{
		}

		[Token(Token = "0x6002537")]
		[Address(RVA = "0x16E6348", Offset = "0x16E6348", VA = "0x16E6348")]
		[ClientRpc]
		private void RpcSetSelectedSubpart(int? itemId, byte? colorId, SubpartType? subpartType)
		{
		}

		[Token(Token = "0x6002538")]
		[Address(RVA = "0x16E6568", Offset = "0x16E6568", VA = "0x16E6568")]
		[ClientRpc]
		private void RpcResetEditedItems()
		{
		}

		[Token(Token = "0x6002539")]
		[Address(RVA = "0x16E6724", Offset = "0x16E6724", VA = "0x16E6724")]
		[ClientRpc]
		private void RpcResetEditedItemsForSystems(Database.SystemType[] systems)
		{
		}

		[Token(Token = "0x600253A")]
		[Address(RVA = "0x16E68F4", Offset = "0x16E68F4", VA = "0x16E68F4")]
		[AsyncStateMachine(typeof(<RpcShowFoundResult>d__65))]
		[ClientRpc]
		private void RpcShowFoundResult(int anatomyItemId, byte[] commandId)
		{
		}

		[Token(Token = "0x600253B")]
		[Address(RVA = "0x16E6B04", Offset = "0x16E6B04", VA = "0x16E6B04")]
		[ClientRpc]
		private void RpcSetMaxSystemCount(int modelMaxSystemCount)
		{
		}

		[Token(Token = "0x600253C")]
		[Address(RVA = "0x16E6CF8", Offset = "0x16E6CF8", VA = "0x16E6CF8")]
		[ClientRpc]
		private void RpcSetActiveAnimation(string value)
		{
		}

		[Token(Token = "0x600253D")]
		[Address(RVA = "0x16E6EEC", Offset = "0x16E6EEC", VA = "0x16E6EEC")]
		[ClientRpc]
		private void RpcSetAnimationSpeed(float value)
		{
		}

		[Token(Token = "0x600253E")]
		[Address(RVA = "0x16E70E8", Offset = "0x16E70E8", VA = "0x16E70E8")]
		[ClientRpc]
		private void RpcSetAnimationTime(float value)
		{
		}

		[Token(Token = "0x600253F")]
		[Address(RVA = "0x16E72E4", Offset = "0x16E72E4", VA = "0x16E72E4")]
		private IMobileAnatomyItemInstance GetItemInstance(int? itemId)
		{
			return null;
		}

		[Token(Token = "0x6002540")]
		[Address(RVA = "0x16E74A4", Offset = "0x16E74A4", VA = "0x16E74A4")]
		private ISubpartInstance GetSubpartInstance(int? itemId, byte? colorId, SubpartType? subpartType)
		{
			return null;
		}

		[Token(Token = "0x6002541")]
		[Address(RVA = "0x16E75B8", Offset = "0x16E75B8", VA = "0x16E75B8")]
		private static SerializableAnatomyItem GetSerializableAnatomyItem(IMobileAnatomyItemInstance item)
		{
			return null;
		}

		[Token(Token = "0x6002542")]
		[Address(RVA = "0x16E7660", Offset = "0x16E7660", VA = "0x16E7660")]
		private static SerializableSubpart GetSerializableSubpart(ISubpartInstance subpartInstance)
		{
			return null;
		}

		[Token(Token = "0x6002543")]
		[Address(RVA = "0x16E7870", Offset = "0x16E7870", VA = "0x16E7870")]
		public NetworkMobileModuleProvider()
		{
		}

		[Token(Token = "0x6002545")]
		[Address(RVA = "0x16E7AA8", Offset = "0x16E7AA8", VA = "0x16E7AA8")]
		private void MirrorProcessed()
		{
		}

		[Token(Token = "0x6002546")]
		[Address(RVA = "0x16E7AAC", Offset = "0x16E7AAC", VA = "0x16E7AAC")]
		protected void UserCode_CmdLoadModel__ClientInfo__NetworkConnectionToClient(ClientInfo clientInfo, NetworkConnectionToClient sender)
		{
		}

		[Token(Token = "0x6002547")]
		[Address(RVA = "0x16E7B90", Offset = "0x16E7B90", VA = "0x16E7B90")]
		protected static void InvokeUserCode_CmdLoadModel__ClientInfo__NetworkConnectionToClient(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x6002548")]
		[Address(RVA = "0x16E7CE8", Offset = "0x16E7CE8", VA = "0x16E7CE8")]
		protected void UserCode_CmdUpdateStructureLevelInternal__SystemType__Int32(Database.SystemType system, int level)
		{
		}

		[Token(Token = "0x6002549")]
		[Address(RVA = "0x16E7CEC", Offset = "0x16E7CEC", VA = "0x16E7CEC")]
		protected static void InvokeUserCode_CmdUpdateStructureLevelInternal__SystemType__Int32(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x600254A")]
		[Address(RVA = "0x16E7E78", Offset = "0x16E7E78", VA = "0x16E7E78")]
		protected void UserCode_CmdSetSystemActiveInternal__SystemType__Boolean(Database.SystemType systemType, bool value)
		{
		}

		[Token(Token = "0x600254B")]
		[Address(RVA = "0x16E7E80", Offset = "0x16E7E80", VA = "0x16E7E80")]
		protected static void InvokeUserCode_CmdSetSystemActiveInternal__SystemType__Boolean(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x600254C")]
		[Address(RVA = "0x16E800C", Offset = "0x16E800C", VA = "0x16E800C")]
		protected void UserCode_CmdToggleDatabaseTypeInternal__DatabaseType(DatabaseType databaseType)
		{
		}

		[Token(Token = "0x600254D")]
		[Address(RVA = "0x16E8010", Offset = "0x16E8010", VA = "0x16E8010")]
		protected static void InvokeUserCode_CmdToggleDatabaseTypeInternal__DatabaseType(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x600254E")]
		[Address(RVA = "0x16E8164", Offset = "0x16E8164", VA = "0x16E8164")]
		protected void UserCode_CmdSetItemFaded__Int32__Boolean(int itemId, bool value)
		{
		}

		[Token(Token = "0x600254F")]
		[Address(RVA = "0x16E816C", Offset = "0x16E816C", VA = "0x16E816C")]
		protected static void InvokeUserCode_CmdSetItemFaded__Int32__Boolean(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x6002550")]
		[Address(RVA = "0x16E82F4", Offset = "0x16E82F4", VA = "0x16E82F4")]
		protected void UserCode_CmdSetItemHidden__Int32__Boolean(int itemId, bool value)
		{
		}

		[Token(Token = "0x6002551")]
		[Address(RVA = "0x16E82FC", Offset = "0x16E82FC", VA = "0x16E82FC")]
		protected static void InvokeUserCode_CmdSetItemHidden__Int32__Boolean(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x6002552")]
		[Address(RVA = "0x16E8484", Offset = "0x16E8484", VA = "0x16E8484")]
		protected void UserCode_CmdSetSelectedItemInternal__Nullable`1(int? itemId)
		{
		}

		[Token(Token = "0x6002553")]
		[Address(RVA = "0x16E8488", Offset = "0x16E8488", VA = "0x16E8488")]
		protected static void InvokeUserCode_CmdSetSelectedItemInternal__Nullable`1(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x6002554")]
		[Address(RVA = "0x16E8600", Offset = "0x16E8600", VA = "0x16E8600")]
		protected void UserCode_CmdSetInverseFadedItemInternal__Nullable`1(int? itemId)
		{
		}

		[Token(Token = "0x6002555")]
		[Address(RVA = "0x16E8604", Offset = "0x16E8604", VA = "0x16E8604")]
		protected static void InvokeUserCode_CmdSetInverseFadedItemInternal__Nullable`1(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x6002556")]
		[Address(RVA = "0x16E877C", Offset = "0x16E877C", VA = "0x16E877C")]
		protected void UserCode_CmdSetIsolatedItemInternal__Nullable`1(int? itemId)
		{
		}

		[Token(Token = "0x6002557")]
		[Address(RVA = "0x16E8780", Offset = "0x16E8780", VA = "0x16E8780")]
		protected static void InvokeUserCode_CmdSetIsolatedItemInternal__Nullable`1(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x6002558")]
		[Address(RVA = "0x16E88F8", Offset = "0x16E88F8", VA = "0x16E88F8")]
		protected void UserCode_CmdSetSubpartTypeInternal__SubpartType(SubpartType subpartType)
		{
		}

		[Token(Token = "0x6002559")]
		[Address(RVA = "0x16E88FC", Offset = "0x16E88FC", VA = "0x16E88FC")]
		protected static void InvokeUserCode_CmdSetSubpartTypeInternal__SubpartType(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x600255A")]
		[Address(RVA = "0x16E8A50", Offset = "0x16E8A50", VA = "0x16E8A50")]
		protected void UserCode_CmdSetSelectedSubpartInternal__Nullable`1__Nullable`1__Nullable`1(int? itemId, byte? colorId, SubpartType? subpartType)
		{
		}

		[Token(Token = "0x600255B")]
		[Address(RVA = "0x16E8A58", Offset = "0x16E8A58", VA = "0x16E8A58")]
		protected static void InvokeUserCode_CmdSetSelectedSubpartInternal__Nullable`1__Nullable`1__Nullable`1(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x600255C")]
		[Address(RVA = "0x16E8C70", Offset = "0x16E8C70", VA = "0x16E8C70")]
		protected void UserCode_CmdResetEditedItemsInternal()
		{
		}

		[Token(Token = "0x600255D")]
		[Address(RVA = "0x16E8C74", Offset = "0x16E8C74", VA = "0x16E8C74")]
		protected static void InvokeUserCode_CmdResetEditedItemsInternal(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x600255E")]
		[Address(RVA = "0x16E8DA4", Offset = "0x16E8DA4", VA = "0x16E8DA4")]
		protected void UserCode_CmdResetEditedItemsForSystemsInternal__SystemType[](Database.SystemType[] systems)
		{
		}

		[Token(Token = "0x600255F")]
		[Address(RVA = "0x16E8DA8", Offset = "0x16E8DA8", VA = "0x16E8DA8")]
		protected static void InvokeUserCode_CmdResetEditedItemsForSystemsInternal__SystemType[](NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x6002560")]
		[Address(RVA = "0x16E8EFC", Offset = "0x16E8EFC", VA = "0x16E8EFC")]
		protected void UserCode_CmdShowFoundResultInternal__Int32__Byte[](int anatomyItemId, byte[] commandId)
		{
		}

		[Token(Token = "0x6002561")]
		[Address(RVA = "0x16E8F00", Offset = "0x16E8F00", VA = "0x16E8F00")]
		protected static void InvokeUserCode_CmdShowFoundResultInternal__Int32__Byte[](NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x6002562")]
		[Address(RVA = "0x16E9088", Offset = "0x16E9088", VA = "0x16E9088")]
		protected void UserCode_CmdSetMaxSystemsCount__Int32(int value)
		{
		}

		[Token(Token = "0x6002563")]
		[Address(RVA = "0x16E908C", Offset = "0x16E908C", VA = "0x16E908C")]
		protected static void InvokeUserCode_CmdSetMaxSystemsCount__Int32(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x6002564")]
		[Address(RVA = "0x16E9204", Offset = "0x16E9204", VA = "0x16E9204")]
		protected void UserCode_CmdSetActiveAnimationInternal__String(string value)
		{
		}

		[Token(Token = "0x6002565")]
		[Address(RVA = "0x16E9208", Offset = "0x16E9208", VA = "0x16E9208")]
		protected static void InvokeUserCode_CmdSetActiveAnimationInternal__String(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x6002566")]
		[Address(RVA = "0x16E9380", Offset = "0x16E9380", VA = "0x16E9380")]
		protected void UserCode_CmdSetAnimationSpeedInternal__Single(float value)
		{
		}

		[Token(Token = "0x6002567")]
		[Address(RVA = "0x16E9384", Offset = "0x16E9384", VA = "0x16E9384")]
		protected static void InvokeUserCode_CmdSetAnimationSpeedInternal__Single(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x6002568")]
		[Address(RVA = "0x16E94F4", Offset = "0x16E94F4", VA = "0x16E94F4")]
		protected void UserCode_CmdSetAnimationTimeInternal__Single(float value)
		{
		}

		[Token(Token = "0x6002569")]
		[Address(RVA = "0x16E94F8", Offset = "0x16E94F8", VA = "0x16E94F8")]
		protected static void InvokeUserCode_CmdSetAnimationTimeInternal__Single(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x600256A")]
		[Address(RVA = "0x16E9668", Offset = "0x16E9668", VA = "0x16E9668")]
		protected void UserCode_TargetLoadAnatomyModel__NetworkConnection__SerializableMobileAnatomyModel__SerializableMobileAnatomySystemModel[]__SystemType[]__SerializableAnatomyItem[]__SerializableAnatomyItem[](NetworkConnection target, SerializableMobileAnatomyModel model, SerializableMobileAnatomySystemModel[] systemModels, Database.SystemType[] activeSystems, SerializableAnatomyItem[] hiddenItems, SerializableAnatomyItem[] fadedItems)
		{
		}

		[Token(Token = "0x600256B")]
		[Address(RVA = "0x16E97B0", Offset = "0x16E97B0", VA = "0x16E97B0")]
		protected static void InvokeUserCode_TargetLoadAnatomyModel__NetworkConnection__SerializableMobileAnatomyModel__SerializableMobileAnatomySystemModel[]__SystemType[]__SerializableAnatomyItem[]__SerializableAnatomyItem[](NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x600256C")]
		[Address(RVA = "0x16E99A0", Offset = "0x16E99A0", VA = "0x16E99A0")]
		protected void UserCode_RpcUpdateStructureLevel__SystemType__Int32(Database.SystemType system, int level)
		{
		}

		[Token(Token = "0x600256D")]
		[Address(RVA = "0x16E9A88", Offset = "0x16E9A88", VA = "0x16E9A88")]
		protected static void InvokeUserCode_RpcUpdateStructureLevel__SystemType__Int32(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x600256E")]
		[Address(RVA = "0x16E9BE0", Offset = "0x16E9BE0", VA = "0x16E9BE0")]
		protected void UserCode_RpcSetSystemActiveAsync__SystemType__Boolean(Database.SystemType systemType, bool value)
		{
		}

		[Token(Token = "0x600256F")]
		[Address(RVA = "0x16E9CAC", Offset = "0x16E9CAC", VA = "0x16E9CAC")]
		protected static void InvokeUserCode_RpcSetSystemActiveAsync__SystemType__Boolean(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x6002570")]
		[Address(RVA = "0x16E9E04", Offset = "0x16E9E04", VA = "0x16E9E04")]
		protected void UserCode_RpcToggleDatabaseTypeAsync__DatabaseType(DatabaseType databaseType)
		{
		}

		[Token(Token = "0x6002571")]
		[Address(RVA = "0x16E9EC0", Offset = "0x16E9EC0", VA = "0x16E9EC0")]
		protected static void InvokeUserCode_RpcToggleDatabaseTypeAsync__DatabaseType(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x6002572")]
		[Address(RVA = "0x16E9FE0", Offset = "0x16E9FE0", VA = "0x16E9FE0")]
		protected void UserCode_RpcSetItemFaded__Int32__Boolean(int itemId, bool value)
		{
		}

		[Token(Token = "0x6002573")]
		[Address(RVA = "0x16EA10C", Offset = "0x16EA10C", VA = "0x16EA10C")]
		protected static void InvokeUserCode_RpcSetItemFaded__Int32__Boolean(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x6002574")]
		[Address(RVA = "0x16EA260", Offset = "0x16EA260", VA = "0x16EA260")]
		protected void UserCode_RpcSetItemHidden__Int32__Boolean(int itemId, bool value)
		{
		}

		[Token(Token = "0x6002575")]
		[Address(RVA = "0x16EA38C", Offset = "0x16EA38C", VA = "0x16EA38C")]
		protected static void InvokeUserCode_RpcSetItemHidden__Int32__Boolean(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x6002576")]
		[Address(RVA = "0x16EA4E0", Offset = "0x16EA4E0", VA = "0x16EA4E0")]
		protected void UserCode_RpcSetSelectedItem__Nullable`1(int? itemId)
		{
		}

		[Token(Token = "0x6002577")]
		[Address(RVA = "0x16EA59C", Offset = "0x16EA59C", VA = "0x16EA59C")]
		protected static void InvokeUserCode_RpcSetSelectedItem__Nullable`1(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x6002578")]
		[Address(RVA = "0x16EA6E0", Offset = "0x16EA6E0", VA = "0x16EA6E0")]
		protected void UserCode_RpcSetInverseFadedItem__Nullable`1(int? itemId)
		{
		}

		[Token(Token = "0x6002579")]
		[Address(RVA = "0x16EA7C8", Offset = "0x16EA7C8", VA = "0x16EA7C8")]
		protected static void InvokeUserCode_RpcSetInverseFadedItem__Nullable`1(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x600257A")]
		[Address(RVA = "0x16EA90C", Offset = "0x16EA90C", VA = "0x16EA90C")]
		protected void UserCode_RpcSetIsolatedItem__Nullable`1(int? itemId)
		{
		}

		[Token(Token = "0x600257B")]
		[Address(RVA = "0x16EA9F4", Offset = "0x16EA9F4", VA = "0x16EA9F4")]
		protected static void InvokeUserCode_RpcSetIsolatedItem__Nullable`1(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x600257C")]
		[Address(RVA = "0x16EAB38", Offset = "0x16EAB38", VA = "0x16EAB38")]
		protected void UserCode_RpcSetSubpartType__SubpartType(SubpartType subpartType)
		{
		}

		[Token(Token = "0x600257D")]
		[Address(RVA = "0x16EAC10", Offset = "0x16EAC10", VA = "0x16EAC10")]
		protected static void InvokeUserCode_RpcSetSubpartType__SubpartType(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x600257E")]
		[Address(RVA = "0x16EAD30", Offset = "0x16EAD30", VA = "0x16EAD30")]
		protected void UserCode_RpcSetSelectedSubpart__Nullable`1__Nullable`1__Nullable`1(int? itemId, byte? colorId, SubpartType? subpartType)
		{
		}

		[Token(Token = "0x600257F")]
		[Address(RVA = "0x16EAE30", Offset = "0x16EAE30", VA = "0x16EAE30")]
		protected static void InvokeUserCode_RpcSetSelectedSubpart__Nullable`1__Nullable`1__Nullable`1(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x6002580")]
		[Address(RVA = "0x16EAF94", Offset = "0x16EAF94", VA = "0x16EAF94")]
		protected void UserCode_RpcResetEditedItems()
		{
		}

		[Token(Token = "0x6002581")]
		[Address(RVA = "0x16EB060", Offset = "0x16EB060", VA = "0x16EB060")]
		protected static void InvokeUserCode_RpcResetEditedItems(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x6002582")]
		[Address(RVA = "0x16EB15C", Offset = "0x16EB15C", VA = "0x16EB15C")]
		protected void UserCode_RpcResetEditedItemsForSystems__SystemType[](Database.SystemType[] systems)
		{
		}

		[Token(Token = "0x6002583")]
		[Address(RVA = "0x16EB230", Offset = "0x16EB230", VA = "0x16EB230")]
		protected static void InvokeUserCode_RpcResetEditedItemsForSystems__SystemType[](NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x6002584")]
		[Address(RVA = "0x16EB350", Offset = "0x16EB350", VA = "0x16EB350")]
		protected void UserCode_RpcShowFoundResult__Int32__Byte[](int anatomyItemId, byte[] commandId)
		{
		}

		[Token(Token = "0x6002585")]
		[Address(RVA = "0x16EB430", Offset = "0x16EB430", VA = "0x16EB430")]
		protected static void InvokeUserCode_RpcShowFoundResult__Int32__Byte[](NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x6002586")]
		[Address(RVA = "0x16EB584", Offset = "0x16EB584", VA = "0x16EB584")]
		protected void UserCode_RpcSetMaxSystemCount__Int32(int modelMaxSystemCount)
		{
		}

		[Token(Token = "0x6002587")]
		[Address(RVA = "0x16EB65C", Offset = "0x16EB65C", VA = "0x16EB65C")]
		protected static void InvokeUserCode_RpcSetMaxSystemCount__Int32(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x6002588")]
		[Address(RVA = "0x16EB7A0", Offset = "0x16EB7A0", VA = "0x16EB7A0")]
		protected void UserCode_RpcSetActiveAnimation__String(string value)
		{
		}

		[Token(Token = "0x6002589")]
		[Address(RVA = "0x16EB878", Offset = "0x16EB878", VA = "0x16EB878")]
		protected static void InvokeUserCode_RpcSetActiveAnimation__String(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x600258A")]
		[Address(RVA = "0x16EB9BC", Offset = "0x16EB9BC", VA = "0x16EB9BC")]
		protected void UserCode_RpcSetAnimationSpeed__Single(float value)
		{
		}

		[Token(Token = "0x600258B")]
		[Address(RVA = "0x16EBA9C", Offset = "0x16EBA9C", VA = "0x16EBA9C")]
		protected static void InvokeUserCode_RpcSetAnimationSpeed__Single(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x600258C")]
		[Address(RVA = "0x16EBBD8", Offset = "0x16EBBD8", VA = "0x16EBBD8")]
		protected void UserCode_RpcSetAnimationTime__Single(float value)
		{
		}

		[Token(Token = "0x600258D")]
		[Address(RVA = "0x16EBCB8", Offset = "0x16EBCB8", VA = "0x16EBCB8")]
		protected static void InvokeUserCode_RpcSetAnimationTime__Single(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x600258E")]
		[Address(RVA = "0x16EBDF4", Offset = "0x16EBDF4", VA = "0x16EBDF4")]
		static NetworkMobileModuleProvider()
		{
		}
	}
	[Token(Token = "0x2000746")]
	public static class NullableSubpartTypeWriter
	{
		[Token(Token = "0x60025A7")]
		[Address(RVA = "0x16E4C8C", Offset = "0x16E4C8C", VA = "0x16E4C8C")]
		public static void Write(this NetworkWriter writer, SubpartType? value)
		{
		}

		[Token(Token = "0x60025A8")]
		[Address(RVA = "0x16E8BF0", Offset = "0x16E8BF0", VA = "0x16E8BF0")]
		public static SubpartType? Read(this NetworkReader reader)
		{
			return null;
		}
	}
}
namespace Mobile.Networking.Modules
{
	[Token(Token = "0x2000747")]
	public interface INetworkUsersModule
	{
		[Token(Token = "0x60025A9")]
		IList<INetworkUser> GetConnectedUsers();
	}
	[Token(Token = "0x2000748")]
	public interface INetworkUser
	{
		[Token(Token = "0x170005C3")]
		uint NetId
		{
			[Token(Token = "0x60025AA")]
			get;
		}

		[Token(Token = "0x170005C4")]
		string Name
		{
			[Token(Token = "0x60025AB")]
			get;
		}

		[Token(Token = "0x170005C5")]
		bool IsLocalPlayer
		{
			[Token(Token = "0x60025AC")]
			get;
		}
	}
	[Token(Token = "0x2000749")]
	public interface IVoiceChatModule
	{
		[Token(Token = "0x60025AD")]
		bool IsMuted();

		[Token(Token = "0x60025AE")]
		void SetMuted(bool value);

		[Token(Token = "0x60025AF")]
		bool IsMuted(uint userNetworkId);

		[Token(Token = "0x60025B0")]
		void SetMuted(uint userNetworkId, bool value);
	}
	[Token(Token = "0x200074A")]
	public class NetworkAnimationModule<T> : IAnimationModule<T>
	{
		[Token(Token = "0x40021A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IAnimationModule<T> _animationControllerModule;

		[Token(Token = "0x40021A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly Action<string> _setActiveAnimationCommand;

		[Token(Token = "0x40021A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly Action<float> _setAnimationSpeedCommand;

		[Token(Token = "0x40021A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly Action<float> _setAnimationTimeCommand;

		[Token(Token = "0x170005C6")]
		public T ActiveAnimation
		{
			[Token(Token = "0x60025B2")]
			get
			{
				return (T)null;
			}
		}

		[Token(Token = "0x170005C7")]
		public float AnimationTime
		{
			[Token(Token = "0x60025B3")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170005C8")]
		public float AnimationSpeed
		{
			[Token(Token = "0x60025B4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60025B1")]
		public NetworkAnimationModule(IAnimationModule<T> animationControllerModule, Action<string> setActiveAnimationCommand, Action<float> setAnimationSpeedCommand, Action<float> setAnimationTimeCommand)
		{
		}

		[Token(Token = "0x60025B5")]
		public Task SetActiveAnimation(string value)
		{
			return null;
		}

		[Token(Token = "0x60025B6")]
		public void SetAnimationSpeed(float val)
		{
		}

		[Token(Token = "0x60025B7")]
		public void SetAnimationTime(float val)
		{
		}
	}
	[Token(Token = "0x200074B")]
	public class NetworkInverseFadeModule<T> : IInverseFadeModule<T> where T : IAnatomyItemInstance
	{
		[Token(Token = "0x40021A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IInverseFadeModule<T> _inverseFadeModule;

		[Token(Token = "0x40021AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly Action<int?> _setInverseFadedObjectCommand;

		[Token(Token = "0x170005C9")]
		public T InverseFadedObject
		{
			[Token(Token = "0x60025B8")]
			get
			{
				return (T)null;
			}
		}

		[Token(Token = "0x60025B9")]
		public NetworkInverseFadeModule(IInverseFadeModule<T> inverseFadeModule, Action<int?> setInverseFadedObjectCommand)
		{
		}

		[Token(Token = "0x60025BA")]
		public void SetInverseFadedObject(T item)
		{
		}
	}
	[Token(Token = "0x200074C")]
	public class NetworkIsolateModule<T> : IIsolateModule<T> where T : IFadeable, IAnatomyItemInstance
	{
		[Token(Token = "0x40021AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IIsolateModule<T> _isolateModule;

		[Token(Token = "0x40021AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly Action<int?> _setIsolatedCommand;

		[Token(Token = "0x170005CA")]
		public T IsolatedObject
		{
			[Token(Token = "0x60025BB")]
			get
			{
				return (T)null;
			}
		}

		[Token(Token = "0x60025BC")]
		public NetworkIsolateModule(IIsolateModule<T> isolateModule, Action<int?> setIsolatedCommand)
		{
		}

		[Token(Token = "0x60025BD")]
		public void SetIsolatedObject(T item)
		{
		}
	}
	[Token(Token = "0x200074D")]
	public class NetworkResetModule : IResetModule
	{
		[Token(Token = "0x40021AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly Action _resetEditedObjectsCommand;

		[Token(Token = "0x40021AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly Action<Database.SystemType[]> _resetEditedObjectsForSystemCommand;

		[Token(Token = "0x60025BE")]
		[Address(RVA = "0x16E1C00", Offset = "0x16E1C00", VA = "0x16E1C00")]
		public NetworkResetModule(Action resetEditedObjectsCommand, Action<Database.SystemType[]> resetEditedObjectsForSystemCommand)
		{
		}

		[Token(Token = "0x60025BF")]
		[Address(RVA = "0x16EFA14", Offset = "0x16EFA14", VA = "0x16EFA14", Slot = "4")]
		public void ResetEditedItems()
		{
		}

		[Token(Token = "0x60025C0")]
		[Address(RVA = "0x16EFA30", Offset = "0x16EFA30", VA = "0x16EFA30")]
		public void ResetEditedItemsForSystems(IEnumerable<Database.SystemType> systems)
		{
		}
	}
	[Token(Token = "0x200074E")]
	public class NetworkSearchResultModule : ISearchResultModule
	{
		[Token(Token = "0x40021AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly Func<int, Task> _showFoundResultCommand;

		[Token(Token = "0x60025C1")]
		[Address(RVA = "0x16E1C44", Offset = "0x16E1C44", VA = "0x16E1C44")]
		public NetworkSearchResultModule(Func<int, Task> showFoundResultCommand)
		{
		}

		[Token(Token = "0x60025C2")]
		[Address(RVA = "0x16EFAA8", Offset = "0x16EFAA8", VA = "0x16EFAA8", Slot = "4")]
		public Task ShowFoundResult(AnatomyItem anatomyItem)
		{
			return null;
		}
	}
	[Token(Token = "0x200074F")]
	public class NetworkSelectionModule : ISelectionModule<IMobileAnatomyItemInstance>
	{
		[Token(Token = "0x40021B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly ISelectionModule<IMobileAnatomyItemInstance> _selectionModule;

		[Token(Token = "0x40021B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly Action<int?> _selectObjectCommand;

		[Token(Token = "0x170005CB")]
		public IMobileAnatomyItemInstance SelectedObject
		{
			[Token(Token = "0x60025C3")]
			[Address(RVA = "0x16EFAD4", Offset = "0x16EFAD4", VA = "0x16EFAD4", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60025C4")]
		[Address(RVA = "0x16EFB74", Offset = "0x16EFB74", VA = "0x16EFB74", Slot = "5")]
		public Task SetSelectedObject(IMobileAnatomyItemInstance value, CancellationToken cancellationToken)
		{
			return null;
		}

		[Token(Token = "0x60025C5")]
		[Address(RVA = "0x16E1BBC", Offset = "0x16E1BBC", VA = "0x16E1BBC")]
		public NetworkSelectionModule(ISelectionModule<IMobileAnatomyItemInstance> selectionModule, Action<int?> selectObjectCommand)
		{
		}
	}
	[Token(Token = "0x2000750")]
	public class NetworkSubpartModule : ISubpartModule<ISubpartInstance>, ISubpartTypeModule
	{
		[Token(Token = "0x40021B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly ISubpartModule<ISubpartInstance> _subpartModule;

		[Token(Token = "0x40021B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly Action<SubpartType> _setSubpartTypeCommand;

		[Token(Token = "0x40021B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly Action<int?, byte?, SubpartType?> _setSelectedSubpartCommand;

		[Token(Token = "0x170005CC")]
		public SubpartType ActiveSubpartType
		{
			[Token(Token = "0x60025C6")]
			[Address(RVA = "0x16EFC8C", Offset = "0x16EFC8C", VA = "0x16EFC8C", Slot = "6")]
			get
			{
				return default(SubpartType);
			}
		}

		[Token(Token = "0x170005CD")]
		public ISubpartInstance SelectedSubpart
		{
			[Token(Token = "0x60025C7")]
			[Address(RVA = "0x16EFD2C", Offset = "0x16EFD2C", VA = "0x16EFD2C", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60025C8")]
		[Address(RVA = "0x16E1B5C", Offset = "0x16E1B5C", VA = "0x16E1B5C")]
		public NetworkSubpartModule(ISubpartModule<ISubpartInstance> subpartModule, Action<SubpartType> setSubpartTypeCommand, Action<int?, byte?, SubpartType?> setSelectedSubpartCommand)
		{
		}

		[Token(Token = "0x60025C9")]
		[Address(RVA = "0x16EFDCC", Offset = "0x16EFDCC", VA = "0x16EFDCC", Slot = "7")]
		public void SetSubpartType(SubpartType subpartType)
		{
		}

		[Token(Token = "0x60025CA")]
		[Address(RVA = "0x16EFDE8", Offset = "0x16EFDE8", VA = "0x16EFDE8", Slot = "5")]
		public void SetSelectedSubpart(ISubpartInstance subpartInstance)
		{
		}
	}
	[Token(Token = "0x2000751")]
	public class NetworkUsersModule : INetworkUsersModule
	{
		[Token(Token = "0x2000752")]
		private class NetworkUser : INetworkUser
		{
			[Token(Token = "0x40021B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public readonly MobileNetworkPlayerHandler MobileNetworkPlayerHandler;

			[Token(Token = "0x170005CE")]
			public uint NetId
			{
				[Token(Token = "0x60025CE")]
				[Address(RVA = "0x16F03F8", Offset = "0x16F03F8", VA = "0x16F03F8", Slot = "4")]
				[CompilerGenerated]
				get
				{
					return default(uint);
				}
			}

			[Token(Token = "0x170005CF")]
			public string Name
			{
				[Token(Token = "0x60025CF")]
				[Address(RVA = "0x16F0400", Offset = "0x16F0400", VA = "0x16F0400", Slot = "5")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005D0")]
			public bool IsLocalPlayer
			{
				[Token(Token = "0x60025D0")]
				[Address(RVA = "0x16F041C", Offset = "0x16F041C", VA = "0x16F041C", Slot = "6")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x60025CD")]
			[Address(RVA = "0x16F03C0", Offset = "0x16F03C0", VA = "0x16F03C0")]
			public NetworkUser(uint netId, MobileNetworkPlayerHandler mobileNetworkPlayerHandler)
			{
			}
		}

		[Token(Token = "0x60025CB")]
		[Address(RVA = "0x16F0080", Offset = "0x16F0080", VA = "0x16F0080", Slot = "4")]
		public IList<INetworkUser> GetConnectedUsers()
		{
			return null;
		}

		[Token(Token = "0x60025CC")]
		[Address(RVA = "0x16E1C74", Offset = "0x16E1C74", VA = "0x16E1C74")]
		public NetworkUsersModule()
		{
		}
	}
	[Token(Token = "0x2000753")]
	public interface IVoiceChatUser
	{
	}
	[Token(Token = "0x2000754")]
	public class VivoxVoiceChatModule : IVoiceChatModule
	{
		[Token(Token = "0x60025D1")]
		[Address(RVA = "0x16F0438", Offset = "0x16F0438", VA = "0x16F0438")]
		private static IParticipant GetParticipant(uint id)
		{
			return null;
		}

		[Token(Token = "0x60025D2")]
		[Address(RVA = "0x16F0850", Offset = "0x16F0850", VA = "0x16F0850", Slot = "5")]
		public void SetMuted(bool value)
		{
		}

		[Token(Token = "0x60025D3")]
		[Address(RVA = "0x16F0930", Offset = "0x16F0930", VA = "0x16F0930", Slot = "4")]
		public bool IsMuted()
		{
			return default(bool);
		}

		[Token(Token = "0x60025D4")]
		[Address(RVA = "0x16F0A08", Offset = "0x16F0A08", VA = "0x16F0A08", Slot = "6")]
		public bool IsMuted(uint userNetworkId)
		{
			return default(bool);
		}

		[Token(Token = "0x60025D5")]
		[Address(RVA = "0x16F0ABC", Offset = "0x16F0ABC", VA = "0x16F0ABC", Slot = "7")]
		public void SetMuted(uint userNetworkId, bool value)
		{
		}

		[Token(Token = "0x60025D6")]
		[Address(RVA = "0x16E1C7C", Offset = "0x16E1C7C", VA = "0x16E1C7C")]
		public VivoxVoiceChatModule()
		{
		}
	}
}
namespace Mobile.Modules
{
	[Token(Token = "0x2000757")]
	public interface IFadeable
	{
		[Token(Token = "0x60025DD")]
		void SetFaded(bool value);
	}
	[Token(Token = "0x2000758")]
	public class FadeModule<T> : IFadeModule<T> where T : IFadeable
	{
		[Token(Token = "0x40021BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly HashSet<T> _fadedObjects;

		[Token(Token = "0x170005D1")]
		public IReadOnlyCollection<T> FadedObjects
		{
			[Token(Token = "0x60025DE")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60025DF")]
		public FadeModule()
		{
		}

		[Token(Token = "0x60025E0")]
		public void SetFaded(T obj, bool value)
		{
		}
	}
	[Token(Token = "0x2000759")]
	public interface IInverseFadeModule<T>
	{
		[Token(Token = "0x170005D2")]
		T InverseFadedObject
		{
			[Token(Token = "0x60025E1")]
			get;
		}

		[Token(Token = "0x60025E2")]
		void SetInverseFadedObject(T item);
	}
	[Token(Token = "0x200075A")]
	public interface IIsolateModule<T>
	{
		[Token(Token = "0x170005D3")]
		T IsolatedObject
		{
			[Token(Token = "0x60025E3")]
			get;
		}

		[Token(Token = "0x60025E4")]
		void SetIsolatedObject(T item);
	}
	[Token(Token = "0x200075B")]
	public class InverseFadeModule : IInverseFadeModule<IMobileAnatomyItemInstance>
	{
		[Token(Token = "0x40021BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly IInstanceProvider<IMobileAnatomyItemInstanceCollection> _instanceProvider;

		[Token(Token = "0x40021BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly IInstanceCollectionModule<IMobileAnatomyItemInstanceCollection> _instanceModule;

		[Token(Token = "0x170005D4")]
		public IMobileAnatomyItemInstance InverseFadedObject
		{
			[Token(Token = "0x60025E5")]
			[Address(RVA = "0x16F0EC0", Offset = "0x16F0EC0", VA = "0x16F0EC0", Slot = "4")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60025E6")]
			[Address(RVA = "0x16F0EC8", Offset = "0x16F0EC8", VA = "0x16F0EC8")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x60025E7")]
		[Address(RVA = "0x16F0ED0", Offset = "0x16F0ED0", VA = "0x16F0ED0")]
		public InverseFadeModule(IInstanceProvider<IMobileAnatomyItemInstanceCollection> instanceProvider, IInstanceCollectionModule<IMobileAnatomyItemInstanceCollection> instanceModule)
		{
		}

		[Token(Token = "0x60025E8")]
		[Address(RVA = "0x16F0F14", Offset = "0x16F0F14", VA = "0x16F0F14", Slot = "5")]
		public void SetInverseFadedObject(IMobileAnatomyItemInstance item)
		{
		}
	}
	[Token(Token = "0x200075D")]
	public interface IResetModule
	{
		[Token(Token = "0x60025ED")]
		void ResetEditedItems();
	}
	[Token(Token = "0x200075E")]
	public interface ISearchResultModule
	{
		[Token(Token = "0x60025EE")]
		Task ShowFoundResult(AnatomyItem anatomyItem);
	}
	[Token(Token = "0x200075F")]
	public class IsolateModule : IIsolateModule<IMobileAnatomyItemInstance>
	{
		[Token(Token = "0x40021C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly IInstanceProvider<IMobileAnatomyItemInstanceCollection> _instanceProvider;

		[Token(Token = "0x40021C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly IInstanceCollectionModule<IMobileAnatomyItemInstanceCollection> _instanceModule;

		[Token(Token = "0x170005D5")]
		public IMobileAnatomyItemInstance IsolatedObject
		{
			[Token(Token = "0x60025EF")]
			[Address(RVA = "0x16F1AF4", Offset = "0x16F1AF4", VA = "0x16F1AF4", Slot = "4")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60025F0")]
			[Address(RVA = "0x16F1AFC", Offset = "0x16F1AFC", VA = "0x16F1AFC")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x60025F1")]
		[Address(RVA = "0x16F1B04", Offset = "0x16F1B04", VA = "0x16F1B04")]
		public IsolateModule(IInstanceProvider<IMobileAnatomyItemInstanceCollection> instanceProvider, IInstanceCollectionModule<IMobileAnatomyItemInstanceCollection> instanceModule)
		{
		}

		[Token(Token = "0x60025F2")]
		[Address(RVA = "0x16F1B48", Offset = "0x16F1B48", VA = "0x16F1B48", Slot = "5")]
		public void SetIsolatedObject(IMobileAnatomyItemInstance item)
		{
		}
	}
	[Token(Token = "0x2000763")]
	public interface ISubpartModule<T> : ISubpartTypeModule where T : ISubpartInstance
	{
		[Token(Token = "0x170005D6")]
		T SelectedSubpart
		{
			[Token(Token = "0x60025FE")]
			get;
		}

		[Token(Token = "0x60025FF")]
		void SetSelectedSubpart(T subpartInstance);
	}
	[Token(Token = "0x2000764")]
	public interface ISystemsContainerModule
	{
		[Token(Token = "0x170005D7")]
		bool IsVisible
		{
			[Token(Token = "0x6002600")]
			get;
		}

		[Token(Token = "0x6002601")]
		void SetVisible(bool value);
	}
	[Serializable]
	[Token(Token = "0x2000765")]
	public class MobileAnatomyInstanceFactorySettings
	{
		[Token(Token = "0x40021CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MobileAnatomyItemInstanceSettings MobileAnatomyItemInstanceSettings;

		[Token(Token = "0x40021CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Mobile.Views.AnatomyItemInstance AnatomyItemInstancePrefab;

		[Token(Token = "0x6002602")]
		[Address(RVA = "0x16F402C", Offset = "0x16F402C", VA = "0x16F402C")]
		public MobileAnatomyInstanceFactorySettings()
		{
		}
	}
	[Token(Token = "0x2000766")]
	public class MobileAnatomyInstanceFactory : IAnatomyInstanceFactory<MobileAnatomyItemInstanceCollection>
	{
		[Token(Token = "0x40021CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly MobileAnatomyInstanceFactorySettings _settings;

		[Token(Token = "0x40021CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly System.Collections.Generic.IReadOnlyDictionary<Database.SystemType, SystemInstanceConfig> _systemConfigs;

		[Token(Token = "0x40021D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly IMaterialInstanceProvider _materialProvider;

		[Token(Token = "0x40021D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly IAnatomyDatabase _anatomyDatabase;

		[Token(Token = "0x6002603")]
		[Address(RVA = "0x16F4034", Offset = "0x16F4034", VA = "0x16F4034")]
		public MobileAnatomyInstanceFactory(MobileAnatomyInstanceFactorySettings settings, System.Collections.Generic.IReadOnlyDictionary<Database.SystemType, SystemInstanceConfig> systemConfigs, IMaterialInstanceProvider materialProvider, IAnatomyDatabase anatomyDatabase)
		{
		}

		[Token(Token = "0x6002604")]
		[Address(RVA = "0x16F40A8", Offset = "0x16F40A8", VA = "0x16F40A8", Slot = "4")]
		public MobileAnatomyItemInstanceCollection CreateCollection(SystemGroup systemGroup, LocationType locationType, GameObject gameObject)
		{
			return null;
		}

		[Token(Token = "0x6002605")]
		[Address(RVA = "0x16F417C", Offset = "0x16F417C", VA = "0x16F417C", Slot = "5")]
		public void CreateInstance(MobileAnatomyItemInstanceCollection collection, AnatomyItem anatomyItem, System.Collections.Generic.IReadOnlyDictionary<string, ItemPoseData> itemPoseDatas)
		{
		}

		[Token(Token = "0x6002606")]
		[Address(RVA = "0x16F4B08", Offset = "0x16F4B08", VA = "0x16F4B08", Slot = "6")]
		public void InitializeCollection(MobileAnatomyItemInstanceCollection collection, System.Collections.Generic.IReadOnlyDictionary<string, Mesh> meshes, ItemMaterialDatabase itemMaterialDatabase)
		{
		}

		[Token(Token = "0x6002607")]
		[Address(RVA = "0x16F5484", Offset = "0x16F5484", VA = "0x16F5484", Slot = "7")]
		public void ReleaseCollection(MobileAnatomyItemInstanceCollection collection, bool releaseMeshes, bool releaseMaterials)
		{
		}
	}
	[Token(Token = "0x2000767")]
	public class MobileMemoryManagementModule
	{
		[Token(Token = "0x40021D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly IMemoryManagementModule _memoryManagementModule;

		[Token(Token = "0x40021D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly ISystemInfoModule _systemInfoModule;

		[Token(Token = "0x6002608")]
		[Address(RVA = "0x16F5A80", Offset = "0x16F5A80", VA = "0x16F5A80")]
		public MobileMemoryManagementModule(IMemoryManagementModule memoryManagementModule, ISystemInfoModule systemInfoModule)
		{
		}

		[Token(Token = "0x6002609")]
		[Address(RVA = "0x16F5AC4", Offset = "0x16F5AC4", VA = "0x16F5AC4")]
		public Task OnSystemsSetActiveCompleted(IEnumerable<Database.SystemType> systemTypes, DatabaseType databaseType, LocationType locationType, bool value)
		{
			return null;
		}

		[Token(Token = "0x600260A")]
		[Address(RVA = "0x16E1F44", Offset = "0x16E1F44", VA = "0x16E1F44")]
		public static int GetMaxSystemCount(int systemMemorySize)
		{
			return default(int);
		}

		[Token(Token = "0x600260B")]
		[Address(RVA = "0x16F5C68", Offset = "0x16F5C68", VA = "0x16F5C68")]
		public static bool ShouldReleaseMemory(int systemMemorySize)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000768")]
	public class MobileModelLoaderModule : IModelLoaderModule<IMobileAnatomyModel>
	{
		[StructLayout(3)]
		[Token(Token = "0x2000769")]
		[CompilerGenerated]
		private struct <PreLoad>d__10 : IAsyncStateMachine
		{
			[Token(Token = "0x40021D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40021D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x40021D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MobileModelLoaderModule <>4__this;

			[Token(Token = "0x40021DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public IEnumerable<DatabaseType> databaseTypes;

			[Token(Token = "0x40021DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TaskAwaiter<IEnumerable<IMobileAnatomyItemInstanceCollection>> <>u__1;

			[Token(Token = "0x6002616")]
			[Address(RVA = "0x16F64B4", Offset = "0x16F64B4", VA = "0x16F64B4", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6002617")]
			[Address(RVA = "0x16F6834", Offset = "0x16F6834", VA = "0x16F6834", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200076B")]
		[CompilerGenerated]
		private struct <LoadModel>d__11 : IAsyncStateMachine
		{
			[Token(Token = "0x40021DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40021E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x40021E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MobileModelLoaderModule <>4__this;

			[Token(Token = "0x40021E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public IMobileAnatomyModel model;

			[Token(Token = "0x40021E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private ISystemsModule <systemsModule>5__2;

			[Token(Token = "0x40021E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x600261C")]
			[Address(RVA = "0x16F68D0", Offset = "0x16F68D0", VA = "0x16F68D0", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x600261D")]
			[Address(RVA = "0x16F9598", Offset = "0x16F9598", VA = "0x16F9598", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x40021D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly IModuleProvider _moduleProvider;

		[Token(Token = "0x40021D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool _preloadStarted;

		[Token(Token = "0x170005D8")]
		public IMobileAnatomyModel ModelCurrentlyBeingLoaded
		{
			[Token(Token = "0x600260C")]
			[Address(RVA = "0x16F5C74", Offset = "0x16F5C74", VA = "0x16F5C74", Slot = "4")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600260D")]
			[Address(RVA = "0x16F5C7C", Offset = "0x16F5C7C", VA = "0x16F5C7C")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x600260E")]
		[Address(RVA = "0x16F5C84", Offset = "0x16F5C84", VA = "0x16F5C84")]
		public MobileModelLoaderModule(IModuleProvider moduleProvider)
		{
		}

		[Token(Token = "0x600260F")]
		[Address(RVA = "0x16F5CB4", Offset = "0x16F5CB4", VA = "0x16F5CB4", Slot = "5")]
		public IMobileAnatomyModel GetModel()
		{
			return null;
		}

		[Token(Token = "0x6002610")]
		[Address(RVA = "0x16F5CF4", Offset = "0x16F5CF4", VA = "0x16F5CF4", Slot = "6")]
		public Task LoadModel(IMobileAnatomyModel model, CancellationToken cancellationToken)
		{
			return null;
		}

		[Token(Token = "0x6002611")]
		[Address(RVA = "0x16F5DF8", Offset = "0x16F5DF8", VA = "0x16F5DF8")]
		private string GetFirstSpawnableId(DatabaseType databaseType)
		{
			return null;
		}

		[Token(Token = "0x6002612")]
		[Address(RVA = "0x16F6094", Offset = "0x16F6094", VA = "0x16F6094")]
		[AsyncStateMachine(typeof(<PreLoad>d__10))]
		private Task PreLoad(IEnumerable<DatabaseType> databaseTypes)
		{
			return null;
		}

		[Token(Token = "0x6002613")]
		[Address(RVA = "0x16F5CF8", Offset = "0x16F5CF8", VA = "0x16F5CF8")]
		[AsyncStateMachine(typeof(<LoadModel>d__11))]
		public Task LoadModel(IMobileAnatomyModel model)
		{
			return null;
		}

		[Token(Token = "0x6002614")]
		[Address(RVA = "0x16F6198", Offset = "0x16F6198", VA = "0x16F6198")]
		private IMobileAnatomyItemInstance GetItemInstance(int itemId)
		{
			return null;
		}

		[Token(Token = "0x6002615")]
		[Address(RVA = "0x16F63DC", Offset = "0x16F63DC", VA = "0x16F63DC")]
		private ISubpartInstance GetSubpartInstance(int itemId, byte colorId, SubpartType subpartType)
		{
			return null;
		}
	}
	[Token(Token = "0x200076C")]
	public class ResetModule : IResetModule
	{
		[StructLayout(3)]
		[Token(Token = "0x200076D")]
		[CompilerGenerated]
		private struct <ResetEditedItems>d__5 : IAsyncStateMachine
		{
			[Token(Token = "0x40021E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40021EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x40021EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public ResetModule <>4__this;

			[Token(Token = "0x40021EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x6002622")]
			[Address(RVA = "0x16F9830", Offset = "0x16F9830", VA = "0x16F9830", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6002623")]
			[Address(RVA = "0x16F9E0C", Offset = "0x16F9E0C", VA = "0x16F9E0C", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x40021E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly IHideModule<IMobileAnatomyItemInstance> _hideModule;

		[Token(Token = "0x40021E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly IFadeModule<IMobileAnatomyItemInstance> _fadeModule;

		[Token(Token = "0x40021E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly ISelectionModule<IMobileAnatomyItemInstance> _selectionModule;

		[Token(Token = "0x40021E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly IIsolateModule<IMobileAnatomyItemInstance> _isolateModule;

		[Token(Token = "0x600261E")]
		[Address(RVA = "0x16F95A4", Offset = "0x16F95A4", VA = "0x16F95A4")]
		public ResetModule(IHideModule<IMobileAnatomyItemInstance> hideModule, IFadeModule<IMobileAnatomyItemInstance> fadeModule, ISelectionModule<IMobileAnatomyItemInstance> selectionModule, IIsolateModule<IMobileAnatomyItemInstance> isolateModule)
		{
		}

		[Token(Token = "0x600261F")]
		[Address(RVA = "0x16F9618", Offset = "0x16F9618", VA = "0x16F9618", Slot = "4")]
		[AsyncStateMachine(typeof(<ResetEditedItems>d__5))]
		public void ResetEditedItems()
		{
		}
	}
	[Token(Token = "0x200076E")]
	public class SearchResultModule<TCollection, TInstance> : ISearchResultModule where TCollection : IInstanceCollection<TInstance> where TInstance : ISelectable
	{
		[StructLayout(3)]
		[Token(Token = "0x200076F")]
		[CompilerGenerated]
		private struct <ShowFoundResult>d__6 : IAsyncStateMachine
		{
			[Token(Token = "0x40021F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40021F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x40021F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public SearchResultModule<TCollection, TInstance> <>4__this;

			[Token(Token = "0x40021F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public AnatomyItem anatomyItem;

			[Token(Token = "0x40021F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private TInstance <instance>5__2;

			[Token(Token = "0x40021F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x6002626")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6002627")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x40021ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IInstanceProvider<TCollection> _instanceProvider;

		[Token(Token = "0x40021EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly ISystemsModule _systemsModule;

		[Token(Token = "0x40021EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly ILevelModule _levelModule;

		[Token(Token = "0x40021F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly ISelectionModule<TInstance> _selectionModule;

		[Token(Token = "0x40021F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IIsolateModule<TInstance> _isolateModule;

		[Token(Token = "0x6002624")]
		public SearchResultModule(IInstanceProvider<TCollection> instanceProvider, ISystemsModule systemsModule, ILevelModule levelModule, ISelectionModule<TInstance> selectionModule, IIsolateModule<TInstance> isolateModule)
		{
		}

		[Token(Token = "0x6002625")]
		[AsyncStateMachine(typeof(SearchResultModule<, >.<ShowFoundResult>d__6))]
		public Task ShowFoundResult(AnatomyItem anatomyItem)
		{
			return null;
		}
	}
	[Token(Token = "0x2000770")]
	public class SubpartModule<T> : ISubpartModule<T>, ISubpartTypeModule where T : ISubpartInstance
	{
		[Token(Token = "0x40021F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly ISubpartTypeModule _subpartModule;

		[Token(Token = "0x170005D9")]
		public SubpartType ActiveSubpartType
		{
			[Token(Token = "0x6002628")]
			get
			{
				return default(SubpartType);
			}
		}

		[Token(Token = "0x170005DA")]
		public T SelectedSubpart
		{
			[Token(Token = "0x6002629")]
			[CompilerGenerated]
			get
			{
				return (T)null;
			}
			[Token(Token = "0x600262A")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x600262B")]
		public SubpartModule(ISubpartTypeModule subpartModule)
		{
		}

		[Token(Token = "0x600262C")]
		public void SetSubpartType(SubpartType subpartType)
		{
		}

		[Token(Token = "0x600262D")]
		public void SetSelectedSubpart(T subpartInstance)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000771")]
	public class SystemsContainerModuleConfiguration
	{
		[Token(Token = "0x40021FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject GameObject;

		[Token(Token = "0x600262E")]
		[Address(RVA = "0x16F9E18", Offset = "0x16F9E18", VA = "0x16F9E18")]
		public SystemsContainerModuleConfiguration()
		{
		}
	}
	[Token(Token = "0x2000772")]
	public class SystemsContainerModule : ISystemsContainerModule
	{
		[Token(Token = "0x40021FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly SystemsContainerModuleConfiguration _configuration;

		[Token(Token = "0x170005DB")]
		public bool IsVisible
		{
			[Token(Token = "0x6002630")]
			[Address(RVA = "0x16F9E50", Offset = "0x16F9E50", VA = "0x16F9E50", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600262F")]
		[Address(RVA = "0x16F9E20", Offset = "0x16F9E20", VA = "0x16F9E20")]
		public SystemsContainerModule(SystemsContainerModuleConfiguration configuration)
		{
		}

		[Token(Token = "0x6002631")]
		[Address(RVA = "0x16F9E74", Offset = "0x16F9E74", VA = "0x16F9E74", Slot = "5")]
		public void SetVisible(bool value)
		{
		}
	}
	[Token(Token = "0x2000773")]
	public interface ISystemsResetModule
	{
		[Token(Token = "0x6002632")]
		void ResetEditedItemsForSystems(IEnumerable<Database.SystemType> systems);
	}
	[Token(Token = "0x2000774")]
	public class SystemsResetModule : ISystemsResetModule, IDisposable
	{
		[Token(Token = "0x2000775")]
		[CompilerGenerated]
		private sealed class <>c__DisplayClass5_0
		{
			[Token(Token = "0x40021FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public HashSet<Database.SystemType> systemsToReset;

			[Token(Token = "0x4002200")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public HashSet<Database.SystemType> remainingActiveSystems;

			[Token(Token = "0x4002201")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public IHideModule<IMobileAnatomyItemInstance> hideModule;

			[Token(Token = "0x4002202")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public IFadeModule<IMobileAnatomyItemInstance> fadeModule;

			[Token(Token = "0x4002203")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Func<AnatomyItem, bool> <>9__8;

			[Token(Token = "0x4002204")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Func<AnatomyItem, bool> <>9__9;

			[Token(Token = "0x4002205")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public Func<AnatomyItem, bool> <>9__10;

			[Token(Token = "0x4002206")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public Func<AnatomyItem, bool> <>9__11;

			[Token(Token = "0x6002637")]
			[Address(RVA = "0x16FA1B0", Offset = "0x16FA1B0", VA = "0x16FA1B0")]
			public <>c__DisplayClass5_0()
			{
			}

			[Token(Token = "0x6002638")]
			[Address(RVA = "0x16FA1B8", Offset = "0x16FA1B8", VA = "0x16FA1B8")]
			internal bool <ResetEditedItemsForSystems>b__0(AnatomyItem val)
			{
				return default(bool);
			}

			[Token(Token = "0x6002639")]
			[Address(RVA = "0x16FA214", Offset = "0x16FA214", VA = "0x16FA214")]
			internal bool <ResetEditedItemsForSystems>b__1(AnatomyItem val)
			{
				return default(bool);
			}

			[Token(Token = "0x600263A")]
			[Address(RVA = "0x16FA270", Offset = "0x16FA270", VA = "0x16FA270")]
			internal bool <ResetEditedItemsForSystems>b__2(AnatomyItem val)
			{
				return default(bool);
			}

			[Token(Token = "0x600263B")]
			[Address(RVA = "0x16FA2CC", Offset = "0x16FA2CC", VA = "0x16FA2CC")]
			internal bool <ResetEditedItemsForSystems>b__3(AnatomyItem val)
			{
				return default(bool);
			}

			[Token(Token = "0x600263C")]
			[Address(RVA = "0x16FA328", Offset = "0x16FA328", VA = "0x16FA328")]
			internal bool <ResetEditedItemsForSystems>b__4(IMobileAnatomyItemInstance item)
			{
				return default(bool);
			}

			[Token(Token = "0x600263D")]
			[Address(RVA = "0x16FA54C", Offset = "0x16FA54C", VA = "0x16FA54C")]
			internal bool <ResetEditedItemsForSystems>b__8(AnatomyItem val)
			{
				return default(bool);
			}

			[Token(Token = "0x600263E")]
			[Address(RVA = "0x16FA5A8", Offset = "0x16FA5A8", VA = "0x16FA5A8")]
			internal bool <ResetEditedItemsForSystems>b__9(AnatomyItem val)
			{
				return default(bool);
			}

			[Token(Token = "0x600263F")]
			[Address(RVA = "0x16FA604", Offset = "0x16FA604", VA = "0x16FA604")]
			internal void <ResetEditedItemsForSystems>b__5(IMobileAnatomyItemInstance obj)
			{
			}

			[Token(Token = "0x6002640")]
			[Address(RVA = "0x16FA6B4", Offset = "0x16FA6B4", VA = "0x16FA6B4")]
			internal bool <ResetEditedItemsForSystems>b__6(IMobileAnatomyItemInstance item)
			{
				return default(bool);
			}

			[Token(Token = "0x6002641")]
			[Address(RVA = "0x16FA8D8", Offset = "0x16FA8D8", VA = "0x16FA8D8")]
			internal bool <ResetEditedItemsForSystems>b__10(AnatomyItem val)
			{
				return default(bool);
			}

			[Token(Token = "0x6002642")]
			[Address(RVA = "0x16FA934", Offset = "0x16FA934", VA = "0x16FA934")]
			internal bool <ResetEditedItemsForSystems>b__11(AnatomyItem val)
			{
				return default(bool);
			}

			[Token(Token = "0x6002643")]
			[Address(RVA = "0x16FA990", Offset = "0x16FA990", VA = "0x16FA990")]
			internal void <ResetEditedItemsForSystems>b__7(IMobileAnatomyItemInstance obj)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000776")]
		[CompilerGenerated]
		private struct <ResetEditedItemsForSystems>d__5 : IAsyncStateMachine
		{
			[Token(Token = "0x4002207")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4002208")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4002209")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public IEnumerable<Database.SystemType> systems;

			[Token(Token = "0x400220A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public SystemsResetModule <>4__this;

			[Token(Token = "0x400220B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private <>c__DisplayClass5_0 <>8__1;

			[Token(Token = "0x400220C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private IIsolateModule<IMobileAnatomyItemInstance> <isolateModule>5__2;

			[Token(Token = "0x400220D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x6002644")]
			[Address(RVA = "0x16FAA40", Offset = "0x16FAA40", VA = "0x16FAA40", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6002645")]
			[Address(RVA = "0x16FBAE0", Offset = "0x16FBAE0", VA = "0x16FBAE0", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x40021FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly ISystemsModuleEvents _systemsModuleEvents;

		[Token(Token = "0x40021FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly ISystemsModule _systemsModule;

		[Token(Token = "0x40021FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly IModuleProvider _moduleProvider;

		[Token(Token = "0x6002633")]
		[Address(RVA = "0x16F9E9C", Offset = "0x16F9E9C", VA = "0x16F9E9C")]
		public SystemsResetModule(ISystemsModuleEvents systemsModuleEvents, ISystemsModule systemsModule, IModuleProvider moduleProvider)
		{
		}

		[Token(Token = "0x6002634")]
		[Address(RVA = "0x16F9FDC", Offset = "0x16F9FDC", VA = "0x16F9FDC")]
		private void OnSystemsSetActiveStarted(IEnumerable<Database.SystemType> systemTypes, DatabaseType databaseType, LocationType locationType, bool value)
		{
		}

		[Token(Token = "0x6002635")]
		[Address(RVA = "0x16F9FE8", Offset = "0x16F9FE8", VA = "0x16F9FE8", Slot = "4")]
		[AsyncStateMachine(typeof(<ResetEditedItemsForSystems>d__5))]
		public void ResetEditedItemsForSystems(IEnumerable<Database.SystemType> systems)
		{
		}

		[Token(Token = "0x6002636")]
		[Address(RVA = "0x16FA0C0", Offset = "0x16FA0C0", VA = "0x16FA0C0", Slot = "5")]
		public void Dispose()
		{
		}
	}
	[Token(Token = "0x2000777")]
	[CreateAssetMenu]
	public class DebugSystemInfoModule : ScriptableObject, ISystemInfoModule
	{
		[Token(Token = "0x400220E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private int _systemMemorySize;

		[Token(Token = "0x400220F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private bool _memoryLow;

		[Token(Token = "0x170005DC")]
		public int SystemMemorySize
		{
			[Token(Token = "0x6002646")]
			[Address(RVA = "0x16FBAEC", Offset = "0x16FBAEC", VA = "0x16FBAEC", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x14000087")]
		public event Action LowMemory
		{
			[Token(Token = "0x6002647")]
			[Address(RVA = "0x16FBAF4", Offset = "0x16FBAF4", VA = "0x16FBAF4", Slot = "5")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6002648")]
			[Address(RVA = "0x16FBB90", Offset = "0x16FBB90", VA = "0x16FBB90", Slot = "6")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6002649")]
		[Address(RVA = "0x16FBC2C", Offset = "0x16FBC2C", VA = "0x16FBC2C")]
		public DebugSystemInfoModule()
		{
		}
	}
	[Token(Token = "0x2000778")]
	public class MobileModuleProvider : MonoBehaviour, IAnatomyModuleProvider
	{
		[Token(Token = "0x2000779")]
		private class MobileModuleProviderCallbacks : IDisposable
		{
			[Token(Token = "0x400221F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private readonly ISystemsModuleEvents _systemsModuleEvents;

			[Token(Token = "0x4002220")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private readonly MobileMemoryManagementModule _mobileMemoryManagementModule;

			[Token(Token = "0x6002655")]
			[Address(RVA = "0x16FCDE8", Offset = "0x16FCDE8", VA = "0x16FCDE8")]
			internal MobileModuleProviderCallbacks(ISystemsModuleEvents systemsModuleEvents, MobileMemoryManagementModule mobileMemoryManagementModule)
			{
			}

			[Token(Token = "0x6002656")]
			[Address(RVA = "0x16FD084", Offset = "0x16FD084", VA = "0x16FD084", Slot = "4")]
			public void Dispose()
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200077B")]
		[CompilerGenerated]
		private struct <Awake>d__18 : IAsyncStateMachine
		{
			[Token(Token = "0x4002228")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4002229")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x400222A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public MobileModuleProvider <>4__this;

			[Token(Token = "0x400222B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x600265F")]
			[Address(RVA = "0x16FD478", Offset = "0x16FD478", VA = "0x16FD478", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6002660")]
			[Address(RVA = "0x16FD9E8", Offset = "0x16FD9E8", VA = "0x16FD9E8", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200077C")]
		[CompilerGenerated]
		private struct <Start>d__19 : IAsyncStateMachine
		{
			[Token(Token = "0x400222C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x400222D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x400222E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public MobileModuleProvider <>4__this;

			[Token(Token = "0x400222F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x6002661")]
			[Address(RVA = "0x16FD9F4", Offset = "0x16FD9F4", VA = "0x16FD9F4", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6002662")]
			[Address(RVA = "0x16FDF40", Offset = "0x16FDF40", VA = "0x16FDF40", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4002211")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MobileAnatomyInstanceFactorySettings _mobileAnatomyInstanceFactorySettings;

		[Token(Token = "0x4002212")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AnatomyInstanceProviderSettings _anatomyInstanceProviderSettings;

		[Token(Token = "0x4002213")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private EducationLevel _educationLevel;

		[Token(Token = "0x4002214")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private SerializableAnatomyDatabaseFactory _databaseFactory;

		[Token(Token = "0x4002215")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private SystemsContainerModuleConfiguration _systemsContainerModuleConfiguration;

		[Token(Token = "0x4002216")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private DebugSystemInfoModule _debugSystemInfoModule;

		[Token(Token = "0x4002217")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private AnimationControllerModuleSettings _animationControllerModuleSettings;

		[Token(Token = "0x4002218")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private ModuleProviderBehaviour _singlePlayerModuleProvider;

		[Token(Token = "0x4002219")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private AnatomyConfiguration _anatomyConfiguration;

		[Token(Token = "0x400221A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private AnatomyLocalizationSettings _anatomyLocalizationSettings;

		[Token(Token = "0x400221B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private readonly List<IDisposable> _disposables;

		[Token(Token = "0x400221C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private readonly CancellationTokenSource _disposeCancellationTokenSource;

		[Token(Token = "0x400221E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly MobileAnatomyModel StartModel;

		[Token(Token = "0x170005DD")]
		public bool Initialized
		{
			[Token(Token = "0x600264A")]
			[Address(RVA = "0x16FBC34", Offset = "0x16FBC34", VA = "0x16FBC34", Slot = "5")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600264B")]
			[Address(RVA = "0x16FBC3C", Offset = "0x16FBC3C", VA = "0x16FBC3C")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x600264C")]
		[Address(RVA = "0x16FBC48", Offset = "0x16FBC48", VA = "0x16FBC48", Slot = "4")]
		public Task Initialize(EducationLevel educationLevel)
		{
			return null;
		}

		[Token(Token = "0x600264D")]
		[Address(RVA = "0x16FBC88", Offset = "0x16FBC88", VA = "0x16FBC88")]
		[AsyncStateMachine(typeof(<Awake>d__18))]
		private void Awake()
		{
		}

		[Token(Token = "0x600264E")]
		[Address(RVA = "0x16FBD40", Offset = "0x16FBD40", VA = "0x16FBD40")]
		[AsyncStateMachine(typeof(<Start>d__19))]
		private void Start()
		{
		}

		[Token(Token = "0x600264F")]
		[Address(RVA = "0x16FBDF8", Offset = "0x16FBDF8", VA = "0x16FBDF8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6002650")]
		[Address(RVA = "0x16FBF10", Offset = "0x16FBF10", VA = "0x16FBF10")]
		private void RegisterModules(ModuleProvider moduleProvider, IAssetInstanceProvider<ItemMeshDatabase> meshInstanceProvider, IAssetInstanceProvider<ItemMaterialDatabase> materialInstanceProvider)
		{
		}

		[Token(Token = "0x6002651")]
		[Address(RVA = "0x16FCCB8", Offset = "0x16FCCB8", VA = "0x16FCCB8")]
		private static IDisposable RegisterCallbacks(ISystemsModuleEvents systemsModuleEvents, MobileMemoryManagementModule mobileMemoryManagementModule)
		{
			return null;
		}

		[Token(Token = "0x6002652")]
		[Address(RVA = "0x16FCE2C", Offset = "0x16FCE2C", VA = "0x16FCE2C")]
		public MobileModuleProvider()
		{
		}
	}
}
namespace Mobile.Models
{
	[Token(Token = "0x200077E")]
	public interface IMobileAnatomyModel
	{
		[Token(Token = "0x170005DE")]
		SubpartType ActiveSubpartType
		{
			[Token(Token = "0x6002665")]
			get;
		}

		[Token(Token = "0x170005DF")]
		DatabaseType ActiveDatabaseType
		{
			[Token(Token = "0x6002666")]
			get;
		}

		[Token(Token = "0x170005E0")]
		IReadOnlyCollection<Database.SystemType> ActiveSystems
		{
			[Token(Token = "0x6002667")]
			get;
		}

		[Token(Token = "0x170005E1")]
		System.Collections.Generic.IReadOnlyDictionary<Database.SystemType, int> SystemStructureLevels
		{
			[Token(Token = "0x6002668")]
			get;
		}

		[Token(Token = "0x170005E2")]
		int? SelectedObject
		{
			[Token(Token = "0x6002669")]
			get;
		}

		[Token(Token = "0x170005E3")]
		int? InverseFadedObject
		{
			[Token(Token = "0x600266A")]
			get;
		}

		[Token(Token = "0x170005E4")]
		int? IsolatedObject
		{
			[Token(Token = "0x600266B")]
			get;
		}

		[Token(Token = "0x170005E5")]
		IEnumerable<int> HiddenObjects
		{
			[Token(Token = "0x600266C")]
			get;
		}

		[Token(Token = "0x170005E6")]
		IEnumerable<int> FadedObjects
		{
			[Token(Token = "0x600266D")]
			get;
		}

		[Token(Token = "0x170005E7")]
		(int ItemId, byte ColorId, SubpartType SubpartType)? SelectedSubpart
		{
			[Token(Token = "0x600266E")]
			get;
		}

		[Token(Token = "0x170005E8")]
		int MaxSystemCount
		{
			[Token(Token = "0x600266F")]
			get;
		}

		[Token(Token = "0x170005E9")]
		string AnimatedObject
		{
			[Token(Token = "0x6002670")]
			get;
		}
	}
	[Token(Token = "0x200077F")]
	public class MobileAnatomyModel : IMobileAnatomyModel
	{
		[Token(Token = "0x170005EA")]
		public SubpartType ActiveSubpartType
		{
			[Token(Token = "0x6002671")]
			[Address(RVA = "0x16FE154", Offset = "0x16FE154", VA = "0x16FE154", Slot = "4")]
			[CompilerGenerated]
			get
			{
				return default(SubpartType);
			}
			[Token(Token = "0x6002672")]
			[Address(RVA = "0x16FE15C", Offset = "0x16FE15C", VA = "0x16FE15C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170005EB")]
		public DatabaseType ActiveDatabaseType
		{
			[Token(Token = "0x6002673")]
			[Address(RVA = "0x16FE164", Offset = "0x16FE164", VA = "0x16FE164", Slot = "5")]
			[CompilerGenerated]
			get
			{
				return default(DatabaseType);
			}
			[Token(Token = "0x6002674")]
			[Address(RVA = "0x16FE16C", Offset = "0x16FE16C", VA = "0x16FE16C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170005EC")]
		public IReadOnlyCollection<Database.SystemType> ActiveSystems
		{
			[Token(Token = "0x6002675")]
			[Address(RVA = "0x16FE174", Offset = "0x16FE174", VA = "0x16FE174", Slot = "6")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6002676")]
			[Address(RVA = "0x16FE17C", Offset = "0x16FE17C", VA = "0x16FE17C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170005ED")]
		public System.Collections.Generic.IReadOnlyDictionary<Database.SystemType, int> SystemStructureLevels
		{
			[Token(Token = "0x6002677")]
			[Address(RVA = "0x16FE184", Offset = "0x16FE184", VA = "0x16FE184", Slot = "7")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6002678")]
			[Address(RVA = "0x16FE18C", Offset = "0x16FE18C", VA = "0x16FE18C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170005EE")]
		public int? InverseFadedObject
		{
			[Token(Token = "0x6002679")]
			[Address(RVA = "0x16FE194", Offset = "0x16FE194", VA = "0x16FE194", Slot = "9")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600267A")]
			[Address(RVA = "0x16FE19C", Offset = "0x16FE19C", VA = "0x16FE19C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170005EF")]
		public int? IsolatedObject
		{
			[Token(Token = "0x600267B")]
			[Address(RVA = "0x16FE1A4", Offset = "0x16FE1A4", VA = "0x16FE1A4", Slot = "10")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600267C")]
			[Address(RVA = "0x16FE1AC", Offset = "0x16FE1AC", VA = "0x16FE1AC")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170005F0")]
		public int? SelectedObject
		{
			[Token(Token = "0x600267D")]
			[Address(RVA = "0x16FE1B4", Offset = "0x16FE1B4", VA = "0x16FE1B4", Slot = "8")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600267E")]
			[Address(RVA = "0x16FE1BC", Offset = "0x16FE1BC", VA = "0x16FE1BC")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170005F1")]
		public (int ItemId, byte ColorId, SubpartType SubpartType)? SelectedSubpart
		{
			[Token(Token = "0x600267F")]
			[Address(RVA = "0x16FE1C4", Offset = "0x16FE1C4", VA = "0x16FE1C4", Slot = "13")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6002680")]
			[Address(RVA = "0x16FE1D0", Offset = "0x16FE1D0", VA = "0x16FE1D0")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170005F2")]
		public int MaxSystemCount
		{
			[Token(Token = "0x6002681")]
			[Address(RVA = "0x16FE1D8", Offset = "0x16FE1D8", VA = "0x16FE1D8", Slot = "14")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002682")]
			[Address(RVA = "0x16FE1E0", Offset = "0x16FE1E0", VA = "0x16FE1E0")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170005F3")]
		public IEnumerable<int> HiddenObjects
		{
			[Token(Token = "0x6002683")]
			[Address(RVA = "0x16FE1E8", Offset = "0x16FE1E8", VA = "0x16FE1E8", Slot = "11")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6002684")]
			[Address(RVA = "0x16FE1F0", Offset = "0x16FE1F0", VA = "0x16FE1F0")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170005F4")]
		public IEnumerable<int> FadedObjects
		{
			[Token(Token = "0x6002685")]
			[Address(RVA = "0x16FE1F8", Offset = "0x16FE1F8", VA = "0x16FE1F8", Slot = "12")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6002686")]
			[Address(RVA = "0x16FE200", Offset = "0x16FE200", VA = "0x16FE200")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170005F5")]
		public string AnimatedObject
		{
			[Token(Token = "0x6002687")]
			[Address(RVA = "0x16FE208", Offset = "0x16FE208", VA = "0x16FE208", Slot = "15")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6002688")]
			[Address(RVA = "0x16FE210", Offset = "0x16FE210", VA = "0x16FE210")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6002689")]
		[Address(RVA = "0x16EEEF0", Offset = "0x16EEEF0", VA = "0x16EEEF0")]
		public MobileAnatomyModel()
		{
		}
	}
}
namespace Mobile.FuncCommands
{
	[Token(Token = "0x2000780")]
	public class SetFadedFuncCommand<T> : IFuncCommand
	{
		[Token(Token = "0x400223D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public readonly T Item;

		[Token(Token = "0x400223E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly bool _value;

		[Token(Token = "0x400223F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly bool _previousValue;

		[Token(Token = "0x4002240")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly INetworkModuleProviderFactory _moduleProviderFactory;

		[Token(Token = "0x600268A")]
		public SetFadedFuncCommand(T item, bool value, INetworkModuleProviderFactory moduleProviderFactory)
		{
		}

		[Token(Token = "0x600268B")]
		public bool Execute(bool useAnimation)
		{
			return default(bool);
		}

		[Token(Token = "0x600268C")]
		public bool UnExecute(bool useAnimation)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000781")]
	public class SetFadeOthersFuncCommand : IFuncCommand
	{
		[Token(Token = "0x4002241")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly IMobileAnatomyItemInstance _item;

		[Token(Token = "0x4002242")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly IMobileAnatomyItemInstance _previousItem;

		[Token(Token = "0x4002243")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly INetworkModuleProviderFactory _moduleProviderFactory;

		[Token(Token = "0x600268D")]
		[Address(RVA = "0x16DD068", Offset = "0x16DD068", VA = "0x16DD068")]
		public SetFadeOthersFuncCommand(IMobileAnatomyItemInstance item, INetworkModuleProviderFactory moduleProviderFactory)
		{
		}

		[Token(Token = "0x600268E")]
		[Address(RVA = "0x16FE218", Offset = "0x16FE218", VA = "0x16FE218", Slot = "4")]
		public bool Execute(bool useAnimation)
		{
			return default(bool);
		}

		[Token(Token = "0x600268F")]
		[Address(RVA = "0x16FE3D8", Offset = "0x16FE3D8", VA = "0x16FE3D8", Slot = "5")]
		public bool UnExecute(bool useAnimation)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000782")]
	public class SetHiddenFuncCommand<T> : IFuncCommand
	{
		[Token(Token = "0x4002244")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public readonly T Item;

		[Token(Token = "0x4002245")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly bool _value;

		[Token(Token = "0x4002246")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly bool _previousValue;

		[Token(Token = "0x4002247")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly INetworkModuleProviderFactory _moduleProviderFactory;

		[Token(Token = "0x6002690")]
		public SetHiddenFuncCommand(T item, bool value, INetworkModuleProviderFactory moduleProviderFactory)
		{
		}

		[Token(Token = "0x6002691")]
		public bool Execute(bool useAnimation)
		{
			return default(bool);
		}

		[Token(Token = "0x6002692")]
		public bool UnExecute(bool useAnimation)
		{
			return default(bool);
		}
	}
}
namespace Mobile.Actions.Interaction
{
	[Token(Token = "0x2000783")]
	public class CameraScreenPointRaycastController : IRaycastController
	{
		[Token(Token = "0x4002248")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly RaycastController _raycastController;

		[Token(Token = "0x170005F6")]
		public RaycastHit LastHit
		{
			[Token(Token = "0x6002694")]
			[Address(RVA = "0x16FE710", Offset = "0x16FE710", VA = "0x16FE710", Slot = "4")]
			get
			{
				return default(RaycastHit);
			}
		}

		[Token(Token = "0x170005F7")]
		public Collider LastHitCollider
		{
			[Token(Token = "0x6002695")]
			[Address(RVA = "0x16FE738", Offset = "0x16FE738", VA = "0x16FE738", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002693")]
		[Address(RVA = "0x16FE598", Offset = "0x16FE598", VA = "0x16FE598")]
		public CameraScreenPointRaycastController(RaycastControllerSettings settings, ITapProcessingModule tapProcessingModule, IReadOnlyProperty<Camera> cameraProperty)
		{
		}

		[Token(Token = "0x6002696")]
		[Address(RVA = "0x16FE754", Offset = "0x16FE754", VA = "0x16FE754", Slot = "6")]
		public bool Raycast()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000785")]
	public interface ISelectionAction<out T>
	{
		[Token(Token = "0x170005F8")]
		T SelectedObject
		{
			[Token(Token = "0x6002699")]
			get;
		}

		[Token(Token = "0x14000088")]
		event Action<T> SelectionChanged;
	}
	[Token(Token = "0x2000786")]
	public interface ITapProcessingModule
	{
		[Token(Token = "0x170005F9")]
		Vector2 LastTapPosition
		{
			[Token(Token = "0x60026A0")]
			get;
		}

		[Token(Token = "0x14000089")]
		event Action Tapped;

		[Token(Token = "0x1400008A")]
		event Action DoubleTapped;
	}
	[Token(Token = "0x2000787")]
	public class MouseTapProcessingModule : ITapProcessingModule, IUpdatable
	{
		[Token(Token = "0x400224B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly TapProcessingModule _tapProcessingModule;

		[Token(Token = "0x170005FA")]
		public Vector2 LastTapPosition
		{
			[Token(Token = "0x60026A5")]
			[Address(RVA = "0x16FEB94", Offset = "0x16FEB94", VA = "0x16FEB94", Slot = "8")]
			get
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x1400008B")]
		public event Action Tapped
		{
			[Token(Token = "0x60026A1")]
			[Address(RVA = "0x16FE8C4", Offset = "0x16FE8C4", VA = "0x16FE8C4", Slot = "4")]
			add
			{
			}
			[Token(Token = "0x60026A2")]
			[Address(RVA = "0x16FE978", Offset = "0x16FE978", VA = "0x16FE978", Slot = "5")]
			remove
			{
			}
		}

		[Token(Token = "0x1400008C")]
		public event Action DoubleTapped
		{
			[Token(Token = "0x60026A3")]
			[Address(RVA = "0x16FEA2C", Offset = "0x16FEA2C", VA = "0x16FEA2C", Slot = "6")]
			add
			{
			}
			[Token(Token = "0x60026A4")]
			[Address(RVA = "0x16FEAE0", Offset = "0x16FEAE0", VA = "0x16FEAE0", Slot = "7")]
			remove
			{
			}
		}

		[Token(Token = "0x60026A6")]
		[Address(RVA = "0x16FEBB0", Offset = "0x16FEBB0", VA = "0x16FEBB0")]
		public MouseTapProcessingModule(TapProcessorSettings settings)
		{
		}

		[Token(Token = "0x60026A7")]
		[Address(RVA = "0x16FEE84", Offset = "0x16FEE84", VA = "0x16FEE84", Slot = "9")]
		public void Update()
		{
		}
	}
	[Token(Token = "0x2000789")]
	public class SelectionAction<T> : IDisposable, ISelectionAction<T>
	{
		[Token(Token = "0x400224F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IAction _selectAction;

		[Token(Token = "0x4002250")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IRaycastController _raycastController;

		[Token(Token = "0x4002251")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IResolver _componentResolver;

		[Token(Token = "0x170005FB")]
		public T SelectedObject
		{
			[Token(Token = "0x60026AC")]
			[CompilerGenerated]
			get
			{
				return (T)null;
			}
			[Token(Token = "0x60026AD")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1400008D")]
		public event Action<T> SelectionChanged
		{
			[Token(Token = "0x60026AE")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60026AF")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x60026B0")]
		public SelectionAction(IAction selectAction, IRaycastController raycastController, IResolver componentResolver)
		{
		}

		[Token(Token = "0x60026B1")]
		private void OnSelectAction()
		{
		}

		[Token(Token = "0x60026B2")]
		public void Dispose()
		{
		}
	}
	[Token(Token = "0x200078A")]
	[Flags]
	public enum TapEvent
	{
		[Token(Token = "0x4002255")]
		None = 0,
		[Token(Token = "0x4002256")]
		Tap = 1,
		[Token(Token = "0x4002257")]
		DoubleTap = 2,
		[Token(Token = "0x4002258")]
		All = -1
	}
	[Token(Token = "0x200078B")]
	public class TapAction : IAction, IDisposable
	{
		[Token(Token = "0x4002259")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly ITapProcessingModule _tapProcessingModule;

		[Token(Token = "0x400225A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly IReadOnlyProperty<TapEvent> _tapEventProperty;

		[Token(Token = "0x1400008E")]
		public event Action Action
		{
			[Token(Token = "0x60026B3")]
			[Address(RVA = "0x16FF250", Offset = "0x16FF250", VA = "0x16FF250", Slot = "4")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60026B4")]
			[Address(RVA = "0x16FF2EC", Offset = "0x16FF2EC", VA = "0x16FF2EC", Slot = "5")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x60026B5")]
		[Address(RVA = "0x16FF388", Offset = "0x16FF388", VA = "0x16FF388")]
		public TapAction(ITapProcessingModule tapProcessingModule, IReadOnlyProperty<TapEvent> tapEventProperty)
		{
		}

		[Token(Token = "0x60026B6")]
		[Address(RVA = "0x16FF540", Offset = "0x16FF540", VA = "0x16FF540")]
		private void OnTapped()
		{
		}

		[Token(Token = "0x60026B7")]
		[Address(RVA = "0x16FF608", Offset = "0x16FF608", VA = "0x16FF608")]
		private void OnDoubleTapped()
		{
		}

		[Token(Token = "0x60026B8")]
		[Address(RVA = "0x16FF6D0", Offset = "0x16FF6D0", VA = "0x16FF6D0", Slot = "6")]
		public void Dispose()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200078C")]
	public class TapProcessorSettings
	{
		[Token(Token = "0x400225C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float SingleTapTime;

		[Token(Token = "0x400225D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float DoubleTapTime;

		[Token(Token = "0x60026B9")]
		[Address(RVA = "0x16FF864", Offset = "0x16FF864", VA = "0x16FF864")]
		public TapProcessorSettings()
		{
		}
	}
	[Token(Token = "0x200078D")]
	public class TapProcessingModule : ITapProcessingModule, IUpdatable
	{
		[Token(Token = "0x400225E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly TapProcessorSettings _settings;

		[Token(Token = "0x400225F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly IReadOnlyProperty<bool> _touchStateProperty;

		[Token(Token = "0x4002260")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly IReadOnlyProperty<Vector2> _touchPositionProperty;

		[Token(Token = "0x4002261")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float _lastTouchBeganTime;

		[Token(Token = "0x4002262")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float _lastTouchReleasedTime;

		[Token(Token = "0x4002263")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool _lastTouchState;

		[Token(Token = "0x4002264")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector2 _touchPosition;

		[Token(Token = "0x170005FC")]
		public Vector2 LastTapPosition
		{
			[Token(Token = "0x60026BA")]
			[Address(RVA = "0x16FF86C", Offset = "0x16FF86C", VA = "0x16FF86C", Slot = "8")]
			[CompilerGenerated]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x60026BB")]
			[Address(RVA = "0x16FF874", Offset = "0x16FF874", VA = "0x16FF874")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1400008F")]
		public event Action Tapped
		{
			[Token(Token = "0x60026BC")]
			[Address(RVA = "0x16FE8DC", Offset = "0x16FE8DC", VA = "0x16FE8DC", Slot = "4")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60026BD")]
			[Address(RVA = "0x16FE990", Offset = "0x16FE990", VA = "0x16FE990", Slot = "5")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000090")]
		public event Action DoubleTapped
		{
			[Token(Token = "0x60026BE")]
			[Address(RVA = "0x16FEA44", Offset = "0x16FEA44", VA = "0x16FEA44", Slot = "6")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60026BF")]
			[Address(RVA = "0x16FEAF8", Offset = "0x16FEAF8", VA = "0x16FEAF8", Slot = "7")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x60026C0")]
		[Address(RVA = "0x16FEE08", Offset = "0x16FEE08", VA = "0x16FEE08")]
		public TapProcessingModule(IReadOnlyProperty<bool> touchStateProperty, IReadOnlyProperty<Vector2> touchPositionProperty, TapProcessorSettings settings)
		{
		}

		[Token(Token = "0x60026C1")]
		[Address(RVA = "0x16FEE9C", Offset = "0x16FEE9C", VA = "0x16FEE9C", Slot = "9")]
		public void Update()
		{
		}

		[Token(Token = "0x60026C2")]
		[Address(RVA = "0x16FF87C", Offset = "0x16FF87C", VA = "0x16FF87C")]
		private static bool IsPointerOverUiObject(Vector2 position)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200078E")]
	public class TouchTapProcessingModule : ITapProcessingModule, IUpdatable
	{
		[Token(Token = "0x4002268")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly TapProcessingModule _tapProcessingModule;

		[Token(Token = "0x170005FD")]
		public Vector2 LastTapPosition
		{
			[Token(Token = "0x60026C7")]
			[Address(RVA = "0x1700A08", Offset = "0x1700A08", VA = "0x1700A08", Slot = "8")]
			get
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x14000091")]
		public event Action Tapped
		{
			[Token(Token = "0x60026C3")]
			[Address(RVA = "0x1700998", Offset = "0x1700998", VA = "0x1700998", Slot = "4")]
			add
			{
			}
			[Token(Token = "0x60026C4")]
			[Address(RVA = "0x17009B4", Offset = "0x17009B4", VA = "0x17009B4", Slot = "5")]
			remove
			{
			}
		}

		[Token(Token = "0x14000092")]
		public event Action DoubleTapped
		{
			[Token(Token = "0x60026C5")]
			[Address(RVA = "0x17009D0", Offset = "0x17009D0", VA = "0x17009D0", Slot = "6")]
			add
			{
			}
			[Token(Token = "0x60026C6")]
			[Address(RVA = "0x17009EC", Offset = "0x17009EC", VA = "0x17009EC", Slot = "7")]
			remove
			{
			}
		}

		[Token(Token = "0x60026C8")]
		[Address(RVA = "0x1700A24", Offset = "0x1700A24", VA = "0x1700A24")]
		public TouchTapProcessingModule(TapProcessorSettings settings)
		{
		}

		[Token(Token = "0x60026C9")]
		[Address(RVA = "0x1700C80", Offset = "0x1700C80", VA = "0x1700C80", Slot = "9")]
		public void Update()
		{
		}
	}
}
namespace Mobile.Actions.Anatomy
{
	[Token(Token = "0x2000790")]
	public class CameraSetupModule : IUpdatable, IDisposable
	{
		[Token(Token = "0x400226C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly ICameraSetup _cameraSetup;

		[Token(Token = "0x400226D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly IAction _focusAction;

		[Token(Token = "0x400226E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly IAction _resetAction;

		[Token(Token = "0x400226F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly IIsolateModule<IMobileAnatomyItemInstance> _isolateModule;

		[Token(Token = "0x4002270")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly ISelectionModule<IMobileAnatomyItemInstance> _selectionModule;

		[Token(Token = "0x4002271")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly IRaycastController _raycastController;

		[Token(Token = "0x4002272")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private readonly IResolver _componentResolver;

		[Token(Token = "0x4002273")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private IMobileAnatomyItemInstance _lastIsolatedObject;

		[Token(Token = "0x4002274")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private IMobileAnatomyItemInstance _lastSelectedObject;

		[Token(Token = "0x60026CE")]
		[Address(RVA = "0x1700E00", Offset = "0x1700E00", VA = "0x1700E00")]
		public CameraSetupModule(IAction focusAction, IAction resetAction, IRaycastController raycastController, IResolver componentResolver, IModuleProvider moduleProvider, ICameraSetup cameraSetup)
		{
		}

		[Token(Token = "0x60026CF")]
		[Address(RVA = "0x1701140", Offset = "0x1701140", VA = "0x1701140")]
		private void OnReset()
		{
		}

		[Token(Token = "0x60026D0")]
		[Address(RVA = "0x1701268", Offset = "0x1701268", VA = "0x1701268")]
		private void OnFocus()
		{
		}

		[Token(Token = "0x60026D1")]
		[Address(RVA = "0x1701580", Offset = "0x1701580", VA = "0x1701580", Slot = "4")]
		public void Update()
		{
		}

		[Token(Token = "0x60026D2")]
		[Address(RVA = "0x1701A2C", Offset = "0x1701A2C", VA = "0x1701A2C")]
		private void OnSelectedAnatomyItemChanged(IMobileAnatomyItemInstance item)
		{
		}

		[Token(Token = "0x60026D3")]
		[Address(RVA = "0x1701884", Offset = "0x1701884", VA = "0x1701884")]
		private void OnIsolatedAnatomyItemChanged(IMobileAnatomyItemInstance item)
		{
		}

		[Token(Token = "0x60026D4")]
		[Address(RVA = "0x1701B5C", Offset = "0x1701B5C", VA = "0x1701B5C", Slot = "5")]
		public void Dispose()
		{
		}
	}
	[Token(Token = "0x2000791")]
	public class HideAnatomyItemAction<T> : IDisposable
	{
		[Token(Token = "0x4002275")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IAction _hideAction;

		[Token(Token = "0x4002276")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IFunctionStack _functionStack;

		[Token(Token = "0x4002277")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly INetworkModuleProviderFactory _moduleProviderFactory;

		[Token(Token = "0x4002278")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IRaycastController _raycastController;

		[Token(Token = "0x4002279")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IResolver _componentResolver;

		[Token(Token = "0x60026D5")]
		public HideAnatomyItemAction(IAction hideAction, IRaycastController raycastController, IResolver componentResolver, INetworkModuleProviderFactory moduleProviderFactory, IFunctionStack functionStack)
		{
		}

		[Token(Token = "0x60026D6")]
		private void OnHide()
		{
		}

		[Token(Token = "0x60026D7")]
		public void Dispose()
		{
		}
	}
	[Token(Token = "0x2000792")]
	public class ResetAnatomyItemAction : IDisposable
	{
		[Token(Token = "0x400227A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly IAction _resetAction;

		[Token(Token = "0x400227B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly INetworkModuleProviderFactory _moduleProviderFactory;

		[Token(Token = "0x60026D8")]
		[Address(RVA = "0x1701CF0", Offset = "0x1701CF0", VA = "0x1701CF0")]
		public ResetAnatomyItemAction(IAction resetAction, INetworkModuleProviderFactory moduleProviderFactory)
		{
		}

		[Token(Token = "0x60026D9")]
		[Address(RVA = "0x1701E14", Offset = "0x1701E14", VA = "0x1701E14")]
		private void OnReset()
		{
		}

		[Token(Token = "0x60026DA")]
		[Address(RVA = "0x1702028", Offset = "0x1702028", VA = "0x1702028", Slot = "4")]
		public void Dispose()
		{
		}
	}
	[Token(Token = "0x2000793")]
	public class SelectAnatomyItemAction : IDisposable
	{
		[StructLayout(3)]
		[Token(Token = "0x2000794")]
		[CompilerGenerated]
		private struct <OnItemSelectionChanged>d__4 : IAsyncStateMachine
		{
			[Token(Token = "0x400227F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4002280")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4002281")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public MonoBehaviourObject item;

			[Token(Token = "0x4002282")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public SelectAnatomyItemAction <>4__this;

			[Token(Token = "0x4002283")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x60026DE")]
			[Address(RVA = "0x1702450", Offset = "0x1702450", VA = "0x1702450", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60026DF")]
			[Address(RVA = "0x17029F8", Offset = "0x17029F8", VA = "0x17029F8", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x400227C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly ISelectionAction<MonoBehaviourObject> _interactionSelectionModule;

		[Token(Token = "0x400227D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly INetworkModuleProviderFactory _moduleProviderFactory;

		[Token(Token = "0x400227E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly CancellationTokenSource _cancellationTokenSource;

		[Token(Token = "0x60026DB")]
		[Address(RVA = "0x1702118", Offset = "0x1702118", VA = "0x1702118")]
		public SelectAnatomyItemAction(ISelectionAction<MonoBehaviourObject> interactionSelectionModule, INetworkModuleProviderFactory moduleProviderFactory)
		{
		}

		[Token(Token = "0x60026DC")]
		[Address(RVA = "0x170227C", Offset = "0x170227C", VA = "0x170227C")]
		[AsyncStateMachine(typeof(<OnItemSelectionChanged>d__4))]
		private void OnItemSelectionChanged(MonoBehaviourObject item)
		{
		}

		[Token(Token = "0x60026DD")]
		[Address(RVA = "0x1702350", Offset = "0x1702350", VA = "0x1702350", Slot = "4")]
		public void Dispose()
		{
		}
	}
	[Token(Token = "0x2000795")]
	public class SelectSubpartAction : IDisposable
	{
		[Token(Token = "0x4002284")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly ISelectionAction<ISubpartInstance> _selectionModule;

		[Token(Token = "0x4002285")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly INetworkModuleProviderFactory _moduleProviderFactory;

		[Token(Token = "0x60026E0")]
		[Address(RVA = "0x1702A04", Offset = "0x1702A04", VA = "0x1702A04")]
		public SelectSubpartAction(ISelectionAction<ISubpartInstance> selectionModule, INetworkModuleProviderFactory moduleProviderFactory)
		{
		}

		[Token(Token = "0x60026E1")]
		[Address(RVA = "0x1702B2C", Offset = "0x1702B2C", VA = "0x1702B2C")]
		private void OnItemSelectionChanged(ISubpartInstance subpart)
		{
		}

		[Token(Token = "0x60026E2")]
		[Address(RVA = "0x1702CE8", Offset = "0x1702CE8", VA = "0x1702CE8", Slot = "4")]
		public void Dispose()
		{
		}
	}
	[Token(Token = "0x2000796")]
	public class SubpartSelectionAction : IDisposable, ISelectionAction<ISubpartInstance>
	{
		[Token(Token = "0x4002286")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly IAction _selectAction;

		[Token(Token = "0x4002287")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly IRaycastController _raycastController;

		[Token(Token = "0x4002288")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly IResolver _componentResolver;

		[Token(Token = "0x4002289")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly IReadOnlyProperty<bool> _subpartRaycastEnabledProperty;

		[Token(Token = "0x400228A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly IReadOnlyProperty<SubpartType> _activeSubpartTypeProperty;

		[Token(Token = "0x170005FE")]
		public ISubpartInstance SelectedObject
		{
			[Token(Token = "0x60026E3")]
			[Address(RVA = "0x1702DD8", Offset = "0x1702DD8", VA = "0x1702DD8", Slot = "5")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60026E4")]
			[Address(RVA = "0x1702DE0", Offset = "0x1702DE0", VA = "0x1702DE0")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x14000093")]
		public event Action<ISubpartInstance> SelectionChanged
		{
			[Token(Token = "0x60026E5")]
			[Address(RVA = "0x1702DE8", Offset = "0x1702DE8", VA = "0x1702DE8", Slot = "6")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60026E6")]
			[Address(RVA = "0x1702E98", Offset = "0x1702E98", VA = "0x1702E98", Slot = "7")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x60026E7")]
		[Address(RVA = "0x1702F48", Offset = "0x1702F48", VA = "0x1702F48")]
		public SubpartSelectionAction(IAction selectAction, IRaycastController raycastController, IResolver componentResolver, IReadOnlyProperty<bool> subpartRaycastEnabledProperty, IReadOnlyProperty<SubpartType> activeSubpartTypeProperty)
		{
		}

		[Token(Token = "0x60026E8")]
		[Address(RVA = "0x17030C0", Offset = "0x17030C0", VA = "0x17030C0")]
		private void OnTapped()
		{
		}

		[Token(Token = "0x60026E9")]
		[Address(RVA = "0x1703B40", Offset = "0x1703B40", VA = "0x1703B40", Slot = "4")]
		public void Dispose()
		{
		}
	}
}
namespace Logging
{
	[Token(Token = "0x2000797")]
	public class UserReportingAutoLogger : MonoBehaviour
	{
		[Token(Token = "0x400228D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string _loggerName;

		[Token(Token = "0x400228E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private LicenseManagerBehaviour _licenseManager;

		[Token(Token = "0x400228F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private LicenseData _licenseData;

		[Token(Token = "0x4002290")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool _isLoggedIn;

		[Token(Token = "0x4002291")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private LicenseData _defaultLicenseData;

		[Token(Token = "0x60026EA")]
		[Address(RVA = "0x1703C30", Offset = "0x1703C30", VA = "0x1703C30")]
		private void Awake()
		{
		}

		[Token(Token = "0x60026EB")]
		[Address(RVA = "0x1703E04", Offset = "0x1703E04", VA = "0x1703E04")]
		private void InitMetadataFields(LicenseData licenseData)
		{
		}

		[Token(Token = "0x60026EC")]
		[Address(RVA = "0x1703F4C", Offset = "0x1703F4C", VA = "0x1703F4C")]
		private void Update()
		{
		}

		[Token(Token = "0x60026ED")]
		[Address(RVA = "0x17040DC", Offset = "0x17040DC", VA = "0x17040DC")]
		public UserReportingAutoLogger()
		{
		}
	}
}
namespace Interaction.Raycast
{
	[Token(Token = "0x2000798")]
	public interface IRaycastController
	{
		[Token(Token = "0x170005FF")]
		RaycastHit LastHit
		{
			[Token(Token = "0x60026EE")]
			get;
		}

		[Token(Token = "0x17000600")]
		Collider LastHitCollider
		{
			[Token(Token = "0x60026EF")]
			get;
		}

		[Token(Token = "0x60026F0")]
		bool Raycast();
	}
	[Token(Token = "0x2000799")]
	public class RaycastController : IRaycastController
	{
		[Token(Token = "0x4002292")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly IReadOnlyProperty<Ray> _ray;

		[Token(Token = "0x4002293")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly RaycastControllerSettings Settings;

		[Token(Token = "0x4002294")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private RaycastHit _hit;

		[Token(Token = "0x17000601")]
		public RaycastHit LastHit
		{
			[Token(Token = "0x60026F2")]
			[Address(RVA = "0x170428C", Offset = "0x170428C", VA = "0x170428C", Slot = "4")]
			get
			{
				return default(RaycastHit);
			}
		}

		[Token(Token = "0x17000602")]
		public Collider LastHitCollider
		{
			[Token(Token = "0x60026F3")]
			[Address(RVA = "0x17042A0", Offset = "0x17042A0", VA = "0x17042A0", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60026F1")]
		[Address(RVA = "0x1704248", Offset = "0x1704248", VA = "0x1704248")]
		public RaycastController(RaycastControllerSettings settings, IReadOnlyProperty<Ray> ray)
		{
		}

		[Token(Token = "0x60026F4")]
		[Address(RVA = "0x17042AC", Offset = "0x17042AC", VA = "0x17042AC", Slot = "6")]
		public bool Raycast()
		{
			return default(bool);
		}
	}
	[Serializable]
	[Token(Token = "0x200079A")]
	public class RaycastControllerSettings
	{
		[Token(Token = "0x4002295")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float MaxDistance;

		[Token(Token = "0x4002296")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public LayerMask LayerMask;

		[Token(Token = "0x60026F5")]
		[Address(RVA = "0x17043BC", Offset = "0x17043BC", VA = "0x17043BC")]
		public RaycastControllerSettings()
		{
		}
	}
}
namespace NobleConnect
{
	[Serializable]
	[Token(Token = "0x200079B")]
	public class Config
	{
		[NonSerialized]
		[Token(Token = "0x4002297")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ushort IcePort;

		[NonSerialized]
		[Token(Token = "0x4002298")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string Username;

		[NonSerialized]
		[Token(Token = "0x4002299")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string Password;

		[NonSerialized]
		[Token(Token = "0x400229A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string Origin;

		[NonSerialized]
		[Token(Token = "0x400229B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool UseSimpleAddressGathering;

		[Token(Token = "0x400229C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Action<string> OnFatalError;

		[Token(Token = "0x400229D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Action OnOfferFailed;

		[Token(Token = "0x400229E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[Tooltip("The geographic region to use when selecting a relay server.")]
		public GeographicRegion Region;

		[Token(Token = "0x400229F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[Tooltip("Enable this to force relay connections to be used for testing purposes.")]
		public bool ForceRelayOnly;

		[Token(Token = "0x40022A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
		[Tooltip("By default IPv6 is enabled, but you can disable it if you're using a transport that does not support IPv6.")]
		public bool EnableIPv6;

		[Token(Token = "0x40022A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("How long to wait before considering a request to have failed.")]
		public float RequestTimeout;

		[Token(Token = "0x40022A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[Tooltip("Initial timeout before resending refresh messages. This is doubled for each failed resend.")]
		public float RelayRequestTimeout;

		[Token(Token = "0x40022A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("Max number of times to try and resend refresh messages before giving up and shutting down the relay connection.")]
		public int RelayRefreshMaxAttempts;

		[Token(Token = "0x40022A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[Tooltip("How long a relay will stay alive without being refreshed.")]
		public int RelayLifetime;

		[Token(Token = "0x40022A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Tooltip("How often to send relay refresh requests.")]
		public int RelayRefreshTime;

		[Token(Token = "0x60026F6")]
		[Address(RVA = "0x17043C4", Offset = "0x17043C4", VA = "0x17043C4")]
		public IceConfig AsIceConfig()
		{
			return null;
		}

		[Token(Token = "0x60026F7")]
		[Address(RVA = "0x1704704", Offset = "0x1704704", VA = "0x1704704")]
		public Config()
		{
		}
	}
	[Token(Token = "0x200079C")]
	public class NobleConnectSettings : ScriptableObject
	{
		[Token(Token = "0x40022A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Tooltip("Used to identify your game and authenticate with the relay servers")]
		public string gameID;

		[Token(Token = "0x40022A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public ushort relayServerPort;

		[Token(Token = "0x60026F9")]
		[Address(RVA = "0x170478C", Offset = "0x170478C", VA = "0x170478C")]
		public NobleConnectSettings()
		{
		}
	}
	[Token(Token = "0x200079D")]
	public class UnityLogger
	{
		[Token(Token = "0x60026FA")]
		[Address(RVA = "0x170479C", Offset = "0x170479C", VA = "0x170479C")]
		public static void Init()
		{
		}

		[Token(Token = "0x60026FB")]
		[Address(RVA = "0x17048DC", Offset = "0x17048DC", VA = "0x17048DC")]
		public UnityLogger()
		{
		}
	}
}
namespace NobleConnect.Mirror
{
	[Token(Token = "0x200079E")]
	public class NobleClient
	{
		[Token(Token = "0x40022A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private ConnectionType _latestConnectionType;

		[Token(Token = "0x40022A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		public bool isConnecting;

		[Token(Token = "0x40022AA")]
		private const string TRANSPORT_WARNING_MESSAGE = "You must use a transport that supports UDP in order to use Mirror with NobleConnect.\nI recommend the default KcpTransport.";

		[Token(Token = "0x40022AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13")]
		public bool ForceRelayOnly;

		[Token(Token = "0x40022AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Action<string> onFatalError;

		[Token(Token = "0x40022AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private IPEndPoint hostBridgeEndPoint;

		[Token(Token = "0x40022AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Peer baseClient;

		[Token(Token = "0x40022AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private IceConfig nobleConfig;

		[Token(Token = "0x17000603")]
		public ConnectionType latestConnectionType
		{
			[Token(Token = "0x60026FC")]
			[Address(RVA = "0x17048E4", Offset = "0x17048E4", VA = "0x17048E4")]
			get
			{
				return default(ConnectionType);
			}
			[Token(Token = "0x60026FD")]
			[Address(RVA = "0x1704900", Offset = "0x1704900", VA = "0x1704900")]
			set
			{
			}
		}

		[Token(Token = "0x17000604")]
		public NetworkConnection connection
		{
			[Token(Token = "0x600270F")]
			[Address(RVA = "0x1705954", Offset = "0x1705954", VA = "0x1705954")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000605")]
		public bool active
		{
			[Token(Token = "0x6002710")]
			[Address(RVA = "0x17059DC", Offset = "0x17059DC", VA = "0x17059DC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000606")]
		public bool isConnected
		{
			[Token(Token = "0x6002711")]
			[Address(RVA = "0x17053D8", Offset = "0x17053D8", VA = "0x17053D8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000607")]
		public bool isHostClient
		{
			[Token(Token = "0x6002712")]
			[Address(RVA = "0x1705A2C", Offset = "0x1705A2C", VA = "0x1705A2C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60026FE")]
		[Address(RVA = "0x1704908", Offset = "0x1704908", VA = "0x1704908")]
		public NobleClient(GeographicRegion region = GeographicRegion.AUTO, [Optional] Action<string> onFatalError, int relayLifetime = 60, int relayRefreshTime = 30, float allocationResendTimeout = 0.1f, int maxAllocationResends = 8, float requestTimeout = 0.2f)
		{
		}

		[Token(Token = "0x60026FF")]
		[Address(RVA = "0x1704E34", Offset = "0x1704E34", VA = "0x1704E34")]
		public NobleClient()
		{
		}

		[Token(Token = "0x6002700")]
		[Address(RVA = "0x1704EB0", Offset = "0x1704EB0", VA = "0x1704EB0")]
		public NobleClient(string relayServerAddress, [Optional] Action<string> onFatalError, int relayLifetime = 60, int relayRefreshTime = 30, float allocationResendTimeout = 0.1f, int maxAllocationResends = 8, float requestTimeout = 0.2f)
		{
		}

		[Token(Token = "0x6002701")]
		[Address(RVA = "0x1705190", Offset = "0x1705190", VA = "0x1705190")]
		public void PrepareToConnect()
		{
		}

		[Token(Token = "0x6002702")]
		[Address(RVA = "0x17051BC", Offset = "0x17051BC", VA = "0x17051BC")]
		public void Update()
		{
		}

		[Token(Token = "0x6002703")]
		[Address(RVA = "0x17051D4", Offset = "0x17051D4", VA = "0x17051D4")]
		public void Connect(string hostIP, ushort hostPort, bool isLANOnly = false)
		{
		}

		[Token(Token = "0x6002704")]
		[Address(RVA = "0x1705298", Offset = "0x1705298", VA = "0x1705298")]
		public void Connect(IPEndPoint hostEndPoint, bool isLANOnly = false)
		{
		}

		[Token(Token = "0x6002705")]
		[Address(RVA = "0x1705428", Offset = "0x1705428", VA = "0x1705428")]
		public void SetConnectPort(ushort port)
		{
		}

		[Token(Token = "0x6002706")]
		[Address(RVA = "0x17055DC", Offset = "0x17055DC", VA = "0x17055DC")]
		public void Shutdown()
		{
		}

		[Token(Token = "0x6002707")]
		[Address(RVA = "0x1705664", Offset = "0x1705664", VA = "0x1705664")]
		public void Dispose(bool disposing)
		{
		}

		[Token(Token = "0x6002708")]
		[Address(RVA = "0x17056D8", Offset = "0x17056D8", VA = "0x17056D8")]
		public void Dispose()
		{
		}

		[Token(Token = "0x6002709")]
		[Address(RVA = "0x1704C1C", Offset = "0x1704C1C", VA = "0x1704C1C")]
		private void Init()
		{
		}

		[Token(Token = "0x600270A")]
		[Address(RVA = "0x17056E0", Offset = "0x17056E0", VA = "0x17056E0")]
		private void CancelConnection()
		{
		}

		[Token(Token = "0x600270B")]
		[Address(RVA = "0x170574C", Offset = "0x170574C", VA = "0x170574C")]
		private void OnFatalError(string errorString)
		{
		}

		[Token(Token = "0x600270C")]
		[Address(RVA = "0x1705814", Offset = "0x1705814", VA = "0x1705814")]
		private void OnReadyToConnect(IPEndPoint bridgeEndPoint, IPEndPoint bridgeEndPointIPv6)
		{
		}

		[Token(Token = "0x600270D")]
		[Address(RVA = "0x1705910", Offset = "0x1705910", VA = "0x1705910", Slot = "4")]
		public virtual void OnClientConnect()
		{
		}

		[Token(Token = "0x600270E")]
		[Address(RVA = "0x1705938", Offset = "0x1705938", VA = "0x1705938", Slot = "5")]
		public virtual void OnClientDisconnect()
		{
		}

		[Token(Token = "0x6002713")]
		[Address(RVA = "0x1705A7C", Offset = "0x1705A7C", VA = "0x1705A7C")]
		public void Connect(string address)
		{
		}

		[Token(Token = "0x6002714")]
		[Address(RVA = "0x1705AD4", Offset = "0x1705AD4", VA = "0x1705AD4")]
		public void Connect(Uri uri)
		{
		}

		[Token(Token = "0x6002715")]
		[Address(RVA = "0x1705B2C", Offset = "0x1705B2C", VA = "0x1705B2C")]
		public void ConnectHost()
		{
		}

		[Token(Token = "0x6002716")]
		[Address(RVA = "0x1705B7C", Offset = "0x1705B7C", VA = "0x1705B7C")]
		public void ConnectLocalServer()
		{
		}

		[Token(Token = "0x6002717")]
		[Address(RVA = "0x1705BCC", Offset = "0x1705BCC", VA = "0x1705BCC")]
		public void DisconnectLocalServer()
		{
		}

		[Token(Token = "0x6002718")]
		[Address(RVA = "0x1705C1C", Offset = "0x1705C1C", VA = "0x1705C1C")]
		public void Disconnect()
		{
		}

		[Token(Token = "0x6002719")]
		public void Send<T>(T message, int channelId = 0) where T : struct, NetworkMessage
		{
		}

		[Token(Token = "0x600271A")]
		public void RegisterHandler<T>(Action<T> handler, bool requireAuthentication = true) where T : struct, NetworkMessage
		{
		}

		[Token(Token = "0x600271B")]
		public void ReplaceHandler<T>(Action<T> handler, bool requireAuthentication = true) where T : struct, NetworkMessage
		{
		}

		[Token(Token = "0x600271C")]
		public bool UnregisterHandler<T>() where T : struct, NetworkMessage
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200079F")]
	public class NobleNetworkManager : global::Mirror.NetworkManager
	{
		[Token(Token = "0x20007A1")]
		[CompilerGenerated]
		private sealed class <FixMirrorEvents>d__40 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40022C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40022C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40022C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public NobleNetworkManager <>4__this;

			[Token(Token = "0x17000609")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002748")]
				[Address(RVA = "0x1708D00", Offset = "0x1708D00", VA = "0x1708D00", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700060A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600274A")]
				[Address(RVA = "0x1708D48", Offset = "0x1708D48", VA = "0x1708D48", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002745")]
			[Address(RVA = "0x1707A08", Offset = "0x1707A08", VA = "0x1707A08")]
			[DebuggerHidden]
			public <FixMirrorEvents>d__40(int <>1__state)
			{
			}

			[Token(Token = "0x6002746")]
			[Address(RVA = "0x1708BA8", Offset = "0x1708BA8", VA = "0x1708BA8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002747")]
			[Address(RVA = "0x1708BAC", Offset = "0x1708BAC", VA = "0x1708BAC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002749")]
			[Address(RVA = "0x1708D08", Offset = "0x1708D08", VA = "0x1708D08", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20007A2")]
		[CompilerGenerated]
		private sealed class <CleanUpStoppedServer>d__47 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40022CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40022CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x1700060B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600274E")]
				[Address(RVA = "0x1708E0C", Offset = "0x1708E0C", VA = "0x1708E0C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700060C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002750")]
				[Address(RVA = "0x1708E54", Offset = "0x1708E54", VA = "0x1708E54", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600274B")]
			[Address(RVA = "0x17085B8", Offset = "0x17085B8", VA = "0x17085B8")]
			[DebuggerHidden]
			public <CleanUpStoppedServer>d__47(int <>1__state)
			{
			}

			[Token(Token = "0x600274C")]
			[Address(RVA = "0x1708D50", Offset = "0x1708D50", VA = "0x1708D50", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600274D")]
			[Address(RVA = "0x1708D54", Offset = "0x1708D54", VA = "0x1708D54", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600274F")]
			[Address(RVA = "0x1708E14", Offset = "0x1708E14", VA = "0x1708E14", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20007A3")]
		[CompilerGenerated]
		private sealed class <CleanUpStoppedClient>d__49 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40022CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40022CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40022CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public NobleNetworkManager <>4__this;

			[Token(Token = "0x1700060D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002754")]
				[Address(RVA = "0x1708F08", Offset = "0x1708F08", VA = "0x1708F08", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700060E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002756")]
				[Address(RVA = "0x1708F50", Offset = "0x1708F50", VA = "0x1708F50", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002751")]
			[Address(RVA = "0x1708680", Offset = "0x1708680", VA = "0x1708680")]
			[DebuggerHidden]
			public <CleanUpStoppedClient>d__49(int <>1__state)
			{
			}

			[Token(Token = "0x6002752")]
			[Address(RVA = "0x1708E5C", Offset = "0x1708E5C", VA = "0x1708E5C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002753")]
			[Address(RVA = "0x1708E60", Offset = "0x1708E60", VA = "0x1708E60", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002755")]
			[Address(RVA = "0x1708F10", Offset = "0x1708F10", VA = "0x1708F10", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20007A4")]
		[CompilerGenerated]
		private sealed class <StopClientAfterDelay>d__51 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40022CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40022D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40022D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public NobleNetworkManager <>4__this;

			[Token(Token = "0x1700060F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600275A")]
				[Address(RVA = "0x1709050", Offset = "0x1709050", VA = "0x1709050", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000610")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600275C")]
				[Address(RVA = "0x1709098", Offset = "0x1709098", VA = "0x1709098", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002757")]
			[Address(RVA = "0x17087B0", Offset = "0x17087B0", VA = "0x17087B0")]
			[DebuggerHidden]
			public <StopClientAfterDelay>d__51(int <>1__state)
			{
			}

			[Token(Token = "0x6002758")]
			[Address(RVA = "0x1708F58", Offset = "0x1708F58", VA = "0x1708F58", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002759")]
			[Address(RVA = "0x1708F5C", Offset = "0x1708F5C", VA = "0x1708F5C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600275B")]
			[Address(RVA = "0x1709058", Offset = "0x1709058", VA = "0x1709058", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40022B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public NobleClient client;

		[Token(Token = "0x40022B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public int networkPort;

		[Token(Token = "0x40022B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[Tooltip("The geographic region to use when selecting a relay server")]
		public GeographicRegion region;

		[Token(Token = "0x40022B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[Tooltip("You can enable this to force relay connections to be used for testing purposes")]
		public bool forceRelayConnection;

		[Token(Token = "0x40022B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public Logger.Level logLevel;

		[Token(Token = "0x40022B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float requestTimeout;

		[Token(Token = "0x40022B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public int relayRefreshTime;

		[Token(Token = "0x40022B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public float relayRefreshTimeout;

		[Token(Token = "0x40022B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public int maxRelayRefreshAttempts;

		[Token(Token = "0x40022B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public int relayLifetime;

		[Token(Token = "0x40022BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private MethodInfo registerClientMessagesMethod;

		[Token(Token = "0x40022BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private PropertyInfo modeProperty;

		[Token(Token = "0x40022BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private MethodInfo initSingletonMethod;

		[Token(Token = "0x40022BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private UnityAction onClientAuthenticated;

		[Token(Token = "0x40022BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public Action onClientConnectInternal;

		[Token(Token = "0x40022BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public Action onClientDisconnectInternal;

		[Token(Token = "0x40022C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public Action<NetworkConnectionToClient> onServerConnectInternal;

		[Token(Token = "0x40022C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public bool isDisconnecting;

		[Token(Token = "0x40022C2")]
		private const string TRANSPORT_WARNING_MESSAGE = "You must use a transport that supports UDP in order to use Mirror with NobleConnect.\nI recommend the default KcpTransport.";

		[Token(Token = "0x40022C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE1")]
		protected bool isLANOnly;

		[Token(Token = "0x17000608")]
		public IPEndPoint HostEndPoint
		{
			[Token(Token = "0x600271D")]
			[Address(RVA = "0x1705C6C", Offset = "0x1705C6C", VA = "0x1705C6C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600271E")]
		[Address(RVA = "0x1705D5C", Offset = "0x1705D5C", VA = "0x1705D5C", Slot = "6")]
		public override void Awake()
		{
		}

		[Token(Token = "0x600271F")]
		[Address(RVA = "0x1706528", Offset = "0x1706528", VA = "0x1706528", Slot = "7")]
		public override void Start()
		{
		}

		[Token(Token = "0x6002720")]
		[Address(RVA = "0x17067F8", Offset = "0x17067F8", VA = "0x17067F8", Slot = "32")]
		public virtual void Update()
		{
		}

		[Token(Token = "0x6002721")]
		[Address(RVA = "0x1706994", Offset = "0x1706994", VA = "0x1706994")]
		public void InitClient()
		{
		}

		[Token(Token = "0x6002722")]
		[Address(RVA = "0x1706740", Offset = "0x1706740", VA = "0x1706740", Slot = "33")]
		public new void StartClient()
		{
		}

		[Token(Token = "0x6002723")]
		[Address(RVA = "0x1706A90", Offset = "0x1706A90", VA = "0x1706A90")]
		public void StartClient(IPEndPoint hostEndPoint)
		{
		}

		[Token(Token = "0x6002724")]
		[Address(RVA = "0x1706DFC", Offset = "0x1706DFC", VA = "0x1706DFC", Slot = "34")]
		public void StartClientLANOnly()
		{
		}

		[Token(Token = "0x6002725")]
		[Address(RVA = "0x1706EB0", Offset = "0x1706EB0", VA = "0x1706EB0")]
		public void StartClientLANOnly(IPEndPoint hostEndPoint)
		{
		}

		[Token(Token = "0x6002726")]
		[Address(RVA = "0x170704C", Offset = "0x170704C", VA = "0x170704C", Slot = "28")]
		public override void OnStartClient()
		{
		}

		[Token(Token = "0x6002727")]
		[Address(RVA = "0x1707068", Offset = "0x1707068", VA = "0x1707068")]
		private void OnClientConnectInternal()
		{
		}

		[Token(Token = "0x6002728")]
		[Address(RVA = "0x17070A4", Offset = "0x17070A4", VA = "0x17070A4")]
		private void OnClientDisconnectInternal()
		{
		}

		[Token(Token = "0x6002729")]
		[Address(RVA = "0x17070E0", Offset = "0x17070E0", VA = "0x17070E0", Slot = "35")]
		public new virtual void StartHost()
		{
		}

		[Token(Token = "0x600272A")]
		[Address(RVA = "0x1707318", Offset = "0x1707318", VA = "0x1707318", Slot = "36")]
		public void StartHostLANOnly()
		{
		}

		[Token(Token = "0x600272B")]
		[Address(RVA = "0x1707328", Offset = "0x1707328", VA = "0x1707328")]
		public new void StartServer()
		{
		}

		[Token(Token = "0x600272C")]
		[Address(RVA = "0x17073AC", Offset = "0x17073AC", VA = "0x17073AC")]
		public void StartServerLANonly()
		{
		}

		[Token(Token = "0x600272D")]
		[Address(RVA = "0x1706948", Offset = "0x1706948", VA = "0x1706948")]
		public new void StopClient()
		{
		}

		[Token(Token = "0x600272E")]
		[Address(RVA = "0x1706CC4", Offset = "0x1706CC4", VA = "0x1706CC4")]
		public void RegisterClientHandlers()
		{
		}

		[Token(Token = "0x600272F")]
		[Address(RVA = "0x17073BC", Offset = "0x17073BC", VA = "0x17073BC", Slot = "27")]
		public override void OnStartServer()
		{
		}

		[Token(Token = "0x6002730")]
		[Address(RVA = "0x1707994", Offset = "0x1707994", VA = "0x1707994")]
		[IteratorStateMachine(typeof(<FixMirrorEvents>d__40))]
		private IEnumerator FixMirrorEvents()
		{
			return null;
		}

		[Token(Token = "0x6002731")]
		[Address(RVA = "0x1707A30", Offset = "0x1707A30", VA = "0x1707A30")]
		private void OnServerConnectInternal(NetworkConnectionToClient conn)
		{
		}

		[Token(Token = "0x6002732")]
		[Address(RVA = "0x1707E84", Offset = "0x1707E84", VA = "0x1707E84", Slot = "14")]
		public override void OnServerDisconnect(NetworkConnectionToClient conn)
		{
		}

		[Token(Token = "0x6002733")]
		[Address(RVA = "0x1707844", Offset = "0x1707844", VA = "0x1707844")]
		public void OnStartServerLANOnly()
		{
		}

		[Token(Token = "0x6002734")]
		[Address(RVA = "0x170804C", Offset = "0x170804C", VA = "0x170804C")]
		public IPAddress GetALANAddress()
		{
			return null;
		}

		[Token(Token = "0x6002735")]
		[Address(RVA = "0x1708528", Offset = "0x1708528", VA = "0x1708528", Slot = "37")]
		public virtual void OnFatalError(string error)
		{
		}

		[Token(Token = "0x6002736")]
		[Address(RVA = "0x1708530", Offset = "0x1708530", VA = "0x1708530", Slot = "29")]
		public override void OnStopServer()
		{
		}

		[Token(Token = "0x6002737")]
		[Address(RVA = "0x1708558", Offset = "0x1708558", VA = "0x1708558")]
		[IteratorStateMachine(typeof(<CleanUpStoppedServer>d__47))]
		private IEnumerator CleanUpStoppedServer()
		{
			return null;
		}

		[Token(Token = "0x6002738")]
		[Address(RVA = "0x17085E0", Offset = "0x17085E0", VA = "0x17085E0", Slot = "30")]
		public override void OnStopClient()
		{
		}

		[Token(Token = "0x6002739")]
		[Address(RVA = "0x170860C", Offset = "0x170860C", VA = "0x170860C")]
		[IteratorStateMachine(typeof(<CleanUpStoppedClient>d__49))]
		private IEnumerator CleanUpStoppedClient()
		{
			return null;
		}

		[Token(Token = "0x600273A")]
		[Address(RVA = "0x17086A8", Offset = "0x17086A8", VA = "0x17086A8", Slot = "21")]
		public override void OnClientDisconnect()
		{
		}

		[Token(Token = "0x600273B")]
		[Address(RVA = "0x170873C", Offset = "0x170873C", VA = "0x170873C")]
		[IteratorStateMachine(typeof(<StopClientAfterDelay>d__51))]
		private IEnumerator StopClientAfterDelay(NetworkConnection conn)
		{
			return null;
		}

		[Token(Token = "0x600273C")]
		[Address(RVA = "0x17087D8", Offset = "0x17087D8", VA = "0x17087D8", Slot = "38")]
		public virtual void OnServerPrepared(string hostAddress, ushort hostPort)
		{
		}

		[Token(Token = "0x600273D")]
		[Address(RVA = "0x17087DC", Offset = "0x17087DC", VA = "0x17087DC", Slot = "11")]
		public override void OnDestroy()
		{
		}

		[Token(Token = "0x600273E")]
		[Address(RVA = "0x1708994", Offset = "0x1708994", VA = "0x1708994", Slot = "9")]
		public override void OnApplicationQuit()
		{
		}

		[Token(Token = "0x600273F")]
		[Address(RVA = "0x1708A0C", Offset = "0x1708A0C", VA = "0x1708A0C")]
		public NobleNetworkManager()
		{
		}
	}
	[Token(Token = "0x20007A5")]
	public class NobleServer
	{
		[Token(Token = "0x40022D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static IPEndPoint LocalHostEndPoint;

		[Token(Token = "0x40022D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static float allocationResendTimeout;

		[Token(Token = "0x40022D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public static float requestTimeout;

		[Token(Token = "0x40022D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static int maxAllocationResends;

		[Token(Token = "0x40022D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public static int relayLifetime;

		[Token(Token = "0x40022D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static int relayRefreshTime;

		[Token(Token = "0x40022D8")]
		private const string TRANSPORT_WARNING_MESSAGE = "You must use a transport that supports UDP in order to use Mirror with NobleConnect.\nI recommend the default KcpTransport.";

		[Token(Token = "0x40022D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static Peer baseServer;

		[Token(Token = "0x40022DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static Action<string> onFatalError;

		[Token(Token = "0x40022DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static Dictionary<NetworkConnection, IPEndPoint> endPointByConnection;

		[Token(Token = "0x40022DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static IceConfig nobleConfig;

		[Token(Token = "0x17000611")]
		public static IPEndPoint HostEndPoint
		{
			[Token(Token = "0x600275D")]
			[Address(RVA = "0x1705CB8", Offset = "0x1705CB8", VA = "0x1705CB8")]
			get
			{
				return null;
			}
			[Token(Token = "0x600275E")]
			[Address(RVA = "0x17090A0", Offset = "0x17090A0", VA = "0x17090A0")]
			set
			{
			}
		}

		[Token(Token = "0x17000612")]
		public static NetworkConnection localConnection
		{
			[Token(Token = "0x600276D")]
			[Address(RVA = "0x1709BF8", Offset = "0x1709BF8", VA = "0x1709BF8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000613")]
		public static Dictionary<int, NetworkConnectionToClient> connections
		{
			[Token(Token = "0x600276E")]
			[Address(RVA = "0x1709C80", Offset = "0x1709C80", VA = "0x1709C80")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000614")]
		public static bool dontListen
		{
			[Token(Token = "0x600276F")]
			[Address(RVA = "0x1709CD8", Offset = "0x1709CD8", VA = "0x1709CD8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002770")]
			[Address(RVA = "0x1709D30", Offset = "0x1709D30", VA = "0x1709D30")]
			set
			{
			}
		}

		[Token(Token = "0x17000615")]
		public static bool active
		{
			[Token(Token = "0x6002771")]
			[Address(RVA = "0x1709D8C", Offset = "0x1709D8C", VA = "0x1709D8C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000616")]
		public static bool localClientActive
		{
			[Token(Token = "0x6002772")]
			[Address(RVA = "0x1709E14", Offset = "0x1709E14", VA = "0x1709E14")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600275F")]
		[Address(RVA = "0x1707788", Offset = "0x1707788", VA = "0x1707788")]
		public static void InitializeHosting(int listenPort, GeographicRegion region = GeographicRegion.AUTO, [Optional] Action<string, ushort> onPrepared, [Optional] Action<string> onFatalError, bool forceRelayOnly = false)
		{
		}

		[Token(Token = "0x6002760")]
		[Address(RVA = "0x17096AC", Offset = "0x17096AC", VA = "0x17096AC")]
		public static void InitializeHosting(int listenPort, string relayServerAddress, [Optional] Action<string, ushort> onPrepared, [Optional] Action<string> onFatalError, bool forceRelayOnly = false)
		{
		}

		[Token(Token = "0x6002761")]
		[Address(RVA = "0x1709108", Offset = "0x1709108", VA = "0x1709108")]
		private static void _Init(int listenPort, string relayServerAddress, [Optional] Action<string, ushort> onPrepared, [Optional] Action<string> onFatalError, bool forceRelayOnly = false)
		{
		}

		[Token(Token = "0x6002762")]
		[Address(RVA = "0x17068B4", Offset = "0x17068B4", VA = "0x17068B4")]
		public static void Update()
		{
		}

		[Token(Token = "0x6002763")]
		[Address(RVA = "0x1709730", Offset = "0x1709730", VA = "0x1709730")]
		public static void Listen(int port = 0, GeographicRegion region = GeographicRegion.AUTO, [Optional] Action<string, ushort> onPrepared, [Optional] Action<string> onFatalError, bool forceRelayOnly = false)
		{
		}

		[Token(Token = "0x6002764")]
		[Address(RVA = "0x17099D8", Offset = "0x17099D8", VA = "0x17099D8")]
		public static void SetListenPort(ushort port)
		{
		}

		[Token(Token = "0x6002765")]
		[Address(RVA = "0x17075E0", Offset = "0x17075E0", VA = "0x17075E0")]
		public static ushort GetTransportPort()
		{
			return default(ushort);
		}

		[Token(Token = "0x6002766")]
		[Address(RVA = "0x1707164", Offset = "0x1707164", VA = "0x1707164")]
		public static void SetTransportPort(ushort port)
		{
		}

		[Token(Token = "0x6002767")]
		public static void UnregisterHandler<T>() where T : struct, NetworkMessage
		{
		}

		[Token(Token = "0x6002768")]
		[Address(RVA = "0x1709A74", Offset = "0x1709A74", VA = "0x1709A74")]
		public static void ClearHandlers()
		{
		}

		[Token(Token = "0x6002769")]
		[Address(RVA = "0x17088F0", Offset = "0x17088F0", VA = "0x17088F0")]
		public static void Dispose()
		{
		}

		[Token(Token = "0x600276A")]
		[Address(RVA = "0x1707AB0", Offset = "0x1707AB0", VA = "0x1707AB0")]
		public static void OnServerConnect(NetworkConnection conn)
		{
		}

		[Token(Token = "0x600276B")]
		[Address(RVA = "0x1707EF4", Offset = "0x1707EF4", VA = "0x1707EF4")]
		public static void OnServerDisconnect(NetworkConnection conn)
		{
		}

		[Token(Token = "0x600276C")]
		[Address(RVA = "0x1709AC4", Offset = "0x1709AC4", VA = "0x1709AC4")]
		private static void OnFatalError(string errorString)
		{
		}

		[Token(Token = "0x6002773")]
		[Address(RVA = "0x1709E64", Offset = "0x1709E64", VA = "0x1709E64")]
		public static void Shutdown()
		{
		}

		[Token(Token = "0x6002774")]
		public static void SendToAll<T>(T msg, int channelId = 0, bool sendToReadyOnly = false) where T : struct, NetworkMessage
		{
		}

		[Token(Token = "0x6002775")]
		public static void SendToReadyObservers<T>(NetworkIdentity identity, T msg, bool includeSelf = true, int channelId = 0) where T : struct, NetworkMessage
		{
		}

		[Token(Token = "0x6002776")]
		public static void SendToReadyObservers<T>(NetworkIdentity identity, T msg, int channelId = 0) where T : struct, NetworkMessage
		{
		}

		[Token(Token = "0x6002777")]
		[Address(RVA = "0x1709EB4", Offset = "0x1709EB4", VA = "0x1709EB4")]
		public static void DisconnectAll()
		{
		}

		[Token(Token = "0x6002778")]
		public static void SendToClientOfPlayer<T>(NetworkIdentity player, T msg) where T : struct, NetworkMessage
		{
		}

		[Token(Token = "0x6002779")]
		[Address(RVA = "0x1709F04", Offset = "0x1709F04", VA = "0x1709F04")]
		public static bool ReplacePlayerForConnection(NetworkConnectionToClient conn, GameObject player, Guid assetId, bool keepAuthority = false)
		{
			return default(bool);
		}

		[Token(Token = "0x600277A")]
		[Address(RVA = "0x1709F8C", Offset = "0x1709F8C", VA = "0x1709F8C")]
		public static bool ReplacePlayerForConnection(NetworkConnectionToClient conn, GameObject player, bool keepAuthority = false)
		{
			return default(bool);
		}

		[Token(Token = "0x600277B")]
		[Address(RVA = "0x1709FFC", Offset = "0x1709FFC", VA = "0x1709FFC")]
		public static bool AddPlayerForConnection(NetworkConnectionToClient conn, GameObject player, Guid assetId)
		{
			return default(bool);
		}

		[Token(Token = "0x600277C")]
		[Address(RVA = "0x170A07C", Offset = "0x170A07C", VA = "0x170A07C")]
		public static bool AddPlayerForConnection(NetworkConnectionToClient conn, GameObject player)
		{
			return default(bool);
		}

		[Token(Token = "0x600277D")]
		[Address(RVA = "0x170A0E4", Offset = "0x170A0E4", VA = "0x170A0E4")]
		public static void SetClientReady(NetworkConnectionToClient conn)
		{
		}

		[Token(Token = "0x600277E")]
		[Address(RVA = "0x170A13C", Offset = "0x170A13C", VA = "0x170A13C")]
		public static void SetAllClientsNotReady()
		{
		}

		[Token(Token = "0x600277F")]
		[Address(RVA = "0x170A18C", Offset = "0x170A18C", VA = "0x170A18C")]
		public static void SetClientNotReady(NetworkConnectionToClient conn)
		{
		}

		[Token(Token = "0x6002780")]
		[Address(RVA = "0x170A1E4", Offset = "0x170A1E4", VA = "0x170A1E4")]
		public static void DestroyPlayerForConnection(NetworkConnectionToClient conn)
		{
		}

		[Token(Token = "0x6002781")]
		[Address(RVA = "0x170A23C", Offset = "0x170A23C", VA = "0x170A23C")]
		public static void Spawn(GameObject obj)
		{
		}

		[Token(Token = "0x6002782")]
		[Address(RVA = "0x170A298", Offset = "0x170A298", VA = "0x170A298")]
		public static void Spawn(GameObject obj, GameObject player)
		{
		}

		[Token(Token = "0x6002783")]
		[Address(RVA = "0x170A300", Offset = "0x170A300", VA = "0x170A300")]
		public static void Spawn(GameObject obj, NetworkConnection conn)
		{
		}

		[Token(Token = "0x6002784")]
		[Address(RVA = "0x170A368", Offset = "0x170A368", VA = "0x170A368")]
		public static void Spawn(GameObject obj, Guid assetId, NetworkConnection conn)
		{
		}

		[Token(Token = "0x6002785")]
		[Address(RVA = "0x170A3E8", Offset = "0x170A3E8", VA = "0x170A3E8")]
		public static void Spawn(GameObject obj, Guid assetId)
		{
		}

		[Token(Token = "0x6002786")]
		[Address(RVA = "0x170A45C", Offset = "0x170A45C", VA = "0x170A45C")]
		public static void Destroy(GameObject obj)
		{
		}

		[Token(Token = "0x6002787")]
		[Address(RVA = "0x170A4B4", Offset = "0x170A4B4", VA = "0x170A4B4")]
		public static void UnSpawn(GameObject obj)
		{
		}

		[Token(Token = "0x6002788")]
		[Address(RVA = "0x170A50C", Offset = "0x170A50C", VA = "0x170A50C")]
		public static NetworkIdentity FindLocalObject(uint netId)
		{
			return null;
		}

		[Token(Token = "0x6002789")]
		[Address(RVA = "0x170A58C", Offset = "0x170A58C", VA = "0x170A58C")]
		public static bool SpawnObjects()
		{
			return default(bool);
		}

		[Token(Token = "0x600278A")]
		[Address(RVA = "0x170A5DC", Offset = "0x170A5DC", VA = "0x170A5DC")]
		public NobleServer()
		{
		}
	}
}
namespace NobleConnect.Examples
{
	[Token(Token = "0x20007A6")]
	public class TextFromFile : MonoBehaviour
	{
		[Token(Token = "0x40022DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TextAsset TextFile;

		[Token(Token = "0x600278C")]
		[Address(RVA = "0x170A700", Offset = "0x170A700", VA = "0x170A700")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x600278D")]
		[Address(RVA = "0x170A780", Offset = "0x170A780", VA = "0x170A780")]
		public TextFromFile()
		{
		}
	}
}
namespace NobleConnect.Examples.Mirror
{
	[Token(Token = "0x20007A7")]
	public class GUILabelFromText : MonoBehaviour
	{
		[Token(Token = "0x40022DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TextAsset textFile;

		[Token(Token = "0x40022DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Texture2D textBackground;

		[Token(Token = "0x40022E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector2 position;

		[Token(Token = "0x40022E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string text;

		[Token(Token = "0x600278E")]
		[Address(RVA = "0x170A788", Offset = "0x170A788", VA = "0x170A788")]
		private void Start()
		{
		}

		[Token(Token = "0x600278F")]
		[Address(RVA = "0x170A7B8", Offset = "0x170A7B8", VA = "0x170A7B8")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6002790")]
		[Address(RVA = "0x170AA30", Offset = "0x170AA30", VA = "0x170AA30")]
		public GUILabelFromText()
		{
		}
	}
	[Token(Token = "0x20007A8")]
	public class MirrorExamplePlayer : NetworkBehaviour
	{
		[Token(Token = "0x6002791")]
		[Address(RVA = "0x170AA38", Offset = "0x170AA38", VA = "0x170AA38")]
		private void Update()
		{
		}

		[Token(Token = "0x6002792")]
		[Address(RVA = "0x170AC40", Offset = "0x170AC40", VA = "0x170AC40")]
		public MirrorExamplePlayer()
		{
		}

		[Token(Token = "0x6002793")]
		[Address(RVA = "0x170AC48", Offset = "0x170AC48", VA = "0x170AC48")]
		private void MirrorProcessed()
		{
		}
	}
	[Token(Token = "0x20007A9")]
	public class ExampleMirrorNetworkHUD : MonoBehaviour
	{
		[Token(Token = "0x40022E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private NobleConnect.Mirror.NobleNetworkManager networkManager;

		[Token(Token = "0x40022E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string hostIP;

		[Token(Token = "0x40022E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string hostPort;

		[Token(Token = "0x40022E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool isHost;

		[Token(Token = "0x40022E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		private bool isClient;

		[Token(Token = "0x6002794")]
		[Address(RVA = "0x170AC4C", Offset = "0x170AC4C", VA = "0x170AC4C")]
		public void Start()
		{
		}

		[Token(Token = "0x6002795")]
		[Address(RVA = "0x170AD54", Offset = "0x170AD54", VA = "0x170AD54")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6002796")]
		[Address(RVA = "0x170AED0", Offset = "0x170AED0", VA = "0x170AED0")]
		private void GUIHost()
		{
		}

		[Token(Token = "0x6002797")]
		[Address(RVA = "0x170B1C4", Offset = "0x170B1C4", VA = "0x170B1C4")]
		private void GUIClient()
		{
		}

		[Token(Token = "0x6002798")]
		[Address(RVA = "0x170B600", Offset = "0x170B600", VA = "0x170B600")]
		public ExampleMirrorNetworkHUD()
		{
		}
	}
	[Token(Token = "0x20007AA")]
	public class ExampleMirrorNobleNetworkManager : NobleConnect.Mirror.NobleNetworkManager
	{
		[Token(Token = "0x6002799")]
		[Address(RVA = "0x170B668", Offset = "0x170B668", VA = "0x170B668", Slot = "20")]
		public override void OnClientConnect()
		{
		}

		[Token(Token = "0x600279A")]
		[Address(RVA = "0x170B6E0", Offset = "0x170B6E0", VA = "0x170B6E0", Slot = "21")]
		public override void OnClientDisconnect()
		{
		}

		[Token(Token = "0x600279B")]
		[Address(RVA = "0x170B754", Offset = "0x170B754", VA = "0x170B754", Slot = "13")]
		public override void OnServerConnect(NetworkConnectionToClient conn)
		{
		}

		[Token(Token = "0x600279C")]
		[Address(RVA = "0x170B7DC", Offset = "0x170B7DC", VA = "0x170B7DC", Slot = "14")]
		public override void OnServerDisconnect(NetworkConnectionToClient conn)
		{
		}

		[Token(Token = "0x600279D")]
		[Address(RVA = "0x170B860", Offset = "0x170B860", VA = "0x170B860", Slot = "38")]
		public override void OnServerPrepared(string hostAddress, ushort hostPort)
		{
		}

		[Token(Token = "0x600279E")]
		[Address(RVA = "0x170B928", Offset = "0x170B928", VA = "0x170B928")]
		public ExampleMirrorNobleNetworkManager()
		{
		}
	}
}
namespace MixedReality.Generated.Extensions
{
	[Serializable]
	[Token(Token = "0x20007AB")]
	public class QuadFaderSettings
	{
		[Token(Token = "0x40022E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[Tooltip("Fader Material is created as a copy of this Material if specified.")]
		public Material QuadMaterialTemplate;

		[Token(Token = "0x40022E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Tooltip("If QuadMaterialTemplate is not specified, Fader Material is created as a new Material instance with this shader. If shader is not specified Particles/Standard Unlit is used.")]
		public Shader QuadMaterialShader;

		[Token(Token = "0x40022E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color FadeColor;

		[Token(Token = "0x40022EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool CreateNewMaterialFromTemplate;

		[Token(Token = "0x600279F")]
		[Address(RVA = "0x170B92C", Offset = "0x170B92C", VA = "0x170B92C")]
		public QuadFaderSettings()
		{
		}
	}
	[Token(Token = "0x20007AC")]
	public class QuadFader : IFader
	{
		[Token(Token = "0x20007AD")]
		private class Quad
		{
			[Token(Token = "0x40022F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Renderer Renderer;

			[Token(Token = "0x40022F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public MaterialPropertyBlock PropertyBlock;

			[Token(Token = "0x60027A8")]
			[Address(RVA = "0x170C000", Offset = "0x170C000", VA = "0x170C000")]
			public Quad()
			{
			}
		}

		[Token(Token = "0x40022EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly QuadFaderSettings _settings;

		[Token(Token = "0x40022EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly Func<Camera> _getCamera;

		[Token(Token = "0x40022ED")]
		public const string QuadMaterialShaderName = "Particles/Standard Unlit";

		[Token(Token = "0x40022EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Quad _quad;

		[Token(Token = "0x40022EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Material _quadMaterial;

		[Token(Token = "0x40022F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int ColorProperty;

		[Token(Token = "0x40022F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static readonly int Mode;

		[Token(Token = "0x40022F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly int SrcBlend;

		[Token(Token = "0x40022F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private static readonly int DstBlend;

		[Token(Token = "0x40022F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static readonly int ZWrite;

		[Token(Token = "0x17000617")]
		public float FadeAmount
		{
			[Token(Token = "0x60027A0")]
			[Address(RVA = "0x170B93C", Offset = "0x170B93C", VA = "0x170B93C", Slot = "4")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60027A1")]
			[Address(RVA = "0x170B944", Offset = "0x170B944", VA = "0x170B944")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x60027A2")]
		[Address(RVA = "0x170B94C", Offset = "0x170B94C", VA = "0x170B94C")]
		public QuadFader(QuadFaderSettings settings, Func<Camera> getCamera)
		{
		}

		[Token(Token = "0x60027A3")]
		[Address(RVA = "0x170B990", Offset = "0x170B990", VA = "0x170B990")]
		private Material CreateQuadMaterial()
		{
			return null;
		}

		[Token(Token = "0x60027A4")]
		[Address(RVA = "0x170BBF4", Offset = "0x170BBF4", VA = "0x170BBF4")]
		private Quad CreateQuad()
		{
			return null;
		}

		[Token(Token = "0x60027A5")]
		[Address(RVA = "0x170C008", Offset = "0x170C008", VA = "0x170C008", Slot = "5")]
		public void SetFadeAmount(float value)
		{
		}

		[Token(Token = "0x60027A6")]
		[Address(RVA = "0x170C188", Offset = "0x170C188", VA = "0x170C188")]
		public void OnDestroy()
		{
		}
	}
}
namespace MRTK
{
	[Token(Token = "0x20007AE")]
	public class AnatomyActionPostProcessor : InputSystemGlobalHandlerListener, IMixedRealityInputHandler<MixedRealityPose>, IEventSystemHandler, IMixedRealityInputHandler, IMixedRealityBaseInputHandler
	{
		[Token(Token = "0x40022F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Tooltip("Action to use as a base for computing grab pointer pose")]
		[SerializeField]
		private MixedRealityInputAction _pointerPoseAction;

		[Token(Token = "0x40022F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Tooltip("Action to use for raising grab pointer pose events")]
		[SerializeField]
		private MixedRealityInputAction _grabPointerPoseAction;

		[Token(Token = "0x40022FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("Offset used to compute the grab pointer pose (grab_pointer_pose = pointer_pose + pointer_pose.Forward * _offset)")]
		[SerializeField]
		private float _grabSourceOffset;

		[Token(Token = "0x40022FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private MixedRealityInputAction _selectAction;

		[Token(Token = "0x40022FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private MixedRealityInputAction _gripPressAction;

		[Token(Token = "0x40022FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private MixedRealityInputAction _grabAction;

		[Token(Token = "0x40022FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private IMixedRealityInputSystem _mixedRealityInputSystem;

		[Token(Token = "0x40022FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private InputEventData<MixedRealityPose> _originalPoseEventData;

		[Token(Token = "0x4002300")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private InputEventData _originalSelectEventData;

		[Token(Token = "0x4002301")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private InputEventData _originalGripPressEventData;

		[Token(Token = "0x4002302")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private readonly Dictionary<uint, uint> _inputSourceGrabCount;

		[Token(Token = "0x60027A9")]
		[Address(RVA = "0x170C368", Offset = "0x170C368", VA = "0x170C368", Slot = "7")]
		protected override void RegisterHandlers()
		{
		}

		[Token(Token = "0x60027AA")]
		[Address(RVA = "0x170C628", Offset = "0x170C628", VA = "0x170C628", Slot = "8")]
		protected override void UnregisterHandlers()
		{
		}

		[Token(Token = "0x60027AB")]
		[Address(RVA = "0x170C7B4", Offset = "0x170C7B4", VA = "0x170C7B4", Slot = "9")]
		public void OnInputChanged(InputEventData<MixedRealityPose> eventData)
		{
		}

		[Token(Token = "0x60027AC")]
		[Address(RVA = "0x170CAF0", Offset = "0x170CAF0", VA = "0x170CAF0", Slot = "11")]
		public void OnInputDown(InputEventData eventData)
		{
		}

		[Token(Token = "0x60027AD")]
		[Address(RVA = "0x170CE40", Offset = "0x170CE40", VA = "0x170CE40", Slot = "10")]
		public void OnInputUp(InputEventData eventData)
		{
		}

		[Token(Token = "0x60027AE")]
		[Address(RVA = "0x170D1BC", Offset = "0x170D1BC", VA = "0x170D1BC")]
		public AnatomyActionPostProcessor()
		{
		}
	}
	[Token(Token = "0x20007AF")]
	public class ObjectManipulatorEventDispatcher : MonoBehaviour
	{
		[Token(Token = "0x4002303")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private ObjectManipulator _objectManipulator;

		[Token(Token = "0x4002304")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private IObjectManipulatorService _objectManipulatorService;

		[Token(Token = "0x17000618")]
		public ObjectManipulator ObjectManipulator
		{
			[Token(Token = "0x60027AF")]
			[Address(RVA = "0x170D3FC", Offset = "0x170D3FC", VA = "0x170D3FC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60027B0")]
			[Address(RVA = "0x170D404", Offset = "0x170D404", VA = "0x170D404")]
			set
			{
			}
		}

		[Token(Token = "0x60027B1")]
		[Address(RVA = "0x170D40C", Offset = "0x170D40C", VA = "0x170D40C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60027B2")]
		[Address(RVA = "0x170D5A4", Offset = "0x170D5A4", VA = "0x170D5A4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60027B3")]
		[Address(RVA = "0x170D6A8", Offset = "0x170D6A8", VA = "0x170D6A8")]
		private void OnManipulationStarted(Microsoft.MixedReality.Toolkit.UI.ManipulationEventData eventData)
		{
		}

		[Token(Token = "0x60027B4")]
		[Address(RVA = "0x170D75C", Offset = "0x170D75C", VA = "0x170D75C")]
		private void OnManipulationEnded(Microsoft.MixedReality.Toolkit.UI.ManipulationEventData eventData)
		{
		}

		[Token(Token = "0x60027B5")]
		[Address(RVA = "0x170D810", Offset = "0x170D810", VA = "0x170D810")]
		public ObjectManipulatorEventDispatcher()
		{
		}
	}
}
namespace MRTK.Extensions
{
	[Token(Token = "0x20007B0")]
	public interface IPlayerHandlerService : IMixedRealityExtensionService, IMixedRealityService, IDisposable
	{
		[Token(Token = "0x17000619")]
		IPlayerHandler PlayerHandler
		{
			[Token(Token = "0x60027B6")]
			get;
		}
	}
	[Token(Token = "0x20007B1")]
	[MixedRealityExtensionService((Microsoft.MixedReality.Toolkit.Utilities.SupportedPlatforms)(-1), "", "", "MixedRealityToolkit", false)]
	public class PlayerHandlerService : BaseExtensionService, IPlayerHandlerService, IMixedRealityExtensionService, IMixedRealityService, IDisposable
	{
		[Token(Token = "0x1700061A")]
		public PlayerHandler PlayerHandler
		{
			[Token(Token = "0x60027B7")]
			[Address(RVA = "0x170D818", Offset = "0x170D818", VA = "0x170D818")]
			[CompilerGenerated]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700061B")]
		private IPlayerHandler MRTK.Extensions.IPlayerHandlerService.PlayerHandler
		{
			[Token(Token = "0x60027B8")]
			[Address(RVA = "0x170D820", Offset = "0x170D820", VA = "0x170D820", Slot = "38")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60027B9")]
		[Address(RVA = "0x170D828", Offset = "0x170D828", VA = "0x170D828")]
		public PlayerHandlerService(string name, uint priority, BaseMixedRealityProfile profile)
		{
		}

		[Token(Token = "0x60027BA")]
		[Address(RVA = "0x170D92C", Offset = "0x170D92C", VA = "0x170D92C", Slot = "24")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x60027BB")]
		[Address(RVA = "0x170D96C", Offset = "0x170D96C", VA = "0x170D96C", Slot = "30")]
		public override void Destroy()
		{
		}
	}
	[Token(Token = "0x20007B2")]
	[CreateAssetMenu(fileName = "PlayerHandlerServiceProfile", menuName = "MixedRealityToolkit/PlayerHandlerService Configuration Profile")]
	[MixedRealityServiceProfile(typeof(IPlayerHandlerService), null)]
	public class PlayerHandlerServiceProfile : BaseMixedRealityProfile
	{
		[Token(Token = "0x4002306")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private PlayerHandlerSettings _settings;

		[Token(Token = "0x1700061C")]
		public PlayerHandlerSettings Settings
		{
			[Token(Token = "0x60027BC")]
			[Address(RVA = "0x170D9AC", Offset = "0x170D9AC", VA = "0x170D9AC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60027BD")]
		[Address(RVA = "0x170D9B4", Offset = "0x170D9B4", VA = "0x170D9B4")]
		public PlayerHandlerServiceProfile()
		{
		}
	}
	[Token(Token = "0x20007B3")]
	public interface IMixedRealityObjectManipulationHandler : IEventSystemHandler
	{
		[Token(Token = "0x60027BE")]
		void OnManipulationStarted(ManipulationEventData manipulationEventData);

		[Token(Token = "0x60027BF")]
		void OnManipulationEnded(ManipulationEventData manipulationEventData);
	}
	[Token(Token = "0x20007B4")]
	public interface IObjectManipulatorService : IMixedRealityExtensionService, IMixedRealityService, IDisposable, IMixedRealityEventSystem
	{
		[Token(Token = "0x1700061D")]
		System.Collections.Generic.IReadOnlyDictionary<GameObject, Microsoft.MixedReality.Toolkit.UI.ManipulationEventData> ManipulatedObjectsData
		{
			[Token(Token = "0x60027C0")]
			get;
		}

		[Token(Token = "0x60027C1")]
		void RaiseOnManipulationStarted(ObjectManipulator objectManipulator, Microsoft.MixedReality.Toolkit.UI.ManipulationEventData manipulationEventData);

		[Token(Token = "0x60027C2")]
		void RaiseOnManipulationEnded(ObjectManipulator objectManipulator, Microsoft.MixedReality.Toolkit.UI.ManipulationEventData manipulationEventData);
	}
	[Token(Token = "0x20007B5")]
	public class ManipulationEventData : BaseEventData
	{
		[Token(Token = "0x1700061E")]
		public ObjectManipulator ObjectManipulator
		{
			[Token(Token = "0x60027C3")]
			[Address(RVA = "0x170D9BC", Offset = "0x170D9BC", VA = "0x170D9BC")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60027C4")]
			[Address(RVA = "0x170D9C4", Offset = "0x170D9C4", VA = "0x170D9C4")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700061F")]
		public Microsoft.MixedReality.Toolkit.UI.ManipulationEventData SourceEventData
		{
			[Token(Token = "0x60027C5")]
			[Address(RVA = "0x170D9CC", Offset = "0x170D9CC", VA = "0x170D9CC")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60027C6")]
			[Address(RVA = "0x170D9D4", Offset = "0x170D9D4", VA = "0x170D9D4")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x60027C7")]
		[Address(RVA = "0x170D9DC", Offset = "0x170D9DC", VA = "0x170D9DC")]
		public ManipulationEventData(EventSystem eventSystem)
		{
		}

		[Token(Token = "0x60027C8")]
		[Address(RVA = "0x170D9E4", Offset = "0x170D9E4", VA = "0x170D9E4")]
		public void Initialize(ObjectManipulator objectManipulator, Microsoft.MixedReality.Toolkit.UI.ManipulationEventData sourceEventData)
		{
		}
	}
	[Token(Token = "0x20007B6")]
	[MixedRealityExtensionService((Microsoft.MixedReality.Toolkit.Utilities.SupportedPlatforms)(-1), "", "", "MixedRealityToolkit", false)]
	public class ObjectManipulatorService : BaseCoreSystem, IObjectManipulatorService, IMixedRealityExtensionService, IMixedRealityService, IDisposable, IMixedRealityEventSystem
	{
		[Token(Token = "0x4002309")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private ObjectManipulatorServiceProfile _objectManipulatorServiceProfile;

		[Token(Token = "0x400230A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private ManipulationEventData _manipulationEventData;

		[Token(Token = "0x400230B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Dictionary<GameObject, Microsoft.MixedReality.Toolkit.UI.ManipulationEventData> _manipulatedObjectsData;

		[Token(Token = "0x400230C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly ProfilerMarker RaiseOnManipulationStartedPerfMarker;

		[Token(Token = "0x400230D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly ExecuteEvents.EventFunction<IMixedRealityObjectManipulationHandler> ManipulationStartedEventHandler;

		[Token(Token = "0x400230E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static readonly ProfilerMarker RaiseOnManipulationEndedPerfMarker;

		[Token(Token = "0x400230F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static readonly ExecuteEvents.EventFunction<IMixedRealityObjectManipulationHandler> ManipulationEndedEventHandler;

		[Token(Token = "0x17000620")]
		public System.Collections.Generic.IReadOnlyDictionary<GameObject, Microsoft.MixedReality.Toolkit.UI.ManipulationEventData> ManipulatedObjectsData
		{
			[Token(Token = "0x60027C9")]
			[Address(RVA = "0x170DA14", Offset = "0x170DA14", VA = "0x170DA14", Slot = "49")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60027CA")]
		[Address(RVA = "0x170DA1C", Offset = "0x170DA1C", VA = "0x170DA1C")]
		public ObjectManipulatorService([Optional] string name, uint priority = 10u, [Optional] BaseMixedRealityProfile profile)
		{
		}

		[Token(Token = "0x60027CB")]
		[Address(RVA = "0x170DB0C", Offset = "0x170DB0C", VA = "0x170DB0C", Slot = "24")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x60027CC")]
		[Address(RVA = "0x170DBB8", Offset = "0x170DBB8", VA = "0x170DBB8", Slot = "50")]
		public void RaiseOnManipulationStarted(ObjectManipulator objectManipulator, Microsoft.MixedReality.Toolkit.UI.ManipulationEventData manipulationEventData)
		{
		}

		[Token(Token = "0x60027CD")]
		[Address(RVA = "0x170DE40", Offset = "0x170DE40", VA = "0x170DE40", Slot = "51")]
		public void RaiseOnManipulationEnded(ObjectManipulator objectManipulator, Microsoft.MixedReality.Toolkit.UI.ManipulationEventData manipulationEventData)
		{
		}
	}
	[Token(Token = "0x20007B8")]
	[CreateAssetMenu(fileName = "ObjectManipulatorServiceProfile", menuName = "MixedRealityToolkit/ObjectManipulatorService Configuration Profile")]
	[MixedRealityServiceProfile(typeof(IObjectManipulatorService), null)]
	public class ObjectManipulatorServiceProfile : BaseMixedRealityProfile
	{
		[Token(Token = "0x60027D3")]
		[Address(RVA = "0x170E4C8", Offset = "0x170E4C8", VA = "0x170E4C8")]
		public ObjectManipulatorServiceProfile()
		{
		}
	}
}
namespace MatchUp
{
	[Token(Token = "0x20007B9")]
	public enum Command
	{
		[Token(Token = "0x4002312")]
		GET_MATCH,
		[Token(Token = "0x4002313")]
		GET_MATCH_LIST,
		[Token(Token = "0x4002314")]
		CREATE_MATCH,
		[Token(Token = "0x4002315")]
		DESTROY_MATCH,
		[Token(Token = "0x4002316")]
		JOIN_MATCH,
		[Token(Token = "0x4002317")]
		LEAVE_MATCH,
		[Token(Token = "0x4002318")]
		SET_MATCH_DATA
	}
	[Token(Token = "0x20007BA")]
	public class Match
	{
		[Token(Token = "0x4002319")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public long id;

		[Token(Token = "0x400231A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public long clientID;

		[Token(Token = "0x400231B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Dictionary<string, MatchData> matchData;

		[Token(Token = "0x60027D4")]
		[Address(RVA = "0x170E4D0", Offset = "0x170E4D0", VA = "0x170E4D0")]
		public Match(long matchID = -1L, [Optional] Dictionary<string, MatchData> matchData)
		{
		}

		[Token(Token = "0x60027D5")]
		[Address(RVA = "0x170E588", Offset = "0x170E588", VA = "0x170E588")]
		public string Serialize(int maxClients)
		{
			return null;
		}

		[Token(Token = "0x60027D6")]
		[Address(RVA = "0x170E598", Offset = "0x170E598", VA = "0x170E598")]
		public static string Serialize(int maxClients, [Optional] Dictionary<string, MatchData> matchData)
		{
			return null;
		}

		[Token(Token = "0x60027D7")]
		[Address(RVA = "0x170E918", Offset = "0x170E918", VA = "0x170E918", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x60027D8")]
		[Address(RVA = "0x170E9AC", Offset = "0x170E9AC", VA = "0x170E9AC", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x60027D9")]
		[Address(RVA = "0x170E9D0", Offset = "0x170E9D0", VA = "0x170E9D0")]
		public static bool operator ==(Match obA, Match obB)
		{
			return default(bool);
		}

		[Token(Token = "0x60027DA")]
		[Address(RVA = "0x170E9EC", Offset = "0x170E9EC", VA = "0x170E9EC")]
		public static bool operator !=(Match obA, Match obB)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20007BB")]
	public class MatchData
	{
		[Token(Token = "0x20007BC")]
		public enum ValueType
		{
			[Token(Token = "0x400231F")]
			STRING,
			[Token(Token = "0x4002320")]
			INT,
			[Token(Token = "0x4002321")]
			FLOAT
		}

		[Token(Token = "0x400231C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ValueType valueType;

		[Token(Token = "0x400231D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string value;

		[Token(Token = "0x17000621")]
		public string stringValue
		{
			[Token(Token = "0x60027DB")]
			[Address(RVA = "0x170EA1C", Offset = "0x170EA1C", VA = "0x170EA1C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000622")]
		public int intValue
		{
			[Token(Token = "0x60027DC")]
			[Address(RVA = "0x170EA24", Offset = "0x170EA24", VA = "0x170EA24")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000623")]
		public uint uintValue
		{
			[Token(Token = "0x60027DD")]
			[Address(RVA = "0x170EA94", Offset = "0x170EA94", VA = "0x170EA94")]
			get
			{
				return default(uint);
			}
		}

		[Token(Token = "0x17000624")]
		public long longValue
		{
			[Token(Token = "0x60027DE")]
			[Address(RVA = "0x170EB04", Offset = "0x170EB04", VA = "0x170EB04")]
			get
			{
				return default(long);
			}
		}

		[Token(Token = "0x17000625")]
		public ulong ulongValue
		{
			[Token(Token = "0x60027DF")]
			[Address(RVA = "0x170EB70", Offset = "0x170EB70", VA = "0x170EB70")]
			get
			{
				return default(ulong);
			}
		}

		[Token(Token = "0x17000626")]
		public float floatValue
		{
			[Token(Token = "0x60027E0")]
			[Address(RVA = "0x170EBDC", Offset = "0x170EBDC", VA = "0x170EBDC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000627")]
		public double doubleValue
		{
			[Token(Token = "0x60027E1")]
			[Address(RVA = "0x170EC50", Offset = "0x170EC50", VA = "0x170EC50")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x60027E2")]
		[Address(RVA = "0x170ECBC", Offset = "0x170ECBC", VA = "0x170ECBC")]
		public MatchData(string text, int startPos, ref int endPos, out string key)
		{
		}

		[Token(Token = "0x60027E3")]
		[Address(RVA = "0x170F050", Offset = "0x170F050", VA = "0x170F050")]
		public MatchData(string value, ValueType valueType)
		{
		}

		[Token(Token = "0x60027E4")]
		[Address(RVA = "0x170F0D4", Offset = "0x170F0D4", VA = "0x170F0D4")]
		public MatchData(double value)
		{
		}

		[Token(Token = "0x60027E5")]
		[Address(RVA = "0x170F164", Offset = "0x170F164", VA = "0x170F164")]
		public MatchData(float value)
		{
		}

		[Token(Token = "0x60027E6")]
		[Address(RVA = "0x170F1F4", Offset = "0x170F1F4", VA = "0x170F1F4")]
		public MatchData(int value)
		{
		}

		[Token(Token = "0x60027E7")]
		[Address(RVA = "0x170F284", Offset = "0x170F284", VA = "0x170F284")]
		public MatchData(uint value)
		{
		}

		[Token(Token = "0x60027E8")]
		[Address(RVA = "0x170F318", Offset = "0x170F318", VA = "0x170F318")]
		public MatchData(long value)
		{
		}

		[Token(Token = "0x60027E9")]
		[Address(RVA = "0x170F3A8", Offset = "0x170F3A8", VA = "0x170F3A8")]
		public MatchData(ulong value)
		{
		}

		[Token(Token = "0x60027EA")]
		[Address(RVA = "0x170F43C", Offset = "0x170F43C", VA = "0x170F43C")]
		public MatchData(string value)
		{
		}

		[Token(Token = "0x60027EB")]
		[Address(RVA = "0x170F024", Offset = "0x170F024", VA = "0x170F024")]
		private void init(string value, ValueType valueType = ValueType.STRING)
		{
		}

		[Token(Token = "0x60027EC")]
		[Address(RVA = "0x170F4BC", Offset = "0x170F4BC", VA = "0x170F4BC")]
		public string Serialize(string key)
		{
			return null;
		}

		[Token(Token = "0x60027ED")]
		[Address(RVA = "0x170E684", Offset = "0x170E684", VA = "0x170E684")]
		public static string SerializeDictionary(Dictionary<string, MatchData> data)
		{
			return null;
		}

		[Token(Token = "0x60027EE")]
		[Address(RVA = "0x170F730", Offset = "0x170F730", VA = "0x170F730")]
		public static Dictionary<string, MatchData> DeserializeDictionary(string text, int startPos, ref int endPos)
		{
			return null;
		}

		[Token(Token = "0x60027EF")]
		[Address(RVA = "0x170F8A8", Offset = "0x170F8A8", VA = "0x170F8A8")]
		public static implicit operator MatchData(int value)
		{
			return null;
		}

		[Token(Token = "0x60027F0")]
		[Address(RVA = "0x170F908", Offset = "0x170F908", VA = "0x170F908")]
		public static implicit operator MatchData(uint value)
		{
			return null;
		}

		[Token(Token = "0x60027F1")]
		[Address(RVA = "0x170F968", Offset = "0x170F968", VA = "0x170F968")]
		public static implicit operator MatchData(long value)
		{
			return null;
		}

		[Token(Token = "0x60027F2")]
		[Address(RVA = "0x170F9C8", Offset = "0x170F9C8", VA = "0x170F9C8")]
		public static implicit operator MatchData(ulong value)
		{
			return null;
		}

		[Token(Token = "0x60027F3")]
		[Address(RVA = "0x170FA28", Offset = "0x170FA28", VA = "0x170FA28")]
		public static implicit operator MatchData(double value)
		{
			return null;
		}

		[Token(Token = "0x60027F4")]
		[Address(RVA = "0x170FA90", Offset = "0x170FA90", VA = "0x170FA90")]
		public static implicit operator MatchData(float value)
		{
			return null;
		}

		[Token(Token = "0x60027F5")]
		[Address(RVA = "0x170FAF8", Offset = "0x170FAF8", VA = "0x170FAF8")]
		public static implicit operator MatchData(string value)
		{
			return null;
		}

		[Token(Token = "0x60027F6")]
		[Address(RVA = "0x170FB58", Offset = "0x170FB58", VA = "0x170FB58")]
		public static implicit operator int(MatchData matchData)
		{
			return default(int);
		}

		[Token(Token = "0x60027F7")]
		[Address(RVA = "0x170FB64", Offset = "0x170FB64", VA = "0x170FB64")]
		public static implicit operator uint(MatchData matchData)
		{
			return default(uint);
		}

		[Token(Token = "0x60027F8")]
		[Address(RVA = "0x170FB70", Offset = "0x170FB70", VA = "0x170FB70")]
		public static implicit operator long(MatchData matchData)
		{
			return default(long);
		}

		[Token(Token = "0x60027F9")]
		[Address(RVA = "0x170FB7C", Offset = "0x170FB7C", VA = "0x170FB7C")]
		public static implicit operator ulong(MatchData matchData)
		{
			return default(ulong);
		}

		[Token(Token = "0x60027FA")]
		[Address(RVA = "0x170FB88", Offset = "0x170FB88", VA = "0x170FB88")]
		public static implicit operator double(MatchData matchData)
		{
			return default(double);
		}

		[Token(Token = "0x60027FB")]
		[Address(RVA = "0x170FB98", Offset = "0x170FB98", VA = "0x170FB98")]
		public static implicit operator float(MatchData matchData)
		{
			return default(float);
		}

		[Token(Token = "0x60027FC")]
		[Address(RVA = "0x170FBA8", Offset = "0x170FBA8", VA = "0x170FBA8")]
		public static implicit operator string(MatchData matchData)
		{
			return null;
		}

		[Token(Token = "0x60027FD")]
		[Address(RVA = "0x170FBF8", Offset = "0x170FBF8", VA = "0x170FBF8", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x20007BD")]
	public class MatchFilter : MatchData
	{
		[Token(Token = "0x20007BE")]
		public enum OperationType
		{
			[Token(Token = "0x4002325")]
			EQUALS,
			[Token(Token = "0x4002326")]
			NOT_EQUALS,
			[Token(Token = "0x4002327")]
			LIKE,
			[Token(Token = "0x4002328")]
			NOT_LIKE,
			[Token(Token = "0x4002329")]
			LESS,
			[Token(Token = "0x400232A")]
			GREATER
		}

		[Token(Token = "0x4002322")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OperationType operation;

		[Token(Token = "0x4002323")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string key;

		[Token(Token = "0x60027FE")]
		[Address(RVA = "0x170FC00", Offset = "0x170FC00", VA = "0x170FC00")]
		public MatchFilter(string key, double value, OperationType operation = OperationType.EQUALS)
		{
		}

		[Token(Token = "0x60027FF")]
		[Address(RVA = "0x170FC38", Offset = "0x170FC38", VA = "0x170FC38")]
		public MatchFilter(string key, long value, OperationType operation = OperationType.EQUALS)
		{
		}

		[Token(Token = "0x6002800")]
		[Address(RVA = "0x170FC74", Offset = "0x170FC74", VA = "0x170FC74")]
		public MatchFilter(string key, string value, OperationType operation = OperationType.EQUALS)
		{
		}

		[Token(Token = "0x6002801")]
		[Address(RVA = "0x170FCB0", Offset = "0x170FCB0", VA = "0x170FCB0")]
		public string Serialize()
		{
			return null;
		}

		[Token(Token = "0x6002802")]
		[Address(RVA = "0x170FD30", Offset = "0x170FD30", VA = "0x170FD30")]
		public static string Serialize(List<MatchFilter> filters)
		{
			return null;
		}
	}
	[Token(Token = "0x20007BF")]
	public class Message
	{
		[Token(Token = "0x400232B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Command command;

		[Token(Token = "0x400232C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string payload;

		[Token(Token = "0x6002803")]
		[Address(RVA = "0x170FF84", Offset = "0x170FF84", VA = "0x170FF84")]
		public Message(Command command, string payload)
		{
		}

		[Token(Token = "0x6002804")]
		[Address(RVA = "0x170EEB0", Offset = "0x170EEB0", VA = "0x170EEB0")]
		public static string ParseQuoted(string text, int startPos, ref int endPos)
		{
			return null;
		}
	}
	[Token(Token = "0x20007C0")]
	public class Transaction
	{
		[Token(Token = "0x400232D")]
		private const string TAG = "Transaction: ";

		[Token(Token = "0x400232E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string transactionID;

		[Token(Token = "0x400232F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Message request;

		[Token(Token = "0x4002330")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string response;

		[Token(Token = "0x4002331")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool isComplete;

		[Token(Token = "0x4002332")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Action<bool, Transaction> onResponse;

		[Token(Token = "0x4002333")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Coroutine timeoutProcess;

		[Token(Token = "0x6002805")]
		[Address(RVA = "0x170FFBC", Offset = "0x170FFBC", VA = "0x170FFBC")]
		public Transaction(string transactionID, Message request, Action<bool, Transaction> onResponse)
		{
		}

		[Token(Token = "0x6002806")]
		[Address(RVA = "0x171001C", Offset = "0x171001C", VA = "0x171001C")]
		public void Complete(string response)
		{
		}

		[Token(Token = "0x6002807")]
		[Address(RVA = "0x171006C", Offset = "0x171006C", VA = "0x171006C")]
		public void Failed(string response)
		{
		}

		[Token(Token = "0x6002808")]
		[Address(RVA = "0x17100BC", Offset = "0x17100BC", VA = "0x17100BC")]
		public void Timeout()
		{
		}

		[Token(Token = "0x6002809")]
		[Address(RVA = "0x1710154", Offset = "0x1710154", VA = "0x1710154")]
		public static string GenerateID()
		{
			return null;
		}
	}
	[Token(Token = "0x20007C2")]
	public class Matchmaker : MonoBehaviour
	{
		[Token(Token = "0x20007C3")]
		[CompilerGenerated]
		private sealed class <ConnectToMatchmaker>d__29 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400234E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400234F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002350")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Matchmaker <>4__this;

			[Token(Token = "0x4002351")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <maxTries>5__2;

			[Token(Token = "0x4002352")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private int <attempts>5__3;

			[Token(Token = "0x4002353")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private IAsyncResult <connectResult>5__4;

			[Token(Token = "0x17000629")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002830")]
				[Address(RVA = "0x1714264", Offset = "0x1714264", VA = "0x1714264", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700062A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002832")]
				[Address(RVA = "0x17142AC", Offset = "0x17142AC", VA = "0x17142AC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600282D")]
			[Address(RVA = "0x17106C0", Offset = "0x17106C0", VA = "0x17106C0")]
			[DebuggerHidden]
			public <ConnectToMatchmaker>d__29(int <>1__state)
			{
			}

			[Token(Token = "0x600282E")]
			[Address(RVA = "0x1713760", Offset = "0x1713760", VA = "0x1713760", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600282F")]
			[Address(RVA = "0x1713764", Offset = "0x1713764", VA = "0x1713764", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002831")]
			[Address(RVA = "0x171426C", Offset = "0x171426C", VA = "0x171426C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20007CD")]
		[CompilerGenerated]
		private sealed class <FetchExternalIP>d__41 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002366")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002367")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002368")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string ipSource;

			[Token(Token = "0x4002369")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private UnityWebRequest <www>5__2;

			[Token(Token = "0x1700062B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002849")]
				[Address(RVA = "0x1714780", Offset = "0x1714780", VA = "0x1714780", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700062C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600284B")]
				[Address(RVA = "0x17147C8", Offset = "0x17147C8", VA = "0x17147C8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002846")]
			[Address(RVA = "0x1712620", Offset = "0x1712620", VA = "0x1712620")]
			[DebuggerHidden]
			public <FetchExternalIP>d__41(int <>1__state)
			{
			}

			[Token(Token = "0x6002847")]
			[Address(RVA = "0x17144E8", Offset = "0x17144E8", VA = "0x17144E8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002848")]
			[Address(RVA = "0x17144EC", Offset = "0x17144EC", VA = "0x17144EC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600284A")]
			[Address(RVA = "0x1714788", Offset = "0x1714788", VA = "0x1714788", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20007CE")]
		[CompilerGenerated]
		private sealed class <SendCommandAsync>d__49 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400236A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400236B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400236C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Matchmaker <>4__this;

			[Token(Token = "0x400236D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Action<bool, Transaction> onResponse;

			[Token(Token = "0x400236E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Message request;

			[Token(Token = "0x400236F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private Transaction <transaction>5__2;

			[Token(Token = "0x4002370")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Task <writeTask>5__3;

			[Token(Token = "0x1700062D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600284F")]
				[Address(RVA = "0x1714D90", Offset = "0x1714D90", VA = "0x1714D90", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700062E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002851")]
				[Address(RVA = "0x1714DD8", Offset = "0x1714DD8", VA = "0x1714DD8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600284C")]
			[Address(RVA = "0x1713278", Offset = "0x1713278", VA = "0x1713278")]
			[DebuggerHidden]
			public <SendCommandAsync>d__49(int <>1__state)
			{
			}

			[Token(Token = "0x600284D")]
			[Address(RVA = "0x17147D0", Offset = "0x17147D0", VA = "0x17147D0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600284E")]
			[Address(RVA = "0x17147D4", Offset = "0x17147D4", VA = "0x17147D4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002850")]
			[Address(RVA = "0x1714D98", Offset = "0x1714D98", VA = "0x1714D98", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20007CF")]
		[CompilerGenerated]
		private sealed class <TimeoutTransaction>d__50 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002371")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002372")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002373")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Matchmaker <>4__this;

			[Token(Token = "0x4002374")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Transaction transaction;

			[Token(Token = "0x1700062F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002855")]
				[Address(RVA = "0x1714F2C", Offset = "0x1714F2C", VA = "0x1714F2C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000630")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002857")]
				[Address(RVA = "0x1714F74", Offset = "0x1714F74", VA = "0x1714F74", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002852")]
			[Address(RVA = "0x1713330", Offset = "0x1713330", VA = "0x1713330")]
			[DebuggerHidden]
			public <TimeoutTransaction>d__50(int <>1__state)
			{
			}

			[Token(Token = "0x6002853")]
			[Address(RVA = "0x1714DE0", Offset = "0x1714DE0", VA = "0x1714DE0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002854")]
			[Address(RVA = "0x1714DE4", Offset = "0x1714DE4", VA = "0x1714DE4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002856")]
			[Address(RVA = "0x1714F34", Offset = "0x1714F34", VA = "0x1714F34", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20007D0")]
		[CompilerGenerated]
		private sealed class <ResolveMatchmakerURL>d__51 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002375")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002376")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002377")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Matchmaker <>4__this;

			[Token(Token = "0x4002378")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private IAsyncResult <asyncResult>5__2;

			[Token(Token = "0x17000631")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600285B")]
				[Address(RVA = "0x1715218", Offset = "0x1715218", VA = "0x1715218", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000632")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600285D")]
				[Address(RVA = "0x1715260", Offset = "0x1715260", VA = "0x1715260", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002858")]
			[Address(RVA = "0x17133CC", Offset = "0x17133CC", VA = "0x17133CC")]
			[DebuggerHidden]
			public <ResolveMatchmakerURL>d__51(int <>1__state)
			{
			}

			[Token(Token = "0x6002859")]
			[Address(RVA = "0x1714F7C", Offset = "0x1714F7C", VA = "0x1714F7C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600285A")]
			[Address(RVA = "0x1714F80", Offset = "0x1714F80", VA = "0x1714F80", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600285C")]
			[Address(RVA = "0x1715220", Offset = "0x1715220", VA = "0x1715220", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20007D1")]
		[CompilerGenerated]
		private sealed class <KeepAlive>d__52 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002379")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400237A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400237B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Matchmaker <>4__this;

			[Token(Token = "0x400237C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Task <writeTask>5__2;

			[Token(Token = "0x17000633")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002861")]
				[Address(RVA = "0x1715608", Offset = "0x1715608", VA = "0x1715608", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000634")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002863")]
				[Address(RVA = "0x1715650", Offset = "0x1715650", VA = "0x1715650", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600285E")]
			[Address(RVA = "0x17133F4", Offset = "0x17133F4", VA = "0x17133F4")]
			[DebuggerHidden]
			public <KeepAlive>d__52(int <>1__state)
			{
			}

			[Token(Token = "0x600285F")]
			[Address(RVA = "0x1715268", Offset = "0x1715268", VA = "0x1715268", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002860")]
			[Address(RVA = "0x171526C", Offset = "0x171526C", VA = "0x171526C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002862")]
			[Address(RVA = "0x1715610", Offset = "0x1715610", VA = "0x1715610", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20007D2")]
		[CompilerGenerated]
		private sealed class <ReadData>d__53 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400237D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400237E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400237F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Matchmaker <>4__this;

			[Token(Token = "0x4002380")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private object <>7__wrap1;

			[Token(Token = "0x4002381")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private bool <>7__wrap2;

			[Token(Token = "0x4002382")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private int <numCharsRead>5__4;

			[Token(Token = "0x4002383")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private Task<int> <readTask>5__5;

			[Token(Token = "0x17000635")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002868")]
				[Address(RVA = "0x1715BB4", Offset = "0x1715BB4", VA = "0x1715BB4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000636")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600286A")]
				[Address(RVA = "0x1715BFC", Offset = "0x1715BFC", VA = "0x1715BFC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002864")]
			[Address(RVA = "0x171341C", Offset = "0x171341C", VA = "0x171341C")]
			[DebuggerHidden]
			public <ReadData>d__53(int <>1__state)
			{
			}

			[Token(Token = "0x6002865")]
			[Address(RVA = "0x1715658", Offset = "0x1715658", VA = "0x1715658", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002866")]
			[Address(RVA = "0x171568C", Offset = "0x171568C", VA = "0x171568C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002867")]
			[Address(RVA = "0x1715B94", Offset = "0x1715B94", VA = "0x1715B94")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6002869")]
			[Address(RVA = "0x1715BBC", Offset = "0x1715BBC", VA = "0x1715BBC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002336")]
		public const string TAG = "Match Up: ";

		[Token(Token = "0x4002337")]
		private const int KEEP_ALIVE_TIMEOUT = 5;

		[Token(Token = "0x4002338")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static string externalIP;

		[Token(Token = "0x4002339")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Tooltip("The url of the matchmaking server")]
		public string matchmakerURL;

		[Token(Token = "0x400233A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Tooltip("The port to connect to on the matchmaking server")]
		public int matchmakerPort;

		[Token(Token = "0x400233B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[Tooltip("How long to wait for a response before giving up")]
		public float timeout;

		[Token(Token = "0x400233C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Tooltip("How many times to attempt to re-connect to the matchmaking server if connection is lost")]
		public int maxReconnectionAttempts;

		[Token(Token = "0x400233D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Tooltip("A web service to query to retrieve the external IP of this computer")]
		public string externalIPSource;

		[Token(Token = "0x400233E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Action<Exception> onLostConnectionToMatchmakingServer;

		[Token(Token = "0x400233F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool autoConnect;

		[Token(Token = "0x4002340")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private IPAddress matchmakerIP;

		[Token(Token = "0x4002341")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Mirror.NetworkManager networkManager;

		[Token(Token = "0x4002342")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private TcpClient matchmakingClient;

		[Token(Token = "0x4002343")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private NetworkStream networkStream;

		[Token(Token = "0x4002344")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private StreamReader streamReader;

		[Token(Token = "0x4002345")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Dictionary<string, Transaction> transactions;

		[Token(Token = "0x4002346")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Match currentMatch;

		[Token(Token = "0x4002347")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private bool isConnecting;

		[Token(Token = "0x4002348")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private float lastKeepAliveTime;

		[Token(Token = "0x4002349")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private object socketLock;

		[Token(Token = "0x400234A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private string partialMessage;

		[Token(Token = "0x400234B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private char[] buffer;

		[Token(Token = "0x400234C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Coroutine readProcess;

		[Token(Token = "0x400234D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Coroutine keepAliveProcess;

		[Token(Token = "0x17000628")]
		public bool IsReady
		{
			[Token(Token = "0x600280D")]
			[Address(RVA = "0x171036C", Offset = "0x171036C", VA = "0x171036C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600280E")]
		[Address(RVA = "0x1710464", Offset = "0x1710464", VA = "0x1710464")]
		private void Start()
		{
		}

		[Token(Token = "0x600280F")]
		[Address(RVA = "0x1710508", Offset = "0x1710508", VA = "0x1710508")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6002810")]
		[Address(RVA = "0x171051C", Offset = "0x171051C", VA = "0x171051C", Slot = "4")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6002811")]
		[Address(RVA = "0x1710494", Offset = "0x1710494", VA = "0x1710494")]
		[IteratorStateMachine(typeof(<ConnectToMatchmaker>d__29))]
		public IEnumerator ConnectToMatchmaker()
		{
			return null;
		}

		[Token(Token = "0x6002812")]
		[Address(RVA = "0x17106E8", Offset = "0x17106E8", VA = "0x17106E8")]
		public void Disconnect()
		{
		}

		[Token(Token = "0x6002813")]
		[Address(RVA = "0x171076C", Offset = "0x171076C", VA = "0x171076C")]
		public void CreateMatch(int maxClients, [Optional] Dictionary<string, MatchData> matchData, [Optional] Action<bool, Match> onCreateMatch)
		{
		}

		[Token(Token = "0x6002814")]
		[Address(RVA = "0x1711264", Offset = "0x1711264", VA = "0x1711264")]
		public void SetMatchData(string key, MatchData matchData, [Optional] Action<bool, Match> onSetMatchData)
		{
		}

		[Token(Token = "0x6002815")]
		[Address(RVA = "0x17114A0", Offset = "0x17114A0", VA = "0x17114A0")]
		public void SetMatchData(Dictionary<string, MatchData> matchData, [Optional] Action<bool, Match> onSetMatchData)
		{
		}

		[Token(Token = "0x6002816")]
		[Address(RVA = "0x1711760", Offset = "0x1711760", VA = "0x1711760")]
		public void UpdateMatchData(Dictionary<string, MatchData> additionalData, [Optional] Action<bool, Match> onUpdateMatchData)
		{
		}

		[Token(Token = "0x6002817")]
		[Address(RVA = "0x1711590", Offset = "0x1711590", VA = "0x1711590")]
		public void UpdateMatchData([Optional] Action<bool, Match> onUpdateMatchData)
		{
		}

		[Token(Token = "0x6002818")]
		[Address(RVA = "0x17119B0", Offset = "0x17119B0", VA = "0x17119B0")]
		public void DestroyMatch([Optional] Action<bool> onDestroyMatch)
		{
		}

		[Token(Token = "0x6002819")]
		[Address(RVA = "0x1711B48", Offset = "0x1711B48", VA = "0x1711B48")]
		public void JoinMatch(Match match, [Optional] Action<bool, Match> onJoinMatch)
		{
		}

		[Token(Token = "0x600281A")]
		[Address(RVA = "0x1711D18", Offset = "0x1711D18", VA = "0x1711D18")]
		public void LeaveMatch([Optional] Action<bool> onLeaveMatch)
		{
		}

		[Token(Token = "0x600281B")]
		[Address(RVA = "0x1711EA4", Offset = "0x1711EA4", VA = "0x1711EA4")]
		public void GetMatch(Action<bool, Match> onGetMatch, long id, bool includeMatchData = true)
		{
		}

		[Token(Token = "0x600281C")]
		[Address(RVA = "0x1712004", Offset = "0x1712004", VA = "0x1712004")]
		public void GetMatchList(Action<bool, Match[]> onMatchList, int pageNumber = 0, int resultsPerPage = 10, [Optional] List<MatchFilter> filters, bool includeMatchData = true)
		{
		}

		[Token(Token = "0x600281D")]
		[Address(RVA = "0x17125AC", Offset = "0x17125AC", VA = "0x17125AC")]
		[IteratorStateMachine(typeof(<FetchExternalIP>d__41))]
		public static IEnumerator FetchExternalIP(string ipSource)
		{
			return null;
		}

		[Token(Token = "0x600281E")]
		[Address(RVA = "0x1712648", Offset = "0x1712648", VA = "0x1712648")]
		public static string PickCorrectAddressToConnectTo(string hostExternalIP, string hostInternalIP)
		{
			return null;
		}

		[Token(Token = "0x600281F")]
		[Address(RVA = "0x1710B84", Offset = "0x1710B84", VA = "0x1710B84")]
		public static string GetLocalAddress(AddressFamily family)
		{
			return null;
		}

		[Token(Token = "0x6002820")]
		[Address(RVA = "0x1712700", Offset = "0x1712700", VA = "0x1712700")]
		private void OnCreateMatchInternal(bool success, string response, Dictionary<string, MatchData> matchData, Action<bool, Match> onCreateMatch)
		{
		}

		[Token(Token = "0x6002821")]
		[Address(RVA = "0x1712978", Offset = "0x1712978", VA = "0x1712978")]
		private void OnJoinMatchInternal(bool success, string response, Match match, Action<bool, Match> onJoinMatch)
		{
		}

		[Token(Token = "0x6002822")]
		[Address(RVA = "0x1712B98", Offset = "0x1712B98", VA = "0x1712B98")]
		private void OnGetMatchInternal(bool success, string response, Action<bool, Match> onMatch)
		{
		}

		[Token(Token = "0x6002823")]
		[Address(RVA = "0x1712E0C", Offset = "0x1712E0C", VA = "0x1712E0C")]
		private void OnGetMatchListInternal(bool success, string response, Action<bool, Match[]> onMatchList)
		{
		}

		[Token(Token = "0x6002824")]
		[Address(RVA = "0x17111BC", Offset = "0x17111BC", VA = "0x17111BC")]
		private void SendCommand(Command command, string textToSend = "", [Optional] Action<bool, Transaction> onResponse)
		{
		}

		[Token(Token = "0x6002825")]
		[Address(RVA = "0x17131D4", Offset = "0x17131D4", VA = "0x17131D4")]
		[IteratorStateMachine(typeof(<SendCommandAsync>d__49))]
		private IEnumerator SendCommandAsync(Message request, [Optional] Action<bool, Transaction> onResponse)
		{
			return null;
		}

		[Token(Token = "0x6002826")]
		[Address(RVA = "0x17132A0", Offset = "0x17132A0", VA = "0x17132A0")]
		[IteratorStateMachine(typeof(<TimeoutTransaction>d__50))]
		private IEnumerator TimeoutTransaction(Transaction transaction)
		{
			return null;
		}

		[Token(Token = "0x6002827")]
		[Address(RVA = "0x1713358", Offset = "0x1713358", VA = "0x1713358")]
		[IteratorStateMachine(typeof(<ResolveMatchmakerURL>d__51))]
		private IEnumerator ResolveMatchmakerURL()
		{
			return null;
		}

		[Token(Token = "0x6002828")]
		[Address(RVA = "0x171064C", Offset = "0x171064C", VA = "0x171064C")]
		[IteratorStateMachine(typeof(<KeepAlive>d__52))]
		private IEnumerator KeepAlive()
		{
			return null;
		}

		[Token(Token = "0x6002829")]
		[Address(RVA = "0x17105D8", Offset = "0x17105D8", VA = "0x17105D8")]
		[IteratorStateMachine(typeof(<ReadData>d__53))]
		private IEnumerator ReadData()
		{
			return null;
		}

		[Token(Token = "0x600282A")]
		[Address(RVA = "0x1711028", Offset = "0x1711028", VA = "0x1711028")]
		public static int GetTransportPort()
		{
			return default(int);
		}

		[Token(Token = "0x600282B")]
		[Address(RVA = "0x1713444", Offset = "0x1713444", VA = "0x1713444")]
		public static void SetTransportPort(int port)
		{
		}

		[Token(Token = "0x600282C")]
		[Address(RVA = "0x17135D8", Offset = "0x17135D8", VA = "0x17135D8")]
		public Matchmaker()
		{
		}
	}
	[Token(Token = "0x20007D3")]
	public class CertificateDisregarder : CertificateHandler
	{
		[Token(Token = "0x600286B")]
		[Address(RVA = "0x1715C04", Offset = "0x1715C04", VA = "0x1715C04", Slot = "5")]
		protected override bool ValidateCertificate(byte[] certificateData)
		{
			return default(bool);
		}

		[Token(Token = "0x600286C")]
		[Address(RVA = "0x1714778", Offset = "0x1714778", VA = "0x1714778")]
		public CertificateDisregarder()
		{
		}
	}
}
namespace MatchUp.Examples.Basic
{
	[Token(Token = "0x20007D4")]
	[RequireComponent(typeof(Matchmaker))]
	public class ExampleBasicMatchmaker : MonoBehaviour
	{
		[Token(Token = "0x4002384")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Matchmaker matchUp;

		[Token(Token = "0x4002385")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Match[] matches;

		[Token(Token = "0x4002386")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool isHost;

		[Token(Token = "0x4002387")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		private bool isClient;

		[Token(Token = "0x4002388")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string hostAddress;

		[Token(Token = "0x4002389")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int hostPort;

		[Token(Token = "0x600286D")]
		[Address(RVA = "0x1715C0C", Offset = "0x1715C0C", VA = "0x1715C0C")]
		private void Awake()
		{
		}

		[Token(Token = "0x600286E")]
		[Address(RVA = "0x1715CD4", Offset = "0x1715CD4", VA = "0x1715CD4")]
		private void OnLostConnectionToMatchmakingServer(Exception e)
		{
		}

		[Token(Token = "0x600286F")]
		[Address(RVA = "0x1715CDC", Offset = "0x1715CDC", VA = "0x1715CDC")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6002870")]
		[Address(RVA = "0x17163A0", Offset = "0x17163A0", VA = "0x17163A0")]
		private void DisplayJoinMatchButton(int i, Match match)
		{
		}

		[Token(Token = "0x6002871")]
		[Address(RVA = "0x17160EC", Offset = "0x17160EC", VA = "0x17160EC")]
		private void HostAMatch()
		{
		}

		[Token(Token = "0x6002872")]
		[Address(RVA = "0x1716648", Offset = "0x1716648", VA = "0x1716648")]
		private void OnMatchCreated(bool success, Match match)
		{
		}

		[Token(Token = "0x6002873")]
		[Address(RVA = "0x17162C4", Offset = "0x17162C4", VA = "0x17162C4")]
		private void GetMatchList()
		{
		}

		[Token(Token = "0x6002874")]
		[Address(RVA = "0x1716774", Offset = "0x1716774", VA = "0x1716774")]
		private void OnMatchListGot(bool success, Match[] matches)
		{
		}

		[Token(Token = "0x6002875")]
		[Address(RVA = "0x1716818", Offset = "0x1716818", VA = "0x1716818")]
		private void OnJoinMatch(bool success, Match match)
		{
		}

		[Token(Token = "0x6002876")]
		[Address(RVA = "0x171657C", Offset = "0x171657C", VA = "0x171657C")]
		private void Disconnect()
		{
		}

		[Token(Token = "0x6002877")]
		[Address(RVA = "0x1716BDC", Offset = "0x1716BDC", VA = "0x1716BDC")]
		public ExampleBasicMatchmaker()
		{
		}
	}
}
namespace DigitalRubyShared
{
	[Token(Token = "0x20007D5")]
	[AddComponentMenu("Fingers Gestures/Component/Fingers Camera Move 3D", 4)]
	public class FingersCameraMove3DComponentScript : MonoBehaviour
	{
		[Token(Token = "0x400238A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Tooltip("The transform to move, defaults to the transform on this script")]
		public Transform Target;

		[Token(Token = "0x400238B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Tooltip("Controls pan (left/right for strafe, up/down for forward/back) speed in number of world units per screen units panned")]
		[Range(-10f, 10f)]
		public float PanSpeed;

		[Token(Token = "0x400238C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[Tooltip("Controls tilt with two finger pan up or down")]
		[Range(-10f, 10f)]
		public float TiltSpeed;

		[Token(Token = "0x400238D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Tooltip("Threshold (in units) tilt gesture must move in order to execute")]
		public float TiltThreadhold;

		[Token(Token = "0x400238E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[Tooltip("Controls zoom in/out speed")]
		[Range(-10f, 10f)]
		public float ZoomSpeed;

		[Token(Token = "0x400238F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Tooltip("Controls rotation speed")]
		[Range(-10f, 10f)]
		public float RotateSpeed;

		[Token(Token = "0x4002390")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[Tooltip("How much to dampen movement, lower values dampen faster")]
		[Range(0f, 1f)]
		public float Dampening;

		[Token(Token = "0x4002395")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vector3 moveVelocity;

		[Token(Token = "0x4002396")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float tiltVelocity;

		[Token(Token = "0x4002397")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float angularVelocity;

		[Token(Token = "0x4002398")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private Vector3 zoomVelocity;

		[Token(Token = "0x17000637")]
		public PanGestureRecognizer PanGesture
		{
			[Token(Token = "0x6002878")]
			[Address(RVA = "0x1716BE4", Offset = "0x1716BE4", VA = "0x1716BE4")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6002879")]
			[Address(RVA = "0x1716BEC", Offset = "0x1716BEC", VA = "0x1716BEC")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000638")]
		public PanGestureRecognizer TiltGesture
		{
			[Token(Token = "0x600287A")]
			[Address(RVA = "0x1716BF4", Offset = "0x1716BF4", VA = "0x1716BF4")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600287B")]
			[Address(RVA = "0x1716BFC", Offset = "0x1716BFC", VA = "0x1716BFC")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000639")]
		public ScaleGestureRecognizer ScaleGesture
		{
			[Token(Token = "0x600287C")]
			[Address(RVA = "0x1716C04", Offset = "0x1716C04", VA = "0x1716C04")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600287D")]
			[Address(RVA = "0x1716C0C", Offset = "0x1716C0C", VA = "0x1716C0C")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700063A")]
		public RotateGestureRecognizer RotateGesture
		{
			[Token(Token = "0x600287E")]
			[Address(RVA = "0x1716C14", Offset = "0x1716C14", VA = "0x1716C14")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600287F")]
			[Address(RVA = "0x1716C1C", Offset = "0x1716C1C", VA = "0x1716C1C")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6002880")]
		[Address(RVA = "0x1716C24", Offset = "0x1716C24", VA = "0x1716C24")]
		private void PanGestureCallback(GestureRecognizer gesture)
		{
		}

		[Token(Token = "0x6002881")]
		[Address(RVA = "0x1716E4C", Offset = "0x1716E4C", VA = "0x1716E4C")]
		private void TiltGestureCallback(GestureRecognizer gesture)
		{
		}

		[Token(Token = "0x6002882")]
		[Address(RVA = "0x1716EB0", Offset = "0x1716EB0", VA = "0x1716EB0")]
		private void ScaleGestureCallback(GestureRecognizer gesture)
		{
		}

		[Token(Token = "0x6002883")]
		[Address(RVA = "0x1716F68", Offset = "0x1716F68", VA = "0x1716F68")]
		private void RotateGestureCallback(GestureRecognizer gesture)
		{
		}

		[Token(Token = "0x6002884")]
		[Address(RVA = "0x1716FD4", Offset = "0x1716FD4", VA = "0x1716FD4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002885")]
		[Address(RVA = "0x171738C", Offset = "0x171738C", VA = "0x171738C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002886")]
		[Address(RVA = "0x171744C", Offset = "0x171744C", VA = "0x171744C")]
		private void Update()
		{
		}

		[Token(Token = "0x6002887")]
		[Address(RVA = "0x1717540", Offset = "0x1717540", VA = "0x1717540")]
		public FingersCameraMove3DComponentScript()
		{
		}
	}
	[Token(Token = "0x20007D6")]
	public static class FingersCrossPlatformInputReflectionScript
	{
		[Token(Token = "0x4002399")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Type crossPlatformInputManagerType;

		[Token(Token = "0x400239A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly Type virtualAxisType;

		[Token(Token = "0x400239B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static readonly MethodInfo registerVirtualAxisMethod;

		[Token(Token = "0x400239C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static readonly MethodInfo unRegisterVirtualAxisMethod;

		[Token(Token = "0x400239D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static readonly MethodInfo getVirtualAxisMethod;

		[Token(Token = "0x400239E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static readonly MethodInfo axisUpdateMethod;

		[Token(Token = "0x6002888")]
		[Address(RVA = "0x1717564", Offset = "0x1717564", VA = "0x1717564")]
		private static Type GetCrossPlatformInputType(string subType)
		{
			return null;
		}

		[Token(Token = "0x6002889")]
		[Address(RVA = "0x17177A4", Offset = "0x17177A4", VA = "0x17177A4")]
		static FingersCrossPlatformInputReflectionScript()
		{
		}

		[Token(Token = "0x600288A")]
		[Address(RVA = "0x1717B4C", Offset = "0x1717B4C", VA = "0x1717B4C")]
		public static object RegisterVirtualAxis(string name, out bool registered)
		{
			return null;
		}

		[Token(Token = "0x600288B")]
		[Address(RVA = "0x1717E38", Offset = "0x1717E38", VA = "0x1717E38")]
		public static bool UnRegisterVirtualAxis(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x600288C")]
		[Address(RVA = "0x1717D20", Offset = "0x1717D20", VA = "0x1717D20")]
		public static object GetVirtualAxis(string name)
		{
			return null;
		}

		[Token(Token = "0x600288D")]
		[Address(RVA = "0x1717F50", Offset = "0x1717F50", VA = "0x1717F50")]
		public static bool UpdateVirtualAxis(object axis, float value)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20007D7")]
	[AddComponentMenu("Fingers Gestures/Component/Fingers Drag and Drop", 0)]
	public class FingersDragDropComponentScript : MonoBehaviour
	{
		[Token(Token = "0x400239F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Tooltip("The camera to use to convert screen coordinates to world coordinates. Defaults to Camera.main.")]
		public Camera[] Cameras;

		[Token(Token = "0x40023A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Tooltip("Whether to bring the object to the front when a gesture executes on it. Only used for 2D objects, ignored for 3D objects.")]
		public bool BringToFront;

		[Token(Token = "0x40023A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[Tooltip("Scale to increase object by when a drag starts. When drags stops, scale is returned to normal.")]
		[Range(1f, 1.5f)]
		public float DragScale;

		[Token(Token = "0x40023A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Rigidbody rigidBody;

		[Token(Token = "0x40023A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Rigidbody2D rigidBody2D;

		[Token(Token = "0x40023A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private SpriteRenderer spriteRenderer;

		[Token(Token = "0x40023A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int startSortOrder;

		[Token(Token = "0x40023A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float panZ;

		[Token(Token = "0x40023A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector3 panOffset;

		[Token(Token = "0x40023A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private RectTransform rt;

		[Token(Token = "0x40023AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Canvas canvas;

		[Token(Token = "0x1700063B")]
		public LongPressGestureRecognizer LongPressGesture
		{
			[Token(Token = "0x600288E")]
			[Address(RVA = "0x17180AC", Offset = "0x17180AC", VA = "0x17180AC")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600288F")]
			[Address(RVA = "0x17180B4", Offset = "0x17180B4", VA = "0x17180B4")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x14000094")]
		public event EventHandler DragStarted
		{
			[Token(Token = "0x6002894")]
			[Address(RVA = "0x17188F4", Offset = "0x17188F4", VA = "0x17188F4")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6002895")]
			[Address(RVA = "0x1718990", Offset = "0x1718990", VA = "0x1718990")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000095")]
		public event EventHandler DragUpdated
		{
			[Token(Token = "0x6002896")]
			[Address(RVA = "0x1718A2C", Offset = "0x1718A2C", VA = "0x1718A2C")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6002897")]
			[Address(RVA = "0x1718AC8", Offset = "0x1718AC8", VA = "0x1718AC8")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000096")]
		public event EventHandler DragEnded
		{
			[Token(Token = "0x6002898")]
			[Address(RVA = "0x1718B64", Offset = "0x1718B64", VA = "0x1718B64")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6002899")]
			[Address(RVA = "0x1718C00", Offset = "0x1718C00", VA = "0x1718C00")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6002890")]
		[Address(RVA = "0x17180BC", Offset = "0x17180BC", VA = "0x17180BC")]
		private Vector3 ScreenToWorldPoint(Camera camera, float x, float y, float z)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002891")]
		[Address(RVA = "0x17181B0", Offset = "0x17181B0", VA = "0x17181B0")]
		private void LongPressGestureUpdated(GestureRecognizer r)
		{
		}

		[Token(Token = "0x6002892")]
		[Address(RVA = "0x171852C", Offset = "0x171852C", VA = "0x171852C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002893")]
		[Address(RVA = "0x1718864", Offset = "0x1718864", VA = "0x1718864")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600289A")]
		[Address(RVA = "0x1718C9C", Offset = "0x1718C9C", VA = "0x1718C9C")]
		public FingersDragDropComponentScript()
		{
		}
	}
	[Token(Token = "0x20007D8")]
	[AddComponentMenu("Fingers Gestures/Component/Fingers First Person Controller", 5)]
	public class FingersFirstPersonControllerScript : MonoBehaviour
	{
		[Token(Token = "0x40023AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Tooltip("Player main rigid body")]
		[Header("Player")]
		public Rigidbody Player;

		[Token(Token = "0x40023AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Tooltip("Player camera")]
		public Camera PlayerCamera;

		[Token(Token = "0x40023B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Tooltip("Player feet collider. Used to determine if jump is possible.")]
		public BoxCollider PlayerFeet;

		[Token(Token = "0x40023B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Range(0.1f, 100f)]
		[Header("Control")]
		[Tooltip("Move speed")]
		public float MoveSpeed;

		[Token(Token = "0x40023B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[Tooltip("Higher values reduce move speed faster as pan vertical approaches 0.")]
		[Range(0f, 1f)]
		public float MovePower;

		[Token(Token = "0x40023B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Tooltip("Rotation speed for sideways pan")]
		[Range(0f, 10f)]
		public float RotateSpeed;

		[Token(Token = "0x40023B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[Tooltip("Higher values reduce rotation faster as pan horizontal approaches 0.")]
		[Range(0f, 16f)]
		public float RotationPower;

		[Token(Token = "0x40023B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[Range(-1f, 1f)]
		[Tooltip("Tilt speed for two finger rotate gesture to look up and down. Set to 0 to disable this.")]
		public float TiltSpeed;

		[Token(Token = "0x40023B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[Tooltip("Tilt angle limits if TiltSpeed is non-zero")]
		public Vector2 TiltLimits;

		[Token(Token = "0x40023B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[Tooltip("How fast the tilt should reset back to default after tilt gesture ends")]
		[Range(0f, 1f)]
		public float TiltResetSpeed;

		[Token(Token = "0x40023B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Range(0f, 32f)]
		[Tooltip("Jump speed/power")]
		public float JumpSpeed;

		[Token(Token = "0x40023B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[Tooltip("How often the player can jump")]
		[Range(0f, 3f)]
		public float JumpCooldown;

		[Token(Token = "0x40023BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The layers the player may jump off of")]
		public LayerMask JumpMask;

		[Token(Token = "0x40023BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float jumpTimer;

		[Token(Token = "0x40023BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool resetTilt;

		[Token(Token = "0x40023BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private readonly PanGestureRecognizer tiltGesture;

		[Token(Token = "0x40023BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float? forwardSpeed;

		[Token(Token = "0x40023BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float? sideSpeed;

		[Token(Token = "0x40023C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private readonly Collider[] tempResults;

		[Token(Token = "0x600289B")]
		[Address(RVA = "0x1718CB8", Offset = "0x1718CB8", VA = "0x1718CB8")]
		private void TiltGesture_StateUpdated(GestureRecognizer gesture)
		{
		}

		[Token(Token = "0x600289C")]
		[Address(RVA = "0x1718EC4", Offset = "0x1718EC4", VA = "0x1718EC4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600289D")]
		[Address(RVA = "0x1718F8C", Offset = "0x1718F8C", VA = "0x1718F8C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600289E")]
		[Address(RVA = "0x1719070", Offset = "0x1719070", VA = "0x1719070")]
		private void Update()
		{
		}

		[Token(Token = "0x600289F")]
		[Address(RVA = "0x1719390", Offset = "0x1719390", VA = "0x1719390")]
		public void Moved(Vector2 panAmount)
		{
		}

		[Token(Token = "0x60028A0")]
		[Address(RVA = "0x1719444", Offset = "0x1719444", VA = "0x1719444")]
		public void Jumped()
		{
		}

		[Token(Token = "0x60028A1")]
		[Address(RVA = "0x1719744", Offset = "0x1719744", VA = "0x1719744")]
		public FingersFirstPersonControllerScript()
		{
		}
	}
	[Token(Token = "0x20007D9")]
	[AddComponentMenu("Fingers Gestures/Component/Fingers Image Recognizer Helper", 8)]
	public class FingersImageGestureHelperComponentScript : ImageGestureRecognizerComponentScript
	{
		[Token(Token = "0x40023C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[Tooltip("The line renderers to show drawn lines or NULL if you are drawing your own lines. Make sure to add enough line renderers to match the max path count for your image gesture recognizer.")]
		public LineRenderer[] LineRenderers;

		[Token(Token = "0x40023C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[Tooltip("Label to show match in, null for none")]
		public Text MatchText;

		[Token(Token = "0x40023C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[Tooltip("Executed whenever lines need updating. Use the gesture property FocusX and FocusY to determine the current point.")]
		public EventHandler LinesUpdated;

		[Token(Token = "0x40023C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[Tooltip("Executed whenever lines are cleared.")]
		public EventHandler LinesCleared;

		[Token(Token = "0x40023C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[Range(0f, 1f)]
		[Tooltip("Line animation duration in seconds")]
		public float LineAnimationDurationSeconds;

		[Token(Token = "0x40023C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private Color savedColor;

		[Token(Token = "0x40023C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private ImageGestureImage matchedImage;

		[Token(Token = "0x40023C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private float animationTime;

		[Token(Token = "0x60028A2")]
		[Address(RVA = "0x1719850", Offset = "0x1719850", VA = "0x1719850")]
		private void ClearLineRenderers()
		{
		}

		[Token(Token = "0x60028A3")]
		[Address(RVA = "0x1719920", Offset = "0x1719920", VA = "0x1719920")]
		private void Gesture_MaximumPathCountExceeded(object sender, EventArgs e)
		{
		}

		[Token(Token = "0x60028A4")]
		[Address(RVA = "0x1719924", Offset = "0x1719924", VA = "0x1719924")]
		private void UpdateLines()
		{
		}

		[Token(Token = "0x60028A5")]
		[Address(RVA = "0x1719AAC", Offset = "0x1719AAC", VA = "0x1719AAC")]
		private void BeginAnimateOutLines()
		{
		}

		[Token(Token = "0x60028A6")]
		[Address(RVA = "0x1719B54", Offset = "0x1719B54", VA = "0x1719B54")]
		private void UpdateLineAnimation()
		{
		}

		[Token(Token = "0x60028A7")]
		[Address(RVA = "0x1719D50", Offset = "0x1719D50", VA = "0x1719D50")]
		public ImageGestureImage CheckForImageMatch()
		{
			return null;
		}

		[Token(Token = "0x60028A8")]
		[Address(RVA = "0x1719E74", Offset = "0x1719E74", VA = "0x1719E74", Slot = "8")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x60028A9")]
		[Address(RVA = "0x1719F18", Offset = "0x1719F18", VA = "0x1719F18", Slot = "7")]
		protected override void LateUpdate()
		{
		}

		[Token(Token = "0x60028AA")]
		[Address(RVA = "0x1719F68", Offset = "0x1719F68", VA = "0x1719F68")]
		public void GestureCallback(GestureRecognizer gesture)
		{
		}

		[Token(Token = "0x60028AB")]
		[Address(RVA = "0x1719FF0", Offset = "0x1719FF0", VA = "0x1719FF0")]
		public void Reset()
		{
		}

		[Token(Token = "0x60028AC")]
		[Address(RVA = "0x171A044", Offset = "0x171A044", VA = "0x171A044")]
		public FingersImageGestureHelperComponentScript()
		{
		}
	}
	[Token(Token = "0x20007DA")]
	[AddComponentMenu("Fingers Gestures/Control/Fingers Joystick Anywhere", 0)]
	public class FingersJoystickAnywhereComponentScript : MonoBehaviour
	{
		[Token(Token = "0x40023C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("Control")]
		[Tooltip("The number of units where the pan will be at maximum. For example, if you move this many units (default is inches) or more from the pan start, your move for that axis would be the maximum.")]
		[Range(0.1f, 5f)]
		public float PanUnitsForMaxMove;

		[Token(Token = "0x40023CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[Tooltip("Whether a tap will register as a jump. False to not allow tap to jump.")]
		public bool TapToJump;

		[Token(Token = "0x40023CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Tooltip("The game object the pan must happen in, null for anywhere")]
		public GameObject PanPlatformSpecificView;

		[Token(Token = "0x40023CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Tooltip("The game object the tap must happen in, null for anywhere")]
		public GameObject TapPlatformSpecificView;

		[Token(Token = "0x40023CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Header("Thresholds")]
		[Tooltip("How far the pan gesture must move before executing in units (inches)")]
		[Range(0f, 1f)]
		public float PanGestureThresholdUnits;

		[Token(Token = "0x40023CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[Range(0f, 5f)]
		[Tooltip("How far the tap gesture can move and still count as a tap in units (inches)")]
		public float TapGestureThresholdUnits;

		[Token(Token = "0x40023CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Tooltip("Show where the pan center is currently, null to not do this. This is the center for the current joystick, depending on where the pan started. As the pan moves away from this center, the pan amount increases up to 1.")]
		[Header("UI")]
		public Image PanAnchor;

		[Token(Token = "0x40023D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[Tooltip("Allows drawing a line from pan anchor to current pan to help with seeing the current pan position from anchor.")]
		public Image PanAnchorLine;

		[Token(Token = "0x40023D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[Tooltip("Horizontal input axis name if cross platform input integration is desired.")]
		[Header("Cross Platform Input")]
		public string CrossPlatformInputHorizontalAxisName;

		[Token(Token = "0x40023D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("Vertical input axis name if cross platform input integration is desired.")]
		public string CrossPlatformInputVerticalAxisName;

		[Token(Token = "0x40023D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("Jump input axis name if cross platform input integration is desired. Sends a value of 1.0 if jumped.")]
		public string CrossPlatformInputJumpAxisName;

		[Token(Token = "0x40023D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Tooltip("The pan/move callback (values are between -1 and 1)")]
		[Header("Callbacks")]
		public GestureRecognizerComponentEventVector2 PanCallback;

		[Token(Token = "0x40023D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[Tooltip("The tap/jump callback")]
		public GestureRecognizerComponentEvent TapCallback;

		[Token(Token = "0x40023D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private object crossPlatformInputHorizontalAxisObject;

		[Token(Token = "0x40023D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private object crossPlatformInputVerticalAxisObject;

		[Token(Token = "0x40023D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private object crossPlatformInputJumpAxisObject;

		[Token(Token = "0x40023D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private bool crossPlatformInputAxisMoveNewlyRegistered;

		[Token(Token = "0x40023DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
		private bool crossPlatformInputAxisJumpNewlyRegistered;

		[Token(Token = "0x40023DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private PanGestureRecognizer panGesture;

		[Token(Token = "0x40023DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private TapGestureRecognizer tapGesture;

		[Token(Token = "0x40023DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Action clearJumpAction;

		[Token(Token = "0x40023DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Vector2 panLocation;

		[Token(Token = "0x60028AD")]
		[Address(RVA = "0x171A058", Offset = "0x171A058", VA = "0x171A058")]
		public void Reset()
		{
		}

		[Token(Token = "0x60028AE")]
		[Address(RVA = "0x171A17C", Offset = "0x171A17C", VA = "0x171A17C")]
		private void Update()
		{
		}

		[Token(Token = "0x60028AF")]
		[Address(RVA = "0x171A30C", Offset = "0x171A30C", VA = "0x171A30C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60028B0")]
		[Address(RVA = "0x171A644", Offset = "0x171A644", VA = "0x171A644")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60028B1")]
		[Address(RVA = "0x171A6EC", Offset = "0x171A6EC", VA = "0x171A6EC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60028B2")]
		[Address(RVA = "0x171A7B4", Offset = "0x171A7B4", VA = "0x171A7B4")]
		private void ClearJump()
		{
		}

		[Token(Token = "0x60028B3")]
		[Address(RVA = "0x171A824", Offset = "0x171A824", VA = "0x171A824")]
		private void Panned(GestureRecognizer panGesture)
		{
		}

		[Token(Token = "0x60028B4")]
		[Address(RVA = "0x171AC28", Offset = "0x171AC28", VA = "0x171AC28")]
		private void Tapped(GestureRecognizer tapGesture)
		{
		}

		[Token(Token = "0x60028B5")]
		[Address(RVA = "0x171AD04", Offset = "0x171AD04", VA = "0x171AD04")]
		public FingersJoystickAnywhereComponentScript()
		{
		}
	}
	[Token(Token = "0x20007DB")]
	[AddComponentMenu("Fingers Gestures/Component/Fingers Multi Drag", 1)]
	public class FingersMultiDragComponentScript : MonoBehaviour
	{
		[Token(Token = "0x20007DC")]
		private class DragState
		{
			[Token(Token = "0x40023E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject GameObject;

			[Token(Token = "0x40023E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector3 Offset;

			[Token(Token = "0x60028BF")]
			[Address(RVA = "0x171B5DC", Offset = "0x171B5DC", VA = "0x171B5DC")]
			public DragState()
			{
			}
		}

		[Token(Token = "0x40023DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Tooltip("Whether to drag on x axis")]
		public bool DragX;

		[Token(Token = "0x40023E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[Tooltip("Whether to drag on y axis")]
		public bool DragY;

		[Token(Token = "0x40023E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Tooltip("The tag of the object(s) to drag - if the tag contains this, the object can drag")]
		public string TagToDrag;

		[Token(Token = "0x40023E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Tooltip("The name of the object(s) to drag - if the name contains this, the object can drag")]
		public string NameToDrag;

		[Token(Token = "0x40023E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly Dictionary<GameObject, DragState> draggingObjectsByGameObject;

		[Token(Token = "0x40023E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly Dictionary<int, DragState> draggingObjectsByTouchId;

		[Token(Token = "0x40023E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private readonly HashSet<int> allTouchIds;

		[Token(Token = "0x40023E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private readonly List<int> currentTouchIds;

		[Token(Token = "0x1700063C")]
		public PanGestureRecognizer PanGesture
		{
			[Token(Token = "0x60028B6")]
			[Address(RVA = "0x171AD20", Offset = "0x171AD20", VA = "0x171AD20")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60028B7")]
			[Address(RVA = "0x171AD28", Offset = "0x171AD28", VA = "0x171AD28")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x60028B8")]
		[Address(RVA = "0x171AD30", Offset = "0x171AD30", VA = "0x171AD30")]
		private bool CanDrag(GameObject obj)
		{
			return default(bool);
		}

		[Token(Token = "0x60028B9")]
		[Address(RVA = "0x171ADE8", Offset = "0x171ADE8", VA = "0x171ADE8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60028BA")]
		[Address(RVA = "0x171B218", Offset = "0x171B218", VA = "0x171B218")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60028BB")]
		[Address(RVA = "0x171B3A4", Offset = "0x171B3A4", VA = "0x171B3A4")]
		private void StartDrag(GestureTouch touch)
		{
		}

		[Token(Token = "0x60028BC")]
		[Address(RVA = "0x171B5E4", Offset = "0x171B5E4", VA = "0x171B5E4")]
		private void UpdateDragStates()
		{
		}

		[Token(Token = "0x60028BD")]
		[Address(RVA = "0x171BDB0", Offset = "0x171BDB0", VA = "0x171BDB0")]
		private void Pan_StateUpdated(GestureRecognizer gesture)
		{
		}

		[Token(Token = "0x60028BE")]
		[Address(RVA = "0x171BDEC", Offset = "0x171BDEC", VA = "0x171BDEC")]
		public FingersMultiDragComponentScript()
		{
		}
	}
	[Token(Token = "0x20007DD")]
	[AddComponentMenu("Fingers Gestures/Component/Fingers One Touch Scale Axis", 3)]
	public class FingersOneTouchScaleAxisComponentScript : MonoBehaviour
	{
		[Token(Token = "0x40023EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Range(0f, 1f)]
		[Tooltip("Threshold that a one touch scale can move (in units) in the wrong direction before being reset")]
		public float AxisThresholdUnits;

		[Token(Token = "0x40023EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[Range(-10f, 10f)]
		[Tooltip("Zoom speed on x axis, can be negative to invert")]
		public float ZoomSpeedX;

		[Token(Token = "0x40023EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Range(-10f, 10f)]
		[Tooltip("Zoom speed on y axis, can be negative to invert")]
		public float ZoomSpeedY;

		[Token(Token = "0x40023ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Tooltip("Transform to scale, defaults to transform that this script is on")]
		public Transform TransformToScale;

		[Token(Token = "0x40023EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Tooltip("The view that must be touched to scale on x axis, null for anywhere")]
		public GameObject XAxisTransformDragView;

		[Token(Token = "0x40023EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Tooltip("The view that must be touched to scale on y axis, null for anywhere")]
		public GameObject YAxisTransformDragView;

		[Token(Token = "0x1700063D")]
		public OneTouchScaleGestureRecognizer XAxisScaleGesture
		{
			[Token(Token = "0x60028C0")]
			[Address(RVA = "0x171BF6C", Offset = "0x171BF6C", VA = "0x171BF6C")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60028C1")]
			[Address(RVA = "0x171BF74", Offset = "0x171BF74", VA = "0x171BF74")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700063E")]
		public OneTouchScaleGestureRecognizer YAxisScaleGesture
		{
			[Token(Token = "0x60028C2")]
			[Address(RVA = "0x171BF7C", Offset = "0x171BF7C", VA = "0x171BF7C")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60028C3")]
			[Address(RVA = "0x171BF84", Offset = "0x171BF84", VA = "0x171BF84")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x60028C4")]
		[Address(RVA = "0x171BF8C", Offset = "0x171BF8C", VA = "0x171BF8C")]
		private void XAxisStateUpdated(GestureRecognizer r)
		{
		}

		[Token(Token = "0x60028C5")]
		[Address(RVA = "0x171C0A0", Offset = "0x171C0A0", VA = "0x171C0A0")]
		private void YAxisStateUpdated(GestureRecognizer r)
		{
		}

		[Token(Token = "0x60028C6")]
		[Address(RVA = "0x171C1B4", Offset = "0x171C1B4", VA = "0x171C1B4")]
		private void Update()
		{
		}

		[Token(Token = "0x60028C7")]
		[Address(RVA = "0x171C28C", Offset = "0x171C28C", VA = "0x171C28C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60028C8")]
		[Address(RVA = "0x171C438", Offset = "0x171C438", VA = "0x171C438")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60028C9")]
		[Address(RVA = "0x171C4CC", Offset = "0x171C4CC", VA = "0x171C4CC")]
		public FingersOneTouchScaleAxisComponentScript()
		{
		}
	}
	[Token(Token = "0x20007DE")]
	[AddComponentMenu("Fingers Gestures/Component/Fingers Pan AR", 5)]
	public class FingersPanARComponentScript : MonoBehaviour
	{
		[Token(Token = "0x20007DF")]
		private struct OrigState
		{
			[Token(Token = "0x4002408")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Quaternion Rotation;

			[Token(Token = "0x4002409")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3 Scale;
		}

		[Token(Token = "0x40023F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Tooltip("The camera to use to convert screen coordinates to world coordinates. Defaults to Camera.main.")]
		public Camera Camera;

		[Token(Token = "0x40023F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Tooltip("Target game objects. If null, gets set to the transform of this script. These will be raycasted to determine which object gets acted upon.")]
		public List<Transform> Targets;

		[Token(Token = "0x40023F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Range(-10f, 10f)]
		[Tooltip("The speed at which to move the object forward and backwards.")]
		public float SpeedForwardBack;

		[Token(Token = "0x40023F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[Tooltip("The speed at which to move the object left and right.")]
		[Range(-10f, 10f)]
		public float SpeedLeftRight;

		[Token(Token = "0x40023F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Range(-3f, 3f)]
		[Tooltip("Rotation speed, set to 0 to disable rotation.")]
		public float RotateSpeed;

		[Token(Token = "0x40023F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[Range(0f, 10f)]
		[Tooltip("Scale speed. Set to 0 to disable scaling.")]
		public float ScaleSpeed;

		[Token(Token = "0x40023F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Tooltip("Whether a double tap will reset rotation.")]
		public bool DoubleTapToResetRotation;

		[Token(Token = "0x40023F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		[Tooltip("Allow triple tap gesture to destroy the object.")]
		public bool TripleTapToDestroy;

		[Token(Token = "0x40023FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[Range(-3f, 3f)]
		[Tooltip("Orbit speed (desktop only, right mouse button and drag).")]
		public float OrbitSpeed;

		[Token(Token = "0x4002402")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3? orbitTarget;

		[Token(Token = "0x4002403")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float prevMouseX;

		[Token(Token = "0x4002404")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Transform currentTarget;

		[Token(Token = "0x4002405")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private readonly List<KeyValuePair<Transform, OrigState>> origStates;

		[Token(Token = "0x4002406")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private readonly List<RaycastResult> raycastResults;

		[Token(Token = "0x4002407")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private readonly List<GestureRecognizer> gestures;

		[Token(Token = "0x1700063F")]
		public PanGestureRecognizer PanGesture
		{
			[Token(Token = "0x60028CA")]
			[Address(RVA = "0x171C4E8", Offset = "0x171C4E8", VA = "0x171C4E8")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60028CB")]
			[Address(RVA = "0x171C4F0", Offset = "0x171C4F0", VA = "0x171C4F0")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000640")]
		public RotateGestureRecognizer RotateGesture
		{
			[Token(Token = "0x60028CC")]
			[Address(RVA = "0x171C4F8", Offset = "0x171C4F8", VA = "0x171C4F8")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60028CD")]
			[Address(RVA = "0x171C500", Offset = "0x171C500", VA = "0x171C500")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000641")]
		public ScaleGestureRecognizer ScaleGesture
		{
			[Token(Token = "0x60028CE")]
			[Address(RVA = "0x171C508", Offset = "0x171C508", VA = "0x171C508")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60028CF")]
			[Address(RVA = "0x171C510", Offset = "0x171C510", VA = "0x171C510")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000642")]
		public TapGestureRecognizer TapGestureReset
		{
			[Token(Token = "0x60028D0")]
			[Address(RVA = "0x171C518", Offset = "0x171C518", VA = "0x171C518")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60028D1")]
			[Address(RVA = "0x171C520", Offset = "0x171C520", VA = "0x171C520")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000643")]
		public TapGestureRecognizer TapGestureDestroy
		{
			[Token(Token = "0x60028D2")]
			[Address(RVA = "0x171C528", Offset = "0x171C528", VA = "0x171C528")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60028D3")]
			[Address(RVA = "0x171C530", Offset = "0x171C530", VA = "0x171C530")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000644")]
		public LongPressGestureRecognizer LongPressGesture
		{
			[Token(Token = "0x60028D4")]
			[Address(RVA = "0x171C538", Offset = "0x171C538", VA = "0x171C538")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60028D5")]
			[Address(RVA = "0x171C540", Offset = "0x171C540", VA = "0x171C540")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000645")]
		public Action<FingersPanARComponentScript> LongPressGestureBegan
		{
			[Token(Token = "0x60028D6")]
			[Address(RVA = "0x171C548", Offset = "0x171C548", VA = "0x171C548")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60028D7")]
			[Address(RVA = "0x171C550", Offset = "0x171C550", VA = "0x171C550")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x60028D8")]
		[Address(RVA = "0x171C558", Offset = "0x171C558", VA = "0x171C558")]
		private Transform SelectCurrentTarget(float x, float y)
		{
			return null;
		}

		[Token(Token = "0x60028D9")]
		[Address(RVA = "0x171CA50", Offset = "0x171CA50", VA = "0x171CA50")]
		private void PushGesture(GestureRecognizer gesture)
		{
		}

		[Token(Token = "0x60028DA")]
		[Address(RVA = "0x171CB38", Offset = "0x171CB38", VA = "0x171CB38")]
		private void PopGesture(GestureRecognizer gesture)
		{
		}

		[Token(Token = "0x60028DB")]
		[Address(RVA = "0x171CB90", Offset = "0x171CB90", VA = "0x171CB90")]
		private void PanGestureStateUpdated(GestureRecognizer gesture)
		{
		}

		[Token(Token = "0x60028DC")]
		[Address(RVA = "0x171CF38", Offset = "0x171CF38", VA = "0x171CF38")]
		private void RotateGestureStateUpdated(GestureRecognizer gesture)
		{
		}

		[Token(Token = "0x60028DD")]
		[Address(RVA = "0x171D09C", Offset = "0x171D09C", VA = "0x171D09C")]
		private void ScaleGestureStateUpdated(GestureRecognizer gesture)
		{
		}

		[Token(Token = "0x60028DE")]
		[Address(RVA = "0x171D1EC", Offset = "0x171D1EC", VA = "0x171D1EC")]
		private void TapGestureResetStateUpdated(GestureRecognizer gesture)
		{
		}

		[Token(Token = "0x60028DF")]
		[Address(RVA = "0x171D4F8", Offset = "0x171D4F8", VA = "0x171D4F8")]
		private void TapGestureDestroyStateUpdated(GestureRecognizer gesture)
		{
		}

		[Token(Token = "0x60028E0")]
		[Address(RVA = "0x171D658", Offset = "0x171D658", VA = "0x171D658")]
		private void LongPressGestureStateUpdated(GestureRecognizer gesture)
		{
		}

		[Token(Token = "0x60028E1")]
		[Address(RVA = "0x171D750", Offset = "0x171D750", VA = "0x171D750")]
		private void UpdateOrigStates()
		{
		}

		[Token(Token = "0x60028E2")]
		[Address(RVA = "0x171DAE8", Offset = "0x171DAE8", VA = "0x171DAE8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60028E3")]
		[Address(RVA = "0x171E0AC", Offset = "0x171E0AC", VA = "0x171E0AC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60028E4")]
		[Address(RVA = "0x171E170", Offset = "0x171E170", VA = "0x171E170")]
		private void Update()
		{
		}

		[Token(Token = "0x60028E5")]
		[Address(RVA = "0x171E3C4", Offset = "0x171E3C4", VA = "0x171E3C4")]
		public FingersPanARComponentScript()
		{
		}
	}
	[Token(Token = "0x20007E0")]
	[AddComponentMenu("Fingers Gestures/Component/Fingers Pan Orbit", 2)]
	public class FingersPanOrbitComponentScript : MonoBehaviour
	{
		[Token(Token = "0x20007E1")]
		public enum PanOrbitMovementType
		{
			[Token(Token = "0x4002430")]
			Orbit,
			[Token(Token = "0x4002431")]
			Pan,
			[Token(Token = "0x4002432")]
			OrbitWithTwoFingerPan
		}

		[Token(Token = "0x400240A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Tooltip("The transform to orbit around.")]
		public Transform OrbitTarget;

		[Token(Token = "0x400240B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Tooltip("The object to orbit around OrbitTarget.")]
		public Transform Orbiter;

		[Token(Token = "0x400240C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Tooltip("Whether to look at the target automatically. Set to false if you are controlling this yourself.")]
		public bool LookAtTarget;

		[Token(Token = "0x400240D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Tooltip("Clamp camera to specified world space bounds, null for no clamp")]
		public BoxCollider ClampBounds;

		[Token(Token = "0x400240E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Tooltip("The minimium distance to move to the orbit target, 0 for no minimum.")]
		[Range(0.1f, 100f)]
		public float MinimumDistance;

		[Token(Token = "0x400240F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[Tooltip("The maximum distance to move away from the orbit target, 0 for no maximum.")]
		[Range(0.1f, 1000f)]
		public float MaximumDistance;

		[Token(Token = "0x4002410")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[Tooltip("The zoom speed")]
		[Range(0.01f, 100f)]
		public float ZoomSpeed;

		[Token(Token = "0x4002411")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[Range(0f, 10f)]
		[Tooltip("The speed at which the orbiter looks at the orbit target is it has panned away from looking direclty at the orbit target.")]
		public float ZoomLookAtSpeed;

		[Token(Token = "0x4002412")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[Tooltip("The threshold in units before zooming begins to happen. Start distance must change this much in order to start the gesture.")]
		[Range(0f, 3f)]
		public float ZoomThresholdUnits;

		[Token(Token = "0x4002413")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[Tooltip("The speed (degrees per second) at which to orbit using x delta pan gesture values. Negative or positive values will cause orbit in the opposite direction.")]
		[Range(-100f, 100f)]
		public float OrbitXSpeed;

		[Token(Token = "0x4002414")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The maximum degrees to orbit on the x axis from the starting x rotation. 0 for no limit. Set OrbitXSpeed to 0 to disable x orbit.")]
		[Range(0f, 360f)]
		public float OrbitXMaxDegrees;

		[Token(Token = "0x4002415")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[Tooltip("Whether the orbit on the x axis is a pan (move sideways) instead of an orbit.")]
		public PanOrbitMovementType XAxisMovementType;

		[Token(Token = "0x4002416")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("Speed if OrbitXPan is true")]
		[Range(-10f, 10f)]
		public float OrbitXPanSpeed;

		[Token(Token = "0x4002417")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[Range(0f, 1000f)]
		[Tooltip("Set a movement limit from orbit target if OrbitXPan is true. 0 for no limit.")]
		public float OrbitXPanLimit;

		[Token(Token = "0x4002418")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Range(-100f, 100f)]
		[Tooltip("The speed (degrees per second) at which to orbit using y delta pan gesture values. Negative or positive values will cause orbit in the opposite direction.")]
		public float OrbitYSpeed;

		[Token(Token = "0x4002419")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[Tooltip("The maximum degrees to orbit on the y axis from the starting y rotation. 0 for no limit. Set OrbitYSpeed to 0 to disable y orbit.")]
		[Range(0f, 360f)]
		public float OrbitYMaxDegrees;

		[Token(Token = "0x400241A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[Tooltip("Whether the orbit on the y axis is a pan (move sideways) instead of an orbit.")]
		public PanOrbitMovementType YAxisMovementType;

		[Token(Token = "0x400241B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[Tooltip("Speed if OrbitYPan is true.")]
		[Range(-10f, 10f)]
		public float OrbitYPanSpeed;

		[Token(Token = "0x400241C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[Tooltip("Set a movement limit from orbit target if OrbitYPan is true. 0 for no limit.")]
		[Range(0f, 1000f)]
		public float OrbitYPanLimit;

		[Token(Token = "0x400241D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[Tooltip("Whether to allow orbit while zooming.")]
		public bool AllowOrbitWhileZooming;

		[Token(Token = "0x400241E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x75")]
		private bool allowOrbitWhileZooming;

		[Token(Token = "0x400241F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x76")]
		[Tooltip("Whether to allow orbit and/or pan on both axis at the same time or to only pick the axis with the greatest movement.")]
		public bool AllowMovementOnBothAxisSimultaneously;

		[Token(Token = "0x4002420")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private int lockedAxis;

		[Token(Token = "0x4002421")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[Tooltip("How much the velocity of the orbit will cause additional orbit after the gesture stops. 1 for no inertia (orbits forever) or 0 for immediate stop.")]
		[Range(0f, 1f)]
		public float OrbitInertia;

		[Token(Token = "0x4002422")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[Tooltip("The max size for the orbit or pan. An x,y or z value larget than this away from orbit target will be clamped in. Set to 0 for no limit.")]
		public Vector3 OrbitMaximumSize;

		[Token(Token = "0x4002423")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[Tooltip("Whether the pan and rotate orbit gestures must start on the orbit target to orbit. The tap gesture always requires that it be on the orbit target.")]
		public bool RequireOrbitGesturesToStartOnTarget;

		[Token(Token = "0x4002427")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[HideInInspector]
		public float xDegrees;

		[Token(Token = "0x4002428")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		[HideInInspector]
		public float yDegrees;

		[Token(Token = "0x4002429")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Vector2 panVelocity;

		[Token(Token = "0x400242A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[HideInInspector]
		public float zoomSpeed;

		[Token(Token = "0x400242E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[Range(0.01f, 1f)]
		public float ZoomInertia;

		[Token(Token = "0x17000646")]
		public ScaleGestureRecognizer ScaleGesture
		{
			[Token(Token = "0x60028E6")]
			[Address(RVA = "0x171E508", Offset = "0x171E508", VA = "0x171E508")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60028E7")]
			[Address(RVA = "0x171E510", Offset = "0x171E510", VA = "0x171E510")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000647")]
		public PanGestureRecognizer PanGesture
		{
			[Token(Token = "0x60028E8")]
			[Address(RVA = "0x171E518", Offset = "0x171E518", VA = "0x171E518")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60028E9")]
			[Address(RVA = "0x171E520", Offset = "0x171E520", VA = "0x171E520")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000648")]
		public TapGestureRecognizer TapGesture
		{
			[Token(Token = "0x60028EA")]
			[Address(RVA = "0x171E528", Offset = "0x171E528", VA = "0x171E528")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60028EB")]
			[Address(RVA = "0x171E530", Offset = "0x171E530", VA = "0x171E530")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x14000097")]
		public event Action OrbitTargetTapped
		{
			[Token(Token = "0x60028EC")]
			[Address(RVA = "0x171E538", Offset = "0x171E538", VA = "0x171E538")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60028ED")]
			[Address(RVA = "0x171E5D4", Offset = "0x171E5D4", VA = "0x171E5D4")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000098")]
		public event Action<bool> Enabled
		{
			[Token(Token = "0x60028EE")]
			[Address(RVA = "0x171E670", Offset = "0x171E670", VA = "0x171E670")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60028EF")]
			[Address(RVA = "0x171E720", Offset = "0x171E720", VA = "0x171E720")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000099")]
		public event Action ZoomUpdated
		{
			[Token(Token = "0x60028F0")]
			[Address(RVA = "0x171E7D0", Offset = "0x171E7D0", VA = "0x171E7D0")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60028F1")]
			[Address(RVA = "0x171E86C", Offset = "0x171E86C", VA = "0x171E86C")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x60028F2")]
		[Address(RVA = "0x171E908", Offset = "0x171E908", VA = "0x171E908")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60028F3")]
		[Address(RVA = "0x171EC70", Offset = "0x171EC70", VA = "0x171EC70")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60028F4")]
		[Address(RVA = "0x171ED30", Offset = "0x171ED30", VA = "0x171ED30")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60028F5")]
		[Address(RVA = "0x171F5F0", Offset = "0x171F5F0", VA = "0x171F5F0")]
		private bool IntersectRaySphere(Vector3 rayOrigin, Vector3 rayDir, Vector3 sphereCenter, float sphereRadius, out float distanceToSphere, out Vector3 intersectPos)
		{
			return default(bool);
		}

		[Token(Token = "0x60028F6")]
		[Address(RVA = "0x171F6F8", Offset = "0x171F6F8", VA = "0x171F6F8")]
		private void ClampDistance(Vector3 startPos)
		{
		}

		[Token(Token = "0x60028F7")]
		[Address(RVA = "0x171F364", Offset = "0x171F364", VA = "0x171F364")]
		private void UpdateZoom()
		{
		}

		[Token(Token = "0x60028F8")]
		[Address(RVA = "0x171FB24", Offset = "0x171FB24", VA = "0x171FB24")]
		private void PerformPan(Vector3 pan, float limit)
		{
		}

		[Token(Token = "0x60028F9")]
		[Address(RVA = "0x171F06C", Offset = "0x171F06C", VA = "0x171F06C")]
		private void UpdateOrbit(float xVelocity, float yVelocity)
		{
		}

		[Token(Token = "0x60028FA")]
		[Address(RVA = "0x171FCC0", Offset = "0x171FCC0", VA = "0x171FCC0")]
		private void TapGesture_Updated(GestureRecognizer gesture)
		{
		}

		[Token(Token = "0x60028FB")]
		[Address(RVA = "0x171FCFC", Offset = "0x171FCFC", VA = "0x171FCFC")]
		private void PanGesture_Updated(GestureRecognizer gesture)
		{
		}

		[Token(Token = "0x60028FC")]
		[Address(RVA = "0x171FF04", Offset = "0x171FF04", VA = "0x171FF04")]
		private void ScaleGesture_Updated(GestureRecognizer gesture)
		{
		}

		[Token(Token = "0x60028FD")]
		[Address(RVA = "0x171FE20", Offset = "0x171FE20", VA = "0x171FE20")]
		private bool PanGestureHasEnoughMovementOnOneAxis(ref float xVelocity, ref float yVelocity)
		{
			return default(bool);
		}

		[Token(Token = "0x60028FE")]
		[Address(RVA = "0x171FF4C", Offset = "0x171FF4C", VA = "0x171FF4C")]
		public FingersPanOrbitComponentScript()
		{
		}
	}
	[Token(Token = "0x20007E2")]
	[AddComponentMenu("Fingers Gestures/Component/Fingers Pan Rotate Scale", 4)]
	public class FingersPanRotateScaleComponentScript : MonoBehaviour
	{
		[Token(Token = "0x20007E3")]
		public enum _DoubleTapResetMode
		{
			[Token(Token = "0x400244D")]
			Off,
			[Token(Token = "0x400244E")]
			ResetScaleRotation,
			[Token(Token = "0x400244F")]
			ResetScaleRotationPosition
		}

		[Token(Token = "0x20007E4")]
		private struct SavedState
		{
			[Token(Token = "0x4002450")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3 Scale;

			[Token(Token = "0x4002451")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Quaternion Rotation;

			[Token(Token = "0x4002452")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public Vector3 Position;
		}

		[Token(Token = "0x4002433")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("Setup")]
		[Tooltip("The cameras to use to convert screen coordinates to world coordinates. Defaults to Camera.main.")]
		public Camera[] Cameras;

		[Token(Token = "0x4002434")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Tooltip("Whether to bring the object to the front when a gesture executes on it")]
		public bool BringToFront;

		[Token(Token = "0x4002435")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[Tooltip("Whether the gestures in this script can execute simultaneously with all other gestures.")]
		public bool AllowExecutionWithAllGestures;

		[Token(Token = "0x4002436")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[Tooltip("The mode to execute in, can be require over game object or allow on any game object.")]
		public GestureRecognizerComponentScriptBase.GestureObjectMode Mode;

		[Token(Token = "0x4002437")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Tooltip("The minimum and maximum scale as a percentage of the original scale of the object. 0,0 for no limits. -1,-1 for no scaling.")]
		public Vector2 MinMaxScale;

		[Token(Token = "0x4002438")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Tooltip("The threshold in units touches must move apart or together to begin scaling.")]
		[Range(0f, 1f)]
		public float ScaleThresholdUnits;

		[Token(Token = "0x4002439")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[Tooltip("Whether to add a double tap to reset the transform of the game object this script is on. This must be set in the inspector and not changed.")]
		[Header("Enable / Disable Gestures")]
		public _DoubleTapResetMode DoubleTapResetMode;

		[Token(Token = "0x400243A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Tooltip("Whether to allow panning. Can be set during editor or runtime.")]
		public bool AllowPan;

		[Token(Token = "0x400243B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		[Tooltip("Whether to allow scaling. Can be set during editor or runtime.")]
		public bool AllowScale;

		[Token(Token = "0x400243C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
		[Tooltip("Whether to allow rotating. Can be set during editor or runtime.")]
		public bool AllowRotate;

		[Token(Token = "0x400243D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[Tooltip("Gesture state updated event")]
		public GestureRecognizerComponentStateUpdatedEvent StateUpdated;

		[Token(Token = "0x4002442")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Rigidbody2D rigidBody2D;

		[Token(Token = "0x4002443")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Rigidbody rigidBody;

		[Token(Token = "0x4002444")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private SpriteRenderer spriteRenderer;

		[Token(Token = "0x4002445")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private CanvasRenderer canvasRenderer;

		[Token(Token = "0x4002446")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Transform _transform;

		[Token(Token = "0x4002447")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private int startSortOrder;

		[Token(Token = "0x4002448")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private float panZ;

		[Token(Token = "0x4002449")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Vector3 panOffset;

		[Token(Token = "0x400244A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private Vector3? startScale;

		[Token(Token = "0x400244B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private readonly Dictionary<Transform, SavedState> savedStates;

		[Token(Token = "0x17000649")]
		public PanGestureRecognizer PanGesture
		{
			[Token(Token = "0x60028FF")]
			[Address(RVA = "0x171FFB0", Offset = "0x171FFB0", VA = "0x171FFB0")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6002900")]
			[Address(RVA = "0x171FFB8", Offset = "0x171FFB8", VA = "0x171FFB8")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700064A")]
		public ScaleGestureRecognizer ScaleGesture
		{
			[Token(Token = "0x6002901")]
			[Address(RVA = "0x171FFC0", Offset = "0x171FFC0", VA = "0x171FFC0")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6002902")]
			[Address(RVA = "0x171FFC8", Offset = "0x171FFC8", VA = "0x171FFC8")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700064B")]
		public RotateGestureRecognizer RotateGesture
		{
			[Token(Token = "0x6002903")]
			[Address(RVA = "0x171FFD0", Offset = "0x171FFD0", VA = "0x171FFD0")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6002904")]
			[Address(RVA = "0x171FFD8", Offset = "0x171FFD8", VA = "0x171FFD8")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700064C")]
		public TapGestureRecognizer DoubleTapGesture
		{
			[Token(Token = "0x6002905")]
			[Address(RVA = "0x171FFE0", Offset = "0x171FFE0", VA = "0x171FFE0")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6002906")]
			[Address(RVA = "0x171FFE8", Offset = "0x171FFE8", VA = "0x171FFE8")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6002907")]
		[Address(RVA = "0x171FFF0", Offset = "0x171FFF0", VA = "0x171FFF0")]
		private void PanGestureUpdated(GestureRecognizer panGesture)
		{
		}

		[Token(Token = "0x6002908")]
		[Address(RVA = "0x1720AE8", Offset = "0x1720AE8", VA = "0x1720AE8")]
		private void ScaleGestureUpdated(GestureRecognizer scaleGesture)
		{
		}

		[Token(Token = "0x6002909")]
		[Address(RVA = "0x1720EC0", Offset = "0x1720EC0", VA = "0x1720EC0")]
		private void RotateGestureUpdated(GestureRecognizer rotateGesture)
		{
		}

		[Token(Token = "0x600290A")]
		[Address(RVA = "0x17212D0", Offset = "0x17212D0", VA = "0x17212D0")]
		private void DoubleTapGestureUpdated(GestureRecognizer r)
		{
		}

		[Token(Token = "0x600290B")]
		[Address(RVA = "0x1720A38", Offset = "0x1720A38", VA = "0x1720A38")]
		private void ClearStartState()
		{
		}

		[Token(Token = "0x600290C")]
		[Address(RVA = "0x172061C", Offset = "0x172061C", VA = "0x172061C")]
		private bool SetStartState(GestureRecognizer gesture, GameObject obj, bool force)
		{
			return default(bool);
		}

		[Token(Token = "0x600290D")]
		[Address(RVA = "0x17219F8", Offset = "0x17219F8", VA = "0x17219F8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600290E")]
		[Address(RVA = "0x1721F74", Offset = "0x1721F74", VA = "0x1721F74")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600290F")]
		[Address(RVA = "0x1722028", Offset = "0x1722028", VA = "0x1722028")]
		public FingersPanRotateScaleComponentScript()
		{
		}
	}
	[Token(Token = "0x20007E5")]
	[AddComponentMenu("Fingers Gestures/Component/Fingers Platform Controller", 7)]
	[RequireComponent(typeof(Rigidbody2D))]
	public class FingersPlatformMoveJumpComponentScript : MonoBehaviour
	{
		[Token(Token = "0x20007E6")]
		[CompilerGenerated]
		private sealed class <StopFallThrough>d__24 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002460")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002461")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002462")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PlatformEffector2D effector;

			[Token(Token = "0x17000650")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002922")]
				[Address(RVA = "0x1722AB4", Offset = "0x1722AB4", VA = "0x1722AB4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000651")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002924")]
				[Address(RVA = "0x1722AFC", Offset = "0x1722AFC", VA = "0x1722AFC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600291F")]
			[Address(RVA = "0x1722500", Offset = "0x1722500", VA = "0x1722500")]
			[DebuggerHidden]
			public <StopFallThrough>d__24(int <>1__state)
			{
			}

			[Token(Token = "0x6002920")]
			[Address(RVA = "0x17229F8", Offset = "0x17229F8", VA = "0x17229F8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002921")]
			[Address(RVA = "0x17229FC", Offset = "0x17229FC", VA = "0x17229FC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002923")]
			[Address(RVA = "0x1722ABC", Offset = "0x1722ABC", VA = "0x1722ABC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002453")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Rigidbody2D playerBody;

		[Token(Token = "0x4002454")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Range(1f, 128f)]
		[Tooltip("Max velocity in x and y direction. The x and y component will be clamped to this speed.")]
		public float MaxSpeed;

		[Token(Token = "0x4002455")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[Tooltip("Force of a jump")]
		[Range(1f, 128f)]
		public float JumpForce;

		[Token(Token = "0x4002456")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Range(0.3f, 5f)]
		[Tooltip("How far the tap can move to still count as a jump")]
		public float JumpThresholdUnits;

		[Token(Token = "0x4002457")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[Tooltip("The jump must happen with this seconds or it fails")]
		[Range(0.1f, 0.5f)]
		public float JumpThresholdSeconds;

		[Token(Token = "0x4002458")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Tooltip("Move speed multiplier")]
		[Range(0.01f, 10f)]
		public float MoveSpeed;

		[Token(Token = "0x4002459")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[Range(0.1f, 1f)]
		[Tooltip("How far the pan must move before movements starts")]
		public float MoveThresholdUnits;

		[Token(Token = "0x400245A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Tooltip("Set the tag of platforms that can be jumped off of")]
		public string PlatformTag;

		[Token(Token = "0x400245B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[Tooltip("Set the name of platforms that can be jumped off of")]
		public string PlatformName;

		[Token(Token = "0x400245F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private readonly Collider2D[] overlapArray;

		[Token(Token = "0x1700064D")]
		public TapGestureRecognizer TapGesture
		{
			[Token(Token = "0x6002910")]
			[Address(RVA = "0x17220D0", Offset = "0x17220D0", VA = "0x17220D0")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6002911")]
			[Address(RVA = "0x17220D8", Offset = "0x17220D8", VA = "0x17220D8")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700064E")]
		public PanGestureRecognizer PanGesture
		{
			[Token(Token = "0x6002912")]
			[Address(RVA = "0x17220E0", Offset = "0x17220E0", VA = "0x17220E0")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6002913")]
			[Address(RVA = "0x17220E8", Offset = "0x17220E8", VA = "0x17220E8")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700064F")]
		public SwipeGestureRecognizer SwipeGesture
		{
			[Token(Token = "0x6002914")]
			[Address(RVA = "0x17220F0", Offset = "0x17220F0", VA = "0x17220F0")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6002915")]
			[Address(RVA = "0x17220F8", Offset = "0x17220F8", VA = "0x17220F8")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6002916")]
		[Address(RVA = "0x1722100", Offset = "0x1722100", VA = "0x1722100")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002917")]
		[Address(RVA = "0x17223E8", Offset = "0x17223E8", VA = "0x17223E8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002918")]
		[Address(RVA = "0x172248C", Offset = "0x172248C", VA = "0x172248C")]
		[IteratorStateMachine(typeof(<StopFallThrough>d__24))]
		private IEnumerator StopFallThrough(PlatformEffector2D effector)
		{
			return null;
		}

		[Token(Token = "0x6002919")]
		[Address(RVA = "0x1722528", Offset = "0x1722528", VA = "0x1722528")]
		private Collider2D FindIntersectingPlatform()
		{
			return null;
		}

		[Token(Token = "0x600291A")]
		[Address(RVA = "0x1722670", Offset = "0x1722670", VA = "0x1722670")]
		private void SwipeDown_StateUpdated(GestureRecognizer gesture)
		{
		}

		[Token(Token = "0x600291B")]
		[Address(RVA = "0x1722784", Offset = "0x1722784", VA = "0x1722784")]
		private void MovePan_StateUpdated(GestureRecognizer gesture)
		{
		}

		[Token(Token = "0x600291C")]
		[Address(RVA = "0x1722828", Offset = "0x1722828", VA = "0x1722828")]
		private void JumpTap_StateUpdated(GestureRecognizer gesture)
		{
		}

		[Token(Token = "0x600291D")]
		[Address(RVA = "0x17228E0", Offset = "0x17228E0", VA = "0x17228E0")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x600291E")]
		[Address(RVA = "0x1722938", Offset = "0x1722938", VA = "0x1722938")]
		public FingersPlatformMoveJumpComponentScript()
		{
		}
	}
	[Token(Token = "0x20007E7")]
	public class FingersRotateCameraComponentScript : MonoBehaviour
	{
		[Token(Token = "0x4002463")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Tooltip("The Transform component to rotate. Defaults to transform that this script is on.")]
		public Transform TransformToRotate;

		[Token(Token = "0x4002464")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Tooltip("Number of touches to register the pan")]
		public int NumberOfTouchesRequired;

		[Token(Token = "0x4002465")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Tooltip("The view that must be touched to start the gesture. Leave null to start the gesture anywhere.")]
		public GameObject GestureView;

		[Token(Token = "0x4002466")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Range(-100f, 100f)]
		[Tooltip("Rotation speed")]
		public float RotationSpeed;

		[Token(Token = "0x4002467")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[Tooltip("Min and max rotation around x axis")]
		public Vector2 RotationXMinMax;

		[Token(Token = "0x4002468")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[Tooltip("Rotation dampening. Reduces rotation quickly once gesture ends. Set to 0 for complete dampening.")]
		[Range(0f, 1f)]
		public float RotationDampening;

		[Token(Token = "0x400246A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float gestureDeltaXRotation;

		[Token(Token = "0x400246B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float gestureDeltaYRotation;

		[Token(Token = "0x400246C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Quaternion originalRotation;

		[Token(Token = "0x400246D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Vector2 rotationVelocity;

		[Token(Token = "0x17000652")]
		public PanGestureRecognizer PanGesture
		{
			[Token(Token = "0x6002925")]
			[Address(RVA = "0x1722B04", Offset = "0x1722B04", VA = "0x1722B04")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6002926")]
			[Address(RVA = "0x1722B0C", Offset = "0x1722B0C", VA = "0x1722B0C")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6002927")]
		[Address(RVA = "0x1722B14", Offset = "0x1722B14", VA = "0x1722B14")]
		private float ClampAngle(float angle, float min, float max)
		{
			return default(float);
		}

		[Token(Token = "0x6002928")]
		[Address(RVA = "0x1722B50", Offset = "0x1722B50", VA = "0x1722B50")]
		private void ApplyRotation(float x, float y)
		{
		}

		[Token(Token = "0x6002929")]
		[Address(RVA = "0x1722D9C", Offset = "0x1722D9C", VA = "0x1722D9C")]
		private void PanGestureUpdated(GestureRecognizer r)
		{
		}

		[Token(Token = "0x600292A")]
		[Address(RVA = "0x1722F08", Offset = "0x1722F08", VA = "0x1722F08")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600292B")]
		[Address(RVA = "0x1723108", Offset = "0x1723108", VA = "0x1723108")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600292C")]
		[Address(RVA = "0x172318C", Offset = "0x172318C", VA = "0x172318C")]
		private void Update()
		{
		}

		[Token(Token = "0x600292D")]
		[Address(RVA = "0x1723294", Offset = "0x1723294", VA = "0x1723294")]
		public FingersRotateCameraComponentScript()
		{
		}
	}
	[Token(Token = "0x20007E8")]
	[AddComponentMenu("Fingers Gestures/Component/Fingers Rotate Orbit", 3)]
	public class FingersRotateOrbitComponentScript : MonoBehaviour
	{
		[Token(Token = "0x400246E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Tooltip("The object to orbit")]
		public Transform OrbitTarget;

		[Token(Token = "0x400246F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Tooltip("The object that will orbit around OrbitTarget")]
		public Transform Orbiter;

		[Token(Token = "0x4002470")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Tooltip("The axis to orbit around")]
		public Vector3 Axis;

		[Token(Token = "0x4002471")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[Tooltip("The rotation speed in degrees per second")]
		[Range(0.01f, 1000f)]
		public float RotationSpeed;

		[Token(Token = "0x4002472")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Tooltip("The rotation dampening. Higher rotation stop rotation faster. Set to 0 for no rotation after gesture ends.")]
		[Range(0f, 100f)]
		public float RotationDampening;

		[Token(Token = "0x4002473")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float rotationDegressDelta;

		[Token(Token = "0x17000653")]
		public RotateGestureRecognizer RotationGesture
		{
			[Token(Token = "0x600292E")]
			[Address(RVA = "0x17232C4", Offset = "0x17232C4", VA = "0x17232C4")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600292F")]
			[Address(RVA = "0x17232CC", Offset = "0x17232CC", VA = "0x17232CC")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6002930")]
		[Address(RVA = "0x17232D4", Offset = "0x17232D4", VA = "0x17232D4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002931")]
		[Address(RVA = "0x17233DC", Offset = "0x17233DC", VA = "0x17233DC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002932")]
		[Address(RVA = "0x1723460", Offset = "0x1723460", VA = "0x1723460")]
		private void Update()
		{
		}

		[Token(Token = "0x6002933")]
		[Address(RVA = "0x172355C", Offset = "0x172355C", VA = "0x172355C")]
		private void RotationGesture_Updated(GestureRecognizer gesture)
		{
		}

		[Token(Token = "0x6002934")]
		[Address(RVA = "0x1723594", Offset = "0x1723594", VA = "0x1723594")]
		public FingersRotateOrbitComponentScript()
		{
		}
	}
	[Token(Token = "0x20007E9")]
	[AddComponentMenu("Fingers Gestures/Component/Fingers ScrollView", 6)]
	public class FingersScrollViewComponentScript : MonoBehaviour
	{
		[Token(Token = "0x4002475")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Tooltip("The content to act as a scroll view.")]
		[Header("Container")]
		public GameObject ScrollContent;

		[Token(Token = "0x4002476")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Tooltip("The game object of the element containing the scroll view. This is usually a panel with a transparent image.")]
		public GameObject ScrollContentContainer;

		[Token(Token = "0x4002477")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Tooltip("Canvas camera, null if canvas is screen space.")]
		public Camera CanvasCamera;

		[Token(Token = "0x4002478")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Header("Panning")]
		[Tooltip("The max speed for the scroll view. When a pan finishes, velocity will be applied and the content will move a bit more.")]
		[Range(0.01f, 4096f)]
		public float MaxSpeed;

		[Token(Token = "0x4002479")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[Range(0.01f, 0.999f)]
		[Tooltip("How quickly pan velocity reduces when a pan finishes. Lower values reduce faster.")]
		public float PanDampening;

		[Token(Token = "0x400247A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Header("Scaling")]
		[Tooltip("How quickly the scale velocity reduces when a scale finishes. Lower values reduce faster.")]
		[Range(0.01f, 0.999f)]
		public float ScaleDampening;

		[Token(Token = "0x400247B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[Tooltip("How fast the scale gesture scales in and out. Lower values scale more slowly.")]
		[Range(0.0001f, 0.1f)]
		public float ScaleSpeed;

		[Token(Token = "0x400247C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[Tooltip("The minimum scale multiplier.")]
		[Range(0.01f, 1f)]
		public float MinimumScale;

		[Token(Token = "0x400247D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[Tooltip("The maximum scale multiplier.")]
		[Range(0.01f, 100f)]
		public float MaximumScale;

		[Token(Token = "0x400247E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[Tooltip("How quickly the content bounces back to the center if it is moved or scaled out of bounds. Higher values move to the center faster.")]
		[Range(0.01f, 1f)]
		public float BounceModifier;

		[Token(Token = "0x400247F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[Tooltip("Whether the scale can bounce a little bit beyond the maximum")]
		public bool BouncyScale;

		[Token(Token = "0x4002480")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Header("Rotation")]
		[Range(-1f, 1f)]
		[Tooltip("Rotation speed, set to 0 for no rotation.")]
		public float RotationSpeed;

		[Token(Token = "0x4002481")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[Tooltip("How quickly rotation reduces. Lower values reduce faster.")]
		[Range(0f, 1f)]
		public float RotateDampening;

		[Token(Token = "0x4002482")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Header("Double Tap")]
		[Tooltip("The threshold of zoom scale at which a double tap will zoom out instead of zoom in.")]
		[Range(1f, 10f)]
		public float DoubleTapZoomOutThreshold;

		[Token(Token = "0x4002483")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[Range(0.1f, 10f)]
		[Tooltip("The scale at which a double tap will zoom out to.")]
		public float DoubleTapZoomOutValue;

		[Token(Token = "0x4002484")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Tooltip("The scale at which a double tap will zoom in to.")]
		[Range(0.1f, 10f)]
		public float DoubleTapZoomInValue;

		[Token(Token = "0x4002485")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[Tooltip("How long a double tap will animate the zoom in and out.")]
		[Range(0.01f, 3f)]
		public float DoubleTapAnimationTimeSeconds;

		[Token(Token = "0x4002486")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[Tooltip("Optional, a text element to show debug text, useful for debugging the scroll view.")]
		[Header("Debug")]
		public Text DebugText;

		[Token(Token = "0x400248B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private RectTransform contentRectTransform;

		[Token(Token = "0x400248C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private RectTransform containerRectTransform;

		[Token(Token = "0x400248D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Vector2 panVelocity;

		[Token(Token = "0x400248E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Vector2 panStart;

		[Token(Token = "0x400248F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private float zoomSpeed;

		[Token(Token = "0x4002490")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private Vector2 lastScaleFocus;

		[Token(Token = "0x4002491")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private float rotateSpeed;

		[Token(Token = "0x4002492")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private float doubleTapScaleTimeSecondsRemaining;

		[Token(Token = "0x4002493")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private float doubleTapScaleStart;

		[Token(Token = "0x4002494")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private float doubleTapScaleEnd;

		[Token(Token = "0x4002495")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private Vector2 doubleTapPosStart;

		[Token(Token = "0x4002496")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private Vector2 doubleTapPosEnd;

		[Token(Token = "0x17000654")]
		public ScaleGestureRecognizer ScaleGesture
		{
			[Token(Token = "0x6002935")]
			[Address(RVA = "0x1723600", Offset = "0x1723600", VA = "0x1723600")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6002936")]
			[Address(RVA = "0x1723608", Offset = "0x1723608", VA = "0x1723608")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000655")]
		public RotateGestureRecognizer RotateGesture
		{
			[Token(Token = "0x6002937")]
			[Address(RVA = "0x1723610", Offset = "0x1723610", VA = "0x1723610")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6002938")]
			[Address(RVA = "0x1723618", Offset = "0x1723618", VA = "0x1723618")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000656")]
		public PanGestureRecognizer PanGesture
		{
			[Token(Token = "0x6002939")]
			[Address(RVA = "0x1723620", Offset = "0x1723620", VA = "0x1723620")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600293A")]
			[Address(RVA = "0x1723628", Offset = "0x1723628", VA = "0x1723628")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000657")]
		public TapGestureRecognizer DoubleTapGesture
		{
			[Token(Token = "0x600293B")]
			[Address(RVA = "0x1723630", Offset = "0x1723630", VA = "0x1723630")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600293C")]
			[Address(RVA = "0x1723638", Offset = "0x1723638", VA = "0x1723638")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x600293D")]
		[Address(RVA = "0x1723640", Offset = "0x1723640", VA = "0x1723640")]
		public Rect ZoomRectForScaleAndCenter(float scale, Vector2 center)
		{
			return default(Rect);
		}

		[Token(Token = "0x600293E")]
		[Address(RVA = "0x1723730", Offset = "0x1723730", VA = "0x1723730")]
		private void WriteDebug(string text, params object[] args)
		{
		}

		[Token(Token = "0x600293F")]
		[Address(RVA = "0x1723734", Offset = "0x1723734", VA = "0x1723734")]
		private void HandleDoubleTap()
		{
		}

		[Token(Token = "0x6002940")]
		[Address(RVA = "0x17237FC", Offset = "0x17237FC", VA = "0x17237FC")]
		private void HandlePan()
		{
		}

		[Token(Token = "0x6002941")]
		[Address(RVA = "0x172387C", Offset = "0x172387C", VA = "0x172387C")]
		private void HandleZoom()
		{
		}

		[Token(Token = "0x6002942")]
		[Address(RVA = "0x1723A64", Offset = "0x1723A64", VA = "0x1723A64")]
		private void HandleRotate()
		{
		}

		[Token(Token = "0x6002943")]
		[Address(RVA = "0x1723B08", Offset = "0x1723B08", VA = "0x1723B08")]
		private Rect ScaleRect(Rect rect, float scaleX, float scaleY)
		{
			return default(Rect);
		}

		[Token(Token = "0x6002944")]
		[Address(RVA = "0x1723BF0", Offset = "0x1723BF0", VA = "0x1723BF0")]
		private void EnsureVisible()
		{
		}

		[Token(Token = "0x6002945")]
		[Address(RVA = "0x1723EC4", Offset = "0x1723EC4", VA = "0x1723EC4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002946")]
		[Address(RVA = "0x17242B4", Offset = "0x17242B4", VA = "0x17242B4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002947")]
		[Address(RVA = "0x1724368", Offset = "0x1724368", VA = "0x1724368")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6002948")]
		[Address(RVA = "0x1724398", Offset = "0x1724398", VA = "0x1724398")]
		private void Tap_Updated(GestureRecognizer gesture)
		{
		}

		[Token(Token = "0x6002949")]
		[Address(RVA = "0x17244DC", Offset = "0x17244DC", VA = "0x17244DC")]
		private void Scale_Updated(GestureRecognizer gesture)
		{
		}

		[Token(Token = "0x600294A")]
		[Address(RVA = "0x17246F8", Offset = "0x17246F8", VA = "0x17246F8")]
		private void Rotate_Updated(GestureRecognizer gesture)
		{
		}

		[Token(Token = "0x600294B")]
		[Address(RVA = "0x1724748", Offset = "0x1724748", VA = "0x1724748")]
		private void Pan_Updated(GestureRecognizer gesture)
		{
		}

		[Token(Token = "0x600294C")]
		[Address(RVA = "0x17248D4", Offset = "0x17248D4", VA = "0x17248D4")]
		public FingersScrollViewComponentScript()
		{
		}
	}
	[Token(Token = "0x20007EA")]
	[AddComponentMenu("Fingers Gestures/Component/Fingers Third Person Controller", 5)]
	public class FingersThirdPersonControllerScript : MonoBehaviour
	{
		[Token(Token = "0x4002497")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("Player")]
		[Tooltip("Player main rigid body")]
		public Rigidbody Player;

		[Token(Token = "0x4002498")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Tooltip("Player feet collider. Used to determine if jump is possible.")]
		public BoxCollider PlayerFeet;

		[Token(Token = "0x4002499")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Header("Control")]
		[Tooltip("Move speed")]
		[Range(0.1f, 100f)]
		public float MoveSpeed;

		[Token(Token = "0x400249A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[Range(0f, 1f)]
		[Tooltip("Higher values reduce move speed faster as pan vertical approaches 0.")]
		public float MovePower;

		[Token(Token = "0x400249B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Tooltip("Jump speed/power")]
		[Range(0f, 32f)]
		public float JumpSpeed;

		[Token(Token = "0x400249C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[Tooltip("How often the player can jump")]
		[Range(0f, 3f)]
		public float JumpCooldown;

		[Token(Token = "0x400249D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Tooltip("The layers the player may jump off of")]
		public LayerMask JumpMask;

		[Token(Token = "0x400249E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float jumpTimer;

		[Token(Token = "0x400249F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[Header("Camera")]
		[Tooltip("Camera z offset")]
		[Range(1f, 100f)]
		public float CameraZOffset;

		[Token(Token = "0x40024A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[Range(0f, 100f)]
		[Tooltip("Camera y offset")]
		public float CameraYOffset;

		[Token(Token = "0x40024A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[Range(0f, 100f)]
		[Tooltip("Zoom dampening. This causes the zoom to stop faster with higher values. Set to 0 for no zoom at all.")]
		public float ZoomDampening;

		[Token(Token = "0x40024A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[Tooltip("Min/max camera z distance from player")]
		public Vector2 CameraZDistanceRange;

		[Token(Token = "0x40024A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float scaleVelocity;

		[Token(Token = "0x40024A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float? forwardSpeed;

		[Token(Token = "0x40024A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float? sideSpeed;

		[Token(Token = "0x40024A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private readonly Collider[] tempResults;

		[Token(Token = "0x600294D")]
		[Address(RVA = "0x1724928", Offset = "0x1724928", VA = "0x1724928")]
		private void Update()
		{
		}

		[Token(Token = "0x600294E")]
		[Address(RVA = "0x1724D44", Offset = "0x1724D44", VA = "0x1724D44")]
		public void Moved(Vector2 panAmount)
		{
		}

		[Token(Token = "0x600294F")]
		[Address(RVA = "0x1724DFC", Offset = "0x1724DFC", VA = "0x1724DFC")]
		public void Jumped()
		{
		}

		[Token(Token = "0x6002950")]
		[Address(RVA = "0x17250FC", Offset = "0x17250FC", VA = "0x17250FC")]
		public void Scaled(GestureRecognizer scaleGesture)
		{
		}

		[Token(Token = "0x6002951")]
		[Address(RVA = "0x1725194", Offset = "0x1725194", VA = "0x1725194")]
		public FingersThirdPersonControllerScript()
		{
		}
	}
	[Token(Token = "0x20007EB")]
	[AddComponentMenu("Fingers Gestures/Component/Fingers Zoom Pan Camera", 5)]
	[RequireComponent(typeof(Camera))]
	public class FingersZoomPanCameraComponentScript : MonoBehaviour
	{
		[Token(Token = "0x20007EC")]
		[CompilerGenerated]
		private sealed class <AnimationCoRoutine>d__24 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40024B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40024B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40024B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FingersZoomPanCameraComponentScript <>4__this;

			[Token(Token = "0x40024B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Vector3 <start>5__2;

			[Token(Token = "0x40024B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <accumTime>5__3;

			[Token(Token = "0x1700065C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002966")]
				[Address(RVA = "0x17262D0", Offset = "0x17262D0", VA = "0x17262D0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700065D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002968")]
				[Address(RVA = "0x1726318", Offset = "0x1726318", VA = "0x1726318", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002963")]
			[Address(RVA = "0x17252F0", Offset = "0x17252F0", VA = "0x17252F0")]
			[DebuggerHidden]
			public <AnimationCoRoutine>d__24(int <>1__state)
			{
			}

			[Token(Token = "0x6002964")]
			[Address(RVA = "0x17261B0", Offset = "0x17261B0", VA = "0x17261B0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002965")]
			[Address(RVA = "0x17261B4", Offset = "0x17261B4", VA = "0x17261B4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002967")]
			[Address(RVA = "0x17262D8", Offset = "0x17262D8", VA = "0x17262D8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40024A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Tooltip("Require this area to be visible at all times")]
		public Collider VisibleArea;

		[Token(Token = "0x40024A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Tooltip("Dampening for velocity when pan is released, lower values reduce velocity faster.")]
		[Range(0f, 1f)]
		public float Dampening;

		[Token(Token = "0x40024A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[Range(-10f, 10f)]
		[Tooltip("Adjust speed of rotation gesture (two finger rotate). Set to 0 for no rotation allowed.")]
		public float RotationSpeed;

		[Token(Token = "0x40024AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Range(0f, 1f)]
		[Tooltip("The threshold scale gesture must change in units before executing")]
		public float ScaleThreshold;

		[Token(Token = "0x40024AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[Tooltip("The layers that can be tapped on for objects to center the camera on them")]
		public LayerMask TapToCenterLayerMask;

		[Token(Token = "0x40024B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector3 cameraAnimationTargetPosition;

		[Token(Token = "0x40024B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private Vector3 velocity;

		[Token(Token = "0x40024B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Camera _camera;

		[Token(Token = "0x17000658")]
		public ScaleGestureRecognizer ScaleGesture
		{
			[Token(Token = "0x6002952")]
			[Address(RVA = "0x172523C", Offset = "0x172523C", VA = "0x172523C")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6002953")]
			[Address(RVA = "0x1725244", Offset = "0x1725244", VA = "0x1725244")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000659")]
		public PanGestureRecognizer PanGesture
		{
			[Token(Token = "0x6002954")]
			[Address(RVA = "0x172524C", Offset = "0x172524C", VA = "0x172524C")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6002955")]
			[Address(RVA = "0x1725254", Offset = "0x1725254", VA = "0x1725254")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700065A")]
		public TapGestureRecognizer TapGesture
		{
			[Token(Token = "0x6002956")]
			[Address(RVA = "0x172525C", Offset = "0x172525C", VA = "0x172525C")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6002957")]
			[Address(RVA = "0x1725264", Offset = "0x1725264", VA = "0x1725264")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700065B")]
		public RotateGestureRecognizer RotateGesture
		{
			[Token(Token = "0x6002958")]
			[Address(RVA = "0x172526C", Offset = "0x172526C", VA = "0x172526C")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6002959")]
			[Address(RVA = "0x1725274", Offset = "0x1725274", VA = "0x1725274")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x600295A")]
		[Address(RVA = "0x172527C", Offset = "0x172527C", VA = "0x172527C")]
		[IteratorStateMachine(typeof(<AnimationCoRoutine>d__24))]
		private IEnumerator AnimationCoRoutine()
		{
			return null;
		}

		[Token(Token = "0x600295B")]
		[Address(RVA = "0x1725318", Offset = "0x1725318", VA = "0x1725318")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600295C")]
		[Address(RVA = "0x1725784", Offset = "0x1725784", VA = "0x1725784")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600295D")]
		[Address(RVA = "0x1725838", Offset = "0x1725838", VA = "0x1725838")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600295E")]
		[Address(RVA = "0x1725B54", Offset = "0x1725B54", VA = "0x1725B54")]
		private void TapGesture_Updated(GestureRecognizer gesture)
		{
		}

		[Token(Token = "0x600295F")]
		[Address(RVA = "0x1725C80", Offset = "0x1725C80", VA = "0x1725C80")]
		private void PanGesture_Updated(GestureRecognizer gesture)
		{
		}

		[Token(Token = "0x6002960")]
		[Address(RVA = "0x1725E84", Offset = "0x1725E84", VA = "0x1725E84")]
		private void RotateGesture_Updated(GestureRecognizer gesture)
		{
		}

		[Token(Token = "0x6002961")]
		[Address(RVA = "0x1725F50", Offset = "0x1725F50", VA = "0x1725F50")]
		private void Gesture_Updated(GestureRecognizer gesture)
		{
		}

		[Token(Token = "0x6002962")]
		[Address(RVA = "0x1726170", Offset = "0x1726170", VA = "0x1726170")]
		public FingersZoomPanCameraComponentScript()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20007ED")]
	public class GestureRecognizerComponentStateUpdatedEvent : UnityEvent<GestureRecognizer>
	{
		[Token(Token = "0x6002969")]
		[Address(RVA = "0x1726320", Offset = "0x1726320", VA = "0x1726320")]
		public GestureRecognizerComponentStateUpdatedEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20007EE")]
	public class GestureRecognizerComponentEvent : UnityEvent
	{
		[Token(Token = "0x600296A")]
		[Address(RVA = "0x1726368", Offset = "0x1726368", VA = "0x1726368")]
		public GestureRecognizerComponentEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20007EF")]
	public class GestureRecognizerComponentEventVector2 : UnityEvent<Vector2>
	{
		[Token(Token = "0x600296B")]
		[Address(RVA = "0x1726370", Offset = "0x1726370", VA = "0x1726370")]
		public GestureRecognizerComponentEventVector2()
		{
		}
	}
	[Token(Token = "0x20007F0")]
	public abstract class GestureRecognizerComponentScriptBase : MonoBehaviour
	{
		[Token(Token = "0x20007F1")]
		public enum GestureObjectMode
		{
			[Token(Token = "0x40024BA")]
			RequireIntersectWithGameObject,
			[Token(Token = "0x40024BB")]
			AllowOnAnyGameObjectViaRaycast
		}

		[Token(Token = "0x1700065E")]
		public GestureRecognizer GestureBase
		{
			[Token(Token = "0x600296C")]
			[Address(RVA = "0x17263B8", Offset = "0x17263B8", VA = "0x17263B8")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600296D")]
			[Address(RVA = "0x17263C0", Offset = "0x17263C0", VA = "0x17263C0")]
			[CompilerGenerated]
			protected set
			{
			}
		}

		[Token(Token = "0x600296E")]
		[Address(RVA = "0x17263C8", Offset = "0x17263C8", VA = "0x17263C8")]
		protected GestureRecognizerComponentScriptBase()
		{
		}
	}
	[Token(Token = "0x20007F2")]
	public abstract class GestureRecognizerComponentScript<T> : GestureRecognizerComponentScriptBase where T : GestureRecognizer, new()
	{
		[Token(Token = "0x40024BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[Header("Gesture properties")]
		[Tooltip("Gesture state updated callback")]
		public GestureRecognizerComponentStateUpdatedEvent GestureStateUpdated;

		[Token(Token = "0x40024BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[Tooltip("The game object the gesture must execute over, null to allow the gesture to execute anywhere.")]
		public GameObject GestureView;

		[Token(Token = "0x40024BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[Range(1f, 10f)]
		[Tooltip("The minimum number of touches to track. This gesture will not start unless this many touches are tracked. Default is usually 1 or 2. Not all gestures will honor values higher than 1.")]
		public int MinimumNumberOfTouchesToTrack;

		[Token(Token = "0x40024BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[Range(1f, 10f)]
		[Tooltip("The maximum number of touches to track. This gesture will never track more touches than this. Default is usually 1 or 2. Not all gestures will honor values higher than 1.")]
		public int MaximumNumberOfTouchesToTrack;

		[Token(Token = "0x40024C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[Tooltip("Gesture components to allow simultaneous execution with. By default, gestures cannot execute together.")]
		public List<GestureRecognizerComponentScriptBase> AllowSimultaneousExecutionWith;

		[Token(Token = "0x40024C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[Tooltip("Whether to allow the gesture to execute simultaneously with all other gestures.")]
		public bool AllowSimultaneousExecutionWithAllGestures;

		[Token(Token = "0x40024C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[Tooltip("The gesture recognizers that should be required to fail")]
		public List<GestureRecognizerComponentScriptBase> RequireGestureRecognizersToFail;

		[Token(Token = "0x40024C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[Tooltip("Whether tracked touches are cleared when the gesture ends or fails, default is false. By setting to true, you allow the gesture to possibly execute again with a different touch even if the original touch it failed on is still on-going. This is a special case, so be sure to watch for problems if you set this to true, as leaving it false ensures the most correct behavior, especially with lots of gestures at once.")]
		public bool ClearTrackedTouchesOnEndOrFail;

		[Token(Token = "0x40024C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[Tooltip("A mask to restrict this gesture to")]
		public Collider2D Mask;

		[Token(Token = "0x1700065F")]
		public T Gesture
		{
			[Token(Token = "0x600296F")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6002970")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6002971")]
		protected virtual void GestureStateUpdatedCallback(GestureRecognizer gesture)
		{
		}

		[Token(Token = "0x6002972")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6002973")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6002974")]
		protected virtual void LateUpdate()
		{
		}

		[Token(Token = "0x6002975")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6002976")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6002977")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6002978")]
		protected GestureRecognizerComponentScript()
		{
		}
	}
	[Token(Token = "0x20007F3")]
	[AddComponentMenu("Fingers Gestures/Gesture/Fingers Image Recognition Gesture", 8)]
	public class ImageGestureRecognizerComponentScript : GestureRecognizerComponentScript<ImageGestureRecognizer>
	{
		[Token(Token = "0x40024C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[Header("Image gesture properties")]
		[Range(1f, 5f)]
		[Tooltip("The maximum number of distinct paths for each image. Gesture will reset when max path count is hit.")]
		public int MaximumPathCount;

		[Token(Token = "0x40024C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[Range(0.01f, 1f)]
		[Tooltip("The amount that the path must change direction (in radians) to count as a new direction (0.39 is 1.8 of PI).")]
		public float DirectionTolerance;

		[Token(Token = "0x40024C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[Tooltip("The distance in units that the touch must move before the gesture begins.")]
		[Range(0.01f, 1f)]
		public float ThresholdUnits;

		[Token(Token = "0x40024C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[Tooltip("Minimum difference beteen points in units to count as a new point.")]
		[Range(0.01f, 1f)]
		public float MinimumDistanceBetweenPointsUnits;

		[Token(Token = "0x40024CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[Range(0.01f, 1f)]
		[Tooltip("The amount that the gesture image must match an image from the set to count as a match (0 - 1).")]
		public float SimilarityMinimum;

		[Token(Token = "0x40024CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[Range(2f, 10f)]
		[Tooltip("The minimum number of points before the gesture will recognize.")]
		public int MinimumPointsToRecognize;

		[Token(Token = "0x40024CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[Tooltip("The images that should be compared against to find a match (can be a file name). The values are a ulong which match the bits of each generated image. See DemoSceneImage & DemoScriptImage.cs for an example.")]
		public List<ImageGestureRecognizerComponentScriptImageEntry> GestureImages;

		[Token(Token = "0x17000660")]
		public Dictionary<ImageGestureImage, string> GestureImagesToKey
		{
			[Token(Token = "0x6002979")]
			[Address(RVA = "0x17263D0", Offset = "0x17263D0", VA = "0x17263D0")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600297A")]
			[Address(RVA = "0x17263D8", Offset = "0x17263D8", VA = "0x17263D8")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x600297B")]
		[Address(RVA = "0x17263E0", Offset = "0x17263E0", VA = "0x17263E0", Slot = "8")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x600297C")]
		[Address(RVA = "0x1726460", Offset = "0x1726460", VA = "0x1726460")]
		public void ReloadGestureImageEntries()
		{
		}

		[Token(Token = "0x600297D")]
		[Address(RVA = "0x1726DF8", Offset = "0x1726DF8", VA = "0x1726DF8")]
		public ImageGestureRecognizerComponentScript()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20007F4")]
	public struct ImageGestureRecognizerComponentScriptImageEntry
	{
		[Token(Token = "0x40024CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[Tooltip("Key, should be unique")]
		public string Key;

		[Token(Token = "0x40024CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[Tooltip("Score padding, makes it easier to match")]
		[Range(0f, 0.5f)]
		public float ScorePadding;

		[Token(Token = "0x40024D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[TextArea(1, 8)]
		[Tooltip("Comma separated list of hex format ulong for each row, separated by newlines. Can also be a file name.")]
		public string Images;

		[Token(Token = "0x40024D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Tooltip("Custom description or can be used to store extended information like comma separated numbers, etc.")]
		public string Description;
	}
	[Token(Token = "0x20007F5")]
	[AddComponentMenu("Fingers Gestures/Gesture/Fingers Long Press Gesture", 3)]
	public class LongPressGestureRecognizerComponentScript : GestureRecognizerComponentScript<LongPressGestureRecognizer>
	{
		[Token(Token = "0x40024D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[Header("Long press gesture properties")]
		[Range(0.01f, 1f)]
		[Tooltip("The number of seconds that the touch must stay down to begin executing.")]
		public float MinimumDurationSeconds;

		[Token(Token = "0x40024D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[Range(0.01f, 1f)]
		[Tooltip("How many units away the long press can move before failing. After the long press begins, it is allowed to move any distance and stay executing.")]
		public float ThresholdUnits;

		[Token(Token = "0x600297E")]
		[Address(RVA = "0x1726E5C", Offset = "0x1726E5C", VA = "0x1726E5C", Slot = "8")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x600297F")]
		[Address(RVA = "0x1726EC8", Offset = "0x1726EC8", VA = "0x1726EC8")]
		public LongPressGestureRecognizerComponentScript()
		{
		}
	}
	[Token(Token = "0x20007F6")]
	[AddComponentMenu("Fingers Gestures/Gesture/Fingers Rotate Gesture (One Touch)", 4)]
	public class OneTouchRotateGestureRecognizerComponentScript : GestureRecognizerComponentScript<OneTouchRotateGestureRecognizer>
	{
		[Token(Token = "0x40024D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[Tooltip("Angle threshold in radians that must be met before rotation starts - this is the amount of rotation that must happen to start the gesture.")]
		[Header("One touch rotate gesture properties")]
		[Range(0.01f, 0.5f)]
		public float AngleThreshold;

		[Token(Token = "0x40024D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[Tooltip("The gesture focus must change distance by this number of units from the start focus in order to start.")]
		[Range(0f, 1f)]
		public float ThresholdUnits;

		[Token(Token = "0x6002980")]
		[Address(RVA = "0x1726F1C", Offset = "0x1726F1C", VA = "0x1726F1C", Slot = "8")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6002981")]
		[Address(RVA = "0x1726FB0", Offset = "0x1726FB0", VA = "0x1726FB0")]
		public OneTouchRotateGestureRecognizerComponentScript()
		{
		}
	}
	[Token(Token = "0x20007F7")]
	[AddComponentMenu("Fingers Gestures/Gesture/Fingers Scale Gesture (One Touch)", 6)]
	public class OneTouchScaleGestureRecognizerComponentScript : GestureRecognizerComponentScript<OneTouchScaleGestureRecognizer>
	{
		[Token(Token = "0x40024D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[Tooltip("Additional multiplier for ScaleMultiplier. This will making scaling happen slower or faster.")]
		[Header("One touch scale gesture properties")]
		[Range(-10f, 10f)]
		public float ZoomSpeed;

		[Token(Token = "0x40024D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[Range(0.01f, 1f)]
		[Tooltip("The threshold in units that the touch must move to start the gesture.")]
		public float ThresholdUnits;

		[Token(Token = "0x6002982")]
		[Address(RVA = "0x1727004", Offset = "0x1727004", VA = "0x1727004", Slot = "8")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6002983")]
		[Address(RVA = "0x1727098", Offset = "0x1727098", VA = "0x1727098")]
		public OneTouchScaleGestureRecognizerComponentScript()
		{
		}
	}
	[Token(Token = "0x20007F8")]
	[AddComponentMenu("Fingers Gestures/Gesture/Fingers Pan Gesture", 1)]
	public class PanGestureRecognizerComponentScript : GestureRecognizerComponentScript<PanGestureRecognizer>
	{
		[Token(Token = "0x40024D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[Range(0f, 1f)]
		[Tooltip("How many units away the pan must move to execute.")]
		[Header("Pan gesture properties")]
		public float ThresholdUnits;

		[Token(Token = "0x40024D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[Tooltip("The speed in units per second which if the pan gesture drops under, ThresholdUnits will be re-enabled and the gesture will not send execution events until the threshold units is exceeded again. Default is 0. 0.1f is a good value if you need to place objects exactly.")]
		[Range(0f, 1f)]
		public float SpeedUnitsToRestartThresholdUnits;

		[Token(Token = "0x6002984")]
		[Address(RVA = "0x17270EC", Offset = "0x17270EC", VA = "0x17270EC", Slot = "8")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6002985")]
		[Address(RVA = "0x1727158", Offset = "0x1727158", VA = "0x1727158")]
		public PanGestureRecognizerComponentScript()
		{
		}
	}
	[Token(Token = "0x20007F9")]
	[AddComponentMenu("Fingers Gestures/Gesture/Fingers Rotate Gesture (Two Touches)", 5)]
	public class RotateGestureRecognizerComponentScript : GestureRecognizerComponentScript<RotateGestureRecognizer>
	{
		[Token(Token = "0x40024DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[Range(0.01f, 0.5f)]
		[Tooltip("Angle threshold in radians that must be met before rotation starts - this is the amount of rotation that must happen to start the gesture.")]
		[Header("Rotate gesture properties")]
		public float AngleThreshold;

		[Token(Token = "0x40024DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[Range(0f, 1f)]
		[Tooltip("The gesture focus must change distance by this number of units from the start focus in order to start.")]
		public float ThresholdUnits;

		[Token(Token = "0x6002986")]
		[Address(RVA = "0x17271AC", Offset = "0x17271AC", VA = "0x17271AC", Slot = "8")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6002987")]
		[Address(RVA = "0x1727240", Offset = "0x1727240", VA = "0x1727240")]
		public RotateGestureRecognizerComponentScript()
		{
		}
	}
	[Token(Token = "0x20007FA")]
	[AddComponentMenu("Fingers Gestures/Gesture/Fingers Scale Gesture (Two Touches)", 7)]
	public class ScaleGestureRecognizerComponentScript : GestureRecognizerComponentScript<ScaleGestureRecognizer>
	{
		[Token(Token = "0x40024DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[Range(0.0001f, 10f)]
		[Tooltip("Additional multiplier for ScaleMultiplier. This will making scaling happen slower or faster.")]
		[Header("Scale gesture properties")]
		public float ZoomSpeed;

		[Token(Token = "0x40024DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[Range(0.01f, 1f)]
		[Tooltip("How many units the distance between the fingers must increase or decrease from the start distance to begin executing.")]
		public float ThresholdUnits;

		[Token(Token = "0x6002988")]
		[Address(RVA = "0x1727294", Offset = "0x1727294", VA = "0x1727294", Slot = "8")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6002989")]
		[Address(RVA = "0x172732C", Offset = "0x172732C", VA = "0x172732C")]
		public ScaleGestureRecognizerComponentScript()
		{
		}
	}
	[Token(Token = "0x20007FB")]
	[AddComponentMenu("Fingers Gestures/Gesture/Fingers Swipe Gesture", 2)]
	public class SwipeGestureRecognizerComponentScript : GestureRecognizerComponentScript<SwipeGestureRecognizer>
	{
		[Token(Token = "0x40024DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[Tooltip("The swipe direction required to recognize the gesture (default is any)")]
		[Header("Swipe gesture properties")]
		public SwipeGestureRecognizerDirection Direction;

		[Token(Token = "0x40024DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[Range(0.01f, 10f)]
		[Tooltip("The minimum distance the swipe must travel to be recognized.")]
		public float MinimumDistanceUnits;

		[Token(Token = "0x40024E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[Tooltip("The minimum units per second the swipe must travel to be recognized.")]
		[Range(0.01f, 10f)]
		public float MinimumSpeedUnits;

		[Token(Token = "0x40024E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[Range(0f, 5f)]
		[Tooltip("For set directions, this is the amount that the swipe must be proportionally in that direction vs the other direction. For example, a swipe down gesture will need to move in the y axis by this multiplier more versus moving along the x axis.")]
		public float DirectionThreshold;

		[Token(Token = "0x40024E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[Tooltip("Controls how the swipe gesture ends. See SwipeGestureRecognizerSwipeMode enum for more details.")]
		public SwipeGestureRecognizerEndMode EndMode;

		[Token(Token = "0x40024E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[Tooltip("Whether to fail if the gesture changes direction mid swipe")]
		public bool FailOnDirectionChange;

		[Token(Token = "0x40024E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7D")]
		[Tooltip("Whether to send begin and executing states. Default is true. If false, only possible, ended or failed state is sent.")]
		public bool SendBeginExecutingStates;

		[Token(Token = "0x600298A")]
		[Address(RVA = "0x1727380", Offset = "0x1727380", VA = "0x1727380", Slot = "8")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x600298B")]
		[Address(RVA = "0x1727404", Offset = "0x1727404", VA = "0x1727404")]
		public SwipeGestureRecognizerComponentScript()
		{
		}
	}
	[Token(Token = "0x20007FC")]
	[AddComponentMenu("Fingers Gestures/Gesture/Fingers Tap Gesture", 0)]
	public class TapGestureRecognizerComponentScript : GestureRecognizerComponentScript<TapGestureRecognizer>
	{
		[Token(Token = "0x40024E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[Header("Tap gesture properties")]
		[Tooltip("How many taps must execute in order to end the gesture")]
		[Range(1f, 5f)]
		public int NumberOfTapsRequired;

		[Token(Token = "0x40024E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[Range(0.01f, 1f)]
		[Tooltip("How many seconds can expire before the tap is released to still count as a tap")]
		public float ThresholdSeconds;

		[Token(Token = "0x40024E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[Range(0.01f, 1f)]
		[Tooltip("How many units away the tap down and up and subsequent taps can be to still be considered - must be greater than 0.")]
		public float ThresholdUnits;

		[Token(Token = "0x40024E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[Tooltip("Whether the tap gesture will immediately send a begin state when a touch is first down. Default is false.")]
		public bool SendBeginState;

		[Token(Token = "0x600298C")]
		[Address(RVA = "0x1727470", Offset = "0x1727470", VA = "0x1727470", Slot = "8")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x600298D")]
		[Address(RVA = "0x17274EC", Offset = "0x17274EC", VA = "0x17274EC")]
		public TapGestureRecognizerComponentScript()
		{
		}
	}
	[Token(Token = "0x20007FD")]
	[Flags]
	public enum FingersDPadItem
	{
		[Token(Token = "0x40024EA")]
		None = 0,
		[Token(Token = "0x40024EB")]
		Up = 1,
		[Token(Token = "0x40024EC")]
		Right = 2,
		[Token(Token = "0x40024ED")]
		Down = 4,
		[Token(Token = "0x40024EE")]
		Left = 8,
		[Token(Token = "0x40024EF")]
		Center = 0x10
	}
	[Token(Token = "0x20007FE")]
	public class FingersDPadScript : MonoBehaviour
	{
		[Token(Token = "0x40024F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Tooltip("The background image to use for the DPad. This should contain up, right, down, left and center in unselected state.")]
		public Image DPadBackgroundImage;

		[Token(Token = "0x40024F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Tooltip("The up image to use for the DPad for selected state. Alpha pixel of less than MinAlphaForTouch will not be selectable.")]
		public Image DPadUpImageSelected;

		[Token(Token = "0x40024F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Tooltip("The right image to use for the DPad for selected state. Alpha pixel of less than MinAlphaForTouch will not be selectable.")]
		public Image DPadRightImageSelected;

		[Token(Token = "0x40024F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Tooltip("The down image to use for the DPad for selected state. Alpha pixel of less than MinAlphaForTouch will not be selectable.")]
		public Image DPadDownImageSelected;

		[Token(Token = "0x40024F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Tooltip("The left image to use for the DPad for selected state. Alpha pixel of less than MinAlphaForTouch will not be selectable.")]
		public Image DPadLeftImageSelected;

		[Token(Token = "0x40024F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[Tooltip("The center image to use for the DPad for selected state. Alpha pixel of less than MinAlphaForTouch will not be selectable.")]
		public Image DPadCenterImageSelected;

		[Token(Token = "0x40024F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[Range(0.01f, 1f)]
		[Tooltip("Touch radius in units (usually inches). Set to lowest for single pixel accuracy, or larger if you want more than one dpad button interactable at once. You'll need to test this to make sure the DPad works how you expect for an average finger size and your screen size.")]
		public float TouchRadiusInUnits;

		[Token(Token = "0x40024F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("Horizontal input axis name if cross platform input integration is desired.")]
		public string CrossPlatformInputHorizontalAxisName;

		[Token(Token = "0x40024F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("Vertical input axis name if cross platform input integration is desired.")]
		public string CrossPlatformInputVerticalAxisName;

		[Token(Token = "0x40024F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private readonly Collider2D[] overlap;

		[Token(Token = "0x40024FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private object crossPlatformInputHorizontalAxisObject;

		[Token(Token = "0x40024FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private object crossPlatformInputVerticalAxisObject;

		[Token(Token = "0x40024FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private bool crossPlatformInputNewlyRegistered;

		[Token(Token = "0x40024FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Action<FingersDPadScript, FingersDPadItem, TapGestureRecognizer> DPadItemTapped;

		[Token(Token = "0x40024FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Action<FingersDPadScript, FingersDPadItem, PanGestureRecognizer> DPadItemPanned;

		[Token(Token = "0x17000661")]
		public PanGestureRecognizer PanGesture
		{
			[Token(Token = "0x6002994")]
			[Address(RVA = "0x1727A74", Offset = "0x1727A74", VA = "0x1727A74")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6002995")]
			[Address(RVA = "0x1727A7C", Offset = "0x1727A7C", VA = "0x1727A7C")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000662")]
		public TapGestureRecognizer TapGesture
		{
			[Token(Token = "0x6002996")]
			[Address(RVA = "0x1727A84", Offset = "0x1727A84", VA = "0x1727A84")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6002997")]
			[Address(RVA = "0x1727A8C", Offset = "0x1727A8C", VA = "0x1727A8C")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x600298E")]
		private void CheckForOverlap<T>(Vector2 point, T gesture, Action<FingersDPadScript, FingersDPadItem, T> action) where T : GestureRecognizer
		{
		}

		[Token(Token = "0x600298F")]
		[Address(RVA = "0x1727548", Offset = "0x1727548", VA = "0x1727548")]
		private void DisableButtons()
		{
		}

		[Token(Token = "0x6002990")]
		[Address(RVA = "0x17275BC", Offset = "0x17275BC", VA = "0x17275BC")]
		private void PanGestureUpdated(GestureRecognizer gesture)
		{
		}

		[Token(Token = "0x6002991")]
		[Address(RVA = "0x1727668", Offset = "0x1727668", VA = "0x1727668")]
		private void TapGestureUpdated(GestureRecognizer gesture)
		{
		}

		[Token(Token = "0x6002992")]
		[Address(RVA = "0x17276E8", Offset = "0x17276E8", VA = "0x17276E8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002993")]
		[Address(RVA = "0x1727988", Offset = "0x1727988", VA = "0x1727988")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002998")]
		[Address(RVA = "0x1727A94", Offset = "0x1727A94", VA = "0x1727A94")]
		public FingersDPadScript()
		{
		}
	}
	[Token(Token = "0x20007FF")]
	public class FingersImageAutomationScript : MonoBehaviour
	{
		[Token(Token = "0x4002501")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("Config")]
		[Range(1f, 10f)]
		[Tooltip("Max strokes that can make up an image. For example an X would require 2 strokes, 3 parallel lines would require 3 strokes, etc.")]
		public int MaxStrokeCount;

		[Token(Token = "0x4002502")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[Tooltip("Whether to auto-add non-matches to the list of possible images")]
		public bool AutoAddImages;

		[Token(Token = "0x4002503")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Header("UI elements")]
		public UnityEngine.UI.RawImage Image;

		[Token(Token = "0x4002504")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Material LineMaterial;

		[Token(Token = "0x4002505")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Text MatchLabel;

		[Token(Token = "0x4002506")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public InputField ScriptText;

		[Token(Token = "0x4002507")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public InputField ImageNameText;

		[Token(Token = "0x4002508")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Button BulkImportButton;

		[Token(Token = "0x400250C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		protected Dictionary<ImageGestureImage, string> RecognizableImages;

		[Token(Token = "0x400250D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private List<List<Vector2>> lineSet;

		[Token(Token = "0x400250E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private List<Vector2> currentPointList;

		[Token(Token = "0x400250F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private TapGestureRecognizer tap;

		[Token(Token = "0x17000663")]
		public ImageGestureRecognizer ImageGesture
		{
			[Token(Token = "0x6002999")]
			[Address(RVA = "0x1727B00", Offset = "0x1727B00", VA = "0x1727B00")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600299A")]
			[Address(RVA = "0x1727B08", Offset = "0x1727B08", VA = "0x1727B08")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000664")]
		protected ImageGestureImage LastImage
		{
			[Token(Token = "0x600299B")]
			[Address(RVA = "0x1727B10", Offset = "0x1727B10", VA = "0x1727B10")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600299C")]
			[Address(RVA = "0x1727B18", Offset = "0x1727B18", VA = "0x1727B18")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000665")]
		protected ImageGestureImage MatchedImage
		{
			[Token(Token = "0x600299D")]
			[Address(RVA = "0x1727B20", Offset = "0x1727B20", VA = "0x1727B20")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600299E")]
			[Address(RVA = "0x1727B28", Offset = "0x1727B28", VA = "0x1727B28")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x600299F")]
		[Address(RVA = "0x1727B30", Offset = "0x1727B30", VA = "0x1727B30")]
		public static Texture2D CreateTextureFromImageGestureImage(ImageGestureImage image)
		{
			return null;
		}

		[Token(Token = "0x60029A0")]
		[Address(RVA = "0x1727C80", Offset = "0x1727C80", VA = "0x1727C80")]
		public static ImageGestureImage CreateImageGestureImageFromTexture(Texture2D texture, float scorePadding = 0f)
		{
			return null;
		}

		[Token(Token = "0x60029A1")]
		[Address(RVA = "0x1727E48", Offset = "0x1727E48", VA = "0x1727E48")]
		public void DeleteLastScriptLine()
		{
		}

		[Token(Token = "0x60029A2")]
		[Address(RVA = "0x17280BC", Offset = "0x17280BC", VA = "0x17280BC")]
		public void BulkImport()
		{
		}

		[Token(Token = "0x60029A3")]
		[Address(RVA = "0x17280C0", Offset = "0x17280C0", VA = "0x17280C0", Slot = "4")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x60029A4")]
		[Address(RVA = "0x1728380", Offset = "0x1728380", VA = "0x1728380", Slot = "5")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x60029A5")]
		[Address(RVA = "0x1728414", Offset = "0x1728414", VA = "0x1728414", Slot = "6")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x60029A6")]
		[Address(RVA = "0x172897C", Offset = "0x172897C", VA = "0x172897C")]
		public static Texture2D ScaleTexture(Texture src, int width, int height)
		{
			return null;
		}

		[Token(Token = "0x60029A7")]
		[Address(RVA = "0x17285C0", Offset = "0x17285C0", VA = "0x17285C0")]
		private void UpdateImage()
		{
		}

		[Token(Token = "0x60029A8")]
		[Address(RVA = "0x1728B2C", Offset = "0x1728B2C", VA = "0x1728B2C")]
		private void AddTouches(ICollection<GestureTouch> touches)
		{
		}

		[Token(Token = "0x60029A9")]
		[Address(RVA = "0x1728FA0", Offset = "0x1728FA0", VA = "0x1728FA0")]
		private void ImageGestureUpdated(GestureRecognizer imageGesture)
		{
		}

		[Token(Token = "0x60029AA")]
		[Address(RVA = "0x1728534", Offset = "0x1728534", VA = "0x1728534")]
		private void ResetLines()
		{
		}

		[Token(Token = "0x60029AB")]
		[Address(RVA = "0x1729154", Offset = "0x1729154", VA = "0x1729154")]
		private void MaximumPathCountExceeded(object sender, EventArgs e)
		{
		}

		[Token(Token = "0x60029AC")]
		[Address(RVA = "0x1729158", Offset = "0x1729158", VA = "0x1729158")]
		private void Tap_Updated(GestureRecognizer gesture)
		{
		}

		[Token(Token = "0x60029AD")]
		[Address(RVA = "0x17291E4", Offset = "0x17291E4", VA = "0x17291E4")]
		private void OnRenderObject()
		{
		}

		[Token(Token = "0x60029AE")]
		[Address(RVA = "0x172948C", Offset = "0x172948C", VA = "0x172948C")]
		public FingersImageAutomationScript()
		{
		}
	}
	[Token(Token = "0x2000800")]
	public class FingersJoystickScript : MonoBehaviour
	{
		[Token(Token = "0x4002510")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Tooltip("The image to move around like a joystick.")]
		[Header("Joystick appearance")]
		public Image JoystickImage;

		[Token(Token = "0x4002511")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Tooltip("The sprite to set on JoystickImage for idle state.")]
		public Sprite JoystickSpriteIdle;

		[Token(Token = "0x4002512")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Tooltip("The sprite to set on JoystickImage for active state.")]
		public Sprite JoystickSpriteActive;

		[Token(Token = "0x4002513")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Tooltip("The background image of the joystick")]
		public Image JoystickBackground;

		[Token(Token = "0x4002514")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Tooltip("The sprite to set on JoystickBackground for idle state.")]
		public Sprite JoystickBackgroundSpriteIdle;

		[Token(Token = "0x4002515")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[Tooltip("The sprite to set on JoystickBackground for active state.")]
		public Sprite JoystickBackgroundSpriteActive;

		[Token(Token = "0x4002516")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[Tooltip("Dead zones for the joystick. Below the min, no movement. Above the max, max movement.")]
		[Header("Joystick Behavior")]
		[MinMaxSlider]
		public Vector2 DeadZones;

		[Token(Token = "0x4002517")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The input curve, as the joystick moves from min dead zone to max dead zone, it will follow the curve to max movement.")]
		public AnimationCurve InputCurve;

		[Token(Token = "0x4002518")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("In eight axis mode, the joystick can only move up, down, left, right or diagonally. No in between.")]
		public bool EightAxisMode;

		[Token(Token = "0x4002519")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[Tooltip("Reduce the max range of the joystick based on radius of the joystick")]
		[Range(0.5f, 1f)]
		public float MaxRangeRadiusMultiplier;

		[Token(Token = "0x400251A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Range(0f, 1f)]
		[Tooltip("The speed at which the joystick moves with the finger if it is dragged beyond the edge. 0 for no follow, 1 for very close follow.")]
		public float FollowSpeed;

		[Token(Token = "0x400251B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[Tooltip("How the joystick will be started.")]
		public JoystickStartMode StartMode;

		[Token(Token = "0x400251C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[Tooltip("Unity 2019+ required. Restrict joystick position to this collider2D, null for no restriction. Place collider in joystick parent object.")]
		public Collider2D RestrictJoystickPositionTo;

		[Token(Token = "0x400251D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[Tooltip("Whether to return the joystick to home position if MoveJoystickToGestureStartLocation is true and joystick gesture ends.")]
		public bool ReturnToHomePosition;

		[Token(Token = "0x400251E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[Header("Cross Platform Input")]
		[Tooltip("Horizontal input axis name if cross platform input integration is desired.")]
		public string CrossPlatformInputHorizontalAxisName;

		[Token(Token = "0x400251F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[Tooltip("Vertical input axis name if cross platform input integration is desired.")]
		public string CrossPlatformInputVerticalAxisName;

		[Token(Token = "0x4002520")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[Header("Callbacks")]
		public GestureRecognizerComponentEventVector2 JoystickCallback;

		[Token(Token = "0x4002521")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private object crossPlatformInputHorizontalAxisObject;

		[Token(Token = "0x4002522")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private object crossPlatformInputVerticalAxisObject;

		[Token(Token = "0x4002523")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private bool crossPlatformInputNewlyRegistered;

		[Token(Token = "0x4002524")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private Vector2 startCenter;

		[Token(Token = "0x4002525")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private Vector2 homePosition;

		[Token(Token = "0x4002526")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private RectTransform rectTransform;

		[Token(Token = "0x4002527")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private readonly PanGestureRecognizer panGesture;

		[Token(Token = "0x4002528")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public Action<FingersJoystickScript, Vector2> JoystickExecuted;

		[Token(Token = "0x17000666")]
		public PanGestureRecognizer PanGesture
		{
			[Token(Token = "0x60029AF")]
			[Address(RVA = "0x172956C", Offset = "0x172956C", VA = "0x172956C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000667")]
		public Vector2 CurrentAmount
		{
			[Token(Token = "0x60029B0")]
			[Address(RVA = "0x1729574", Offset = "0x1729574", VA = "0x1729574")]
			[CompilerGenerated]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x60029B1")]
			[Address(RVA = "0x172957C", Offset = "0x172957C", VA = "0x172957C")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000668")]
		public bool Executing
		{
			[Token(Token = "0x60029B2")]
			[Address(RVA = "0x1729584", Offset = "0x1729584", VA = "0x1729584")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60029B3")]
			[Address(RVA = "0x172958C", Offset = "0x172958C", VA = "0x172958C")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x60029B4")]
		[Address(RVA = "0x1729598", Offset = "0x1729598", VA = "0x1729598")]
		public void Reset()
		{
		}

		[Token(Token = "0x60029B5")]
		[Address(RVA = "0x17295D0", Offset = "0x17295D0", VA = "0x17295D0")]
		private void SetImagePosition(Vector2 pos)
		{
		}

		[Token(Token = "0x60029B6")]
		[Address(RVA = "0x172967C", Offset = "0x172967C", VA = "0x172967C")]
		private Vector2 UpdateForEightAxisMode(Vector2 amount, float maxOffset)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60029B7")]
		[Address(RVA = "0x1729720", Offset = "0x1729720", VA = "0x1729720")]
		private void ExecuteCallback(Vector2 amount)
		{
		}

		[Token(Token = "0x60029B8")]
		[Address(RVA = "0x17297BC", Offset = "0x17297BC", VA = "0x17297BC")]
		private Vector2 ComputeJoystickPowerCircle(Vector2 offset, Vector2 offsetNormalized, float extent)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60029B9")]
		[Address(RVA = "0x17298D4", Offset = "0x17298D4", VA = "0x17298D4")]
		private bool StartJoystick(GestureRecognizer gesture)
		{
			return default(bool);
		}

		[Token(Token = "0x60029BA")]
		[Address(RVA = "0x1729C30", Offset = "0x1729C30", VA = "0x1729C30")]
		private void PanGestureUpdated(GestureRecognizer gesture)
		{
		}

		[Token(Token = "0x60029BB")]
		[Address(RVA = "0x172A0EC", Offset = "0x172A0EC", VA = "0x172A0EC")]
		private void SetIdleState()
		{
		}

		[Token(Token = "0x60029BC")]
		[Address(RVA = "0x1729B14", Offset = "0x1729B14", VA = "0x1729B14")]
		private void SetActiveState()
		{
		}

		[Token(Token = "0x60029BD")]
		[Address(RVA = "0x172A204", Offset = "0x172A204", VA = "0x172A204")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60029BE")]
		[Address(RVA = "0x172A3D8", Offset = "0x172A3D8", VA = "0x172A3D8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60029BF")]
		[Address(RVA = "0x172A464", Offset = "0x172A464", VA = "0x172A464")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60029C0")]
		[Address(RVA = "0x172A500", Offset = "0x172A500", VA = "0x172A500")]
		public FingersJoystickScript()
		{
		}
	}
	[Token(Token = "0x2000801")]
	public enum JoystickStartMode
	{
		[Token(Token = "0x400252C")]
		MustStartInside,
		[Token(Token = "0x400252D")]
		MoveToPanStart,
		[Token(Token = "0x400252E")]
		PanInsideOrPanMovesInside
	}
	[Token(Token = "0x2000802")]
	public class FingersScript : MonoBehaviour
	{
		[Token(Token = "0x2000803")]
		private class GestureMask
		{
			[Token(Token = "0x17000676")]
			public Collider2D Collider
			{
				[Token(Token = "0x60029FE")]
				[Address(RVA = "0x17313A0", Offset = "0x17313A0", VA = "0x17313A0")]
				[CompilerGenerated]
				get
				{
					return null;
				}
				[Token(Token = "0x60029FF")]
				[Address(RVA = "0x17313A8", Offset = "0x17313A8", VA = "0x17313A8")]
				[CompilerGenerated]
				private set
				{
				}
			}

			[Token(Token = "0x17000677")]
			public List<GestureRecognizer> Gestures
			{
				[Token(Token = "0x6002A00")]
				[Address(RVA = "0x17313B0", Offset = "0x17313B0", VA = "0x17313B0")]
				[CompilerGenerated]
				get
				{
					return null;
				}
				[Token(Token = "0x6002A01")]
				[Address(RVA = "0x17313B8", Offset = "0x17313B8", VA = "0x17313B8")]
				[CompilerGenerated]
				private set
				{
				}
			}

			[Token(Token = "0x60029FD")]
			[Address(RVA = "0x17312F4", Offset = "0x17312F4", VA = "0x17312F4")]
			public GestureMask(Collider2D collider, params GestureRecognizer[] gestures)
			{
			}
		}

		[Token(Token = "0x2000804")]
		public enum GestureLevelUnloadOption
		{
			[Token(Token = "0x400256D")]
			Nothing,
			[Token(Token = "0x400256E")]
			ResetGestureState,
			[Token(Token = "0x400256F")]
			ClearAllGestures
		}

		[Token(Token = "0x2000805")]
		private enum CaptureResult
		{
			[Token(Token = "0x4002571")]
			ForcePassThrough,
			[Token(Token = "0x4002572")]
			ForceDenyPassThrough,
			[Token(Token = "0x4002573")]
			Default,
			[Token(Token = "0x4002574")]
			Ignore
		}

		[Token(Token = "0x2000806")]
		private struct ShownTouch
		{
			[Token(Token = "0x17000678")]
			public GameObject GameObject
			{
				[Token(Token = "0x6002A02")]
				[Address(RVA = "0x17313C0", Offset = "0x17313C0", VA = "0x17313C0")]
				[CompilerGenerated]
				readonly get
				{
					return null;
				}
				[Token(Token = "0x6002A03")]
				[Address(RVA = "0x17313C8", Offset = "0x17313C8", VA = "0x17313C8")]
				[CompilerGenerated]
				set
				{
				}
			}

			[Token(Token = "0x17000679")]
			public float Timestamp
			{
				[Token(Token = "0x6002A04")]
				[Address(RVA = "0x17313D0", Offset = "0x17313D0", VA = "0x17313D0")]
				[CompilerGenerated]
				readonly get
				{
					return default(float);
				}
				[Token(Token = "0x6002A05")]
				[Address(RVA = "0x17313D8", Offset = "0x17313D8", VA = "0x17313D8")]
				[CompilerGenerated]
				set
				{
				}
			}
		}

		[Token(Token = "0x2000807")]
		[CompilerGenerated]
		private sealed class <MainThreadCallback>d__56 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002577")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002578")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002579")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Action action;

			[Token(Token = "0x400257A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float delay;

			[Token(Token = "0x400257B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Stopwatch <timer>5__2;

			[Token(Token = "0x1700067A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002A09")]
				[Address(RVA = "0x1731564", Offset = "0x1731564", VA = "0x1731564", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700067B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002A0B")]
				[Address(RVA = "0x17315AC", Offset = "0x17315AC", VA = "0x17315AC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002A06")]
			[Address(RVA = "0x17313E0", Offset = "0x17313E0", VA = "0x17313E0")]
			[DebuggerHidden]
			public <MainThreadCallback>d__56(int <>1__state)
			{
			}

			[Token(Token = "0x6002A07")]
			[Address(RVA = "0x1731408", Offset = "0x1731408", VA = "0x1731408", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002A08")]
			[Address(RVA = "0x173140C", Offset = "0x173140C", VA = "0x173140C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002A0A")]
			[Address(RVA = "0x173156C", Offset = "0x173156C", VA = "0x173156C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400252F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("Mouse and Touch Settings")]
		[Tooltip("Whether to enable Unity input multi-touch automatically.")]
		public bool EnableMultiTouch;

		[Token(Token = "0x4002530")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[Tooltip("True to treat the mouse as a finger, false otherwise. Left, middle and right mouse buttons can be used as individual fingers and will all have the same location.")]
		public bool TreatMousePointerAsFinger;

		[Token(Token = "0x4002531")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		[Tooltip("True to treat the mouse wheel as two fingers for rotation and scaling, false otherwise.")]
		public bool TreatMouseWheelAsFingers;

		[Token(Token = "0x4002532")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
		[Tooltip("Whether to treat touches as mouse pointer? This needs to be set before the script Awake method is called.")]
		public bool SimulateMouseWithTouches;

		[Token(Token = "0x4002533")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[Tooltip("Whether to process Unity touch events. If false, you will need to implement the VirtualTouch* methods to implement touch handling.")]
		public bool ProcessUnityTouches;

		[Token(Token = "0x4002534")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
		[Tooltip("Whether the control key is required for mouse zoom. If true, control pluse mouse wheel zooms. If false, mouse wheel alone will zoom.")]
		public bool RequireControlKeyForMouseZoom;

		[Token(Token = "0x4002535")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Range(0.1f, 10f)]
		[Tooltip("The distance (in units, default is inches) for simulated fingers to start at for a mouse zoom or rotate.")]
		public float MouseDistanceInUnitsForScaleAndRotate;

		[Token(Token = "0x4002536")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[Range(0.0001f, 1f)]
		[Tooltip("Mouse wheel delta multiplier.")]
		public float MouseWheelDeltaMultiplier;

		[Token(Token = "0x4002537")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Tooltip("Objects that should pass gestures through. By default, some UI components block gestures, such as Panel, Button, Dropdown, etc. See the SetupDefaultPassThroughComponents method for the full list of defaults.")]
		[Header("Other Settings")]
		public List<GameObject> PassThroughObjects;

		[Token(Token = "0x4002538")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Tooltip("Whether to auto-add required components like physics raycasters, event system, etc. if they are missing.")]
		public bool AutoAddRequiredComponents;

		[Token(Token = "0x4002539")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		[Tooltip("Whether to show touches using the TouchCircles array. Make sure to turn this off before releasing your game or app.")]
		public bool ShowTouches;

		[Token(Token = "0x400253A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Tooltip("If ShowTouches is true, this array is used to show the touches. The FingersScriptPrefab sets this up as 10 circles.")]
		public GameObject[] TouchCircles;

		[Token(Token = "0x400253B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GameObject[] origTouchCircles;

		[Token(Token = "0x400253C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[Tooltip("The default DPI to use if the DPI cannot be determined")]
		public int DefaultDPI;

		[Token(Token = "0x400253D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[Tooltip("Allows resetting state (keeps the gestures, just resets them) or clearing all gestures when a level is unloaded.")]
		public GestureLevelUnloadOption LevelUnloadOption;

		[Token(Token = "0x400253E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("Whether to use fixed update instead of update. Using fixed update can result in slightly more responsibe input, depending on project settings -> time -> fixed update rate.")]
		public bool UseFixedUpdate;

		[Token(Token = "0x400253F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		[Header("Testing")]
		[Tooltip("Whether to record touches. Recorded touches are put into TestTouches where they can be copied and pasted once you exit play mode. Use copy component and paste component values.")]
		public bool RecordTouches;

		[Token(Token = "0x4002540")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("Fake touches, for testing and automation.")]
		public List<FakeTouch> TestTouches;

		[Token(Token = "0x4002541")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float accumulatedTime;

		[Token(Token = "0x4002542")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Dictionary<int, GestureTouch> fakeTouchesInProgress;

		[Token(Token = "0x4002543")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private readonly List<GestureMask> masks;

		[Token(Token = "0x4002544")]
		public const int MousePointerId0 = 2147483645;

		[Token(Token = "0x4002545")]
		public const int MousePointerId1 = 2147483644;

		[Token(Token = "0x4002546")]
		public const int MousePointerId2 = 2147483643;

		[Token(Token = "0x4002547")]
		public const int MouseRotatePinchId0 = 2147483642;

		[Token(Token = "0x4002548")]
		public const int MouseRotatePinchId1 = 2147483641;

		[Token(Token = "0x4002549")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private readonly List<GestureRecognizer> gestures;

		[Token(Token = "0x400254A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private readonly List<GestureRecognizer> gesturesTemp;

		[Token(Token = "0x400254B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private readonly List<GestureTouch> touchesBegan;

		[Token(Token = "0x400254C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private readonly List<GestureTouch> touchesMoved;

		[Token(Token = "0x400254D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private readonly List<GestureTouch> touchesEnded;

		[Token(Token = "0x400254E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private readonly Dictionary<int, List<GameObject>> gameObjectsForTouch;

		[Token(Token = "0x400254F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private readonly List<RaycastResult> captureRaycastResults;

		[Token(Token = "0x4002550")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private readonly List<GestureTouch> filteredTouches;

		[Token(Token = "0x4002551")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private readonly List<GestureTouch> touches;

		[Token(Token = "0x4002552")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private readonly List<GameObject> availableShowTouches;

		[Token(Token = "0x4002553")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private readonly Dictionary<int, ShownTouch> shownTouches;

		[Token(Token = "0x4002554")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private readonly List<int> shownTouchesToRemove;

		[Token(Token = "0x4002555")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private readonly Dictionary<int, Vector2> previousTouchPositions;

		[Token(Token = "0x4002556")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private readonly List<Component> components;

		[Token(Token = "0x4002557")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private readonly HashSet<Type> componentTypesToDenyPassThrough;

		[Token(Token = "0x4002558")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private readonly HashSet<Type> componentTypesToIgnorePassThrough;

		[Token(Token = "0x4002559")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private readonly Collider2D[] hackResults;

		[Token(Token = "0x400255A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private readonly List<GestureTouch> previousTouches;

		[Token(Token = "0x400255B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private readonly List<GestureTouch> currentTouches;

		[Token(Token = "0x400255C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private readonly HashSet<GestureTouch> tempTouches;

		[Token(Token = "0x400255D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private float rotateAngle;

		[Token(Token = "0x400255E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		private float pinchScale;

		[Token(Token = "0x400255F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private GestureTouch rotatePinch1;

		[Token(Token = "0x4002560")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private GestureTouch rotatePinch2;

		[Token(Token = "0x4002561")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private DateTime lastMouseWheelTime;

		[Token(Token = "0x4002562")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static FingersScript singleton;

		[Token(Token = "0x4002563")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly List<RaycastResult> captureRaycastResultsTemp;

		[Token(Token = "0x4002564")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static readonly Comparison<RaycastResult> raycastResultCompare;

		[Token(Token = "0x17000669")]
		public ICollection<GestureTouch> Touches
		{
			[Token(Token = "0x60029E8")]
			[Address(RVA = "0x1730A18", Offset = "0x1730A18", VA = "0x1730A18")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700066A")]
		public Func<GameObject, bool?> CaptureGestureHandler
		{
			[Token(Token = "0x60029E9")]
			[Address(RVA = "0x1730A20", Offset = "0x1730A20", VA = "0x1730A20")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60029EA")]
			[Address(RVA = "0x1730A28", Offset = "0x1730A28", VA = "0x1730A28")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700066B")]
		public Func<int> VirtualTouchCountHandler
		{
			[Token(Token = "0x60029EB")]
			[Address(RVA = "0x1730A38", Offset = "0x1730A38", VA = "0x1730A38")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60029EC")]
			[Address(RVA = "0x1730A40", Offset = "0x1730A40", VA = "0x1730A40")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700066C")]
		public Func<int, GestureTouch> VirtualTouchObjectHandler
		{
			[Token(Token = "0x60029ED")]
			[Address(RVA = "0x1730A50", Offset = "0x1730A50", VA = "0x1730A50")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60029EE")]
			[Address(RVA = "0x1730A58", Offset = "0x1730A58", VA = "0x1730A58")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700066D")]
		public Action VirtualTouchUpdateHandler
		{
			[Token(Token = "0x60029EF")]
			[Address(RVA = "0x1730A68", Offset = "0x1730A68", VA = "0x1730A68")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60029F0")]
			[Address(RVA = "0x1730A70", Offset = "0x1730A70", VA = "0x1730A70")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700066E")]
		public Action VirtualTouchResetHandler
		{
			[Token(Token = "0x60029F1")]
			[Address(RVA = "0x1730A80", Offset = "0x1730A80", VA = "0x1730A80")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60029F2")]
			[Address(RVA = "0x1730A88", Offset = "0x1730A88", VA = "0x1730A88")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700066F")]
		public HashSet<Type> ComponentTypesToDenyPassThrough
		{
			[Token(Token = "0x60029F3")]
			[Address(RVA = "0x1730A98", Offset = "0x1730A98", VA = "0x1730A98")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000670")]
		public HashSet<Type> ComponentTypesToIgnorePassThrough
		{
			[Token(Token = "0x60029F4")]
			[Address(RVA = "0x1730AA0", Offset = "0x1730AA0", VA = "0x1730AA0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000671")]
		public ReadOnlyCollection<GestureTouch> PreviousTouches
		{
			[Token(Token = "0x60029F5")]
			[Address(RVA = "0x1730AA8", Offset = "0x1730AA8", VA = "0x1730AA8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000672")]
		public ReadOnlyCollection<GestureTouch> CurrentTouches
		{
			[Token(Token = "0x60029F6")]
			[Address(RVA = "0x1730AF8", Offset = "0x1730AF8", VA = "0x1730AF8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000673")]
		public ReadOnlyCollection<GestureRecognizer> Gestures
		{
			[Token(Token = "0x60029F7")]
			[Address(RVA = "0x1730B48", Offset = "0x1730B48", VA = "0x1730B48")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000674")]
		public static FingersScript Instance
		{
			[Token(Token = "0x60029F8")]
			[Address(RVA = "0x171AF14", Offset = "0x171AF14", VA = "0x171AF14")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000675")]
		public static bool HasInstance
		{
			[Token(Token = "0x60029F9")]
			[Address(RVA = "0x171B29C", Offset = "0x171B29C", VA = "0x171B29C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60029C1")]
		[Address(RVA = "0x172A6B4", Offset = "0x172A6B4", VA = "0x172A6B4")]
		[IteratorStateMachine(typeof(<MainThreadCallback>d__56))]
		private IEnumerator MainThreadCallback(float delay, Action action)
		{
			return null;
		}

		[Token(Token = "0x60029C2")]
		[Address(RVA = "0x172A738", Offset = "0x172A738", VA = "0x172A738")]
		private CaptureResult ShouldCaptureGesture(GameObject obj, out bool platformSpecificView)
		{
			return default(CaptureResult);
		}

		[Token(Token = "0x60029C3")]
		[Address(RVA = "0x172AC6C", Offset = "0x172AC6C", VA = "0x172AC6C")]
		private void PopulateGameObjectsForTouch(int pointerId, float x, float y)
		{
		}

		[Token(Token = "0x60029C4")]
		[Address(RVA = "0x172B630", Offset = "0x172B630", VA = "0x172B630")]
		private GestureTouch GestureTouchFromTouch(ref Touch t)
		{
			return default(GestureTouch);
		}

		[Token(Token = "0x60029C5")]
		[Address(RVA = "0x172B82C", Offset = "0x172B82C", VA = "0x172B82C")]
		private void FingersBeginTouch(ref GestureTouch g)
		{
		}

		[Token(Token = "0x60029C6")]
		[Address(RVA = "0x172BA7C", Offset = "0x172BA7C", VA = "0x172BA7C")]
		private void FingersContinueTouch(ref GestureTouch g)
		{
		}

		[Token(Token = "0x60029C7")]
		[Address(RVA = "0x172BBD4", Offset = "0x172BBD4", VA = "0x172BBD4")]
		private void FingersEndTouch(ref GestureTouch g, bool lost = false)
		{
		}

		[Token(Token = "0x60029C8")]
		[Address(RVA = "0x172BD50", Offset = "0x172BD50", VA = "0x172BD50")]
		private void FingersProcessTouch(ref GestureTouch g)
		{
		}

		[Token(Token = "0x60029C9")]
		[Address(RVA = "0x172BE84", Offset = "0x172BE84", VA = "0x172BE84")]
		private void AddMouseTouch(int index, int pointerId, float x, float y)
		{
		}

		[Token(Token = "0x60029CA")]
		[Address(RVA = "0x172C008", Offset = "0x172C008", VA = "0x172C008")]
		private void ProcessTouches()
		{
		}

		[Token(Token = "0x60029CB")]
		[Address(RVA = "0x172C0C0", Offset = "0x172C0C0", VA = "0x172C0C0")]
		private void ProcessVirtualTouches()
		{
		}

		[Token(Token = "0x60029CC")]
		[Address(RVA = "0x172C4D0", Offset = "0x172C4D0", VA = "0x172C4D0")]
		private void RotateAroundPoint(ref float rotX, ref float rotY, float anchorX, float anchorY, float angleRadians)
		{
		}

		[Token(Token = "0x60029CD")]
		[Address(RVA = "0x172C548", Offset = "0x172C548", VA = "0x172C548")]
		private void ProcessMouseButtons()
		{
		}

		[Token(Token = "0x60029CE")]
		[Address(RVA = "0x172C5E4", Offset = "0x172C5E4", VA = "0x172C5E4")]
		private void ProcessMouseWheel()
		{
		}

		[Token(Token = "0x60029CF")]
		[Address(RVA = "0x172CC88", Offset = "0x172CC88", VA = "0x172CC88")]
		private void ProcessLostTouches()
		{
		}

		[Token(Token = "0x60029D0")]
		[Address(RVA = "0x172D4CC", Offset = "0x172D4CC", VA = "0x172D4CC")]
		private bool GameObjectMatchesPlatformSpecificView(List<GameObject> list, GestureRecognizer r)
		{
			return default(bool);
		}

		[Token(Token = "0x60029D1")]
		[Address(RVA = "0x172D8F0", Offset = "0x172D8F0", VA = "0x172D8F0")]
		private ICollection<GestureTouch> FilterTouchesBegan(List<GestureTouch> touches, GestureRecognizer r)
		{
			return null;
		}

		[Token(Token = "0x60029D2")]
		[Address(RVA = "0x172DF48", Offset = "0x172DF48", VA = "0x172DF48")]
		private void CleanupPassThroughObjects()
		{
		}

		[Token(Token = "0x60029D3")]
		[Address(RVA = "0x172E09C", Offset = "0x172E09C", VA = "0x172E09C")]
		private void SetupDefaultPassThroughComponents()
		{
		}

		[Token(Token = "0x60029D4")]
		[Address(RVA = "0x172E2CC", Offset = "0x172E2CC", VA = "0x172E2CC")]
		private void SceneManagerSceneUnloaded(UnityEngine.SceneManagement.Scene scene)
		{
		}

		[Token(Token = "0x60029D5")]
		[Address(RVA = "0x172E87C", Offset = "0x172E87C", VA = "0x172E87C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60029D6")]
		[Address(RVA = "0x172ECD0", Offset = "0x172ECD0", VA = "0x172ECD0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60029D7")]
		[Address(RVA = "0x172EE04", Offset = "0x172EE04", VA = "0x172EE04")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60029D8")]
		[Address(RVA = "0x172EE54", Offset = "0x172EE54", VA = "0x172EE54")]
		private void Update()
		{
		}

		[Token(Token = "0x60029D9")]
		[Address(RVA = "0x172F718", Offset = "0x172F718", VA = "0x172F718")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x60029DA")]
		[Address(RVA = "0x172EE98", Offset = "0x172EE98", VA = "0x172EE98")]
		private void InternalUpdate()
		{
		}

		[Token(Token = "0x60029DB")]
		[Address(RVA = "0x172F75C", Offset = "0x172F75C", VA = "0x172F75C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60029DC")]
		[Address(RVA = "0x1730014", Offset = "0x1730014", VA = "0x1730014")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60029DD")]
		[Address(RVA = "0x17300E0", Offset = "0x17300E0", VA = "0x17300E0")]
		private static int RaycastResultCompare(RaycastResult r1, RaycastResult r2)
		{
			return default(int);
		}

		[Token(Token = "0x60029DE")]
		[Address(RVA = "0x1721580", Offset = "0x1721580", VA = "0x1721580")]
		public static GameObject GestureIntersectsObject(GestureRecognizer r, Camera camera, GameObject obj, GestureRecognizerComponentScriptBase.GestureObjectMode mode)
		{
			return null;
		}

		[Token(Token = "0x60029DF")]
		[Address(RVA = "0x17214CC", Offset = "0x17214CC", VA = "0x17214CC")]
		public static Camera GetCameraForGesture(GestureRecognizer r, Camera[] cameras)
		{
			return null;
		}

		[Token(Token = "0x60029E0")]
		[Address(RVA = "0x1720454", Offset = "0x1720454", VA = "0x1720454")]
		public static GameObject StartOrResetGesture(GestureRecognizer r, bool bringToFront, Camera[] cameras, GameObject obj, SpriteRenderer spriteRenderer, GestureRecognizerComponentScriptBase.GestureObjectMode mode, out Camera camera)
		{
			return null;
		}

		[Token(Token = "0x60029E1")]
		[Address(RVA = "0x171B12C", Offset = "0x171B12C", VA = "0x171B12C")]
		public bool AddGesture(GestureRecognizer gesture)
		{
			return default(bool);
		}

		[Token(Token = "0x60029E2")]
		[Address(RVA = "0x171B328", Offset = "0x171B328", VA = "0x171B328")]
		public bool RemoveGesture(GestureRecognizer gesture)
		{
			return default(bool);
		}

		[Token(Token = "0x60029E3")]
		[Address(RVA = "0x173026C", Offset = "0x173026C", VA = "0x173026C")]
		public bool AddMask(Collider2D collider, GestureRecognizer gesture)
		{
			return default(bool);
		}

		[Token(Token = "0x60029E4")]
		[Address(RVA = "0x1730648", Offset = "0x1730648", VA = "0x1730648")]
		public bool RemoveMask(Collider2D collider, GestureRecognizer gesture)
		{
			return default(bool);
		}

		[Token(Token = "0x60029E5")]
		[Address(RVA = "0x172E2F4", Offset = "0x172E2F4", VA = "0x172E2F4")]
		public void ResetState(bool clearGestures)
		{
		}

		[Token(Token = "0x60029E6")]
		[Address(RVA = "0x1730844", Offset = "0x1730844", VA = "0x1730844")]
		public static Rect RectTransformToScreenSpace(RectTransform transform)
		{
			return default(Rect);
		}

		[Token(Token = "0x60029E7")]
		[Address(RVA = "0x1730900", Offset = "0x1730900", VA = "0x1730900")]
		public GestureTouch GestureTouchFromVirtualTouch(int touchId, Vector2 touchPosition, UnityEngine.TouchPhase touchPhase, float touchPressure = 1f)
		{
			return default(GestureTouch);
		}

		[Token(Token = "0x60029FA")]
		[Address(RVA = "0x1730B98", Offset = "0x1730B98", VA = "0x1730B98")]
		public FingersScript()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000809")]
	public class FakeTouch
	{
		[Token(Token = "0x400257D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[Tooltip("Touch id")]
		public int Id;

		[Token(Token = "0x400257E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[Tooltip("Screen position")]
		public Vector2 ScreenPosition;

		[Token(Token = "0x400257F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[Tooltip("Whether the screen position is a percentage (0 to 1) or absolute pixel coordinate")]
		public bool ScreenPositionIsPercentage;

		[Token(Token = "0x4002580")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Tooltip("Time in seconds")]
		public float Time;

		[Token(Token = "0x4002581")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[Tooltip("Touch phase")]
		public TouchPhase Phase;

		[Token(Token = "0x6002A0E")]
		[Address(RVA = "0x173162C", Offset = "0x173162C", VA = "0x173162C")]
		public FakeTouch()
		{
		}
	}
	[Token(Token = "0x200080A")]
	public static class DeviceInfo
	{
		[Token(Token = "0x4002582")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static float pixelsPerInch;

		[Token(Token = "0x4002583")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static float unitMultiplier;

		[Token(Token = "0x4002584")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static float oneOverUnitMultiplier;

		[Token(Token = "0x1700067C")]
		public static float PixelsPerInch
		{
			[Token(Token = "0x6002A13")]
			[Address(RVA = "0x173170C", Offset = "0x173170C", VA = "0x173170C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002A14")]
			[Address(RVA = "0x1731754", Offset = "0x1731754", VA = "0x1731754")]
			set
			{
			}
		}

		[Token(Token = "0x1700067D")]
		public static float UnitMultiplier
		{
			[Token(Token = "0x6002A15")]
			[Address(RVA = "0x17317A8", Offset = "0x17317A8", VA = "0x17317A8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002A16")]
			[Address(RVA = "0x17317F0", Offset = "0x17317F0", VA = "0x17317F0")]
			set
			{
			}
		}

		[Token(Token = "0x6002A0F")]
		[Address(RVA = "0x1731644", Offset = "0x1731644", VA = "0x1731644")]
		public static float CentimetersToInches(float centimeters)
		{
			return default(float);
		}

		[Token(Token = "0x6002A10")]
		[Address(RVA = "0x1731654", Offset = "0x1731654", VA = "0x1731654")]
		public static float InchesToCentimeters(float inches)
		{
			return default(float);
		}

		[Token(Token = "0x6002A11")]
		[Address(RVA = "0x1731664", Offset = "0x1731664", VA = "0x1731664")]
		public static float PixelsToUnits(float pixels)
		{
			return default(float);
		}

		[Token(Token = "0x6002A12")]
		[Address(RVA = "0x17316BC", Offset = "0x17316BC", VA = "0x17316BC")]
		public static float UnitsToPixels(float units)
		{
			return default(float);
		}
	}
	[Token(Token = "0x200080B")]
	public enum GestureRecognizerState
	{
		[Token(Token = "0x4002586")]
		Possible = 1,
		[Token(Token = "0x4002587")]
		Began = 2,
		[Token(Token = "0x4002588")]
		Executing = 4,
		[Token(Token = "0x4002589")]
		Ended = 8,
		[Token(Token = "0x400258A")]
		EndPending = 0x10,
		[Token(Token = "0x400258B")]
		Failed = 0x20
	}
	[Token(Token = "0x200080C")]
	public enum TouchPhase
	{
		[Token(Token = "0x400258D")]
		Unknown,
		[Token(Token = "0x400258E")]
		Began,
		[Token(Token = "0x400258F")]
		Stationary,
		[Token(Token = "0x4002590")]
		Moved,
		[Token(Token = "0x4002591")]
		Ended,
		[Token(Token = "0x4002592")]
		Cancelled
	}
	[Token(Token = "0x200080D")]
	public struct GestureTouch : IComparable<GestureTouch>
	{
		[Token(Token = "0x4002593")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly int id;

		[Token(Token = "0x4002594")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private readonly float previousX;

		[Token(Token = "0x4002595")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private readonly float previousY;

		[Token(Token = "0x4002596")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private readonly float pressure;

		[Token(Token = "0x4002597")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly float screenX;

		[Token(Token = "0x4002598")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private readonly float screenY;

		[Token(Token = "0x4002599")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly object platformSpecificTouch;

		[Token(Token = "0x400259A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly TouchPhase touchPhase;

		[Token(Token = "0x1700067E")]
		public int Id
		{
			[Token(Token = "0x6002A1B")]
			[Address(RVA = "0x173194C", Offset = "0x173194C", VA = "0x173194C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700067F")]
		public float ScreenX
		{
			[Token(Token = "0x6002A1C")]
			[Address(RVA = "0x1731954", Offset = "0x1731954", VA = "0x1731954")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000680")]
		public float X
		{
			[Token(Token = "0x6002A1D")]
			[Address(RVA = "0x173195C", Offset = "0x173195C", VA = "0x173195C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000681")]
		public float ScreenY
		{
			[Token(Token = "0x6002A1E")]
			[Address(RVA = "0x1731964", Offset = "0x1731964", VA = "0x1731964")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000682")]
		public float Y
		{
			[Token(Token = "0x6002A1F")]
			[Address(RVA = "0x173196C", Offset = "0x173196C", VA = "0x173196C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000683")]
		public float PreviousX
		{
			[Token(Token = "0x6002A20")]
			[Address(RVA = "0x1731974", Offset = "0x1731974", VA = "0x1731974")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000684")]
		public float PreviousY
		{
			[Token(Token = "0x6002A21")]
			[Address(RVA = "0x173197C", Offset = "0x173197C", VA = "0x173197C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000685")]
		public float Pressure
		{
			[Token(Token = "0x6002A22")]
			[Address(RVA = "0x1731984", Offset = "0x1731984", VA = "0x1731984")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000686")]
		public float DeltaX
		{
			[Token(Token = "0x6002A23")]
			[Address(RVA = "0x173198C", Offset = "0x173198C", VA = "0x173198C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000687")]
		public float DeltaY
		{
			[Token(Token = "0x6002A24")]
			[Address(RVA = "0x173199C", Offset = "0x173199C", VA = "0x173199C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000688")]
		public object PlatformSpecificTouch
		{
			[Token(Token = "0x6002A25")]
			[Address(RVA = "0x17319AC", Offset = "0x17319AC", VA = "0x17319AC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000689")]
		public TouchPhase TouchPhase
		{
			[Token(Token = "0x6002A26")]
			[Address(RVA = "0x17319B4", Offset = "0x17319B4", VA = "0x17319B4")]
			get
			{
				return default(TouchPhase);
			}
		}

		[Token(Token = "0x6002A17")]
		[Address(RVA = "0x1731884", Offset = "0x1731884", VA = "0x1731884")]
		public GestureTouch(int platformSpecificId, float screenX, float screenY, float previousX, float previousY, float pressure = 1f, [Optional] object platformSpecificTouch, TouchPhase touchPhase = TouchPhase.Unknown)
		{
		}

		[Token(Token = "0x6002A18")]
		[Address(RVA = "0x17318C0", Offset = "0x17318C0", VA = "0x17318C0", Slot = "4")]
		public int CompareTo(GestureTouch other)
		{
			return default(int);
		}

		[Token(Token = "0x6002A19")]
		[Address(RVA = "0x17318CC", Offset = "0x17318CC", VA = "0x17318CC", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6002A1A")]
		[Address(RVA = "0x17318D4", Offset = "0x17318D4", VA = "0x17318D4", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200080E")]
	public delegate void GestureRecognizerStateUpdatedDelegate(GestureRecognizer gesture);
	[Token(Token = "0x200080F")]
	public delegate void GestureRecognizerUpdated(GestureRecognizer gesture, ICollection<GestureTouch> touches);
	[Token(Token = "0x2000810")]
	public class GestureVelocityTracker
	{
		[Token(Token = "0x2000811")]
		private struct VelocityHistory
		{
			[Token(Token = "0x40025A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float VelocityX;

			[Token(Token = "0x40025A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public float VelocityY;

			[Token(Token = "0x40025A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public float Seconds;
		}

		[Token(Token = "0x400259B")]
		private const int maxHistory = 8;

		[Token(Token = "0x400259C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly Queue<VelocityHistory> history;

		[Token(Token = "0x400259D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly Stopwatch timer;

		[Token(Token = "0x400259E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float previousX;

		[Token(Token = "0x400259F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float previousY;

		[Token(Token = "0x1700068A")]
		public float ElapsedSeconds
		{
			[Token(Token = "0x6002A34")]
			[Address(RVA = "0x1732080", Offset = "0x1732080", VA = "0x1732080")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700068B")]
		public float VelocityX
		{
			[Token(Token = "0x6002A35")]
			[Address(RVA = "0x17320B8", Offset = "0x17320B8", VA = "0x17320B8")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002A36")]
			[Address(RVA = "0x17320C0", Offset = "0x17320C0", VA = "0x17320C0")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700068C")]
		public float VelocityY
		{
			[Token(Token = "0x6002A37")]
			[Address(RVA = "0x17320C8", Offset = "0x17320C8", VA = "0x17320C8")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002A38")]
			[Address(RVA = "0x17320D0", Offset = "0x17320D0", VA = "0x17320D0")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700068D")]
		public float Speed
		{
			[Token(Token = "0x6002A39")]
			[Address(RVA = "0x17320D8", Offset = "0x17320D8", VA = "0x17320D8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6002A2F")]
		[Address(RVA = "0x1731CC0", Offset = "0x1731CC0", VA = "0x1731CC0")]
		private void AddItem(float velocityX, float velocityY, float elapsed)
		{
		}

		[Token(Token = "0x6002A30")]
		[Address(RVA = "0x1731F88", Offset = "0x1731F88", VA = "0x1731F88")]
		public void Reset()
		{
		}

		[Token(Token = "0x6002A31")]
		[Address(RVA = "0x1731FEC", Offset = "0x1731FEC", VA = "0x1731FEC")]
		public void Restart()
		{
		}

		[Token(Token = "0x6002A32")]
		[Address(RVA = "0x1731FFC", Offset = "0x1731FFC", VA = "0x1731FFC")]
		public void Restart(float previousX, float previousY)
		{
		}

		[Token(Token = "0x6002A33")]
		[Address(RVA = "0x1732024", Offset = "0x1732024", VA = "0x1732024")]
		public void Update(float x, float y)
		{
		}

		[Token(Token = "0x6002A3A")]
		[Address(RVA = "0x1732144", Offset = "0x1732144", VA = "0x1732144")]
		public GestureVelocityTracker()
		{
		}
	}
	[Token(Token = "0x2000812")]
	public class GestureRecognizer : IDisposable
	{
		[Token(Token = "0x2000813")]
		public delegate void CallbackMainThreadDelegate(float delay, Action callback);

		[Token(Token = "0x40025A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly GestureRecognizer allGesturesReference;

		[Token(Token = "0x40025A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private GestureRecognizerState state;

		[Token(Token = "0x40025A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly List<GestureTouch> currentTrackedTouches;

		[Token(Token = "0x40025A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly ReadOnlyCollection<GestureTouch> currentTrackedTouchesReadOnly;

		[Token(Token = "0x40025A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly HashSet<GestureRecognizer> requireGestureRecognizersToFail;

		[Token(Token = "0x40025AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly HashSet<GestureRecognizer> requireGestureRecognizersToFailThatHaveFailed;

		[Token(Token = "0x40025AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly HashSet<GestureRecognizer> failGestures;

		[Token(Token = "0x40025AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private readonly List<GestureRecognizer> simultaneousGestures;

		[Token(Token = "0x40025AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private readonly GestureVelocityTracker velocityTracker;

		[Token(Token = "0x40025AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private readonly List<KeyValuePair<float, float>> touchStartLocations;

		[Token(Token = "0x40025AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private readonly HashSet<int> ignoreTouchIds;

		[Token(Token = "0x40025B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private readonly List<GestureTouch> tempTouches;

		[Token(Token = "0x40025B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private int minimumNumberOfTouchesToTrack;

		[Token(Token = "0x40025B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private int maximumNumberOfTouchesToTrack;

		[Token(Token = "0x40025B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool justFailed;

		[Token(Token = "0x40025B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		private bool justEnded;

		[Token(Token = "0x40025B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x72")]
		private bool isRestarting;

		[Token(Token = "0x40025B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private int lastTrackTouchCount;

		[Token(Token = "0x40025B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private bool enabled;

		[Token(Token = "0x40025B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
		private bool inReset;

		[Token(Token = "0x40025BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal static readonly HashSet<GestureRecognizer> ActiveGestures;

		[Token(Token = "0x40025CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static CallbackMainThreadDelegate MainThreadCallback;

		[Token(Token = "0x1700068E")]
		protected float PrevFocusX
		{
			[Token(Token = "0x6002A3B")]
			[Address(RVA = "0x1732208", Offset = "0x1732208", VA = "0x1732208")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002A3C")]
			[Address(RVA = "0x1732210", Offset = "0x1732210", VA = "0x1732210")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700068F")]
		protected float PrevFocusY
		{
			[Token(Token = "0x6002A3D")]
			[Address(RVA = "0x1732218", Offset = "0x1732218", VA = "0x1732218")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002A3E")]
			[Address(RVA = "0x1732220", Offset = "0x1732220", VA = "0x1732220")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000690")]
		public bool Enabled
		{
			[Token(Token = "0x6002A6F")]
			[Address(RVA = "0x1737090", Offset = "0x1737090", VA = "0x1737090")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002A70")]
			[Address(RVA = "0x1737098", Offset = "0x1737098", VA = "0x1737098")]
			set
			{
			}
		}

		[Token(Token = "0x17000691")]
		public GestureRecognizerState State
		{
			[Token(Token = "0x6002A71")]
			[Address(RVA = "0x17370AC", Offset = "0x17370AC", VA = "0x17370AC")]
			get
			{
				return default(GestureRecognizerState);
			}
		}

		[Token(Token = "0x17000692")]
		public ReadOnlyCollection<GestureTouch> CurrentTrackedTouches
		{
			[Token(Token = "0x6002A76")]
			[Address(RVA = "0x1737324", Offset = "0x1737324", VA = "0x1737324")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000693")]
		public float FocusX
		{
			[Token(Token = "0x6002A77")]
			[Address(RVA = "0x173732C", Offset = "0x173732C", VA = "0x173732C")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002A78")]
			[Address(RVA = "0x1737334", Offset = "0x1737334", VA = "0x1737334")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000694")]
		public float FocusY
		{
			[Token(Token = "0x6002A79")]
			[Address(RVA = "0x173733C", Offset = "0x173733C", VA = "0x173733C")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002A7A")]
			[Address(RVA = "0x1737344", Offset = "0x1737344", VA = "0x1737344")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000695")]
		public float StartFocusX
		{
			[Token(Token = "0x6002A7B")]
			[Address(RVA = "0x173734C", Offset = "0x173734C", VA = "0x173734C")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002A7C")]
			[Address(RVA = "0x1737354", Offset = "0x1737354", VA = "0x1737354")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000696")]
		public float StartFocusY
		{
			[Token(Token = "0x6002A7D")]
			[Address(RVA = "0x173735C", Offset = "0x173735C", VA = "0x173735C")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002A7E")]
			[Address(RVA = "0x1737364", Offset = "0x1737364", VA = "0x1737364")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000697")]
		public float DeltaX
		{
			[Token(Token = "0x6002A7F")]
			[Address(RVA = "0x173736C", Offset = "0x173736C", VA = "0x173736C")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002A80")]
			[Address(RVA = "0x1737374", Offset = "0x1737374", VA = "0x1737374")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000698")]
		public float DeltaY
		{
			[Token(Token = "0x6002A81")]
			[Address(RVA = "0x173737C", Offset = "0x173737C", VA = "0x173737C")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002A82")]
			[Address(RVA = "0x1737384", Offset = "0x1737384", VA = "0x1737384")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000699")]
		public float DistanceX
		{
			[Token(Token = "0x6002A83")]
			[Address(RVA = "0x173738C", Offset = "0x173738C", VA = "0x173738C")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002A84")]
			[Address(RVA = "0x1737394", Offset = "0x1737394", VA = "0x1737394")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700069A")]
		public float DistanceY
		{
			[Token(Token = "0x6002A85")]
			[Address(RVA = "0x173739C", Offset = "0x173739C", VA = "0x173739C")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002A86")]
			[Address(RVA = "0x17373A4", Offset = "0x17373A4", VA = "0x17373A4")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700069B")]
		public float VelocityX
		{
			[Token(Token = "0x6002A87")]
			[Address(RVA = "0x17373AC", Offset = "0x17373AC", VA = "0x17373AC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700069C")]
		public float VelocityY
		{
			[Token(Token = "0x6002A88")]
			[Address(RVA = "0x17373C8", Offset = "0x17373C8", VA = "0x17373C8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700069D")]
		public float Speed
		{
			[Token(Token = "0x6002A89")]
			[Address(RVA = "0x17373E4", Offset = "0x17373E4", VA = "0x17373E4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700069E")]
		public float Pressure
		{
			[Token(Token = "0x6002A8A")]
			[Address(RVA = "0x17373FC", Offset = "0x17373FC", VA = "0x17373FC")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002A8B")]
			[Address(RVA = "0x1737404", Offset = "0x1737404", VA = "0x1737404")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700069F")]
		public object PlatformSpecificView
		{
			[Token(Token = "0x6002A8C")]
			[Address(RVA = "0x173740C", Offset = "0x173740C", VA = "0x173740C")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6002A8D")]
			[Address(RVA = "0x1737414", Offset = "0x1737414", VA = "0x1737414")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170006A0")]
		public float PlatformSpecificViewScale
		{
			[Token(Token = "0x6002A8E")]
			[Address(RVA = "0x173741C", Offset = "0x173741C", VA = "0x173741C")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002A8F")]
			[Address(RVA = "0x1737424", Offset = "0x1737424", VA = "0x1737424")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170006A1")]
		public object CustomData
		{
			[Token(Token = "0x6002A90")]
			[Address(RVA = "0x173742C", Offset = "0x173742C", VA = "0x173742C")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6002A91")]
			[Address(RVA = "0x1737434", Offset = "0x1737434", VA = "0x1737434")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170006A2")]
		public GestureRecognizer RequireGestureRecognizerToFail
		{
			[Token(Token = "0x6002A92")]
			[Address(RVA = "0x173743C", Offset = "0x173743C", VA = "0x173743C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002A93")]
			[Address(RVA = "0x173756C", Offset = "0x173756C", VA = "0x173756C")]
			set
			{
			}
		}

		[Token(Token = "0x170006A3")]
		public IEnumerable<GestureRecognizer> RequireGestureRecognizersToFail
		{
			[Token(Token = "0x6002A94")]
			[Address(RVA = "0x173774C", Offset = "0x173774C", VA = "0x173774C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170006A4")]
		public int MinimumNumberOfTouchesToTrack
		{
			[Token(Token = "0x6002A95")]
			[Address(RVA = "0x1737754", Offset = "0x1737754", VA = "0x1737754")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002A96")]
			[Address(RVA = "0x173775C", Offset = "0x173775C", VA = "0x173775C")]
			set
			{
			}
		}

		[Token(Token = "0x170006A5")]
		public int MaximumNumberOfTouchesToTrack
		{
			[Token(Token = "0x6002A97")]
			[Address(RVA = "0x173778C", Offset = "0x173778C", VA = "0x173778C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002A98")]
			[Address(RVA = "0x1737794", Offset = "0x1737794", VA = "0x1737794")]
			set
			{
			}
		}

		[Token(Token = "0x170006A6")]
		public bool TrackedTouchCountIsWithinRange
		{
			[Token(Token = "0x6002A99")]
			[Address(RVA = "0x1735FF8", Offset = "0x1735FF8", VA = "0x1735FF8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170006A7")]
		public bool ClearTrackedTouchesOnEndOrFail
		{
			[Token(Token = "0x6002A9A")]
			[Address(RVA = "0x17377C4", Offset = "0x17377C4", VA = "0x17377C4")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002A9B")]
			[Address(RVA = "0x17377CC", Offset = "0x17377CC", VA = "0x17377CC")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170006A8")]
		public bool AllowSimultaneousExecutionIfPlatformSpecificViewsAreDifferent
		{
			[Token(Token = "0x6002A9C")]
			[Address(RVA = "0x17377D8", Offset = "0x17377D8", VA = "0x17377D8")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002A9D")]
			[Address(RVA = "0x17377E0", Offset = "0x17377E0", VA = "0x17377E0")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170006A9")]
		public virtual bool ResetOnEnd
		{
			[Token(Token = "0x6002A9E")]
			[Address(RVA = "0x17377EC", Offset = "0x17377EC", VA = "0x17377EC", Slot = "11")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170006AA")]
		public bool IsRestarting
		{
			[Token(Token = "0x6002A9F")]
			[Address(RVA = "0x17377F4", Offset = "0x17377F4", VA = "0x17377F4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170006AB")]
		public bool ReceivedAdditionalTouches
		{
			[Token(Token = "0x6002AA0")]
			[Address(RVA = "0x17377FC", Offset = "0x17377FC", VA = "0x17377FC")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002AA1")]
			[Address(RVA = "0x1737804", Offset = "0x1737804", VA = "0x1737804")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1400009A")]
		[Obsolete("Please use StateChanged as this property will be removed in a future version.")]
		public event GestureRecognizerUpdated Updated
		{
			[Token(Token = "0x6002A72")]
			[Address(RVA = "0x17370B4", Offset = "0x17370B4", VA = "0x17370B4")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6002A73")]
			[Address(RVA = "0x1737150", Offset = "0x1737150", VA = "0x1737150")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400009B")]
		public event GestureRecognizerStateUpdatedDelegate StateUpdated
		{
			[Token(Token = "0x6002A74")]
			[Address(RVA = "0x17371EC", Offset = "0x17371EC", VA = "0x17371EC")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6002A75")]
			[Address(RVA = "0x1737288", Offset = "0x1737288", VA = "0x1737288")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6002A3F")]
		[Address(RVA = "0x1732228", Offset = "0x1732228", VA = "0x1732228")]
		private void UpdateTouchState(bool executing)
		{
		}

		[Token(Token = "0x6002A40")]
		[Address(RVA = "0x17322B4", Offset = "0x17322B4", VA = "0x17322B4")]
		private void EndGesture()
		{
		}

		[Token(Token = "0x6002A41")]
		[Address(RVA = "0x17327AC", Offset = "0x17327AC", VA = "0x17327AC")]
		private void RemoveFromActiveGestures()
		{
		}

		[Token(Token = "0x6002A42")]
		[Address(RVA = "0x1732A20", Offset = "0x1732A20", VA = "0x1732A20")]
		private bool CanExecuteGestureWithOtherGesturesOrFail(GestureRecognizerState value)
		{
			return default(bool);
		}

		[Token(Token = "0x6002A43")]
		[Address(RVA = "0x173282C", Offset = "0x173282C", VA = "0x173282C")]
		private void FailGestureNow()
		{
		}

		[Token(Token = "0x6002A44")]
		[Address(RVA = "0x1732D9C", Offset = "0x1732D9C", VA = "0x1732D9C")]
		private bool TouchesIntersect(IEnumerable<GestureTouch> collection, List<GestureTouch> list)
		{
			return default(bool);
		}

		[Token(Token = "0x6002A45")]
		[Address(RVA = "0x1733124", Offset = "0x1733124", VA = "0x1733124")]
		private void UpdateTrackedTouches(IEnumerable<GestureTouch> touches)
		{
		}

		[Token(Token = "0x6002A46")]
		[Address(RVA = "0x173357C", Offset = "0x173357C", VA = "0x173357C")]
		private int TrackTouchesInternal(IEnumerable<GestureTouch> touches)
		{
			return default(int);
		}

		[Token(Token = "0x6002A47")]
		[Address(RVA = "0x1733A60", Offset = "0x1733A60", VA = "0x1733A60")]
		private int StopTrackingTouches(ICollection<GestureTouch> touches)
		{
			return default(int);
		}

		[Token(Token = "0x6002A48")]
		[Address(RVA = "0x1733E74", Offset = "0x1733E74", VA = "0x1733E74")]
		private bool RequiredGesturesToFailAllowsEndPending()
		{
			return default(bool);
		}

		[Token(Token = "0x6002A49")]
		[Address(RVA = "0x1732D48", Offset = "0x1732D48", VA = "0x1732D48")]
		private bool HasAllRequiredFailGesturesToEndFromEndPending()
		{
			return default(bool);
		}

		[Token(Token = "0x6002A4A")]
		[Address(RVA = "0x1732498", Offset = "0x1732498", VA = "0x1732498")]
		private void ResetInternal(bool clearCurrentTrackedTouches)
		{
		}

		[Token(Token = "0x6002A4B")]
		[Address(RVA = "0x17340AC", Offset = "0x17340AC", VA = "0x17340AC")]
		private static void RunActionAfterDelayInternal(float seconds, Action action)
		{
		}

		[Token(Token = "0x6002A4C")]
		[Address(RVA = "0x1734144", Offset = "0x1734144", VA = "0x1734144")]
		protected bool IgnoreTouch(int id)
		{
			return default(bool);
		}

		[Token(Token = "0x6002A4D")]
		[Address(RVA = "0x173419C", Offset = "0x173419C", VA = "0x173419C")]
		protected void TrackCurrentTrackedTouchesStartLocations()
		{
		}

		[Token(Token = "0x6002A4E")]
		[Address(RVA = "0x17344DC", Offset = "0x17344DC", VA = "0x17344DC")]
		protected bool CalculateFocus(ICollection<GestureTouch> touches)
		{
			return default(bool);
		}

		[Token(Token = "0x6002A4F")]
		[Address(RVA = "0x17344E4", Offset = "0x17344E4", VA = "0x17344E4")]
		protected bool CalculateFocus(ICollection<GestureTouch> touches, bool resetFocus)
		{
			return default(bool);
		}

		[Token(Token = "0x6002A50")]
		[Address(RVA = "0x173491C", Offset = "0x173491C", VA = "0x173491C", Slot = "5")]
		protected virtual void StateChanged()
		{
		}

		[Token(Token = "0x6002A51")]
		[Address(RVA = "0x17325FC", Offset = "0x17325FC", VA = "0x17325FC")]
		protected bool SetState(GestureRecognizerState value)
		{
			return default(bool);
		}

		[Token(Token = "0x6002A52")]
		[Address(RVA = "0x17349D0", Offset = "0x17349D0", VA = "0x17349D0", Slot = "6")]
		protected virtual void TouchesBegan(IEnumerable<GestureTouch> touches)
		{
		}

		[Token(Token = "0x6002A53")]
		[Address(RVA = "0x17349D4", Offset = "0x17349D4", VA = "0x17349D4", Slot = "7")]
		protected virtual void TouchesMoved()
		{
		}

		[Token(Token = "0x6002A54")]
		[Address(RVA = "0x17349D8", Offset = "0x17349D8", VA = "0x17349D8", Slot = "8")]
		protected virtual void TouchesEnded()
		{
		}

		[Token(Token = "0x6002A55")]
		[Address(RVA = "0x17349DC", Offset = "0x17349DC", VA = "0x17349DC")]
		protected int TrackTouches(IEnumerable<GestureTouch> touches)
		{
			return default(int);
		}

		[Token(Token = "0x6002A56")]
		[Address(RVA = "0x17349E0", Offset = "0x17349E0", VA = "0x17349E0")]
		public GestureRecognizer()
		{
		}

		[Token(Token = "0x6002A57")]
		[Address(RVA = "0x1734CF4", Offset = "0x1734CF4", VA = "0x1734CF4")]
		public bool Simulate(params float[] xy)
		{
			return default(bool);
		}

		[Token(Token = "0x6002A58")]
		[Address(RVA = "0x1735808", Offset = "0x1735808", VA = "0x1735808", Slot = "1")]
		~GestureRecognizer()
		{
		}

		[Token(Token = "0x6002A59")]
		[Address(RVA = "0x17358A4", Offset = "0x17358A4", VA = "0x17358A4", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6002A5A")]
		[Address(RVA = "0x1735B0C", Offset = "0x1735B0C", VA = "0x1735B0C", Slot = "9")]
		public virtual void Reset()
		{
		}

		[Token(Token = "0x6002A5B")]
		[Address(RVA = "0x1735B14", Offset = "0x1735B14", VA = "0x1735B14")]
		public bool BeginGestureRestart()
		{
			return default(bool);
		}

		[Token(Token = "0x6002A5C")]
		[Address(RVA = "0x1735B38", Offset = "0x1735B38", VA = "0x1735B38")]
		public bool EndGestureRestart(ICollection<GestureTouch> touches)
		{
			return default(bool);
		}

		[Token(Token = "0x6002A5D")]
		[Address(RVA = "0x17350D8", Offset = "0x17350D8", VA = "0x17350D8")]
		public void ProcessTouchesBegan(ICollection<GestureTouch> touches)
		{
		}

		[Token(Token = "0x6002A5E")]
		[Address(RVA = "0x1735220", Offset = "0x1735220", VA = "0x1735220")]
		public void ProcessTouchesMoved(ICollection<GestureTouch> touches)
		{
		}

		[Token(Token = "0x6002A5F")]
		[Address(RVA = "0x1735378", Offset = "0x1735378", VA = "0x1735378")]
		public void ProcessTouchesEnded(ICollection<GestureTouch> touches)
		{
		}

		[Token(Token = "0x6002A60")]
		[Address(RVA = "0x1736060", Offset = "0x1736060", VA = "0x1736060")]
		public void ProcessTouchesCancelled(ICollection<GestureTouch> touches)
		{
		}

		[Token(Token = "0x6002A61")]
		[Address(RVA = "0x17364B8", Offset = "0x17364B8", VA = "0x17364B8")]
		public bool AreTrackedTouchesWithinDistance(float thresholdUnits)
		{
			return default(bool);
		}

		[Token(Token = "0x6002A62")]
		[Address(RVA = "0x173687C", Offset = "0x173687C", VA = "0x173687C")]
		public bool PointsAreWithinDistance(float x1, float y1, float x2, float y2, float d)
		{
			return default(bool);
		}

		[Token(Token = "0x6002A63")]
		[Address(RVA = "0x17368A0", Offset = "0x17368A0", VA = "0x17368A0")]
		public float DistanceBetweenPoints(float x1, float y1, float x2, float y2)
		{
			return default(float);
		}

		[Token(Token = "0x6002A64")]
		[Address(RVA = "0x1736968", Offset = "0x1736968", VA = "0x1736968")]
		public float Distance(float xVector, float yVector)
		{
			return default(float);
		}

		[Token(Token = "0x6002A65")]
		[Address(RVA = "0x1736A18", Offset = "0x1736A18", VA = "0x1736A18")]
		public float Distance(float length)
		{
			return default(float);
		}

		[Token(Token = "0x6002A66")]
		[Address(RVA = "0x1736AB8", Offset = "0x1736AB8", VA = "0x1736AB8", Slot = "10")]
		public virtual void Dispose()
		{
		}

		[Token(Token = "0x6002A67")]
		[Address(RVA = "0x1736D88", Offset = "0x1736D88", VA = "0x1736D88")]
		public void AllowSimultaneousExecution(GestureRecognizer other)
		{
		}

		[Token(Token = "0x6002A68")]
		[Address(RVA = "0x1736F18", Offset = "0x1736F18", VA = "0x1736F18")]
		public void AllowSimultaneousExecutionWithAllGestures()
		{
		}

		[Token(Token = "0x6002A69")]
		[Address(RVA = "0x1736CA8", Offset = "0x1736CA8", VA = "0x1736CA8")]
		public void DisallowSimultaneousExecution(GestureRecognizer other)
		{
		}

		[Token(Token = "0x6002A6A")]
		[Address(RVA = "0x1736F20", Offset = "0x1736F20", VA = "0x1736F20")]
		public void DisallowSimultaneousExecutionWithAllGestures()
		{
		}

		[Token(Token = "0x6002A6B")]
		[Address(RVA = "0x1736F28", Offset = "0x1736F28", VA = "0x1736F28")]
		public void AddRequiredGestureRecognizerToFail(GestureRecognizer gesture)
		{
		}

		[Token(Token = "0x6002A6C")]
		[Address(RVA = "0x1736FA4", Offset = "0x1736FA4", VA = "0x1736FA4")]
		public void RemoveRequiredGestureRecognizerToFail(GestureRecognizer gesture)
		{
		}

		[Token(Token = "0x6002A6D")]
		[Address(RVA = "0x173496C", Offset = "0x173496C", VA = "0x173496C")]
		public static void RunActionAfterDelay(float seconds, Action action)
		{
		}

		[Token(Token = "0x6002A6E")]
		[Address(RVA = "0x1737020", Offset = "0x1737020", VA = "0x1737020")]
		public static int NumberOfGesturesInProgress()
		{
			return default(int);
		}
	}
	[Token(Token = "0x2000814")]
	public static class GestureLogger
	{
		[Token(Token = "0x6002AA7")]
		[Address(RVA = "0x1737A54", Offset = "0x1737A54", VA = "0x1737A54")]
		public static void Log(this GestureRecognizer gesture, string text, params object[] args)
		{
		}
	}
	[Token(Token = "0x2000815")]
	public class ImageGestureImage
	{
		[Token(Token = "0x40025CE")]
		private const ulong m1 = 6148914691236517205uL;

		[Token(Token = "0x40025CF")]
		private const ulong m2 = 3689348814741910323uL;

		[Token(Token = "0x40025D0")]
		private const ulong m4 = 1085102592571150095uL;

		[Token(Token = "0x40025D1")]
		private const ulong m8 = 71777214294589695uL;

		[Token(Token = "0x40025D2")]
		private const ulong m16 = 281470681808895uL;

		[Token(Token = "0x40025D3")]
		private const ulong m32 = 4294967295uL;

		[Token(Token = "0x40025D4")]
		private const ulong hff = ulong.MaxValue;

		[Token(Token = "0x40025D5")]
		private const ulong h01 = 72340172838076673uL;

		[Token(Token = "0x170006AC")]
		public int Width
		{
			[Token(Token = "0x6002AB7")]
			[Address(RVA = "0x1738990", Offset = "0x1738990", VA = "0x1738990")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002AB8")]
			[Address(RVA = "0x1738998", Offset = "0x1738998", VA = "0x1738998")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x170006AD")]
		public int Height
		{
			[Token(Token = "0x6002AB9")]
			[Address(RVA = "0x17389A0", Offset = "0x17389A0", VA = "0x17389A0")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002ABA")]
			[Address(RVA = "0x17389A8", Offset = "0x17389A8", VA = "0x17389A8")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x170006AE")]
		public int Size
		{
			[Token(Token = "0x6002ABB")]
			[Address(RVA = "0x17389B0", Offset = "0x17389B0", VA = "0x17389B0")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002ABC")]
			[Address(RVA = "0x17389B8", Offset = "0x17389B8", VA = "0x17389B8")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x170006AF")]
		public ulong[] Rows
		{
			[Token(Token = "0x6002ABD")]
			[Address(RVA = "0x17389C0", Offset = "0x17389C0", VA = "0x17389C0")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6002ABE")]
			[Address(RVA = "0x17389C8", Offset = "0x17389C8", VA = "0x17389C8")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x170006B0")]
		public byte[] Pixels
		{
			[Token(Token = "0x6002ABF")]
			[Address(RVA = "0x17389D0", Offset = "0x17389D0", VA = "0x17389D0")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6002AC0")]
			[Address(RVA = "0x17389D8", Offset = "0x17389D8", VA = "0x17389D8")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x170006B1")]
		public float SimilarityPadding
		{
			[Token(Token = "0x6002AC1")]
			[Address(RVA = "0x17389E0", Offset = "0x17389E0", VA = "0x17389E0")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002AC2")]
			[Address(RVA = "0x17389E8", Offset = "0x17389E8", VA = "0x17389E8")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170006B2")]
		public float Score
		{
			[Token(Token = "0x6002AC3")]
			[Address(RVA = "0x17389F0", Offset = "0x17389F0", VA = "0x17389F0")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002AC4")]
			[Address(RVA = "0x17389F8", Offset = "0x17389F8", VA = "0x17389F8")]
			[CompilerGenerated]
			internal set
			{
			}
		}

		[Token(Token = "0x170006B3")]
		public string Name
		{
			[Token(Token = "0x6002AC5")]
			[Address(RVA = "0x1738A00", Offset = "0x1738A00", VA = "0x1738A00")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6002AC6")]
			[Address(RVA = "0x1738A08", Offset = "0x1738A08", VA = "0x1738A08")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6002AA8")]
		[Address(RVA = "0x1737CCC", Offset = "0x1737CCC", VA = "0x1737CCC")]
		private void ComputeRow(byte[] pixels, int row)
		{
		}

		[Token(Token = "0x6002AA9")]
		[Address(RVA = "0x1737D4C", Offset = "0x1737D4C", VA = "0x1737D4C")]
		public ImageGestureImage()
		{
		}

		[Token(Token = "0x6002AAA")]
		[Address(RVA = "0x1737D54", Offset = "0x1737D54", VA = "0x1737D54")]
		public ImageGestureImage(ulong[] rows, int width)
		{
		}

		[Token(Token = "0x6002AAB")]
		[Address(RVA = "0x1737D5C", Offset = "0x1737D5C", VA = "0x1737D5C")]
		public ImageGestureImage(ulong[] rows, int width, float scorePadding)
		{
		}

		[Token(Token = "0x6002AAC")]
		[Address(RVA = "0x1737DCC", Offset = "0x1737DCC", VA = "0x1737DCC")]
		public ImageGestureImage Clone()
		{
			return null;
		}

		[Token(Token = "0x6002AAD")]
		[Address(RVA = "0x1737EDC", Offset = "0x1737EDC", VA = "0x1737EDC", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6002AAE")]
		[Address(RVA = "0x1737F44", Offset = "0x1737F44", VA = "0x1737F44", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6002AAF")]
		[Address(RVA = "0x1738050", Offset = "0x1738050", VA = "0x1738050")]
		public void Initialize(byte[] pixels, int width)
		{
		}

		[Token(Token = "0x6002AB0")]
		[Address(RVA = "0x1738110", Offset = "0x1738110", VA = "0x1738110")]
		public float Similarity(ImageGestureImage other)
		{
			return default(float);
		}

		[Token(Token = "0x6002AB1")]
		[Address(RVA = "0x17382A4", Offset = "0x17382A4", VA = "0x17382A4")]
		public int Difference(ImageGestureImage other)
		{
			return default(int);
		}

		[Token(Token = "0x6002AB2")]
		[Address(RVA = "0x17383F0", Offset = "0x17383F0", VA = "0x17383F0")]
		public bool SetPixelWithPadding(int x, int y, int padding)
		{
			return default(bool);
		}

		[Token(Token = "0x6002AB3")]
		[Address(RVA = "0x17385B0", Offset = "0x17385B0", VA = "0x17385B0")]
		public void Clear()
		{
		}

		[Token(Token = "0x6002AB4")]
		[Address(RVA = "0x1738634", Offset = "0x1738634", VA = "0x1738634")]
		public string GetCodeForRowsInitialize(string imageName)
		{
			return null;
		}

		[Token(Token = "0x6002AB5")]
		[Address(RVA = "0x1738270", Offset = "0x1738270", VA = "0x1738270")]
		public static int NumberOfBitsSet(ulong value)
		{
			return default(int);
		}

		[Token(Token = "0x6002AB6")]
		[Address(RVA = "0x173897C", Offset = "0x173897C", VA = "0x173897C")]
		public static bool CheckBit(ulong value, int bitPos)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000816")]
	public class ImageGestureRecognizer : GestureRecognizer
	{
		[Token(Token = "0x2000817")]
		private struct Point
		{
			[Token(Token = "0x40025F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int X;

			[Token(Token = "0x40025F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int Y;

			[Token(Token = "0x6002AEE")]
			[Address(RVA = "0x1739C98", Offset = "0x1739C98", VA = "0x1739C98", Slot = "3")]
			public override string ToString()
			{
				return null;
			}
		}

		[Token(Token = "0x40025DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly ulong[] RowBitMasks;

		[Token(Token = "0x40025DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly ulong RowBitmask;

		[Token(Token = "0x40025E0")]
		public const int ImageRows = 16;

		[Token(Token = "0x40025E1")]
		public const int ImageColumns = 16;

		[Token(Token = "0x40025E2")]
		public const int ImageSize = 256;

		[Token(Token = "0x40025E3")]
		public const int LinePadding = 2;

		[Token(Token = "0x40025E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private readonly List<List<Point>> points;

		[Token(Token = "0x40025E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private List<Point> currentList;

		[Token(Token = "0x40025E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private int minX;

		[Token(Token = "0x40025E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		private int minY;

		[Token(Token = "0x40025E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private int maxX;

		[Token(Token = "0x40025E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		private int maxY;

		[Token(Token = "0x170006B4")]
		public int MaximumPathCount
		{
			[Token(Token = "0x6002AD4")]
			[Address(RVA = "0x17399B8", Offset = "0x17399B8", VA = "0x17399B8")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002AD5")]
			[Address(RVA = "0x17399C0", Offset = "0x17399C0", VA = "0x17399C0")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170006B5")]
		public float DirectionTolerance
		{
			[Token(Token = "0x6002AD6")]
			[Address(RVA = "0x17399C8", Offset = "0x17399C8", VA = "0x17399C8")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002AD7")]
			[Address(RVA = "0x17399D0", Offset = "0x17399D0", VA = "0x17399D0")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170006B6")]
		public float ThresholdUnits
		{
			[Token(Token = "0x6002AD8")]
			[Address(RVA = "0x17399D8", Offset = "0x17399D8", VA = "0x17399D8")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002AD9")]
			[Address(RVA = "0x17399E0", Offset = "0x17399E0", VA = "0x17399E0")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170006B7")]
		public float MinimumDistanceBetweenPointsUnits
		{
			[Token(Token = "0x6002ADA")]
			[Address(RVA = "0x17399E8", Offset = "0x17399E8", VA = "0x17399E8")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002ADB")]
			[Address(RVA = "0x17399F0", Offset = "0x17399F0", VA = "0x17399F0")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170006B8")]
		public float SimilarityMinimum
		{
			[Token(Token = "0x6002ADC")]
			[Address(RVA = "0x17399F8", Offset = "0x17399F8", VA = "0x17399F8")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002ADD")]
			[Address(RVA = "0x1739A00", Offset = "0x1739A00", VA = "0x1739A00")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170006B9")]
		public int MinimumPointsToRecognize
		{
			[Token(Token = "0x6002ADE")]
			[Address(RVA = "0x1739A08", Offset = "0x1739A08", VA = "0x1739A08")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002ADF")]
			[Address(RVA = "0x1739A10", Offset = "0x1739A10", VA = "0x1739A10")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170006BA")]
		public List<ImageGestureImage> GestureImages
		{
			[Token(Token = "0x6002AE0")]
			[Address(RVA = "0x1739A18", Offset = "0x1739A18", VA = "0x1739A18")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6002AE1")]
			[Address(RVA = "0x1739A20", Offset = "0x1739A20", VA = "0x1739A20")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170006BB")]
		public ImageGestureImage Image
		{
			[Token(Token = "0x6002AE4")]
			[Address(RVA = "0x1739B70", Offset = "0x1739B70", VA = "0x1739B70")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6002AE5")]
			[Address(RVA = "0x1739B78", Offset = "0x1739B78", VA = "0x1739B78")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x170006BC")]
		public ImageGestureImage MatchedGestureImage
		{
			[Token(Token = "0x6002AE6")]
			[Address(RVA = "0x1739B88", Offset = "0x1739B88", VA = "0x1739B88")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6002AE7")]
			[Address(RVA = "0x1739B90", Offset = "0x1739B90", VA = "0x1739B90")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x170006BD")]
		public float MatchedGestureCalculationTimeMilliseconds
		{
			[Token(Token = "0x6002AE8")]
			[Address(RVA = "0x1739BA0", Offset = "0x1739BA0", VA = "0x1739BA0")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002AE9")]
			[Address(RVA = "0x1739BA8", Offset = "0x1739BA8", VA = "0x1739BA8")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x170006BE")]
		public override bool ResetOnEnd
		{
			[Token(Token = "0x6002AEA")]
			[Address(RVA = "0x1739BB0", Offset = "0x1739BB0", VA = "0x1739BB0", Slot = "11")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170006BF")]
		public int PathCount
		{
			[Token(Token = "0x6002AEB")]
			[Address(RVA = "0x1739BB8", Offset = "0x1739BB8", VA = "0x1739BB8")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002AEC")]
			[Address(RVA = "0x1739BC0", Offset = "0x1739BC0", VA = "0x1739BC0")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1400009C")]
		public event EventHandler MaximumPathCountExceeded
		{
			[Token(Token = "0x6002AE2")]
			[Address(RVA = "0x1739A30", Offset = "0x1739A30", VA = "0x1739A30")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6002AE3")]
			[Address(RVA = "0x1739AD0", Offset = "0x1739AD0", VA = "0x1739AD0")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6002AC7")]
		[Address(RVA = "0x1738A10", Offset = "0x1738A10", VA = "0x1738A10")]
		private void AddPoint(float x, float y)
		{
		}

		[Token(Token = "0x6002AC8")]
		[Address(RVA = "0x1738D5C", Offset = "0x1738D5C", VA = "0x1738D5C")]
		private void ProcessTouches()
		{
		}

		[Token(Token = "0x6002AC9")]
		[Address(RVA = "0x1738CE8", Offset = "0x1738CE8", VA = "0x1738CE8")]
		private bool CompareFloat(float v1, float v2, float tolerance)
		{
			return default(bool);
		}

		[Token(Token = "0x6002ACA")]
		[Address(RVA = "0x1738DF4", Offset = "0x1738DF4", VA = "0x1738DF4")]
		private void AddLineToGesturedImage(Point point1, Point point2, float s)
		{
		}

		[Token(Token = "0x6002ACB")]
		[Address(RVA = "0x1738FE0", Offset = "0x1738FE0", VA = "0x1738FE0")]
		private void CalculateScores()
		{
		}

		[Token(Token = "0x6002ACC")]
		[Address(RVA = "0x1739264", Offset = "0x1739264", VA = "0x1739264")]
		private void CheckImages()
		{
		}

		[Token(Token = "0x6002ACD")]
		[Address(RVA = "0x17394C0", Offset = "0x17394C0", VA = "0x17394C0")]
		private void ResetImage()
		{
		}

		[Token(Token = "0x6002ACE")]
		[Address(RVA = "0x1739564", Offset = "0x1739564", VA = "0x1739564")]
		private bool CanExecute()
		{
			return default(bool);
		}

		[Token(Token = "0x6002ACF")]
		[Address(RVA = "0x173976C", Offset = "0x173976C", VA = "0x173976C", Slot = "6")]
		protected override void TouchesBegan(IEnumerable<GestureTouch> touches)
		{
		}

		[Token(Token = "0x6002AD0")]
		[Address(RVA = "0x1739778", Offset = "0x1739778", VA = "0x1739778", Slot = "7")]
		protected override void TouchesMoved()
		{
		}

		[Token(Token = "0x6002AD1")]
		[Address(RVA = "0x17397A0", Offset = "0x17397A0", VA = "0x17397A0", Slot = "8")]
		protected override void TouchesEnded()
		{
		}

		[Token(Token = "0x6002AD2")]
		[Address(RVA = "0x17397F8", Offset = "0x17397F8", VA = "0x17397F8")]
		public ImageGestureRecognizer()
		{
		}

		[Token(Token = "0x6002AD3")]
		[Address(RVA = "0x173999C", Offset = "0x173999C", VA = "0x173999C", Slot = "9")]
		public override void Reset()
		{
		}
	}
	[Token(Token = "0x2000818")]
	public class LongPressGestureRecognizer : GestureRecognizer
	{
		[Token(Token = "0x40025F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private readonly Stopwatch stopWatch;

		[Token(Token = "0x170006C0")]
		public float MinimumDurationSeconds
		{
			[Token(Token = "0x6002AF3")]
			[Address(RVA = "0x1739F0C", Offset = "0x1739F0C", VA = "0x1739F0C")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002AF4")]
			[Address(RVA = "0x1739F14", Offset = "0x1739F14", VA = "0x1739F14")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170006C1")]
		public float ThresholdUnits
		{
			[Token(Token = "0x6002AF5")]
			[Address(RVA = "0x1739F1C", Offset = "0x1739F1C", VA = "0x1739F1C")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002AF6")]
			[Address(RVA = "0x1739F24", Offset = "0x1739F24", VA = "0x1739F24")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6002AEF")]
		[Address(RVA = "0x1739D28", Offset = "0x1739D28", VA = "0x1739D28", Slot = "6")]
		protected override void TouchesBegan(IEnumerable<GestureTouch> touches)
		{
		}

		[Token(Token = "0x6002AF0")]
		[Address(RVA = "0x1739D58", Offset = "0x1739D58", VA = "0x1739D58", Slot = "7")]
		protected override void TouchesMoved()
		{
		}

		[Token(Token = "0x6002AF1")]
		[Address(RVA = "0x1739E1C", Offset = "0x1739E1C", VA = "0x1739E1C", Slot = "8")]
		protected override void TouchesEnded()
		{
		}

		[Token(Token = "0x6002AF2")]
		[Address(RVA = "0x1739E60", Offset = "0x1739E60", VA = "0x1739E60")]
		public LongPressGestureRecognizer()
		{
		}
	}
	[Token(Token = "0x2000819")]
	public class OneTouchRotateGestureRecognizer : RotateGestureRecognizer
	{
		[Token(Token = "0x40025FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public float AnglePointOverrideX;

		[Token(Token = "0x40025FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		public float AnglePointOverrideY;

		[Token(Token = "0x6002AF7")]
		[Address(RVA = "0x1739F2C", Offset = "0x1739F2C", VA = "0x1739F2C", Slot = "12")]
		protected override float CurrentAngle()
		{
			return default(float);
		}

		[Token(Token = "0x6002AF8")]
		[Address(RVA = "0x173A054", Offset = "0x173A054", VA = "0x173A054")]
		public OneTouchRotateGestureRecognizer()
		{
		}
	}
	[Token(Token = "0x200081A")]
	public class OneTouchScaleGestureRecognizer : GestureRecognizer
	{
		[Token(Token = "0x170006C2")]
		public float ScaleMultiplier
		{
			[Token(Token = "0x6002AFE")]
			[Address(RVA = "0x173A3A0", Offset = "0x173A3A0", VA = "0x173A3A0")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002AFF")]
			[Address(RVA = "0x173A3A8", Offset = "0x173A3A8", VA = "0x173A3A8")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x170006C3")]
		public float ScaleMultiplierX
		{
			[Token(Token = "0x6002B00")]
			[Address(RVA = "0x173A3B0", Offset = "0x173A3B0", VA = "0x173A3B0")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002B01")]
			[Address(RVA = "0x173A3B8", Offset = "0x173A3B8", VA = "0x173A3B8")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x170006C4")]
		public float ScaleMultiplierY
		{
			[Token(Token = "0x6002B02")]
			[Address(RVA = "0x173A3C0", Offset = "0x173A3C0", VA = "0x173A3C0")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002B03")]
			[Address(RVA = "0x173A3C8", Offset = "0x173A3C8", VA = "0x173A3C8")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x170006C5")]
		public float ZoomSpeed
		{
			[Token(Token = "0x6002B04")]
			[Address(RVA = "0x173A3D0", Offset = "0x173A3D0", VA = "0x173A3D0")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002B05")]
			[Address(RVA = "0x173A3D8", Offset = "0x173A3D8", VA = "0x173A3D8")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170006C6")]
		public float ThresholdUnits
		{
			[Token(Token = "0x6002B06")]
			[Address(RVA = "0x173A3E0", Offset = "0x173A3E0", VA = "0x173A3E0")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002B07")]
			[Address(RVA = "0x173A3E8", Offset = "0x173A3E8", VA = "0x173A3E8")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6002AF9")]
		[Address(RVA = "0x173A120", Offset = "0x173A120", VA = "0x173A120")]
		public OneTouchScaleGestureRecognizer()
		{
		}

		[Token(Token = "0x6002AFA")]
		[Address(RVA = "0x173A190", Offset = "0x173A190", VA = "0x173A190", Slot = "6")]
		protected override void TouchesBegan(IEnumerable<GestureTouch> touches)
		{
		}

		[Token(Token = "0x6002AFB")]
		[Address(RVA = "0x173A1B4", Offset = "0x173A1B4", VA = "0x173A1B4", Slot = "7")]
		protected override void TouchesMoved()
		{
		}

		[Token(Token = "0x6002AFC")]
		[Address(RVA = "0x173A33C", Offset = "0x173A33C", VA = "0x173A33C", Slot = "8")]
		protected override void TouchesEnded()
		{
		}

		[Token(Token = "0x6002AFD")]
		[Address(RVA = "0x173A378", Offset = "0x173A378", VA = "0x173A378", Slot = "9")]
		public override void Reset()
		{
		}
	}
	[Token(Token = "0x200081B")]
	public class PanGestureRecognizer : GestureRecognizer
	{
		[Token(Token = "0x4002602")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDB")]
		private bool needsDistanceThreshold;

		[Token(Token = "0x4002603")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		private float startX;

		[Token(Token = "0x4002604")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private float startY;

		[Token(Token = "0x4002605")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private readonly Stopwatch timeBelowSpeedUnitsToRestartThresholdUnits;

		[Token(Token = "0x170006C7")]
		public float ThresholdUnits
		{
			[Token(Token = "0x6002B0D")]
			[Address(RVA = "0x173A668", Offset = "0x173A668", VA = "0x173A668")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002B0E")]
			[Address(RVA = "0x173A670", Offset = "0x173A670", VA = "0x173A670")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170006C8")]
		public float SpeedUnitsToRestartThresholdUnits
		{
			[Token(Token = "0x6002B0F")]
			[Address(RVA = "0x173A678", Offset = "0x173A678", VA = "0x173A678")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002B10")]
			[Address(RVA = "0x173A680", Offset = "0x173A680", VA = "0x173A680")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170006C9")]
		public float TimeToRestartThresholdUnits
		{
			[Token(Token = "0x6002B11")]
			[Address(RVA = "0x173A688", Offset = "0x173A688", VA = "0x173A688")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002B12")]
			[Address(RVA = "0x173A690", Offset = "0x173A690", VA = "0x173A690")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6002B08")]
		[Address(RVA = "0x173A3F0", Offset = "0x173A3F0", VA = "0x173A3F0")]
		private void ProcessTouches(bool resetFocus)
		{
		}

		[Token(Token = "0x6002B09")]
		[Address(RVA = "0x173A584", Offset = "0x173A584", VA = "0x173A584", Slot = "6")]
		protected override void TouchesBegan(IEnumerable<GestureTouch> touches)
		{
		}

		[Token(Token = "0x6002B0A")]
		[Address(RVA = "0x173A58C", Offset = "0x173A58C", VA = "0x173A58C", Slot = "7")]
		protected override void TouchesMoved()
		{
		}

		[Token(Token = "0x6002B0B")]
		[Address(RVA = "0x173A594", Offset = "0x173A594", VA = "0x173A594", Slot = "8")]
		protected override void TouchesEnded()
		{
		}

		[Token(Token = "0x6002B0C")]
		[Address(RVA = "0x173A5C4", Offset = "0x173A5C4", VA = "0x173A5C4")]
		public PanGestureRecognizer()
		{
		}
	}
	[Token(Token = "0x200081C")]
	public class RotateGestureRecognizer : GestureRecognizer
	{
		[Token(Token = "0x4002609")]
		private const float minAngleDifferenceToChangeDirection = 0.15f;

		[Token(Token = "0x400260A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		private float startAngle;

		[Token(Token = "0x400260B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private float previousAngle;

		[Token(Token = "0x400260C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private float previousAngleSign;

		[Token(Token = "0x170006CA")]
		public float AngleThreshold
		{
			[Token(Token = "0x6002B1C")]
			[Address(RVA = "0x173AB54", Offset = "0x173AB54", VA = "0x173AB54")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002B1D")]
			[Address(RVA = "0x173AB5C", Offset = "0x173AB5C", VA = "0x173AB5C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170006CB")]
		public float ThresholdUnits
		{
			[Token(Token = "0x6002B1E")]
			[Address(RVA = "0x173AB64", Offset = "0x173AB64", VA = "0x173AB64")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002B1F")]
			[Address(RVA = "0x173AB6C", Offset = "0x173AB6C", VA = "0x173AB6C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170006CC")]
		public float RotationRadians
		{
			[Token(Token = "0x6002B20")]
			[Address(RVA = "0x173AB74", Offset = "0x173AB74", VA = "0x173AB74")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002B21")]
			[Address(RVA = "0x173AB7C", Offset = "0x173AB7C", VA = "0x173AB7C")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x170006CD")]
		public float RotationRadiansDelta
		{
			[Token(Token = "0x6002B22")]
			[Address(RVA = "0x173AB84", Offset = "0x173AB84", VA = "0x173AB84")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002B23")]
			[Address(RVA = "0x173AB8C", Offset = "0x173AB8C", VA = "0x173AB8C")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x170006CE")]
		public float RotationDegrees
		{
			[Token(Token = "0x6002B24")]
			[Address(RVA = "0x173AB94", Offset = "0x173AB94", VA = "0x173AB94")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170006CF")]
		public float RotationDegreesDelta
		{
			[Token(Token = "0x6002B25")]
			[Address(RVA = "0x173ABA8", Offset = "0x173ABA8", VA = "0x173ABA8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6002B13")]
		[Address(RVA = "0x173A698", Offset = "0x173A698", VA = "0x173A698")]
		private float DifferenceBetweenAngles(float angle1, float angle2)
		{
			return default(float);
		}

		[Token(Token = "0x6002B14")]
		[Address(RVA = "0x173A720", Offset = "0x173A720", VA = "0x173A720")]
		private void UpdateAngle()
		{
		}

		[Token(Token = "0x6002B15")]
		[Address(RVA = "0x173A830", Offset = "0x173A830", VA = "0x173A830")]
		private void CheckForStart()
		{
		}

		[Token(Token = "0x6002B16")]
		[Address(RVA = "0x173A91C", Offset = "0x173A91C", VA = "0x173A91C", Slot = "5")]
		protected override void StateChanged()
		{
		}

		[Token(Token = "0x6002B17")]
		[Address(RVA = "0x173A950", Offset = "0x173A950", VA = "0x173A950", Slot = "6")]
		protected override void TouchesBegan(IEnumerable<GestureTouch> touches)
		{
		}

		[Token(Token = "0x6002B18")]
		[Address(RVA = "0x173A95C", Offset = "0x173A95C", VA = "0x173A95C", Slot = "7")]
		protected override void TouchesMoved()
		{
		}

		[Token(Token = "0x6002B19")]
		[Address(RVA = "0x173A9F8", Offset = "0x173A9F8", VA = "0x173A9F8", Slot = "8")]
		protected override void TouchesEnded()
		{
		}

		[Token(Token = "0x6002B1A")]
		[Address(RVA = "0x173AA4C", Offset = "0x173AA4C", VA = "0x173AA4C", Slot = "12")]
		protected virtual float CurrentAngle()
		{
			return default(float);
		}

		[Token(Token = "0x6002B1B")]
		[Address(RVA = "0x173A09C", Offset = "0x173A09C", VA = "0x173A09C")]
		public RotateGestureRecognizer()
		{
		}
	}
	[Token(Token = "0x200081D")]
	public class ScaleGestureRecognizer : GestureRecognizer
	{
		[Token(Token = "0x4002611")]
		private const float minimumScaleResolutionSquared = 1.005f;

		[Token(Token = "0x4002612")]
		private const float stationaryScaleResolutionSquared = 1.05f;

		[Token(Token = "0x4002613")]
		private const float stationaryTimeSeconds = 0.1f;

		[Token(Token = "0x4002614")]
		private const float hysteresisScaleResolutionSquared = 1.15f;

		[Token(Token = "0x4002615")]
		private const int resetDirectionMilliseconds = 300;

		[Token(Token = "0x4002616")]
		private const float minimumScaleDownPerUpdate = 0.25f;

		[Token(Token = "0x4002617")]
		private const float maximumScaleUpPerUpdate = 4f;

		[Token(Token = "0x4002618")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		private float previousDistanceDirection;

		[Token(Token = "0x4002619")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private float previousDistance;

		[Token(Token = "0x400261A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private float previousDistanceX;

		[Token(Token = "0x400261B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private float previousDistanceY;

		[Token(Token = "0x400261C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private readonly Stopwatch timer;

		[Token(Token = "0x170006D0")]
		public float ScaleMultiplier
		{
			[Token(Token = "0x6002B2E")]
			[Address(RVA = "0x173B178", Offset = "0x173B178", VA = "0x173B178")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002B2F")]
			[Address(RVA = "0x173B180", Offset = "0x173B180", VA = "0x173B180")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x170006D1")]
		public float ScaleMultiplierX
		{
			[Token(Token = "0x6002B30")]
			[Address(RVA = "0x173B188", Offset = "0x173B188", VA = "0x173B188")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002B31")]
			[Address(RVA = "0x173B190", Offset = "0x173B190", VA = "0x173B190")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x170006D2")]
		public float ScaleMultiplierY
		{
			[Token(Token = "0x6002B32")]
			[Address(RVA = "0x173B198", Offset = "0x173B198", VA = "0x173B198")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002B33")]
			[Address(RVA = "0x173B1A0", Offset = "0x173B1A0", VA = "0x173B1A0")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x170006D3")]
		public float ZoomSpeed
		{
			[Token(Token = "0x6002B34")]
			[Address(RVA = "0x173B1A8", Offset = "0x173B1A8", VA = "0x173B1A8")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002B35")]
			[Address(RVA = "0x173B1B0", Offset = "0x173B1B0", VA = "0x173B1B0")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170006D4")]
		public float ScaleMultiplierRange
		{
			[Token(Token = "0x6002B36")]
			[Address(RVA = "0x173B1B8", Offset = "0x173B1B8", VA = "0x173B1B8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170006D5")]
		public float ThresholdUnits
		{
			[Token(Token = "0x6002B37")]
			[Address(RVA = "0x173B1EC", Offset = "0x173B1EC", VA = "0x173B1EC")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002B38")]
			[Address(RVA = "0x173B1F4", Offset = "0x173B1F4", VA = "0x173B1F4")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6002B26")]
		[Address(RVA = "0x173ABBC", Offset = "0x173ABBC", VA = "0x173ABBC")]
		public ScaleGestureRecognizer()
		{
		}

		[Token(Token = "0x6002B27")]
		[Address(RVA = "0x173ACC4", Offset = "0x173ACC4", VA = "0x173ACC4")]
		private void SetPreviousDistance(float distance, float distanceX, float distanceY)
		{
		}

		[Token(Token = "0x6002B28")]
		[Address(RVA = "0x173ACD0", Offset = "0x173ACD0", VA = "0x173ACD0")]
		private float ClampScale(float rawScale)
		{
			return default(float);
		}

		[Token(Token = "0x6002B29")]
		[Address(RVA = "0x173ACF0", Offset = "0x173ACF0", VA = "0x173ACF0")]
		private float GetScale(float rawScale)
		{
			return default(float);
		}

		[Token(Token = "0x6002B2A")]
		[Address(RVA = "0x173AD5C", Offset = "0x173AD5C", VA = "0x173AD5C")]
		private void ProcessTouches()
		{
		}

		[Token(Token = "0x6002B2B")]
		[Address(RVA = "0x173B130", Offset = "0x173B130", VA = "0x173B130", Slot = "6")]
		protected override void TouchesBegan(IEnumerable<GestureTouch> touches)
		{
		}

		[Token(Token = "0x6002B2C")]
		[Address(RVA = "0x173B138", Offset = "0x173B138", VA = "0x173B138", Slot = "7")]
		protected override void TouchesMoved()
		{
		}

		[Token(Token = "0x6002B2D")]
		[Address(RVA = "0x173B13C", Offset = "0x173B13C", VA = "0x173B13C", Slot = "8")]
		protected override void TouchesEnded()
		{
		}
	}
	[Token(Token = "0x200081E")]
	public enum SwipeGestureRecognizerDirection
	{
		[Token(Token = "0x4002623")]
		Left,
		[Token(Token = "0x4002624")]
		Right,
		[Token(Token = "0x4002625")]
		Down,
		[Token(Token = "0x4002626")]
		Up,
		[Token(Token = "0x4002627")]
		Any
	}
	[Token(Token = "0x200081F")]
	public enum SwipeGestureRecognizerEndMode
	{
		[Token(Token = "0x4002629")]
		EndImmediately,
		[Token(Token = "0x400262A")]
		EndContinusously,
		[Token(Token = "0x400262B")]
		EndWhenTouchEnds
	}
	[Token(Token = "0x2000820")]
	public class SwipeGestureRecognizer : GestureRecognizer
	{
		[Token(Token = "0x400262C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private Stopwatch timer;

		[Token(Token = "0x170006D6")]
		public SwipeGestureRecognizerDirection Direction
		{
			[Token(Token = "0x6002B40")]
			[Address(RVA = "0x173B728", Offset = "0x173B728", VA = "0x173B728")]
			[CompilerGenerated]
			get
			{
				return default(SwipeGestureRecognizerDirection);
			}
			[Token(Token = "0x6002B41")]
			[Address(RVA = "0x173B730", Offset = "0x173B730", VA = "0x173B730")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170006D7")]
		public float MinimumDistanceUnits
		{
			[Token(Token = "0x6002B42")]
			[Address(RVA = "0x173B738", Offset = "0x173B738", VA = "0x173B738")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002B43")]
			[Address(RVA = "0x173B740", Offset = "0x173B740", VA = "0x173B740")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170006D8")]
		public float MinimumSpeedUnits
		{
			[Token(Token = "0x6002B44")]
			[Address(RVA = "0x173B748", Offset = "0x173B748", VA = "0x173B748")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002B45")]
			[Address(RVA = "0x173B750", Offset = "0x173B750", VA = "0x173B750")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170006D9")]
		public float DirectionThreshold
		{
			[Token(Token = "0x6002B46")]
			[Address(RVA = "0x173B758", Offset = "0x173B758", VA = "0x173B758")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002B47")]
			[Address(RVA = "0x173B760", Offset = "0x173B760", VA = "0x173B760")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170006DA")]
		public SwipeGestureRecognizerEndMode EndMode
		{
			[Token(Token = "0x6002B48")]
			[Address(RVA = "0x173B768", Offset = "0x173B768", VA = "0x173B768")]
			[CompilerGenerated]
			get
			{
				return default(SwipeGestureRecognizerEndMode);
			}
			[Token(Token = "0x6002B49")]
			[Address(RVA = "0x173B770", Offset = "0x173B770", VA = "0x173B770")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170006DB")]
		public bool FailOnDirectionChange
		{
			[Token(Token = "0x6002B4A")]
			[Address(RVA = "0x173B778", Offset = "0x173B778", VA = "0x173B778")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002B4B")]
			[Address(RVA = "0x173B780", Offset = "0x173B780", VA = "0x173B780")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170006DC")]
		public SwipeGestureRecognizerDirection EndDirection
		{
			[Token(Token = "0x6002B4C")]
			[Address(RVA = "0x173B78C", Offset = "0x173B78C", VA = "0x173B78C")]
			[CompilerGenerated]
			get
			{
				return default(SwipeGestureRecognizerDirection);
			}
			[Token(Token = "0x6002B4D")]
			[Address(RVA = "0x173B794", Offset = "0x173B794", VA = "0x173B794")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x170006DD")]
		public bool SendBeginExecutingStates
		{
			[Token(Token = "0x6002B4E")]
			[Address(RVA = "0x173B79C", Offset = "0x173B79C", VA = "0x173B79C")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002B4F")]
			[Address(RVA = "0x173B7A4", Offset = "0x173B7A4", VA = "0x173B7A4")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170006DE")]
		public float ThresholdSeconds
		{
			[Token(Token = "0x6002B50")]
			[Address(RVA = "0x173B7B0", Offset = "0x173B7B0", VA = "0x173B7B0")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002B51")]
			[Address(RVA = "0x173B7B8", Offset = "0x173B7B8", VA = "0x173B7B8")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6002B39")]
		[Address(RVA = "0x173B1FC", Offset = "0x173B1FC", VA = "0x173B1FC")]
		private bool CalculateEndDirection(float x, float y)
		{
			return default(bool);
		}

		[Token(Token = "0x6002B3A")]
		[Address(RVA = "0x173B308", Offset = "0x173B308", VA = "0x173B308")]
		private void CheckForSwipeCompletion(bool end)
		{
		}

		[Token(Token = "0x6002B3B")]
		[Address(RVA = "0x173B464", Offset = "0x173B464", VA = "0x173B464", Slot = "6")]
		protected override void TouchesBegan(IEnumerable<GestureTouch> touches)
		{
		}

		[Token(Token = "0x6002B3C")]
		[Address(RVA = "0x173B50C", Offset = "0x173B50C", VA = "0x173B50C", Slot = "7")]
		protected override void TouchesMoved()
		{
		}

		[Token(Token = "0x6002B3D")]
		[Address(RVA = "0x173B59C", Offset = "0x173B59C", VA = "0x173B59C", Slot = "8")]
		protected override void TouchesEnded()
		{
		}

		[Token(Token = "0x6002B3E")]
		[Address(RVA = "0x173B64C", Offset = "0x173B64C", VA = "0x173B64C")]
		public SwipeGestureRecognizer()
		{
		}

		[Token(Token = "0x6002B3F")]
		[Address(RVA = "0x173B708", Offset = "0x173B708", VA = "0x173B708", Slot = "9")]
		public override void Reset()
		{
		}
	}
	[Token(Token = "0x2000821")]
	public class TapGestureRecognizer : GestureRecognizer
	{
		[Token(Token = "0x4002636")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		private int tapCount;

		[Token(Token = "0x4002637")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private readonly Stopwatch timer;

		[Token(Token = "0x4002638")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private readonly List<GestureTouch> tapTouches;

		[Token(Token = "0x170006DF")]
		public int NumberOfTapsRequired
		{
			[Token(Token = "0x6002B5A")]
			[Address(RVA = "0x173C584", Offset = "0x173C584", VA = "0x173C584")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002B5B")]
			[Address(RVA = "0x173C58C", Offset = "0x173C58C", VA = "0x173C58C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170006E0")]
		public float ThresholdSeconds
		{
			[Token(Token = "0x6002B5C")]
			[Address(RVA = "0x173C594", Offset = "0x173C594", VA = "0x173C594")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002B5D")]
			[Address(RVA = "0x173C59C", Offset = "0x173C59C", VA = "0x173C59C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170006E1")]
		public float SequentialTapThresholdSeconds
		{
			[Token(Token = "0x6002B5E")]
			[Address(RVA = "0x173C5A4", Offset = "0x173C5A4", VA = "0x173C5A4")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002B5F")]
			[Address(RVA = "0x173C5AC", Offset = "0x173C5AC", VA = "0x173C5AC")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170006E2")]
		public float ThresholdUnits
		{
			[Token(Token = "0x6002B60")]
			[Address(RVA = "0x173C5B4", Offset = "0x173C5B4", VA = "0x173C5B4")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002B61")]
			[Address(RVA = "0x173C5BC", Offset = "0x173C5BC", VA = "0x173C5BC")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170006E3")]
		public bool SendBeginState
		{
			[Token(Token = "0x6002B62")]
			[Address(RVA = "0x173C5C4", Offset = "0x173C5C4", VA = "0x173C5C4")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002B63")]
			[Address(RVA = "0x173C5CC", Offset = "0x173C5CC", VA = "0x173C5CC")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170006E4")]
		public ReadOnlyCollection<GestureTouch> TapTouches
		{
			[Token(Token = "0x6002B64")]
			[Address(RVA = "0x173C5D8", Offset = "0x173C5D8", VA = "0x173C5D8")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6002B65")]
			[Address(RVA = "0x173C5E0", Offset = "0x173C5E0", VA = "0x173C5E0")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6002B52")]
		[Address(RVA = "0x173B7C0", Offset = "0x173B7C0", VA = "0x173B7C0")]
		private void VerifyFailGestureAfterDelay()
		{
		}

		[Token(Token = "0x6002B53")]
		[Address(RVA = "0x173B828", Offset = "0x173B828", VA = "0x173B828")]
		private void FailGestureAfterDelayIfNoTap()
		{
		}

		[Token(Token = "0x6002B54")]
		[Address(RVA = "0x173B8D8", Offset = "0x173B8D8", VA = "0x173B8D8", Slot = "5")]
		protected override void StateChanged()
		{
		}

		[Token(Token = "0x6002B55")]
		[Address(RVA = "0x173B978", Offset = "0x173B978", VA = "0x173B978", Slot = "6")]
		protected override void TouchesBegan(IEnumerable<GestureTouch> touches)
		{
		}

		[Token(Token = "0x6002B56")]
		[Address(RVA = "0x173C030", Offset = "0x173C030", VA = "0x173C030", Slot = "7")]
		protected override void TouchesMoved()
		{
		}

		[Token(Token = "0x6002B57")]
		[Address(RVA = "0x173C098", Offset = "0x173C098", VA = "0x173C098", Slot = "8")]
		protected override void TouchesEnded()
		{
		}

		[Token(Token = "0x6002B58")]
		[Address(RVA = "0x173C160", Offset = "0x173C160", VA = "0x173C160")]
		public TapGestureRecognizer()
		{
		}

		[Token(Token = "0x6002B59")]
		[Address(RVA = "0x173C29C", Offset = "0x173C29C", VA = "0x173C29C", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000822")]
	public static class FingersUtility
	{
		[Token(Token = "0x6002B66")]
		[Address(RVA = "0x173C5F0", Offset = "0x173C5F0", VA = "0x173C5F0")]
		public static void DrawLine(this Image img, Rect rect)
		{
		}

		[Token(Token = "0x6002B67")]
		[Address(RVA = "0x173C6F4", Offset = "0x173C6F4", VA = "0x173C6F4")]
		public static void DrawLine(this Image img, Rect rect, Color color)
		{
		}

		[Token(Token = "0x6002B68")]
		[Address(RVA = "0x173C714", Offset = "0x173C714", VA = "0x173C714")]
		public static void DrawLine(this Image img, Rect rect, float width)
		{
		}

		[Token(Token = "0x6002B69")]
		[Address(RVA = "0x173C620", Offset = "0x173C620", VA = "0x173C620")]
		public static void DrawLine(this Image img, Rect rect, Color color, float width)
		{
		}

		[Token(Token = "0x6002B6A")]
		[Address(RVA = "0x173C900", Offset = "0x173C900", VA = "0x173C900")]
		public static void DrawLine(this Image img, Vector2 pointA, Vector2 pointB)
		{
		}

		[Token(Token = "0x6002B6B")]
		[Address(RVA = "0x173C930", Offset = "0x173C930", VA = "0x173C930")]
		public static void DrawLine(this Image img, Vector2 pointA, Vector2 pointB, Color color)
		{
		}

		[Token(Token = "0x6002B6C")]
		[Address(RVA = "0x173C950", Offset = "0x173C950", VA = "0x173C950")]
		public static void DrawLine(this Image img, Vector2 pointA, Vector2 pointB, float width)
		{
		}

		[Token(Token = "0x6002B6D")]
		[Address(RVA = "0x173C740", Offset = "0x173C740", VA = "0x173C740")]
		public static void DrawLine(this Image img, Vector2 pointA, Vector2 pointB, Color color, float width)
		{
		}

		[Token(Token = "0x6002B6E")]
		[Address(RVA = "0x173C97C", Offset = "0x173C97C", VA = "0x173C97C")]
		public static Vector2 ScreenToCanvasPoint(this Canvas canvas, Vector2 screenPoint)
		{
			return default(Vector2);
		}
	}
	[Token(Token = "0x2000823")]
	[AttributeUsage(AttributeTargets.Field, Inherited = true, AllowMultiple = false)]
	public class MinMaxSliderAttribute : PropertyAttribute
	{
		[Token(Token = "0x170006E5")]
		public float Min
		{
			[Token(Token = "0x6002B6F")]
			[Address(RVA = "0x173CA78", Offset = "0x173CA78", VA = "0x173CA78")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002B70")]
			[Address(RVA = "0x173CA80", Offset = "0x173CA80", VA = "0x173CA80")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x170006E6")]
		public float Max
		{
			[Token(Token = "0x6002B71")]
			[Address(RVA = "0x173CA88", Offset = "0x173CA88", VA = "0x173CA88")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002B72")]
			[Address(RVA = "0x173CA90", Offset = "0x173CA90", VA = "0x173CA90")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6002B73")]
		[Address(RVA = "0x173CA98", Offset = "0x173CA98", VA = "0x173CA98")]
		public MinMaxSliderAttribute()
		{
		}

		[Token(Token = "0x6002B74")]
		[Address(RVA = "0x173CABC", Offset = "0x173CABC", VA = "0x173CABC")]
		public MinMaxSliderAttribute(float min, float max)
		{
		}
	}
}
namespace UnityVolumeRendering
{
	[Token(Token = "0x2000824")]
	public class NoiseTextureGenerator
	{
		[Token(Token = "0x6002B75")]
		[Address(RVA = "0x173CAE8", Offset = "0x173CAE8", VA = "0x173CAE8")]
		public static Texture2D GenerateNoiseTexture(int noiseDimX, int noiseDimY)
		{
			return null;
		}

		[Token(Token = "0x6002B76")]
		[Address(RVA = "0x173CC54", Offset = "0x173CC54", VA = "0x173CC54")]
		public NoiseTextureGenerator()
		{
		}
	}
	[Token(Token = "0x2000825")]
	[ExecuteInEditMode]
	public class CrossSectionPlane : MonoBehaviour
	{
		[Token(Token = "0x4002641")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public VolumeRenderedObject targetObject;

		[Token(Token = "0x4002642")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int CrossSectionMatrix;

		[Token(Token = "0x6002B77")]
		[Address(RVA = "0x173CC5C", Offset = "0x173CC5C", VA = "0x173CC5C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002B78")]
		[Address(RVA = "0x173CD0C", Offset = "0x173CD0C", VA = "0x173CD0C")]
		private void Update()
		{
		}

		[Token(Token = "0x6002B79")]
		[Address(RVA = "0x173CEB0", Offset = "0x173CEB0", VA = "0x173CEB0")]
		public CrossSectionPlane()
		{
		}
	}
	[Token(Token = "0x2000826")]
	public enum RenderMode
	{
		[Token(Token = "0x4002644")]
		DirectVolumeRendering,
		[Token(Token = "0x4002645")]
		MaximumIntensityProjectipon,
		[Token(Token = "0x4002646")]
		IsosurfaceRendering
	}
	[Token(Token = "0x2000827")]
	public enum TFRenderMode
	{
		[Token(Token = "0x4002648")]
		TF1D,
		[Token(Token = "0x4002649")]
		TF2D
	}
	[Token(Token = "0x2000828")]
	[ExecuteInEditMode]
	public class VolumeRenderedObject : MonoBehaviour
	{
		[Token(Token = "0x400264A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _meshRenderer;

		[Token(Token = "0x400264B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private RenderMode renderMode;

		[Token(Token = "0x400264C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private TFRenderMode tfRenderMode;

		[Token(Token = "0x400264D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool lightingEnabled;

		[Token(Token = "0x400264E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		private bool relativeEnabled;

		[Token(Token = "0x400264F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector2 visibilityWindow;

		[Token(Token = "0x4002650")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Transform _cameraTransform;

		[Token(Token = "0x4002651")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly int CameraPlanePos;

		[Token(Token = "0x4002652")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static readonly int CameraPlaneNormal;

		[Token(Token = "0x4002653")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly int MinVal;

		[Token(Token = "0x4002654")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public static readonly int MaxVal;

		[Token(Token = "0x4002655")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly int QualitySetting;

		[Token(Token = "0x4002657")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private NativeArray<GradientKey<float>> _keys;

		[Token(Token = "0x4002658")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private NativeArray<UnityEngine.Color32> _nativeColors;

		[Token(Token = "0x4002659")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private UnityEngine.Color32[] _colors;

		[Token(Token = "0x400265A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private IReadOnlyCollection<GradientKey<float>> _transferFunction;

		[Token(Token = "0x400265B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private int _qualitySetting;

		[Token(Token = "0x170006E7")]
		public Texture2D TransferFunctionTexture
		{
			[Token(Token = "0x6002B7B")]
			[Address(RVA = "0x173CF20", Offset = "0x173CF20", VA = "0x173CF20")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6002B7C")]
			[Address(RVA = "0x173CF28", Offset = "0x173CF28", VA = "0x173CF28")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170006E8")]
		public Transform CameraTransform
		{
			[Token(Token = "0x6002B7D")]
			[Address(RVA = "0x173CF30", Offset = "0x173CF30", VA = "0x173CF30")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002B7E")]
			[Address(RVA = "0x173CF38", Offset = "0x173CF38", VA = "0x173CF38")]
			set
			{
			}
		}

		[Token(Token = "0x170006E9")]
		public MeshRenderer MeshRenderer
		{
			[Token(Token = "0x6002B7F")]
			[Address(RVA = "0x173CF40", Offset = "0x173CF40", VA = "0x173CF40")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002B80")]
		[Address(RVA = "0x173CF48", Offset = "0x173CF48", VA = "0x173CF48")]
		private void Start()
		{
		}

		[Token(Token = "0x6002B81")]
		[Address(RVA = "0x173D234", Offset = "0x173D234", VA = "0x173D234")]
		private void Update()
		{
		}

		[Token(Token = "0x6002B82")]
		[Address(RVA = "0x173D3B4", Offset = "0x173D3B4", VA = "0x173D3B4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6002B83")]
		[Address(RVA = "0x173D478", Offset = "0x173D478", VA = "0x173D478")]
		public void SetCameraSlicing(bool val)
		{
		}

		[Token(Token = "0x6002B84")]
		[Address(RVA = "0x173D540", Offset = "0x173D540", VA = "0x173D540")]
		public void SetRelativeEnabled(bool value)
		{
		}

		[Token(Token = "0x6002B85")]
		[Address(RVA = "0x173D54C", Offset = "0x173D54C", VA = "0x173D54C")]
		public void SetVisibilityWindow(Vector2 window)
		{
		}

		[Token(Token = "0x6002B86")]
		[Address(RVA = "0x173CF4C", Offset = "0x173CF4C", VA = "0x173CF4C")]
		private void UpdateMaterialProperties()
		{
		}

		[Token(Token = "0x6002B87")]
		[Address(RVA = "0x173D554", Offset = "0x173D554", VA = "0x173D554")]
		public void SetTransferFunction(IReadOnlyCollection<GradientKey<float>> keys)
		{
		}

		[Token(Token = "0x6002B88")]
		[Address(RVA = "0x173D600", Offset = "0x173D600", VA = "0x173D600")]
		public void SetQualitySetting(int value)
		{
		}

		[Token(Token = "0x6002B89")]
		[Address(RVA = "0x173D608", Offset = "0x173D608", VA = "0x173D608")]
		public void ForceUpdateMaterial()
		{
		}

		[Token(Token = "0x6002B8A")]
		[Address(RVA = "0x173D68C", Offset = "0x173D68C", VA = "0x173D68C")]
		public VolumeRenderedObject()
		{
		}
	}
}
namespace Mirror
{
	[StructLayout(3, CharSet = CharSet.Auto)]
	[Token(Token = "0x200082D")]
	public static class GeneratedNetworkCode
	{
		[Token(Token = "0x6002B8C")]
		[Address(RVA = "0x173D7D8", Offset = "0x173D7D8", VA = "0x173D7D8")]
		public static ReadyMessage _Read_Mirror.ReadyMessage(NetworkReader reader)
		{
			return default(ReadyMessage);
		}

		[Token(Token = "0x6002B8D")]
		[Address(RVA = "0x173D7E0", Offset = "0x173D7E0", VA = "0x173D7E0")]
		public static void _Write_Mirror.ReadyMessage(NetworkWriter writer, ReadyMessage value)
		{
		}

		[Token(Token = "0x6002B8E")]
		[Address(RVA = "0x173D7E4", Offset = "0x173D7E4", VA = "0x173D7E4")]
		public static NotReadyMessage _Read_Mirror.NotReadyMessage(NetworkReader reader)
		{
			return default(NotReadyMessage);
		}

		[Token(Token = "0x6002B8F")]
		[Address(RVA = "0x173D7EC", Offset = "0x173D7EC", VA = "0x173D7EC")]
		public static void _Write_Mirror.NotReadyMessage(NetworkWriter writer, NotReadyMessage value)
		{
		}

		[Token(Token = "0x6002B90")]
		[Address(RVA = "0x173D7F0", Offset = "0x173D7F0", VA = "0x173D7F0")]
		public static AddPlayerMessage _Read_Mirror.AddPlayerMessage(NetworkReader reader)
		{
			return default(AddPlayerMessage);
		}

		[Token(Token = "0x6002B91")]
		[Address(RVA = "0x173D7F8", Offset = "0x173D7F8", VA = "0x173D7F8")]
		public static void _Write_Mirror.AddPlayerMessage(NetworkWriter writer, AddPlayerMessage value)
		{
		}

		[Token(Token = "0x6002B92")]
		[Address(RVA = "0x173D7FC", Offset = "0x173D7FC", VA = "0x173D7FC")]
		public static SceneMessage _Read_Mirror.SceneMessage(NetworkReader reader)
		{
			return default(SceneMessage);
		}

		[Token(Token = "0x6002B93")]
		[Address(RVA = "0x173D898", Offset = "0x173D898", VA = "0x173D898")]
		public static SceneOperation _Read_Mirror.SceneOperation(NetworkReader reader)
		{
			return default(SceneOperation);
		}

		[Token(Token = "0x6002B94")]
		[Address(RVA = "0x173D8F0", Offset = "0x173D8F0", VA = "0x173D8F0")]
		public static void _Write_Mirror.SceneMessage(NetworkWriter writer, SceneMessage value)
		{
		}

		[Token(Token = "0x6002B95")]
		[Address(RVA = "0x173D978", Offset = "0x173D978", VA = "0x173D978")]
		public static void _Write_Mirror.SceneOperation(NetworkWriter writer, SceneOperation value)
		{
		}

		[Token(Token = "0x6002B96")]
		[Address(RVA = "0x173D9E0", Offset = "0x173D9E0", VA = "0x173D9E0")]
		public static CommandMessage _Read_Mirror.CommandMessage(NetworkReader reader)
		{
			return default(CommandMessage);
		}

		[Token(Token = "0x6002B97")]
		[Address(RVA = "0x173DAAC", Offset = "0x173DAAC", VA = "0x173DAAC")]
		public static void _Write_Mirror.CommandMessage(NetworkWriter writer, CommandMessage value)
		{
		}

		[Token(Token = "0x6002B98")]
		[Address(RVA = "0x173DB48", Offset = "0x173DB48", VA = "0x173DB48")]
		public static RpcMessage _Read_Mirror.RpcMessage(NetworkReader reader)
		{
			return default(RpcMessage);
		}

		[Token(Token = "0x6002B99")]
		[Address(RVA = "0x173DC14", Offset = "0x173DC14", VA = "0x173DC14")]
		public static void _Write_Mirror.RpcMessage(NetworkWriter writer, RpcMessage value)
		{
		}

		[Token(Token = "0x6002B9A")]
		[Address(RVA = "0x173DCB0", Offset = "0x173DCB0", VA = "0x173DCB0")]
		public static SpawnMessage _Read_Mirror.SpawnMessage(NetworkReader reader)
		{
			return default(SpawnMessage);
		}

		[Token(Token = "0x6002B9B")]
		[Address(RVA = "0x173DDF0", Offset = "0x173DDF0", VA = "0x173DDF0")]
		public static void _Write_Mirror.SpawnMessage(NetworkWriter writer, SpawnMessage value)
		{
		}

		[Token(Token = "0x6002B9C")]
		[Address(RVA = "0x173DEF0", Offset = "0x173DEF0", VA = "0x173DEF0")]
		public static ChangeOwnerMessage _Read_Mirror.ChangeOwnerMessage(NetworkReader reader)
		{
			return default(ChangeOwnerMessage);
		}

		[Token(Token = "0x6002B9D")]
		[Address(RVA = "0x173DF80", Offset = "0x173DF80", VA = "0x173DF80")]
		public static void _Write_Mirror.ChangeOwnerMessage(NetworkWriter writer, ChangeOwnerMessage value)
		{
		}

		[Token(Token = "0x6002B9E")]
		[Address(RVA = "0x173E008", Offset = "0x173E008", VA = "0x173E008")]
		public static ObjectSpawnStartedMessage _Read_Mirror.ObjectSpawnStartedMessage(NetworkReader reader)
		{
			return default(ObjectSpawnStartedMessage);
		}

		[Token(Token = "0x6002B9F")]
		[Address(RVA = "0x173E010", Offset = "0x173E010", VA = "0x173E010")]
		public static void _Write_Mirror.ObjectSpawnStartedMessage(NetworkWriter writer, ObjectSpawnStartedMessage value)
		{
		}

		[Token(Token = "0x6002BA0")]
		[Address(RVA = "0x173E014", Offset = "0x173E014", VA = "0x173E014")]
		public static ObjectSpawnFinishedMessage _Read_Mirror.ObjectSpawnFinishedMessage(NetworkReader reader)
		{
			return default(ObjectSpawnFinishedMessage);
		}

		[Token(Token = "0x6002BA1")]
		[Address(RVA = "0x173E01C", Offset = "0x173E01C", VA = "0x173E01C")]
		public static void _Write_Mirror.ObjectSpawnFinishedMessage(NetworkWriter writer, ObjectSpawnFinishedMessage value)
		{
		}

		[Token(Token = "0x6002BA2")]
		[Address(RVA = "0x173E020", Offset = "0x173E020", VA = "0x173E020")]
		public static ObjectDestroyMessage _Read_Mirror.ObjectDestroyMessage(NetworkReader reader)
		{
			return default(ObjectDestroyMessage);
		}

		[Token(Token = "0x6002BA3")]
		[Address(RVA = "0x173E080", Offset = "0x173E080", VA = "0x173E080")]
		public static void _Write_Mirror.ObjectDestroyMessage(NetworkWriter writer, ObjectDestroyMessage value)
		{
		}

		[Token(Token = "0x6002BA4")]
		[Address(RVA = "0x173E0E8", Offset = "0x173E0E8", VA = "0x173E0E8")]
		public static ObjectHideMessage _Read_Mirror.ObjectHideMessage(NetworkReader reader)
		{
			return default(ObjectHideMessage);
		}

		[Token(Token = "0x6002BA5")]
		[Address(RVA = "0x173E148", Offset = "0x173E148", VA = "0x173E148")]
		public static void _Write_Mirror.ObjectHideMessage(NetworkWriter writer, ObjectHideMessage value)
		{
		}

		[Token(Token = "0x6002BA6")]
		[Address(RVA = "0x173E1B0", Offset = "0x173E1B0", VA = "0x173E1B0")]
		public static EntityStateMessage _Read_Mirror.EntityStateMessage(NetworkReader reader)
		{
			return default(EntityStateMessage);
		}

		[Token(Token = "0x6002BA7")]
		[Address(RVA = "0x173E25C", Offset = "0x173E25C", VA = "0x173E25C")]
		public static void _Write_Mirror.EntityStateMessage(NetworkWriter writer, EntityStateMessage value)
		{
		}

		[Token(Token = "0x6002BA8")]
		[Address(RVA = "0x173E2D8", Offset = "0x173E2D8", VA = "0x173E2D8")]
		public static NetworkPingMessage _Read_Mirror.NetworkPingMessage(NetworkReader reader)
		{
			return default(NetworkPingMessage);
		}

		[Token(Token = "0x6002BA9")]
		[Address(RVA = "0x173E330", Offset = "0x173E330", VA = "0x173E330")]
		public static void _Write_Mirror.NetworkPingMessage(NetworkWriter writer, NetworkPingMessage value)
		{
		}

		[Token(Token = "0x6002BAA")]
		[Address(RVA = "0x173E398", Offset = "0x173E398", VA = "0x173E398")]
		public static NetworkPongMessage _Read_Mirror.NetworkPongMessage(NetworkReader reader)
		{
			return default(NetworkPongMessage);
		}

		[Token(Token = "0x6002BAB")]
		[Address(RVA = "0x173E414", Offset = "0x173E414", VA = "0x173E414")]
		public static void _Write_Mirror.NetworkPongMessage(NetworkWriter writer, NetworkPongMessage value)
		{
		}

		[Token(Token = "0x6002BAC")]
		[Address(RVA = "0x173E490", Offset = "0x173E490", VA = "0x173E490")]
		public static TestController.ResultsMessage _Read_Testing.TestController/ResultsMessage(NetworkReader reader)
		{
			return default(TestController.ResultsMessage);
		}

		[Token(Token = "0x6002BAD")]
		[Address(RVA = "0x173E560", Offset = "0x173E560", VA = "0x173E560")]
		public static int[] _Read_System.Int32[](NetworkReader reader)
		{
			return null;
		}

		[Token(Token = "0x6002BAE")]
		[Address(RVA = "0x173E5CC", Offset = "0x173E5CC", VA = "0x173E5CC")]
		public static void _Write_Testing.TestController/ResultsMessage(NetworkWriter writer, TestController.ResultsMessage value)
		{
		}

		[Token(Token = "0x6002BAF")]
		[Address(RVA = "0x173E664", Offset = "0x173E664", VA = "0x173E664")]
		public static void _Write_System.Int32[](NetworkWriter writer, int[] value)
		{
		}

		[Token(Token = "0x6002BB0")]
		[Address(RVA = "0x173E6E0", Offset = "0x173E6E0", VA = "0x173E6E0")]
		public static AnatomyNetworkManager.CreatePlayerMessage _Read_Networking.AnatomyNetworkManager/CreatePlayerMessage(NetworkReader reader)
		{
			return default(AnatomyNetworkManager.CreatePlayerMessage);
		}

		[Token(Token = "0x6002BB1")]
		[Address(RVA = "0x173E730", Offset = "0x173E730", VA = "0x173E730")]
		public static AnatomyNetworkManager.SelectedRole _Read_Networking.AnatomyNetworkManager/SelectedRole(NetworkReader reader)
		{
			return default(AnatomyNetworkManager.SelectedRole);
		}

		[Token(Token = "0x6002BB2")]
		[Address(RVA = "0x173E788", Offset = "0x173E788", VA = "0x173E788")]
		public static AnatomyNetworkManager.ClientMode _Read_Networking.AnatomyNetworkManager/ClientMode(NetworkReader reader)
		{
			return default(AnatomyNetworkManager.ClientMode);
		}

		[Token(Token = "0x6002BB3")]
		[Address(RVA = "0x173E7E0", Offset = "0x173E7E0", VA = "0x173E7E0")]
		public static AnatomyNetworkManager.UserModel _Read_Networking.AnatomyNetworkManager/UserModel(NetworkReader reader)
		{
			return default(AnatomyNetworkManager.UserModel);
		}

		[Token(Token = "0x6002BB4")]
		[Address(RVA = "0x173E85C", Offset = "0x173E85C", VA = "0x173E85C")]
		public static void _Write_Networking.AnatomyNetworkManager/CreatePlayerMessage(NetworkWriter writer, AnatomyNetworkManager.CreatePlayerMessage value)
		{
		}

		[Token(Token = "0x6002BB5")]
		[Address(RVA = "0x173E894", Offset = "0x173E894", VA = "0x173E894")]
		public static void _Write_Networking.AnatomyNetworkManager/SelectedRole(NetworkWriter writer, AnatomyNetworkManager.SelectedRole value)
		{
		}

		[Token(Token = "0x6002BB6")]
		[Address(RVA = "0x173E8FC", Offset = "0x173E8FC", VA = "0x173E8FC")]
		public static void _Write_Networking.AnatomyNetworkManager/ClientMode(NetworkWriter writer, AnatomyNetworkManager.ClientMode value)
		{
		}

		[Token(Token = "0x6002BB7")]
		[Address(RVA = "0x173E964", Offset = "0x173E964", VA = "0x173E964")]
		public static void _Write_Networking.AnatomyNetworkManager/UserModel(NetworkWriter writer, AnatomyNetworkManager.UserModel value)
		{
		}

		[Token(Token = "0x6002BB8")]
		[Address(RVA = "0x173E9CC", Offset = "0x173E9CC", VA = "0x173E9CC")]
		public static MatchServerResponse _Read_Networking.Matchmaking.MatchServerResponse(NetworkReader reader)
		{
			return default(MatchServerResponse);
		}

		[Token(Token = "0x6002BB9")]
		[Address(RVA = "0x173EB20", Offset = "0x173EB20", VA = "0x173EB20")]
		public static ApplicationMode _Read_Networking.ApplicationMode(NetworkReader reader)
		{
			return default(ApplicationMode);
		}

		[Token(Token = "0x6002BBA")]
		[Address(RVA = "0x173EB78", Offset = "0x173EB78", VA = "0x173EB78")]
		public static void _Write_Networking.Matchmaking.MatchServerResponse(NetworkWriter writer, MatchServerResponse value)
		{
		}

		[Token(Token = "0x6002BBB")]
		[Address(RVA = "0x173EC74", Offset = "0x173EC74", VA = "0x173EC74")]
		public static void _Write_Networking.ApplicationMode(NetworkWriter writer, ApplicationMode value)
		{
		}

		[Token(Token = "0x6002BBC")]
		[Address(RVA = "0x173ECDC", Offset = "0x173ECDC", VA = "0x173ECDC")]
		public static MatchServerRequest _Read_Networking.Matchmaking.MatchServerRequest(NetworkReader reader)
		{
			return default(MatchServerRequest);
		}

		[Token(Token = "0x6002BBD")]
		[Address(RVA = "0x173ED34", Offset = "0x173ED34", VA = "0x173ED34")]
		public static void _Write_Networking.Matchmaking.MatchServerRequest(NetworkWriter writer, MatchServerRequest value)
		{
		}

		[Token(Token = "0x6002BBE")]
		[Address(RVA = "0x173ED9C", Offset = "0x173ED9C", VA = "0x173ED9C")]
		public static void _Write_UnityEngine.KeyCode(NetworkWriter writer, KeyCode value)
		{
		}

		[Token(Token = "0x6002BBF")]
		[Address(RVA = "0x173EE04", Offset = "0x173EE04", VA = "0x173EE04")]
		public static KeyCode _Read_UnityEngine.KeyCode(NetworkReader reader)
		{
			return default(KeyCode);
		}

		[Token(Token = "0x6002BC0")]
		[Address(RVA = "0x173EE5C", Offset = "0x173EE5C", VA = "0x173EE5C")]
		public static void _Write_Dicom.Networking.SerializableDicomModel(NetworkWriter writer, SerializableDicomModel value)
		{
		}

		[Token(Token = "0x6002BC1")]
		[Address(RVA = "0x173EF18", Offset = "0x173EF18", VA = "0x173EF18")]
		public static SerializableDicomModel _Read_Dicom.Networking.SerializableDicomModel(NetworkReader reader)
		{
			return default(SerializableDicomModel);
		}

		[Token(Token = "0x6002BC2")]
		[Address(RVA = "0x173F038", Offset = "0x173F038", VA = "0x173F038")]
		public static void _Write_Database.SystemType[](NetworkWriter writer, Database.SystemType[] value)
		{
		}

		[Token(Token = "0x6002BC3")]
		[Address(RVA = "0x173F0B4", Offset = "0x173F0B4", VA = "0x173F0B4")]
		public static void _Write_Database.SystemType(NetworkWriter writer, Database.SystemType value)
		{
		}

		[Token(Token = "0x6002BC4")]
		[Address(RVA = "0x173F11C", Offset = "0x173F11C", VA = "0x173F11C")]
		public static Database.SystemType[] _Read_Database.SystemType[](NetworkReader reader)
		{
			return null;
		}

		[Token(Token = "0x6002BC5")]
		[Address(RVA = "0x173F188", Offset = "0x173F188", VA = "0x173F188")]
		public static Database.SystemType _Read_Database.SystemType(NetworkReader reader)
		{
			return default(Database.SystemType);
		}

		[Token(Token = "0x6002BC6")]
		[Address(RVA = "0x173F1E0", Offset = "0x173F1E0", VA = "0x173F1E0")]
		public static void _Write_Database.DatabaseType(NetworkWriter writer, DatabaseType value)
		{
		}

		[Token(Token = "0x6002BC7")]
		[Address(RVA = "0x173F248", Offset = "0x173F248", VA = "0x173F248")]
		public static DatabaseType _Read_Database.DatabaseType(NetworkReader reader)
		{
			return default(DatabaseType);
		}

		[Token(Token = "0x6002BC8")]
		[Address(RVA = "0x173F2A0", Offset = "0x173F2A0", VA = "0x173F2A0")]
		public static void _Write_Database.LocationType(NetworkWriter writer, LocationType value)
		{
		}

		[Token(Token = "0x6002BC9")]
		[Address(RVA = "0x173F308", Offset = "0x173F308", VA = "0x173F308")]
		public static LocationType _Read_Database.LocationType(NetworkReader reader)
		{
			return default(LocationType);
		}

		[Token(Token = "0x6002BCA")]
		[Address(RVA = "0x173F360", Offset = "0x173F360", VA = "0x173F360")]
		public static void _Write_VR.Modules.DisassembleState(NetworkWriter writer, DisassembleState value)
		{
		}

		[Token(Token = "0x6002BCB")]
		[Address(RVA = "0x173F3C8", Offset = "0x173F3C8", VA = "0x173F3C8")]
		public static DisassembleState _Read_VR.Modules.DisassembleState(NetworkReader reader)
		{
			return default(DisassembleState);
		}

		[Token(Token = "0x6002BCC")]
		[Address(RVA = "0x173F420", Offset = "0x173F420", VA = "0x173F420")]
		public static void _Write_Database.SubpartType(NetworkWriter writer, SubpartType value)
		{
		}

		[Token(Token = "0x6002BCD")]
		[Address(RVA = "0x173F488", Offset = "0x173F488", VA = "0x173F488")]
		public static SubpartType _Read_Database.SubpartType(NetworkReader reader)
		{
			return default(SubpartType);
		}

		[Token(Token = "0x6002BCE")]
		[Address(RVA = "0x173F4E0", Offset = "0x173F4E0", VA = "0x173F4E0")]
		public static void _Write_VR.Input.Handedness(NetworkWriter writer, VR.Input.Handedness value)
		{
		}

		[Token(Token = "0x6002BCF")]
		[Address(RVA = "0x173F548", Offset = "0x173F548", VA = "0x173F548")]
		public static VR.Input.Handedness _Read_VR.Input.Handedness(NetworkReader reader)
		{
			return default(VR.Input.Handedness);
		}

		[Token(Token = "0x6002BD0")]
		[Address(RVA = "0x173F5A0", Offset = "0x173F5A0", VA = "0x173F5A0")]
		public static void _Write_VR.Networking.SerializedObjectInfo[](NetworkWriter writer, SerializedObjectInfo[] value)
		{
		}

		[Token(Token = "0x6002BD1")]
		[Address(RVA = "0x173F61C", Offset = "0x173F61C", VA = "0x173F61C")]
		public static SerializedObjectInfo[] _Read_VR.Networking.SerializedObjectInfo[](NetworkReader reader)
		{
			return null;
		}

		[Token(Token = "0x6002BD2")]
		[Address(RVA = "0x173F688", Offset = "0x173F688", VA = "0x173F688")]
		public static void _Write_VR.Networking.StartManipulationData(NetworkWriter writer, StartManipulationData value)
		{
		}

		[Token(Token = "0x6002BD3")]
		[Address(RVA = "0x173F6F0", Offset = "0x173F6F0", VA = "0x173F6F0")]
		public static StartManipulationData _Read_VR.Networking.StartManipulationData(NetworkReader reader)
		{
			return default(StartManipulationData);
		}

		[Token(Token = "0x6002BD4")]
		[Address(RVA = "0x173F750", Offset = "0x173F750", VA = "0x173F750")]
		public static void _Write_VR.Networking.StopManipulationData(NetworkWriter writer, StopManipulationData value)
		{
		}

		[Token(Token = "0x6002BD5")]
		[Address(RVA = "0x173F820", Offset = "0x173F820", VA = "0x173F820")]
		public static StopManipulationData _Read_VR.Networking.StopManipulationData(NetworkReader reader)
		{
			return default(StopManipulationData);
		}

		[Token(Token = "0x6002BD6")]
		[Address(RVA = "0x173F974", Offset = "0x173F974", VA = "0x173F974")]
		public static void _Write_VR.Modules.SerializableAnswer[](NetworkWriter writer, SerializableAnswer[] value)
		{
		}

		[Token(Token = "0x6002BD7")]
		[Address(RVA = "0x173F9F0", Offset = "0x173F9F0", VA = "0x173F9F0")]
		public static void _Write_VR.Modules.SerializableAnswer(NetworkWriter writer, SerializableAnswer value)
		{
		}

		[Token(Token = "0x6002BD8")]
		[Address(RVA = "0x173FAAC", Offset = "0x173FAAC", VA = "0x173FAAC")]
		public static SerializableAnswer[] _Read_VR.Modules.SerializableAnswer[](NetworkReader reader)
		{
			return null;
		}

		[Token(Token = "0x6002BD9")]
		[Address(RVA = "0x173FB18", Offset = "0x173FB18", VA = "0x173FB18")]
		public static SerializableAnswer _Read_VR.Modules.SerializableAnswer(NetworkReader reader)
		{
			return null;
		}

		[Token(Token = "0x6002BDA")]
		[Address(RVA = "0x173FBFC", Offset = "0x173FBFC", VA = "0x173FBFC")]
		public static void _Write_Avatars.Avatar(NetworkWriter writer, Avatars.Avatar value)
		{
		}

		[Token(Token = "0x6002BDB")]
		[Address(RVA = "0x173FD0C", Offset = "0x173FD0C", VA = "0x173FD0C")]
		public static void _Write_Avatars.HeadShape(NetworkWriter writer, HeadShape value)
		{
		}

		[Token(Token = "0x6002BDC")]
		[Address(RVA = "0x173FD74", Offset = "0x173FD74", VA = "0x173FD74")]
		public static void _Write_Avatars.BodyShape(NetworkWriter writer, BodyShape value)
		{
		}

		[Token(Token = "0x6002BDD")]
		[Address(RVA = "0x173FDDC", Offset = "0x173FDDC", VA = "0x173FDDC")]
		public static void _Write_Avatars.Hairstyle(NetworkWriter writer, Hairstyle value)
		{
		}

		[Token(Token = "0x6002BDE")]
		[Address(RVA = "0x173FE44", Offset = "0x173FE44", VA = "0x173FE44")]
		public static void _Write_Avatars.Outfit(NetworkWriter writer, Outfit value)
		{
		}

		[Token(Token = "0x6002BDF")]
		[Address(RVA = "0x173FEAC", Offset = "0x173FEAC", VA = "0x173FEAC")]
		public static void _Write_Avatars.Neckwear(NetworkWriter writer, Neckwear value)
		{
		}

		[Token(Token = "0x6002BE0")]
		[Address(RVA = "0x173FF14", Offset = "0x173FF14", VA = "0x173FF14")]
		public static void _Write_Avatars.Eyewear(NetworkWriter writer, Eyewear value)
		{
		}

		[Token(Token = "0x6002BE1")]
		[Address(RVA = "0x173FF7C", Offset = "0x173FF7C", VA = "0x173FF7C")]
		public static Avatars.Avatar _Read_Avatars.Avatar(NetworkReader reader)
		{
			return default(Avatars.Avatar);
		}

		[Token(Token = "0x6002BE2")]
		[Address(RVA = "0x17400F8", Offset = "0x17400F8", VA = "0x17400F8")]
		public static HeadShape _Read_Avatars.HeadShape(NetworkReader reader)
		{
			return default(HeadShape);
		}

		[Token(Token = "0x6002BE3")]
		[Address(RVA = "0x1740150", Offset = "0x1740150", VA = "0x1740150")]
		public static BodyShape _Read_Avatars.BodyShape(NetworkReader reader)
		{
			return default(BodyShape);
		}

		[Token(Token = "0x6002BE4")]
		[Address(RVA = "0x17401A8", Offset = "0x17401A8", VA = "0x17401A8")]
		public static Hairstyle _Read_Avatars.Hairstyle(NetworkReader reader)
		{
			return default(Hairstyle);
		}

		[Token(Token = "0x6002BE5")]
		[Address(RVA = "0x1740200", Offset = "0x1740200", VA = "0x1740200")]
		public static Outfit _Read_Avatars.Outfit(NetworkReader reader)
		{
			return default(Outfit);
		}

		[Token(Token = "0x6002BE6")]
		[Address(RVA = "0x1740258", Offset = "0x1740258", VA = "0x1740258")]
		public static Neckwear _Read_Avatars.Neckwear(NetworkReader reader)
		{
			return default(Neckwear);
		}

		[Token(Token = "0x6002BE7")]
		[Address(RVA = "0x17402B0", Offset = "0x17402B0", VA = "0x17402B0")]
		public static Eyewear _Read_Avatars.Eyewear(NetworkReader reader)
		{
			return default(Eyewear);
		}

		[Token(Token = "0x6002BE8")]
		[Address(RVA = "0x1740308", Offset = "0x1740308", VA = "0x1740308")]
		public static void _Write_Views.EnvironmentType(NetworkWriter writer, EnvironmentType value)
		{
		}

		[Token(Token = "0x6002BE9")]
		[Address(RVA = "0x1740370", Offset = "0x1740370", VA = "0x1740370")]
		public static EnvironmentType _Read_Views.EnvironmentType(NetworkReader reader)
		{
			return default(EnvironmentType);
		}

		[Token(Token = "0x6002BEA")]
		[Address(RVA = "0x17403C8", Offset = "0x17403C8", VA = "0x17403C8")]
		public static void _Write_Mobile.Networking.NetworkMobileModuleProvider/ClientInfo(NetworkWriter writer, NetworkMobileModuleProvider.ClientInfo value)
		{
		}

		[Token(Token = "0x6002BEB")]
		[Address(RVA = "0x1740430", Offset = "0x1740430", VA = "0x1740430")]
		public static NetworkMobileModuleProvider.ClientInfo _Read_Mobile.Networking.NetworkMobileModuleProvider/ClientInfo(NetworkReader reader)
		{
			return default(NetworkMobileModuleProvider.ClientInfo);
		}

		[Token(Token = "0x6002BEC")]
		[Address(RVA = "0x1740490", Offset = "0x1740490", VA = "0x1740490")]
		public static void _Write_Mobile.Networking.NetworkMobileModuleProvider/SerializableMobileAnatomyModel(NetworkWriter writer, NetworkMobileModuleProvider.SerializableMobileAnatomyModel value)
		{
		}

		[Token(Token = "0x6002BED")]
		[Address(RVA = "0x1740554", Offset = "0x1740554", VA = "0x1740554")]
		public static void _Write_Mobile.Networking.NetworkMobileModuleProvider/SerializableAnatomyItem(NetworkWriter writer, NetworkMobileModuleProvider.SerializableAnatomyItem value)
		{
		}

		[Token(Token = "0x6002BEE")]
		[Address(RVA = "0x17405F0", Offset = "0x17405F0", VA = "0x17405F0")]
		public static void _Write_Mobile.Networking.NetworkMobileModuleProvider/SerializableSubpart(NetworkWriter writer, NetworkMobileModuleProvider.SerializableSubpart value)
		{
		}

		[Token(Token = "0x6002BEF")]
		[Address(RVA = "0x17406A8", Offset = "0x17406A8", VA = "0x17406A8")]
		public static void _Write_Mobile.Networking.NetworkMobileModuleProvider/SerializableMobileAnatomySystemModel[](NetworkWriter writer, NetworkMobileModuleProvider.SerializableMobileAnatomySystemModel[] value)
		{
		}

		[Token(Token = "0x6002BF0")]
		[Address(RVA = "0x1740724", Offset = "0x1740724", VA = "0x1740724")]
		public static void _Write_Mobile.Networking.NetworkMobileModuleProvider/SerializableMobileAnatomySystemModel(NetworkWriter writer, NetworkMobileModuleProvider.SerializableMobileAnatomySystemModel value)
		{
		}

		[Token(Token = "0x6002BF1")]
		[Address(RVA = "0x174079C", Offset = "0x174079C", VA = "0x174079C")]
		public static void _Write_Mobile.Networking.NetworkMobileModuleProvider/SerializableAnatomyItem[](NetworkWriter writer, NetworkMobileModuleProvider.SerializableAnatomyItem[] value)
		{
		}

		[Token(Token = "0x6002BF2")]
		[Address(RVA = "0x1740818", Offset = "0x1740818", VA = "0x1740818")]
		public static NetworkMobileModuleProvider.SerializableMobileAnatomyModel _Read_Mobile.Networking.NetworkMobileModuleProvider/SerializableMobileAnatomyModel(NetworkReader reader)
		{
			return default(NetworkMobileModuleProvider.SerializableMobileAnatomyModel);
		}

		[Token(Token = "0x6002BF3")]
		[Address(RVA = "0x1740954", Offset = "0x1740954", VA = "0x1740954")]
		public static NetworkMobileModuleProvider.SerializableAnatomyItem _Read_Mobile.Networking.NetworkMobileModuleProvider/SerializableAnatomyItem(NetworkReader reader)
		{
			return null;
		}

		[Token(Token = "0x6002BF4")]
		[Address(RVA = "0x1740A0C", Offset = "0x1740A0C", VA = "0x1740A0C")]
		public static NetworkMobileModuleProvider.SerializableSubpart _Read_Mobile.Networking.NetworkMobileModuleProvider/SerializableSubpart(NetworkReader reader)
		{
			return null;
		}

		[Token(Token = "0x6002BF5")]
		[Address(RVA = "0x1740AE0", Offset = "0x1740AE0", VA = "0x1740AE0")]
		public static NetworkMobileModuleProvider.SerializableMobileAnatomySystemModel[] _Read_Mobile.Networking.NetworkMobileModuleProvider/SerializableMobileAnatomySystemModel[](NetworkReader reader)
		{
			return null;
		}

		[Token(Token = "0x6002BF6")]
		[Address(RVA = "0x1740B4C", Offset = "0x1740B4C", VA = "0x1740B4C")]
		public static NetworkMobileModuleProvider.SerializableMobileAnatomySystemModel _Read_Mobile.Networking.NetworkMobileModuleProvider/SerializableMobileAnatomySystemModel(NetworkReader reader)
		{
			return default(NetworkMobileModuleProvider.SerializableMobileAnatomySystemModel);
		}

		[Token(Token = "0x6002BF7")]
		[Address(RVA = "0x1740BC0", Offset = "0x1740BC0", VA = "0x1740BC0")]
		public static NetworkMobileModuleProvider.SerializableAnatomyItem[] _Read_Mobile.Networking.NetworkMobileModuleProvider/SerializableAnatomyItem[](NetworkReader reader)
		{
			return null;
		}

		[Token(Token = "0x6002BF8")]
		[Address(RVA = "0x1740C2C", Offset = "0x1740C2C", VA = "0x1740C2C")]
		[RuntimeInitializeOnLoadMethod(RuntimeInitializeLoadType.BeforeSceneLoad)]
		public static void InitReadWriters()
		{
		}
	}
}
