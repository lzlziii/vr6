using System;
using System.Collections;
using System.Collections.Generic;
using System.Diagnostics;
using System.IO;
using System.Net.Sockets;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Runtime.Serialization;
using System.Text;
using System.Threading;
using System.Xml;
using DG.Tweening;
using DG.Tweening.Core;
using DG.Tweening.Plugins.Core.PathCore;
using DG.Tweening.Plugins.Options;
using DarkTonic.MasterAudio;
using DeviceNetwork;
using Dreamteck.Splines;
using GameAnalyticsSDK.Setup;
using Il2CppDummyDll;
using JetBrains.Annotations;
using Oculus.Spatializer.Propagation;
using PlayFab;
using PlayFab.ClientModels;
using Pool;
using UnityEngine;
using UnityEngine.AddressableAssets;
using UnityEngine.Audio;
using UnityEngine.EventSystems;
using UnityEngine.Events;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.UI;
using UnityEngine.InputSystem.Utilities;
using UnityEngine.Networking;
using UnityEngine.Profiling;
using UnityEngine.ResourceManagement.AsyncOperations;
using UnityEngine.ResourceManagement.ResourceLocations;
using UnityEngine.ResourceManagement.ResourceProviders;
using UnityEngine.SceneManagement;
using UnityEngine.Scripting;
using UnityEngine.SpatialTracking;
using UnityEngine.UI;
using UnityEngine.XR;
using Zooma;
using Zooma.Input;

[assembly: AssemblyVersion("0.0.0.0")]
[Token(Token = "0x2000002")]
public class GAFyberIntegration
{
	[Token(Token = "0x6000001")]
	[Address(RVA = "0x342DBB0", Offset = "0x342DBB0", VA = "0x342DBB0")]
	public static void ListenForImpressions(Action<string> callback)
	{
	}

	[Token(Token = "0x6000002")]
	[Address(RVA = "0x342DD78", Offset = "0x342DD78", VA = "0x342DD78")]
	public GAFyberIntegration()
	{
	}
}
[Token(Token = "0x2000003")]
public class GAMopubIntegration
{
	[Token(Token = "0x6000003")]
	[Address(RVA = "0x342DE68", Offset = "0x342DE68", VA = "0x342DE68")]
	public static void ListenForImpressions(Action<string> callback)
	{
	}

	[Token(Token = "0x6000004")]
	[Address(RVA = "0x342E038", Offset = "0x342E038", VA = "0x342E038")]
	public GAMopubIntegration()
	{
	}
}
[Token(Token = "0x2000004")]
public class OVRMetricsToolSDK : MonoBehaviour
{
	[Token(Token = "0x4000001")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static AndroidJavaClass _MetricsService;

	[Token(Token = "0x4000002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static AndroidJavaObject _Context;

	[Token(Token = "0x4000003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static bool _IsBound;

	[Token(Token = "0x4000004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static OVRMetricsToolSDK _Instance;

	[Token(Token = "0x17000001")]
	public static OVRMetricsToolSDK Instance
	{
		[Token(Token = "0x6000005")]
		[Address(RVA = "0x19DC4A0", Offset = "0x19DC4A0", VA = "0x19DC4A0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000006")]
	[Address(RVA = "0x19DCBF8", Offset = "0x19DCBF8", VA = "0x19DCBF8")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xD00B74", Offset = "0xD00B74")]
	private static void InitJava()
	{
	}

	[Token(Token = "0x6000007")]
	[Address(RVA = "0x19DE174", Offset = "0x19DE174", VA = "0x19DE174")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000008")]
	[Address(RVA = "0x19DE9D4", Offset = "0x19DE9D4", VA = "0x19DE9D4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000009")]
	[Address(RVA = "0x19DF0F0", Offset = "0x19DF0F0", VA = "0x19DF0F0")]
	private void OnApplicationPause(bool pause)
	{
	}

	[Token(Token = "0x600000A")]
	[Address(RVA = "0x19DE3DC", Offset = "0x19DE3DC", VA = "0x19DE3DC")]
	private void Bind()
	{
	}

	[Token(Token = "0x600000B")]
	[Address(RVA = "0x19DEC3C", Offset = "0x19DEC3C", VA = "0x19DEC3C")]
	private void Shutdown()
	{
	}

	[Token(Token = "0x600000C")]
	[Address(RVA = "0x19DF5AC", Offset = "0x19DF5AC", VA = "0x19DF5AC")]
	public bool AppendCsvDebugString(string debugString)
	{
		return default(bool);
	}

	[Token(Token = "0x600000D")]
	[Address(RVA = "0x19DFC70", Offset = "0x19DFC70", VA = "0x19DFC70")]
	public bool SetOverlayDebugString(string debugString)
	{
		return default(bool);
	}

	[Token(Token = "0x600000E")]
	[Address(RVA = "0x19E1394", Offset = "0x19E1394", VA = "0x19E1394")]
	public OVRMetricsToolSDK()
	{
	}
}
[Token(Token = "0x2000005")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xCF8658", Offset = "0xCF8658")]
public class MouseLook : MonoBehaviour
{
	[Token(Token = "0x200015C")]
	public enum RotationAxes
	{
		[Token(Token = "0x40006BA")]
		MouseXAndY,
		[Token(Token = "0x40006BB")]
		MouseX,
		[Token(Token = "0x40006BC")]
		MouseY
	}

	[Token(Token = "0x4000005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RotationAxes axes;

	[Token(Token = "0x4000006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float sensitivityX;

	[Token(Token = "0x4000007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float sensitivityY;

	[Token(Token = "0x4000008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float minimumX;

	[Token(Token = "0x4000009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maximumX;

	[Token(Token = "0x400000A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float minimumY;

	[Token(Token = "0x400000B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float maximumY;

	[Token(Token = "0x400000C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float rotationY;

	[Token(Token = "0x6000010")]
	[Address(RVA = "0x218812C", Offset = "0x218812C", VA = "0x218812C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000011")]
	[Address(RVA = "0x2189240", Offset = "0x2189240", VA = "0x2189240")]
	private void Start()
	{
	}

	[Token(Token = "0x6000012")]
	[Address(RVA = "0x2189710", Offset = "0x2189710", VA = "0x2189710")]
	public MouseLook()
	{
	}
}
[Token(Token = "0x2000006")]
public class ONSPAmbisonicsNative : MonoBehaviour
{
	[Token(Token = "0x200015D")]
	public enum ovrAmbisonicsNativeStatus
	{
		[Token(Token = "0x40006BE")]
		Uninitialized = -1,
		[Token(Token = "0x40006BF")]
		NotEnabled,
		[Token(Token = "0x40006C0")]
		Success,
		[Token(Token = "0x40006C1")]
		StreamError,
		[Token(Token = "0x40006C2")]
		ProcessError,
		[Token(Token = "0x40006C3")]
		MaxStatValue
	}

	[Token(Token = "0x400000D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private AudioSource source;

	[Token(Token = "0x400000E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int numFOAChannels;

	[Token(Token = "0x400000F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static int paramVSpeakerMode;

	[Token(Token = "0x4000010")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static int paramAmbiStat;

	[Token(Token = "0x4000011")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ovrAmbisonicsNativeStatus currentStatus;

	[Token(Token = "0x4000012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private bool useVirtualSpeakers;

	[Token(Token = "0x17000002")]
	public bool UseVirtualSpeakers
	{
		[Token(Token = "0x6000013")]
		[Address(RVA = "0x218FED4", Offset = "0x218FED4", VA = "0x218FED4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000014")]
		[Address(RVA = "0x2190128", Offset = "0x2190128", VA = "0x2190128")]
		set
		{
		}
	}

	[Token(Token = "0x6000015")]
	[Address(RVA = "0x2190388", Offset = "0x2190388", VA = "0x2190388")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000016")]
	[Address(RVA = "0x2191498", Offset = "0x2191498", VA = "0x2191498")]
	private void Update()
	{
	}

	[Token(Token = "0x6000017")]
	[Address(RVA = "0x21925BC", Offset = "0x21925BC", VA = "0x21925BC")]
	public ONSPAmbisonicsNative()
	{
	}
}
[Token(Token = "0x2000007")]
public class ONSPAudioSource : MonoBehaviour
{
	[Token(Token = "0x200015E")]
	private enum Parameters
	{
		[Token(Token = "0x40006C5")]
		P_GAIN,
		[Token(Token = "0x40006C6")]
		P_USEINVSQR,
		[Token(Token = "0x40006C7")]
		P_NEAR,
		[Token(Token = "0x40006C8")]
		P_FAR,
		[Token(Token = "0x40006C9")]
		P_RADIUS,
		[Token(Token = "0x40006CA")]
		P_DISABLE_RFL,
		[Token(Token = "0x40006CB")]
		P_VSPEAKERMODE,
		[Token(Token = "0x40006CC")]
		P_AMBISTAT,
		[Token(Token = "0x40006CD")]
		P_READONLY_GLOBAL_RFL_ENABLED,
		[Token(Token = "0x40006CE")]
		P_READONLY_NUM_VOICES,
		[Token(Token = "0x40006CF")]
		P_SENDLEVEL,
		[Token(Token = "0x40006D0")]
		P_NUM
	}

	[Token(Token = "0x4000013")]
	public const string strONSPS = "AudioPluginOculusSpatializer";

	[Token(Token = "0x4000014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool enableSpatialization;

	[Token(Token = "0x4000015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float gain;

	[Token(Token = "0x4000016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private bool useInvSqr;

	[Token(Token = "0x4000017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float near;

	[Token(Token = "0x4000018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float far;

	[Token(Token = "0x4000019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private float volumetricRadius;

	[Token(Token = "0x400001A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float reverbSend;

	[Token(Token = "0x400001B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private bool enableRfl;

	[Token(Token = "0x400001C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ONSPAudioSource RoomReflectionGizmoAS;

	[Token(Token = "0x17000003")]
	public bool EnableSpatialization
	{
		[Token(Token = "0x600001B")]
		[Address(RVA = "0x2192F14", Offset = "0x2192F14", VA = "0x2192F14")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600001C")]
		[Address(RVA = "0x2193168", Offset = "0x2193168", VA = "0x2193168")]
		set
		{
		}
	}

	[Token(Token = "0x17000004")]
	public float Gain
	{
		[Token(Token = "0x600001D")]
		[Address(RVA = "0x21933C8", Offset = "0x21933C8", VA = "0x21933C8")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600001E")]
		[Address(RVA = "0x219361C", Offset = "0x219361C", VA = "0x219361C")]
		set
		{
		}
	}

	[Token(Token = "0x17000005")]
	public bool UseInvSqr
	{
		[Token(Token = "0x600001F")]
		[Address(RVA = "0x219391C", Offset = "0x219391C", VA = "0x219391C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000020")]
		[Address(RVA = "0x2193B70", Offset = "0x2193B70", VA = "0x2193B70")]
		set
		{
		}
	}

	[Token(Token = "0x17000006")]
	public float Near
	{
		[Token(Token = "0x6000021")]
		[Address(RVA = "0x2193DD0", Offset = "0x2193DD0", VA = "0x2193DD0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000022")]
		[Address(RVA = "0x2194024", Offset = "0x2194024", VA = "0x2194024")]
		set
		{
		}
	}

	[Token(Token = "0x17000007")]
	public float Far
	{
		[Token(Token = "0x6000023")]
		[Address(RVA = "0x2194328", Offset = "0x2194328", VA = "0x2194328")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000024")]
		[Address(RVA = "0x219457C", Offset = "0x219457C", VA = "0x219457C")]
		set
		{
		}
	}

	[Token(Token = "0x17000008")]
	public float VolumetricRadius
	{
		[Token(Token = "0x6000025")]
		[Address(RVA = "0x2194880", Offset = "0x2194880", VA = "0x2194880")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000026")]
		[Address(RVA = "0x2194AD4", Offset = "0x2194AD4", VA = "0x2194AD4")]
		set
		{
		}
	}

	[Token(Token = "0x17000009")]
	public float ReverbSend
	{
		[Token(Token = "0x6000027")]
		[Address(RVA = "0x2194DD8", Offset = "0x2194DD8", VA = "0x2194DD8")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000028")]
		[Address(RVA = "0x219502C", Offset = "0x219502C", VA = "0x219502C")]
		set
		{
		}
	}

	[Token(Token = "0x1700000A")]
	public bool EnableRfl
	{
		[Token(Token = "0x6000029")]
		[Address(RVA = "0x2195330", Offset = "0x2195330", VA = "0x2195330")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600002A")]
		[Address(RVA = "0x2195584", Offset = "0x2195584", VA = "0x2195584")]
		set
		{
		}
	}

	[Token(Token = "0x6000019")]
	[Address(RVA = "0x2192A8C", Offset = "0x2192A8C", VA = "0x2192A8C")]
	[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0xD00BAC", Offset = "0xD00BAC")]
	private static void OnBeforeSceneLoadRuntimeMethod()
	{
	}

	[PreserveSig]
	[Token(Token = "0x600001A")]
	[Address(RVA = "0x2192E34", Offset = "0x2192E34", VA = "0x2192E34")]
	private static extern void ONSP_GetGlobalRoomReflectionValues(ref bool reflOn, ref bool reverbOn, ref float width, ref float height, ref float length);

	[Token(Token = "0x600002B")]
	[Address(RVA = "0x21957E4", Offset = "0x21957E4", VA = "0x21957E4")]
	private void Awake()
	{
	}

	[Token(Token = "0x600002C")]
	[Address(RVA = "0x21966EC", Offset = "0x21966EC", VA = "0x21966EC")]
	private void Start()
	{
	}

	[Token(Token = "0x600002D")]
	[Address(RVA = "0x21968DC", Offset = "0x21968DC", VA = "0x21968DC")]
	private void Update()
	{
	}

	[Token(Token = "0x600002E")]
	[Address(RVA = "0x2195B60", Offset = "0x2195B60", VA = "0x2195B60")]
	public void SetParameters(ref AudioSource source)
	{
	}

	[Token(Token = "0x600002F")]
	[Address(RVA = "0x21970F4", Offset = "0x21970F4", VA = "0x21970F4")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000030")]
	[Address(RVA = "0x2199CD8", Offset = "0x2199CD8", VA = "0x2199CD8")]
	private void OnDestroy()
	{
	}

	[PreserveSig]
	[Token(Token = "0x6000031")]
	[Address(RVA = "0x2192DB4", Offset = "0x2192DB4", VA = "0x2192DB4")]
	private static extern int OSP_SetGlobalVoiceLimit(int VoiceLimit);

	[Token(Token = "0x6000032")]
	[Address(RVA = "0x219A148", Offset = "0x219A148", VA = "0x219A148")]
	public ONSPAudioSource()
	{
	}
}
[Token(Token = "0x2000008")]
public class ONSPProfiler : MonoBehaviour
{
	[Token(Token = "0x400001D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool profilerEnabled;

	[Token(Token = "0x400001E")]
	private const int DEFAULT_PORT = 2121;

	[Token(Token = "0x400001F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int port;

	[Token(Token = "0x4000020")]
	public const string strONSPS = "AudioPluginOculusSpatializer";

	[Token(Token = "0x6000034")]
	[Address(RVA = "0x219A76C", Offset = "0x219A76C", VA = "0x219A76C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000035")]
	[Address(RVA = "0x219AA18", Offset = "0x219AA18", VA = "0x219AA18")]
	private void Update()
	{
	}

	[PreserveSig]
	[Token(Token = "0x6000036")]
	[Address(RVA = "0x219AFB0", Offset = "0x219AFB0", VA = "0x219AFB0")]
	private static extern int ONSP_SetProfilerEnabled(bool enabled);

	[PreserveSig]
	[Token(Token = "0x6000037")]
	[Address(RVA = "0x219AF30", Offset = "0x219AF30", VA = "0x219AF30")]
	private static extern int ONSP_SetProfilerPort(int port);

	[Token(Token = "0x6000038")]
	[Address(RVA = "0x219B030", Offset = "0x219B030", VA = "0x219B030")]
	public ONSPProfiler()
	{
	}
}
[Token(Token = "0x2000009")]
public class ONSPPropagationGeometry : MonoBehaviour
{
	[Token(Token = "0x200015F")]
	private struct MeshMaterial
	{
		[Token(Token = "0x40006D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public MeshFilter meshFilter;

		[Token(Token = "0x40006D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ONSPPropagationMaterial[] materials;
	}

	[Token(Token = "0x2000160")]
	private struct TerrainMaterial
	{
		[Token(Token = "0x40006D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Terrain terrain;

		[Token(Token = "0x40006D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ONSPPropagationMaterial[] materials;

		[Token(Token = "0x40006D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Mesh[] treePrototypeMeshes;
	}

	[Token(Token = "0x4000021")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string GeometryAssetDirectory;

	[Token(Token = "0x4000022")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string filePathRelative;

	[Token(Token = "0x4000023")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool fileEnabled;

	[Token(Token = "0x4000024")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool includeChildMeshes;

	[Token(Token = "0x4000025")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private IntPtr geometryHandle;

	[Token(Token = "0x4000026")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int OSPSuccess;

	[Token(Token = "0x4000027")]
	public const string GEOMETRY_FILE_EXTENSION = "ovramesh";

	[Token(Token = "0x4000028")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static int terrainDecimation;

	[Token(Token = "0x1700000B")]
	public static string GeometryAssetPath
	{
		[Token(Token = "0x6000039")]
		[Address(RVA = "0x21A8158", Offset = "0x21A8158", VA = "0x21A8158")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700000C")]
	public string filePath
	{
		[Token(Token = "0x600003A")]
		[Address(RVA = "0x21A84A4", Offset = "0x21A84A4", VA = "0x21A84A4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600003B")]
	[Address(RVA = "0x21A87F0", Offset = "0x21A87F0", VA = "0x21A87F0")]
	private static string GetPath(Transform current)
	{
		return null;
	}

	[Token(Token = "0x600003C")]
	[Address(RVA = "0x21A90AC", Offset = "0x21A90AC", VA = "0x21A90AC")]
	private void Awake()
	{
	}

	[Token(Token = "0x600003D")]
	[Address(RVA = "0x21A9354", Offset = "0x21A9354", VA = "0x21A9354")]
	private void CreatePropagationGeometry()
	{
	}

	[Token(Token = "0x600003E")]
	[Address(RVA = "0x21AB4E4", Offset = "0x21AB4E4", VA = "0x21AB4E4")]
	private void Update()
	{
	}

	[Token(Token = "0x600003F")]
	[Address(RVA = "0x21AC528", Offset = "0x21AC528", VA = "0x21AC528")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000040")]
	[Address(RVA = "0x21ACB50", Offset = "0x21ACB50", VA = "0x21ACB50")]
	private static void traverseMeshHierarchy(GameObject obj, ONSPPropagationMaterial[] currentMaterials, bool includeChildren, List<MeshMaterial> meshMaterials, List<TerrainMaterial> terrainMaterials, bool ignoreStatic, ref int ignoredMeshCount)
	{
	}

	[Token(Token = "0x6000041")]
	[Address(RVA = "0x21AFB84", Offset = "0x21AFB84", VA = "0x21AFB84")]
	private int uploadMesh(IntPtr geometryHandle, GameObject meshObject, Matrix4x4 worldToLocal)
	{
		return default(int);
	}

	[Token(Token = "0x6000042")]
	[Address(RVA = "0x21AFEDC", Offset = "0x21AFEDC", VA = "0x21AFEDC")]
	private int uploadMesh(IntPtr geometryHandle, GameObject meshObject, Matrix4x4 worldToLocal, bool ignoreStatic, ref int ignoredMeshCount)
	{
		return default(int);
	}

	[Token(Token = "0x6000043")]
	[Address(RVA = "0x21BA8F0", Offset = "0x21BA8F0", VA = "0x21BA8F0")]
	private static void uploadMeshFilter(List<Vector3> tempVertices, List<int> tempIndices, MeshGroup[] groups, float[] vertices, int[] indices, ref int vertexOffset, ref int indexOffset, ref int groupOffset, Mesh mesh, ONSPPropagationMaterial[] materials, Matrix4x4 matrix)
	{
	}

	[Token(Token = "0x6000044")]
	[Address(RVA = "0x21B9C88", Offset = "0x21B9C88", VA = "0x21B9C88")]
	private static void updateCountsForMesh(ref int totalVertexCount, ref uint totalIndexCount, ref int totalFaceCount, ref int totalMaterialCount, Mesh mesh)
	{
	}

	[Token(Token = "0x6000045")]
	[Address(RVA = "0x21AAB2C", Offset = "0x21AAB2C", VA = "0x21AAB2C")]
	public void UploadGeometry()
	{
	}

	[Token(Token = "0x6000046")]
	[Address(RVA = "0x21AA05C", Offset = "0x21AA05C", VA = "0x21AA05C")]
	public bool ReadFile()
	{
		return default(bool);
	}

	[Token(Token = "0x6000047")]
	[Address(RVA = "0x21BD46C", Offset = "0x21BD46C", VA = "0x21BD46C")]
	public bool WriteToObj()
	{
		return default(bool);
	}

	[Token(Token = "0x6000048")]
	[Address(RVA = "0x21BE934", Offset = "0x21BE934", VA = "0x21BE934")]
	public ONSPPropagationGeometry()
	{
	}
}
[Token(Token = "0x200000A")]
internal class ONSPPropagation
{
	[Token(Token = "0x2000161")]
	public enum ovrAudioScalarType : uint
	{
		[Token(Token = "0x40006D7")]
		Int8,
		[Token(Token = "0x40006D8")]
		UInt8,
		[Token(Token = "0x40006D9")]
		Int16,
		[Token(Token = "0x40006DA")]
		UInt16,
		[Token(Token = "0x40006DB")]
		Int32,
		[Token(Token = "0x40006DC")]
		UInt32,
		[Token(Token = "0x40006DD")]
		Int64,
		[Token(Token = "0x40006DE")]
		UInt64,
		[Token(Token = "0x40006DF")]
		Float16,
		[Token(Token = "0x40006E0")]
		Float32,
		[Token(Token = "0x40006E1")]
		Float64
	}

	[Token(Token = "0x2000162")]
	public class ClientType
	{
		[Token(Token = "0x40006E2")]
		public const uint OVRA_CLIENT_TYPE_NATIVE = 0u;

		[Token(Token = "0x40006E3")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2016 = 1u;

		[Token(Token = "0x40006E4")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2017_1 = 2u;

		[Token(Token = "0x40006E5")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2017_2 = 3u;

		[Token(Token = "0x40006E6")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2018_1 = 4u;

		[Token(Token = "0x40006E7")]
		public const uint OVRA_CLIENT_TYPE_FMOD = 5u;

		[Token(Token = "0x40006E8")]
		public const uint OVRA_CLIENT_TYPE_UNITY = 6u;

		[Token(Token = "0x40006E9")]
		public const uint OVRA_CLIENT_TYPE_UE4 = 7u;

		[Token(Token = "0x40006EA")]
		public const uint OVRA_CLIENT_TYPE_VST = 8u;

		[Token(Token = "0x40006EB")]
		public const uint OVRA_CLIENT_TYPE_AAX = 9u;

		[Token(Token = "0x40006EC")]
		public const uint OVRA_CLIENT_TYPE_TEST = 10u;

		[Token(Token = "0x40006ED")]
		public const uint OVRA_CLIENT_TYPE_OTHER = 11u;

		[Token(Token = "0x40006EE")]
		public const uint OVRA_CLIENT_TYPE_WWISE_UNKNOWN = 12u;

		[Token(Token = "0x40006EF")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2019_1 = 13u;

		[Token(Token = "0x40006F0")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2019_2 = 14u;

		[Token(Token = "0x6000B05")]
		[Address(RVA = "0x219CAE8", Offset = "0x219CAE8", VA = "0x219CAE8")]
		public ClientType()
		{
		}
	}

	[Token(Token = "0x2000163")]
	public interface PropagationInterface
	{
		[Token(Token = "0x6000B06")]
		int SetPropagationQuality(float quality);

		[Token(Token = "0x6000B07")]
		int SetPropagationThreadAffinity(ulong cpuMask);

		[Token(Token = "0x6000B08")]
		int CreateAudioGeometry(out IntPtr geometry);

		[Token(Token = "0x6000B09")]
		int DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x6000B0A")]
		int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount);

		[Token(Token = "0x6000B0B")]
		int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x6000B0C")]
		int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x6000B0D")]
		int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6000B0E")]
		int AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6000B0F")]
		int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x6000B10")]
		int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x6000B11")]
		int CreateAudioMaterial(out IntPtr material);

		[Token(Token = "0x6000B12")]
		int DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x6000B13")]
		int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x6000B14")]
		int AudioMaterialReset(IntPtr material, MaterialProperty property);
	}

	[Token(Token = "0x2000164")]
	public class UnityNativeInterface : PropagationInterface
	{
		[Token(Token = "0x40006F1")]
		public const string strOSPS = "AudioPluginOculusSpatializer";

		[Token(Token = "0x40006F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr context_;

		[Token(Token = "0x17000128")]
		private IntPtr context
		{
			[Token(Token = "0x6000B15")]
			[Address(RVA = "0x21A0930", Offset = "0x21A0930", VA = "0x21A0930")]
			get
			{
				return default(IntPtr);
			}
		}

		[PreserveSig]
		[Token(Token = "0x6000B16")]
		[Address(RVA = "0x21A0DF4", Offset = "0x21A0DF4", VA = "0x21A0DF4")]
		public static extern int ovrAudio_GetPluginContext(out IntPtr context, uint clientType);

		[PreserveSig]
		[Token(Token = "0x6000B17")]
		[Address(RVA = "0x21A0E84", Offset = "0x21A0E84", VA = "0x21A0E84")]
		private static extern int ovrAudio_SetPropagationQuality(IntPtr context, float quality);

		[Token(Token = "0x6000B18")]
		[Address(RVA = "0x21A0F14", Offset = "0x21A0F14", VA = "0x21A0F14", Slot = "4")]
		public int SetPropagationQuality(float quality)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000B19")]
		[Address(RVA = "0x21A1240", Offset = "0x21A1240", VA = "0x21A1240")]
		private static extern int ovrAudio_SetPropagationThreadAffinity(IntPtr context, ulong cpuMask);

		[Token(Token = "0x6000B1A")]
		[Address(RVA = "0x21A12D0", Offset = "0x21A12D0", VA = "0x21A12D0", Slot = "5")]
		public int SetPropagationThreadAffinity(ulong cpuMask)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000B1B")]
		[Address(RVA = "0x21A15F8", Offset = "0x21A15F8", VA = "0x21A15F8")]
		private static extern int ovrAudio_CreateAudioGeometry(IntPtr context, out IntPtr geometry);

		[Token(Token = "0x6000B1C")]
		[Address(RVA = "0x21A1684", Offset = "0x21A1684", VA = "0x21A1684", Slot = "6")]
		public int CreateAudioGeometry(out IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000B1D")]
		[Address(RVA = "0x21A19AC", Offset = "0x21A19AC", VA = "0x21A19AC")]
		private static extern int ovrAudio_DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x6000B1E")]
		[Address(RVA = "0x21A1A2C", Offset = "0x21A1A2C", VA = "0x21A1A2C", Slot = "7")]
		public int DestroyAudioGeometry(IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000B1F")]
		[Address(RVA = "0x21A1CE4", Offset = "0x21A1CE4", VA = "0x21A1CE4")]
		private static extern int ovrAudio_AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, UIntPtr verticesBytesOffset, UIntPtr vertexCount, UIntPtr vertexStride, ovrAudioScalarType vertexType, int[] indices, UIntPtr indicesByteOffset, UIntPtr indexCount, ovrAudioScalarType indexType, MeshGroup[] groups, UIntPtr groupCount);

		[Token(Token = "0x6000B20")]
		[Address(RVA = "0x21A1E04", Offset = "0x21A1E04", VA = "0x21A1E04", Slot = "8")]
		public int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000B21")]
		[Address(RVA = "0x21A22BC", Offset = "0x21A22BC", VA = "0x21A22BC")]
		private static extern int ovrAudio_AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x6000B22")]
		[Address(RVA = "0x21A2354", Offset = "0x21A2354", VA = "0x21A2354", Slot = "9")]
		public int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000B23")]
		[Address(RVA = "0x21A2614", Offset = "0x21A2614", VA = "0x21A2614")]
		private static extern int ovrAudio_AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x6000B24")]
		[Address(RVA = "0x21A2740", Offset = "0x21A2740", VA = "0x21A2740", Slot = "10")]
		public int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000B25")]
		[Address(RVA = "0x21A2A00", Offset = "0x21A2A00", VA = "0x21A2A00")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6000B26")]
		[Address(RVA = "0x21A2AAC", Offset = "0x21A2AAC", VA = "0x21A2AAC", Slot = "11")]
		public int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000B27")]
		[Address(RVA = "0x21A2D6C", Offset = "0x21A2D6C", VA = "0x21A2D6C")]
		private static extern int ovrAudio_AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6000B28")]
		[Address(RVA = "0x21A2E18", Offset = "0x21A2E18", VA = "0x21A2E18", Slot = "12")]
		public int AudioGeometryReadMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000B29")]
		[Address(RVA = "0x21A30D8", Offset = "0x21A30D8", VA = "0x21A30D8")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x6000B2A")]
		[Address(RVA = "0x21A3184", Offset = "0x21A3184", VA = "0x21A3184", Slot = "13")]
		public int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000B2B")]
		[Address(RVA = "0x21A3444", Offset = "0x21A3444", VA = "0x21A3444")]
		private static extern int ovrAudio_CreateAudioMaterial(IntPtr context, out IntPtr material);

		[Token(Token = "0x6000B2C")]
		[Address(RVA = "0x21A34D0", Offset = "0x21A34D0", VA = "0x21A34D0", Slot = "15")]
		public int CreateAudioMaterial(out IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000B2D")]
		[Address(RVA = "0x21A37F8", Offset = "0x21A37F8", VA = "0x21A37F8")]
		private static extern int ovrAudio_DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x6000B2E")]
		[Address(RVA = "0x21A3878", Offset = "0x21A3878", VA = "0x21A3878", Slot = "16")]
		public int DestroyAudioMaterial(IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000B2F")]
		[Address(RVA = "0x21A3B30", Offset = "0x21A3B30", VA = "0x21A3B30")]
		private static extern int ovrAudio_AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x6000B30")]
		[Address(RVA = "0x21A3BD8", Offset = "0x21A3BD8", VA = "0x21A3BD8", Slot = "17")]
		public int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000B31")]
		[Address(RVA = "0x21A3EB0", Offset = "0x21A3EB0", VA = "0x21A3EB0")]
		private static extern int ovrAudio_AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x6000B32")]
		[Address(RVA = "0x21A3F58", Offset = "0x21A3F58", VA = "0x21A3F58", Slot = "14")]
		public int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000B33")]
		[Address(RVA = "0x21A4238", Offset = "0x21A4238", VA = "0x21A4238")]
		private static extern int ovrAudio_AudioMaterialReset(IntPtr material, MaterialProperty property);

		[Token(Token = "0x6000B34")]
		[Address(RVA = "0x21A42C8", Offset = "0x21A42C8", VA = "0x21A42C8", Slot = "18")]
		public int AudioMaterialReset(IntPtr material, MaterialProperty property)
		{
			return default(int);
		}

		[Token(Token = "0x6000B35")]
		[Address(RVA = "0x219C7E8", Offset = "0x219C7E8", VA = "0x219C7E8")]
		public UnityNativeInterface()
		{
		}
	}

	[Token(Token = "0x2000165")]
	public class WwisePluginInterface : PropagationInterface
	{
		[Token(Token = "0x40006F3")]
		public const string strOSPS = "OculusSpatializerWwise";

		[Token(Token = "0x40006F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr context_;

		[Token(Token = "0x17000129")]
		private IntPtr context
		{
			[Token(Token = "0x6000B36")]
			[Address(RVA = "0x21A458C", Offset = "0x21A458C", VA = "0x21A458C")]
			get
			{
				return default(IntPtr);
			}
		}

		[PreserveSig]
		[Token(Token = "0x6000B37")]
		[Address(RVA = "0x219C288", Offset = "0x219C288", VA = "0x219C288")]
		public static extern int ovrAudio_GetPluginContext(out IntPtr context, uint clientType);

		[PreserveSig]
		[Token(Token = "0x6000B38")]
		[Address(RVA = "0x21A4A50", Offset = "0x21A4A50", VA = "0x21A4A50")]
		private static extern int ovrAudio_SetPropagationQuality(IntPtr context, float quality);

		[Token(Token = "0x6000B39")]
		[Address(RVA = "0x21A4AE0", Offset = "0x21A4AE0", VA = "0x21A4AE0", Slot = "4")]
		public int SetPropagationQuality(float quality)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000B3A")]
		[Address(RVA = "0x21A4E0C", Offset = "0x21A4E0C", VA = "0x21A4E0C")]
		private static extern int ovrAudio_SetPropagationThreadAffinity(IntPtr context, ulong cpuMask);

		[Token(Token = "0x6000B3B")]
		[Address(RVA = "0x21A4E9C", Offset = "0x21A4E9C", VA = "0x21A4E9C", Slot = "5")]
		public int SetPropagationThreadAffinity(ulong cpuMask)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000B3C")]
		[Address(RVA = "0x21A51C4", Offset = "0x21A51C4", VA = "0x21A51C4")]
		private static extern int ovrAudio_CreateAudioGeometry(IntPtr context, out IntPtr geometry);

		[Token(Token = "0x6000B3D")]
		[Address(RVA = "0x21A5254", Offset = "0x21A5254", VA = "0x21A5254", Slot = "6")]
		public int CreateAudioGeometry(out IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000B3E")]
		[Address(RVA = "0x21A557C", Offset = "0x21A557C", VA = "0x21A557C")]
		private static extern int ovrAudio_DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x6000B3F")]
		[Address(RVA = "0x21A55FC", Offset = "0x21A55FC", VA = "0x21A55FC", Slot = "7")]
		public int DestroyAudioGeometry(IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000B40")]
		[Address(RVA = "0x21A58B4", Offset = "0x21A58B4", VA = "0x21A58B4")]
		private static extern int ovrAudio_AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, UIntPtr verticesBytesOffset, UIntPtr vertexCount, UIntPtr vertexStride, ovrAudioScalarType vertexType, int[] indices, UIntPtr indicesByteOffset, UIntPtr indexCount, ovrAudioScalarType indexType, MeshGroup[] groups, UIntPtr groupCount);

		[Token(Token = "0x6000B41")]
		[Address(RVA = "0x21A59D4", Offset = "0x21A59D4", VA = "0x21A59D4", Slot = "8")]
		public int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000B42")]
		[Address(RVA = "0x21A5E8C", Offset = "0x21A5E8C", VA = "0x21A5E8C")]
		private static extern int ovrAudio_AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x6000B43")]
		[Address(RVA = "0x21A5F24", Offset = "0x21A5F24", VA = "0x21A5F24", Slot = "9")]
		public int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000B44")]
		[Address(RVA = "0x21A61E4", Offset = "0x21A61E4", VA = "0x21A61E4")]
		private static extern int ovrAudio_AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x6000B45")]
		[Address(RVA = "0x21A6310", Offset = "0x21A6310", VA = "0x21A6310", Slot = "10")]
		public int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000B46")]
		[Address(RVA = "0x21A65D0", Offset = "0x21A65D0", VA = "0x21A65D0")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6000B47")]
		[Address(RVA = "0x21A667C", Offset = "0x21A667C", VA = "0x21A667C", Slot = "11")]
		public int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000B48")]
		[Address(RVA = "0x21A693C", Offset = "0x21A693C", VA = "0x21A693C")]
		private static extern int ovrAudio_AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6000B49")]
		[Address(RVA = "0x21A69E8", Offset = "0x21A69E8", VA = "0x21A69E8", Slot = "12")]
		public int AudioGeometryReadMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000B4A")]
		[Address(RVA = "0x21A6CA0", Offset = "0x21A6CA0", VA = "0x21A6CA0")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x6000B4B")]
		[Address(RVA = "0x21A6D4C", Offset = "0x21A6D4C", VA = "0x21A6D4C", Slot = "13")]
		public int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000B4C")]
		[Address(RVA = "0x21A700C", Offset = "0x21A700C", VA = "0x21A700C")]
		private static extern int ovrAudio_CreateAudioMaterial(IntPtr context, out IntPtr material);

		[Token(Token = "0x6000B4D")]
		[Address(RVA = "0x21A709C", Offset = "0x21A709C", VA = "0x21A709C", Slot = "15")]
		public int CreateAudioMaterial(out IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000B4E")]
		[Address(RVA = "0x21A73C4", Offset = "0x21A73C4", VA = "0x21A73C4")]
		private static extern int ovrAudio_DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x6000B4F")]
		[Address(RVA = "0x21A7444", Offset = "0x21A7444", VA = "0x21A7444", Slot = "16")]
		public int DestroyAudioMaterial(IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000B50")]
		[Address(RVA = "0x21A76FC", Offset = "0x21A76FC", VA = "0x21A76FC")]
		private static extern int ovrAudio_AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x6000B51")]
		[Address(RVA = "0x21A77A4", Offset = "0x21A77A4", VA = "0x21A77A4", Slot = "17")]
		public int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000B52")]
		[Address(RVA = "0x21A7A7C", Offset = "0x21A7A7C", VA = "0x21A7A7C")]
		private static extern int ovrAudio_AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x6000B53")]
		[Address(RVA = "0x21A7B24", Offset = "0x21A7B24", VA = "0x21A7B24", Slot = "14")]
		public int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000B54")]
		[Address(RVA = "0x21A7E04", Offset = "0x21A7E04", VA = "0x21A7E04")]
		private static extern int ovrAudio_AudioMaterialReset(IntPtr material, MaterialProperty property);

		[Token(Token = "0x6000B55")]
		[Address(RVA = "0x21A7E94", Offset = "0x21A7E94", VA = "0x21A7E94", Slot = "18")]
		public int AudioMaterialReset(IntPtr material, MaterialProperty property)
		{
			return default(int);
		}

		[Token(Token = "0x6000B56")]
		[Address(RVA = "0x219C318", Offset = "0x219C318", VA = "0x219C318")]
		public WwisePluginInterface()
		{
		}
	}

	[Token(Token = "0x2000166")]
	public class FMODPluginInterface : PropagationInterface
	{
		[Token(Token = "0x40006F5")]
		public const string strOSPS = "OculusSpatializerFMOD";

		[Token(Token = "0x40006F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr context_;

		[Token(Token = "0x1700012A")]
		private IntPtr context
		{
			[Token(Token = "0x6000B57")]
			[Address(RVA = "0x219CBD8", Offset = "0x219CBD8", VA = "0x219CBD8")]
			get
			{
				return default(IntPtr);
			}
		}

		[PreserveSig]
		[Token(Token = "0x6000B58")]
		[Address(RVA = "0x219C528", Offset = "0x219C528", VA = "0x219C528")]
		public static extern int ovrAudio_GetPluginContext(out IntPtr context, uint clientType);

		[PreserveSig]
		[Token(Token = "0x6000B59")]
		[Address(RVA = "0x219D09C", Offset = "0x219D09C", VA = "0x219D09C")]
		private static extern int ovrAudio_SetPropagationQuality(IntPtr context, float quality);

		[Token(Token = "0x6000B5A")]
		[Address(RVA = "0x219D12C", Offset = "0x219D12C", VA = "0x219D12C", Slot = "4")]
		public int SetPropagationQuality(float quality)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000B5B")]
		[Address(RVA = "0x219D458", Offset = "0x219D458", VA = "0x219D458")]
		private static extern int ovrAudio_SetPropagationThreadAffinity(IntPtr context, ulong cpuMask);

		[Token(Token = "0x6000B5C")]
		[Address(RVA = "0x219D4E8", Offset = "0x219D4E8", VA = "0x219D4E8", Slot = "5")]
		public int SetPropagationThreadAffinity(ulong cpuMask)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000B5D")]
		[Address(RVA = "0x219D810", Offset = "0x219D810", VA = "0x219D810")]
		private static extern int ovrAudio_CreateAudioGeometry(IntPtr context, out IntPtr geometry);

		[Token(Token = "0x6000B5E")]
		[Address(RVA = "0x219D8A0", Offset = "0x219D8A0", VA = "0x219D8A0", Slot = "6")]
		public int CreateAudioGeometry(out IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000B5F")]
		[Address(RVA = "0x219DBC8", Offset = "0x219DBC8", VA = "0x219DBC8")]
		private static extern int ovrAudio_DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x6000B60")]
		[Address(RVA = "0x219DC48", Offset = "0x219DC48", VA = "0x219DC48", Slot = "7")]
		public int DestroyAudioGeometry(IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000B61")]
		[Address(RVA = "0x219DF00", Offset = "0x219DF00", VA = "0x219DF00")]
		private static extern int ovrAudio_AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, UIntPtr verticesBytesOffset, UIntPtr vertexCount, UIntPtr vertexStride, ovrAudioScalarType vertexType, int[] indices, UIntPtr indicesByteOffset, UIntPtr indexCount, ovrAudioScalarType indexType, MeshGroup[] groups, UIntPtr groupCount);

		[Token(Token = "0x6000B62")]
		[Address(RVA = "0x219E020", Offset = "0x219E020", VA = "0x219E020", Slot = "8")]
		public int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000B63")]
		[Address(RVA = "0x219E4D8", Offset = "0x219E4D8", VA = "0x219E4D8")]
		private static extern int ovrAudio_AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x6000B64")]
		[Address(RVA = "0x219E570", Offset = "0x219E570", VA = "0x219E570", Slot = "9")]
		public int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000B65")]
		[Address(RVA = "0x219E830", Offset = "0x219E830", VA = "0x219E830")]
		private static extern int ovrAudio_AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x6000B66")]
		[Address(RVA = "0x219E95C", Offset = "0x219E95C", VA = "0x219E95C", Slot = "10")]
		public int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000B67")]
		[Address(RVA = "0x219EC1C", Offset = "0x219EC1C", VA = "0x219EC1C")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6000B68")]
		[Address(RVA = "0x219ECC8", Offset = "0x219ECC8", VA = "0x219ECC8", Slot = "11")]
		public int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000B69")]
		[Address(RVA = "0x219EFB0", Offset = "0x219EFB0", VA = "0x219EFB0")]
		private static extern int ovrAudio_AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6000B6A")]
		[Address(RVA = "0x219F05C", Offset = "0x219F05C", VA = "0x219F05C", Slot = "12")]
		public int AudioGeometryReadMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000B6B")]
		[Address(RVA = "0x219F34C", Offset = "0x219F34C", VA = "0x219F34C")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x6000B6C")]
		[Address(RVA = "0x219F3F8", Offset = "0x219F3F8", VA = "0x219F3F8", Slot = "13")]
		public int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000B6D")]
		[Address(RVA = "0x219F6E8", Offset = "0x219F6E8", VA = "0x219F6E8")]
		private static extern int ovrAudio_CreateAudioMaterial(IntPtr context, out IntPtr material);

		[Token(Token = "0x6000B6E")]
		[Address(RVA = "0x219F778", Offset = "0x219F778", VA = "0x219F778", Slot = "15")]
		public int CreateAudioMaterial(out IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000B6F")]
		[Address(RVA = "0x219FADC", Offset = "0x219FADC", VA = "0x219FADC")]
		private static extern int ovrAudio_DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x6000B70")]
		[Address(RVA = "0x219FB5C", Offset = "0x219FB5C", VA = "0x219FB5C", Slot = "16")]
		public int DestroyAudioMaterial(IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000B71")]
		[Address(RVA = "0x219FE44", Offset = "0x219FE44", VA = "0x219FE44")]
		private static extern int ovrAudio_AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x6000B72")]
		[Address(RVA = "0x219FEEC", Offset = "0x219FEEC", VA = "0x219FEEC", Slot = "17")]
		public int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000B73")]
		[Address(RVA = "0x21A01F4", Offset = "0x21A01F4", VA = "0x21A01F4")]
		private static extern int ovrAudio_AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x6000B74")]
		[Address(RVA = "0x21A029C", Offset = "0x21A029C", VA = "0x21A029C", Slot = "14")]
		public int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000B75")]
		[Address(RVA = "0x21A05AC", Offset = "0x21A05AC", VA = "0x21A05AC")]
		private static extern int ovrAudio_AudioMaterialReset(IntPtr material, MaterialProperty property);

		[Token(Token = "0x6000B76")]
		[Address(RVA = "0x21A063C", Offset = "0x21A063C", VA = "0x21A063C", Slot = "18")]
		public int AudioMaterialReset(IntPtr material, MaterialProperty property)
		{
			return default(int);
		}

		[Token(Token = "0x6000B77")]
		[Address(RVA = "0x219C5B8", Offset = "0x219C5B8", VA = "0x219C5B8")]
		public FMODPluginInterface()
		{
		}
	}

	[Token(Token = "0x4000029")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static PropagationInterface CachedInterface;

	[Token(Token = "0x1700000D")]
	public static PropagationInterface Interface
	{
		[Token(Token = "0x600004A")]
		[Address(RVA = "0x219B29C", Offset = "0x219B29C", VA = "0x219B29C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600004B")]
	[Address(RVA = "0x219B660", Offset = "0x219B660", VA = "0x219B660")]
	private static PropagationInterface FindInterface()
	{
		return null;
	}

	[Token(Token = "0x600004C")]
	[Address(RVA = "0x219C9F8", Offset = "0x219C9F8", VA = "0x219C9F8")]
	public ONSPPropagation()
	{
	}
}
[Token(Token = "0x200000B")]
public sealed class ONSPPropagationMaterial : MonoBehaviour
{
	[Token(Token = "0x2000167")]
	public enum Preset
	{
		[Token(Token = "0x40006F8")]
		Custom,
		[Token(Token = "0x40006F9")]
		AcousticTile,
		[Token(Token = "0x40006FA")]
		Brick,
		[Token(Token = "0x40006FB")]
		BrickPainted,
		[Token(Token = "0x40006FC")]
		Carpet,
		[Token(Token = "0x40006FD")]
		CarpetHeavy,
		[Token(Token = "0x40006FE")]
		CarpetHeavyPadded,
		[Token(Token = "0x40006FF")]
		CeramicTile,
		[Token(Token = "0x4000700")]
		Concrete,
		[Token(Token = "0x4000701")]
		ConcreteRough,
		[Token(Token = "0x4000702")]
		ConcreteBlock,
		[Token(Token = "0x4000703")]
		ConcreteBlockPainted,
		[Token(Token = "0x4000704")]
		Curtain,
		[Token(Token = "0x4000705")]
		Foliage,
		[Token(Token = "0x4000706")]
		Glass,
		[Token(Token = "0x4000707")]
		GlassHeavy,
		[Token(Token = "0x4000708")]
		Grass,
		[Token(Token = "0x4000709")]
		Gravel,
		[Token(Token = "0x400070A")]
		GypsumBoard,
		[Token(Token = "0x400070B")]
		PlasterOnBrick,
		[Token(Token = "0x400070C")]
		PlasterOnConcreteBlock,
		[Token(Token = "0x400070D")]
		Soil,
		[Token(Token = "0x400070E")]
		SoundProof,
		[Token(Token = "0x400070F")]
		Snow,
		[Token(Token = "0x4000710")]
		Steel,
		[Token(Token = "0x4000711")]
		Water,
		[Token(Token = "0x4000712")]
		WoodThin,
		[Token(Token = "0x4000713")]
		WoodThick,
		[Token(Token = "0x4000714")]
		WoodFloor,
		[Token(Token = "0x4000715")]
		WoodOnConcrete
	}

	[Serializable]
	[Token(Token = "0x2000168")]
	public sealed class Point
	{
		[Token(Token = "0x4000716")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float frequency;

		[Token(Token = "0x4000717")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float data;

		[Token(Token = "0x6000B78")]
		[Address(RVA = "0x19D4930", Offset = "0x19D4930", VA = "0x19D4930")]
		public Point(float frequency = 0f, float data = 0f)
		{
		}

		[Token(Token = "0x6000B79")]
		[Address(RVA = "0x19D4CF0", Offset = "0x19D4CF0", VA = "0x19D4CF0")]
		public static implicit operator Point(Vector2 v)
		{
			return null;
		}

		[Token(Token = "0x6000B7A")]
		[Address(RVA = "0x19D4FEC", Offset = "0x19D4FEC", VA = "0x19D4FEC")]
		public static implicit operator Vector2(Point point)
		{
			return default(Vector2);
		}
	}

	[Serializable]
	[Token(Token = "0x2000169")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0xCF98D8", Offset = "0xCF98D8")]
	public sealed class Spectrum
	{
		[Serializable]
		[Token(Token = "0x2000246")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCF9FC0", Offset = "0xCF9FC0")]
		private sealed class <>c
		{
			[Token(Token = "0x4000A1C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000A1D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Point, float> <>9__3_0;

			[Token(Token = "0x4000A1E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<Point, float> <>9__3_1;

			[Token(Token = "0x6000EAA")]
			[Address(RVA = "0x19D6EB8", Offset = "0x19D6EB8", VA = "0x19D6EB8")]
			public <>c()
			{
			}

			[Token(Token = "0x6000EAB")]
			[Address(RVA = "0x19D6FA8", Offset = "0x19D6FA8", VA = "0x19D6FA8")]
			internal float <get_Item>b__3_0(Point p)
			{
				return default(float);
			}

			[Token(Token = "0x6000EAC")]
			[Address(RVA = "0x19D7188", Offset = "0x19D7188", VA = "0x19D7188")]
			internal float <get_Item>b__3_1(Point p)
			{
				return default(float);
			}
		}

		[Token(Token = "0x4000718")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int selection;

		[Token(Token = "0x4000719")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<Point> points;

		[Token(Token = "0x1700012B")]
		public float Item
		{
			[Token(Token = "0x6000B7B")]
			[Address(RVA = "0x19D52FC", Offset = "0x19D52FC", VA = "0x19D52FC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000B7C")]
		[Address(RVA = "0x19D6A90", Offset = "0x19D6A90", VA = "0x19D6A90")]
		public Spectrum()
		{
		}
	}

	[Token(Token = "0x400002A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr materialHandle;

	[Token(Token = "0x400002B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCFA090", Offset = "0xCFA090")]
	public Spectrum absorption;

	[Token(Token = "0x400002C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCFA0C8", Offset = "0xCFA0C8")]
	public Spectrum transmission;

	[Token(Token = "0x400002D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCFA100", Offset = "0xCFA100")]
	public Spectrum scattering;

	[Token(Token = "0x400002E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Preset preset_;

	[Token(Token = "0x1700000E")]
	public Preset preset
	{
		[Token(Token = "0x600004D")]
		[Address(RVA = "0x21BEF44", Offset = "0x21BEF44", VA = "0x21BEF44")]
		get
		{
			return default(Preset);
		}
		[Token(Token = "0x600004E")]
		[Address(RVA = "0x21BF1B0", Offset = "0x21BF1B0", VA = "0x21BF1B0")]
		set
		{
		}
	}

	[Token(Token = "0x600004F")]
	[Address(RVA = "0x21BF504", Offset = "0x21BF504", VA = "0x21BF504")]
	private void Start()
	{
	}

	[Token(Token = "0x6000050")]
	[Address(RVA = "0x21BCCBC", Offset = "0x21BCCBC", VA = "0x21BCCBC")]
	public void StartInternal()
	{
	}

	[Token(Token = "0x6000051")]
	[Address(RVA = "0x21C1620", Offset = "0x21C1620", VA = "0x21C1620")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000052")]
	[Address(RVA = "0x21C18F8", Offset = "0x21C18F8", VA = "0x21C18F8")]
	public void DestroyInternal()
	{
	}

	[Token(Token = "0x6000053")]
	[Address(RVA = "0x21BF7DC", Offset = "0x21BF7DC", VA = "0x21BF7DC")]
	public void UploadMaterial()
	{
	}

	[Token(Token = "0x6000054")]
	[Address(RVA = "0x21B775C", Offset = "0x21B775C", VA = "0x21B775C")]
	public void SetPreset(Preset preset)
	{
	}

	[Token(Token = "0x6000055")]
	[Address(RVA = "0x21C1F00", Offset = "0x21C1F00", VA = "0x21C1F00")]
	private static void AcousticTile(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000056")]
	[Address(RVA = "0x21C36D4", Offset = "0x21C36D4", VA = "0x21C36D4")]
	private static void Brick(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000057")]
	[Address(RVA = "0x21C4EAC", Offset = "0x21C4EAC", VA = "0x21C4EAC")]
	private static void BrickPainted(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000058")]
	[Address(RVA = "0x21C6680", Offset = "0x21C6680", VA = "0x21C6680")]
	private static void Carpet(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000059")]
	[Address(RVA = "0x21C7E50", Offset = "0x21C7E50", VA = "0x21C7E50")]
	private static void CarpetHeavy(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600005A")]
	[Address(RVA = "0x21C9624", Offset = "0x21C9624", VA = "0x21C9624")]
	private static void CarpetHeavyPadded(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600005B")]
	[Address(RVA = "0x21CADF8", Offset = "0x21CADF8", VA = "0x21CADF8")]
	private static void CeramicTile(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600005C")]
	[Address(RVA = "0x21CC5D4", Offset = "0x21CC5D4", VA = "0x21CC5D4")]
	private static void Concrete(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600005D")]
	[Address(RVA = "0x21CDDA8", Offset = "0x21CDDA8", VA = "0x21CDDA8")]
	private static void ConcreteRough(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600005E")]
	[Address(RVA = "0x21CF588", Offset = "0x21CF588", VA = "0x21CF588")]
	private static void ConcreteBlock(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600005F")]
	[Address(RVA = "0x21D0D64", Offset = "0x21D0D64", VA = "0x21D0D64")]
	private static void ConcreteBlockPainted(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000060")]
	[Address(RVA = "0x21D2548", Offset = "0x21D2548", VA = "0x21D2548")]
	private static void Curtain(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000061")]
	[Address(RVA = "0x21D3D1C", Offset = "0x21D3D1C", VA = "0x21D3D1C")]
	private static void Foliage(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000062")]
	[Address(RVA = "0x21D5504", Offset = "0x21D5504", VA = "0x21D5504")]
	private static void Glass(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000063")]
	[Address(RVA = "0x21D6CC8", Offset = "0x21D6CC8", VA = "0x21D6CC8")]
	private static void GlassHeavy(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000064")]
	[Address(RVA = "0x21D8488", Offset = "0x21D8488", VA = "0x21D8488")]
	private static void Grass(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000065")]
	[Address(RVA = "0x21D9648", Offset = "0x21D9648", VA = "0x21D9648")]
	private static void Gravel(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000066")]
	[Address(RVA = "0x21DA800", Offset = "0x21DA800", VA = "0x21DA800")]
	private static void GypsumBoard(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000067")]
	[Address(RVA = "0x21DBFE4", Offset = "0x21DBFE4", VA = "0x21DBFE4")]
	private static void PlasterOnBrick(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000068")]
	[Address(RVA = "0x21DD7C4", Offset = "0x21DD7C4", VA = "0x21DD7C4")]
	private static void PlasterOnConcreteBlock(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000069")]
	[Address(RVA = "0x21DEF94", Offset = "0x21DEF94", VA = "0x21DEF94")]
	private static void Soil(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600006A")]
	[Address(RVA = "0x21E0154", Offset = "0x21E0154", VA = "0x21E0154")]
	private static void SoundProof(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600006B")]
	[Address(RVA = "0x21E08A8", Offset = "0x21E08A8", VA = "0x21E08A8")]
	private static void Snow(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600006C")]
	[Address(RVA = "0x21E1A5C", Offset = "0x21E1A5C", VA = "0x21E1A5C")]
	private static void Steel(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600006D")]
	[Address(RVA = "0x21E3220", Offset = "0x21E3220", VA = "0x21E3220")]
	private static void Water(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600006E")]
	[Address(RVA = "0x21E49F0", Offset = "0x21E49F0", VA = "0x21E49F0")]
	private static void WoodThin(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600006F")]
	[Address(RVA = "0x21E61BC", Offset = "0x21E61BC", VA = "0x21E61BC")]
	private static void WoodThick(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000070")]
	[Address(RVA = "0x21E7990", Offset = "0x21E7990", VA = "0x21E7990")]
	private static void WoodFloor(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000071")]
	[Address(RVA = "0x21E9158", Offset = "0x21E9158", VA = "0x21E9158")]
	private static void WoodOnConcrete(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000072")]
	[Address(RVA = "0x21EA930", Offset = "0x21EA930", VA = "0x21EA930")]
	public ONSPPropagationMaterial()
	{
	}
}
[Token(Token = "0x200000C")]
public class ONSPPropagationSettings : MonoBehaviour
{
	[Token(Token = "0x400002F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float quality;

	[Token(Token = "0x6000073")]
	[Address(RVA = "0x19D7368", Offset = "0x19D7368", VA = "0x19D7368")]
	private void Update()
	{
	}

	[Token(Token = "0x6000074")]
	[Address(RVA = "0x19D7738", Offset = "0x19D7738", VA = "0x19D7738")]
	public ONSPPropagationSettings()
	{
	}
}
[Token(Token = "0x200000D")]
public sealed class ONSPSettings : ScriptableObject
{
	[Token(Token = "0x4000030")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public int voiceLimit;

	[Token(Token = "0x4000031")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ONSPSettings instance;

	[Token(Token = "0x1700000F")]
	public static ONSPSettings Instance
	{
		[Token(Token = "0x6000075")]
		[Address(RVA = "0x19DAE1C", Offset = "0x19DAE1C", VA = "0x19DAE1C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000076")]
	[Address(RVA = "0x19DB67C", Offset = "0x19DB67C", VA = "0x19DB67C")]
	public ONSPSettings()
	{
	}
}
[Token(Token = "0x200000E")]
public class ONSPVersion : MonoBehaviour
{
	[Token(Token = "0x4000032")]
	public const string strONSPS = "AudioPluginOculusSpatializer";

	[PreserveSig]
	[Token(Token = "0x6000077")]
	[Address(RVA = "0x19DB8A0", Offset = "0x19DB8A0", VA = "0x19DB8A0")]
	private static extern void ONSP_GetVersion(ref int Major, ref int Minor, ref int Patch);

	[Token(Token = "0x6000078")]
	[Address(RVA = "0x19DB938", Offset = "0x19DB938", VA = "0x19DB938")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000079")]
	[Address(RVA = "0x19DBF90", Offset = "0x19DBF90", VA = "0x19DBF90")]
	private void Start()
	{
	}

	[Token(Token = "0x600007A")]
	[Address(RVA = "0x19DC1A0", Offset = "0x19DC1A0", VA = "0x19DC1A0")]
	private void Update()
	{
	}

	[Token(Token = "0x600007B")]
	[Address(RVA = "0x19DC3B0", Offset = "0x19DC3B0", VA = "0x19DC3B0")]
	public ONSPVersion()
	{
	}
}
[Token(Token = "0x200000F")]
public class OculusSpatializerUnity : MonoBehaviour
{
	[Token(Token = "0x200016A")]
	public delegate void AudioRaycastCallback(Vector3 origin, Vector3 direction, out Vector3 point, out Vector3 normal, IntPtr data);

	[Token(Token = "0x4000033")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LayerMask layerMask;

	[Token(Token = "0x4000034")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool visualizeRoom;

	[Token(Token = "0x4000035")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	private bool roomVisualizationInitialized;

	[Token(Token = "0x4000036")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int raysPerSecond;

	[Token(Token = "0x4000037")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float roomInterpSpeed;

	[Token(Token = "0x4000038")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maxWallDistance;

	[Token(Token = "0x4000039")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int rayCacheSize;

	[Token(Token = "0x400003A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool dynamicReflectionsEnabled;

	[Token(Token = "0x400003B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float particleSize;

	[Token(Token = "0x400003C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float particleOffset;

	[Token(Token = "0x400003D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject room;

	[Token(Token = "0x400003E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Renderer[] wallRenderer;

	[Token(Token = "0x400003F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float[] dims;

	[Token(Token = "0x4000040")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float[] coefs;

	[Token(Token = "0x4000041")]
	private const int HIT_COUNT = 2048;

	[Token(Token = "0x4000042")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector3[] points;

	[Token(Token = "0x4000043")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector3[] normals;

	[Token(Token = "0x4000044")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private ParticleSystem sys;

	[Token(Token = "0x4000045")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ParticleSystem.Particle[] particles;

	[Token(Token = "0x4000046")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static LayerMask gLayerMask;

	[Token(Token = "0x4000047")]
	private const string strOSP = "AudioPluginOculusSpatializer";

	[Token(Token = "0x600007C")]
	[Address(RVA = "0x19E2994", Offset = "0x19E2994", VA = "0x19E2994")]
	private static Vector3 swapHandedness(Vector3 vec)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600007D")]
	[Address(RVA = "0x19E1E80", Offset = "0x19E1E80", VA = "0x19E1E80")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xD00BC0", Offset = "0xD00BC0")]
	private static void AudioRaycast(Vector3 origin, Vector3 direction, out Vector3 point, out Vector3 normal, IntPtr data)
	{
	}

	[Token(Token = "0x600007E")]
	[Address(RVA = "0x19E2CB0", Offset = "0x19E2CB0", VA = "0x19E2CB0")]
	private void Start()
	{
	}

	[Token(Token = "0x600007F")]
	[Address(RVA = "0x19E30E0", Offset = "0x19E30E0", VA = "0x19E30E0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000080")]
	[Address(RVA = "0x19E346C", Offset = "0x19E346C", VA = "0x19E346C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000081")]
	[Address(RVA = "0x19E694C", Offset = "0x19E694C", VA = "0x19E694C")]
	private void inititalizeRoomVisualization()
	{
	}

	[PreserveSig]
	[Token(Token = "0x6000082")]
	[Address(RVA = "0x19E304C", Offset = "0x19E304C", VA = "0x19E304C")]
	private static extern int OSP_Unity_AssignRaycastCallback(AudioRaycastCallback callback, IntPtr data);

	[PreserveSig]
	[Token(Token = "0x6000083")]
	[Address(RVA = "0x19E33DC", Offset = "0x19E33DC", VA = "0x19E33DC")]
	private static extern int OSP_Unity_AssignRaycastCallback(IntPtr callback, IntPtr data);

	[PreserveSig]
	[Token(Token = "0x6000084")]
	[Address(RVA = "0x19E66B4", Offset = "0x19E66B4", VA = "0x19E66B4")]
	private static extern int OSP_Unity_SetDynamicRoomRaysPerSecond(int RaysPerSecond);

	[PreserveSig]
	[Token(Token = "0x6000085")]
	[Address(RVA = "0x19E6734", Offset = "0x19E6734", VA = "0x19E6734")]
	private static extern int OSP_Unity_SetDynamicRoomInterpSpeed(float InterpSpeed);

	[PreserveSig]
	[Token(Token = "0x6000086")]
	[Address(RVA = "0x19E67BC", Offset = "0x19E67BC", VA = "0x19E67BC")]
	private static extern int OSP_Unity_SetDynamicRoomMaxWallDistance(float MaxWallDistance);

	[PreserveSig]
	[Token(Token = "0x6000087")]
	[Address(RVA = "0x19E6844", Offset = "0x19E6844", VA = "0x19E6844")]
	private static extern int OSP_Unity_SetDynamicRoomRaysRayCacheSize(int RayCacheSize);

	[PreserveSig]
	[Token(Token = "0x6000088")]
	[Address(RVA = "0x19E68C4", Offset = "0x19E68C4", VA = "0x19E68C4")]
	private static extern int OSP_Unity_UpdateRoomModel(float wetLevel);

	[PreserveSig]
	[Token(Token = "0x6000089")]
	[Address(RVA = "0x19EDAE0", Offset = "0x19EDAE0", VA = "0x19EDAE0")]
	private static extern int OSP_Unity_GetRoomDimensions(float[] roomDimensions, float[] reflectionsCoefs, out Vector3 position);

	[PreserveSig]
	[Token(Token = "0x600008A")]
	[Address(RVA = "0x19EDB88", Offset = "0x19EDB88", VA = "0x19EDB88")]
	private static extern int OSP_Unity_GetRaycastHits(Vector3[] points, Vector3[] normals, int length);

	[Token(Token = "0x600008B")]
	[Address(RVA = "0x19EDC30", Offset = "0x19EDC30", VA = "0x19EDC30")]
	public OculusSpatializerUnity()
	{
	}
}
[Token(Token = "0x2000010")]
public struct ReflectionSnapshot
{
	[Token(Token = "0x4000048")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public AudioMixerSnapshot mixerSnapshot;

	[Token(Token = "0x4000049")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float fadeTime;
}
[Token(Token = "0x2000011")]
public class ONSPReflectionZone : MonoBehaviour
{
	[Token(Token = "0x400004A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioMixerSnapshot mixerSnapshot;

	[Token(Token = "0x400004B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float fadeTime;

	[Token(Token = "0x400004C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Stack<ReflectionSnapshot> snapshotList;

	[Token(Token = "0x400004D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static ReflectionSnapshot currentSnapshot;

	[Token(Token = "0x600008D")]
	[Address(RVA = "0x19D796C", Offset = "0x19D796C", VA = "0x19D796C")]
	private void Start()
	{
	}

	[Token(Token = "0x600008E")]
	[Address(RVA = "0x19D7B7C", Offset = "0x19D7B7C", VA = "0x19D7B7C")]
	private void Update()
	{
	}

	[Token(Token = "0x600008F")]
	[Address(RVA = "0x19D7D8C", Offset = "0x19D7D8C", VA = "0x19D7D8C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000090")]
	[Address(RVA = "0x19D8C54", Offset = "0x19D8C54", VA = "0x19D8C54")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000091")]
	[Address(RVA = "0x19D82D0", Offset = "0x19D82D0", VA = "0x19D82D0")]
	private bool CheckForAudioListener(GameObject gameObject)
	{
		return default(bool);
	}

	[Token(Token = "0x6000092")]
	[Address(RVA = "0x19D87F8", Offset = "0x19D87F8", VA = "0x19D87F8")]
	private void PushCurrentMixerShapshot()
	{
	}

	[Token(Token = "0x6000093")]
	[Address(RVA = "0x19D9198", Offset = "0x19D9198", VA = "0x19D9198")]
	private void PopCurrentMixerSnapshot()
	{
	}

	[Token(Token = "0x6000094")]
	[Address(RVA = "0x19D9598", Offset = "0x19D9598", VA = "0x19D9598")]
	private void SetReflectionValues()
	{
	}

	[Token(Token = "0x6000095")]
	[Address(RVA = "0x19D9F30", Offset = "0x19D9F30", VA = "0x19D9F30")]
	private void SetReflectionValues(ref ReflectionSnapshot mss)
	{
	}

	[Token(Token = "0x6000096")]
	[Address(RVA = "0x19DA8DC", Offset = "0x19DA8DC", VA = "0x19DA8DC")]
	public ONSPReflectionZone()
	{
	}
}
[Token(Token = "0x2000012")]
public class ActionShoot : MonoBehaviour
{
	[Token(Token = "0x400004E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static ActionShoot instance;

	[Token(Token = "0x400004F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool actionStarted;

	[Token(Token = "0x4000050")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform playerTransform;

	[Token(Token = "0x4000051")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xCFA168", Offset = "0xCFA168")]
	[SerializeField]
	private Transform ballsPositionLeft;

	[Token(Token = "0x4000052")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private MeshRenderer lightMaterialLeft;

	[Token(Token = "0x4000053")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xCFA1C4", Offset = "0xCFA1C4")]
	[SerializeField]
	private Transform ballsPositionRight;

	[Token(Token = "0x4000054")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private MeshRenderer lightMaterialRight;

	[Token(Token = "0x4000055")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private ObjectPoolEntry BonusAppearingVFX;

	[Token(Token = "0x4000056")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Transform BulletPositionLeft;

	[Token(Token = "0x4000057")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Transform BulletPositionRight;

	[Token(Token = "0x4000058")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private Image leftNoVRColorShowerButton;

	[Token(Token = "0x4000059")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private Image RightNoVRColorShowerButton;

	[Token(Token = "0x400005A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private UiCrosshair crosshair;

	[Token(Token = "0x400005B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private ObjectPoolEntry childProjectorPrefab;

	[Token(Token = "0x400005C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private SplineComputer[] currComputers;

	[Token(Token = "0x400005D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public readonly List<ETFXProjectileScript> currProjectiles;

	[Token(Token = "0x400005E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private readonly Dictionary<bool, GameObject> instantiatedHandActionLine;

	[Token(Token = "0x400005F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private Transform LaserPositionLeft;

	[Token(Token = "0x4000060")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private Transform LaserPositionRight;

	[Token(Token = "0x4000061")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	private LayerMask layerMask;

	[Token(Token = "0x4000062")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private bool shootedColorized;

	[Token(Token = "0x4000063")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBD")]
	public bool ShootedLeft;

	[Token(Token = "0x4000064")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SerializeField]
	private float Speed;

	[Token(Token = "0x4000065")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCFA2D0", Offset = "0xCFA2D0")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xCFA2D0", Offset = "0xCFA2D0")]
	private BallConfig <ballConfigLeft>k__BackingField;

	[Token(Token = "0x4000066")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCFA30C", Offset = "0xCFA30C")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xCFA30C", Offset = "0xCFA30C")]
	private BallConfig <ballConfigRight>k__BackingField;

	[Token(Token = "0x4000069")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private bool isShootingEnabled;

	[Token(Token = "0x400006A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDD")]
	private bool levelLoading;

	[Token(Token = "0x400006B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private Material leftMaterial;

	[Token(Token = "0x400006C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private Material RightMaterial;

	[Token(Token = "0x400006D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private readonly List<BallColor> nextBallsColors;

	[Token(Token = "0x17000010")]
	public BallConfig ballConfigLeft
	{
		[Token(Token = "0x6000098")]
		[Address(RVA = "0x137ADB0", Offset = "0x137ADB0", VA = "0x137ADB0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD00C24", Offset = "0xD00C24")]
		get
		{
			return default(BallConfig);
		}
		[Token(Token = "0x6000099")]
		[Address(RVA = "0x137AF74", Offset = "0x137AF74", VA = "0x137AF74")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD00C34", Offset = "0xD00C34")]
		private set
		{
		}
	}

	[Token(Token = "0x17000011")]
	public BallConfig ballConfigRight
	{
		[Token(Token = "0x600009A")]
		[Address(RVA = "0x137B140", Offset = "0x137B140", VA = "0x137B140")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD00C44", Offset = "0xD00C44")]
		get
		{
			return default(BallConfig);
		}
		[Token(Token = "0x600009B")]
		[Address(RVA = "0x137B304", Offset = "0x137B304", VA = "0x137B304")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD00C54", Offset = "0xD00C54")]
		private set
		{
		}
	}

	[Token(Token = "0x14000001")]
	public static event Action<bool> OnShot
	{
		[Token(Token = "0x600009C")]
		[Address(RVA = "0x137B4D0", Offset = "0x137B4D0", VA = "0x137B4D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD00C64", Offset = "0xD00C64")]
		add
		{
		}
		[Token(Token = "0x600009D")]
		[Address(RVA = "0x137B64C", Offset = "0x137B64C", VA = "0x137B64C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD00C74", Offset = "0xD00C74")]
		remove
		{
		}
	}

	[Token(Token = "0x14000002")]
	public static event Action<bool> onTryingToShoot
	{
		[Token(Token = "0x600009E")]
		[Address(RVA = "0x137B7C8", Offset = "0x137B7C8", VA = "0x137B7C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD00C84", Offset = "0xD00C84")]
		add
		{
		}
		[Token(Token = "0x600009F")]
		[Address(RVA = "0x137B944", Offset = "0x137B944", VA = "0x137B944")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD00C94", Offset = "0xD00C94")]
		remove
		{
		}
	}

	[Token(Token = "0x60000A0")]
	[Address(RVA = "0x137BAC0", Offset = "0x137BAC0", VA = "0x137BAC0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000A1")]
	[Address(RVA = "0x137CAA4", Offset = "0x137CAA4", VA = "0x137CAA4")]
	private void OnLevelLoaded()
	{
	}

	[Token(Token = "0x60000A2")]
	[Address(RVA = "0x137CD14", Offset = "0x137CD14", VA = "0x137CD14")]
	private void OnLevelLoadStart()
	{
	}

	[Token(Token = "0x60000A3")]
	[Address(RVA = "0x137CF88", Offset = "0x137CF88", VA = "0x137CF88")]
	private void GameManagerOnGameStateChanged(GameState oldGameState, GameState newGameState)
	{
	}

	[Token(Token = "0x60000A4")]
	[Address(RVA = "0x137F7B4", Offset = "0x137F7B4", VA = "0x137F7B4")]
	private void ComputersChange(SplineComputer[] computers)
	{
	}

	[Token(Token = "0x60000A5")]
	[Address(RVA = "0x1381720", Offset = "0x1381720", VA = "0x1381720")]
	private void Start()
	{
	}

	[Token(Token = "0x60000A6")]
	[Address(RVA = "0x1381EC0", Offset = "0x1381EC0", VA = "0x1381EC0")]
	public void EnableShooting(bool enable)
	{
	}

	[Token(Token = "0x60000A7")]
	[Address(RVA = "0x1382594", Offset = "0x1382594", VA = "0x1382594")]
	public void SetProjectileConfig(BallConfig ballConfig, bool left)
	{
	}

	[Token(Token = "0x60000A8")]
	[Address(RVA = "0x137E444", Offset = "0x137E444", VA = "0x137E444")]
	private void ClearChilds(Transform parent)
	{
	}

	[Token(Token = "0x60000A9")]
	[Address(RVA = "0x1382DF8", Offset = "0x1382DF8", VA = "0x1382DF8")]
	private void InstantiateBall(GameObject prefab, Transform parent)
	{
	}

	[Token(Token = "0x60000AA")]
	[Address(RVA = "0x13804EC", Offset = "0x13804EC", VA = "0x13804EC")]
	private void UpdateBallsPreshow(bool left)
	{
	}

	[Token(Token = "0x60000AB")]
	[Address(RVA = "0x1386048", Offset = "0x1386048", VA = "0x1386048")]
	private void Update()
	{
	}

	[Token(Token = "0x60000AC")]
	[Address(RVA = "0x137EFB8", Offset = "0x137EFB8", VA = "0x137EFB8")]
	private void HideActionLine(bool left)
	{
	}

	[Token(Token = "0x60000AD")]
	[Address(RVA = "0x1384A3C", Offset = "0x1384A3C", VA = "0x1384A3C")]
	private void ShowActionLine(bool left)
	{
	}

	[Token(Token = "0x60000AE")]
	[Address(RVA = "0x1387744", Offset = "0x1387744", VA = "0x1387744")]
	private void TryShoot(bool left)
	{
	}

	[Token(Token = "0x60000AF")]
	[Address(RVA = "0x1387EE0", Offset = "0x1387EE0", VA = "0x1387EE0")]
	private void Shoot(bool left)
	{
	}

	[Token(Token = "0x60000B0")]
	[Address(RVA = "0x138BFD8", Offset = "0x138BFD8", VA = "0x138BFD8")]
	public void CheckAvailableColors()
	{
	}

	[Token(Token = "0x60000B1")]
	[Address(RVA = "0x138A454", Offset = "0x138A454", VA = "0x138A454")]
	private void SetColors(bool left)
	{
	}

	[Token(Token = "0x60000B2")]
	[Address(RVA = "0x138D664", Offset = "0x138D664", VA = "0x138D664")]
	public ActionShoot()
	{
	}

	[Token(Token = "0x60000B3")]
	[Address(RVA = "0x138DC3C", Offset = "0x138DC3C", VA = "0x138DC3C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD00CA4", Offset = "0xD00CA4")]
	private void <Start>b__46_0()
	{
	}

	[Token(Token = "0x60000B4")]
	[Address(RVA = "0x138DF18", Offset = "0x138DF18", VA = "0x138DF18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD00CB4", Offset = "0xD00CB4")]
	private void <Start>b__46_1()
	{
	}
}
[Token(Token = "0x2000013")]
public class UnityAds : MonoBehaviour
{
	[Token(Token = "0x400006E")]
	private const string gameId = "3403342";

	[Token(Token = "0x60000B5")]
	[Address(RVA = "0x1783838", Offset = "0x1783838", VA = "0x1783838")]
	private void Start()
	{
	}

	[Token(Token = "0x60000B6")]
	[Address(RVA = "0x1783A48", Offset = "0x1783A48", VA = "0x1783A48")]
	private void GameManagerOnGameStateChanged(GameState oldGameState, GameState newGameState)
	{
	}

	[Token(Token = "0x60000B7")]
	[Address(RVA = "0x1783E74", Offset = "0x1783E74", VA = "0x1783E74")]
	public UnityAds()
	{
	}
}
[Token(Token = "0x2000014")]
public class FirstLaunchAnalytics : MonoBehaviour
{
	[Token(Token = "0x200016B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCF9910", Offset = "0xCF9910")]
	private sealed class <Start>d__1 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400071A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400071B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400071C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FirstLaunchAnalytics <>4__this;

		[Token(Token = "0x400071D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private UnityWebRequest <request>5__1;

		[Token(Token = "0x1700012C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000B84")]
			[Address(RVA = "0x342B7DC", Offset = "0x342B7DC", VA = "0x342B7DC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700012D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000B86")]
			[Address(RVA = "0x342B9A8", Offset = "0x342B9A8", VA = "0x342B9A8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B81")]
		[Address(RVA = "0x342A6F8", Offset = "0x342A6F8", VA = "0x342A6F8")]
		[DebuggerHidden]
		public <Start>d__1(int <>1__state)
		{
		}

		[Token(Token = "0x6000B82")]
		[Address(RVA = "0x342A8E8", Offset = "0x342A8E8", VA = "0x342A8E8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000B83")]
		[Address(RVA = "0x342A9C8", Offset = "0x342A9C8", VA = "0x342A9C8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B85")]
		[Address(RVA = "0x342B8C8", Offset = "0x342B8C8", VA = "0x342B8C8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x60000B8")]
	[Address(RVA = "0x342A304", Offset = "0x342A304", VA = "0x342A304")]
	private static void Log(object msg)
	{
	}

	[Token(Token = "0x60000B9")]
	[Address(RVA = "0x342A5DC", Offset = "0x342A5DC", VA = "0x342A5DC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD00CC4", Offset = "0xD00CC4")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x60000BA")]
	[Address(RVA = "0x342A7F8", Offset = "0x342A7F8", VA = "0x342A7F8")]
	public FirstLaunchAnalytics()
	{
	}
}
[Token(Token = "0x2000015")]
public class GameAnalyticsManager : MonoBehaviour
{
	[StructLayout(3)]
	[Token(Token = "0x200016C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCF9920", Offset = "0xCF9920")]
	private struct <>c__DisplayClass1_0
	{
		[Token(Token = "0x400071E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Dictionary<string, string> contents;
	}

	[Token(Token = "0x60000BB")]
	[Address(RVA = "0x342E128", Offset = "0x342E128", VA = "0x342E128")]
	private void Start()
	{
	}

	[Token(Token = "0x60000BC")]
	[Address(RVA = "0x342E564", Offset = "0x342E564", VA = "0x342E564")]
	private static void OnCustomEvent(string eventName, Dictionary<string, string> contents)
	{
	}

	[Token(Token = "0x60000BD")]
	[Address(RVA = "0x343217C", Offset = "0x343217C", VA = "0x343217C")]
	public GameAnalyticsManager()
	{
	}

	[Token(Token = "0x60000BE")]
	[Address(RVA = "0x3431BBC", Offset = "0x3431BBC", VA = "0x3431BBC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD00D28", Offset = "0xD00D28")]
	internal static string <OnCustomEvent>g__ValueAt|1_0(int index, ref <>c__DisplayClass1_0 P_1)
	{
		return null;
	}

	[Token(Token = "0x60000BF")]
	[Address(RVA = "0x3431E9C", Offset = "0x3431E9C", VA = "0x3431E9C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD00D38", Offset = "0xD00D38")]
	internal static string <OnCustomEvent>g__KeyAt|1_1(int index, ref <>c__DisplayClass1_0 P_1)
	{
		return null;
	}
}
[Token(Token = "0x2000016")]
public class PlayFabAnalyticsManager : MonoBehaviour
{
	[Token(Token = "0x200016D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCF9930", Offset = "0xCF9930")]
	private sealed class <SendCustomEvent>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400071F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000720")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000721")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string eventName;

		[Token(Token = "0x4000722")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Dictionary<string, object> data;

		[Token(Token = "0x4000723")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public PlayFabAnalyticsManager <>4__this;

		[Token(Token = "0x4000724")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private WaitForEndOfFrame <wait>5__1;

		[Token(Token = "0x4000725")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float <timeout>5__2;

		[Token(Token = "0x4000726")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private WriteClientPlayerEventRequest <request>5__3;

		[Token(Token = "0x4000727")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Exception <e>5__4;

		[Token(Token = "0x1700012E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000B8A")]
			[Address(RVA = "0x1A0318C", Offset = "0x1A0318C", VA = "0x1A0318C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700012F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000B8C")]
			[Address(RVA = "0x1A03358", Offset = "0x1A03358", VA = "0x1A03358", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B87")]
		[Address(RVA = "0x1A01BC4", Offset = "0x1A01BC4", VA = "0x1A01BC4")]
		[DebuggerHidden]
		public <SendCustomEvent>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6000B88")]
		[Address(RVA = "0x1A01DB4", Offset = "0x1A01DB4", VA = "0x1A01DB4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000B89")]
		[Address(RVA = "0x1A01E94", Offset = "0x1A01E94", VA = "0x1A01E94", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B8B")]
		[Address(RVA = "0x1A03278", Offset = "0x1A03278", VA = "0x1A03278", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x60000C0")]
	[Address(RVA = "0x19FECC0", Offset = "0x19FECC0", VA = "0x19FECC0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000C1")]
	[Address(RVA = "0x1A00064", Offset = "0x1A00064", VA = "0x1A00064")]
	private static bool IsLoggedOn()
	{
		return default(bool);
	}

	[Token(Token = "0x60000C2")]
	[Address(RVA = "0x19FF0F8", Offset = "0x19FF0F8", VA = "0x19FF0F8")]
	private static void Login()
	{
	}

	[Token(Token = "0x60000C3")]
	[Address(RVA = "0x1A00354", Offset = "0x1A00354", VA = "0x1A00354")]
	private static void OnLoginSuccess(LoginResult result)
	{
	}

	[Token(Token = "0x60000C4")]
	[Address(RVA = "0x1A00658", Offset = "0x1A00658", VA = "0x1A00658")]
	private static void OnFailure(PlayFabError error)
	{
	}

	[Token(Token = "0x60000C5")]
	[Address(RVA = "0x1A00B7C", Offset = "0x1A00B7C", VA = "0x1A00B7C")]
	private void OnCustomEvent(string eventName, Dictionary<string, string> contents)
	{
	}

	[Token(Token = "0x60000C6")]
	[Address(RVA = "0x1A01A94", Offset = "0x1A01A94", VA = "0x1A01A94")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD00D48", Offset = "0xD00D48")]
	private IEnumerator SendCustomEvent(string eventName, Dictionary<string, object> data)
	{
		return null;
	}

	[Token(Token = "0x60000C7")]
	[Address(RVA = "0x1A01CC4", Offset = "0x1A01CC4", VA = "0x1A01CC4")]
	public PlayFabAnalyticsManager()
	{
	}
}
[Token(Token = "0x2000017")]
public class UnityAnalyticsManager : MonoBehaviour
{
	[Token(Token = "0x60000C8")]
	[Address(RVA = "0x1783F64", Offset = "0x1783F64", VA = "0x1783F64")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000C9")]
	[Address(RVA = "0x17842D8", Offset = "0x17842D8", VA = "0x17842D8")]
	private static void OnCustomEvent(string eventName, Dictionary<string, string> contents)
	{
	}

	[Token(Token = "0x60000CA")]
	[Address(RVA = "0x1785934", Offset = "0x1785934", VA = "0x1785934")]
	private static string ChapterName(int chapter)
	{
		return null;
	}

	[Token(Token = "0x60000CB")]
	[Address(RVA = "0x1785B94", Offset = "0x1785B94", VA = "0x1785B94")]
	public UnityAnalyticsManager()
	{
	}
}
[Token(Token = "0x2000018")]
public class ZoomaAnalytics : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200016E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCF9940", Offset = "0xCF9940")]
	private sealed class <>c
	{
		[Token(Token = "0x4000728")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000729")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action<bool> <>9__5_0;

		[Token(Token = "0x6000B8E")]
		[Address(RVA = "0x4C0F57C", Offset = "0x4C0F57C", VA = "0x4C0F57C")]
		public <>c()
		{
		}

		[Token(Token = "0x6000B8F")]
		[Address(RVA = "0x4C0F66C", Offset = "0x4C0F66C", VA = "0x4C0F66C")]
		internal void <Start>b__5_0(bool isLeft)
		{
		}
	}

	[Token(Token = "0x4000070")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	internal static LevelStats lastStats;

	[Token(Token = "0x14000003")]
	public static event Action<string, Dictionary<string, string>> onCustomEvent
	{
		[Token(Token = "0x60000CC")]
		[Address(RVA = "0x4C0B3E8", Offset = "0x4C0B3E8", VA = "0x4C0B3E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD00DAC", Offset = "0xD00DAC")]
		add
		{
		}
		[Token(Token = "0x60000CD")]
		[Address(RVA = "0x4C0B560", Offset = "0x4C0B560", VA = "0x4C0B560")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD00DBC", Offset = "0xD00DBC")]
		remove
		{
		}
	}

	[Token(Token = "0x60000CE")]
	[Address(RVA = "0x4C0B6D8", Offset = "0x4C0B6D8", VA = "0x4C0B6D8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000CF")]
	[Address(RVA = "0x4C0B9D4", Offset = "0x4C0B9D4", VA = "0x4C0B9D4")]
	private void Start()
	{
	}

	[Token(Token = "0x60000D0")]
	[Address(RVA = "0x4C0C2BC", Offset = "0x4C0C2BC", VA = "0x4C0C2BC")]
	private static void CollectStartupAnalytics()
	{
	}

	[Token(Token = "0x60000D1")]
	[Address(RVA = "0x4C0DDC8", Offset = "0x4C0DDC8", VA = "0x4C0DDC8")]
	public static void CollectLevelEndAnalytics(string eventName)
	{
	}

	[Token(Token = "0x60000D2")]
	[Address(RVA = "0x4C0D8F0", Offset = "0x4C0D8F0", VA = "0x4C0D8F0")]
	public static void CustomEvent(string eventName, Dictionary<string, string> contents)
	{
	}

	[Token(Token = "0x60000D3")]
	[Address(RVA = "0x4C0F380", Offset = "0x4C0F380", VA = "0x4C0F380")]
	public ZoomaAnalytics()
	{
	}
}
[Token(Token = "0x2000019")]
public static class AnalEvent
{
	[Token(Token = "0x4000071")]
	public const string LevelStart = "level_start";

	[Token(Token = "0x4000072")]
	public const string LevelComplete = "level_complete";

	[Token(Token = "0x4000073")]
	public const string LevelFail = "game_over";

	[Token(Token = "0x4000074")]
	public const string LevelExit = "level_exit";
}
[Token(Token = "0x200001A")]
public struct LevelStats
{
	[Token(Token = "0x4000075")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int chapter;

	[Token(Token = "0x4000076")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public int level;

	[Token(Token = "0x4000077")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public int time;

	[Token(Token = "0x4000078")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public int score;

	[Token(Token = "0x4000079")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int stars;

	[Token(Token = "0x400007A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int combo;

	[Token(Token = "0x400007B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int shots;

	[Token(Token = "0x400007C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int bonus_drops;

	[Token(Token = "0x400007D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int bonus_uses;
}
[Token(Token = "0x200001B")]
public static class ZoomaStats
{
	[Token(Token = "0x400007E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static LevelStats level;

	[Token(Token = "0x60000D4")]
	[Address(RVA = "0x4C24374", Offset = "0x4C24374", VA = "0x4C24374")]
	public static void Reset()
	{
	}

	[Token(Token = "0x60000D5")]
	[Address(RVA = "0x4C0F8A0", Offset = "0x4C0F8A0", VA = "0x4C0F8A0")]
	public static void Shot()
	{
	}

	[Token(Token = "0x60000D6")]
	[Address(RVA = "0x4C245E8", Offset = "0x4C245E8", VA = "0x4C245E8")]
	public static void BonusDrop(Bonus bonus)
	{
	}

	[Token(Token = "0x60000D7")]
	[Address(RVA = "0x4C2486C", Offset = "0x4C2486C", VA = "0x4C2486C")]
	public static void BonusUse(Bonus bonus)
	{
	}
}
[Token(Token = "0x200001C")]
public class Bootstrap : MonoBehaviour
{
	[Token(Token = "0x200016F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCF9950", Offset = "0xCF9950")]
	private sealed class <Start>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400072A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400072B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400072C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Bootstrap <>4__this;

		[Token(Token = "0x17000130")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000B93")]
			[Address(RVA = "0x13BB190", Offset = "0x13BB190", VA = "0x13BB190", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000131")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000B95")]
			[Address(RVA = "0x13BB35C", Offset = "0x13BB35C", VA = "0x13BB35C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B90")]
		[Address(RVA = "0x13B8E6C", Offset = "0x13B8E6C", VA = "0x13B8E6C")]
		[DebuggerHidden]
		public <Start>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6000B91")]
		[Address(RVA = "0x13BA174", Offset = "0x13BA174", VA = "0x13BA174", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000B92")]
		[Address(RVA = "0x13BA254", Offset = "0x13BA254", VA = "0x13BA254", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B94")]
		[Address(RVA = "0x13BB27C", Offset = "0x13BB27C", VA = "0x13BB27C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400007F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ZoomaXrManager xrManager;

	[Token(Token = "0x4000080")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AssetReference nextScene;

	[Token(Token = "0x60000D8")]
	[Address(RVA = "0x13B85C4", Offset = "0x13B85C4", VA = "0x13B85C4")]
	private static void Log(object msg)
	{
	}

	[Token(Token = "0x60000D9")]
	[Address(RVA = "0x13B889C", Offset = "0x13B889C", VA = "0x13B889C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000DA")]
	[Address(RVA = "0x13B8D50", Offset = "0x13B8D50", VA = "0x13B8D50")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD00DCC", Offset = "0xD00DCC")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x60000DB")]
	[Address(RVA = "0x13B8F6C", Offset = "0x13B8F6C", VA = "0x13B8F6C")]
	public void Restart()
	{
	}

	[Token(Token = "0x60000DC")]
	[Address(RVA = "0x13B92BC", Offset = "0x13B92BC", VA = "0x13B92BC")]
	private void LoadGameScene()
	{
	}

	[Token(Token = "0x60000DD")]
	[Address(RVA = "0x13B96A0", Offset = "0x13B96A0", VA = "0x13B96A0")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xD00E30", Offset = "0xD00E30")]
	private void SetupGameScreen()
	{
	}

	[Token(Token = "0x60000DE")]
	[Address(RVA = "0x13BA084", Offset = "0x13BA084", VA = "0x13BA084")]
	public Bootstrap()
	{
	}
}
[Token(Token = "0x200001D")]
public class HandTool : MonoBehaviour
{
	[Token(Token = "0x60000DF")]
	[Address(RVA = "0x194C494", Offset = "0x194C494", VA = "0x194C494")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000E0")]
	[Address(RVA = "0x194CED8", Offset = "0x194CED8", VA = "0x194CED8")]
	public HandTool()
	{
	}
}
[Token(Token = "0x200001E")]
public class Player : MonoBehaviour
{
	[Token(Token = "0x4000081")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCFA3FC", Offset = "0xCFA3FC")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xCFA3FC", Offset = "0xCFA3FC")]
	private static Player <Instance>k__BackingField;

	[Token(Token = "0x4000082")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCFA438", Offset = "0xCFA438")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xCFA438", Offset = "0xCFA438")]
	private Transform <Hmd>k__BackingField;

	[Token(Token = "0x4000083")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCFA474", Offset = "0xCFA474")]
	[SerializeField]
	private GameObject desktopHmd;

	[Token(Token = "0x4000084")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject vrHmd;

	[Token(Token = "0x4000085")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCFA4D0", Offset = "0xCFA4D0")]
	[SerializeField]
	private GameObject PicoHmdPrefab;

	[Token(Token = "0x4000086")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject PicoSdkPrefab;

	[Token(Token = "0x4000087")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private GameObject leftHandRoot;

	[Token(Token = "0x4000088")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject rightHandRoot;

	[Token(Token = "0x17000012")]
	public static Player Instance
	{
		[Token(Token = "0x60000E1")]
		[Address(RVA = "0x1A04E4C", Offset = "0x1A04E4C", VA = "0x1A04E4C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD00E68", Offset = "0xD00E68")]
		get
		{
			return null;
		}
		[Token(Token = "0x60000E2")]
		[Address(RVA = "0x1A04FFC", Offset = "0x1A04FFC", VA = "0x1A04FFC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD00E78", Offset = "0xD00E78")]
		private set
		{
		}
	}

	[Token(Token = "0x17000013")]
	public Transform Hmd
	{
		[Token(Token = "0x60000E3")]
		[Address(RVA = "0x1A051C4", Offset = "0x1A051C4", VA = "0x1A051C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD00E88", Offset = "0xD00E88")]
		get
		{
			return null;
		}
		[Token(Token = "0x60000E4")]
		[Address(RVA = "0x1A05378", Offset = "0x1A05378", VA = "0x1A05378")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD00E98", Offset = "0xD00E98")]
		private set
		{
		}
	}

	[Token(Token = "0x60000E5")]
	[Address(RVA = "0x1A05538", Offset = "0x1A05538", VA = "0x1A05538")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000E6")]
	[Address(RVA = "0x1A06D6C", Offset = "0x1A06D6C", VA = "0x1A06D6C")]
	private void InitDefaultHmd()
	{
	}

	[Token(Token = "0x60000E7")]
	[Address(RVA = "0x1A06228", Offset = "0x1A06228", VA = "0x1A06228")]
	private void InitPicoVR()
	{
	}

	[Token(Token = "0x60000E8")]
	[Address(RVA = "0x1A071B0", Offset = "0x1A071B0", VA = "0x1A071B0")]
	public Player()
	{
	}
}
[Token(Token = "0x200001F")]
public class PlayerActionManager : MonoBehaviour
{
	[Token(Token = "0x4000089")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ActionShoot actionShoot;

	[Token(Token = "0x60000E9")]
	[Address(RVA = "0x1A072A0", Offset = "0x1A072A0", VA = "0x1A072A0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60000EA")]
	[Address(RVA = "0x1A07B50", Offset = "0x1A07B50", VA = "0x1A07B50")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60000EB")]
	[Address(RVA = "0x1A07EE4", Offset = "0x1A07EE4", VA = "0x1A07EE4")]
	private void OnGameStateChange(GameState prevState, GameState state)
	{
	}

	[Token(Token = "0x60000EC")]
	[Address(RVA = "0x1A076FC", Offset = "0x1A076FC", VA = "0x1A076FC")]
	private void UpdateGameplayActionsState()
	{
	}

	[Token(Token = "0x60000ED")]
	[Address(RVA = "0x1A081C8", Offset = "0x1A081C8", VA = "0x1A081C8")]
	private void ActivateGameplayActions(bool enableGameplay)
	{
	}

	[Token(Token = "0x60000EE")]
	[Address(RVA = "0x1A084D0", Offset = "0x1A084D0", VA = "0x1A084D0")]
	public PlayerActionManager()
	{
	}
}
[Token(Token = "0x2000020")]
public class PlayerHands : MonoBehaviour
{
	[Token(Token = "0x400008A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static PlayerHands _instance;

	[Token(Token = "0x400008B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static bool _displayTools;

	[Token(Token = "0x400008C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform leftHandTool;

	[Token(Token = "0x400008D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform rightHandTool;

	[Token(Token = "0x17000014")]
	public static bool DisplayTools
	{
		[Token(Token = "0x60000EF")]
		[Address(RVA = "0x1A085C0", Offset = "0x1A085C0", VA = "0x1A085C0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60000F0")]
		[Address(RVA = "0x1A08780", Offset = "0x1A08780", VA = "0x1A08780")]
		set
		{
		}
	}

	[Token(Token = "0x60000F1")]
	[Address(RVA = "0x1A091FC", Offset = "0x1A091FC", VA = "0x1A091FC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000F2")]
	[Address(RVA = "0x1A0947C", Offset = "0x1A0947C", VA = "0x1A0947C")]
	private void Start()
	{
	}

	[Token(Token = "0x60000F3")]
	[Address(RVA = "0x1A08D00", Offset = "0x1A08D00", VA = "0x1A08D00")]
	public void ShowTools(bool visible)
	{
	}

	[Token(Token = "0x60000F4")]
	[Address(RVA = "0x1A0976C", Offset = "0x1A0976C", VA = "0x1A0976C")]
	public PlayerHands()
	{
	}
}
[Token(Token = "0x2000021")]
public class ViewController : MonoBehaviour
{
	[Token(Token = "0x60000F5")]
	[Address(RVA = "0x1649A58", Offset = "0x1649A58", VA = "0x1649A58", Slot = "4")]
	public virtual void Show()
	{
	}

	[Token(Token = "0x60000F6")]
	[Address(RVA = "0x1649DB4", Offset = "0x1649DB4", VA = "0x1649DB4", Slot = "5")]
	public virtual void Hide()
	{
	}

	[Token(Token = "0x60000F7")]
	[Address(RVA = "0x164A110", Offset = "0x164A110", VA = "0x164A110")]
	public ViewController()
	{
	}
}
[Token(Token = "0x2000022")]
public class DevAudioManager : MonoBehaviour
{
	[Token(Token = "0x2000170")]
	private struct ClipFile
	{
		[Token(Token = "0x400072D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string url;

		[Token(Token = "0x400072E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AudioType audioType;

		[Token(Token = "0x400072F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public bool Exists;
	}

	[Token(Token = "0x2000171")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCF9960", Offset = "0xCF9960")]
	private sealed class <SoundClipsLoadingRoutine>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000730")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000731")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000732")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DevAudioManager <>4__this;

		[Token(Token = "0x4000733")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Stopwatch <sw>5__1;

		[Token(Token = "0x4000734")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private MasterAudioGroup[] <maGroups>5__2;

		[Token(Token = "0x4000735")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<MasterAudio.Playlist>.Enumerator <>s__3;

		[Token(Token = "0x4000736")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private MasterAudio.Playlist <playlist>5__4;

		[Token(Token = "0x4000737")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private List<MusicSetting>.Enumerator <>s__5;

		[Token(Token = "0x4000738")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private MusicSetting <setting>5__6;

		[Token(Token = "0x4000739")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private string <soundName>5__7;

		[Token(Token = "0x400073A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private ClipFile <clipFile>5__8;

		[Token(Token = "0x400073B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private UnityWebRequest <request>5__9;

		[Token(Token = "0x400073C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private AudioClip <currentClip>5__10;

		[Token(Token = "0x400073D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private MasterAudioGroup[] <>s__11;

		[Token(Token = "0x400073E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private int <>s__12;

		[Token(Token = "0x400073F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private MasterAudioGroup <group>5__13;

		[Token(Token = "0x4000740")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private string <soundGroupName>5__14;

		[Token(Token = "0x4000741")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private SoundGroupVariation[] <variations>5__15;

		[Token(Token = "0x4000742")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private SoundGroupVariation[] <>s__16;

		[Token(Token = "0x4000743")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private int <>s__17;

		[Token(Token = "0x4000744")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private SoundGroupVariation <variation>5__18;

		[Token(Token = "0x4000745")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private string <folder>5__19;

		[Token(Token = "0x4000746")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private string <soundName>5__20;

		[Token(Token = "0x4000747")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private ClipFile <clipFile>5__21;

		[Token(Token = "0x4000748")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private UnityWebRequest <request>5__22;

		[Token(Token = "0x4000749")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private AudioClip <currentClip>5__23;

		[Token(Token = "0x17000132")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000B9B")]
			[Address(RVA = "0x14ED8CC", Offset = "0x14ED8CC", VA = "0x14ED8CC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000133")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000B9D")]
			[Address(RVA = "0x14EDA98", Offset = "0x14EDA98", VA = "0x14EDA98", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B96")]
		[Address(RVA = "0x14E6130", Offset = "0x14E6130", VA = "0x14E6130")]
		[DebuggerHidden]
		public <SoundClipsLoadingRoutine>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x6000B97")]
		[Address(RVA = "0x14E71A8", Offset = "0x14E71A8", VA = "0x14E71A8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000B98")]
		[Address(RVA = "0x14E753C", Offset = "0x14E753C", VA = "0x14E753C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B99")]
		[Address(RVA = "0x14E7438", Offset = "0x14E7438", VA = "0x14E7438")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6000B9A")]
		[Address(RVA = "0x14E7338", Offset = "0x14E7338", VA = "0x14E7338")]
		private void <>m__Finally2()
		{
		}

		[Token(Token = "0x6000B9C")]
		[Address(RVA = "0x14ED9B8", Offset = "0x14ED9B8", VA = "0x14ED9B8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400008E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject ui;

	[Token(Token = "0x400008F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool isSoundDevMode;

	[Token(Token = "0x4000090")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly Dictionary<string, float> volumeMap;

	[Token(Token = "0x4000091")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Coroutine soundLoadingCoroutine;

	[Token(Token = "0x4000092")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly string[] clipFormats;

	[Token(Token = "0x4000093")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private readonly AudioType[] formatTypes;

	[Token(Token = "0x60000F8")]
	[Address(RVA = "0x14E18B0", Offset = "0x14E18B0", VA = "0x14E18B0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000F9")]
	[Address(RVA = "0x14E1F50", Offset = "0x14E1F50", VA = "0x14E1F50")]
	private void Start()
	{
	}

	[Token(Token = "0x60000FA")]
	[Address(RVA = "0x14E2AC4", Offset = "0x14E2AC4", VA = "0x14E2AC4")]
	private void Update()
	{
	}

	[Token(Token = "0x60000FB")]
	[Address(RVA = "0x14E323C", Offset = "0x14E323C", VA = "0x14E323C")]
	private void TrySaveVolumeMap()
	{
	}

	[Token(Token = "0x60000FC")]
	[Address(RVA = "0x14E48E4", Offset = "0x14E48E4", VA = "0x14E48E4")]
	private void TryLoadVolumeMap()
	{
	}

	[Token(Token = "0x60000FD")]
	[Address(RVA = "0x14E246C", Offset = "0x14E246C", VA = "0x14E246C")]
	private void ReloadSounds()
	{
	}

	[Token(Token = "0x60000FE")]
	[Address(RVA = "0x14E6014", Offset = "0x14E6014", VA = "0x14E6014")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD00EA8", Offset = "0xD00EA8")]
	private IEnumerator SoundClipsLoadingRoutine()
	{
		return null;
	}

	[Token(Token = "0x60000FF")]
	[Address(RVA = "0x14E6230", Offset = "0x14E6230", VA = "0x14E6230")]
	private ClipFile FindClipFile(string clipName)
	{
		return default(ClipFile);
	}

	[Token(Token = "0x6000100")]
	[Address(RVA = "0x14E462C", Offset = "0x14E462C", VA = "0x14E462C")]
	private static string GetClipUrl(string clipFileName)
	{
		return null;
	}

	[Token(Token = "0x6000101")]
	[Address(RVA = "0x14E6D04", Offset = "0x14E6D04", VA = "0x14E6D04")]
	public DevAudioManager()
	{
	}
}
[Token(Token = "0x2000023")]
public class LevelAudioController : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000172")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCF9970", Offset = "0xCF9970")]
	private sealed class <>c
	{
		[Token(Token = "0x400074A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x400074B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<KeyValuePair<SplineComputer, List<Ball>>, int> <>9__10_0;

		[Token(Token = "0x6000B9F")]
		[Address(RVA = "0x195A794", Offset = "0x195A794", VA = "0x195A794")]
		public <>c()
		{
		}

		[Token(Token = "0x6000BA0")]
		[Address(RVA = "0x195A884", Offset = "0x195A884", VA = "0x195A884")]
		internal int <Update>b__10_0(KeyValuePair<SplineComputer, List<Ball>> x)
		{
			return default(int);
		}
	}

	[Token(Token = "0x4000094")]
	private const float LERP_SPEED = 0.25f;

	[Token(Token = "0x4000095")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float baseMusicVolume;

	[Token(Token = "0x4000096")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float maxMusicVolume;

	[Token(Token = "0x4000097")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float lerpMusicVolume;

	[Token(Token = "0x4000098")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private string endGameMusic;

	[Token(Token = "0x4000099")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public PlaySoundResult endGameMusicLink;

	[Token(Token = "0x400009A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private string mainMusic;

	[Token(Token = "0x6000102")]
	[Address(RVA = "0x1953984", Offset = "0x1953984", VA = "0x1953984")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000103")]
	[Address(RVA = "0x1953D6C", Offset = "0x1953D6C", VA = "0x1953D6C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000104")]
	[Address(RVA = "0x19543CC", Offset = "0x19543CC", VA = "0x19543CC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000105")]
	[Address(RVA = "0x1956028", Offset = "0x1956028", VA = "0x1956028")]
	private void Update()
	{
	}

	[Token(Token = "0x6000106")]
	[Address(RVA = "0x1954F68", Offset = "0x1954F68", VA = "0x1954F68")]
	private void StopSounds()
	{
	}

	[Token(Token = "0x6000107")]
	[Address(RVA = "0x1957084", Offset = "0x1957084", VA = "0x1957084")]
	private void OnTimedSpeedChangeProgress(float progress)
	{
	}

	[Token(Token = "0x6000108")]
	[Address(RVA = "0x1958C94", Offset = "0x1958C94", VA = "0x1958C94")]
	private void OnGameStateChanged(GameState prevGameState, GameState newGameState)
	{
	}

	[Token(Token = "0x6000109")]
	[Address(RVA = "0x19590A0", Offset = "0x19590A0", VA = "0x19590A0")]
	private void OnComputersChange(SplineComputer[] splineComputers)
	{
	}

	[Token(Token = "0x600010A")]
	[Address(RVA = "0x195A38C", Offset = "0x195A38C", VA = "0x195A38C")]
	public LevelAudioController()
	{
	}
}
[Token(Token = "0x2000024")]
public class PlaySound : MonoBehaviour
{
	[Token(Token = "0x400009B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private string soundName;

	[Token(Token = "0x400009C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float overridePitch;

	[Token(Token = "0x400009D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private bool disableOnDestroyOrPool;

	[Token(Token = "0x400009E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	private bool active;

	[Token(Token = "0x600010B")]
	[Address(RVA = "0x1A03444", Offset = "0x1A03444", VA = "0x1A03444")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600010C")]
	[Address(RVA = "0x1A03D48", Offset = "0x1A03D48", VA = "0x1A03D48")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600010D")]
	[Address(RVA = "0x1A0455C", Offset = "0x1A0455C", VA = "0x1A0455C")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x600010E")]
	[Address(RVA = "0x1A04C18", Offset = "0x1A04C18", VA = "0x1A04C18")]
	public PlaySound()
	{
	}
}
[Token(Token = "0x2000025")]
public enum BallType
{
	[Token(Token = "0x40000A0")]
	Common,
	[Token(Token = "0x40000A1")]
	Bonus,
	[Token(Token = "0x40000A2")]
	Final
}
[Token(Token = "0x2000026")]
public enum BonusType
{
	[Token(Token = "0x40000A4")]
	None,
	[Token(Token = "0x40000A5")]
	Bomb,
	[Token(Token = "0x40000A6")]
	ColorBomb,
	[Token(Token = "0x40000A7")]
	RainbowBall,
	[Token(Token = "0x40000A8")]
	TimeSlow,
	[Token(Token = "0x40000A9")]
	TimePause
}
[Token(Token = "0x2000027")]
public enum BallColor
{
	[Token(Token = "0x40000AB")]
	Red,
	[Token(Token = "0x40000AC")]
	Green,
	[Token(Token = "0x40000AD")]
	Blue,
	[Token(Token = "0x40000AE")]
	Yellow,
	[Token(Token = "0x40000AF")]
	Magenta
}
[Serializable]
[Token(Token = "0x2000028")]
public struct BallConfig
{
	[Token(Token = "0x40000B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public BallType ballType;

	[Token(Token = "0x40000B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public BallColor ballColor;

	[Token(Token = "0x40000B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public BonusType bonusType;
}
[Token(Token = "0x2000029")]
public class Ball : MonoBehaviour
{
	[Token(Token = "0x40000B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static float currReachedDistance;

	[Token(Token = "0x40000B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private BallConfig _ballConfig;

	[Token(Token = "0x40000B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private string _plasedSound;

	[Token(Token = "0x40000B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool colorChanged;

	[Token(Token = "0x40000B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private bool _isBonusBall;

	[Token(Token = "0x40000B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private BallColoredComponents _ballColoredComponents;

	[Token(Token = "0x40000BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private GameObject _ballVisualInstantiated;

	[Token(Token = "0x40000BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private SplinePositioner _splinePositioner;

	[Token(Token = "0x40000BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private bool _initialized;

	[Token(Token = "0x40000BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Collider _collider;

	[Token(Token = "0x17000015")]
	public bool isBonusBall
	{
		[Token(Token = "0x6000111")]
		[Address(RVA = "0x13918B4", Offset = "0x13918B4", VA = "0x13918B4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000112")]
		[Address(RVA = "0x1391A78", Offset = "0x1391A78", VA = "0x1391A78")]
		set
		{
		}
	}

	[Token(Token = "0x17000016")]
	public BallConfig ballConfig
	{
		[Token(Token = "0x6000113")]
		[Address(RVA = "0x1391E08", Offset = "0x1391E08", VA = "0x1391E08")]
		get
		{
			return default(BallConfig);
		}
		[Token(Token = "0x6000114")]
		[Address(RVA = "0x1391FCC", Offset = "0x1391FCC", VA = "0x1391FCC")]
		set
		{
		}
	}

	[Token(Token = "0x17000017")]
	public SplinePositioner splinePositioner
	{
		[Token(Token = "0x6000115")]
		[Address(RVA = "0x139368C", Offset = "0x139368C", VA = "0x139368C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000018")]
	public double position
	{
		[Token(Token = "0x6000116")]
		[Address(RVA = "0x1393840", Offset = "0x1393840", VA = "0x1393840")]
		get
		{
			return default(double);
		}
	}

	[Token(Token = "0x17000019")]
	public GameObject ballVisual
	{
		[Token(Token = "0x6000117")]
		[Address(RVA = "0x1393CB0", Offset = "0x1393CB0", VA = "0x1393CB0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x14000004")]
	public static event Action<Ball> onBonusBallStateChanged
	{
		[Token(Token = "0x600010F")]
		[Address(RVA = "0x139154C", Offset = "0x139154C", VA = "0x139154C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD00F0C", Offset = "0xD00F0C")]
		add
		{
		}
		[Token(Token = "0x6000110")]
		[Address(RVA = "0x1391700", Offset = "0x1391700", VA = "0x1391700")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD00F1C", Offset = "0xD00F1C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000005")]
	public event Action<BallConfig> onOnBallConfigChanged
	{
		[Token(Token = "0x6000118")]
		[Address(RVA = "0x1393E64", Offset = "0x1393E64", VA = "0x1393E64")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD00F2C", Offset = "0xD00F2C")]
		add
		{
		}
		[Token(Token = "0x6000119")]
		[Address(RVA = "0x1393FCC", Offset = "0x1393FCC", VA = "0x1393FCC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD00F3C", Offset = "0xD00F3C")]
		remove
		{
		}
	}

	[Token(Token = "0x600011A")]
	[Address(RVA = "0x1395134", Offset = "0x1395134", VA = "0x1395134")]
	private void Awake()
	{
	}

	[Token(Token = "0x600011B")]
	[Address(RVA = "0x1395504", Offset = "0x1395504", VA = "0x1395504")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600011C")]
	[Address(RVA = "0x1395854", Offset = "0x1395854", VA = "0x1395854")]
	public void ClearVisualsAndPool()
	{
	}

	[Token(Token = "0x600011D")]
	[Address(RVA = "0x1395C6C", Offset = "0x1395C6C", VA = "0x1395C6C")]
	private void ClearVisuals()
	{
	}

	[Token(Token = "0x600011E")]
	[Address(RVA = "0x1392678", Offset = "0x1392678", VA = "0x1392678")]
	private void UpdateVisual()
	{
	}

	[Token(Token = "0x600011F")]
	[Address(RVA = "0x1396378", Offset = "0x1396378", VA = "0x1396378")]
	public void SetPositionAndActivate(BallConfig newBallConfig, float newPosition, SplineComputer splineComputer)
	{
	}

	[Token(Token = "0x6000120")]
	[Address(RVA = "0x1396F48", Offset = "0x1396F48", VA = "0x1396F48")]
	public void Destroy()
	{
	}

	[Token(Token = "0x6000121")]
	[Address(RVA = "0x1398940", Offset = "0x1398940", VA = "0x1398940")]
	public Ball()
	{
	}
}
[Serializable]
[Token(Token = "0x200002A")]
public struct BallColoredComponents
{
	[Token(Token = "0x40000BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public string name;

	[Token(Token = "0x40000C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public BallType ballType;

	[Token(Token = "0x40000C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public BonusType bonunsType;

	[Token(Token = "0x40000C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public BallColor ballColor;

	[Token(Token = "0x40000C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ObjectPoolEntry ballVisualPrefab;

	[Token(Token = "0x40000C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ObjectPoolEntry projectilePrefab;

	[Token(Token = "0x40000C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ObjectPoolEntry colorChangedPrefab;

	[Token(Token = "0x40000C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[HideInInspector]
	public GameObject explosionPrefab;

	[Token(Token = "0x40000C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject lineObject;

	[Token(Token = "0x40000C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public ObjectPoolEntry soulPrefab;

	[Token(Token = "0x40000C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Color crosshairColor;
}
[Token(Token = "0x200002B")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCF8690", Offset = "0xCF8690")]
public class BallColoredComponentsList : ScriptableObject
{
	[Token(Token = "0x40000CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public BallColoredComponents[] ballColoredComponents;

	[Token(Token = "0x6000123")]
	[Address(RVA = "0x1398C20", Offset = "0x1398C20", VA = "0x1398C20")]
	public BallColoredComponentsList()
	{
	}
}
[Token(Token = "0x200002C")]
public class BallColoredComponentsManager : MonoBehaviour
{
	[Token(Token = "0x40000CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private BallColoredComponentsList ballColoredComponentsList;

	[Token(Token = "0x40000CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static BallColoredComponentsList _ballColoredComponentsList;

	[Token(Token = "0x6000124")]
	[Address(RVA = "0x1398D10", Offset = "0x1398D10", VA = "0x1398D10")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000125")]
	[Address(RVA = "0x1383C78", Offset = "0x1383C78", VA = "0x1383C78")]
	public static BallColoredComponents GetBallComponentsByConfig(BallConfig ballConfig)
	{
		return default(BallColoredComponents);
	}

	[Token(Token = "0x6000126")]
	[Address(RVA = "0x139A67C", Offset = "0x139A67C", VA = "0x139A67C")]
	public BallColoredComponentsManager()
	{
	}
}
[Token(Token = "0x200002D")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xCF8700", Offset = "0xCF8700")]
public abstract class BallDetonateBase : MonoBehaviour
{
	[Token(Token = "0x40000CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected ETFXProjectileScript _projectile;

	[Token(Token = "0x6000127")]
	[Address(RVA = "0x139A76C", Offset = "0x139A76C", VA = "0x139A76C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000128")]
	[Address(RVA = "0x139AA58", Offset = "0x139AA58", VA = "0x139AA58")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000129")]
	[Address(RVA = "0x139ADEC", Offset = "0x139ADEC", VA = "0x139ADEC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600012A")]
	protected abstract void ProjectileOnOnBallDetonated(float distance, BallConfig ballConfig, Transform visualTransform, SplineComputer splineComputer);

	[Token(Token = "0x600012B")]
	[Address(RVA = "0x139B180", Offset = "0x139B180", VA = "0x139B180")]
	protected BallDetonateBase()
	{
	}
}
[Token(Token = "0x200002E")]
public class BallDetonateBomb : BallDetonateBase
{
	[Token(Token = "0x40000CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float bombRadius;

	[Token(Token = "0x40000CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private LayerMask layerMask;

	[Token(Token = "0x600012C")]
	[Address(RVA = "0x139B270", Offset = "0x139B270", VA = "0x139B270", Slot = "4")]
	protected override void ProjectileOnOnBallDetonated(float distance, BallConfig ballConfig, Transform visualTransform, SplineComputer splineComputer)
	{
	}

	[Token(Token = "0x600012D")]
	[Address(RVA = "0x139CD8C", Offset = "0x139CD8C", VA = "0x139CD8C")]
	public BallDetonateBomb()
	{
	}
}
[Token(Token = "0x200002F")]
public class BallDetonateColorize : BallDetonateBase
{
	[Token(Token = "0x40000D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float bombRadius;

	[Token(Token = "0x40000D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private LayerMask layerMask;

	[Token(Token = "0x600012E")]
	[Address(RVA = "0x139CE78", Offset = "0x139CE78", VA = "0x139CE78", Slot = "4")]
	protected override void ProjectileOnOnBallDetonated(float distance, BallConfig ballConfig, Transform visualTransform, SplineComputer splineComputer)
	{
	}

	[Token(Token = "0x600012F")]
	[Address(RVA = "0x139EC64", Offset = "0x139EC64", VA = "0x139EC64")]
	public BallDetonateColorize()
	{
	}
}
[Token(Token = "0x2000030")]
public class BallDetonateRainbowBall : BallDetonateBase
{
	[Token(Token = "0x6000130")]
	[Address(RVA = "0x139ED50", Offset = "0x139ED50", VA = "0x139ED50", Slot = "4")]
	protected override void ProjectileOnOnBallDetonated(float distance, BallConfig ballConfig, Transform visualTransform, SplineComputer splineComputer)
	{
	}

	[Token(Token = "0x6000131")]
	[Address(RVA = "0x139F098", Offset = "0x139F098", VA = "0x139F098")]
	public BallDetonateRainbowBall()
	{
	}
}
[Token(Token = "0x2000031")]
public class BallDetonateSimple : BallDetonateBase
{
	[Token(Token = "0x6000132")]
	[Address(RVA = "0x139F184", Offset = "0x139F184", VA = "0x139F184", Slot = "4")]
	protected override void ProjectileOnOnBallDetonated(float distance, BallConfig ballConfig, Transform visualTransform, SplineComputer splineComputer)
	{
	}

	[Token(Token = "0x6000133")]
	[Address(RVA = "0x139F4CC", Offset = "0x139F4CC", VA = "0x139F4CC")]
	public BallDetonateSimple()
	{
	}
}
[Token(Token = "0x2000032")]
public class BallSoul : TargetFollower
{
	[Token(Token = "0x40000D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int totalAliveCount;

	[Token(Token = "0x40000D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private string id;

	[Token(Token = "0x40000D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Chest _currChest;

	[Token(Token = "0x6000134")]
	[Address(RVA = "0x13A366C", Offset = "0x13A366C", VA = "0x13A366C", Slot = "4")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x6000135")]
	[Address(RVA = "0x13A3B44", Offset = "0x13A3B44", VA = "0x13A3B44")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000136")]
	[Address(RVA = "0x13A4028", Offset = "0x13A4028", VA = "0x13A4028")]
	private void GameManagerOnGameStateChanged(GameState prevGameState, GameState newGameState)
	{
	}

	[Token(Token = "0x6000137")]
	[Address(RVA = "0x13A44D4", Offset = "0x13A44D4", VA = "0x13A44D4")]
	public void SetChestAndId(Chest chest, string id)
	{
	}

	[Token(Token = "0x6000138")]
	[Address(RVA = "0x13A47C8", Offset = "0x13A47C8", VA = "0x13A47C8", Slot = "5")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6000139")]
	[Address(RVA = "0x13A6510", Offset = "0x13A6510", VA = "0x13A6510")]
	public BallSoul()
	{
	}
}
[Token(Token = "0x2000033")]
public class BonusBallController : MonoBehaviour
{
	[Token(Token = "0x40000D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Ball _ball;

	[Token(Token = "0x40000D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private BallColor ballColor;

	[Token(Token = "0x40000D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private MeshRenderer ballMeshRenderer;

	[Token(Token = "0x40000D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private MeshRenderer coverageMeshRenderer;

	[Token(Token = "0x40000D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Color _baseEmission;

	[Token(Token = "0x40000DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Color _baseCoverageEmission;

	[Token(Token = "0x40000DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	[AttributeAttribute(Name = "ColorUsageAttribute", RVA = "0xCFA6C4", Offset = "0xCFA6C4")]
	private Color _targetEmission;

	[Token(Token = "0x40000DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float timeLimit;

	[Token(Token = "0x40000DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float waveDurationMin;

	[Token(Token = "0x40000DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float waveEmissionMax;

	[Token(Token = "0x40000DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float waveEmissionMin;

	[Token(Token = "0x40000E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float waveEmissionAcceleration;

	[Token(Token = "0x40000E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float waveAcceleration;

	[Token(Token = "0x40000E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float waveCurrentDuration;

	[Token(Token = "0x40000E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private float waveCurrentTime;

	[Token(Token = "0x40000E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float pingPongValue;

	[Token(Token = "0x600013A")]
	[Address(RVA = "0x13A663C", Offset = "0x13A663C", VA = "0x13A663C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600013B")]
	[Address(RVA = "0x13A69E0", Offset = "0x13A69E0", VA = "0x13A69E0")]
	public void ActivateBonusForTime(Ball ball, float time)
	{
	}

	[Token(Token = "0x600013C")]
	[Address(RVA = "0x13A71EC", Offset = "0x13A71EC", VA = "0x13A71EC")]
	private void UpdateMeshRenderer(BallConfig ballConfig)
	{
	}

	[Token(Token = "0x600013D")]
	[Address(RVA = "0x13A7A48", Offset = "0x13A7A48", VA = "0x13A7A48")]
	private void Update()
	{
	}

	[Token(Token = "0x600013E")]
	[Address(RVA = "0x13A9E40", Offset = "0x13A9E40", VA = "0x13A9E40")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600013F")]
	[Address(RVA = "0x13AA438", Offset = "0x13AA438", VA = "0x13AA438")]
	public BonusBallController()
	{
	}
}
[Token(Token = "0x2000034")]
public class BallOnLineColorizer : MonoBehaviour
{
	[Token(Token = "0x40000E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SplineComputer targetSpline;

	[Token(Token = "0x40000E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private SplinePositioner _splinePositioner;

	[Token(Token = "0x40000E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<Ball, bool> balls;

	[Token(Token = "0x6000140")]
	[Address(RVA = "0x139F5B8", Offset = "0x139F5B8", VA = "0x139F5B8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000141")]
	[Address(RVA = "0x139FFDC", Offset = "0x139FFDC", VA = "0x139FFDC")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000142")]
	[Address(RVA = "0x13A0CC8", Offset = "0x13A0CC8", VA = "0x13A0CC8")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x6000143")]
	[Address(RVA = "0x13A2C14", Offset = "0x13A2C14", VA = "0x13A2C14")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000144")]
	[Address(RVA = "0x13A1FD4", Offset = "0x13A1FD4", VA = "0x13A1FD4")]
	private void tryToColorize(Ball ball)
	{
	}

	[Token(Token = "0x6000145")]
	[Address(RVA = "0x13A33B4", Offset = "0x13A33B4", VA = "0x13A33B4")]
	public BallOnLineColorizer()
	{
	}
}
[Token(Token = "0x2000035")]
public abstract class BonusBase : TargetFollower
{
	[Token(Token = "0x40000E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[SerializeField]
	private bool destructable;

	[Token(Token = "0x40000E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private GameObject pickUpEffectPrefab;

	[Token(Token = "0x40000EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Bonus _bonus;

	[Token(Token = "0x6000146")]
	[Address(RVA = "0x13AA528", Offset = "0x13AA528", VA = "0x13AA528")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000147")]
	[Address(RVA = "0x13AA8BC", Offset = "0x13AA8BC", VA = "0x13AA8BC")]
	private void OnGameStateChanged(GameState prevGameState, GameState gameState)
	{
	}

	[Token(Token = "0x6000148")]
	[Address(RVA = "0x13AB010", Offset = "0x13AB010", VA = "0x13AB010")]
	public void Activate(Bonus bonus)
	{
	}

	[Token(Token = "0x6000149")]
	[Address(RVA = "0x13AC5C0", Offset = "0x13AC5C0", VA = "0x13AC5C0", Slot = "6")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x600014A")]
	[Address(RVA = "0x13ACE90", Offset = "0x13ACE90", VA = "0x13ACE90")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600014B")]
	[Address(RVA = "0x13AC898", Offset = "0x13AC898", VA = "0x13AC898")]
	private void FreeBonusPoint()
	{
	}

	[Token(Token = "0x600014C")]
	[Address(RVA = "0x13AD7B4", Offset = "0x13AD7B4", VA = "0x13AD7B4")]
	private void OnCollisionEnter(Collision other)
	{
	}

	[Token(Token = "0x600014D")]
	[Address(RVA = "0x13AE280", Offset = "0x13AE280", VA = "0x13AE280")]
	private void TriggerBonus()
	{
	}

	[Token(Token = "0x600014E")]
	protected abstract void OnBonusTriggered();

	[Token(Token = "0x600014F")]
	[Address(RVA = "0x13AE998", Offset = "0x13AE998", VA = "0x13AE998")]
	protected BonusBase()
	{
	}
}
[Token(Token = "0x2000036")]
public class BonusPoint : MonoBehaviour
{
	[Token(Token = "0x6000150")]
	[Address(RVA = "0x13AEBCC", Offset = "0x13AEBCC", VA = "0x13AEBCC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000151")]
	[Address(RVA = "0x13AF41C", Offset = "0x13AF41C", VA = "0x13AF41C")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000152")]
	[Address(RVA = "0x13AF970", Offset = "0x13AF970", VA = "0x13AF970")]
	public BonusPoint()
	{
	}
}
[Serializable]
[Token(Token = "0x2000037")]
public struct RequiriementElement
{
	[Token(Token = "0x40000EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public string Id;

	[Token(Token = "0x40000EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public int Count;

	[Token(Token = "0x40000ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Sprite Icon;

	[Token(Token = "0x40000EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Color IconColor;

	[Token(Token = "0x40000EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject SlamWave;
}
[Token(Token = "0x2000038")]
public enum ChestRarity
{
	[Token(Token = "0x40000F1")]
	Common = 0,
	[Token(Token = "0x40000F2")]
	Rare = 10,
	[Token(Token = "0x40000F3")]
	Epic = 20,
	[Token(Token = "0x40000F4")]
	Legendary = 30
}
[Token(Token = "0x2000039")]
public class Chest : MonoBehaviour
{
	[Token(Token = "0x40000F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static List<Chest> openedChests;

	[Token(Token = "0x40000F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private ChestRarity chestRarity;

	[Token(Token = "0x40000F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool _opened;

	[Token(Token = "0x40000FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Requirement _requirement;

	[Token(Token = "0x40000FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private ObjectPoolEntry comboSoul;

	[Token(Token = "0x40000FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private ObjectPoolEntry content;

	[Token(Token = "0x40000FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private ObjectPoolEntry keyContent;

	[Token(Token = "0x40000FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private RequiriementElement[] requiriementElements;

	[Token(Token = "0x40000FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private GameObject[] disableOnOpen;

	[Token(Token = "0x4000100")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private GameObject enableOnOpen;

	[Token(Token = "0x4000101")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private GameObject doneIcon;

	[Token(Token = "0x4000102")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private GameObject ProcessingGameObject;

	[Token(Token = "0x4000103")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private TextMesh ChestIncrementText;

	[Token(Token = "0x4000104")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private SpriteRenderer IconLink;

	[Token(Token = "0x4000105")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private string slamWaveName;

	[Token(Token = "0x4000106")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private int currSoulsSpawned;

	[Token(Token = "0x14000006")]
	public event Action ChestOpened
	{
		[Token(Token = "0x6000153")]
		[Address(RVA = "0x13C1D94", Offset = "0x13C1D94", VA = "0x13C1D94")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD00F4C", Offset = "0xD00F4C")]
		add
		{
		}
		[Token(Token = "0x6000154")]
		[Address(RVA = "0x13C1EFC", Offset = "0x13C1EFC", VA = "0x13C1EFC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD00F5C", Offset = "0xD00F5C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000007")]
	public event Action SoulAdded
	{
		[Token(Token = "0x6000155")]
		[Address(RVA = "0x13C2064", Offset = "0x13C2064", VA = "0x13C2064")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD00F6C", Offset = "0xD00F6C")]
		add
		{
		}
		[Token(Token = "0x6000156")]
		[Address(RVA = "0x13C21CC", Offset = "0x13C21CC", VA = "0x13C21CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD00F7C", Offset = "0xD00F7C")]
		remove
		{
		}
	}

	[Token(Token = "0x6000157")]
	[Address(RVA = "0x13C2334", Offset = "0x13C2334", VA = "0x13C2334")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000158")]
	[Address(RVA = "0x13C4D38", Offset = "0x13C4D38", VA = "0x13C4D38")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000159")]
	[Address(RVA = "0x13A58C0", Offset = "0x13A58C0", VA = "0x13A58C0")]
	public void AddSoul(string id)
	{
	}

	[Token(Token = "0x600015A")]
	[Address(RVA = "0x13C5614", Offset = "0x13C5614", VA = "0x13C5614")]
	private void OnGoal()
	{
	}

	[Token(Token = "0x600015B")]
	[Address(RVA = "0x13C5D08", Offset = "0x13C5D08", VA = "0x13C5D08")]
	private void OnBallsLineDestroyed(Vector3[] positions, BallConfig[] BallConfigs, int combo, bool finalBall)
	{
	}

	[Token(Token = "0x600015C")]
	[Address(RVA = "0x13C9090", Offset = "0x13C9090", VA = "0x13C9090")]
	public Chest()
	{
	}
}
[Token(Token = "0x200003A")]
public class NewProjectileConfigSetter : BonusBase
{
	[Token(Token = "0x2000173")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCF9980", Offset = "0xCF9980")]
	private sealed class <AvailabilityUpdateRoutine>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400074C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400074D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400074E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public NewProjectileConfigSetter <>4__this;

		[Token(Token = "0x17000134")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000BA4")]
			[Address(RVA = "0x218F4B8", Offset = "0x218F4B8", VA = "0x218F4B8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000135")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000BA6")]
			[Address(RVA = "0x218F684", Offset = "0x218F684", VA = "0x218F684", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000BA1")]
		[Address(RVA = "0x218D9C4", Offset = "0x218D9C4", VA = "0x218D9C4")]
		[DebuggerHidden]
		public <AvailabilityUpdateRoutine>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6000BA2")]
		[Address(RVA = "0x218EC40", Offset = "0x218EC40", VA = "0x218EC40", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000BA3")]
		[Address(RVA = "0x218ED20", Offset = "0x218ED20", VA = "0x218ED20", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BA5")]
		[Address(RVA = "0x218F5A4", Offset = "0x218F5A4", VA = "0x218F5A4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000107")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private BallConfig BallConfig;

	[Token(Token = "0x4000108")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Coroutine availabilityCoroutine;

	[Token(Token = "0x600015E")]
	[Address(RVA = "0x218CA44", Offset = "0x218CA44", VA = "0x218CA44", Slot = "4")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x600015F")]
	[Address(RVA = "0x218CEA4", Offset = "0x218CEA4", VA = "0x218CEA4", Slot = "6")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x6000160")]
	[Address(RVA = "0x218D304", Offset = "0x218D304", VA = "0x218D304")]
	private void OnGameStateChange(GameState prevState, GameState currState)
	{
	}

	[Token(Token = "0x6000161")]
	[Address(RVA = "0x218D8A8", Offset = "0x218D8A8", VA = "0x218D8A8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD00F8C", Offset = "0xD00F8C")]
	private IEnumerator AvailabilityUpdateRoutine()
	{
		return null;
	}

	[Token(Token = "0x6000162")]
	[Address(RVA = "0x218DAC4", Offset = "0x218DAC4", VA = "0x218DAC4")]
	protected void UpdateAvailabilityState()
	{
	}

	[Token(Token = "0x6000163")]
	[Address(RVA = "0x218E840", Offset = "0x218E840", VA = "0x218E840", Slot = "7")]
	protected override void OnBonusTriggered()
	{
	}

	[Token(Token = "0x6000164")]
	[Address(RVA = "0x218EB50", Offset = "0x218EB50", VA = "0x218EB50")]
	public NewProjectileConfigSetter()
	{
	}
}
[Token(Token = "0x200003B")]
public abstract class RewardBase : MonoBehaviour
{
	[Token(Token = "0x6000165")]
	[Address(RVA = "0x1A16CE8", Offset = "0x1A16CE8", VA = "0x1A16CE8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000166")]
	[Address(RVA = "0x1A1707C", Offset = "0x1A1707C", VA = "0x1A1707C")]
	private void GameManagerOnGameStateChanged(GameState prevGameState, GameState newGameState)
	{
	}

	[Token(Token = "0x6000167")]
	protected abstract void OnRewardAppeared(ChestRarity chestRarity);

	[Token(Token = "0x6000168")]
	[Address(RVA = "0x1A17524", Offset = "0x1A17524", VA = "0x1A17524")]
	public void OpenFromChest(ChestRarity chestRarity)
	{
	}

	[Token(Token = "0x6000169")]
	[Address(RVA = "0x1A17DE0", Offset = "0x1A17DE0", VA = "0x1A17DE0")]
	protected RewardBase()
	{
	}
}
[Token(Token = "0x200003C")]
public class RewardBonus : RewardBase
{
	[Token(Token = "0x600016A")]
	[Address(RVA = "0x1A17ED0", Offset = "0x1A17ED0", VA = "0x1A17ED0", Slot = "4")]
	protected override void OnRewardAppeared(ChestRarity chestRarity)
	{
	}

	[Token(Token = "0x600016B")]
	[Address(RVA = "0x1A18674", Offset = "0x1A18674", VA = "0x1A18674")]
	public RewardBonus()
	{
	}
}
[Serializable]
[Token(Token = "0x200003D")]
public struct ScoresByRarity
{
	[Token(Token = "0x4000109")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ChestRarity ChestRarity;

	[Token(Token = "0x400010A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public int Scores;
}
[Token(Token = "0x200003E")]
public class RewardScores : RewardBase
{
	[Token(Token = "0x400010B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private ScoresByRarity[] scoresByRarities;

	[Token(Token = "0x400010C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<ChestRarity, int> scoresByRaritiesDict;

	[Token(Token = "0x400010D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private TextMesh textMesh;

	[Token(Token = "0x400010E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private TextMesh textMesh2;

	[Token(Token = "0x600016C")]
	[Address(RVA = "0x1A18760", Offset = "0x1A18760", VA = "0x1A18760")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600016D")]
	[Address(RVA = "0x1A19138", Offset = "0x1A19138", VA = "0x1A19138", Slot = "4")]
	protected override void OnRewardAppeared(ChestRarity chestRarity)
	{
	}

	[Token(Token = "0x600016E")]
	[Address(RVA = "0x1A1A0E8", Offset = "0x1A1A0E8", VA = "0x1A1A0E8")]
	public RewardScores()
	{
	}
}
[Token(Token = "0x200003F")]
public class TargetFollower : MonoBehaviour
{
	[Token(Token = "0x400010F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	protected float moveSpeed;

	[Token(Token = "0x4000110")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private bool randomizeSpeed;

	[Token(Token = "0x4000111")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float moveSpeedUpdated;

	[Token(Token = "0x4000112")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private Vector3 speedRange;

	[Token(Token = "0x4000113")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Vector3 endOffset;

	[Token(Token = "0x4000114")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Vector3 currEndOffset;

	[Token(Token = "0x4000115")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private bool canMoveToTarget;

	[Token(Token = "0x4000116")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	protected Vector3 randomSpeed;

	[Token(Token = "0x4000117")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	protected float currTime;

	[Token(Token = "0x4000118")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected Transform currTarget;

	[Token(Token = "0x4000119")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float t;

	[Token(Token = "0x600016F")]
	[Address(RVA = "0x174469C", Offset = "0x174469C", VA = "0x174469C")]
	public void Initialize(Transform target)
	{
	}

	[Token(Token = "0x6000170")]
	[Address(RVA = "0x1744C10", Offset = "0x1744C10", VA = "0x1744C10", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000171")]
	[Address(RVA = "0x1745168", Offset = "0x1745168", VA = "0x1745168")]
	protected void ClearTarget()
	{
	}

	[Token(Token = "0x6000172")]
	[Address(RVA = "0x17453D8", Offset = "0x17453D8", VA = "0x17453D8", Slot = "5")]
	protected virtual void Update()
	{
	}

	[Token(Token = "0x6000173")]
	[Address(RVA = "0x1746338", Offset = "0x1746338", VA = "0x1746338")]
	public TargetFollower()
	{
	}
}
[Token(Token = "0x2000040")]
public class TimeModifierBonus : BonusBase
{
	[Token(Token = "0x400011A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private float duration;

	[Token(Token = "0x400011B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	[SerializeField]
	private float speedMultiplier;

	[Token(Token = "0x6000174")]
	[Address(RVA = "0x1749780", Offset = "0x1749780", VA = "0x1749780", Slot = "7")]
	protected override void OnBonusTriggered()
	{
	}

	[Token(Token = "0x6000175")]
	[Address(RVA = "0x1749A98", Offset = "0x1749A98", VA = "0x1749A98")]
	public TimeModifierBonus()
	{
	}
}
[Serializable]
[Token(Token = "0x2000041")]
public struct Bonus
{
	[Token(Token = "0x400011C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xCFA8FC", Offset = "0xCFA8FC")]
	public BonusType bonusType;

	[Token(Token = "0x400011D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public BallColor BallColor;

	[Token(Token = "0x400011E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ObjectPoolEntry BonusPrefab;
}
[Token(Token = "0x2000042")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCF8764", Offset = "0xCF8764")]
public class BonusesList : ScriptableObject
{
	[Token(Token = "0x400011F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Bonus[] bonuses;

	[Token(Token = "0x6000176")]
	[Address(RVA = "0x13AFA60", Offset = "0x13AFA60", VA = "0x13AFA60")]
	public BonusesList()
	{
	}
}
[Token(Token = "0x2000043")]
public class BonusesManager : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000174")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCF9990", Offset = "0xCF9990")]
	private sealed class <>c
	{
		[Token(Token = "0x400074F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000750")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<KeyValuePair<Transform, bool>, bool> <>9__27_0;

		[Token(Token = "0x4000751")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Predicate<Ball> <>9__27_1;

		[Token(Token = "0x4000752")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Func<KeyValuePair<Transform, bool>, bool> <>9__31_0;

		[Token(Token = "0x6000BA8")]
		[Address(RVA = "0x13B7D50", Offset = "0x13B7D50", VA = "0x13B7D50")]
		public <>c()
		{
		}

		[Token(Token = "0x6000BA9")]
		[Address(RVA = "0x13B7E40", Offset = "0x13B7E40", VA = "0x13B7E40")]
		internal bool <Update>b__27_0(KeyValuePair<Transform, bool> x)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BAA")]
		[Address(RVA = "0x13B8090", Offset = "0x13B8090", VA = "0x13B8090")]
		internal bool <Update>b__27_1(Ball x)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BAB")]
		[Address(RVA = "0x13B8374", Offset = "0x13B8374", VA = "0x13B8374")]
		internal bool <SpawnBonusOnPos>b__31_0(KeyValuePair<Transform, bool> x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000120")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static BonusesManager Instance;

	[Token(Token = "0x4000121")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static BonusesList _bonusList;

	[Token(Token = "0x4000122")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static readonly List<Bonus> availableBonusList;

	[Token(Token = "0x4000123")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static readonly Dictionary<Transform, bool> availablePositionsDict;

	[Token(Token = "0x4000124")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static readonly List<Bonus> spawnedBonuses;

	[Token(Token = "0x4000125")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private BonusesList bonusesList;

	[Token(Token = "0x4000126")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject bonusPointPrefab;

	[Token(Token = "0x4000127")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ObjectPoolEntry bonusBallPrefab;

	[Token(Token = "0x4000128")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ObjectPoolEntry bonusBallexploded;

	[Token(Token = "0x4000129")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static GameObject _bonusPointPrefab;

	[Token(Token = "0x400012A")]
	private const int MAX_BONUS_COUNT = 3;

	[Token(Token = "0x400012D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public List<Ball> bonusBalls;

	[Token(Token = "0x400012E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool working;

	[Token(Token = "0x400012F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[SerializeField]
	private float waitTime;

	[Token(Token = "0x4000130")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float bonusTime;

	[Token(Token = "0x4000131")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float _currWaitTime;

	[Token(Token = "0x14000008")]
	public static event Action<Bonus> OnBonusDrop
	{
		[Token(Token = "0x6000177")]
		[Address(RVA = "0x13AFB50", Offset = "0x13AFB50", VA = "0x13AFB50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD00FF0", Offset = "0xD00FF0")]
		add
		{
		}
		[Token(Token = "0x6000178")]
		[Address(RVA = "0x13AFD04", Offset = "0x13AFD04", VA = "0x13AFD04")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD01000", Offset = "0xD01000")]
		remove
		{
		}
	}

	[Token(Token = "0x14000009")]
	public static event Action<Bonus> OnBonusUse
	{
		[Token(Token = "0x6000179")]
		[Address(RVA = "0x13AFEB8", Offset = "0x13AFEB8", VA = "0x13AFEB8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD01010", Offset = "0xD01010")]
		add
		{
		}
		[Token(Token = "0x600017A")]
		[Address(RVA = "0x13B006C", Offset = "0x13B006C", VA = "0x13B006C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD01020", Offset = "0xD01020")]
		remove
		{
		}
	}

	[Token(Token = "0x600017B")]
	[Address(RVA = "0x13B0220", Offset = "0x13B0220", VA = "0x13B0220")]
	internal static void BonusDrop(Bonus bonus)
	{
	}

	[Token(Token = "0x600017C")]
	[Address(RVA = "0x13AE670", Offset = "0x13AE670", VA = "0x13AE670")]
	internal static void BonusTriggered(Bonus bonus)
	{
	}

	[Token(Token = "0x600017D")]
	[Address(RVA = "0x13B0550", Offset = "0x13B0550", VA = "0x13B0550")]
	private void Awake()
	{
	}

	[Token(Token = "0x600017E")]
	[Address(RVA = "0x13B1468", Offset = "0x13B1468", VA = "0x13B1468")]
	private void OnBonusBallStateChanged(Ball ball)
	{
	}

	[Token(Token = "0x600017F")]
	[Address(RVA = "0x13B27FC", Offset = "0x13B27FC", VA = "0x13B27FC")]
	private static void Log(object msg)
	{
	}

	[Token(Token = "0x6000180")]
	[Address(RVA = "0x13B2AD4", Offset = "0x13B2AD4", VA = "0x13B2AD4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000181")]
	[Address(RVA = "0x13B4138", Offset = "0x13B4138", VA = "0x13B4138")]
	private void OnStartLevelLoading()
	{
	}

	[Token(Token = "0x6000182")]
	[Address(RVA = "0x13AEF38", Offset = "0x13AEF38", VA = "0x13AEF38")]
	public static void AddAvailableBonusPoint(Transform transform)
	{
	}

	[Token(Token = "0x6000183")]
	[Address(RVA = "0x13B4450", Offset = "0x13B4450", VA = "0x13B4450")]
	private void GameManagerOnGameStateChanged(GameState prevGameState, GameState gameState)
	{
	}

	[Token(Token = "0x6000184")]
	[Address(RVA = "0x1397CFC", Offset = "0x1397CFC", VA = "0x1397CFC")]
	public void SpawnBonusOnPos(Vector3 position)
	{
	}

	[Token(Token = "0x6000185")]
	[Address(RVA = "0x13B46E4", Offset = "0x13B46E4", VA = "0x13B46E4")]
	public static Bonus GetRandomAvailableBonus()
	{
		return default(Bonus);
	}

	[Token(Token = "0x6000186")]
	[Address(RVA = "0x13B6FC8", Offset = "0x13B6FC8", VA = "0x13B6FC8")]
	public static bool IsBonusAvailable(Bonus bonus)
	{
		return default(bool);
	}

	[Token(Token = "0x6000187")]
	[Address(RVA = "0x13B60FC", Offset = "0x13B60FC", VA = "0x13B60FC")]
	public static string GetBonusPrefabNameBTypeAndColor(BonusType bonusType, BallColor ballColor)
	{
		return null;
	}

	[Token(Token = "0x6000188")]
	[Address(RVA = "0x13AB480", Offset = "0x13AB480", VA = "0x13AB480")]
	public static Transform GetClosestTarget(Transform currPos)
	{
		return null;
	}

	[Token(Token = "0x6000189")]
	[Address(RVA = "0x13AD168", Offset = "0x13AD168", VA = "0x13AD168")]
	public static void FreeBonusPoint(Transform pointTransf, Bonus bonus)
	{
	}

	[Token(Token = "0x600018A")]
	[Address(RVA = "0x13B7498", Offset = "0x13B7498", VA = "0x13B7498")]
	public BonusesManager()
	{
	}
}
[Token(Token = "0x2000044")]
[ExecuteInEditMode]
public class BootstrapRunner : MonoBehaviour
{
	[Token(Token = "0x600018C")]
	[Address(RVA = "0x13BB448", Offset = "0x13BB448", VA = "0x13BB448")]
	public BootstrapRunner()
	{
	}
}
[Token(Token = "0x2000045")]
public class DemoGameObject : MonoBehaviour
{
	[Token(Token = "0x600018D")]
	[Address(RVA = "0x14E1450", Offset = "0x14E1450", VA = "0x14E1450")]
	private void Awake()
	{
	}

	[Token(Token = "0x600018E")]
	[Address(RVA = "0x14E17C0", Offset = "0x14E17C0", VA = "0x14E17C0")]
	public DemoGameObject()
	{
	}
}
[Token(Token = "0x2000046")]
public class UiDemoOverlay : MonoBehaviour
{
	[Token(Token = "0x600018F")]
	[Address(RVA = "0x176FA08", Offset = "0x176FA08", VA = "0x176FA08")]
	public void GetFullVersion()
	{
	}

	[Token(Token = "0x6000190")]
	[Address(RVA = "0x176FC18", Offset = "0x176FC18", VA = "0x176FC18")]
	public UiDemoOverlay()
	{
	}
}
[Token(Token = "0x2000047")]
[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xCF87E4", Offset = "0xCF87E4")]
public class FollowPlayer : MonoBehaviour
{
	[Token(Token = "0x6000191")]
	[Address(RVA = "0x342DAC0", Offset = "0x342DAC0", VA = "0x342DAC0")]
	public FollowPlayer()
	{
	}
}
[Token(Token = "0x2000048")]
public enum GameState
{
	[Token(Token = "0x4000133")]
	Menu = 0,
	[Token(Token = "0x4000134")]
	LevelLoading = 3,
	[Token(Token = "0x4000135")]
	LevelStarting = 5,
	[Token(Token = "0x4000136")]
	InGame = 10,
	[Token(Token = "0x4000137")]
	LevelEnding = 15,
	[Token(Token = "0x4000138")]
	GameOver = 20,
	[Token(Token = "0x4000139")]
	LevelComplete = 30,
	[Token(Token = "0x400013A")]
	Pause = 40
}
[Token(Token = "0x2000049")]
public class GameManager : MonoBehaviour
{
	[Token(Token = "0x2000175")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCF99A0", Offset = "0xCF99A0")]
	private sealed class <>c__DisplayClass131_0
	{
		[Token(Token = "0x4000753")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SplineComputer splineComputer;

		[Token(Token = "0x6000BAC")]
		[Address(RVA = "0x190C340", Offset = "0x190C340", VA = "0x190C340")]
		public <>c__DisplayClass131_0()
		{
		}

		[Token(Token = "0x6000BAD")]
		[Address(RVA = "0x193740C", Offset = "0x193740C", VA = "0x193740C")]
		internal bool <SetComputers>b__0(MagnetEffect x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000176")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCF99B0", Offset = "0xCF99B0")]
	private sealed class <WaitSoulsAndGameOver>d__135 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000754")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000755")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000756")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameManager <>4__this;

		[Token(Token = "0x17000136")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000BB1")]
			[Address(RVA = "0x19458B4", Offset = "0x19458B4", VA = "0x19458B4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000137")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000BB3")]
			[Address(RVA = "0x1945A80", Offset = "0x1945A80", VA = "0x1945A80", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000BAE")]
		[Address(RVA = "0x190EF08", Offset = "0x190EF08", VA = "0x190EF08")]
		[DebuggerHidden]
		public <WaitSoulsAndGameOver>d__135(int <>1__state)
		{
		}

		[Token(Token = "0x6000BAF")]
		[Address(RVA = "0x1945050", Offset = "0x1945050", VA = "0x1945050", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000BB0")]
		[Address(RVA = "0x1945130", Offset = "0x1945130", VA = "0x1945130", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BB2")]
		[Address(RVA = "0x19459A0", Offset = "0x19459A0", VA = "0x19459A0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000177")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCF99C0", Offset = "0xCF99C0")]
	private sealed class <WaitSoulsAndCompleteLevel>d__137 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000757")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000758")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000759")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameManager <>4__this;

		[Token(Token = "0x400075A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private LevelProgress <currentProgress>5__1;

		[Token(Token = "0x400075B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int <stars>5__2;

		[Token(Token = "0x400075C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int <scores>5__3;

		[Token(Token = "0x400075D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private TimeSpan <levelTime>5__4;

		[Token(Token = "0x17000138")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000BB7")]
			[Address(RVA = "0x1944D98", Offset = "0x1944D98", VA = "0x1944D98", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000139")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000BB9")]
			[Address(RVA = "0x1944F64", Offset = "0x1944F64", VA = "0x1944F64", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000BB4")]
		[Address(RVA = "0x190F4D4", Offset = "0x190F4D4", VA = "0x190F4D4")]
		[DebuggerHidden]
		public <WaitSoulsAndCompleteLevel>d__137(int <>1__state)
		{
		}

		[Token(Token = "0x6000BB5")]
		[Address(RVA = "0x1943BA4", Offset = "0x1943BA4", VA = "0x1943BA4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000BB6")]
		[Address(RVA = "0x1943C84", Offset = "0x1943C84", VA = "0x1943C84", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BB8")]
		[Address(RVA = "0x1944E84", Offset = "0x1944E84", VA = "0x1944E84", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000178")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCF99D0", Offset = "0xCF99D0")]
	private sealed class <>c__DisplayClass140_0
	{
		[Token(Token = "0x400075E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SplineComputer splineComputer;

		[Token(Token = "0x400075F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Func<KeyValuePair<SplineComputer, List<Ball>>, bool> <>9__0;

		[Token(Token = "0x6000BBA")]
		[Address(RVA = "0x191EC34", Offset = "0x191EC34", VA = "0x191EC34")]
		public <>c__DisplayClass140_0()
		{
		}

		[Token(Token = "0x6000BBB")]
		[Address(RVA = "0x193769C", Offset = "0x193769C", VA = "0x193769C")]
		internal bool <CalculateSpeed>b__0(KeyValuePair<SplineComputer, List<Ball>> ballsDictionary)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000179")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCF99E0", Offset = "0xCF99E0")]
	private sealed class <>c__DisplayClass141_0
	{
		[Token(Token = "0x4000760")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SplineComputer splineComputer;

		[Token(Token = "0x6000BBC")]
		[Address(RVA = "0x191ED24", Offset = "0x191ED24", VA = "0x191ED24")]
		public <>c__DisplayClass141_0()
		{
		}

		[Token(Token = "0x6000BBD")]
		[Address(RVA = "0x1937998", Offset = "0x1937998", VA = "0x1937998")]
		internal bool <TrySpawnNewBall>b__0(SplineSettings x)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BBE")]
		[Address(RVA = "0x1937C14", Offset = "0x1937C14", VA = "0x1937C14")]
		internal bool <TrySpawnNewBall>b__1(SplineSettings x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x200017A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCF99F0", Offset = "0xCF99F0")]
	private sealed class <WaitAndCheck>d__145 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000761")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000762")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000763")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SplineComputer splineComputer;

		[Token(Token = "0x4000764")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool withoutMovement;

		[Token(Token = "0x4000765")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameManager <>4__this;

		[Token(Token = "0x1700013A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000BC2")]
			[Address(RVA = "0x19438EC", Offset = "0x19438EC", VA = "0x19438EC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700013B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000BC4")]
			[Address(RVA = "0x1943AB8", Offset = "0x1943AB8", VA = "0x1943AB8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000BBF")]
		[Address(RVA = "0x191FDB0", Offset = "0x191FDB0", VA = "0x191FDB0")]
		[DebuggerHidden]
		public <WaitAndCheck>d__145(int <>1__state)
		{
		}

		[Token(Token = "0x6000BC0")]
		[Address(RVA = "0x19432D0", Offset = "0x19432D0", VA = "0x19432D0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000BC1")]
		[Address(RVA = "0x19433B0", Offset = "0x19433B0", VA = "0x19433B0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BC3")]
		[Address(RVA = "0x19439D8", Offset = "0x19439D8", VA = "0x19439D8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200017B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCF9A00", Offset = "0xCF9A00")]
	private sealed class <>c
	{
		[Token(Token = "0x4000766")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000767")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<Ball, double> <>9__146_0;

		[Token(Token = "0x4000768")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Func<KeyValuePair<SplineComputer, int>, int> <>9__153_0;

		[Token(Token = "0x6000BC6")]
		[Address(RVA = "0x1936E78", Offset = "0x1936E78", VA = "0x1936E78")]
		public <>c()
		{
		}

		[Token(Token = "0x6000BC7")]
		[Address(RVA = "0x1936F68", Offset = "0x1936F68", VA = "0x1936F68")]
		internal double <AddBall>b__146_0(Ball x)
		{
			return default(double);
		}

		[Token(Token = "0x6000BC8")]
		[Address(RVA = "0x19371C4", Offset = "0x19371C4", VA = "0x19371C4")]
		internal int <RemoveBallsLine>b__153_0(KeyValuePair<SplineComputer, int> x)
		{
			return default(int);
		}
	}

	[Token(Token = "0x200017C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCF9A10", Offset = "0xCF9A10")]
	private sealed class <MoveNewBallToItsPos>d__149 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000769")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400076A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400076B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform newBallTransform;

		[Token(Token = "0x400076C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public BallConfig ballConfig;

		[Token(Token = "0x400076D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public SplineComputer splineComputer;

		[Token(Token = "0x400076E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public List<Ball> listToMove;

		[Token(Token = "0x400076F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameManager <>4__this;

		[Token(Token = "0x4000770")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private WaitForEndOfFrame <wait>5__1;

		[Token(Token = "0x4000771")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool <moving>5__2;

		[Token(Token = "0x1700013C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000BCC")]
			[Address(RVA = "0x1941D8C", Offset = "0x1941D8C", VA = "0x1941D8C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700013D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000BCE")]
			[Address(RVA = "0x1941F58", Offset = "0x1941F58", VA = "0x1941F58", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000BC9")]
		[Address(RVA = "0x192C720", Offset = "0x192C720", VA = "0x192C720")]
		[DebuggerHidden]
		public <MoveNewBallToItsPos>d__149(int <>1__state)
		{
		}

		[Token(Token = "0x6000BCA")]
		[Address(RVA = "0x193EBDC", Offset = "0x193EBDC", VA = "0x193EBDC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000BCB")]
		[Address(RVA = "0x193ECBC", Offset = "0x193ECBC", VA = "0x193ECBC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BCD")]
		[Address(RVA = "0x1941E78", Offset = "0x1941E78", VA = "0x1941E78", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200017D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCF9A20", Offset = "0xCF9A20")]
	private sealed class <BallsMovement>d__151 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000772")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000773")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000774")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<Ball> listToMove;

		[Token(Token = "0x4000775")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SplineComputer splineComputer;

		[Token(Token = "0x4000776")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool backward;

		[Token(Token = "0x4000777")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public double distance;

		[Token(Token = "0x4000778")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Ball lastBall;

		[Token(Token = "0x4000779")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameManager <>4__this;

		[Token(Token = "0x400077A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private WaitForEndOfFrame <wait>5__1;

		[Token(Token = "0x400077B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private double <moveDistance>5__2;

		[Token(Token = "0x400077C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float <placingBallsSpeed>5__3;

		[Token(Token = "0x400077D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private List<Ball> <balls>5__4;

		[Token(Token = "0x400077E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private List<Ball> <listToMoveBackward>5__5;

		[Token(Token = "0x400077F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private bool <canAdd>5__6;

		[Token(Token = "0x4000780")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
		private bool <startMagnet>5__7;

		[Token(Token = "0x4000781")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private float <basePlacingBallsSpeed>5__8;

		[Token(Token = "0x4000782")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private List<Ball>.Enumerator <>s__9;

		[Token(Token = "0x4000783")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Ball <ball>5__10;

		[Token(Token = "0x4000784")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private double <delta>5__11;

		[Token(Token = "0x4000785")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private double <prevVal>5__12;

		[Token(Token = "0x4000786")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private double <prevPercent>5__13;

		[Token(Token = "0x1700013E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000BD2")]
			[Address(RVA = "0x193DDC0", Offset = "0x193DDC0", VA = "0x193DDC0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700013F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000BD4")]
			[Address(RVA = "0x193DF8C", Offset = "0x193DF8C", VA = "0x193DF8C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000BCF")]
		[Address(RVA = "0x192C978", Offset = "0x192C978", VA = "0x192C978")]
		[DebuggerHidden]
		public <BallsMovement>d__151(int <>1__state)
		{
		}

		[Token(Token = "0x6000BD0")]
		[Address(RVA = "0x1937E90", Offset = "0x1937E90", VA = "0x1937E90", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000BD1")]
		[Address(RVA = "0x1937F70", Offset = "0x1937F70", VA = "0x1937F70", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BD3")]
		[Address(RVA = "0x193DEAC", Offset = "0x193DEAC", VA = "0x193DEAC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200017E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCF9A30", Offset = "0xCF9A30")]
	private sealed class <LineSpeedUpRoutine>d__156 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000787")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000788")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000789")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float duration;

		[Token(Token = "0x400078A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float speedMultiplier;

		[Token(Token = "0x400078B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameManager <>4__this;

		[Token(Token = "0x400078C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <t>5__1;

		[Token(Token = "0x17000140")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000BD8")]
			[Address(RVA = "0x193E924", Offset = "0x193E924", VA = "0x193E924", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000141")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000BDA")]
			[Address(RVA = "0x193EAF0", Offset = "0x193EAF0", VA = "0x193EAF0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000BD5")]
		[Address(RVA = "0x1933970", Offset = "0x1933970", VA = "0x1933970")]
		[DebuggerHidden]
		public <LineSpeedUpRoutine>d__156(int <>1__state)
		{
		}

		[Token(Token = "0x6000BD6")]
		[Address(RVA = "0x193E078", Offset = "0x193E078", VA = "0x193E078", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000BD7")]
		[Address(RVA = "0x193E158", Offset = "0x193E158", VA = "0x193E158", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BD9")]
		[Address(RVA = "0x193EA10", Offset = "0x193EA10", VA = "0x193EA10", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200017F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCF9A40", Offset = "0xCF9A40")]
	private sealed class <TimedSpeedChange>d__160 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400078D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400078E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400078F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float duration;

		[Token(Token = "0x4000790")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float speedMultiplier;

		[Token(Token = "0x4000791")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameManager <>4__this;

		[Token(Token = "0x4000792")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <t>5__1;

		[Token(Token = "0x4000793")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private WaitForEndOfFrame <wait>5__2;

		[Token(Token = "0x17000142")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000BDE")]
			[Address(RVA = "0x1943018", Offset = "0x1943018", VA = "0x1943018", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000143")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000BE0")]
			[Address(RVA = "0x19431E4", Offset = "0x19431E4", VA = "0x19431E4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000BDB")]
		[Address(RVA = "0x1934890", Offset = "0x1934890", VA = "0x1934890")]
		[DebuggerHidden]
		public <TimedSpeedChange>d__160(int <>1__state)
		{
		}

		[Token(Token = "0x6000BDC")]
		[Address(RVA = "0x1942044", Offset = "0x1942044", VA = "0x1942044", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000BDD")]
		[Address(RVA = "0x1942124", Offset = "0x1942124", VA = "0x1942124", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BDF")]
		[Address(RVA = "0x1943104", Offset = "0x1943104", VA = "0x1943104", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400013B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float startLineLength;

	[Token(Token = "0x400013C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float addLineLength;

	[Token(Token = "0x400013D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float baseSpeedMultiplier;

	[Token(Token = "0x400013E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static float startLineLengthMultiplier;

	[Token(Token = "0x400013F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCFA9CC", Offset = "0xCFA9CC")]
	public float begginingStartLineSpeedMultipler;

	[Token(Token = "0x4000140")]
	private const int START_LINE_SPEED_MULTIPLER = 10;

	[Token(Token = "0x4000141")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static GameManager Instance;

	[Token(Token = "0x4000143")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static readonly Dictionary<SplineComputer, float> distanceReached;

	[Token(Token = "0x4000144")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static Action<float> LevelProgressUpdated;

	[Token(Token = "0x4000145")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public LevelManager levelManager;

	[Token(Token = "0x4000146")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float _bonusTimeScale;

	[Token(Token = "0x4000147")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float lineSpeedMultiplier;

	[Token(Token = "0x4000148")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static GameState _currGameState;

	[Token(Token = "0x4000149")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private static GameState _prevGameState;

	[Token(Token = "0x400014A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool _gameStarted;

	[Token(Token = "0x400014B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Coroutine _timeChangeCourutine;

	[Token(Token = "0x400014C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Coroutine lineSpeedUpCoroutine;

	[Token(Token = "0x400014D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private ObjectPoolEntry ballBasePrefab;

	[Token(Token = "0x400014E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Dictionary<SplineComputer, List<Ball>> ballsDictionaries;

	[Token(Token = "0x400014F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Dictionary<SplineComputer, bool> ballsLineEndObject;

	[Token(Token = "0x4000150")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private readonly Dictionary<SplineComputer, float> changedSpeed;

	[Token(Token = "0x4000151")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private readonly Dictionary<SplineComputer, int> comboDict;

	[Token(Token = "0x4000152")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCFAA34", Offset = "0xCFAA34")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xCFAA34", Offset = "0xCFAA34")]
	private float <gameStartTime>k__BackingField;

	[Token(Token = "0x4000153")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Dictionary<SplineComputer, TubeGenerator> magnetSplinesDict;

	[Token(Token = "0x4000154")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Dictionary<SplineComputer, Ball> newBallDict;

	[Token(Token = "0x4000155")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private int _levelBallsCount;

	[Token(Token = "0x4000156")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private bool needRebuild;

	[Token(Token = "0x4000157")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private float PlacingBallSpeed;

	[Token(Token = "0x4000158")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private double size;

	[Token(Token = "0x4000159")]
	private const double DISTANCE_FOR_LINE = 0.5;

	[Token(Token = "0x400015A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private int _spawnedBalls;

	[Token(Token = "0x400015B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private SplineComputer[] splineComputers;

	[Token(Token = "0x400015C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SerializeField]
	private SplinePositioner tempPositioner;

	[Token(Token = "0x400015D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[HideInInspector]
	public float LevelSpeed;

	[Token(Token = "0x400015E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCFAAA0", Offset = "0xCFAAA0")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xCFAAA0", Offset = "0xCFAAA0")]
	private int <totalBallsWithAdd>k__BackingField;

	[Token(Token = "0x400015F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCFAADC", Offset = "0xCFAADC")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xCFAADC", Offset = "0xCFAADC")]
	private int <totalComboPerLevel>k__BackingField;

	[Token(Token = "0x4000160")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	public bool IsBallsRollingOut;

	[Token(Token = "0x4000161")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCFAB18", Offset = "0xCFAB18")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xCFAB18", Offset = "0xCFAB18")]
	private static readonly Dictionary<SplineComputer, bool> <placingBall>k__BackingField;

	[Token(Token = "0x4000162")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCFAB54", Offset = "0xCFAB54")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xCFAB54", Offset = "0xCFAB54")]
	private static readonly Dictionary<SplineComputer, BallConfig> <newBallConfigDict>k__BackingField;

	[Token(Token = "0x4000163")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCFAB90", Offset = "0xCFAB90")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xCFAB90", Offset = "0xCFAB90")]
	private static readonly Dictionary<SplineComputer, int> <insertBallIndexDict>k__BackingField;

	[Token(Token = "0x4000164")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCFABCC", Offset = "0xCFABCC")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xCFABCC", Offset = "0xCFABCC")]
	private static readonly Dictionary<SplineComputer, bool> <newBallInPlaceDict>k__BackingField;

	[Token(Token = "0x4000165")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCFAC08", Offset = "0xCFAC08")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xCFAC08", Offset = "0xCFAC08")]
	private static readonly Dictionary<SplineComputer, List<Ball>> <currlistToMoveDict>k__BackingField;

	[Token(Token = "0x4000166")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCFAC44", Offset = "0xCFAC44")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xCFAC44", Offset = "0xCFAC44")]
	private static readonly Dictionary<SplineComputer, bool> <lineMovedDict>k__BackingField;

	[Token(Token = "0x4000167")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCFAC80", Offset = "0xCFAC80")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xCFAC80", Offset = "0xCFAC80")]
	private static readonly Dictionary<SplineComputer, bool> <lineMovedBackwardDict>k__BackingField;

	[Token(Token = "0x4000168")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCFACBC", Offset = "0xCFACBC")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xCFACBC", Offset = "0xCFACBC")]
	private static readonly Dictionary<SplineComputer, double> <currMovingDistanceDict>k__BackingField;

	[Token(Token = "0x4000169")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCFACF8", Offset = "0xCFACF8")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xCFACF8", Offset = "0xCFACF8")]
	private static readonly Dictionary<SplineComputer, double> <movedDistanceDict>k__BackingField;

	[Token(Token = "0x400016A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCFAD34", Offset = "0xCFAD34")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xCFAD34", Offset = "0xCFAD34")]
	private static readonly Dictionary<SplineComputer, Vector3> <currNewBallTargetPosDict>k__BackingField;

	[Token(Token = "0x400016B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCFAD70", Offset = "0xCFAD70")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xCFAD70", Offset = "0xCFAD70")]
	private static readonly Dictionary<SplineComputer, float> <currNewBallTargetDistanceDict>k__BackingField;

	[Token(Token = "0x400016C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCFADAC", Offset = "0xCFADAC")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xCFADAC", Offset = "0xCFADAC")]
	private static readonly Dictionary<SplineComputer, Coroutine> <placingBallCoroutine>k__BackingField;

	[Token(Token = "0x400016D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCFADE8", Offset = "0xCFADE8")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xCFADE8", Offset = "0xCFADE8")]
	private static readonly Dictionary<SplineComputer, Coroutine> <waitAndCheckCoroutine>k__BackingField;

	[Token(Token = "0x400016E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCFAE24", Offset = "0xCFAE24")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xCFAE24", Offset = "0xCFAE24")]
	private static readonly Dictionary<SplineComputer, Transform> <newBallTransformDict>k__BackingField;

	[Token(Token = "0x400016F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCFAE60", Offset = "0xCFAE60")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xCFAE60", Offset = "0xCFAE60")]
	private static readonly Dictionary<SplineComputer, Coroutine> <moveBallLineCoroutine>k__BackingField;

	[Token(Token = "0x4000170")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCFAE9C", Offset = "0xCFAE9C")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xCFAE9C", Offset = "0xCFAE9C")]
	private readonly List<BallColor> <availableColors>k__BackingField;

	[Token(Token = "0x4000171")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCFAED8", Offset = "0xCFAED8")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xCFAED8", Offset = "0xCFAED8")]
	private static readonly Dictionary<SplineComputer, float> <splineLength>k__BackingField;

	[Token(Token = "0x4000175")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private SplineSettings[] _splinesSettings;

	[Token(Token = "0x4000176")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public static bool IsBallsCloseToEnd;

	[Token(Token = "0x4000177")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private int ballsAddWithoutCheck;

	[Token(Token = "0x4000178")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	public int colors;

	[Token(Token = "0x1700001A")]
	public float ingameTimeScale
	{
		[Token(Token = "0x6000194")]
		[Address(RVA = "0x18FD3EC", Offset = "0x18FD3EC", VA = "0x18FD3EC")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700001B")]
	public static GameState prevGameState
	{
		[Token(Token = "0x6000195")]
		[Address(RVA = "0x18FD5B0", Offset = "0x18FD5B0", VA = "0x18FD5B0")]
		get
		{
			return default(GameState);
		}
	}

	[Token(Token = "0x1700001C")]
	public float gameStartTime
	{
		[Token(Token = "0x6000196")]
		[Address(RVA = "0x18FD778", Offset = "0x18FD778", VA = "0x18FD778")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD01050", Offset = "0xD01050")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000197")]
		[Address(RVA = "0x18FD93C", Offset = "0x18FD93C", VA = "0x18FD93C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD01060", Offset = "0xD01060")]
		private set
		{
		}
	}

	[Token(Token = "0x1700001D")]
	public int levelBallsCount
	{
		[Token(Token = "0x6000198")]
		[Address(RVA = "0x18FDB04", Offset = "0x18FDB04", VA = "0x18FDB04")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000199")]
		[Address(RVA = "0x18FDD70", Offset = "0x18FDD70", VA = "0x18FDD70")]
		set
		{
		}
	}

	[Token(Token = "0x1700001E")]
	private int spawnedBalls
	{
		[Token(Token = "0x600019A")]
		[Address(RVA = "0x18FDFF4", Offset = "0x18FDFF4", VA = "0x18FDFF4")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600019B")]
		[Address(RVA = "0x18FE260", Offset = "0x18FE260", VA = "0x18FE260")]
		set
		{
		}
	}

	[Token(Token = "0x1700001F")]
	public int totalBallsWithAdd
	{
		[Token(Token = "0x600019C")]
		[Address(RVA = "0x18FE714", Offset = "0x18FE714", VA = "0x18FE714")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD01070", Offset = "0xD01070")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600019D")]
		[Address(RVA = "0x18FE8C8", Offset = "0x18FE8C8", VA = "0x18FE8C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD01080", Offset = "0xD01080")]
		private set
		{
		}
	}

	[Token(Token = "0x17000020")]
	public int totalComboPerLevel
	{
		[Token(Token = "0x600019E")]
		[Address(RVA = "0x18FEA90", Offset = "0x18FEA90", VA = "0x18FEA90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD01090", Offset = "0xD01090")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600019F")]
		[Address(RVA = "0x18FEC44", Offset = "0x18FEC44", VA = "0x18FEC44")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD010A0", Offset = "0xD010A0")]
		private set
		{
		}
	}

	[Token(Token = "0x17000021")]
	public float calculatedSpeed
	{
		[Token(Token = "0x60001A0")]
		[Address(RVA = "0x18FEE0C", Offset = "0x18FEE0C", VA = "0x18FEE0C")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000022")]
	public static Dictionary<SplineComputer, bool> placingBall
	{
		[Token(Token = "0x60001A1")]
		[Address(RVA = "0x18FF09C", Offset = "0x18FF09C", VA = "0x18FF09C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD010B0", Offset = "0xD010B0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000023")]
	public static Dictionary<SplineComputer, BallConfig> newBallConfigDict
	{
		[Token(Token = "0x60001A2")]
		[Address(RVA = "0x18FF264", Offset = "0x18FF264", VA = "0x18FF264")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD010C0", Offset = "0xD010C0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000024")]
	public static Dictionary<SplineComputer, int> insertBallIndexDict
	{
		[Token(Token = "0x60001A3")]
		[Address(RVA = "0x18FF42C", Offset = "0x18FF42C", VA = "0x18FF42C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD010D0", Offset = "0xD010D0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000025")]
	public static Dictionary<SplineComputer, bool> newBallInPlaceDict
	{
		[Token(Token = "0x60001A4")]
		[Address(RVA = "0x18FF5F4", Offset = "0x18FF5F4", VA = "0x18FF5F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD010E0", Offset = "0xD010E0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000026")]
	public static Dictionary<SplineComputer, List<Ball>> currlistToMoveDict
	{
		[Token(Token = "0x60001A5")]
		[Address(RVA = "0x18FF7BC", Offset = "0x18FF7BC", VA = "0x18FF7BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD010F0", Offset = "0xD010F0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000027")]
	public static Dictionary<SplineComputer, bool> lineMovedDict
	{
		[Token(Token = "0x60001A6")]
		[Address(RVA = "0x18FF984", Offset = "0x18FF984", VA = "0x18FF984")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD01100", Offset = "0xD01100")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000028")]
	public static Dictionary<SplineComputer, bool> lineMovedBackwardDict
	{
		[Token(Token = "0x60001A7")]
		[Address(RVA = "0x18FFB4C", Offset = "0x18FFB4C", VA = "0x18FFB4C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD01110", Offset = "0xD01110")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000029")]
	public static Dictionary<SplineComputer, double> currMovingDistanceDict
	{
		[Token(Token = "0x60001A8")]
		[Address(RVA = "0x18FFD14", Offset = "0x18FFD14", VA = "0x18FFD14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD01120", Offset = "0xD01120")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700002A")]
	public static Dictionary<SplineComputer, double> movedDistanceDict
	{
		[Token(Token = "0x60001A9")]
		[Address(RVA = "0x18FFEDC", Offset = "0x18FFEDC", VA = "0x18FFEDC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD01130", Offset = "0xD01130")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700002B")]
	public static Dictionary<SplineComputer, Vector3> currNewBallTargetPosDict
	{
		[Token(Token = "0x60001AA")]
		[Address(RVA = "0x19000A4", Offset = "0x19000A4", VA = "0x19000A4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD01140", Offset = "0xD01140")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700002C")]
	public static Dictionary<SplineComputer, float> currNewBallTargetDistanceDict
	{
		[Token(Token = "0x60001AB")]
		[Address(RVA = "0x190026C", Offset = "0x190026C", VA = "0x190026C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD01150", Offset = "0xD01150")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700002D")]
	public static Dictionary<SplineComputer, Coroutine> placingBallCoroutine
	{
		[Token(Token = "0x60001AC")]
		[Address(RVA = "0x1900434", Offset = "0x1900434", VA = "0x1900434")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD01160", Offset = "0xD01160")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700002E")]
	private static Dictionary<SplineComputer, Coroutine> waitAndCheckCoroutine
	{
		[Token(Token = "0x60001AD")]
		[Address(RVA = "0x19005FC", Offset = "0x19005FC", VA = "0x19005FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD01170", Offset = "0xD01170")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700002F")]
	public static Dictionary<SplineComputer, Transform> newBallTransformDict
	{
		[Token(Token = "0x60001AE")]
		[Address(RVA = "0x19007C4", Offset = "0x19007C4", VA = "0x19007C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD01180", Offset = "0xD01180")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000030")]
	public static Dictionary<SplineComputer, Coroutine> moveBallLineCoroutine
	{
		[Token(Token = "0x60001AF")]
		[Address(RVA = "0x190098C", Offset = "0x190098C", VA = "0x190098C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD01190", Offset = "0xD01190")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000031")]
	public List<BallColor> availableColors
	{
		[Token(Token = "0x60001B0")]
		[Address(RVA = "0x1900B54", Offset = "0x1900B54", VA = "0x1900B54")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD011A0", Offset = "0xD011A0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000032")]
	public static GameState currGameState
	{
		[Token(Token = "0x60001B1")]
		[Address(RVA = "0x1900D08", Offset = "0x1900D08", VA = "0x1900D08")]
		get
		{
			return default(GameState);
		}
		[Token(Token = "0x60001B2")]
		[Address(RVA = "0x1900ED0", Offset = "0x1900ED0", VA = "0x1900ED0")]
		set
		{
		}
	}

	[Token(Token = "0x17000033")]
	public SplineComputer[] SplineComputers
	{
		[Token(Token = "0x60001B3")]
		[Address(RVA = "0x1901628", Offset = "0x1901628", VA = "0x1901628")]
		set
		{
		}
	}

	[Token(Token = "0x17000034")]
	public static Dictionary<SplineComputer, float> splineLength
	{
		[Token(Token = "0x60001B4")]
		[Address(RVA = "0x19019B4", Offset = "0x19019B4", VA = "0x19019B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD011B0", Offset = "0xD011B0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000035")]
	public bool IsLineSpeedingUp
	{
		[Token(Token = "0x60001D6")]
		[Address(RVA = "0x1933A70", Offset = "0x1933A70", VA = "0x1933A70")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1400000A")]
	public static event Action<float> timedSpeedChangeProgress
	{
		[Token(Token = "0x6000192")]
		[Address(RVA = "0x18FD084", Offset = "0x18FD084", VA = "0x18FD084")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD01030", Offset = "0xD01030")]
		add
		{
		}
		[Token(Token = "0x6000193")]
		[Address(RVA = "0x18FD238", Offset = "0x18FD238", VA = "0x18FD238")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD01040", Offset = "0xD01040")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000B")]
	public static event Action<Vector3[], BallConfig[], int, bool> ballsLineDestroyed
	{
		[Token(Token = "0x60001B5")]
		[Address(RVA = "0x1901B7C", Offset = "0x1901B7C", VA = "0x1901B7C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD011C0", Offset = "0xD011C0")]
		add
		{
		}
		[Token(Token = "0x60001B6")]
		[Address(RVA = "0x1901D30", Offset = "0x1901D30", VA = "0x1901D30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD011D0", Offset = "0xD011D0")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000C")]
	public static event Action<GameState, GameState> gameStateChanged
	{
		[Token(Token = "0x60001B7")]
		[Address(RVA = "0x1901EE4", Offset = "0x1901EE4", VA = "0x1901EE4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD011E0", Offset = "0xD011E0")]
		add
		{
		}
		[Token(Token = "0x60001B8")]
		[Address(RVA = "0x1902098", Offset = "0x1902098", VA = "0x1902098")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD011F0", Offset = "0xD011F0")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000D")]
	public static event Action<SplineComputer[]> computersChange
	{
		[Token(Token = "0x60001B9")]
		[Address(RVA = "0x190224C", Offset = "0x190224C", VA = "0x190224C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD01200", Offset = "0xD01200")]
		add
		{
		}
		[Token(Token = "0x60001BA")]
		[Address(RVA = "0x1902400", Offset = "0x1902400", VA = "0x1902400")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD01210", Offset = "0xD01210")]
		remove
		{
		}
	}

	[Token(Token = "0x60001BB")]
	[Address(RVA = "0x19025B4", Offset = "0x19025B4", VA = "0x19025B4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001BC")]
	[Address(RVA = "0x19032C4", Offset = "0x19032C4", VA = "0x19032C4")]
	private void LevelAnalEvent(string eventName)
	{
	}

	[Token(Token = "0x60001BD")]
	[Address(RVA = "0x19035B0", Offset = "0x19035B0", VA = "0x19035B0")]
	private void LevelLoaded()
	{
	}

	[Token(Token = "0x60001BE")]
	[Address(RVA = "0x1908914", Offset = "0x1908914", VA = "0x1908914")]
	private void OnGameStateChanged(GameState fromGameState, GameState newGameState)
	{
	}

	[Token(Token = "0x60001BF")]
	[Address(RVA = "0x1908E60", Offset = "0x1908E60", VA = "0x1908E60")]
	public void SetComputers(SplineComputer[] splineComputers, SplineSettings[] splinesSettings)
	{
	}

	[Token(Token = "0x60001C0")]
	[Address(RVA = "0x190DEE8", Offset = "0x190DEE8", VA = "0x190DEE8")]
	private void SetMagnetKey(TubeGenerator tubeGenerator, double start, double end)
	{
	}

	[Token(Token = "0x60001C1")]
	[Address(RVA = "0x1903E10", Offset = "0x1903E10", VA = "0x1903E10")]
	public void StartGame()
	{
	}

	[Token(Token = "0x60001C2")]
	[Address(RVA = "0x190EA3C", Offset = "0x190EA3C", VA = "0x190EA3C")]
	private void GameOver()
	{
	}

	[Token(Token = "0x60001C3")]
	[Address(RVA = "0x190EDEC", Offset = "0x190EDEC", VA = "0x190EDEC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD01220", Offset = "0xD01220")]
	private IEnumerator WaitSoulsAndGameOver()
	{
		return null;
	}

	[Token(Token = "0x60001C4")]
	[Address(RVA = "0x190F008", Offset = "0x190F008", VA = "0x190F008")]
	private void LevelCompleted()
	{
	}

	[Token(Token = "0x60001C5")]
	[Address(RVA = "0x190F3B8", Offset = "0x190F3B8", VA = "0x190F3B8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD01284", Offset = "0xD01284")]
	private IEnumerator WaitSoulsAndCompleteLevel()
	{
		return null;
	}

	[Token(Token = "0x60001C6")]
	[Address(RVA = "0x1904878", Offset = "0x1904878", VA = "0x1904878")]
	private void ResetVariables()
	{
	}

	[Token(Token = "0x60001C7")]
	[Address(RVA = "0x1913BA0", Offset = "0x1913BA0", VA = "0x1913BA0")]
	private void Update()
	{
	}

	[Token(Token = "0x60001C8")]
	[Address(RVA = "0x1915418", Offset = "0x1915418", VA = "0x1915418")]
	private void CalculateSpeed(SplineComputer splineComputer)
	{
	}

	[Token(Token = "0x60001C9")]
	[Address(RVA = "0x1917DB8", Offset = "0x1917DB8", VA = "0x1917DB8")]
	private void TrySpawnNewBall(SplineComputer splineComputer)
	{
	}

	[Token(Token = "0x60001CA")]
	[Address(RVA = "0x1919D20", Offset = "0x1919D20", VA = "0x1919D20")]
	private double moveBalls(List<Ball> ballsToMove, float overrideSpeed = 0f, bool backward = false, float overrideDistanceForvard = 0f)
	{
		return default(double);
	}

	[Token(Token = "0x60001CB")]
	[Address(RVA = "0x191EE14", Offset = "0x191EE14", VA = "0x191EE14")]
	private Ball GetClosestBall(float distance, SplineComputer splineComputer)
	{
		return null;
	}

	[Token(Token = "0x60001CC")]
	[Address(RVA = "0x191FC78", Offset = "0x191FC78", VA = "0x191FC78")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD012E8", Offset = "0xD012E8")]
	private IEnumerator WaitAndCheck(SplineComputer splineComputer, bool withoutMovement)
	{
		return null;
	}

	[Token(Token = "0x60001CD")]
	[Address(RVA = "0x191FEB0", Offset = "0x191FEB0", VA = "0x191FEB0")]
	public void AddBall(float distance, BallConfig ballConfig, Transform newBallTransform, SplineComputer splineComputer)
	{
	}

	[Token(Token = "0x60001CE")]
	[Address(RVA = "0x192C5D4", Offset = "0x192C5D4", VA = "0x192C5D4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD0134C", Offset = "0xD0134C")]
	private IEnumerator MoveNewBallToItsPos(Transform newBallTransform, BallConfig ballConfig, SplineComputer splineComputer, List<Ball> listToMove)
	{
		return null;
	}

	[Token(Token = "0x60001CF")]
	[Address(RVA = "0x1927194", Offset = "0x1927194", VA = "0x1927194")]
	private void AddNewBallToPosAndIndex(Vector3 position, int index, BallConfig ballConfig, SplineComputer splineComputer, float distance)
	{
	}

	[Token(Token = "0x60001D0")]
	[Address(RVA = "0x192C820", Offset = "0x192C820", VA = "0x192C820")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD013B0", Offset = "0xD013B0")]
	private IEnumerator BallsMovement(List<Ball> listToMove, SplineComputer splineComputer, bool backward = false, double distance = 0.0, [Optional] Ball lastBall)
	{
		return null;
	}

	[Token(Token = "0x60001D1")]
	[Address(RVA = "0x1927B50", Offset = "0x1927B50", VA = "0x1927B50")]
	private void CheckBalls(SplineComputer splineComputer, bool withoutMovement = false)
	{
	}

	[Token(Token = "0x60001D2")]
	[Address(RVA = "0x190F964", Offset = "0x190F964", VA = "0x190F964")]
	public void RemoveBallsLine(List<Ball> ballsForRemove, bool silent, bool finalBall = false, bool external = false)
	{
	}

	[Token(Token = "0x60001D3")]
	[Address(RVA = "0x1930314", Offset = "0x1930314", VA = "0x1930314")]
	public int GetTotalBallCount()
	{
		return default(int);
	}

	[Token(Token = "0x60001D4")]
	[Address(RVA = "0x1932DE0", Offset = "0x1932DE0", VA = "0x1932DE0")]
	public void ShortSpeedUp()
	{
	}

	[Token(Token = "0x60001D5")]
	[Address(RVA = "0x1933840", Offset = "0x1933840", VA = "0x1933840")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD01414", Offset = "0xD01414")]
	private IEnumerator LineSpeedUpRoutine(float duration, float speedMultiplier)
	{
		return null;
	}

	[Token(Token = "0x60001D7")]
	[Address(RVA = "0x1933C34", Offset = "0x1933C34", VA = "0x1933C34")]
	public void StartTimedSpeedChange(float duration, float speedMultiplier)
	{
	}

	[Token(Token = "0x60001D8")]
	[Address(RVA = "0x1934760", Offset = "0x1934760", VA = "0x1934760")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD01478", Offset = "0xD01478")]
	private IEnumerator TimedSpeedChange(float duration, float speedMultiplier)
	{
		return null;
	}

	[Token(Token = "0x60001D9")]
	[Address(RVA = "0x1930EC8", Offset = "0x1930EC8", VA = "0x1930EC8")]
	public void UpdateColors()
	{
	}

	[Token(Token = "0x60001DA")]
	[Address(RVA = "0x192CA78", Offset = "0x192CA78", VA = "0x192CA78")]
	private void CheckLines(SplineComputer splineComputer, bool withoutMovement)
	{
	}

	[Token(Token = "0x60001DB")]
	[Address(RVA = "0x1934990", Offset = "0x1934990", VA = "0x1934990")]
	[AttributeAttribute(Name = "EditorButtonAttribute", RVA = "0xD014DC", Offset = "0xD014DC")]
	private void MenuState()
	{
	}

	[Token(Token = "0x60001DC")]
	[Address(RVA = "0x1934BD8", Offset = "0x1934BD8", VA = "0x1934BD8")]
	[AttributeAttribute(Name = "EditorButtonAttribute", RVA = "0xD014EC", Offset = "0xD014EC")]
	private void PauseState()
	{
	}

	[Token(Token = "0x60001DD")]
	[Address(RVA = "0x1934E20", Offset = "0x1934E20", VA = "0x1934E20")]
	[AttributeAttribute(Name = "EditorButtonAttribute", RVA = "0xD014FC", Offset = "0xD014FC")]
	private void InGameState()
	{
	}

	[Token(Token = "0x60001DE")]
	[Address(RVA = "0x1935068", Offset = "0x1935068", VA = "0x1935068")]
	public GameManager()
	{
	}
}
[Token(Token = "0x200004A")]
[DisallowMultipleComponent]
public class GameShell : MonoBehaviour
{
	[Token(Token = "0x60001E0")]
	[Address(RVA = "0x194AD54", Offset = "0x194AD54", VA = "0x194AD54")]
	private static void Log(object msg)
	{
	}

	[Token(Token = "0x60001E1")]
	[Address(RVA = "0x194B02C", Offset = "0x194B02C", VA = "0x194B02C")]
	public static void QuitApp()
	{
	}

	[Token(Token = "0x60001E2")]
	[Address(RVA = "0x194B3C4", Offset = "0x194B3C4", VA = "0x194B3C4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001E3")]
	[Address(RVA = "0x194B804", Offset = "0x194B804", VA = "0x194B804")]
	private void Update()
	{
	}

	[Token(Token = "0x60001E4")]
	[Address(RVA = "0x194BA14", Offset = "0x194BA14", VA = "0x194BA14")]
	public GameShell()
	{
	}
}
[Token(Token = "0x200004B")]
public class DangerSplineShower : MonoBehaviour
{
	[Token(Token = "0x4000179")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SplineComputer splineComp;

	[Token(Token = "0x400017A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private FadeColor _fadeColor;

	[Token(Token = "0x60001E5")]
	[Address(RVA = "0x14DC4A4", Offset = "0x14DC4A4", VA = "0x14DC4A4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001E6")]
	[Address(RVA = "0x14DC790", Offset = "0x14DC790", VA = "0x14DC790")]
	private void Update()
	{
	}

	[Token(Token = "0x60001E7")]
	[Address(RVA = "0x14DD3BC", Offset = "0x14DD3BC", VA = "0x14DD3BC")]
	public DangerSplineShower()
	{
	}
}
[Token(Token = "0x200004C")]
public class ETFXProjectileScript : MonoBehaviour
{
	[Token(Token = "0x400017C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float _currLifetime;

	[Token(Token = "0x400017D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject _projectileParticleSpawned;

	[Token(Token = "0x400017E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCFB004", Offset = "0xCFB004")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xCFB004", Offset = "0xCFB004")]
	private BallConfig <ballConfig>k__BackingField;

	[Token(Token = "0x400017F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject ballVisual;

	[Token(Token = "0x4000180")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xCFB040", Offset = "0xCFB040")]
	[SerializeField]
	private bool activateAnyway;

	[Token(Token = "0x4000181")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCFB08C", Offset = "0xCFB08C")]
	public float collideOffset;

	[Token(Token = "0x4000182")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private SphereCollider sphereCollider;

	[Token(Token = "0x4000183")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCFB0A4", Offset = "0xCFB0A4")]
	public float colliderRadius;

	[Token(Token = "0x4000184")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private bool exploded;

	[Token(Token = "0x4000185")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject impactParticle;

	[Token(Token = "0x4000186")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private float LifeTime;

	[Token(Token = "0x4000187")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject muzzleParticle;

	[Token(Token = "0x4000188")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject projectileParticle;

	[Token(Token = "0x4000189")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private SplineProjector[] splineProjectors;

	[Token(Token = "0x400018A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool triggered;

	[Token(Token = "0x400018B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private Vector3 projScale;

	[Token(Token = "0x17000036")]
	public BallConfig ballConfig
	{
		[Token(Token = "0x60001EA")]
		[Address(RVA = "0x3416BB4", Offset = "0x3416BB4", VA = "0x3416BB4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0152C", Offset = "0xD0152C")]
		get
		{
			return default(BallConfig);
		}
		[Token(Token = "0x60001EB")]
		[Address(RVA = "0x3416D78", Offset = "0x3416D78", VA = "0x3416D78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0153C", Offset = "0xD0153C")]
		private set
		{
		}
	}

	[Token(Token = "0x17000037")]
	public bool Exploded
	{
		[Token(Token = "0x60001EC")]
		[Address(RVA = "0x3416F44", Offset = "0x3416F44", VA = "0x3416F44")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000038")]
	public bool Triggered
	{
		[Token(Token = "0x60001ED")]
		[Address(RVA = "0x3417108", Offset = "0x3417108", VA = "0x3417108")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60001EE")]
		[Address(RVA = "0x3417384", Offset = "0x3417384", VA = "0x3417384")]
		set
		{
		}
	}

	[Token(Token = "0x1400000E")]
	public event Action<float, BallConfig, Transform, SplineComputer> OnBallDetonated
	{
		[Token(Token = "0x60001E8")]
		[Address(RVA = "0x34168E4", Offset = "0x34168E4", VA = "0x34168E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0150C", Offset = "0xD0150C")]
		add
		{
		}
		[Token(Token = "0x60001E9")]
		[Address(RVA = "0x3416A4C", Offset = "0x3416A4C", VA = "0x3416A4C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0151C", Offset = "0xD0151C")]
		remove
		{
		}
	}

	[Token(Token = "0x60001EF")]
	[Address(RVA = "0x34178FC", Offset = "0x34178FC", VA = "0x34178FC")]
	public void Awake()
	{
	}

	[Token(Token = "0x60001F0")]
	[Address(RVA = "0x3418038", Offset = "0x3418038", VA = "0x3418038")]
	private void StartLevelLoading()
	{
	}

	[Token(Token = "0x60001F1")]
	[Address(RVA = "0x341A204", Offset = "0x341A204", VA = "0x341A204")]
	public void Initialize([Optional] Transform spawnPoint)
	{
	}

	[Token(Token = "0x60001F2")]
	[Address(RVA = "0x341C524", Offset = "0x341C524", VA = "0x341C524")]
	private void Update()
	{
	}

	[Token(Token = "0x60001F3")]
	[Address(RVA = "0x341D480", Offset = "0x341D480", VA = "0x341D480")]
	private void OnCollisionEnter(Collision other)
	{
	}

	[Token(Token = "0x60001F4")]
	[Address(RVA = "0x3420AEC", Offset = "0x3420AEC", VA = "0x3420AEC")]
	public void SetProjectileSettings(BallConfig newBallConfig, GameObject ballComponentsBallVisualPrefab, SplineProjector[] linkedSplineProjectors, [Optional] Transform spawnPoint)
	{
	}

	[Token(Token = "0x60001F5")]
	[Address(RVA = "0x342018C", Offset = "0x342018C", VA = "0x342018C")]
	private void DisableProjector()
	{
	}

	[Token(Token = "0x60001F6")]
	[Address(RVA = "0x341832C", Offset = "0x341832C", VA = "0x341832C")]
	public void Explode(bool fromCollision, [Optional] ContactPoint contactPoint, bool forseRemoveVisual = false)
	{
	}

	[Token(Token = "0x60001F7")]
	[Address(RVA = "0x34224E8", Offset = "0x34224E8", VA = "0x34224E8")]
	public ETFXProjectileScript()
	{
	}
}
[Token(Token = "0x200004D")]
public class HormingMissle : MonoBehaviour
{
	[Token(Token = "0x400018C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ETFXProjectileScript target;

	[Token(Token = "0x400018D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float angleChangingSpeed;

	[Token(Token = "0x400018E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float movementSpeed;

	[Token(Token = "0x400018F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float angleSpeedMultiplyByTime;

	[Token(Token = "0x4000190")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private float movementSpeedMultiplyByTime;

	[Token(Token = "0x4000191")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float angle;

	[Token(Token = "0x4000192")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool initialized;

	[Token(Token = "0x4000193")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float lifetime;

	[Token(Token = "0x4000194")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private bool done;

	[Token(Token = "0x60001F8")]
	[Address(RVA = "0x194CFC8", Offset = "0x194CFC8", VA = "0x194CFC8")]
	public void Initialize(ETFXProjectileScript targ)
	{
	}

	[Token(Token = "0x60001F9")]
	[Address(RVA = "0x194D974", Offset = "0x194D974", VA = "0x194D974")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60001FA")]
	[Address(RVA = "0x194F680", Offset = "0x194F680", VA = "0x194F680")]
	public HormingMissle()
	{
	}
}
[Token(Token = "0x200004E")]
public class MagnetEffect : MonoBehaviour
{
	[Token(Token = "0x4000195")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static List<MagnetEffect> magnetEffectsList;

	[Token(Token = "0x4000196")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SplineComputer splineComputer;

	[Token(Token = "0x60001FB")]
	[Address(RVA = "0x21873B4", Offset = "0x21873B4", VA = "0x21873B4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001FC")]
	[Address(RVA = "0x2187834", Offset = "0x2187834", VA = "0x2187834")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60001FD")]
	[Address(RVA = "0x2187D38", Offset = "0x2187D38", VA = "0x2187D38")]
	public void Initialize()
	{
	}

	[Token(Token = "0x60001FE")]
	[Address(RVA = "0x218803C", Offset = "0x218803C", VA = "0x218803C")]
	public MagnetEffect()
	{
	}
}
[Token(Token = "0x200004F")]
public class OnShootBallDestroyer : MonoBehaviour
{
	[Token(Token = "0x4000197")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private SplineProjector projector;

	[Token(Token = "0x4000198")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ETFXProjectileScript targetProjectile;

	[Token(Token = "0x4000199")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 rotateSpeed;

	[Token(Token = "0x400019A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private BallColor allowColor;

	[Token(Token = "0x400019B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject destroyProjectile;

	[Token(Token = "0x400019C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private float rotationSpeed;

	[Token(Token = "0x400019D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private bool shooting;

	[Token(Token = "0x60001FF")]
	[Address(RVA = "0x19F841C", Offset = "0x19F841C", VA = "0x19F841C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000200")]
	[Address(RVA = "0x19F88C0", Offset = "0x19F88C0", VA = "0x19F88C0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000201")]
	[Address(RVA = "0x19F90E0", Offset = "0x19F90E0", VA = "0x19F90E0")]
	public void ActivateTurret(ETFXProjectileScript projectile)
	{
	}

	[Token(Token = "0x6000202")]
	[Address(RVA = "0x19F9E54", Offset = "0x19F9E54", VA = "0x19F9E54")]
	public OnShootBallDestroyer()
	{
	}
}
[Token(Token = "0x2000050")]
public class OnShootBallTrigger : MonoBehaviour
{
	[Token(Token = "0x400019E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private OnShootBallDestroyer destroyer;

	[Token(Token = "0x6000203")]
	[Address(RVA = "0x19FA088", Offset = "0x19FA088", VA = "0x19FA088")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000204")]
	[Address(RVA = "0x19FA678", Offset = "0x19FA678", VA = "0x19FA678")]
	public OnShootBallTrigger()
	{
	}
}
[Token(Token = "0x2000051")]
public class SplineEndController : MonoBehaviour
{
	[Token(Token = "0x400019F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform[] claws;

	[Token(Token = "0x40001A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3[] clawsRotations;

	[Token(Token = "0x40001A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float currOpenValue;

	[Token(Token = "0x40001A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool ended;

	[Token(Token = "0x40001A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject endParticles;

	[Token(Token = "0x40001A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Transform[] eyes;

	[Token(Token = "0x40001A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Animator[] animators;

	[Token(Token = "0x40001A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Transform glowingOrbTransf;

	[Token(Token = "0x40001A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private GameObject dragonHeadMesh;

	[Token(Token = "0x40001A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool initialized;

	[Token(Token = "0x40001A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Light light;

	[Token(Token = "0x40001AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private float maxClawRotation;

	[Token(Token = "0x40001AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[SerializeField]
	private float maxInsideParticlesScale;

	[Token(Token = "0x40001AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private float mouthOpenEndPercent;

	[Token(Token = "0x40001AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[SerializeField]
	private float mouthOpenStartPercent;

	[Token(Token = "0x40001AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float targetOpenValue;

	[Token(Token = "0x40001AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private readonly int StateValue;

	[Token(Token = "0x40001B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private int baseColor;

	[Token(Token = "0x40001B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private Rigidbody[] shards;

	[Token(Token = "0x40001B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Vector3[] basePositions;

	[Token(Token = "0x40001B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Quaternion[] baseRotations;

	[Token(Token = "0x40001B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Transform headRoot;

	[Token(Token = "0x6000205")]
	[Address(RVA = "0x1A32A40", Offset = "0x1A32A40", VA = "0x1A32A40")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000206")]
	[Address(RVA = "0x1A33A6C", Offset = "0x1A33A6C", VA = "0x1A33A6C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000207")]
	[Address(RVA = "0x1A34590", Offset = "0x1A34590", VA = "0x1A34590")]
	private void OnGameStateChanged(GameState prevGameState, GameState newGameState)
	{
	}

	[Token(Token = "0x6000208")]
	[Address(RVA = "0x1A38520", Offset = "0x1A38520", VA = "0x1A38520")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000209")]
	[Address(RVA = "0x1A38B24", Offset = "0x1A38B24", VA = "0x1A38B24")]
	private void Update()
	{
	}

	[Token(Token = "0x600020A")]
	[Address(RVA = "0x1A38F70", Offset = "0x1A38F70", VA = "0x1A38F70")]
	private void UpdateHeadState()
	{
	}

	[Token(Token = "0x600020B")]
	[Address(RVA = "0x1A3403C", Offset = "0x1A3403C", VA = "0x1A3403C")]
	private void BallOnDistanceReached(float value)
	{
	}

	[Token(Token = "0x600020C")]
	[Address(RVA = "0x1A369FC", Offset = "0x1A369FC", VA = "0x1A369FC")]
	private void SetEyesState(bool active)
	{
	}

	[Token(Token = "0x600020D")]
	[Address(RVA = "0x1A37140", Offset = "0x1A37140", VA = "0x1A37140")]
	private void UpdateVisualForValue(float value)
	{
	}

	[Token(Token = "0x600020E")]
	[Address(RVA = "0x1A39DC4", Offset = "0x1A39DC4", VA = "0x1A39DC4")]
	public static List<SplineComputer> GetDangerousSplines()
	{
		return null;
	}

	[Token(Token = "0x600020F")]
	[Address(RVA = "0x1A3AA0C", Offset = "0x1A3AA0C", VA = "0x1A3AA0C")]
	public SplineEndController()
	{
	}
}
[Serializable]
[Token(Token = "0x2000052")]
public struct SplineSettings
{
	[Token(Token = "0x40001B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public SplineComputer Computer;

	[Token(Token = "0x40001B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public BallColor[] AvaliableColors;
}
[Token(Token = "0x2000053")]
public class SplinesComputerSetter : MonoBehaviour
{
	[Token(Token = "0x40001B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private int ballCount;

	[Token(Token = "0x40001B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCFB23C", Offset = "0xCFB23C")]
	private float startLineLengthMultiplier;

	[Token(Token = "0x40001B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float levelSpeed;

	[Token(Token = "0x40001BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private int spawnPointIndex;

	[Token(Token = "0x40001BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCFB2A0", Offset = "0xCFB2A0")]
	private int colors;

	[Token(Token = "0x40001BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public SplineSettings[] splineSettings;

	[Token(Token = "0x40001BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCFB2E0", Offset = "0xCFB2E0")]
	private float starsScoresMultiplier;

	[Token(Token = "0x40001BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Transform spawnPoint;

	[Token(Token = "0x6000210")]
	[Address(RVA = "0x17374D0", Offset = "0x17374D0", VA = "0x17374D0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000211")]
	[Address(RVA = "0x1738704", Offset = "0x1738704", VA = "0x1738704")]
	public SplinesComputerSetter()
	{
	}
}
[Token(Token = "0x2000054")]
[ExecuteInEditMode]
public class TubeMover : MonoBehaviour
{
	[Token(Token = "0x40001BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private TubeGenerator user;

	[Token(Token = "0x40001C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float speed;

	[Token(Token = "0x40001C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float from;

	[Token(Token = "0x40001C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float to;

	[Token(Token = "0x40001C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private float length;

	[Token(Token = "0x40001C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private bool startFromEnd;

	[Token(Token = "0x40001C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float unclampedFrom;

	[Token(Token = "0x40001C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float unclampedTo;

	[Token(Token = "0x40001C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private SplinePositioner middlePositioner;

	[Token(Token = "0x40001C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private SplinePositioner startPositioner;

	[Token(Token = "0x40001C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private SplinePositioner endPositioner;

	[Token(Token = "0x6000212")]
	[Address(RVA = "0x1752E5C", Offset = "0x1752E5C", VA = "0x1752E5C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000213")]
	[Address(RVA = "0x1755668", Offset = "0x1755668", VA = "0x1755668")]
	private void Update()
	{
	}

	[Token(Token = "0x6000214")]
	[Address(RVA = "0x1753F3C", Offset = "0x1753F3C", VA = "0x1753F3C")]
	private void SetClipRange(float deltaTime)
	{
	}

	[Token(Token = "0x6000215")]
	[Address(RVA = "0x17566EC", Offset = "0x17566EC", VA = "0x17566EC")]
	private void UpdateCaps()
	{
	}

	[Token(Token = "0x6000216")]
	[Address(RVA = "0x1757904", Offset = "0x1757904", VA = "0x1757904")]
	public TubeMover()
	{
	}
}
[Token(Token = "0x2000055")]
public class CameraGraphicSettings : MonoBehaviour
{
	[Token(Token = "0x40001CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Camera _camera;

	[Token(Token = "0x6000217")]
	[Address(RVA = "0x13C1058", Offset = "0x13C1058", VA = "0x13C1058")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000218")]
	[Address(RVA = "0x13C14A0", Offset = "0x13C14A0", VA = "0x13C14A0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000219")]
	[Address(RVA = "0x13C1778", Offset = "0x13C1778", VA = "0x13C1778")]
	private void UpdateSettings()
	{
	}

	[Token(Token = "0x600021A")]
	[Address(RVA = "0x13C1CA4", Offset = "0x13C1CA4", VA = "0x13C1CA4")]
	public CameraGraphicSettings()
	{
	}
}
[Token(Token = "0x2000056")]
public class DeactivateOnGooglePlay : MonoBehaviour
{
	[Token(Token = "0x600021B")]
	[Address(RVA = "0x14DD4AC", Offset = "0x14DD4AC", VA = "0x14DD4AC")]
	public DeactivateOnGooglePlay()
	{
	}
}
[Token(Token = "0x2000057")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xCF8814", Offset = "0xCF8814")]
public class DelayedSplineFollower : MonoBehaviour
{
	[Token(Token = "0x2000180")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCF9A50", Offset = "0xCF9A50")]
	private sealed class <StartFollow>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000794")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000795")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000796")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DelayedSplineFollower <>4__this;

		[Token(Token = "0x17000144")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000BE4")]
			[Address(RVA = "0x14E1198", Offset = "0x14E1198", VA = "0x14E1198", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000145")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000BE6")]
			[Address(RVA = "0x14E1364", Offset = "0x14E1364", VA = "0x14E1364", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000BE1")]
		[Address(RVA = "0x14DF8DC", Offset = "0x14DF8DC", VA = "0x14DF8DC")]
		[DebuggerHidden]
		public <StartFollow>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x6000BE2")]
		[Address(RVA = "0x14E0694", Offset = "0x14E0694", VA = "0x14E0694", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000BE3")]
		[Address(RVA = "0x14E0774", Offset = "0x14E0774", VA = "0x14E0774", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BE5")]
		[Address(RVA = "0x14E1284", Offset = "0x14E1284", VA = "0x14E1284", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000181")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCF9A60", Offset = "0xCF9A60")]
	private sealed class <DisableWithDelay>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000797")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000798")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000799")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DelayedSplineFollower <>4__this;

		[Token(Token = "0x17000146")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000BEA")]
			[Address(RVA = "0x14E03DC", Offset = "0x14E03DC", VA = "0x14E03DC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000147")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000BEC")]
			[Address(RVA = "0x14E05A8", Offset = "0x14E05A8", VA = "0x14E05A8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000BE7")]
		[Address(RVA = "0x14DFAF8", Offset = "0x14DFAF8", VA = "0x14DFAF8")]
		[DebuggerHidden]
		public <DisableWithDelay>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x6000BE8")]
		[Address(RVA = "0x14DFE2C", Offset = "0x14DFE2C", VA = "0x14DFE2C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000BE9")]
		[Address(RVA = "0x14DFF0C", Offset = "0x14DFF0C", VA = "0x14DFF0C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BEB")]
		[Address(RVA = "0x14E04C8", Offset = "0x14E04C8", VA = "0x14E04C8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40001CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float delay;

	[Token(Token = "0x40001CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject movingObject;

	[Token(Token = "0x40001CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private SplineFollower _splineFollower;

	[Token(Token = "0x40001CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Light effectLight;

	[Token(Token = "0x40001CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float baseIntensity;

	[Token(Token = "0x600021C")]
	[Address(RVA = "0x14DD59C", Offset = "0x14DD59C", VA = "0x14DD59C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600021D")]
	[Address(RVA = "0x14DDA70", Offset = "0x14DDA70", VA = "0x14DDA70")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600021E")]
	[Address(RVA = "0x14DE44C", Offset = "0x14DE44C", VA = "0x14DE44C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600021F")]
	[Address(RVA = "0x14DE88C", Offset = "0x14DE88C", VA = "0x14DE88C")]
	private void OnShot(bool left)
	{
	}

	[Token(Token = "0x6000220")]
	[Address(RVA = "0x14DE330", Offset = "0x14DE330", VA = "0x14DE330")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD0154C", Offset = "0xD0154C")]
	private IEnumerator StartFollow()
	{
		return null;
	}

	[Token(Token = "0x6000221")]
	[Address(RVA = "0x14DEB74", Offset = "0x14DEB74", VA = "0x14DEB74")]
	private void StartGame()
	{
	}

	[Token(Token = "0x6000222")]
	[Address(RVA = "0x14DF9DC", Offset = "0x14DF9DC", VA = "0x14DF9DC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD015B0", Offset = "0xD015B0")]
	private IEnumerator DisableWithDelay()
	{
		return null;
	}

	[Token(Token = "0x6000223")]
	[Address(RVA = "0x14DFBF8", Offset = "0x14DFBF8", VA = "0x14DFBF8")]
	public DelayedSplineFollower()
	{
	}
}
[Token(Token = "0x2000058")]
public class DevToolsController : MonoBehaviour
{
	[Token(Token = "0x40001D0")]
	private const string SettingsPrefsKeys = "DevSettings";

	[Token(Token = "0x40001D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static DevToolsController Instance;

	[Token(Token = "0x40001D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Toggle fastBallsToggle;

	[Token(Token = "0x40001D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Toggle powerUpEachHitToggle;

	[Token(Token = "0x40001D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private DevSettings savedSettingsState;

	[Token(Token = "0x40001D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
	public DevSettings settings;

	[Token(Token = "0x40001D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Toggle shortLevelToggle;

	[Token(Token = "0x40001D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject uiRoot;

	[Token(Token = "0x40001D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Toggle visualizePowerUpAnchorsToggle;

	[Token(Token = "0x40001D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Toggle showDebugPowerUpsToggle;

	[Token(Token = "0x40001DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject debugPowerUpsGameObject;

	[Token(Token = "0x17000039")]
	public bool DisplayUI
	{
		[Token(Token = "0x6000224")]
		[Address(RVA = "0x14EDCB0", Offset = "0x14EDCB0", VA = "0x14EDCB0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000225")]
		[Address(RVA = "0x14EDEF4", Offset = "0x14EDEF4", VA = "0x14EDEF4")]
		set
		{
		}
	}

	[Token(Token = "0x6000226")]
	[Address(RVA = "0x14EE14C", Offset = "0x14EE14C", VA = "0x14EE14C")]
	public void EnableFastBalls(bool enable)
	{
	}

	[Token(Token = "0x6000227")]
	[Address(RVA = "0x14EE3D4", Offset = "0x14EE3D4", VA = "0x14EE3D4")]
	public void EnableShortLevel(bool enable)
	{
	}

	[Token(Token = "0x6000228")]
	[Address(RVA = "0x14EE65C", Offset = "0x14EE65C", VA = "0x14EE65C")]
	public void EnableDropPowerUpEachHit(bool enable)
	{
	}

	[Token(Token = "0x6000229")]
	[Address(RVA = "0x14EE8E4", Offset = "0x14EE8E4", VA = "0x14EE8E4")]
	public void VisualizePowerUpAnchors(bool enable)
	{
	}

	[Token(Token = "0x600022A")]
	[Address(RVA = "0x14EEB6C", Offset = "0x14EEB6C", VA = "0x14EEB6C")]
	public void UnlockAllLevels()
	{
	}

	[Token(Token = "0x600022B")]
	[Address(RVA = "0x14EF014", Offset = "0x14EF014", VA = "0x14EF014")]
	public void UnlockWithKeys()
	{
	}

	[Token(Token = "0x600022C")]
	[Address(RVA = "0x14EF3F8", Offset = "0x14EF3F8", VA = "0x14EF3F8")]
	public void ResetGameProgress()
	{
	}

	[Token(Token = "0x600022D")]
	[Address(RVA = "0x14EF8A0", Offset = "0x14EF8A0", VA = "0x14EF8A0")]
	private void Warn(string message)
	{
	}

	[Token(Token = "0x600022E")]
	[Address(RVA = "0x14EFBA8", Offset = "0x14EFBA8", VA = "0x14EFBA8")]
	private void Start()
	{
	}

	[Token(Token = "0x600022F")]
	[Address(RVA = "0x14F0424", Offset = "0x14F0424", VA = "0x14F0424")]
	private void Initialize()
	{
	}

	[Token(Token = "0x6000230")]
	[Address(RVA = "0x14F1DE8", Offset = "0x14F1DE8", VA = "0x14F1DE8")]
	private void OnGameStateChange(GameState prevGameState, GameState newGameState)
	{
	}

	[Token(Token = "0x6000231")]
	[Address(RVA = "0x14F1920", Offset = "0x14F1920", VA = "0x14F1920")]
	private void ShowDebugPowerUps(bool enable)
	{
	}

	[Token(Token = "0x6000232")]
	[Address(RVA = "0x14F2320", Offset = "0x14F2320", VA = "0x14F2320")]
	public void ShowDebug()
	{
	}

	[Token(Token = "0x6000233")]
	[Address(RVA = "0x14F2530", Offset = "0x14F2530", VA = "0x14F2530")]
	private void Update()
	{
	}

	[Token(Token = "0x6000234")]
	[Address(RVA = "0x14F36E0", Offset = "0x14F36E0", VA = "0x14F36E0")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xD01614", Offset = "0xD01614")]
	private void ProcessHotKeys()
	{
	}

	[Token(Token = "0x6000235")]
	private bool Found<T>(out T instance) where T : MonoBehaviour
	{
		return default(bool);
	}

	[Token(Token = "0x6000236")]
	[Address(RVA = "0x14F3294", Offset = "0x14F3294", VA = "0x14F3294")]
	private void SaveSettings()
	{
	}

	[Token(Token = "0x6000237")]
	[Address(RVA = "0x14F159C", Offset = "0x14F159C", VA = "0x14F159C")]
	private void LoadSettings()
	{
	}

	[Token(Token = "0x6000238")]
	[Address(RVA = "0x14F4230", Offset = "0x14F4230", VA = "0x14F4230")]
	public DevToolsController()
	{
	}
}
[Serializable]
[Token(Token = "0x2000059")]
public struct DevSettings
{
	[Token(Token = "0x40001DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool fastBalls;

	[Token(Token = "0x40001DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
	public bool shortLevel;

	[Token(Token = "0x40001DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
	public bool dropPowerUpEachHit;

	[Token(Token = "0x40001DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3")]
	public bool visualizePowerUpAnchors;

	[Token(Token = "0x40001DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public bool showDebugPowerUps;
}
[Token(Token = "0x200005A")]
public class DontDestroyOnLoad : MonoBehaviour
{
	[Token(Token = "0x6000239")]
	[Address(RVA = "0x1504C24", Offset = "0x1504C24", VA = "0x1504C24")]
	private void Awake()
	{
	}

	[Token(Token = "0x600023A")]
	[Address(RVA = "0x1504F94", Offset = "0x1504F94", VA = "0x1504F94")]
	public DontDestroyOnLoad()
	{
	}
}
[Token(Token = "0x200005B")]
public class FollowCameraRotation : MonoBehaviour
{
	[Token(Token = "0x40001E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float rotationSpeed;

	[Token(Token = "0x40001E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float maxAngle;

	[Token(Token = "0x40001E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform targetTransf;

	[Token(Token = "0x600023B")]
	[Address(RVA = "0x342BA94", Offset = "0x342BA94", VA = "0x342BA94")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600023C")]
	[Address(RVA = "0x342BE28", Offset = "0x342BE28", VA = "0x342BE28")]
	private void OnGameStateChanged(GameState PrevGameState, GameState newGameState)
	{
	}

	[Token(Token = "0x600023D")]
	[Address(RVA = "0x342C704", Offset = "0x342C704", VA = "0x342C704")]
	private void Start()
	{
	}

	[Token(Token = "0x600023E")]
	[Address(RVA = "0x342CA68", Offset = "0x342CA68", VA = "0x342CA68")]
	private void Update()
	{
	}

	[Token(Token = "0x600023F")]
	[Address(RVA = "0x342D828", Offset = "0x342D828", VA = "0x342D828")]
	public FollowCameraRotation()
	{
	}
}
[Token(Token = "0x200005C")]
public static class NoVRDetector
{
	[Token(Token = "0x2000182")]
	public enum DisplayMode
	{
		[Token(Token = "0x400079B")]
		VR,
		[Token(Token = "0x400079C")]
		Desktop
	}

	[Token(Token = "0x40001E3")]
	private const string DesktopModeArg = "-2d";

	[Token(Token = "0x40001E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static DisplayMode currentDisplayMode;

	[Token(Token = "0x1700003A")]
	public static bool IsNoVr
	{
		[Token(Token = "0x6000240")]
		[Address(RVA = "0x218F770", Offset = "0x218F770", VA = "0x218F770")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700003B")]
	public static bool IsVrMode
	{
		[Token(Token = "0x6000241")]
		[Address(RVA = "0x218F948", Offset = "0x218F948", VA = "0x218F948")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000242")]
	[Address(RVA = "0x218FB20", Offset = "0x218FB20", VA = "0x218FB20")]
	public static void AutoDetect()
	{
	}
}
[Token(Token = "0x200005D")]
public class ObjectGraphicSettings : MonoBehaviour
{
	[Token(Token = "0x40001E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool disableOnAndroid;

	[Token(Token = "0x6000244")]
	[Address(RVA = "0x19E16E0", Offset = "0x19E16E0", VA = "0x19E16E0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000245")]
	[Address(RVA = "0x19E1BC0", Offset = "0x19E1BC0", VA = "0x19E1BC0")]
	public ObjectGraphicSettings()
	{
	}
}
[Token(Token = "0x200005E")]
public class OnGameStateStatusChanger : MonoBehaviour
{
	[Token(Token = "0x2000183")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCF9A70", Offset = "0xCF9A70")]
	private sealed class <>c__DisplayClass5_0
	{
		[Token(Token = "0x400079D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameState newGameState;

		[Token(Token = "0x6000BED")]
		[Address(RVA = "0x19F5608", Offset = "0x19F5608", VA = "0x19F5608")]
		public <>c__DisplayClass5_0()
		{
		}

		[Token(Token = "0x6000BEE")]
		[Address(RVA = "0x19F592C", Offset = "0x19F592C", VA = "0x19F592C")]
		internal bool <OnGameStateChanged>b__0(GameState gameState)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x40001E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject[] targetObjects;

	[Token(Token = "0x40001E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameState[] gameStates;

	[Token(Token = "0x40001E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private bool disableOnOther;

	[Token(Token = "0x6000246")]
	[Address(RVA = "0x19F375C", Offset = "0x19F375C", VA = "0x19F375C")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x6000247")]
	[Address(RVA = "0x19F5274", Offset = "0x19F5274", VA = "0x19F5274")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x6000248")]
	[Address(RVA = "0x19F3CB8", Offset = "0x19F3CB8", VA = "0x19F3CB8")]
	private void OnGameStateChanged(GameState prevGameState, GameState newGameState)
	{
	}

	[Token(Token = "0x6000249")]
	[Address(RVA = "0x19F56F8", Offset = "0x19F56F8", VA = "0x19F56F8")]
	public OnGameStateStatusChanger()
	{
	}
}
[Token(Token = "0x200005F")]
public class OnLaserHoverRotator : MonoBehaviour
{
	[Token(Token = "0x40001E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 baseScale;

	[Token(Token = "0x40001EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float pingPongValue;

	[Token(Token = "0x40001EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float unclampedT;

	[Token(Token = "0x40001EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool hover;

	[Token(Token = "0x40001ED")]
	private const float SPEED = 5f;

	[Token(Token = "0x600024A")]
	[Address(RVA = "0x19F5B08", Offset = "0x19F5B08", VA = "0x19F5B08")]
	private void Awake()
	{
	}

	[Token(Token = "0x600024B")]
	[Address(RVA = "0x19F5E84", Offset = "0x19F5E84", VA = "0x19F5E84")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600024C")]
	[Address(RVA = "0x19F630C", Offset = "0x19F630C", VA = "0x19F630C")]
	private void Update()
	{
	}

	[Token(Token = "0x600024D")]
	[Address(RVA = "0x19F7518", Offset = "0x19F7518", VA = "0x19F7518")]
	public void SetPointerOver()
	{
	}

	[Token(Token = "0x600024E")]
	[Address(RVA = "0x19F778C", Offset = "0x19F778C", VA = "0x19F778C")]
	public OnLaserHoverRotator()
	{
	}
}
[Token(Token = "0x2000060")]
public class OnLoadingGameStateChanger : MonoBehaviour
{
	[Token(Token = "0x40001EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject targetGameObject;

	[Token(Token = "0x600024F")]
	[Address(RVA = "0x19F787C", Offset = "0x19F787C", VA = "0x19F787C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000250")]
	[Address(RVA = "0x19F7D4C", Offset = "0x19F7D4C", VA = "0x19F7D4C")]
	private void LevelLoadStartStartHandler()
	{
	}

	[Token(Token = "0x6000251")]
	[Address(RVA = "0x19F803C", Offset = "0x19F803C", VA = "0x19F803C")]
	private void LevelLoadedHandler()
	{
	}

	[Token(Token = "0x6000252")]
	[Address(RVA = "0x19F832C", Offset = "0x19F832C", VA = "0x19F832C")]
	public OnLoadingGameStateChanger()
	{
	}
}
[Token(Token = "0x2000061")]
public class ParentOnEnable : MonoBehaviour
{
	[Token(Token = "0x40001EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform[] transforms;

	[Token(Token = "0x40001F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform[] transformsPoints;

	[Token(Token = "0x40001F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform baseTransformsParent;

	[Token(Token = "0x6000253")]
	[Address(RVA = "0x19FACB8", Offset = "0x19FACB8", VA = "0x19FACB8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000254")]
	[Address(RVA = "0x19FAFD0", Offset = "0x19FAFD0", VA = "0x19FAFD0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000255")]
	[Address(RVA = "0x19FB9A8", Offset = "0x19FB9A8", VA = "0x19FB9A8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000256")]
	[Address(RVA = "0x19FC538", Offset = "0x19FC538", VA = "0x19FC538")]
	public ParentOnEnable()
	{
	}
}
[Token(Token = "0x2000062")]
public class PlayerInitializer : MonoBehaviour
{
	[Token(Token = "0x6000257")]
	[Address(RVA = "0x1A0985C", Offset = "0x1A0985C", VA = "0x1A0985C")]
	public PlayerInitializer()
	{
	}
}
[Token(Token = "0x2000063")]
public class PlayerRecenter : MonoBehaviour
{
	[Token(Token = "0x40001F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static PlayerRecenter instance;

	[Token(Token = "0x40001F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Player player;

	[Token(Token = "0x40001F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform originTransform;

	[Token(Token = "0x40001F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private UiRecenter visualIndicator;

	[Token(Token = "0x40001F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float progress;

	[Token(Token = "0x6000258")]
	[Address(RVA = "0x1A0B344", Offset = "0x1A0B344", VA = "0x1A0B344")]
	public static void TryRecenter()
	{
	}

	[Token(Token = "0x6000259")]
	[Address(RVA = "0x1A0B9F4", Offset = "0x1A0B9F4", VA = "0x1A0B9F4")]
	private void Awake()
	{
	}

	[Token(Token = "0x600025A")]
	[Address(RVA = "0x1A0BF34", Offset = "0x1A0BF34", VA = "0x1A0BF34")]
	private void LevelLoaded()
	{
	}

	[Token(Token = "0x600025B")]
	[Address(RVA = "0x1A0C368", Offset = "0x1A0C368", VA = "0x1A0C368")]
	private void ProcessCenteringInput()
	{
	}

	[Token(Token = "0x600025C")]
	[Address(RVA = "0x1A0B78C", Offset = "0x1A0B78C", VA = "0x1A0B78C")]
	public void Recenter()
	{
	}

	[Token(Token = "0x600025D")]
	[Address(RVA = "0x1A0D398", Offset = "0x1A0D398", VA = "0x1A0D398")]
	private void AlignPlayer()
	{
	}

	[Token(Token = "0x600025E")]
	[Address(RVA = "0x1A0E0F4", Offset = "0x1A0E0F4", VA = "0x1A0E0F4")]
	public PlayerRecenter()
	{
	}
}
[Token(Token = "0x2000064")]
public class RandomRotation : MonoBehaviour
{
	[Token(Token = "0x40001F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 localRotationBase;

	[Token(Token = "0x40001F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector3 RotateSpeed;

	[Token(Token = "0x600025F")]
	[Address(RVA = "0x1A14108", Offset = "0x1A14108", VA = "0x1A14108")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000260")]
	[Address(RVA = "0x1A14520", Offset = "0x1A14520", VA = "0x1A14520")]
	private void Update()
	{
	}

	[Token(Token = "0x6000261")]
	[Address(RVA = "0x1A14B9C", Offset = "0x1A14B9C", VA = "0x1A14B9C")]
	public RandomRotation()
	{
	}
}
[Token(Token = "0x2000065")]
public class Requirement
{
	[Token(Token = "0x40001FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCFB4C0", Offset = "0xCFB4C0")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xCFB4C0", Offset = "0xCFB4C0")]
	private readonly bool <initialized>k__BackingField;

	[Token(Token = "0x40001FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCFB4FC", Offset = "0xCFB4FC")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xCFB4FC", Offset = "0xCFB4FC")]
	private readonly string <id>k__BackingField;

	[Token(Token = "0x40001FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCFB538", Offset = "0xCFB538")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xCFB538", Offset = "0xCFB538")]
	private readonly int <goalIncrement>k__BackingField;

	[Token(Token = "0x40001FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCFB574", Offset = "0xCFB574")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xCFB574", Offset = "0xCFB574")]
	private int <currIncrement>k__BackingField;

	[Token(Token = "0x1700003C")]
	public bool goalReached
	{
		[Token(Token = "0x6000264")]
		[Address(RVA = "0x1A15170", Offset = "0x1A15170", VA = "0x1A15170")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700003D")]
	public bool initialized
	{
		[Token(Token = "0x6000265")]
		[Address(RVA = "0x1A1542C", Offset = "0x1A1542C", VA = "0x1A1542C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0166C", Offset = "0xD0166C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700003E")]
	public string id
	{
		[Token(Token = "0x6000266")]
		[Address(RVA = "0x1A155F0", Offset = "0x1A155F0", VA = "0x1A155F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0167C", Offset = "0xD0167C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700003F")]
	public int goalIncrement
	{
		[Token(Token = "0x6000267")]
		[Address(RVA = "0x1A157A4", Offset = "0x1A157A4", VA = "0x1A157A4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0168C", Offset = "0xD0168C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000040")]
	public int currIncrement
	{
		[Token(Token = "0x6000268")]
		[Address(RVA = "0x1A15958", Offset = "0x1A15958", VA = "0x1A15958")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0169C", Offset = "0xD0169C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000269")]
		[Address(RVA = "0x1A15B0C", Offset = "0x1A15B0C", VA = "0x1A15B0C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD016AC", Offset = "0xD016AC")]
		private set
		{
		}
	}

	[Token(Token = "0x1400000F")]
	public event Action Goal
	{
		[Token(Token = "0x6000262")]
		[Address(RVA = "0x1A14EA0", Offset = "0x1A14EA0", VA = "0x1A14EA0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0164C", Offset = "0xD0164C")]
		add
		{
		}
		[Token(Token = "0x6000263")]
		[Address(RVA = "0x1A15008", Offset = "0x1A15008", VA = "0x1A15008")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0165C", Offset = "0xD0165C")]
		remove
		{
		}
	}

	[Token(Token = "0x600026A")]
	[Address(RVA = "0x1A15CD4", Offset = "0x1A15CD4", VA = "0x1A15CD4")]
	public Requirement(string id, int goal)
	{
	}

	[Token(Token = "0x600026B")]
	[Address(RVA = "0x1A16394", Offset = "0x1A16394", VA = "0x1A16394")]
	public void Increment(int value)
	{
	}
}
[Token(Token = "0x2000066")]
public class TerrainGraphicSettings : MonoBehaviour
{
	[Token(Token = "0x40001FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Terrain _terrain;

	[Token(Token = "0x600026C")]
	[Address(RVA = "0x1748528", Offset = "0x1748528", VA = "0x1748528")]
	private void Awake()
	{
	}

	[Token(Token = "0x600026D")]
	[Address(RVA = "0x1748AB0", Offset = "0x1748AB0", VA = "0x1748AB0")]
	public TerrainGraphicSettings()
	{
	}
}
[Token(Token = "0x2000067")]
public class TweenAnimations : MonoBehaviour
{
	[Token(Token = "0x40001FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float duration;

	[Token(Token = "0x4000200")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private int vibrato;

	[Token(Token = "0x4000201")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Ease ease;

	[Token(Token = "0x4000202")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private bool leftHand;

	[Token(Token = "0x4000203")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Vector3 rotateOne;

	[Token(Token = "0x4000204")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private Vector3 localPosOne;

	[Token(Token = "0x4000205")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 _basePosition;

	[Token(Token = "0x4000206")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Quaternion _baseRotation;

	[Token(Token = "0x4000207")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private bool initialized;

	[Token(Token = "0x4000208")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Tweener positionTweener;

	[Token(Token = "0x4000209")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Tweener rotationTweener;

	[Token(Token = "0x600026E")]
	[Address(RVA = "0x1757C74", Offset = "0x1757C74", VA = "0x1757C74")]
	private void Awake()
	{
	}

	[Token(Token = "0x600026F")]
	[Address(RVA = "0x175833C", Offset = "0x175833C", VA = "0x175833C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000270")]
	[Address(RVA = "0x1759300", Offset = "0x1759300", VA = "0x1759300")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000271")]
	[Address(RVA = "0x1759674", Offset = "0x1759674", VA = "0x1759674")]
	private void OnShot(bool left)
	{
	}

	[Token(Token = "0x6000272")]
	[Address(RVA = "0x17588E8", Offset = "0x17588E8", VA = "0x17588E8")]
	private void ResetPosition()
	{
	}

	[Token(Token = "0x6000273")]
	[Address(RVA = "0x1759AE0", Offset = "0x1759AE0", VA = "0x1759AE0")]
	private void Animation()
	{
	}

	[Token(Token = "0x6000274")]
	[Address(RVA = "0x175A70C", Offset = "0x175A70C", VA = "0x175A70C")]
	public TweenAnimations()
	{
	}
}
[Token(Token = "0x2000068")]
public class TweenAnimationsOnChestAddSoul : MonoBehaviour
{
	[Token(Token = "0x400020A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Chest chest;

	[Token(Token = "0x400020B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private bool punch;

	[Token(Token = "0x400020C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float duration;

	[Token(Token = "0x400020D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Ease ease;

	[Token(Token = "0x400020E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private int vibrato;

	[Token(Token = "0x400020F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Vector3 rotateOne;

	[Token(Token = "0x4000210")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	private Vector3 localPosOne;

	[Token(Token = "0x4000211")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Vector3 localScaleOne;

	[Token(Token = "0x4000212")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Vector3 _basePosition;

	[Token(Token = "0x4000213")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Quaternion _baseRotation;

	[Token(Token = "0x4000214")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector3 _baseScale;

	[Token(Token = "0x4000215")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private bool initialized;

	[Token(Token = "0x4000216")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Tweener positionTweener;

	[Token(Token = "0x4000217")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Tweener rotationTweener;

	[Token(Token = "0x4000218")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Tweener scaleTweener;

	[Token(Token = "0x6000275")]
	[Address(RVA = "0x175AA04", Offset = "0x175AA04", VA = "0x175AA04")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000276")]
	[Address(RVA = "0x175B31C", Offset = "0x175B31C", VA = "0x175B31C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000277")]
	[Address(RVA = "0x175E4D0", Offset = "0x175E4D0", VA = "0x175E4D0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000278")]
	[Address(RVA = "0x175E858", Offset = "0x175E858", VA = "0x175E858")]
	private void OnSoulAdded()
	{
	}

	[Token(Token = "0x6000279")]
	[Address(RVA = "0x175B9A4", Offset = "0x175B9A4", VA = "0x175B9A4")]
	private void ResetPosition()
	{
	}

	[Token(Token = "0x600027A")]
	[Address(RVA = "0x175C7C4", Offset = "0x175C7C4", VA = "0x175C7C4")]
	private void Animation()
	{
	}

	[Token(Token = "0x600027B")]
	[Address(RVA = "0x175EB30", Offset = "0x175EB30", VA = "0x175EB30")]
	public TweenAnimationsOnChestAddSoul()
	{
	}
}
[Token(Token = "0x2000069")]
public class TweenAnimationsOnChestOpen : MonoBehaviour
{
	[Token(Token = "0x4000219")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Chest chest;

	[Token(Token = "0x400021A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private bool punch;

	[Token(Token = "0x400021B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float duration;

	[Token(Token = "0x400021C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Ease ease;

	[Token(Token = "0x400021D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private int vibrato;

	[Token(Token = "0x400021E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Vector3 rotateOne;

	[Token(Token = "0x400021F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	private Vector3 localPosOne;

	[Token(Token = "0x4000220")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3 _basePosition;

	[Token(Token = "0x4000221")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Quaternion _baseRotation;

	[Token(Token = "0x4000222")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private bool initialized;

	[Token(Token = "0x4000223")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Tweener positionTweener;

	[Token(Token = "0x4000224")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Tweener rotationTweener;

	[Token(Token = "0x600027C")]
	[Address(RVA = "0x175EE28", Offset = "0x175EE28", VA = "0x175EE28")]
	private void Awake()
	{
	}

	[Token(Token = "0x600027D")]
	[Address(RVA = "0x175F5D4", Offset = "0x175F5D4", VA = "0x175F5D4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600027E")]
	[Address(RVA = "0x17605AC", Offset = "0x17605AC", VA = "0x17605AC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600027F")]
	[Address(RVA = "0x1760934", Offset = "0x1760934", VA = "0x1760934")]
	private void OnChestOpened()
	{
	}

	[Token(Token = "0x6000280")]
	[Address(RVA = "0x175FB94", Offset = "0x175FB94", VA = "0x175FB94")]
	private void ResetPosition()
	{
	}

	[Token(Token = "0x6000281")]
	[Address(RVA = "0x1760C0C", Offset = "0x1760C0C", VA = "0x1760C0C")]
	private void Animation()
	{
	}

	[Token(Token = "0x6000282")]
	[Address(RVA = "0x1762070", Offset = "0x1762070", VA = "0x1762070")]
	public TweenAnimationsOnChestOpen()
	{
	}
}
[Token(Token = "0x200006A")]
public class UiButtonGameStateChange : MonoBehaviour
{
	[Token(Token = "0x4000225")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Button _button;

	[Token(Token = "0x4000226")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private bool justResetToPrevGameState;

	[Token(Token = "0x4000227")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private GameState gameState;

	[Token(Token = "0x6000283")]
	[Address(RVA = "0x176B044", Offset = "0x176B044", VA = "0x176B044")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000284")]
	[Address(RVA = "0x176B740", Offset = "0x176B740", VA = "0x176B740")]
	public void ChangeState()
	{
	}

	[Token(Token = "0x6000285")]
	[Address(RVA = "0x176C244", Offset = "0x176C244", VA = "0x176C244")]
	public UiButtonGameStateChange()
	{
	}
}
[Token(Token = "0x200006B")]
public class GooglePlayStoreObject : MonoBehaviour
{
	[Token(Token = "0x6000286")]
	[Address(RVA = "0x194BB04", Offset = "0x194BB04", VA = "0x194BB04")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000287")]
	[Address(RVA = "0x194BE74", Offset = "0x194BE74", VA = "0x194BE74")]
	public GooglePlayStoreObject()
	{
	}
}
[Token(Token = "0x200006C")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xCF8878", Offset = "0xCF8878")]
public class FPSCameraController : MonoBehaviour
{
	[Token(Token = "0x2000184")]
	public enum RotationAxes
	{
		[Token(Token = "0x400079F")]
		MouseXAndY,
		[Token(Token = "0x40007A0")]
		MouseX,
		[Token(Token = "0x40007A1")]
		MouseY
	}

	[Token(Token = "0x4000228")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RotationAxes axes;

	[Token(Token = "0x4000229")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float sensitivityX;

	[Token(Token = "0x400022A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float sensitivityY;

	[Token(Token = "0x400022B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float minimumX;

	[Token(Token = "0x400022C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maximumX;

	[Token(Token = "0x400022D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float minimumY;

	[Token(Token = "0x400022E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float maximumY;

	[Token(Token = "0x400022F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float rotationX;

	[Token(Token = "0x4000230")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float rotationY;

	[Token(Token = "0x4000231")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float shiftX;

	[Token(Token = "0x4000232")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float shiftZ;

	[Token(Token = "0x4000233")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float tilt;

	[Token(Token = "0x4000234")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Quaternion originalRotation;

	[Token(Token = "0x6000288")]
	[Address(RVA = "0x3424E78", Offset = "0x3424E78", VA = "0x3424E78")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000289")]
	[Address(RVA = "0x3425200", Offset = "0x3425200", VA = "0x3425200")]
	private void Start()
	{
	}

	[Token(Token = "0x600028A")]
	[Address(RVA = "0x34254F8", Offset = "0x34254F8", VA = "0x34254F8")]
	private void OnApplicationFocus(bool hasFocus)
	{
	}

	[Token(Token = "0x600028B")]
	[Address(RVA = "0x34257EC", Offset = "0x34257EC", VA = "0x34257EC")]
	private void Update()
	{
	}

	[Token(Token = "0x600028C")]
	[Address(RVA = "0x3427B94", Offset = "0x3427B94", VA = "0x3427B94")]
	private void ProcessMovement()
	{
	}

	[Token(Token = "0x600028D")]
	[Address(RVA = "0x34275F8", Offset = "0x34275F8", VA = "0x34275F8")]
	public static float ClampAngle(float angle, float min, float max)
	{
		return default(float);
	}

	[Token(Token = "0x600028E")]
	[Address(RVA = "0x34288B8", Offset = "0x34288B8", VA = "0x34288B8")]
	public FPSCameraController()
	{
	}
}
[Token(Token = "0x200006D")]
public class PlayerOffsetProcessor : InputProcessor<Vector3>
{
	[Token(Token = "0x4000235")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Vector3 offset;

	[Token(Token = "0x600028F")]
	[Address(RVA = "0x1A0994C", Offset = "0x1A0994C", VA = "0x1A0994C")]
	[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0xD016BC", Offset = "0xD016BC")]
	private static void Initialize()
	{
	}

	[Token(Token = "0x6000290")]
	[Address(RVA = "0x1A09C40", Offset = "0x1A09C40", VA = "0x1A09C40", Slot = "6")]
	public override Vector3 Process(Vector3 value, InputControl control)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000291")]
	[Address(RVA = "0x1A09FDC", Offset = "0x1A09FDC", VA = "0x1A09FDC")]
	public PlayerOffsetProcessor()
	{
	}
}
[Token(Token = "0x200006E")]
public class UIRayPositionOverrideProcessor : InputProcessor<Vector3>
{
	[Token(Token = "0x4000236")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Vector3 position;

	[Token(Token = "0x6000293")]
	[Address(RVA = "0x1768E1C", Offset = "0x1768E1C", VA = "0x1768E1C")]
	[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0xD016CC", Offset = "0xD016CC")]
	private static void Initialize()
	{
	}

	[Token(Token = "0x6000294")]
	[Address(RVA = "0x1769110", Offset = "0x1769110", VA = "0x1769110", Slot = "6")]
	public override Vector3 Process(Vector3 value, InputControl control)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000295")]
	[Address(RVA = "0x17693E0", Offset = "0x17693E0", VA = "0x17693E0")]
	public UIRayPositionOverrideProcessor()
	{
	}
}
[Token(Token = "0x200006F")]
public class XRRayTiltProcessor : InputProcessor<Quaternion>
{
	[Token(Token = "0x4000237")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool Enabled;

	[Token(Token = "0x6000297")]
	[Address(RVA = "0x164A200", Offset = "0x164A200", VA = "0x164A200")]
	[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0xD016DC", Offset = "0xD016DC")]
	private static void Initialize()
	{
	}

	[Token(Token = "0x6000298")]
	[Address(RVA = "0x164A4F4", Offset = "0x164A4F4", VA = "0x164A4F4", Slot = "6")]
	public override Quaternion Process(Quaternion value, InputControl control)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000299")]
	[Address(RVA = "0x164A9E8", Offset = "0x164A9E8", VA = "0x164A9E8")]
	public XRRayTiltProcessor()
	{
	}
}
[Token(Token = "0x2000070")]
public class UIRayRotationOverrideProcessor : InputProcessor<Quaternion>
{
	[Token(Token = "0x4000238")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Quaternion rotation;

	[Token(Token = "0x600029B")]
	[Address(RVA = "0x1769748", Offset = "0x1769748", VA = "0x1769748")]
	[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0xD016EC", Offset = "0xD016EC")]
	private static void Initialize()
	{
	}

	[Token(Token = "0x600029C")]
	[Address(RVA = "0x1769A3C", Offset = "0x1769A3C", VA = "0x1769A3C", Slot = "6")]
	public override Quaternion Process(Quaternion value, InputControl control)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x600029D")]
	[Address(RVA = "0x1769D10", Offset = "0x1769D10", VA = "0x1769D10")]
	public UIRayRotationOverrideProcessor()
	{
	}
}
[Token(Token = "0x2000071")]
public class ZoomaInputMap : IInputActionCollection, IEnumerable<InputAction>, IEnumerable, IDisposable
{
	[Token(Token = "0x2000185")]
	public struct CommonActions
	{
		[Token(Token = "0x40007A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private ZoomaInputMap m_Wrapper;

		[Token(Token = "0x17000148")]
		public InputAction Menu
		{
			[Token(Token = "0x6000BF0")]
			[Address(RVA = "0x4C15FF0", Offset = "0x4C15FF0", VA = "0x4C15FF0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000149")]
		public InputAction Recenter
		{
			[Token(Token = "0x6000BF1")]
			[Address(RVA = "0x4C161BC", Offset = "0x4C161BC", VA = "0x4C161BC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700014A")]
		public InputAction Look
		{
			[Token(Token = "0x6000BF2")]
			[Address(RVA = "0x4C16388", Offset = "0x4C16388", VA = "0x4C16388")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700014B")]
		public InputAction Escape
		{
			[Token(Token = "0x6000BF3")]
			[Address(RVA = "0x4C16554", Offset = "0x4C16554", VA = "0x4C16554")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700014C")]
		public InputAction Scroll
		{
			[Token(Token = "0x6000BF4")]
			[Address(RVA = "0x4C16720", Offset = "0x4C16720", VA = "0x4C16720")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700014D")]
		public InputAction HmdState
		{
			[Token(Token = "0x6000BF5")]
			[Address(RVA = "0x4C168EC", Offset = "0x4C168EC", VA = "0x4C168EC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700014E")]
		public InputAction Move
		{
			[Token(Token = "0x6000BF6")]
			[Address(RVA = "0x4C16AB8", Offset = "0x4C16AB8", VA = "0x4C16AB8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700014F")]
		public InputAction UiTap
		{
			[Token(Token = "0x6000BF7")]
			[Address(RVA = "0x4C16C84", Offset = "0x4C16C84", VA = "0x4C16C84")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000150")]
		public bool enabled
		{
			[Token(Token = "0x6000BFB")]
			[Address(RVA = "0x4C1778C", Offset = "0x4C1778C", VA = "0x4C1778C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000BEF")]
		[Address(RVA = "0x4C138A4", Offset = "0x4C138A4", VA = "0x4C138A4")]
		public CommonActions(ZoomaInputMap wrapper)
		{
		}

		[Token(Token = "0x6000BF8")]
		[Address(RVA = "0x4C16E50", Offset = "0x4C16E50", VA = "0x4C16E50")]
		public InputActionMap Get()
		{
			return null;
		}

		[Token(Token = "0x6000BF9")]
		[Address(RVA = "0x4C170D4", Offset = "0x4C170D4", VA = "0x4C170D4")]
		public void Enable()
		{
		}

		[Token(Token = "0x6000BFA")]
		[Address(RVA = "0x4C17430", Offset = "0x4C17430", VA = "0x4C17430")]
		public void Disable()
		{
		}

		[Token(Token = "0x6000BFC")]
		[Address(RVA = "0x4C17A48", Offset = "0x4C17A48", VA = "0x4C17A48")]
		public static implicit operator InputActionMap(CommonActions set)
		{
			return null;
		}

		[Token(Token = "0x6000BFD")]
		[Address(RVA = "0x4C17D24", Offset = "0x4C17D24", VA = "0x4C17D24")]
		public void SetCallbacks(ICommonActions instance)
		{
		}
	}

	[Token(Token = "0x2000186")]
	public struct GameplayActions
	{
		[Token(Token = "0x40007A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private ZoomaInputMap m_Wrapper;

		[Token(Token = "0x17000151")]
		public InputAction FireLeft
		{
			[Token(Token = "0x6000BFF")]
			[Address(RVA = "0x4C1F0E0", Offset = "0x4C1F0E0", VA = "0x4C1F0E0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000152")]
		public InputAction FireRight
		{
			[Token(Token = "0x6000C00")]
			[Address(RVA = "0x4C1F2AC", Offset = "0x4C1F2AC", VA = "0x4C1F2AC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000153")]
		public InputAction MouseFireLeft
		{
			[Token(Token = "0x6000C01")]
			[Address(RVA = "0x4C1F478", Offset = "0x4C1F478", VA = "0x4C1F478")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000154")]
		public InputAction MouseFireRight
		{
			[Token(Token = "0x6000C02")]
			[Address(RVA = "0x4C1F644", Offset = "0x4C1F644", VA = "0x4C1F644")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000155")]
		public bool enabled
		{
			[Token(Token = "0x6000C06")]
			[Address(RVA = "0x4C2014C", Offset = "0x4C2014C", VA = "0x4C2014C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000BFE")]
		[Address(RVA = "0x4C13D5C", Offset = "0x4C13D5C", VA = "0x4C13D5C")]
		public GameplayActions(ZoomaInputMap wrapper)
		{
		}

		[Token(Token = "0x6000C03")]
		[Address(RVA = "0x4C1F810", Offset = "0x4C1F810", VA = "0x4C1F810")]
		public InputActionMap Get()
		{
			return null;
		}

		[Token(Token = "0x6000C04")]
		[Address(RVA = "0x4C1FA94", Offset = "0x4C1FA94", VA = "0x4C1FA94")]
		public void Enable()
		{
		}

		[Token(Token = "0x6000C05")]
		[Address(RVA = "0x4C1FDF0", Offset = "0x4C1FDF0", VA = "0x4C1FDF0")]
		public void Disable()
		{
		}

		[Token(Token = "0x6000C07")]
		[Address(RVA = "0x4C20408", Offset = "0x4C20408", VA = "0x4C20408")]
		public static implicit operator InputActionMap(GameplayActions set)
		{
			return null;
		}

		[Token(Token = "0x6000C08")]
		[Address(RVA = "0x4C206E4", Offset = "0x4C206E4", VA = "0x4C206E4")]
		public void SetCallbacks(IGameplayActions instance)
		{
		}
	}

	[Token(Token = "0x2000187")]
	public interface ICommonActions
	{
		[Token(Token = "0x6000C09")]
		void OnMenu(InputAction.CallbackContext context);

		[Token(Token = "0x6000C0A")]
		void OnRecenter(InputAction.CallbackContext context);

		[Token(Token = "0x6000C0B")]
		void OnLook(InputAction.CallbackContext context);

		[Token(Token = "0x6000C0C")]
		void OnEscape(InputAction.CallbackContext context);

		[Token(Token = "0x6000C0D")]
		void OnScroll(InputAction.CallbackContext context);

		[Token(Token = "0x6000C0E")]
		void OnHmdState(InputAction.CallbackContext context);

		[Token(Token = "0x6000C0F")]
		void OnMove(InputAction.CallbackContext context);

		[Token(Token = "0x6000C10")]
		void OnUiTap(InputAction.CallbackContext context);
	}

	[Token(Token = "0x2000188")]
	public interface IGameplayActions
	{
		[Token(Token = "0x6000C11")]
		void OnFireLeft(InputAction.CallbackContext context);

		[Token(Token = "0x6000C12")]
		void OnFireRight(InputAction.CallbackContext context);

		[Token(Token = "0x6000C13")]
		void OnMouseFireLeft(InputAction.CallbackContext context);

		[Token(Token = "0x6000C14")]
		void OnMouseFireRight(InputAction.CallbackContext context);
	}

	[Token(Token = "0x4000239")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCFB700", Offset = "0xCFB700")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xCFB700", Offset = "0xCFB700")]
	private readonly InputActionAsset <asset>k__BackingField;

	[Token(Token = "0x400023A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private readonly InputActionMap m_Common;

	[Token(Token = "0x400023B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ICommonActions m_CommonActionsCallbackInterface;

	[Token(Token = "0x400023C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly InputAction m_Common_Menu;

	[Token(Token = "0x400023D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly InputAction m_Common_Recenter;

	[Token(Token = "0x400023E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly InputAction m_Common_Look;

	[Token(Token = "0x400023F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private readonly InputAction m_Common_Escape;

	[Token(Token = "0x4000240")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private readonly InputAction m_Common_Scroll;

	[Token(Token = "0x4000241")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private readonly InputAction m_Common_HmdState;

	[Token(Token = "0x4000242")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private readonly InputAction m_Common_Move;

	[Token(Token = "0x4000243")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private readonly InputAction m_Common_UiTap;

	[Token(Token = "0x4000244")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private readonly InputActionMap m_Gameplay;

	[Token(Token = "0x4000245")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private IGameplayActions m_GameplayActionsCallbackInterface;

	[Token(Token = "0x4000246")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private readonly InputAction m_Gameplay_FireLeft;

	[Token(Token = "0x4000247")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private readonly InputAction m_Gameplay_FireRight;

	[Token(Token = "0x4000248")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private readonly InputAction m_Gameplay_MouseFireLeft;

	[Token(Token = "0x4000249")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private readonly InputAction m_Gameplay_MouseFireRight;

	[Token(Token = "0x400024A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private int m_KeyboardMouseSchemeIndex;

	[Token(Token = "0x400024B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private int m_GamepadSchemeIndex;

	[Token(Token = "0x400024C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private int m_TouchSchemeIndex;

	[Token(Token = "0x400024D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private int m_JoystickSchemeIndex;

	[Token(Token = "0x400024E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private int m_XRSchemeIndex;

	[Token(Token = "0x17000041")]
	public InputActionAsset asset
	{
		[Token(Token = "0x600029F")]
		[Address(RVA = "0x4C0FB18", Offset = "0x4C0FB18", VA = "0x4C0FB18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD016FC", Offset = "0xD016FC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000042")]
	public InputBinding? bindingMask
	{
		[Token(Token = "0x60002A2")]
		[Address(RVA = "0x4C1164C", Offset = "0x4C1164C", VA = "0x4C1164C", Slot = "4")]
		get
		{
			return null;
		}
		[Token(Token = "0x60002A3")]
		[Address(RVA = "0x4C11ACC", Offset = "0x4C11ACC", VA = "0x4C11ACC", Slot = "5")]
		set
		{
		}
	}

	[Token(Token = "0x17000043")]
	public ReadOnlyArray<UnityEngine.InputSystem.InputDevice>? devices
	{
		[Token(Token = "0x60002A4")]
		[Address(RVA = "0x4C11DB0", Offset = "0x4C11DB0", VA = "0x4C11DB0", Slot = "6")]
		get
		{
			return null;
		}
		[Token(Token = "0x60002A5")]
		[Address(RVA = "0x4C12068", Offset = "0x4C12068", VA = "0x4C12068", Slot = "7")]
		set
		{
		}
	}

	[Token(Token = "0x17000044")]
	public ReadOnlyArray<InputControlScheme> controlSchemes
	{
		[Token(Token = "0x60002A6")]
		[Address(RVA = "0x4C1234C", Offset = "0x4C1234C", VA = "0x4C1234C", Slot = "8")]
		get
		{
			return default(ReadOnlyArray<InputControlScheme>);
		}
	}

	[Token(Token = "0x17000045")]
	public CommonActions Common
	{
		[Token(Token = "0x60002AC")]
		[Address(RVA = "0x4C13670", Offset = "0x4C13670", VA = "0x4C13670")]
		get
		{
			return default(CommonActions);
		}
	}

	[Token(Token = "0x17000046")]
	public GameplayActions Gameplay
	{
		[Token(Token = "0x60002AD")]
		[Address(RVA = "0x4C13B28", Offset = "0x4C13B28", VA = "0x4C13B28")]
		get
		{
			return default(GameplayActions);
		}
	}

	[Token(Token = "0x17000047")]
	public InputControlScheme KeyboardMouseScheme
	{
		[Token(Token = "0x60002AE")]
		[Address(RVA = "0x4C13FE0", Offset = "0x4C13FE0", VA = "0x4C13FE0")]
		get
		{
			return default(InputControlScheme);
		}
	}

	[Token(Token = "0x17000048")]
	public InputControlScheme GamepadScheme
	{
		[Token(Token = "0x60002AF")]
		[Address(RVA = "0x4C1463C", Offset = "0x4C1463C", VA = "0x4C1463C")]
		get
		{
			return default(InputControlScheme);
		}
	}

	[Token(Token = "0x17000049")]
	public InputControlScheme TouchScheme
	{
		[Token(Token = "0x60002B0")]
		[Address(RVA = "0x4C14C98", Offset = "0x4C14C98", VA = "0x4C14C98")]
		get
		{
			return default(InputControlScheme);
		}
	}

	[Token(Token = "0x1700004A")]
	public InputControlScheme JoystickScheme
	{
		[Token(Token = "0x60002B1")]
		[Address(RVA = "0x4C152F4", Offset = "0x4C152F4", VA = "0x4C152F4")]
		get
		{
			return default(InputControlScheme);
		}
	}

	[Token(Token = "0x1700004B")]
	public InputControlScheme XRScheme
	{
		[Token(Token = "0x60002B2")]
		[Address(RVA = "0x4C15950", Offset = "0x4C15950", VA = "0x4C15950")]
		get
		{
			return default(InputControlScheme);
		}
	}

	[Token(Token = "0x60002A0")]
	[Address(RVA = "0x4C0FCCC", Offset = "0x4C0FCCC", VA = "0x4C0FCCC")]
	public ZoomaInputMap()
	{
	}

	[Token(Token = "0x60002A1")]
	[Address(RVA = "0x4C112DC", Offset = "0x4C112DC", VA = "0x4C112DC", Slot = "14")]
	public void Dispose()
	{
	}

	[Token(Token = "0x60002A7")]
	[Address(RVA = "0x4C1260C", Offset = "0x4C1260C", VA = "0x4C1260C", Slot = "9")]
	public bool Contains(InputAction action)
	{
		return default(bool);
	}

	[Token(Token = "0x60002A8")]
	[Address(RVA = "0x4C12988", Offset = "0x4C12988", VA = "0x4C12988", Slot = "12")]
	public IEnumerator<InputAction> GetEnumerator()
	{
		return null;
	}

	[Token(Token = "0x60002A9")]
	[Address(RVA = "0x4C12CE4", Offset = "0x4C12CE4", VA = "0x4C12CE4", Slot = "13")]
	private IEnumerator System.Collections.IEnumerable.GetEnumerator()
	{
		return null;
	}

	[Token(Token = "0x60002AA")]
	[Address(RVA = "0x4C12FC0", Offset = "0x4C12FC0", VA = "0x4C12FC0", Slot = "10")]
	public void Enable()
	{
	}

	[Token(Token = "0x60002AB")]
	[Address(RVA = "0x4C13318", Offset = "0x4C13318", VA = "0x4C13318", Slot = "11")]
	public void Disable()
	{
	}
}
[Token(Token = "0x2000072")]
public class SuccessHitObjectPlacer : MonoBehaviour
{
	[Token(Token = "0x400024F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform endLineObject;

	[Token(Token = "0x4000250")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private LayerMask layerMask;

	[Token(Token = "0x4000251")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private LineRenderer _lineRenderer;

	[Token(Token = "0x4000252")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 baseLength;

	[Token(Token = "0x60002B3")]
	[Address(RVA = "0x1741E18", Offset = "0x1741E18", VA = "0x1741E18")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002B4")]
	[Address(RVA = "0x1742420", Offset = "0x1742420", VA = "0x1742420")]
	private void Update()
	{
	}

	[Token(Token = "0x60002B5")]
	[Address(RVA = "0x1743D88", Offset = "0x1743D88", VA = "0x1743D88")]
	private void Reset()
	{
	}

	[Token(Token = "0x60002B6")]
	[Address(RVA = "0x17445AC", Offset = "0x17445AC", VA = "0x17445AC")]
	public SuccessHitObjectPlacer()
	{
	}
}
[Token(Token = "0x2000073")]
public class GameSceneLoader : MonoBehaviour
{
	[Token(Token = "0x2000189")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCF9A80", Offset = "0xCF9A80")]
	private sealed class <LoadAsync>d__21 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40007A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40007A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40007A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AssetReference environmentScene;

		[Token(Token = "0x40007A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AssetReference levelScene;

		[Token(Token = "0x40007A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameSceneLoader <>4__this;

		[Token(Token = "0x40007A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private LoadSceneMode <loadMode>5__1;

		[Token(Token = "0x40007AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private object <wait>5__2;

		[Token(Token = "0x40007AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private AsyncOperationHandle<SceneInstance> <sceneUnload>5__3;

		[Token(Token = "0x40007AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private AsyncOperationHandle<SceneInstance> <loadedHandle>5__4;

		[Token(Token = "0x40007AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private AsyncOperationHandle<SceneInstance> <handle>5__5;

		[Token(Token = "0x17000156")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C18")]
			[Address(RVA = "0x194AA9C", Offset = "0x194AA9C", VA = "0x194AA9C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000157")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C1A")]
			[Address(RVA = "0x194AC68", Offset = "0x194AC68", VA = "0x194AC68", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C15")]
		[Address(RVA = "0x19471E8", Offset = "0x19471E8", VA = "0x19471E8")]
		[DebuggerHidden]
		public <LoadAsync>d__21(int <>1__state)
		{
		}

		[Token(Token = "0x6000C16")]
		[Address(RVA = "0x19476E0", Offset = "0x19476E0", VA = "0x19476E0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C17")]
		[Address(RVA = "0x19477C0", Offset = "0x19477C0", VA = "0x19477C0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C19")]
		[Address(RVA = "0x194AB88", Offset = "0x194AB88", VA = "0x194AB88", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000255")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCFB7D4", Offset = "0xCFB7D4")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xCFB7D4", Offset = "0xCFB7D4")]
	private static bool <IsLoading>k__BackingField;

	[Token(Token = "0x4000256")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AssetReference defaultEnvironmentScene;

	[Token(Token = "0x4000257")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AssetReference defaultLevelScene;

	[Token(Token = "0x4000258")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float fadeInTime;

	[Token(Token = "0x4000259")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float fadeOutTime;

	[Token(Token = "0x400025A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool disableEnvironment;

	[Token(Token = "0x400025B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Coroutine loadingCoroutine;

	[Token(Token = "0x400025C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private AssetReference currentEnvironment;

	[Token(Token = "0x400025D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private AsyncOperationHandle<SceneInstance> envHandle;

	[Token(Token = "0x400025E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private AsyncOperationHandle<SceneInstance> lvlHandle;

	[Token(Token = "0x1700004C")]
	public static bool IsLoading
	{
		[Token(Token = "0x60002BB")]
		[Address(RVA = "0x1945FD8", Offset = "0x1945FD8", VA = "0x1945FD8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0174C", Offset = "0xD0174C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60002BC")]
		[Address(RVA = "0x1946198", Offset = "0x1946198", VA = "0x1946198")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0175C", Offset = "0xD0175C")]
		private set
		{
		}
	}

	[Token(Token = "0x14000010")]
	public static event Action LevelLoadStart
	{
		[Token(Token = "0x60002B7")]
		[Address(RVA = "0x1945B6C", Offset = "0x1945B6C", VA = "0x1945B6C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0170C", Offset = "0xD0170C")]
		add
		{
		}
		[Token(Token = "0x60002B8")]
		[Address(RVA = "0x1945CE4", Offset = "0x1945CE4", VA = "0x1945CE4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0171C", Offset = "0xD0171C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000011")]
	public static event Action LevelLoaded
	{
		[Token(Token = "0x60002B9")]
		[Address(RVA = "0x1903148", Offset = "0x1903148", VA = "0x1903148")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0172C", Offset = "0xD0172C")]
		add
		{
		}
		[Token(Token = "0x60002BA")]
		[Address(RVA = "0x1945E5C", Offset = "0x1945E5C", VA = "0x1945E5C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0173C", Offset = "0xD0173C")]
		remove
		{
		}
	}

	[Token(Token = "0x60002BD")]
	[Address(RVA = "0x1946364", Offset = "0x1946364", VA = "0x1946364")]
	private void Start()
	{
	}

	[Token(Token = "0x60002BE")]
	[Address(RVA = "0x1946634", Offset = "0x1946634", VA = "0x1946634")]
	public void Load(AssetReference environment, AssetReference level)
	{
	}

	[Token(Token = "0x60002BF")]
	[Address(RVA = "0x19470B8", Offset = "0x19470B8", VA = "0x19470B8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD0176C", Offset = "0xD0176C")]
	private IEnumerator LoadAsync([CanBeNull] AssetReference environmentScene, [CanBeNull] AssetReference levelScene)
	{
		return null;
	}

	[Token(Token = "0x60002C0")]
	[Address(RVA = "0x19472E8", Offset = "0x19472E8", VA = "0x19472E8")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xD017D0", Offset = "0xD017D0")]
	private void Log(string message)
	{
	}

	[Token(Token = "0x60002C1")]
	[Address(RVA = "0x19475F0", Offset = "0x19475F0", VA = "0x19475F0")]
	public GameSceneLoader()
	{
	}
}
[Token(Token = "0x2000074")]
public class UiChapterDLC : MonoBehaviour
{
	[Token(Token = "0x400025F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject missingContentView;

	[Token(Token = "0x4000260")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject noLicenseView;

	[Token(Token = "0x4000261")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject notInstalledView;

	[Token(Token = "0x4000262")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject downloadView;

	[Token(Token = "0x4000263")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Text downloadText;

	[Token(Token = "0x4000264")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private uint dlcId;

	[Token(Token = "0x60002C2")]
	[Address(RVA = "0x176C334", Offset = "0x176C334", VA = "0x176C334")]
	public void Setup(ChapterManager.Chapter chapter)
	{
	}

	[Token(Token = "0x60002C3")]
	[Address(RVA = "0x176CCE0", Offset = "0x176CCE0", VA = "0x176CCE0")]
	private void Start()
	{
	}

	[Token(Token = "0x60002C4")]
	[Address(RVA = "0x176CFD0", Offset = "0x176CFD0", VA = "0x176CFD0")]
	private void Update()
	{
	}

	[Token(Token = "0x60002C5")]
	[Address(RVA = "0x176D4A4", Offset = "0x176D4A4", VA = "0x176D4A4")]
	private void RefreshDownloadState()
	{
	}

	[Token(Token = "0x60002C6")]
	[Address(RVA = "0x176DA58", Offset = "0x176DA58", VA = "0x176DA58")]
	public void OnBuyClick()
	{
	}

	[Token(Token = "0x60002C7")]
	[Address(RVA = "0x176DD3C", Offset = "0x176DD3C", VA = "0x176DD3C")]
	public void OnInstallClick()
	{
	}

	[Token(Token = "0x60002C8")]
	[Address(RVA = "0x176E108", Offset = "0x176E108", VA = "0x176E108")]
	public UiChapterDLC()
	{
	}
}
[Token(Token = "0x2000075")]
internal class DevZoomaContentProvider : IZoomaContentProvider
{
	[Token(Token = "0x14000012")]
	public event Action ContentStateChanged
	{
		[Token(Token = "0x60002CF")]
		[Address(RVA = "0x14F5450", Offset = "0x14F5450", VA = "0x14F5450", Slot = "10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD01808", Offset = "0xD01808")]
		add
		{
		}
		[Token(Token = "0x60002D0")]
		[Address(RVA = "0x14F55B8", Offset = "0x14F55B8", VA = "0x14F55B8", Slot = "11")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD01818", Offset = "0xD01818")]
		remove
		{
		}
	}

	[Token(Token = "0x60002C9")]
	[Address(RVA = "0x14F4320", Offset = "0x14F4320", VA = "0x14F4320", Slot = "4")]
	public bool HasDLCLicense(uint id)
	{
		return default(bool);
	}

	[Token(Token = "0x60002CA")]
	[Address(RVA = "0x14F459C", Offset = "0x14F459C", VA = "0x14F459C", Slot = "5")]
	public bool IsDLCInstalled(uint id)
	{
		return default(bool);
	}

	[Token(Token = "0x60002CB")]
	[Address(RVA = "0x14F4810", Offset = "0x14F4810", VA = "0x14F4810", Slot = "6")]
	public void InstallDLC(uint id)
	{
	}

	[Token(Token = "0x60002CC")]
	[Address(RVA = "0x14F4BB8", Offset = "0x14F4BB8", VA = "0x14F4BB8", Slot = "7")]
	public bool IsDLCDownloading(uint id)
	{
		return default(bool);
	}

	[Token(Token = "0x60002CD")]
	[Address(RVA = "0x14F4E30", Offset = "0x14F4E30", VA = "0x14F4E30", Slot = "8")]
	public float GetDLCDownloadProgress(uint id)
	{
		return default(float);
	}

	[Token(Token = "0x60002CE")]
	[Address(RVA = "0x14F50A8", Offset = "0x14F50A8", VA = "0x14F50A8", Slot = "9")]
	public void ShowDLCStoreOverlay(uint id)
	{
	}

	[Token(Token = "0x60002D1")]
	[Address(RVA = "0x14F5720", Offset = "0x14F5720", VA = "0x14F5720")]
	public DevZoomaContentProvider()
	{
	}
}
[Token(Token = "0x2000076")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xCF88DC", Offset = "0xCF88DC")]
public class LocalazableTextMesh : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200018A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCF9A90", Offset = "0xCF9A90")]
	private sealed class <>c
	{
		[Token(Token = "0x40007AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40007AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action <>9__14_0;

		[Token(Token = "0x6000C1C")]
		[Address(RVA = "0x21789C0", Offset = "0x21789C0", VA = "0x21789C0")]
		public <>c()
		{
		}

		[Token(Token = "0x6000C1D")]
		[Address(RVA = "0x2178AB0", Offset = "0x2178AB0", VA = "0x2178AB0")]
		internal void <.ctor>b__14_0()
		{
		}
	}

	[Token(Token = "0x4000266")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Action OnContentUpdate;

	[Token(Token = "0x4000267")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private TextMesh _targetText;

	[Token(Token = "0x4000268")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	protected string key;

	[Token(Token = "0x4000269")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	protected string format;

	[Token(Token = "0x400026A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	protected bool bBold;

	[Token(Token = "0x400026B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private object[] currArgs;

	[Token(Token = "0x60002D2")]
	[Address(RVA = "0x2175038", Offset = "0x2175038", VA = "0x2175038")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002D3")]
	[Address(RVA = "0x2175324", Offset = "0x2175324", VA = "0x2175324")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60002D4")]
	[Address(RVA = "0x21758D0", Offset = "0x21758D0", VA = "0x21758D0")]
	private void UpdateLocalization()
	{
	}

	[Token(Token = "0x60002D5")]
	[Address(RVA = "0x2177180", Offset = "0x2177180", VA = "0x2177180")]
	public void SetKey(string newKey)
	{
	}

	[Token(Token = "0x60002D6")]
	[Address(RVA = "0x21776A4", Offset = "0x21776A4", VA = "0x21776A4")]
	public void SetFormat(string newFormat)
	{
	}

	[Token(Token = "0x60002D7")]
	[Address(RVA = "0x2177BC8", Offset = "0x2177BC8", VA = "0x2177BC8")]
	public void SetArgs(params object[] args)
	{
	}

	[Token(Token = "0x60002D8")]
	[Address(RVA = "0x21762EC", Offset = "0x21762EC", VA = "0x21762EC")]
	private void UpdateFormatWithArgs()
	{
	}

	[Token(Token = "0x60002D9")]
	[Address(RVA = "0x2178098", Offset = "0x2178098", VA = "0x2178098")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60002DA")]
	[Address(RVA = "0x217857C", Offset = "0x217857C", VA = "0x217857C")]
	public LocalazableTextMesh()
	{
	}
}
[Token(Token = "0x2000077")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xCF8940", Offset = "0xCF8940")]
public class LocalazableUIText : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200018B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCF9AA0", Offset = "0xCF9AA0")]
	private sealed class <>c
	{
		[Token(Token = "0x40007B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40007B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action <>9__14_0;

		[Token(Token = "0x6000C1F")]
		[Address(RVA = "0x217BEF4", Offset = "0x217BEF4", VA = "0x217BEF4")]
		public <>c()
		{
		}

		[Token(Token = "0x6000C20")]
		[Address(RVA = "0x217BFE4", Offset = "0x217BFE4", VA = "0x217BFE4")]
		internal void <.ctor>b__14_0()
		{
		}
	}

	[Token(Token = "0x400026C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Action OnContentUpdate;

	[Token(Token = "0x400026D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Text _targetText;

	[Token(Token = "0x400026E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	protected string key;

	[Token(Token = "0x400026F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	protected string format;

	[Token(Token = "0x4000270")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	protected bool bBold;

	[Token(Token = "0x4000271")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private object[] currArgs;

	[Token(Token = "0x60002DB")]
	[Address(RVA = "0x2178CC0", Offset = "0x2178CC0", VA = "0x2178CC0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002DC")]
	[Address(RVA = "0x2178FAC", Offset = "0x2178FAC", VA = "0x2178FAC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60002DD")]
	[Address(RVA = "0x21793DC", Offset = "0x21793DC", VA = "0x21793DC")]
	private void UpdateLocalization()
	{
	}

	[Token(Token = "0x60002DE")]
	[Address(RVA = "0x217A9BC", Offset = "0x217A9BC", VA = "0x217A9BC")]
	public void SetKey(string newKey)
	{
	}

	[Token(Token = "0x60002DF")]
	[Address(RVA = "0x217AEE0", Offset = "0x217AEE0", VA = "0x217AEE0")]
	public void SetFormat(string newFormat)
	{
	}

	[Token(Token = "0x60002E0")]
	[Address(RVA = "0x217B404", Offset = "0x217B404", VA = "0x217B404")]
	public void SetArgs(params object[] args)
	{
	}

	[Token(Token = "0x60002E1")]
	[Address(RVA = "0x217A1B0", Offset = "0x217A1B0", VA = "0x217A1B0")]
	private void UpdateFormatWithArgs()
	{
	}

	[Token(Token = "0x60002E2")]
	[Address(RVA = "0x217B748", Offset = "0x217B748", VA = "0x217B748")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60002E3")]
	[Address(RVA = "0x217BAB0", Offset = "0x217BAB0", VA = "0x217BAB0")]
	public LocalazableUIText()
	{
	}
}
[Token(Token = "0x2000078")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCF89A4", Offset = "0xCF89A4")]
public class Localization : ScriptableObject
{
	[Token(Token = "0x4000272")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SystemLanguage systemLanguage;

	[Token(Token = "0x4000273")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string localeName;

	[Token(Token = "0x4000274")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Font fontOverride;

	[Token(Token = "0x4000275")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Font boldFontOverride;

	[Token(Token = "0x4000276")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string[] items;

	[Token(Token = "0x60002E4")]
	[Address(RVA = "0x217C1F4", Offset = "0x217C1F4", VA = "0x217C1F4")]
	public string GetLanguageString()
	{
		return null;
	}

	[Token(Token = "0x60002E5")]
	[Address(RVA = "0x217C51C", Offset = "0x217C51C", VA = "0x217C51C")]
	public Localization()
	{
	}
}
[Token(Token = "0x2000079")]
public static class Lc
{
	[Token(Token = "0x60002E6")]
	[Address(RVA = "0x19536A4", Offset = "0x19536A4", VA = "0x19536A4")]
	public static string Tr(string str)
	{
		return null;
	}
}
[Token(Token = "0x200007A")]
public static class LocalizationController
{
	[Serializable]
	[Token(Token = "0x200018C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCF9AB0", Offset = "0xCF9AB0")]
	private sealed class <>c
	{
		[Token(Token = "0x40007B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40007B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<Localization, bool> <>9__10_0;

		[Token(Token = "0x40007B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Func<Localization, bool> <>9__11_1;

		[Token(Token = "0x6000C22")]
		[Address(RVA = "0x2185E1C", Offset = "0x2185E1C", VA = "0x2185E1C")]
		public <>c()
		{
		}

		[Token(Token = "0x6000C23")]
		[Address(RVA = "0x2185F0C", Offset = "0x2185F0C", VA = "0x2185F0C")]
		internal bool <Initialize>b__10_0(Localization l)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C24")]
		[Address(RVA = "0x21860E8", Offset = "0x21860E8", VA = "0x21860E8")]
		internal bool <DetectSystemLanguage>b__11_1(Localization localization)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x200018D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCF9AC0", Offset = "0xCF9AC0")]
	private sealed class <>c__DisplayClass11_0
	{
		[Token(Token = "0x40007B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SystemLanguage systemLanguage;

		[Token(Token = "0x6000C25")]
		[Address(RVA = "0x2181880", Offset = "0x2181880", VA = "0x2181880")]
		public <>c__DisplayClass11_0()
		{
		}

		[Token(Token = "0x6000C26")]
		[Address(RVA = "0x21862C4", Offset = "0x21862C4", VA = "0x21862C4")]
		internal bool <DetectSystemLanguage>b__0(Localization t)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x200018E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCF9AD0", Offset = "0xCF9AD0")]
	private sealed class <>c__DisplayClass21_0
	{
		[Token(Token = "0x40007B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SystemLanguage language;

		[Token(Token = "0x6000C27")]
		[Address(RVA = "0x21838B0", Offset = "0x21838B0", VA = "0x21838B0")]
		public <>c__DisplayClass21_0()
		{
		}

		[Token(Token = "0x6000C28")]
		[Address(RVA = "0x21864B4", Offset = "0x21864B4", VA = "0x21864B4")]
		internal bool <GetLocalizationBySystemLanguage>b__0(Localization x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000277")]
	private const string LANGUAGE_NAME_KEY = "lang_name";

	[Token(Token = "0x4000278")]
	private const bool SHOW_KEYS = false;

	[Token(Token = "0x4000279")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Localization[] _localizations;

	[Token(Token = "0x400027A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Localization currentLocalization;

	[Token(Token = "0x1700004D")]
	public static Localization[] localizations
	{
		[Token(Token = "0x60002E7")]
		[Address(RVA = "0x217C60C", Offset = "0x217C60C", VA = "0x217C60C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60002E8")]
		[Address(RVA = "0x217C868", Offset = "0x217C868", VA = "0x217C868")]
		set
		{
		}
	}

	[Token(Token = "0x14000013")]
	public static event Action onOnLocalizationLoad
	{
		[Token(Token = "0x60002E9")]
		[Address(RVA = "0x2175754", Offset = "0x2175754", VA = "0x2175754")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD01828", Offset = "0xD01828")]
		add
		{
		}
		[Token(Token = "0x60002EA")]
		[Address(RVA = "0x2178400", Offset = "0x2178400", VA = "0x2178400")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD01838", Offset = "0xD01838")]
		remove
		{
		}
	}

	[Token(Token = "0x60002EB")]
	[Address(RVA = "0x217CA30", Offset = "0x217CA30", VA = "0x217CA30")]
	[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0xD01848", Offset = "0xD01848")]
	private static void Initialize()
	{
	}

	[Token(Token = "0x60002EC")]
	[Address(RVA = "0x217F54C", Offset = "0x217F54C", VA = "0x217F54C")]
	private static Localization DetectSystemLanguage()
	{
		return null;
	}

	[Token(Token = "0x60002ED")]
	[Address(RVA = "0x217EFA4", Offset = "0x217EFA4", VA = "0x217EFA4")]
	private static bool IsFirstRun()
	{
		return default(bool);
	}

	[Token(Token = "0x60002EE")]
	[Address(RVA = "0x2181970", Offset = "0x2181970", VA = "0x2181970")]
	private static void SaveLocaleChoose()
	{
	}

	[Token(Token = "0x60002EF")]
	[Address(RVA = "0x2180C24", Offset = "0x2180C24", VA = "0x2180C24")]
	private static SystemLanguage LoadLocaleChoose()
	{
		return default(SystemLanguage);
	}

	[Token(Token = "0x60002F0")]
	[Address(RVA = "0x2181C70", Offset = "0x2181C70", VA = "0x2181C70")]
	public static void LoadNextLocalization()
	{
	}

	[Token(Token = "0x60002F1")]
	[Address(RVA = "0x218231C", Offset = "0x218231C", VA = "0x218231C")]
	private static int GetLocalizationIndex(Localization locale)
	{
		return default(int);
	}

	[Token(Token = "0x60002F2")]
	[Address(RVA = "0x2180F00", Offset = "0x2180F00", VA = "0x2180F00")]
	public static bool LoadLocalization(SystemLanguage Language)
	{
		return default(bool);
	}

	[Token(Token = "0x60002F3")]
	[Address(RVA = "0x2180274", Offset = "0x2180274", VA = "0x2180274")]
	private static void LoadLocalization(Localization locale)
	{
	}

	[Token(Token = "0x60002F4")]
	[Address(RVA = "0x2182B68", Offset = "0x2182B68", VA = "0x2182B68")]
	private static int GetIntKey(string key)
	{
		return default(int);
	}

	[Token(Token = "0x60002F5")]
	[Address(RVA = "0x217ECD8", Offset = "0x217ECD8", VA = "0x217ECD8")]
	public static Localization GetLocalizationKeys()
	{
		return null;
	}

	[Token(Token = "0x60002F6")]
	[Address(RVA = "0x21833A4", Offset = "0x21833A4", VA = "0x21833A4")]
	public static Localization GetLocalizationBySystemLanguage(SystemLanguage language)
	{
		return null;
	}

	[Token(Token = "0x60002F7")]
	[Address(RVA = "0x21839A0", Offset = "0x21839A0", VA = "0x21839A0")]
	public static string Translate(string key)
	{
		return null;
	}

	[Token(Token = "0x60002F8")]
	[Address(RVA = "0x2183C90", Offset = "0x2183C90", VA = "0x2183C90")]
	public static string Translate(Localization localization, string key)
	{
		return null;
	}

	[Token(Token = "0x60002F9")]
	[Address(RVA = "0x2176850", Offset = "0x2176850", VA = "0x2176850")]
	public static Font GetFont(bool bold = false)
	{
		return null;
	}

	[Token(Token = "0x60002FA")]
	[Address(RVA = "0x21847A0", Offset = "0x21847A0", VA = "0x21847A0")]
	public static Dictionary<string, string> GetLanguages()
	{
		return null;
	}

	[Token(Token = "0x60002FB")]
	[Address(RVA = "0x2185740", Offset = "0x2185740", VA = "0x2185740")]
	public static string GetLanguageName(Localization localization)
	{
		return null;
	}

	[Token(Token = "0x60002FC")]
	[Address(RVA = "0x2185A28", Offset = "0x2185A28", VA = "0x2185A28")]
	public static string GetCurrentLanguageReadableName()
	{
		return null;
	}
}
[Token(Token = "0x200007B")]
public class LookAt : MonoBehaviour
{
	[Token(Token = "0x400027C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform _target;

	[Token(Token = "0x400027D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool lookAtTarget;

	[Token(Token = "0x60002FD")]
	[Address(RVA = "0x21866A4", Offset = "0x21866A4", VA = "0x21866A4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60002FE")]
	[Address(RVA = "0x2186DF0", Offset = "0x2186DF0", VA = "0x2186DF0")]
	private void Update()
	{
	}

	[Token(Token = "0x60002FF")]
	[Address(RVA = "0x218697C", Offset = "0x218697C", VA = "0x218697C")]
	private void UpdateTarget()
	{
	}

	[Token(Token = "0x6000300")]
	[Address(RVA = "0x21872C4", Offset = "0x21872C4", VA = "0x21872C4")]
	public LookAt()
	{
	}
}
[Token(Token = "0x200007C")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xCF8A14", Offset = "0xCF8A14")]
public class FadeColor : MonoBehaviour
{
	[Token(Token = "0x400027E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Renderer rend;

	[Token(Token = "0x400027F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float fadeTime;

	[Token(Token = "0x4000280")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private string colorParamName;

	[Token(Token = "0x4000281")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Color originalColor;

	[Token(Token = "0x6000301")]
	[Address(RVA = "0x3428F20", Offset = "0x3428F20", VA = "0x3428F20")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000302")]
	[Address(RVA = "0x34295EC", Offset = "0x34295EC", VA = "0x34295EC")]
	public void FadeIn()
	{
	}

	[Token(Token = "0x6000303")]
	[Address(RVA = "0x3429AC0", Offset = "0x3429AC0", VA = "0x3429AC0")]
	public void FadeOut()
	{
	}

	[Token(Token = "0x6000304")]
	[Address(RVA = "0x342A064", Offset = "0x342A064", VA = "0x342A064")]
	public FadeColor()
	{
	}
}
[Token(Token = "0x200007D")]
public class MoveUV : MonoBehaviour
{
	[Token(Token = "0x4000282")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float scrollSpeed;

	[Token(Token = "0x4000283")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float scrollSpeedY;

	[Token(Token = "0x4000284")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private string textureParamName;

	[Token(Token = "0x4000285")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Renderer rend;

	[Token(Token = "0x4000286")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector2 originalOffset;

	[Token(Token = "0x6000305")]
	[Address(RVA = "0x2189B9C", Offset = "0x2189B9C", VA = "0x2189B9C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000306")]
	[Address(RVA = "0x218A800", Offset = "0x218A800", VA = "0x218A800")]
	private void Update()
	{
	}

	[Token(Token = "0x6000307")]
	[Address(RVA = "0x218B378", Offset = "0x218B378", VA = "0x218B378")]
	public MoveUV()
	{
	}
}
[Token(Token = "0x200007E")]
public class MovingObject : MonoBehaviour
{
	[Token(Token = "0x4000287")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform endPointTransf;

	[Token(Token = "0x4000288")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float speed;

	[Token(Token = "0x4000289")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 startPos;

	[Token(Token = "0x400028A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 endPos;

	[Token(Token = "0x400028B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float unclampedPos;

	[Token(Token = "0x6000308")]
	[Address(RVA = "0x218B678", Offset = "0x218B678", VA = "0x218B678")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000309")]
	[Address(RVA = "0x218BAF4", Offset = "0x218BAF4", VA = "0x218BAF4")]
	private void Update()
	{
	}

	[Token(Token = "0x600030A")]
	[Address(RVA = "0x218C150", Offset = "0x218C150", VA = "0x218C150")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x600030B")]
	[Address(RVA = "0x218C810", Offset = "0x218C810", VA = "0x218C810")]
	public MovingObject()
	{
	}
}
[Serializable]
[Token(Token = "0x200007F")]
public struct BallColorBasedColor
{
	[Token(Token = "0x400028C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public BallConfig ballConfig;

	[Token(Token = "0x400028D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Color color;
}
[Token(Token = "0x2000080")]
public class ParticleColorSetter : MonoBehaviour
{
	[Token(Token = "0x400028E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ParticleSystem _particleSystem;

	[Token(Token = "0x400028F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Color _currColor;

	[Token(Token = "0x4000290")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private BallColorBasedColor[] BallColorBasedColors;

	[Token(Token = "0x4000291")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Color blackColor;

	[Token(Token = "0x600030C")]
	[Address(RVA = "0x19FC628", Offset = "0x19FC628", VA = "0x19FC628")]
	private void Awake()
	{
	}

	[Token(Token = "0x600030D")]
	[Address(RVA = "0x19FDECC", Offset = "0x19FDECC", VA = "0x19FDECC")]
	private void Update()
	{
	}

	[Token(Token = "0x600030E")]
	[Address(RVA = "0x19FD9DC", Offset = "0x19FD9DC", VA = "0x19FD9DC")]
	private void UpdateColor(Color color)
	{
	}

	[Token(Token = "0x600030F")]
	[Address(RVA = "0x19FCB2C", Offset = "0x19FCB2C", VA = "0x19FCB2C")]
	private Color GetColorByBallConfig(BallConfig ballConfig)
	{
		return default(Color);
	}

	[Token(Token = "0x6000310")]
	[Address(RVA = "0x19FE544", Offset = "0x19FE544", VA = "0x19FE544")]
	public ParticleColorSetter()
	{
	}
}
[Token(Token = "0x2000081")]
public class ParticleSystemPooler : MonoBehaviour
{
	[Token(Token = "0x6000311")]
	[Address(RVA = "0x19FE884", Offset = "0x19FE884", VA = "0x19FE884")]
	public void OnParticleSystemStopped()
	{
	}

	[Token(Token = "0x6000312")]
	[Address(RVA = "0x19FEBD0", Offset = "0x19FEBD0", VA = "0x19FEBD0")]
	public ParticleSystemPooler()
	{
	}
}
[Token(Token = "0x2000082")]
public class Projectile : MonoBehaviour
{
	[Token(Token = "0x4000292")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float Speed;

	[Token(Token = "0x4000293")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float LifeTime;

	[Token(Token = "0x4000294")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject ExplosionPrefab;

	[Token(Token = "0x4000295")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float currLifetime;

	[Token(Token = "0x6000313")]
	[Address(RVA = "0x1A12498", Offset = "0x1A12498", VA = "0x1A12498")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000314")]
	[Address(RVA = "0x1A12708", Offset = "0x1A12708", VA = "0x1A12708")]
	private void Update()
	{
	}

	[Token(Token = "0x6000315")]
	[Address(RVA = "0x1A13294", Offset = "0x1A13294", VA = "0x1A13294")]
	private void Detonate()
	{
	}

	[Token(Token = "0x6000316")]
	[Address(RVA = "0x1A13850", Offset = "0x1A13850", VA = "0x1A13850")]
	public Projectile()
	{
	}
}
[Token(Token = "0x2000083")]
public class RandomEnabler : MonoBehaviour
{
	[Token(Token = "0x4000296")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float enableChance;

	[Token(Token = "0x6000317")]
	[Address(RVA = "0x1A13AE8", Offset = "0x1A13AE8", VA = "0x1A13AE8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000318")]
	[Address(RVA = "0x1A13ED4", Offset = "0x1A13ED4", VA = "0x1A13ED4")]
	public RandomEnabler()
	{
	}
}
[Token(Token = "0x2000084")]
public class ScoreManager : MonoBehaviour
{
	[Token(Token = "0x4000298")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static ScoreManager Instance;

	[Token(Token = "0x4000299")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ObjectPoolEntry TextPrefab;

	[Token(Token = "0x400029A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Gradient colorGradient;

	[Token(Token = "0x400029C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static float _starsProgress;

	[Token(Token = "0x400029D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	public Gradient comboGradient;

	[Token(Token = "0x400029E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCFBA60", Offset = "0xCFBA60")]
	private float threeColorsScoresCoeff;

	[Token(Token = "0x400029F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private static float threeColorsScoresCoeffStatic;

	[Token(Token = "0x40002A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCFBAA0", Offset = "0xCFBAA0")]
	private float fourColorsScoresCoeff;

	[Token(Token = "0x40002A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static float fourColorsScoresCoeffStatic;

	[Token(Token = "0x40002A2")]
	private const int BASE_SCORE_PER_BALL = 100;

	[Token(Token = "0x40002A3")]
	private const int BASE_SCORE_PER_FINAL_BALL = 1000;

	[Token(Token = "0x40002A4")]
	private const int BASE_LINE_ADD_SCORE = 10;

	[Token(Token = "0x40002A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private static int _levelScores;

	[Token(Token = "0x40002A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static float starsScoresMultiplier;

	[Token(Token = "0x1700004E")]
	public static float starsProgress
	{
		[Token(Token = "0x600031D")]
		[Address(RVA = "0x1A1AADC", Offset = "0x1A1AADC", VA = "0x1A1AADC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600031E")]
		[Address(RVA = "0x1A1AD6C", Offset = "0x1A1AD6C", VA = "0x1A1AD6C")]
		set
		{
		}
	}

	[Token(Token = "0x1700004F")]
	public static int levelScores
	{
		[Token(Token = "0x600031F")]
		[Address(RVA = "0x1A1B384", Offset = "0x1A1B384", VA = "0x1A1B384")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000320")]
		[Address(RVA = "0x1A1B604", Offset = "0x1A1B604", VA = "0x1A1B604")]
		set
		{
		}
	}

	[Token(Token = "0x14000014")]
	public static event Action<int> levelScoresUpdated
	{
		[Token(Token = "0x6000319")]
		[Address(RVA = "0x1A1A414", Offset = "0x1A1A414", VA = "0x1A1A414")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0185C", Offset = "0xD0185C")]
		add
		{
		}
		[Token(Token = "0x600031A")]
		[Address(RVA = "0x1A1A5C4", Offset = "0x1A1A5C4", VA = "0x1A1A5C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0186C", Offset = "0xD0186C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000015")]
	public static event Action<float> onStarsProgressUpdated
	{
		[Token(Token = "0x600031B")]
		[Address(RVA = "0x1A1A774", Offset = "0x1A1A774", VA = "0x1A1A774")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0187C", Offset = "0xD0187C")]
		add
		{
		}
		[Token(Token = "0x600031C")]
		[Address(RVA = "0x1A1A928", Offset = "0x1A1A928", VA = "0x1A1A928")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0188C", Offset = "0xD0188C")]
		remove
		{
		}
	}

	[Token(Token = "0x6000321")]
	[Address(RVA = "0x1A1B9A8", Offset = "0x1A1B9A8", VA = "0x1A1B9A8")]
	public static int GetStarsCountFromTotalBalls()
	{
		return default(int);
	}

	[Token(Token = "0x6000322")]
	[Address(RVA = "0x1A1D090", Offset = "0x1A1D090", VA = "0x1A1D090")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000323")]
	[Address(RVA = "0x1A1D7CC", Offset = "0x1A1D7CC", VA = "0x1A1D7CC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000324")]
	[Address(RVA = "0x1A1C2E0", Offset = "0x1A1C2E0", VA = "0x1A1C2E0")]
	public static float GetStarsProgressByScore()
	{
		return default(float);
	}

	[Token(Token = "0x6000325")]
	[Address(RVA = "0x1A1DCB8", Offset = "0x1A1DCB8", VA = "0x1A1DCB8")]
	private void OnGameStateChanged(GameState prevGameState, GameState newGameState)
	{
	}

	[Token(Token = "0x6000326")]
	[Address(RVA = "0x1A1E338", Offset = "0x1A1E338", VA = "0x1A1E338")]
	private void BallsLineDestroyed(Vector3[] balls, BallConfig[] BallConfigs, int comboCounter, bool finalBall)
	{
	}

	[Token(Token = "0x6000327")]
	[Address(RVA = "0x1A19D6C", Offset = "0x1A19D6C", VA = "0x1A19D6C")]
	public void AddScores(int scores)
	{
	}

	[Token(Token = "0x6000328")]
	[Address(RVA = "0x1A1E754", Offset = "0x1A1E754", VA = "0x1A1E754")]
	private int AddScores(Vector3[] balls, int comboCounter, bool finalBall)
	{
		return default(int);
	}

	[Token(Token = "0x6000329")]
	[Address(RVA = "0x1A21170", Offset = "0x1A21170", VA = "0x1A21170")]
	public ScoreManager()
	{
	}
}
[Token(Token = "0x2000085")]
public class SkillBase : MonoBehaviour
{
	[Token(Token = "0x600032B")]
	[Address(RVA = "0x1A2C510", Offset = "0x1A2C510", VA = "0x1A2C510")]
	private void Update()
	{
	}

	[Token(Token = "0x600032C")]
	[Address(RVA = "0x1A2C9C4", Offset = "0x1A2C9C4", VA = "0x1A2C9C4")]
	private bool IsActionSetComplited()
	{
		return default(bool);
	}

	[Token(Token = "0x600032D")]
	[Address(RVA = "0x1A2CC34", Offset = "0x1A2CC34", VA = "0x1A2CC34", Slot = "4")]
	protected virtual void OnSkillActivated()
	{
	}

	[Token(Token = "0x600032E")]
	[Address(RVA = "0x1A2CE44", Offset = "0x1A2CE44", VA = "0x1A2CE44")]
	public SkillBase()
	{
	}
}
[Token(Token = "0x2000086")]
internal class TriggerActionBase
{
	[Token(Token = "0x40002A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool Complited;

	[Token(Token = "0x600032F")]
	[Address(RVA = "0x1752B5C", Offset = "0x1752B5C", VA = "0x1752B5C", Slot = "4")]
	protected virtual void TriggerAction()
	{
	}

	[Token(Token = "0x6000330")]
	[Address(RVA = "0x1752D6C", Offset = "0x1752D6C", VA = "0x1752D6C")]
	public TriggerActionBase()
	{
	}
}
[Token(Token = "0x2000087")]
public enum SpawnPointType
{
	[Token(Token = "0x40002A9")]
	Player,
	[Token(Token = "0x40002AA")]
	Enemy
}
[Token(Token = "0x2000088")]
public static class SpawnPointsManager
{
	[Token(Token = "0x6000331")]
	[Address(RVA = "0x1A2DBA4", Offset = "0x1A2DBA4", VA = "0x1A2DBA4")]
	public static Transform GetSpawnPointForTypeByIndex(SpawnPoint[] spawnPoints, int spawnPointIndex, SpawnPointType spawnPointType)
	{
		return null;
	}
}
[Token(Token = "0x2000089")]
public class SpawnPoint : MonoBehaviour
{
	[Token(Token = "0x40002AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SpawnPointType spawnPointType;

	[Token(Token = "0x40002AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int index;

	[Token(Token = "0x6000332")]
	[Address(RVA = "0x1A2CF34", Offset = "0x1A2CF34", VA = "0x1A2CF34")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000333")]
	[Address(RVA = "0x1A2DAB4", Offset = "0x1A2DAB4", VA = "0x1A2DAB4")]
	public SpawnPoint()
	{
	}
}
[Token(Token = "0x200008A")]
public class TeleportArcCustom : MonoBehaviour
{
	[Token(Token = "0x40002AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private LineRenderer lineRenderer;

	[Token(Token = "0x40002AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private LineRenderer sublineRenderer;

	[Token(Token = "0x40002AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float scale;

	[Token(Token = "0x40002B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float thickness;

	[Token(Token = "0x6000334")]
	[Address(RVA = "0x17466E4", Offset = "0x17466E4", VA = "0x17466E4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000335")]
	[Address(RVA = "0x17469BC", Offset = "0x17469BC", VA = "0x17469BC")]
	private void CreateLineRendererObjects()
	{
	}

	[Token(Token = "0x6000336")]
	[Address(RVA = "0x174711C", Offset = "0x174711C", VA = "0x174711C")]
	public void Show()
	{
	}

	[Token(Token = "0x6000337")]
	[Address(RVA = "0x17474EC", Offset = "0x17474EC", VA = "0x17474EC")]
	public void Hide()
	{
	}

	[Token(Token = "0x6000338")]
	[Address(RVA = "0x17478B4", Offset = "0x17478B4", VA = "0x17478B4")]
	public void DrawLine(Vector3 startPoint, Vector3 endPoint, Material material)
	{
	}

	[Token(Token = "0x6000339")]
	[Address(RVA = "0x1747DA0", Offset = "0x1747DA0", VA = "0x1747DA0")]
	public void DrawSubLine(Vector3 startPoint, Vector3 endPoint, Material material)
	{
	}

	[Token(Token = "0x600033A")]
	[Address(RVA = "0x174828C", Offset = "0x174828C", VA = "0x174828C")]
	public TeleportArcCustom()
	{
	}
}
[Token(Token = "0x200008B")]
public class TimedDestroy : MonoBehaviour
{
	[Token(Token = "0x40002B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float LifeTime;

	[Token(Token = "0x40002B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private bool _destroyOnGameStateChange;

	[Token(Token = "0x40002B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float _currTime;

	[Token(Token = "0x600033B")]
	[Address(RVA = "0x174A89C", Offset = "0x174A89C", VA = "0x174A89C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600033C")]
	[Address(RVA = "0x174ADA0", Offset = "0x174ADA0", VA = "0x174ADA0")]
	private void OnGameStateChanged(GameState prevGameState, GameState newGameState)
	{
	}

	[Token(Token = "0x600033D")]
	[Address(RVA = "0x174B54C", Offset = "0x174B54C", VA = "0x174B54C")]
	private void Update()
	{
	}

	[Token(Token = "0x600033E")]
	[Address(RVA = "0x174B1FC", Offset = "0x174B1FC", VA = "0x174B1FC")]
	private void Pool()
	{
	}

	[Token(Token = "0x600033F")]
	[Address(RVA = "0x174BA88", Offset = "0x174BA88", VA = "0x174BA88")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000340")]
	[Address(RVA = "0x174BFEC", Offset = "0x174BFEC", VA = "0x174BFEC")]
	public TimedDestroy()
	{
	}
}
[Token(Token = "0x200008C")]
public class ButtonAnimation : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
{
	[Token(Token = "0x200018F")]
	private struct AnimState
	{
		[Token(Token = "0x40007B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float z;

		[Token(Token = "0x40007B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float scale;
	}

	[Token(Token = "0x2000190")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCF9AE0", Offset = "0xCF9AE0")]
	private sealed class <AnimationRoutine>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40007B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40007BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40007BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ButtonAnimation <>4__this;

		[Token(Token = "0x40007BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <animTime>5__1;

		[Token(Token = "0x40007BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <speed>5__2;

		[Token(Token = "0x40007BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <time>5__3;

		[Token(Token = "0x40007BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector3 <pos>5__4;

		[Token(Token = "0x40007C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private AnimState <fromState>5__5;

		[Token(Token = "0x40007C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private AnimState <toState>5__6;

		[Token(Token = "0x40007C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float <scale>5__7;

		[Token(Token = "0x17000158")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C2C")]
			[Address(RVA = "0x13BDD70", Offset = "0x13BDD70", VA = "0x13BDD70", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000159")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C2E")]
			[Address(RVA = "0x13BDF3C", Offset = "0x13BDF3C", VA = "0x13BDF3C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C29")]
		[Address(RVA = "0x13BC798", Offset = "0x13BC798", VA = "0x13BC798")]
		[DebuggerHidden]
		public <AnimationRoutine>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x6000C2A")]
		[Address(RVA = "0x13BCB40", Offset = "0x13BCB40", VA = "0x13BCB40", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C2B")]
		[Address(RVA = "0x13BCC20", Offset = "0x13BCC20", VA = "0x13BCC20", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C2D")]
		[Address(RVA = "0x13BDE5C", Offset = "0x13BDE5C", VA = "0x13BDE5C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40002B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform targetTransform;

	[Token(Token = "0x40002B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Button button;

	[Token(Token = "0x40002B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool isHovered;

	[Token(Token = "0x40002B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Coroutine animCoroutine;

	[Token(Token = "0x40002B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly AnimState defaultState;

	[Token(Token = "0x40002B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private readonly AnimState hoverState;

	[Token(Token = "0x6000341")]
	[Address(RVA = "0x13BB538", Offset = "0x13BB538", VA = "0x13BB538", Slot = "4")]
	public void OnPointerEnter(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000342")]
	[Address(RVA = "0x13BC1AC", Offset = "0x13BC1AC", VA = "0x13BC1AC", Slot = "5")]
	public void OnPointerExit(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000343")]
	[Address(RVA = "0x13BBA08", Offset = "0x13BBA08", VA = "0x13BBA08")]
	public void SetHovered(bool hovered)
	{
	}

	[Token(Token = "0x6000344")]
	[Address(RVA = "0x13BC67C", Offset = "0x13BC67C", VA = "0x13BC67C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD0189C", Offset = "0xD0189C")]
	private IEnumerator AnimationRoutine()
	{
		return null;
	}

	[Token(Token = "0x6000345")]
	[Address(RVA = "0x13BC898", Offset = "0x13BC898", VA = "0x13BC898")]
	public ButtonAnimation()
	{
	}
}
[Token(Token = "0x200008D")]
public class ButtonSound : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
{
	[Token(Token = "0x40002BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Button _button;

	[Token(Token = "0x40002BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Toggle _toggle;

	[Token(Token = "0x40002BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Slider _slider;

	[Token(Token = "0x40002BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Dropdown _dropdown;

	[Token(Token = "0x40002BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool _pointerInside;

	[Token(Token = "0x6000346")]
	[Address(RVA = "0x13BE028", Offset = "0x13BE028", VA = "0x13BE028")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000347")]
	[Address(RVA = "0x13BF58C", Offset = "0x13BF58C", VA = "0x13BF58C")]
	private void PlaySoundForDropDown(int arg0)
	{
	}

	[Token(Token = "0x6000348")]
	[Address(RVA = "0x13BFB68", Offset = "0x13BFB68", VA = "0x13BFB68", Slot = "4")]
	public void OnPointerEnter(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000349")]
	[Address(RVA = "0x13BF870", Offset = "0x13BF870", VA = "0x13BF870")]
	private void PlaySound()
	{
	}

	[Token(Token = "0x600034A")]
	[Address(RVA = "0x13C042C", Offset = "0x13C042C", VA = "0x13C042C")]
	private void PlaySoundForToggle(bool toggleEnabled)
	{
	}

	[Token(Token = "0x600034B")]
	[Address(RVA = "0x13C0894", Offset = "0x13C0894", VA = "0x13C0894")]
	private void PlaySoundForSlider(float value)
	{
	}

	[Token(Token = "0x600034C")]
	[Address(RVA = "0x13C0CEC", Offset = "0x13C0CEC", VA = "0x13C0CEC", Slot = "5")]
	public void OnPointerExit(PointerEventData eventData)
	{
	}

	[Token(Token = "0x600034D")]
	[Address(RVA = "0x13C0F68", Offset = "0x13C0F68", VA = "0x13C0F68")]
	public ButtonSound()
	{
	}
}
[Token(Token = "0x200008E")]
public class CompletePopup : MonoBehaviour
{
	[Token(Token = "0x2000191")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCF9AF0", Offset = "0xCF9AF0")]
	private sealed class <StartAnimation>d__22 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40007C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40007C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40007C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CompletePopup <>4__this;

		[Token(Token = "0x40007C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private LevelProgress <levelProgress>5__1;

		[Token(Token = "0x1700015A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C32")]
			[Address(RVA = "0x13D37E8", Offset = "0x13D37E8", VA = "0x13D37E8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700015B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C34")]
			[Address(RVA = "0x13D39B4", Offset = "0x13D39B4", VA = "0x13D39B4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C2F")]
		[Address(RVA = "0x13CBE3C", Offset = "0x13CBE3C", VA = "0x13CBE3C")]
		[DebuggerHidden]
		public <StartAnimation>d__22(int <>1__state)
		{
		}

		[Token(Token = "0x6000C30")]
		[Address(RVA = "0x13D1AC0", Offset = "0x13D1AC0", VA = "0x13D1AC0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C31")]
		[Address(RVA = "0x13D1BA0", Offset = "0x13D1BA0", VA = "0x13D1BA0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C33")]
		[Address(RVA = "0x13D38D4", Offset = "0x13D38D4", VA = "0x13D38D4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000192")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCF9B00", Offset = "0xCF9B00")]
	private sealed class <Score>d__23 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40007C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40007C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40007C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int score;

		[Token(Token = "0x40007CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public CompletePopup <>4__this;

		[Token(Token = "0x40007CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private WaitForEndOfFrame <wait>5__1;

		[Token(Token = "0x40007CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <currTime>5__2;

		[Token(Token = "0x40007CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int <currStars>5__3;

		[Token(Token = "0x40007CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float <starsCoeff>5__4;

		[Token(Token = "0x40007CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private int <lerpedScore>5__5;

		[Token(Token = "0x1700015C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C38")]
			[Address(RVA = "0x13D1808", Offset = "0x13D1808", VA = "0x13D1808", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700015D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C3A")]
			[Address(RVA = "0x13D19D4", Offset = "0x13D19D4", VA = "0x13D19D4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C35")]
		[Address(RVA = "0x13CC060", Offset = "0x13CC060", VA = "0x13CC060")]
		[DebuggerHidden]
		public <Score>d__23(int <>1__state)
		{
		}

		[Token(Token = "0x6000C36")]
		[Address(RVA = "0x13CE788", Offset = "0x13CE788", VA = "0x13CE788", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C37")]
		[Address(RVA = "0x13CE868", Offset = "0x13CE868", VA = "0x13CE868", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C39")]
		[Address(RVA = "0x13D18F4", Offset = "0x13D18F4", VA = "0x13D18F4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000193")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCF9B10", Offset = "0xCF9B10")]
	private sealed class <ButtonScale>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40007D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40007D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40007D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CompletePopup <>4__this;

		[Token(Token = "0x40007D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject[] <>s__1;

		[Token(Token = "0x40007D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <>s__2;

		[Token(Token = "0x40007D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private GameObject <button>5__3;

		[Token(Token = "0x1700015E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C3E")]
			[Address(RVA = "0x13CD0E4", Offset = "0x13CD0E4", VA = "0x13CD0E4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700015F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C40")]
			[Address(RVA = "0x13CD2B0", Offset = "0x13CD2B0", VA = "0x13CD2B0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C3B")]
		[Address(RVA = "0x13CC27C", Offset = "0x13CC27C", VA = "0x13CC27C")]
		[DebuggerHidden]
		public <ButtonScale>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x6000C3C")]
		[Address(RVA = "0x13CC6A4", Offset = "0x13CC6A4", VA = "0x13CC6A4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C3D")]
		[Address(RVA = "0x13CC784", Offset = "0x13CC784", VA = "0x13CC784", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C3F")]
		[Address(RVA = "0x13CD1D0", Offset = "0x13CD1D0", VA = "0x13CD1D0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000194")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCF9B20", Offset = "0xCF9B20")]
	private sealed class <InfoNum>d__25 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40007D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40007D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40007D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int totalBalls;

		[Token(Token = "0x40007D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int seconds;

		[Token(Token = "0x40007DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int combo;

		[Token(Token = "0x40007DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public CompletePopup <>4__this;

		[Token(Token = "0x40007DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private WaitForEndOfFrame <wait>5__1;

		[Token(Token = "0x40007DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float <currTime>5__2;

		[Token(Token = "0x40007DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float <lerpVal>5__3;

		[Token(Token = "0x40007DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private TimeSpan <newTime>5__4;

		[Token(Token = "0x17000160")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C44")]
			[Address(RVA = "0x13CE4D0", Offset = "0x13CE4D0", VA = "0x13CE4D0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000161")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C46")]
			[Address(RVA = "0x13CE69C", Offset = "0x13CE69C", VA = "0x13CE69C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C41")]
		[Address(RVA = "0x13CC4B4", Offset = "0x13CC4B4", VA = "0x13CC4B4")]
		[DebuggerHidden]
		public <InfoNum>d__25(int <>1__state)
		{
		}

		[Token(Token = "0x6000C42")]
		[Address(RVA = "0x13CD39C", Offset = "0x13CD39C", VA = "0x13CD39C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C43")]
		[Address(RVA = "0x13CD47C", Offset = "0x13CD47C", VA = "0x13CD47C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C45")]
		[Address(RVA = "0x13CE5BC", Offset = "0x13CE5BC", VA = "0x13CE5BC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40002BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] buttons;

	[Token(Token = "0x40002C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject fx_01;

	[Token(Token = "0x40002C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject fx_02;

	[Token(Token = "0x40002C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject fx_03;

	[Token(Token = "0x40002C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject popupPanel;

	[Token(Token = "0x40002C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform pos_01;

	[Token(Token = "0x40002C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform pos_02;

	[Token(Token = "0x40002C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform pos_03;

	[Token(Token = "0x40002C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Slider _starsSlider;

	[Token(Token = "0x40002C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject[] stars;

	[Token(Token = "0x40002C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Text stat1;

	[Token(Token = "0x40002CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Text stat2;

	[Token(Token = "0x40002CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Text stat3;

	[Token(Token = "0x40002CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private ObjectPoolEntry[] starsPrefabs;

	[Token(Token = "0x40002CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private ObjectPoolEntry confettiBlastRainbowPrefab;

	[Token(Token = "0x40002CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Text textScoreNum;

	[Token(Token = "0x40002CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Text textBestScoreNum;

	[Token(Token = "0x40002D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public GameObject newRecordGameObject;

	[Token(Token = "0x600034E")]
	[Address(RVA = "0x13C9520", Offset = "0x13C9520", VA = "0x13C9520")]
	private void Awake()
	{
	}

	[Token(Token = "0x600034F")]
	[Address(RVA = "0x13CB3EC", Offset = "0x13CB3EC", VA = "0x13CB3EC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000350")]
	[Address(RVA = "0x13CB858", Offset = "0x13CB858", VA = "0x13CB858")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000351")]
	[Address(RVA = "0x13C9DA4", Offset = "0x13C9DA4", VA = "0x13C9DA4")]
	private void ResetView()
	{
	}

	[Token(Token = "0x6000352")]
	[Address(RVA = "0x13CB73C", Offset = "0x13CB73C", VA = "0x13CB73C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD01900", Offset = "0xD01900")]
	private IEnumerator StartAnimation()
	{
		return null;
	}

	[Token(Token = "0x6000353")]
	[Address(RVA = "0x13CBF3C", Offset = "0x13CBF3C", VA = "0x13CBF3C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD01964", Offset = "0xD01964")]
	private IEnumerator Score(int score)
	{
		return null;
	}

	[Token(Token = "0x6000354")]
	[Address(RVA = "0x13CC160", Offset = "0x13CC160", VA = "0x13CC160")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD019C8", Offset = "0xD019C8")]
	private IEnumerator ButtonScale()
	{
		return null;
	}

	[Token(Token = "0x6000355")]
	[Address(RVA = "0x13CC37C", Offset = "0x13CC37C", VA = "0x13CC37C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD01A2C", Offset = "0xD01A2C")]
	private IEnumerator InfoNum(int totalBalls, int seconds, int combo)
	{
		return null;
	}

	[Token(Token = "0x6000356")]
	[Address(RVA = "0x13CBB30", Offset = "0x13CBB30", VA = "0x13CBB30")]
	private static string ChangeScore(int myScore)
	{
		return null;
	}

	[Token(Token = "0x6000357")]
	[Address(RVA = "0x13CC5B4", Offset = "0x13CC5B4", VA = "0x13CC5B4")]
	public CompletePopup()
	{
	}
}
[Token(Token = "0x200008F")]
public class LanguageSelectDropdown : MonoBehaviour
{
	[Token(Token = "0x40002D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dropdown _dropDown;

	[Token(Token = "0x40002D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<string, string> languages;

	[Token(Token = "0x40002D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private List<Dropdown.OptionData> originalList;

	[Token(Token = "0x40002D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private List<Dropdown.OptionData> rearragedlList;

	[Token(Token = "0x40002D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int selectedLocaliztion;

	[Token(Token = "0x6000358")]
	[Address(RVA = "0x194F918", Offset = "0x194F918", VA = "0x194F918")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000359")]
	[Address(RVA = "0x1951AB0", Offset = "0x1951AB0", VA = "0x1951AB0")]
	private int getOriginalIndex()
	{
		return default(int);
	}

	[Token(Token = "0x600035A")]
	[Address(RVA = "0x19522E8", Offset = "0x19522E8", VA = "0x19522E8")]
	private void OnValueChanged(int selected)
	{
	}

	[Token(Token = "0x600035B")]
	[Address(RVA = "0x1952768", Offset = "0x1952768", VA = "0x1952768")]
	public void changeLanguage(bool prev)
	{
	}

	[Token(Token = "0x600035C")]
	[Address(RVA = "0x1953214", Offset = "0x1953214", VA = "0x1953214")]
	public LanguageSelectDropdown()
	{
	}
}
[Token(Token = "0x2000090")]
public class OnBallScores : MonoBehaviour
{
	[Token(Token = "0x2000195")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCF9B30", Offset = "0xCF9B30")]
	private sealed class <FadeScores>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40007E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40007E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40007E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OnBallScores <>4__this;

		[Token(Token = "0x40007E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <time>5__1;

		[Token(Token = "0x40007E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Color <color>5__2;

		[Token(Token = "0x40007E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Color <color2>5__3;

		[Token(Token = "0x40007E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private WaitForEndOfFrame <wait>5__4;

		[Token(Token = "0x17000162")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C4A")]
			[Address(RVA = "0x19F34A4", Offset = "0x19F34A4", VA = "0x19F34A4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000163")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C4C")]
			[Address(RVA = "0x19F3670", Offset = "0x19F3670", VA = "0x19F3670", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C47")]
		[Address(RVA = "0x19F19CC", Offset = "0x19F19CC", VA = "0x19F19CC")]
		[DebuggerHidden]
		public <FadeScores>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x6000C48")]
		[Address(RVA = "0x19F2294", Offset = "0x19F2294", VA = "0x19F2294", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C49")]
		[Address(RVA = "0x19F2374", Offset = "0x19F2374", VA = "0x19F2374", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C4B")]
		[Address(RVA = "0x19F3590", Offset = "0x19F3590", VA = "0x19F3590", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40002D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private TextMesh textMesh;

	[Token(Token = "0x40002D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private TextMesh textMesh2;

	[Token(Token = "0x40002D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float waitBeforeFade;

	[Token(Token = "0x40002D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private float fadeTime;

	[Token(Token = "0x40002DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Material mat1;

	[Token(Token = "0x40002DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material mat2;

	[Token(Token = "0x600035D")]
	[Address(RVA = "0x19EEC74", Offset = "0x19EEC74", VA = "0x19EEC74")]
	private void Awake()
	{
	}

	[Token(Token = "0x600035E")]
	[Address(RVA = "0x19EF16C", Offset = "0x19EF16C", VA = "0x19EF16C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600035F")]
	[Address(RVA = "0x19EF500", Offset = "0x19EF500", VA = "0x19EF500")]
	private void GameManagerOnGameStateChanged(GameState prevState, GameState newState)
	{
	}

	[Token(Token = "0x6000360")]
	[Address(RVA = "0x19F0298", Offset = "0x19F0298", VA = "0x19F0298")]
	public void SetScores(string text, Color color, int fontSize, float zRotation)
	{
	}

	[Token(Token = "0x6000361")]
	[Address(RVA = "0x19F18B0", Offset = "0x19F18B0", VA = "0x19F18B0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD01A90", Offset = "0xD01A90")]
	private IEnumerator FadeScores()
	{
		return null;
	}

	[Token(Token = "0x6000362")]
	[Address(RVA = "0x19F1ACC", Offset = "0x19F1ACC", VA = "0x19F1ACC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000363")]
	[Address(RVA = "0x19F21A4", Offset = "0x19F21A4", VA = "0x19F21A4")]
	public OnBallScores()
	{
	}
}
[Token(Token = "0x2000091")]
public class ScreenOverlay : MonoBehaviour
{
	[Token(Token = "0x40002DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Texture2D image;

	[Token(Token = "0x40002DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Canvas vrOverlayCanvas;

	[Token(Token = "0x6000364")]
	[Address(RVA = "0x1A227B0", Offset = "0x1A227B0", VA = "0x1A227B0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000365")]
	[Address(RVA = "0x1A229C0", Offset = "0x1A229C0", VA = "0x1A229C0")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000366")]
	[Address(RVA = "0x1A232D4", Offset = "0x1A232D4", VA = "0x1A232D4")]
	private void DrawScreenOverlay()
	{
	}

	[Token(Token = "0x6000367")]
	[Address(RVA = "0x1A23C5C", Offset = "0x1A23C5C", VA = "0x1A23C5C")]
	public ScreenOverlay()
	{
	}
}
[Token(Token = "0x2000092")]
public class ScrollAreaManager : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
{
	[Token(Token = "0x40002DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ScrollButton scrollControlButton;

	[Token(Token = "0x6000368")]
	[Address(RVA = "0x1A23D4C", Offset = "0x1A23D4C", VA = "0x1A23D4C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000369")]
	[Address(RVA = "0x1A24208", Offset = "0x1A24208", VA = "0x1A24208", Slot = "4")]
	public void OnPointerEnter(PointerEventData eventData)
	{
	}

	[Token(Token = "0x600036A")]
	[Address(RVA = "0x1A24504", Offset = "0x1A24504", VA = "0x1A24504", Slot = "5")]
	public void OnPointerExit(PointerEventData eventData)
	{
	}

	[Token(Token = "0x600036B")]
	[Address(RVA = "0x1A24800", Offset = "0x1A24800", VA = "0x1A24800")]
	public ScrollAreaManager()
	{
	}
}
[Token(Token = "0x2000093")]
public class ScrollButton : MonoBehaviour, IDragHandler, IEventSystemHandler, IBeginDragHandler, IEndDragHandler
{
	[Token(Token = "0x2000196")]
	private enum ScrollControlType
	{
		[Token(Token = "0x40007E8")]
		None,
		[Token(Token = "0x40007E9")]
		Drag,
		[Token(Token = "0x40007EA")]
		Scroll
	}

	[Token(Token = "0x2000197")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCF9B40", Offset = "0xCF9B40")]
	private sealed class <Scroll>d__31 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40007EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40007EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40007ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ScrollButton <>4__this;

		[Token(Token = "0x40007EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <step>5__1;

		[Token(Token = "0x17000164")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C50")]
			[Address(RVA = "0x1A2C258", Offset = "0x1A2C258", VA = "0x1A2C258", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000165")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C52")]
			[Address(RVA = "0x1A2C424", Offset = "0x1A2C424", VA = "0x1A2C424", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C4D")]
		[Address(RVA = "0x1A2A4C4", Offset = "0x1A2A4C4", VA = "0x1A2A4C4")]
		[DebuggerHidden]
		public <Scroll>d__31(int <>1__state)
		{
		}

		[Token(Token = "0x6000C4E")]
		[Address(RVA = "0x1A2B5E4", Offset = "0x1A2B5E4", VA = "0x1A2B5E4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C4F")]
		[Address(RVA = "0x1A2B6C4", Offset = "0x1A2B6C4", VA = "0x1A2B6C4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C51")]
		[Address(RVA = "0x1A2C344", Offset = "0x1A2C344", VA = "0x1A2C344", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40002DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int _contentCount;

	[Token(Token = "0x40002E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private bool _initialized;

	[Token(Token = "0x40002E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCFBBD0", Offset = "0xCFBBD0")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xCFBBD0", Offset = "0xCFBBD0")]
	private float <targetPosition>k__BackingField;

	[Token(Token = "0x40002E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Coroutine _scrollCoroutine;

	[Token(Token = "0x40002E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private ScrollRect _scrollRect;

	[Token(Token = "0x40002E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Button leftUpButton;

	[Token(Token = "0x40002E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private bool resetOnChapterChange;

	[Token(Token = "0x40002E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Button rightDownButton;

	[Token(Token = "0x40002E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private int rowTabCount;

	[Token(Token = "0x40002E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[SerializeField]
	private bool vertical;

	[Token(Token = "0x40002E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private int visibleContents;

	[Token(Token = "0x40002EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCFBC6C", Offset = "0xCFBC6C")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xCFBC6C", Offset = "0xCFBC6C")]
	private bool <HasScrollFocus>k__BackingField;

	[Token(Token = "0x40002EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
	private bool isDragging;

	[Token(Token = "0x40002EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private ScrollControlType lastScrollControlType;

	[Token(Token = "0x17000050")]
	public float targetPosition
	{
		[Token(Token = "0x600036C")]
		[Address(RVA = "0x1A248F0", Offset = "0x1A248F0", VA = "0x1A248F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD01AF4", Offset = "0xD01AF4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600036D")]
		[Address(RVA = "0x1A24AB4", Offset = "0x1A24AB4", VA = "0x1A24AB4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD01B04", Offset = "0xD01B04")]
		set
		{
		}
	}

	[Token(Token = "0x17000051")]
	public bool HasScrollFocus
	{
		[Token(Token = "0x600036E")]
		[Address(RVA = "0x1A24C7C", Offset = "0x1A24C7C", VA = "0x1A24C7C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD01B14", Offset = "0xD01B14")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600036F")]
		[Address(RVA = "0x1A24E40", Offset = "0x1A24E40", VA = "0x1A24E40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD01B24", Offset = "0xD01B24")]
		set
		{
		}
	}

	[Token(Token = "0x17000052")]
	private float CurrentScrollPos
	{
		[Token(Token = "0x6000370")]
		[Address(RVA = "0x1A2500C", Offset = "0x1A2500C", VA = "0x1A2500C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000371")]
		[Address(RVA = "0x1A252F4", Offset = "0x1A252F4", VA = "0x1A252F4")]
		set
		{
		}
	}

	[Token(Token = "0x6000372")]
	[Address(RVA = "0x1A258F8", Offset = "0x1A258F8", VA = "0x1A258F8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000373")]
	[Address(RVA = "0x1A25EC0", Offset = "0x1A25EC0", VA = "0x1A25EC0")]
	private void OnCurrentEpisodeUpdated(int levelNumber)
	{
	}

	[Token(Token = "0x6000374")]
	[Address(RVA = "0x1A26838", Offset = "0x1A26838", VA = "0x1A26838")]
	private void Update()
	{
	}

	[Token(Token = "0x6000375")]
	[Address(RVA = "0x1A288A4", Offset = "0x1A288A4", VA = "0x1A288A4")]
	public void SetScroll(Vector2 value)
	{
	}

	[Token(Token = "0x6000376")]
	[Address(RVA = "0x1A27DC0", Offset = "0x1A27DC0", VA = "0x1A27DC0")]
	private void PerformScroll(Vector2 value)
	{
	}

	[Token(Token = "0x6000377")]
	[Address(RVA = "0x1A28330", Offset = "0x1A28330", VA = "0x1A28330")]
	private void ProcessScroll()
	{
	}

	[Token(Token = "0x6000378")]
	[Address(RVA = "0x1A293CC", Offset = "0x1A293CC", VA = "0x1A293CC")]
	public void Scroll(bool scrollRightDown = false)
	{
	}

	[Token(Token = "0x6000379")]
	[Address(RVA = "0x1A2A3A8", Offset = "0x1A2A3A8", VA = "0x1A2A3A8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD01B34", Offset = "0xD01B34")]
	private IEnumerator Scroll()
	{
		return null;
	}

	[Token(Token = "0x600037A")]
	[Address(RVA = "0x1A26318", Offset = "0x1A26318", VA = "0x1A26318")]
	private void ResetPos()
	{
	}

	[Token(Token = "0x600037B")]
	[Address(RVA = "0x1A29E04", Offset = "0x1A29E04", VA = "0x1A29E04")]
	private void ForceUpdateScroll()
	{
	}

	[Token(Token = "0x600037C")]
	[Address(RVA = "0x1A2A5C4", Offset = "0x1A2A5C4", VA = "0x1A2A5C4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600037D")]
	[Address(RVA = "0x1A28DD0", Offset = "0x1A28DD0", VA = "0x1A28DD0")]
	private void UpdateScrollButtons(float pos)
	{
	}

	[Token(Token = "0x600037E")]
	[Address(RVA = "0x1A2A89C", Offset = "0x1A2A89C", VA = "0x1A2A89C", Slot = "4")]
	public void OnDrag(PointerEventData eventData)
	{
	}

	[Token(Token = "0x600037F")]
	[Address(RVA = "0x1A2AC04", Offset = "0x1A2AC04", VA = "0x1A2AC04", Slot = "5")]
	public void OnBeginDrag(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000380")]
	[Address(RVA = "0x1A2AE84", Offset = "0x1A2AE84", VA = "0x1A2AE84", Slot = "6")]
	public void OnEndDrag(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000381")]
	[Address(RVA = "0x1A2B2EC", Offset = "0x1A2B2EC", VA = "0x1A2B2EC")]
	public ScrollButton()
	{
	}
}
[Token(Token = "0x2000094")]
public class StarProgressShower : MonoBehaviour
{
	[Token(Token = "0x40002ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private SpriteRenderer spriteRenderer;

	[Token(Token = "0x40002EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject[] stars;

	[Token(Token = "0x40002EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private bool playAudio;

	[Token(Token = "0x40002F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float _baseWidth;

	[Token(Token = "0x40002F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float _width;

	[Token(Token = "0x17000053")]
	private float width
	{
		[Token(Token = "0x6000382")]
		[Address(RVA = "0x1738AC8", Offset = "0x1738AC8", VA = "0x1738AC8")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000383")]
		[Address(RVA = "0x1738D44", Offset = "0x1738D44", VA = "0x1738D44")]
		set
		{
		}
	}

	[Token(Token = "0x6000384")]
	[Address(RVA = "0x17395A4", Offset = "0x17395A4", VA = "0x17395A4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000385")]
	[Address(RVA = "0x1739BD0", Offset = "0x1739BD0", VA = "0x1739BD0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000386")]
	[Address(RVA = "0x173BD70", Offset = "0x173BD70", VA = "0x173BD70")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000387")]
	[Address(RVA = "0x173A0B0", Offset = "0x173A0B0", VA = "0x173A0B0")]
	private void ScoreManagerOnStarsProgressUpdated(float starsProgress)
	{
	}

	[Token(Token = "0x6000388")]
	[Address(RVA = "0x173C104", Offset = "0x173C104", VA = "0x173C104")]
	public StarProgressShower()
	{
	}
}
[Token(Token = "0x2000095")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xCF8A78", Offset = "0xCF8A78")]
public class TextFader : MonoBehaviour
{
	[Token(Token = "0x40002F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Text _text;

	[Token(Token = "0x40002F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float duration;

	[Token(Token = "0x40002F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private Ease ease;

	[Token(Token = "0x6000389")]
	[Address(RVA = "0x1748BA0", Offset = "0x1748BA0", VA = "0x1748BA0")]
	private void Awake()
	{
	}

	[Token(Token = "0x600038A")]
	[Address(RVA = "0x1748E8C", Offset = "0x1748E8C", VA = "0x1748E8C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600038B")]
	[Address(RVA = "0x17491FC", Offset = "0x17491FC", VA = "0x17491FC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600038C")]
	[Address(RVA = "0x17494E8", Offset = "0x17494E8", VA = "0x17494E8")]
	public TextFader()
	{
	}
}
[Token(Token = "0x2000096")]
public class TimedBonusShower : MonoBehaviour
{
	[Token(Token = "0x40002F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Image image;

	[Token(Token = "0x40002F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject icon;

	[Token(Token = "0x600038D")]
	[Address(RVA = "0x1749CCC", Offset = "0x1749CCC", VA = "0x1749CCC")]
	private void Awake()
	{
	}

	[Token(Token = "0x600038E")]
	[Address(RVA = "0x174A060", Offset = "0x174A060", VA = "0x174A060")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600038F")]
	[Address(RVA = "0x174A33C", Offset = "0x174A33C", VA = "0x174A33C")]
	private void GameManagerOnTimedSpeedChangeProgress(float progress)
	{
	}

	[Token(Token = "0x6000390")]
	[Address(RVA = "0x174A7AC", Offset = "0x174A7AC", VA = "0x174A7AC")]
	public TimedBonusShower()
	{
	}
}
[Token(Token = "0x2000097")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xCF8ADC", Offset = "0xCF8ADC")]
public class ToggleTextColorizer : MonoBehaviour
{
	[Token(Token = "0x40002F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Toggle _toggle;

	[Token(Token = "0x40002F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Text[] _targetTexts;

	[Token(Token = "0x40002F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Color _normalColor;

	[Token(Token = "0x40002FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Color _selectedColor;

	[Token(Token = "0x40002FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Color _disabledColor;

	[Token(Token = "0x6000391")]
	[Address(RVA = "0x174C280", Offset = "0x174C280", VA = "0x174C280")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000392")]
	[Address(RVA = "0x174C70C", Offset = "0x174C70C", VA = "0x174C70C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000393")]
	[Address(RVA = "0x174CA6C", Offset = "0x174CA6C", VA = "0x174CA6C")]
	private void UpdateColors(bool active)
	{
	}

	[Token(Token = "0x6000394")]
	[Address(RVA = "0x174D2B0", Offset = "0x174D2B0", VA = "0x174D2B0")]
	public ToggleTextColorizer()
	{
	}
}
[Token(Token = "0x2000098")]
public class TooltipTrigger : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
{
	[Token(Token = "0x40002FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string text;

	[Token(Token = "0x40002FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool showed;

	[Token(Token = "0x40002FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private PointerEventData currEventData;

	[Token(Token = "0x6000395")]
	[Address(RVA = "0x174D3A0", Offset = "0x174D3A0", VA = "0x174D3A0", Slot = "4")]
	public void OnPointerEnter(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000396")]
	[Address(RVA = "0x174DAAC", Offset = "0x174DAAC", VA = "0x174DAAC", Slot = "5")]
	public void OnPointerExit(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000397")]
	[Address(RVA = "0x174E140", Offset = "0x174E140", VA = "0x174E140")]
	private void Update()
	{
	}

	[Token(Token = "0x6000398")]
	[Address(RVA = "0x174EB44", Offset = "0x174EB44", VA = "0x174EB44")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000399")]
	[Address(RVA = "0x174D6EC", Offset = "0x174D6EC", VA = "0x174D6EC")]
	private void StartHover()
	{
	}

	[Token(Token = "0x600039A")]
	[Address(RVA = "0x174DD90", Offset = "0x174DD90", VA = "0x174DD90")]
	private void StopHover()
	{
	}

	[Token(Token = "0x600039B")]
	[Address(RVA = "0x174FAF4", Offset = "0x174FAF4", VA = "0x174FAF4")]
	public TooltipTrigger()
	{
	}
}
[Token(Token = "0x2000099")]
public class TooltipView : MonoBehaviour
{
	[Token(Token = "0x40002FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text tooltipText;

	[Token(Token = "0x4000300")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string currKey;

	[Token(Token = "0x4000301")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCFBD58", Offset = "0xCFBD58")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xCFBD58", Offset = "0xCFBD58")]
	private static TooltipView <instance>k__BackingField;

	[Token(Token = "0x17000054")]
	public bool IsActive
	{
		[Token(Token = "0x600039C")]
		[Address(RVA = "0x174FBE4", Offset = "0x174FBE4", VA = "0x174FBE4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000055")]
	public static TooltipView instance
	{
		[Token(Token = "0x600039D")]
		[Address(RVA = "0x174FF4C", Offset = "0x174FF4C", VA = "0x174FF4C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD01B98", Offset = "0xD01B98")]
		get
		{
			return null;
		}
		[Token(Token = "0x600039E")]
		[Address(RVA = "0x17500FC", Offset = "0x17500FC", VA = "0x17500FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD01BA8", Offset = "0xD01BA8")]
		private set
		{
		}
	}

	[Token(Token = "0x600039F")]
	[Address(RVA = "0x17502C4", Offset = "0x17502C4", VA = "0x17502C4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003A0")]
	[Address(RVA = "0x1750DA8", Offset = "0x1750DA8", VA = "0x1750DA8")]
	private void UpdateText()
	{
	}

	[Token(Token = "0x60003A1")]
	[Address(RVA = "0x174E7CC", Offset = "0x174E7CC", VA = "0x174E7CC")]
	public void SetTooltipPosition(Vector3 pos)
	{
	}

	[Token(Token = "0x60003A2")]
	[Address(RVA = "0x174EF84", Offset = "0x174EF84", VA = "0x174EF84")]
	public void ShowTooltip(string text)
	{
	}

	[Token(Token = "0x60003A3")]
	[Address(RVA = "0x174F798", Offset = "0x174F798", VA = "0x174F798")]
	public void HideTooltip()
	{
	}

	[Token(Token = "0x60003A4")]
	[Address(RVA = "0x1751388", Offset = "0x1751388", VA = "0x1751388")]
	public TooltipView()
	{
	}
}
[Token(Token = "0x200009A")]
public class UIManager : MonoBehaviour
{
	[Token(Token = "0x4000302")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static UIManager Instance;

	[Token(Token = "0x4000303")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Canvas canvas;

	[Token(Token = "0x4000304")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ViewController chaptersView;

	[Token(Token = "0x4000305")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ViewController levelCompleteView;

	[Token(Token = "0x4000306")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ViewController pauseView;

	[Token(Token = "0x4000307")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private ViewController[] _views;

	[Token(Token = "0x4000308")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private ViewController currentView;

	[Token(Token = "0x4000309")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private string audioPointerOver;

	[Token(Token = "0x400030A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private string audioClick;

	[Token(Token = "0x17000056")]
	public static bool UiActive
	{
		[Token(Token = "0x60003A5")]
		[Address(RVA = "0x1762368", Offset = "0x1762368", VA = "0x1762368")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60003A6")]
	[Address(RVA = "0x1762690", Offset = "0x1762690", VA = "0x1762690")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003A7")]
	[Address(RVA = "0x1763068", Offset = "0x1763068", VA = "0x1763068")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60003A8")]
	[Address(RVA = "0x17636E4", Offset = "0x17636E4", VA = "0x17636E4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60003A9")]
	[Address(RVA = "0x1763D60", Offset = "0x1763D60", VA = "0x1763D60")]
	[AttributeAttribute(Name = "EditorButtonAttribute", RVA = "0xD01BB8", Offset = "0xD01BB8")]
	private void ShowNone()
	{
	}

	[Token(Token = "0x60003AA")]
	[Address(RVA = "0x1762E38", Offset = "0x1762E38", VA = "0x1762E38")]
	[AttributeAttribute(Name = "EditorButtonAttribute", RVA = "0xD01BC8", Offset = "0xD01BC8")]
	private void ShowChapters()
	{
	}

	[Token(Token = "0x60003AB")]
	[Address(RVA = "0x176487C", Offset = "0x176487C", VA = "0x176487C")]
	[AttributeAttribute(Name = "EditorButtonAttribute", RVA = "0xD01BD8", Offset = "0xD01BD8")]
	private void ShowComplete()
	{
	}

	[Token(Token = "0x60003AC")]
	[Address(RVA = "0x1764AAC", Offset = "0x1764AAC", VA = "0x1764AAC")]
	[AttributeAttribute(Name = "EditorButtonAttribute", RVA = "0xD01BE8", Offset = "0xD01BE8")]
	private void ShowPause()
	{
	}

	[Token(Token = "0x60003AD")]
	[Address(RVA = "0x1764CDC", Offset = "0x1764CDC", VA = "0x1764CDC")]
	private void OnLevelLoadingStart()
	{
	}

	[Token(Token = "0x60003AE")]
	[Address(RVA = "0x1764FD8", Offset = "0x1764FD8", VA = "0x1764FD8")]
	private void OnGameStateChange(GameState prevState, GameState state)
	{
	}

	[Token(Token = "0x60003AF")]
	[Address(RVA = "0x1765B84", Offset = "0x1765B84", VA = "0x1765B84")]
	private void OnMenuButtonToggle()
	{
	}

	[Token(Token = "0x60003B0")]
	[Address(RVA = "0x1763F8C", Offset = "0x1763F8C", VA = "0x1763F8C")]
	private void ActivateView(ViewController view)
	{
	}

	[Token(Token = "0x60003B1")]
	[Address(RVA = "0x1766CC0", Offset = "0x1766CC0", VA = "0x1766CC0")]
	public void PlayButtonSound()
	{
	}

	[Token(Token = "0x60003B2")]
	[Address(RVA = "0x17671C8", Offset = "0x17671C8", VA = "0x17671C8")]
	public void PlayButtonSoundClick()
	{
	}

	[Token(Token = "0x60003B3")]
	[Address(RVA = "0x17676D0", Offset = "0x17676D0", VA = "0x17676D0")]
	public void MenuButtonClick()
	{
	}

	[Token(Token = "0x60003B4")]
	[Address(RVA = "0x17679D4", Offset = "0x17679D4", VA = "0x17679D4")]
	public UIManager()
	{
	}
}
[Token(Token = "0x200009B")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xCF8B40", Offset = "0xCF8B40")]
public class UINextLevelButton : MonoBehaviour
{
	[Token(Token = "0x400030B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Button _button;

	[Token(Token = "0x60003B5")]
	[Address(RVA = "0x1767AC4", Offset = "0x1767AC4", VA = "0x1767AC4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003B6")]
	[Address(RVA = "0x1767DB0", Offset = "0x1767DB0", VA = "0x1767DB0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60003B7")]
	[Address(RVA = "0x1768548", Offset = "0x1768548", VA = "0x1768548")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60003B8")]
	[Address(RVA = "0x1768954", Offset = "0x1768954", VA = "0x1768954")]
	public void LoadNextLevel()
	{
	}

	[Token(Token = "0x60003B9")]
	[Address(RVA = "0x1768D2C", Offset = "0x1768D2C", VA = "0x1768D2C")]
	public UINextLevelButton()
	{
	}
}
[Token(Token = "0x200009C")]
public class UISliderFromGameObjects : MonoBehaviour
{
	[Token(Token = "0x400030C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject[] _stars;

	[Token(Token = "0x400030D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject[] _keys;

	[Token(Token = "0x60003BA")]
	[Address(RVA = "0x176A07C", Offset = "0x176A07C", VA = "0x176A07C")]
	public void SetStars(int stars)
	{
	}

	[Token(Token = "0x60003BB")]
	[Address(RVA = "0x176A7E8", Offset = "0x176A7E8", VA = "0x176A7E8")]
	public void SetKey(int keys)
	{
	}

	[Token(Token = "0x60003BC")]
	[Address(RVA = "0x176AF54", Offset = "0x176AF54", VA = "0x176AF54")]
	public UISliderFromGameObjects()
	{
	}
}
[Token(Token = "0x200009D")]
public class UiCrosshair : MonoBehaviour
{
	[Token(Token = "0x400030E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Canvas _canvas;

	[Token(Token = "0x400030F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform leftColorRoot;

	[Token(Token = "0x4000310")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Image leftColorImage;

	[Token(Token = "0x4000311")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Transform rightColorRoot;

	[Token(Token = "0x4000312")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Image rightColorImage;

	[Token(Token = "0x17000057")]
	public bool DisplayCrosshair
	{
		[Token(Token = "0x60003BD")]
		[Address(RVA = "0x176E1F8", Offset = "0x176E1F8", VA = "0x176E1F8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60003BE")]
		[Address(RVA = "0x176E43C", Offset = "0x176E43C", VA = "0x176E43C")]
		set
		{
		}
	}

	[Token(Token = "0x17000058")]
	public bool DisplayColorMarkers
	{
		[Token(Token = "0x60003BF")]
		[Address(RVA = "0x176E694", Offset = "0x176E694", VA = "0x176E694")]
		set
		{
		}
	}

	[Token(Token = "0x60003C0")]
	[Address(RVA = "0x176EB90", Offset = "0x176EB90", VA = "0x176EB90")]
	public void SetLeftColor(Color color)
	{
	}

	[Token(Token = "0x60003C1")]
	[Address(RVA = "0x176EEA0", Offset = "0x176EEA0", VA = "0x176EEA0")]
	public void SetRightColor(Color color)
	{
	}

	[Token(Token = "0x60003C2")]
	[Address(RVA = "0x176F1B0", Offset = "0x176F1B0", VA = "0x176F1B0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003C3")]
	[Address(RVA = "0x176F544", Offset = "0x176F544", VA = "0x176F544")]
	private void OnGameStateChanged(GameState arg1, GameState newGameState)
	{
	}

	[Token(Token = "0x60003C4")]
	[Address(RVA = "0x176F918", Offset = "0x176F918", VA = "0x176F918")]
	public UiCrosshair()
	{
	}
}
[Token(Token = "0x200009E")]
public class UiEpisodeButton : MonoBehaviour
{
	[Token(Token = "0x4000313")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Button _selectEpisodeButton;

	[Token(Token = "0x4000314")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject _selected;

	[Token(Token = "0x4000315")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private LocalazableUIText _title;

	[Token(Token = "0x4000316")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Image _backgroundImage;

	[Token(Token = "0x4000317")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Color _doneColor;

	[Token(Token = "0x4000318")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Color _inProgressColor;

	[Token(Token = "0x4000319")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private GameObject _lockSprite;

	[Token(Token = "0x400031A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private GameObject ProgressionGo;

	[Token(Token = "0x400031B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCFBEA4", Offset = "0xCFBEA4")]
	[SerializeField]
	private Text _starsProgressCount;

	[Token(Token = "0x400031C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private Image _starsProgressIcon;

	[Token(Token = "0x400031D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private GameObject _newIndicator;

	[Token(Token = "0x400031E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private Sprite _starsCompletedSprite;

	[Token(Token = "0x400031F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private Sprite _starsUncomplitedSprite;

	[Token(Token = "0x4000320")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Action Clicked;

	[Token(Token = "0x60003C5")]
	[Address(RVA = "0x176FD08", Offset = "0x176FD08", VA = "0x176FD08")]
	public void Setup(ChapterManager.Chapter chapter)
	{
	}

	[Token(Token = "0x60003C6")]
	[Address(RVA = "0x1770A00", Offset = "0x1770A00", VA = "0x1770A00")]
	public void SetSelected(bool isSelected)
	{
	}

	[Token(Token = "0x60003C7")]
	[Address(RVA = "0x1770D08", Offset = "0x1770D08", VA = "0x1770D08")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003C8")]
	[Address(RVA = "0x1771114", Offset = "0x1771114", VA = "0x1771114")]
	private void ClickHandler()
	{
	}

	[Token(Token = "0x60003C9")]
	[Address(RVA = "0x17713F8", Offset = "0x17713F8", VA = "0x17713F8")]
	public UiEpisodeButton()
	{
	}
}
[Token(Token = "0x200009F")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xCF8BA4", Offset = "0xCF8BA4")]
public class UiEpisodeTotalText : MonoBehaviour
{
	[Token(Token = "0x4000321")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private LocalazableUIText _text;

	[Token(Token = "0x4000322")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ChapterManager _chapterManager;

	[Token(Token = "0x60003CA")]
	[Address(RVA = "0x17714E8", Offset = "0x17714E8", VA = "0x17714E8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003CB")]
	[Address(RVA = "0x1771A40", Offset = "0x1771A40", VA = "0x1771A40")]
	private void OnCurrentEpisodeUpdated(int levelNumber)
	{
	}

	[Token(Token = "0x60003CC")]
	[Address(RVA = "0x1771F80", Offset = "0x1771F80", VA = "0x1771F80")]
	public UiEpisodeTotalText()
	{
	}
}
[Token(Token = "0x20000A0")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xCF8C08", Offset = "0xCF8C08")]
public class UiExitButton : MonoBehaviour
{
	[Token(Token = "0x2000198")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCF9B50", Offset = "0xCF9B50")]
	private sealed class <FadeOutAndExitRoutine>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40007EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40007F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40007F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UiExitButton <>4__this;

		[Token(Token = "0x40007F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <delay>5__1;

		[Token(Token = "0x17000166")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C56")]
			[Address(RVA = "0x1773BB0", Offset = "0x1773BB0", VA = "0x1773BB0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000167")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C58")]
			[Address(RVA = "0x1773D7C", Offset = "0x1773D7C", VA = "0x1773D7C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C53")]
		[Address(RVA = "0x1772FE0", Offset = "0x1772FE0", VA = "0x1772FE0")]
		[DebuggerHidden]
		public <FadeOutAndExitRoutine>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6000C54")]
		[Address(RVA = "0x17734A8", Offset = "0x17734A8", VA = "0x17734A8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C55")]
		[Address(RVA = "0x1773588", Offset = "0x1773588", VA = "0x1773588", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C57")]
		[Address(RVA = "0x1773C9C", Offset = "0x1773C9C", VA = "0x1773C9C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000323")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Button _button;

	[Token(Token = "0x60003CD")]
	[Address(RVA = "0x1772070", Offset = "0x1772070", VA = "0x1772070")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003CE")]
	[Address(RVA = "0x177235C", Offset = "0x177235C", VA = "0x177235C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60003CF")]
	[Address(RVA = "0x1772768", Offset = "0x1772768", VA = "0x1772768")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60003D0")]
	[Address(RVA = "0x1772B74", Offset = "0x1772B74", VA = "0x1772B74")]
	private void FadeOutAndExit()
	{
	}

	[Token(Token = "0x60003D1")]
	[Address(RVA = "0x1772EC4", Offset = "0x1772EC4", VA = "0x1772EC4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD01BF8", Offset = "0xD01BF8")]
	private IEnumerator FadeOutAndExitRoutine()
	{
		return null;
	}

	[Token(Token = "0x60003D2")]
	[Address(RVA = "0x17730E0", Offset = "0x17730E0", VA = "0x17730E0")]
	private void Exit()
	{
	}

	[Token(Token = "0x60003D3")]
	[Address(RVA = "0x17733B8", Offset = "0x17733B8", VA = "0x17733B8")]
	public UiExitButton()
	{
	}
}
[Token(Token = "0x20000A1")]
public class UiFov : MonoBehaviour
{
	[Token(Token = "0x4000324")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Text fovText;

	[Token(Token = "0x4000325")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Slider slider;

	[Token(Token = "0x60003D4")]
	[Address(RVA = "0x1773E68", Offset = "0x1773E68", VA = "0x1773E68")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60003D5")]
	[Address(RVA = "0x17744B0", Offset = "0x17744B0", VA = "0x17744B0")]
	private void Start()
	{
	}

	[Token(Token = "0x60003D6")]
	[Address(RVA = "0x177498C", Offset = "0x177498C", VA = "0x177498C")]
	private void Update()
	{
	}

	[Token(Token = "0x60003D7")]
	[Address(RVA = "0x1774DA8", Offset = "0x1774DA8", VA = "0x1774DA8")]
	private void HandleSliderFov(float value)
	{
	}

	[Token(Token = "0x60003D8")]
	[Address(RVA = "0x1774140", Offset = "0x1774140", VA = "0x1774140")]
	private void UpdateSliderFov()
	{
	}

	[Token(Token = "0x60003D9")]
	[Address(RVA = "0x1775094", Offset = "0x1775094", VA = "0x1775094")]
	public UiFov()
	{
	}
}
[Token(Token = "0x20000A2")]
public class UiLaunchMode : MonoBehaviour
{
	[Token(Token = "0x2000199")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCF9B60", Offset = "0xCF9B60")]
	private sealed class <BusyUiDisplayRoutine>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40007F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40007F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40007F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UiLaunchMode <>4__this;

		[Token(Token = "0x17000168")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C5C")]
			[Address(RVA = "0x1777088", Offset = "0x1777088", VA = "0x1777088", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000169")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C5E")]
			[Address(RVA = "0x1777254", Offset = "0x1777254", VA = "0x1777254", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C59")]
		[Address(RVA = "0x1776618", Offset = "0x1776618", VA = "0x1776618")]
		[DebuggerHidden]
		public <BusyUiDisplayRoutine>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6000C5A")]
		[Address(RVA = "0x1776808", Offset = "0x1776808", VA = "0x1776808", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C5B")]
		[Address(RVA = "0x17768E8", Offset = "0x17768E8", VA = "0x17768E8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C5D")]
		[Address(RVA = "0x1777174", Offset = "0x1777174", VA = "0x1777174", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000326")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject messageUi;

	[Token(Token = "0x4000327")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject busyUi;

	[Token(Token = "0x60003DA")]
	[Address(RVA = "0x1775788", Offset = "0x1775788", VA = "0x1775788")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003DB")]
	[Address(RVA = "0x1775B58", Offset = "0x1775B58", VA = "0x1775B58")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60003DC")]
	[Address(RVA = "0x1776180", Offset = "0x1776180", VA = "0x1776180")]
	public void SetActive(bool active)
	{
	}

	[Token(Token = "0x60003DD")]
	[Address(RVA = "0x1775E30", Offset = "0x1775E30", VA = "0x1775E30")]
	public void ShowBusyUiForAWhile()
	{
	}

	[Token(Token = "0x60003DE")]
	[Address(RVA = "0x17764FC", Offset = "0x17764FC", VA = "0x17764FC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD01C5C", Offset = "0xD01C5C")]
	private IEnumerator BusyUiDisplayRoutine()
	{
		return null;
	}

	[Token(Token = "0x60003DF")]
	[Address(RVA = "0x1776718", Offset = "0x1776718", VA = "0x1776718")]
	public UiLaunchMode()
	{
	}
}
[Token(Token = "0x20000A3")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xCF8C6C", Offset = "0xCF8C6C")]
public class UiLevelButton : MonoBehaviour
{
	[Token(Token = "0x4000328")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Button _button;

	[Token(Token = "0x4000329")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private CanvasGroup _canvasGroup;

	[Token(Token = "0x400032A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject _unlockedItem;

	[Token(Token = "0x400032B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject _lockIcon;

	[Token(Token = "0x400032C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject _unavailableIcon;

	[Token(Token = "0x400032D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Text _bonusLevelUnlockProgress;

	[Token(Token = "0x400032E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Slider _bonusLevelUnlockProgressSlider;

	[Token(Token = "0x400032F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Text NumberText;

	[Token(Token = "0x4000330")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public UISliderFromGameObjects StarsSlider;

	[Token(Token = "0x4000331")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Image buttonImage;

	[Token(Token = "0x4000332")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private Sprite levelSpriteDefault;

	[Token(Token = "0x4000333")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private Sprite levelSpriteSelected;

	[Token(Token = "0x4000334")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private int _number;

	[Token(Token = "0x4000335")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private LevelProgress _levelProgress;

	[Token(Token = "0x4000336")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private bool isUnavailable;

	[Token(Token = "0x60003E0")]
	[Address(RVA = "0x1777340", Offset = "0x1777340", VA = "0x1777340")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003E1")]
	[Address(RVA = "0x177762C", Offset = "0x177762C", VA = "0x177762C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60003E2")]
	[Address(RVA = "0x1778D28", Offset = "0x1778D28", VA = "0x1778D28")]
	public void SetUnavailable()
	{
	}

	[Token(Token = "0x60003E3")]
	[Address(RVA = "0x177918C", Offset = "0x177918C", VA = "0x177918C")]
	public void Setup(int number, LevelProgress levelProgress)
	{
	}

	[Token(Token = "0x60003E4")]
	[Address(RVA = "0x177967C", Offset = "0x177967C", VA = "0x177967C")]
	public void SetProgress(int episodeTotalKeys, int targetKeys)
	{
	}

	[Token(Token = "0x60003E5")]
	[Address(RVA = "0x1779F74", Offset = "0x1779F74", VA = "0x1779F74")]
	public void SetSelected(bool selected)
	{
	}

	[Token(Token = "0x60003E6")]
	[Address(RVA = "0x1777904", Offset = "0x1777904", VA = "0x1777904")]
	private void UpdateView()
	{
	}

	[Token(Token = "0x60003E7")]
	[Address(RVA = "0x177A284", Offset = "0x177A284", VA = "0x177A284")]
	public UiLevelButton()
	{
	}
}
[Token(Token = "0x20000A4")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xCF8CD0", Offset = "0xCF8CD0")]
public class UiLevelProgressShower : MonoBehaviour
{
	[Token(Token = "0x4000337")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Slider _slider;

	[Token(Token = "0x60003E8")]
	[Address(RVA = "0x177A374", Offset = "0x177A374", VA = "0x177A374")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003E9")]
	[Address(RVA = "0x177A748", Offset = "0x177A748", VA = "0x177A748")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60003EA")]
	[Address(RVA = "0x177AB2C", Offset = "0x177AB2C", VA = "0x177AB2C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60003EB")]
	[Address(RVA = "0x177AF10", Offset = "0x177AF10", VA = "0x177AF10")]
	private void OnLevelPercentUpdated(float percent)
	{
	}

	[Token(Token = "0x60003EC")]
	[Address(RVA = "0x177B28C", Offset = "0x177B28C", VA = "0x177B28C")]
	public UiLevelProgressShower()
	{
	}
}
[Token(Token = "0x20000A5")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xCF8D34", Offset = "0xCF8D34")]
public class UiLevelText : MonoBehaviour
{
	[Token(Token = "0x4000338")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private LocalazableUIText _text;

	[Token(Token = "0x60003ED")]
	[Address(RVA = "0x177B37C", Offset = "0x177B37C", VA = "0x177B37C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003EE")]
	[Address(RVA = "0x177B668", Offset = "0x177B668", VA = "0x177B668")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60003EF")]
	[Address(RVA = "0x177C354", Offset = "0x177C354", VA = "0x177C354")]
	private void Start()
	{
	}

	[Token(Token = "0x60003F0")]
	[Address(RVA = "0x177B940", Offset = "0x177B940", VA = "0x177B940")]
	private void UpdateUI()
	{
	}

	[Token(Token = "0x60003F1")]
	[Address(RVA = "0x177C62C", Offset = "0x177C62C", VA = "0x177C62C")]
	public UiLevelText()
	{
	}
}
[Token(Token = "0x20000A6")]
public class UiRecenter : MonoBehaviour
{
	[Token(Token = "0x4000339")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Image fillImage;

	[Token(Token = "0x60003F2")]
	[Address(RVA = "0x177C71C", Offset = "0x177C71C", VA = "0x177C71C")]
	public void SetRotation(float angle)
	{
	}

	[Token(Token = "0x60003F3")]
	[Address(RVA = "0x177CB58", Offset = "0x177CB58", VA = "0x177CB58")]
	public void SetProgress(float value)
	{
	}

	[Token(Token = "0x60003F4")]
	[Address(RVA = "0x177CE54", Offset = "0x177CE54", VA = "0x177CE54")]
	public UiRecenter()
	{
	}
}
[Token(Token = "0x20000A7")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xCF8D98", Offset = "0xCF8D98")]
public class UiRecenterButton : MonoBehaviour
{
	[Token(Token = "0x60003F5")]
	[Address(RVA = "0x177CF44", Offset = "0x177CF44", VA = "0x177CF44")]
	private void Start()
	{
	}

	[Token(Token = "0x60003F6")]
	[Address(RVA = "0x177D3CC", Offset = "0x177D3CC", VA = "0x177D3CC")]
	public UiRecenterButton()
	{
	}
}
[Token(Token = "0x20000A8")]
public class UiRelaunch : MonoBehaviour
{
	[Token(Token = "0x200019A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCF9B70", Offset = "0xCF9B70")]
	private sealed class <Start>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40007F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40007F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40007F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UiRelaunch <>4__this;

		[Token(Token = "0x1700016A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C62")]
			[Address(RVA = "0x177ED1C", Offset = "0x177ED1C", VA = "0x177ED1C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700016B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C64")]
			[Address(RVA = "0x177EEE8", Offset = "0x177EEE8", VA = "0x177EEE8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C5F")]
		[Address(RVA = "0x177DB88", Offset = "0x177DB88", VA = "0x177DB88")]
		[DebuggerHidden]
		public <Start>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x6000C60")]
		[Address(RVA = "0x177E7FC", Offset = "0x177E7FC", VA = "0x177E7FC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C61")]
		[Address(RVA = "0x177E8DC", Offset = "0x177E8DC", VA = "0x177E8DC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C63")]
		[Address(RVA = "0x177EE08", Offset = "0x177EE08", VA = "0x177EE08", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400033A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UiLaunchMode ui;

	[Token(Token = "0x60003F7")]
	[Address(RVA = "0x177D4BC", Offset = "0x177D4BC", VA = "0x177D4BC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003F8")]
	[Address(RVA = "0x177DA6C", Offset = "0x177DA6C", VA = "0x177DA6C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD01CC0", Offset = "0xD01CC0")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x60003F9")]
	[Address(RVA = "0x177DC88", Offset = "0x177DC88", VA = "0x177DC88")]
	public void LaunchVrMode()
	{
	}

	[Token(Token = "0x60003FA")]
	[Address(RVA = "0x177E234", Offset = "0x177E234", VA = "0x177E234")]
	public void LaunchDesktopMode()
	{
	}

	[Token(Token = "0x60003FB")]
	[Address(RVA = "0x177E70C", Offset = "0x177E70C", VA = "0x177E70C")]
	public UiRelaunch()
	{
	}
}
[Token(Token = "0x20000A9")]
public class UiScoreShowerTextMesh : MonoBehaviour
{
	[Token(Token = "0x200019B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCF9B80", Offset = "0xCF9B80")]
	private sealed class <LerpScore>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40007F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40007FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40007FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int score;

		[Token(Token = "0x40007FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UiScoreShowerTextMesh <>4__this;

		[Token(Token = "0x40007FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private WaitForEndOfFrame <wait>5__1;

		[Token(Token = "0x40007FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <currTime>5__2;

		[Token(Token = "0x40007FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int <value>5__3;

		[Token(Token = "0x1700016C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C68")]
			[Address(RVA = "0x1782D30", Offset = "0x1782D30", VA = "0x1782D30", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700016D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C6A")]
			[Address(RVA = "0x1782EFC", Offset = "0x1782EFC", VA = "0x1782EFC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C65")]
		[Address(RVA = "0x1781F80", Offset = "0x1781F80", VA = "0x1781F80")]
		[DebuggerHidden]
		public <LerpScore>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x6000C66")]
		[Address(RVA = "0x1782170", Offset = "0x1782170", VA = "0x1782170", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C67")]
		[Address(RVA = "0x1782250", Offset = "0x1782250", VA = "0x1782250", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C69")]
		[Address(RVA = "0x1782E1C", Offset = "0x1782E1C", VA = "0x1782E1C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400033B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private TextMesh _text;

	[Token(Token = "0x400033C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Coroutine _lerpCoroutine;

	[Token(Token = "0x400033D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int _currScore;

	[Token(Token = "0x400033E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int _targetScore;

	[Token(Token = "0x60003FC")]
	[Address(RVA = "0x177EFD4", Offset = "0x177EFD4", VA = "0x177EFD4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003FD")]
	[Address(RVA = "0x17805B0", Offset = "0x17805B0", VA = "0x17805B0")]
	private void OnlevelLoaded()
	{
	}

	[Token(Token = "0x60003FE")]
	[Address(RVA = "0x1780C90", Offset = "0x1780C90", VA = "0x1780C90")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60003FF")]
	[Address(RVA = "0x1780FF8", Offset = "0x1780FF8", VA = "0x1780FF8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000400")]
	[Address(RVA = "0x17812D4", Offset = "0x17812D4", VA = "0x17812D4")]
	private void OnLevelScoresUpdated(int score)
	{
	}

	[Token(Token = "0x6000401")]
	[Address(RVA = "0x1781E5C", Offset = "0x1781E5C", VA = "0x1781E5C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD01D24", Offset = "0xD01D24")]
	private IEnumerator LerpScore(int score)
	{
		return null;
	}

	[Token(Token = "0x6000402")]
	[Address(RVA = "0x1780978", Offset = "0x1780978", VA = "0x1780978")]
	private string ChangeScore(int score)
	{
		return null;
	}

	[Token(Token = "0x6000403")]
	[Address(RVA = "0x1782080", Offset = "0x1782080", VA = "0x1782080")]
	public UiScoreShowerTextMesh()
	{
	}
}
[Token(Token = "0x20000AA")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xCF8DFC", Offset = "0xCF8DFC")]
public class UiVersionText : MonoBehaviour
{
	[Token(Token = "0x400033F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Text _text;

	[Token(Token = "0x6000404")]
	[Address(RVA = "0x1782FE8", Offset = "0x1782FE8", VA = "0x1782FE8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000405")]
	[Address(RVA = "0x17832D4", Offset = "0x17832D4", VA = "0x17832D4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000406")]
	[Address(RVA = "0x1783748", Offset = "0x1783748", VA = "0x1783748")]
	public UiVersionText()
	{
	}
}
[Token(Token = "0x20000AB")]
public static class AddressablesUtil
{
	[Token(Token = "0x200019C")]
	public class BoolPromise
	{
		[Token(Token = "0x4000800")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Action<bool> _action;

		[Token(Token = "0x4000801")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool? _result;

		[Token(Token = "0x1700016E")]
		public bool Result
		{
			[Token(Token = "0x6000C6B")]
			[Address(RVA = "0x1390DAC", Offset = "0x1390DAC", VA = "0x1390DAC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700016F")]
		public bool isResolved
		{
			[Token(Token = "0x6000C6C")]
			[Address(RVA = "0x1391088", Offset = "0x1391088", VA = "0x1391088")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000C6D")]
		[Address(RVA = "0x13912C8", Offset = "0x13912C8", VA = "0x13912C8")]
		public void Then(Action<bool> action)
		{
		}

		[Token(Token = "0x6000C6E")]
		[Address(RVA = "0x139095C", Offset = "0x139095C", VA = "0x139095C")]
		internal void Resolve(bool result)
		{
		}

		[Token(Token = "0x6000C6F")]
		[Address(RVA = "0x138E97C", Offset = "0x138E97C", VA = "0x138E97C")]
		public BoolPromise()
		{
		}
	}

	[Token(Token = "0x200019D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCF9B90", Offset = "0xCF9B90")]
	private sealed class <>c__DisplayClass1_0
	{
		[Token(Token = "0x4000802")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public BoolPromise promise;

		[Token(Token = "0x6000C70")]
		[Address(RVA = "0x138E88C", Offset = "0x138E88C", VA = "0x138E88C")]
		public <>c__DisplayClass1_0()
		{
		}

		[Token(Token = "0x6000C71")]
		[Address(RVA = "0x138ED68", Offset = "0x138ED68", VA = "0x138ED68")]
		internal void <VerifyAssetResourceExists>b__0(AsyncOperationHandle<IList<IResourceLocation>> handle)
		{
		}
	}

	[Token(Token = "0x6000407")]
	[Address(RVA = "0x138E1F4", Offset = "0x138E1F4", VA = "0x138E1F4")]
	public static BoolPromise VerifyAssetResourceExists(AssetReference assetReference)
	{
		return null;
	}

	[Token(Token = "0x6000408")]
	[Address(RVA = "0x138EA6C", Offset = "0x138EA6C", VA = "0x138EA6C")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xD01D88", Offset = "0xD01D88")]
	private static void Log(object message)
	{
	}
}
[Token(Token = "0x20000AC")]
public static class EnumExtension
{
	[Token(Token = "0x6000409")]
	public static bool Is<T>(this T source, params T[] others) where T : Enum
	{
		return default(bool);
	}
}
[Token(Token = "0x20000AD")]
public static class EnumerableExtension
{
	[Token(Token = "0x600040A")]
	public static int IndexOf<T>(this IEnumerable<T> collection, Func<T, bool> predicate)
	{
		return default(int);
	}

	[Token(Token = "0x600040B")]
	[Address(RVA = "0x3423040", Offset = "0x3423040", VA = "0x3423040")]
	public static string Join(this IList<string> source, string separator)
	{
		return null;
	}

	[Token(Token = "0x600040C")]
	public static string Join<T>(this IList<T> source, string separator, Func<T, string> closure)
	{
		return null;
	}

	[Token(Token = "0x600040D")]
	public static void ForEach<T>(this IEnumerable<T> source, Action<T> closure)
	{
	}
}
[Token(Token = "0x20000AE")]
public class LevelSplineGen : MonoBehaviour
{
	[Token(Token = "0x200019E")]
	public enum GenType
	{
		[Token(Token = "0x4000804")]
		None,
		[Token(Token = "0x4000805")]
		Spiral,
		[Token(Token = "0x4000806")]
		Cube
	}

	[Token(Token = "0x4000340")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private SplineComputer _targetSpline;

	[Token(Token = "0x4000341")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int spiralRadius;

	[Token(Token = "0x4000342")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float radiusDelta;

	[Token(Token = "0x4000343")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float xOffset;

	[Token(Token = "0x4000344")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float yOffset;

	[Token(Token = "0x4000345")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float zOffset;

	[Token(Token = "0x4000346")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float xScale;

	[Token(Token = "0x4000347")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float yScale;

	[Token(Token = "0x4000348")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float zDelta;

	[Token(Token = "0x4000349")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int iOffset;

	[Token(Token = "0x400034A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int steps;

	[Token(Token = "0x400034B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool inverseAngle;

	[Token(Token = "0x400034C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public GenType autoGenType;

	[Token(Token = "0x17000059")]
	public SplineComputer targetSpline
	{
		[Token(Token = "0x600040F")]
		[Address(RVA = "0x195CD38", Offset = "0x195CD38", VA = "0x195CD38")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600040E")]
	[Address(RVA = "0x195AB58", Offset = "0x195AB58", VA = "0x195AB58")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000410")]
	[Address(RVA = "0x195D028", Offset = "0x195D028", VA = "0x195D028")]
	[AttributeAttribute(Name = "EditorButtonAttribute", RVA = "0xD01E10", Offset = "0xD01E10")]
	private void UpdateSplineDeps()
	{
	}

	[Token(Token = "0x6000411")]
	[Address(RVA = "0x195D968", Offset = "0x195D968", VA = "0x195D968")]
	[AttributeAttribute(Name = "EditorButtonAttribute", RVA = "0xD01E20", Offset = "0xD01E20")]
	private void PrintSplineLength()
	{
	}

	[Token(Token = "0x6000412")]
	[Address(RVA = "0x195B1C4", Offset = "0x195B1C4", VA = "0x195B1C4")]
	[AttributeAttribute(Name = "EditorButtonAttribute", RVA = "0xD01E30", Offset = "0xD01E30")]
	private void GenerateSpiral()
	{
	}

	[Token(Token = "0x6000413")]
	[Address(RVA = "0x195C280", Offset = "0x195C280", VA = "0x195C280")]
	[AttributeAttribute(Name = "EditorButtonAttribute", RVA = "0xD01E40", Offset = "0xD01E40")]
	private void GenerateSpiralCube()
	{
	}

	[Token(Token = "0x6000414")]
	[Address(RVA = "0x195F7B0", Offset = "0x195F7B0", VA = "0x195F7B0")]
	[AttributeAttribute(Name = "EditorButtonAttribute", RVA = "0xD01E50", Offset = "0xD01E50")]
	private void GenerateTriangle()
	{
	}

	[Token(Token = "0x6000415")]
	[Address(RVA = "0x195E5B8", Offset = "0x195E5B8", VA = "0x195E5B8")]
	private void GenerateFromPattern(Vector3[] pattern)
	{
	}

	[Token(Token = "0x6000416")]
	[Address(RVA = "0x195DDEC", Offset = "0x195DDEC", VA = "0x195DDEC")]
	private void SetSplinePoints(List<SplinePoint> points)
	{
	}

	[Token(Token = "0x6000417")]
	[Address(RVA = "0x195FFA4", Offset = "0x195FFA4", VA = "0x195FFA4")]
	public LevelSplineGen()
	{
	}
}
[Token(Token = "0x20000AF")]
public class ScreenCameraController : MonoBehaviour
{
	[Token(Token = "0x400034D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ScreenCameraController Instance;

	[Token(Token = "0x400034E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Camera screenCamera;

	[Token(Token = "0x6000418")]
	[Address(RVA = "0x1A215C4", Offset = "0x1A215C4", VA = "0x1A215C4")]
	public static void SetFOV(float fov)
	{
	}

	[Token(Token = "0x6000419")]
	[Address(RVA = "0x1A21C58", Offset = "0x1A21C58", VA = "0x1A21C58")]
	public static float GetFOV()
	{
		return default(float);
	}

	[Token(Token = "0x600041A")]
	[Address(RVA = "0x1A222F4", Offset = "0x1A222F4", VA = "0x1A222F4")]
	private void Awake()
	{
	}

	[Token(Token = "0x600041B")]
	[Address(RVA = "0x1A226C0", Offset = "0x1A226C0", VA = "0x1A226C0")]
	public ScreenCameraController()
	{
	}
}
[Token(Token = "0x20000B0")]
public class SplineComponentsInstantiating : MonoBehaviour
{
	[Token(Token = "0x400034F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private SplineComputer comp;

	[Token(Token = "0x4000350")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private bool showSplineStartObject;

	[Token(Token = "0x4000351")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject splineStart;

	[Token(Token = "0x4000352")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private bool showSplineEndObject;

	[Token(Token = "0x4000353")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject splineEnd;

	[Token(Token = "0x4000354")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private GameObject[] prefabs;

	[Token(Token = "0x4000355")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<GameObject> instantiatedSplineComponents;

	[Token(Token = "0x600041C")]
	[Address(RVA = "0x1A2E454", Offset = "0x1A2E454", VA = "0x1A2E454")]
	private void Awake()
	{
	}

	[Token(Token = "0x600041D")]
	[Address(RVA = "0x1A31750", Offset = "0x1A31750", VA = "0x1A31750")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600041E")]
	[Address(RVA = "0x1A326C0", Offset = "0x1A326C0", VA = "0x1A326C0")]
	public SplineComponentsInstantiating()
	{
	}
}
[Token(Token = "0x20000B1")]
public class UiFovButton : MonoBehaviour, IPointerDownHandler, IEventSystemHandler
{
	[Token(Token = "0x4000356")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Camera targetCamera;

	[Token(Token = "0x4000357")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float fov;

	[Token(Token = "0x600041F")]
	[Address(RVA = "0x1775184", Offset = "0x1775184", VA = "0x1775184", Slot = "4")]
	public void OnPointerDown(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000420")]
	[Address(RVA = "0x1775554", Offset = "0x1775554", VA = "0x1775554")]
	public UiFovButton()
	{
	}
}
[Token(Token = "0x20000B2")]
public class HandDriverSetup : MonoBehaviour
{
	[Token(Token = "0x4000358")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TrackedPoseDriverOverride trackedPoseDriver;

	[Token(Token = "0x6000421")]
	[Address(RVA = "0x194BF64", Offset = "0x194BF64", VA = "0x194BF64")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000422")]
	[Address(RVA = "0x194C3A4", Offset = "0x194C3A4", VA = "0x194C3A4")]
	public HandDriverSetup()
	{
	}
}
[Token(Token = "0x20000B3")]
public class OculusInitializer : MonoBehaviour
{
	[Token(Token = "0x4000359")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject prefab;

	[Token(Token = "0x6000423")]
	[Address(RVA = "0x19E1CB0", Offset = "0x19E1CB0", VA = "0x19E1CB0")]
	public OculusInitializer()
	{
	}
}
[Token(Token = "0x20000B4")]
public class OvrEntitlementCheck : MonoBehaviour
{
	[Token(Token = "0x6000424")]
	[Address(RVA = "0x19FA768", Offset = "0x19FA768", VA = "0x19FA768")]
	public OvrEntitlementCheck()
	{
	}
}
[Token(Token = "0x20000B5")]
public class OvrOverlayController : MonoBehaviour
{
	[Token(Token = "0x400035A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject ovrManager;

	[Token(Token = "0x400035B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject ovrOverlay;

	[Token(Token = "0x6000425")]
	[Address(RVA = "0x19FA858", Offset = "0x19FA858", VA = "0x19FA858")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000426")]
	[Address(RVA = "0x19FABC8", Offset = "0x19FABC8", VA = "0x19FABC8")]
	public OvrOverlayController()
	{
	}
}
[Token(Token = "0x20000B6")]
public class Playground : MonoBehaviour
{
	[Token(Token = "0x6000427")]
	[Address(RVA = "0x1A0E328", Offset = "0x1A0E328", VA = "0x1A0E328")]
	public void TeleportTo(Vector3 position, Quaternion rotation)
	{
	}

	[Token(Token = "0x6000428")]
	[Address(RVA = "0x1A0E7BC", Offset = "0x1A0E7BC", VA = "0x1A0E7BC")]
	public Playground()
	{
	}
}
[Token(Token = "0x20000B7")]
public class TrackedPoseDriverOverride : TrackedPoseDriver
{
	[Token(Token = "0x400035C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly List<TrackedPoseDriverOverride> _instances;

	[Token(Token = "0x6000429")]
	[Address(RVA = "0x1751478", Offset = "0x1751478", VA = "0x1751478")]
	public static void SuspendAll(bool suspend)
	{
	}

	[Token(Token = "0x600042A")]
	[Address(RVA = "0x1751CE8", Offset = "0x1751CE8", VA = "0x1751CE8", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x600042B")]
	[Address(RVA = "0x17520D0", Offset = "0x17520D0", VA = "0x17520D0", Slot = "7")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x600042C")]
	[Address(RVA = "0x1752440", Offset = "0x1752440", VA = "0x1752440", Slot = "5")]
	protected override void OnDestroy()
	{
	}

	[Token(Token = "0x600042D")]
	[Address(RVA = "0x1752828", Offset = "0x1752828", VA = "0x1752828")]
	public TrackedPoseDriverOverride()
	{
	}
}
[Token(Token = "0x20000B8")]
public class DeviceClient : MonoBehaviour
{
	[Token(Token = "0x200019F")]
	public delegate void OnConnectSuccessDelegate();

	[Token(Token = "0x20001A0")]
	public delegate void OnConnectFailDelegate();

	[Token(Token = "0x20001A1")]
	private delegate void ProcessPacketDelegate(DevicePacketData packetData);

	[Token(Token = "0x20001A2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCF9BA0", Offset = "0xCF9BA0")]
	private sealed class <DelayDeviceRestore>d__41 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000807")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000808")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000809")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float fDelay;

		[Token(Token = "0x400080A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public DeviceClient <>4__this;

		[Token(Token = "0x17000170")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C81")]
			[Address(RVA = "0x15047A4", Offset = "0x15047A4", VA = "0x15047A4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000171")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C83")]
			[Address(RVA = "0x1504970", Offset = "0x1504970", VA = "0x1504970", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C7E")]
		[Address(RVA = "0x1502E90", Offset = "0x1502E90", VA = "0x1502E90")]
		[DebuggerHidden]
		public <DelayDeviceRestore>d__41(int <>1__state)
		{
		}

		[Token(Token = "0x6000C7F")]
		[Address(RVA = "0x15041E8", Offset = "0x15041E8", VA = "0x15041E8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C80")]
		[Address(RVA = "0x15042C8", Offset = "0x15042C8", VA = "0x15042C8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C82")]
		[Address(RVA = "0x1504890", Offset = "0x1504890", VA = "0x1504890", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400035D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OnConnectSuccessDelegate OnConnectSuccessCallback;

	[Token(Token = "0x400035E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OnConnectFailDelegate OnConnectFailCallback;

	[Token(Token = "0x400035F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private VRDeviceInteract _deviceInteract;

	[Token(Token = "0x4000360")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Socket _socket;

	[Token(Token = "0x4000361")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private string _ipAddress;

	[Token(Token = "0x4000362")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int _port;

	[Token(Token = "0x4000363")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private byte[] _receiveBuffer;

	[Token(Token = "0x4000364")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int _receiveBytes;

	[Token(Token = "0x4000365")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Queue<string> _packetQ;

	[Token(Token = "0x4000366")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private ProcessPacketDelegate[] _OnProcessPacketCallbacks;

	[Token(Token = "0x4000367")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool _needCallDeviceRestore;

	[Token(Token = "0x4000368")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCFC050", Offset = "0xCFC050")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xCFC050", Offset = "0xCFC050")]
	private VROverlayClient <_overlayClient>k__BackingField;

	[Token(Token = "0x4000369")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool _enableProcessPacket;

	[Token(Token = "0x1700005A")]
	public VROverlayClient _overlayClient
	{
		[Token(Token = "0x600042F")]
		[Address(RVA = "0x14F5810", Offset = "0x14F5810", VA = "0x14F5810")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD01E60", Offset = "0xD01E60")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000430")]
		[Address(RVA = "0x14F59C4", Offset = "0x14F59C4", VA = "0x14F59C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD01E70", Offset = "0xD01E70")]
		set
		{
		}
	}

	[Token(Token = "0x6000431")]
	[Address(RVA = "0x14F5B7C", Offset = "0x14F5B7C", VA = "0x14F5B7C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000432")]
	[Address(RVA = "0x14F7110", Offset = "0x14F7110", VA = "0x14F7110")]
	private void Start()
	{
	}

	[Token(Token = "0x6000433")]
	[Address(RVA = "0x14F7AC8", Offset = "0x14F7AC8", VA = "0x14F7AC8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000434")]
	[Address(RVA = "0x14F80A4", Offset = "0x14F80A4", VA = "0x14F80A4")]
	private void OnConnect(IAsyncResult ar)
	{
	}

	[Token(Token = "0x6000435")]
	[Address(RVA = "0x14F902C", Offset = "0x14F902C", VA = "0x14F902C")]
	private void StartReceiveData()
	{
	}

	[Token(Token = "0x6000436")]
	[Address(RVA = "0x14FA214", Offset = "0x14FA214", VA = "0x14FA214")]
	private void OnReceive(IAsyncResult ar)
	{
	}

	[Token(Token = "0x6000437")]
	[Address(RVA = "0x14FAC1C", Offset = "0x14FAC1C", VA = "0x14FAC1C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000438")]
	[Address(RVA = "0x14FB208", Offset = "0x14FB208", VA = "0x14FB208")]
	private void ProcessPacket()
	{
	}

	[Token(Token = "0x6000439")]
	[Address(RVA = "0x14FD45C", Offset = "0x14FD45C", VA = "0x14FD45C")]
	private void OnProcessPacket_None(DevicePacketData receivePacketData)
	{
	}

	[Token(Token = "0x600043A")]
	[Address(RVA = "0x14FD6DC", Offset = "0x14FD6DC", VA = "0x14FD6DC")]
	private void OnProcessPacket_SC_Ack_ChangeHMDLauncher(DevicePacketData receivePacketData)
	{
	}

	[Token(Token = "0x600043B")]
	[Address(RVA = "0x14FDCE0", Offset = "0x14FDCE0", VA = "0x14FDCE0")]
	private void OnProcessPacket_SC_Req_ChangeVRApp(DevicePacketData receivePacketData)
	{
	}

	[Token(Token = "0x600043C")]
	[Address(RVA = "0x14FE618", Offset = "0x14FE618", VA = "0x14FE618")]
	private void OnProcessPacket_SC_Req_QuitVRApp(DevicePacketData receivePacketData)
	{
	}

	[Token(Token = "0x600043D")]
	[Address(RVA = "0x14FEAF0", Offset = "0x14FEAF0", VA = "0x14FEAF0")]
	private void OnProcessPacket_SC_Ack_ShowHideOverlay(DevicePacketData receivePacketData)
	{
	}

	[Token(Token = "0x600043E")]
	[Address(RVA = "0x14FF4B0", Offset = "0x14FF4B0", VA = "0x14FF4B0")]
	private void OnProcessPacket_SC_Ack_SendVGSInfo(DevicePacketData receivePacketData)
	{
	}

	[Token(Token = "0x600043F")]
	[Address(RVA = "0x14FFB84", Offset = "0x14FFB84", VA = "0x14FFB84")]
	private void SendPacket(string sendJsonData)
	{
	}

	[Token(Token = "0x6000440")]
	[Address(RVA = "0x1500354", Offset = "0x1500354", VA = "0x1500354")]
	public void SendPacket_CS_Req_ChangeHMDLauncher()
	{
	}

	[Token(Token = "0x6000441")]
	[Address(RVA = "0x1500B18", Offset = "0x1500B18", VA = "0x1500B18")]
	public void SendPacket_CS_Ack_ChangeVRApp()
	{
	}

	[Token(Token = "0x6000442")]
	[Address(RVA = "0x15012DC", Offset = "0x15012DC", VA = "0x15012DC")]
	public void SendPacket_CS_Req_ShowHideOverlay(string request, string appName, string appFolderName, string windowHandle)
	{
	}

	[Token(Token = "0x6000443")]
	[Address(RVA = "0x1501E64", Offset = "0x1501E64", VA = "0x1501E64")]
	public void SendPacket_CS_Ack_ShowHideOverlay(string request, string result, string data)
	{
	}

	[Token(Token = "0x6000444")]
	[Address(RVA = "0x15026C0", Offset = "0x15026C0", VA = "0x15026C0")]
	public void SendPacket_CS_Ack_ErrorCode(eErrorCodeType errorCode)
	{
	}

	[Token(Token = "0x6000445")]
	[Address(RVA = "0x14F93D8", Offset = "0x14F93D8", VA = "0x14F93D8")]
	private void SendPacket_CS_Ack_GetVersionInfo()
	{
	}

	[Token(Token = "0x6000446")]
	[Address(RVA = "0x14F9A7C", Offset = "0x14F9A7C", VA = "0x14F9A7C")]
	private void SendPacket_CS_Req_SendVGSInfo()
	{
	}

	[Token(Token = "0x6000447")]
	[Address(RVA = "0x14FBEAC", Offset = "0x14FBEAC", VA = "0x14FBEAC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD01E80", Offset = "0xD01E80")]
	private IEnumerator DelayDeviceRestore(float fDelay)
	{
		return null;
	}

	[Token(Token = "0x6000448")]
	[Address(RVA = "0x1502F90", Offset = "0x1502F90", VA = "0x1502F90")]
	public void SetDeviceCallback(VRDeviceChange2.OnDeviceChangedDelegate OnDeviceBeforeChangeToNoneCallBack, VRDeviceChange2.OnDeviceChangedDelegate OnDeviceChangedToOpenVRCallBack)
	{
	}

	[Token(Token = "0x6000449")]
	[Address(RVA = "0x15034DC", Offset = "0x15034DC", VA = "0x15034DC")]
	public void SetDeviceBeforeChangeToNoneCallBack(VRDeviceChange2.OnDeviceChangedDelegate OnDeviceBeforeChangeToNoneCallBack)
	{
	}

	[Token(Token = "0x600044A")]
	[Address(RVA = "0x1503894", Offset = "0x1503894", VA = "0x1503894")]
	public void SetDeviceChangedToOpenVRCallBack(VRDeviceChange2.OnDeviceChangedDelegate OnDeviceChangedToOpenVRCallBack)
	{
	}

	[Token(Token = "0x600044B")]
	[Address(RVA = "0x1503C4C", Offset = "0x1503C4C", VA = "0x1503C4C")]
	public DeviceClient()
	{
	}
}
[Token(Token = "0x20000B9")]
public class StoveVRSDK : MonoBehaviour
{
	[Token(Token = "0x20001A3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCF9BB0", Offset = "0xCF9BB0")]
	private sealed class <WaitWhileConnectServer>d__20 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400080B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400080C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400080D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public StoveVRSDK <>4__this;

		[Token(Token = "0x400080E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <elapsedTime>5__1;

		[Token(Token = "0x17000172")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C87")]
			[Address(RVA = "0x1741B60", Offset = "0x1741B60", VA = "0x1741B60", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000173")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C89")]
			[Address(RVA = "0x1741D2C", Offset = "0x1741D2C", VA = "0x1741D2C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C84")]
		[Address(RVA = "0x173F5A4", Offset = "0x173F5A4", VA = "0x173F5A4")]
		[DebuggerHidden]
		public <WaitWhileConnectServer>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x6000C85")]
		[Address(RVA = "0x1740DB0", Offset = "0x1740DB0", VA = "0x1740DB0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C86")]
		[Address(RVA = "0x1740E90", Offset = "0x1740E90", VA = "0x1740E90", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C88")]
		[Address(RVA = "0x1741C4C", Offset = "0x1741C4C", VA = "0x1741C4C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400036A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static StoveVRSDK _instance;

	[Token(Token = "0x400036B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static bool _isFirstTimeAwake;

	[Token(Token = "0x400036C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private DeviceClient _deviceClient;

	[Token(Token = "0x400036D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Camera[] _playerCameras;

	[Token(Token = "0x400036E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private VROverlayClient _overlayClient;

	[Token(Token = "0x400036F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCFC08C", Offset = "0xCFC08C")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xCFC08C", Offset = "0xCFC08C")]
	private string <_versionInfo>k__BackingField;

	[Token(Token = "0x4000370")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool _isConnectSuccessToServer;

	[Token(Token = "0x4000371")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	private bool _isConnectFailToServer;

	[Token(Token = "0x1700005B")]
	public static StoveVRSDK instance
	{
		[Token(Token = "0x600044C")]
		[Address(RVA = "0x173C1F4", Offset = "0x173C1F4", VA = "0x173C1F4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700005C")]
	public string _versionInfo
	{
		[Token(Token = "0x600044D")]
		[Address(RVA = "0x173CF20", Offset = "0x173CF20", VA = "0x173CF20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD01EE4", Offset = "0xD01EE4")]
		get
		{
			return null;
		}
		[Token(Token = "0x600044E")]
		[Address(RVA = "0x173D0D4", Offset = "0x173D0D4", VA = "0x173D0D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD01EF4", Offset = "0xD01EF4")]
		private set
		{
		}
	}

	[Token(Token = "0x600044F")]
	[Address(RVA = "0x173D294", Offset = "0x173D294", VA = "0x173D294")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000450")]
	[Address(RVA = "0x173E248", Offset = "0x173E248", VA = "0x173E248")]
	private void Start()
	{
	}

	[Token(Token = "0x6000451")]
	[Address(RVA = "0x173EBEC", Offset = "0x173EBEC", VA = "0x173EBEC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000452")]
	[Address(RVA = "0x173C798", Offset = "0x173C798", VA = "0x173C798")]
	private static StoveVRSDK CreateInstance()
	{
		return null;
	}

	[Token(Token = "0x6000453")]
	[Address(RVA = "0x173EDFC", Offset = "0x173EDFC", VA = "0x173EDFC")]
	public void GetReady()
	{
	}

	[Token(Token = "0x6000454")]
	[Address(RVA = "0x173F00C", Offset = "0x173F00C", VA = "0x173F00C")]
	public void OnConnectSuccessToServer()
	{
	}

	[Token(Token = "0x6000455")]
	[Address(RVA = "0x173F2D0", Offset = "0x173F2D0", VA = "0x173F2D0")]
	public void OnConnectFailToServer()
	{
	}

	[Token(Token = "0x6000456")]
	[Address(RVA = "0x173EAD0", Offset = "0x173EAD0", VA = "0x173EAD0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD01F04", Offset = "0xD01F04")]
	private IEnumerator WaitWhileConnectServer()
	{
		return null;
	}

	[Token(Token = "0x6000457")]
	[Address(RVA = "0x173F6A4", Offset = "0x173F6A4", VA = "0x173F6A4")]
	public void SetAppName(string appName, string appFolderName)
	{
	}

	[Token(Token = "0x6000458")]
	[Address(RVA = "0x173FE08", Offset = "0x173FE08", VA = "0x173FE08")]
	public void SetOverlayCallBack(VROverlayClient.OnOverlayDelegate OnOverlayBeforeShowCallBack, VROverlayClient.OnOverlayDelegate OnOverlayAfterHideCallBack)
	{
	}

	[Token(Token = "0x6000459")]
	[Address(RVA = "0x174024C", Offset = "0x174024C", VA = "0x174024C")]
	public void UnSetOverlayCallBack(VROverlayClient.OnOverlayDelegate OnOverlayBeforeShowCallBack, VROverlayClient.OnOverlayDelegate OnOverlayAfterHideCallBack)
	{
	}

	[Token(Token = "0x600045A")]
	[Address(RVA = "0x1740690", Offset = "0x1740690", VA = "0x1740690")]
	private void QuitApplication()
	{
	}

	[Token(Token = "0x600045B")]
	[Address(RVA = "0x1740968", Offset = "0x1740968", VA = "0x1740968")]
	public StoveVRSDK()
	{
	}
}
[Token(Token = "0x20000BA")]
public class VRBlurOptimized : VRPostEffectsBase
{
	[Token(Token = "0x20001A4")]
	public enum BlurType
	{
		[Token(Token = "0x4000810")]
		StandardGauss,
		[Token(Token = "0x4000811")]
		SgxGauss
	}

	[Token(Token = "0x4000372")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCFC0C8", Offset = "0xCFC0C8")]
	public int downsample;

	[Token(Token = "0x4000373")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCFC0E0", Offset = "0xCFC0E0")]
	public float blurSize;

	[Token(Token = "0x4000374")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCFC0F8", Offset = "0xCFC0F8")]
	public int blurIterations;

	[Token(Token = "0x4000375")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public BlurType blurType;

	[Token(Token = "0x4000376")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Shader blurShader;

	[Token(Token = "0x4000377")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Material blurMaterial;

	[Token(Token = "0x600045D")]
	[Address(RVA = "0x178CF40", Offset = "0x178CF40", VA = "0x178CF40", Slot = "4")]
	public override bool CheckResources()
	{
		return default(bool);
	}

	[Token(Token = "0x600045E")]
	[Address(RVA = "0x178D4F0", Offset = "0x178D4F0", VA = "0x178D4F0")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x600045F")]
	[Address(RVA = "0x178D94C", Offset = "0x178D94C", VA = "0x178D94C")]
	public void OnRenderImage(RenderTexture source, RenderTexture destination)
	{
	}

	[Token(Token = "0x6000460")]
	[Address(RVA = "0x178F684", Offset = "0x178F684", VA = "0x178F684")]
	public VRBlurOptimized()
	{
	}
}
[Token(Token = "0x20000BB")]
public class VRDeviceChange2 : MonoBehaviour
{
	[Token(Token = "0x20001A5")]
	public enum eVRDeviceType
	{
		[Token(Token = "0x4000813")]
		None,
		[Token(Token = "0x4000814")]
		OpenVR
	}

	[Token(Token = "0x20001A6")]
	public delegate void OnDeviceChangedDelegate();

	[Token(Token = "0x20001A7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCF9BC0", Offset = "0xCF9BC0")]
	private sealed class <ChangeSteamVRStateToTransition>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000815")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000816")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000817")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VRDeviceChange2 <>4__this;

		[Token(Token = "0x17000174")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C91")]
			[Address(RVA = "0x162CFA8", Offset = "0x162CFA8", VA = "0x162CFA8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000175")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C93")]
			[Address(RVA = "0x162D174", Offset = "0x162D174", VA = "0x162D174", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C8E")]
		[Address(RVA = "0x162B9C0", Offset = "0x162B9C0", VA = "0x162B9C0")]
		[DebuggerHidden]
		public <ChangeSteamVRStateToTransition>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x6000C8F")]
		[Address(RVA = "0x162CB7C", Offset = "0x162CB7C", VA = "0x162CB7C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C90")]
		[Address(RVA = "0x162CC5C", Offset = "0x162CC5C", VA = "0x162CC5C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C92")]
		[Address(RVA = "0x162D094", Offset = "0x162D094", VA = "0x162D094", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001A8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCF9BD0", Offset = "0xCF9BD0")]
	private sealed class <ChangeSteamVRStateToRestore>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000818")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000819")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400081A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool bForce;

		[Token(Token = "0x400081B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public VRDeviceChange2 <>4__this;

		[Token(Token = "0x17000176")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C97")]
			[Address(RVA = "0x162C8C4", Offset = "0x162C8C4", VA = "0x162C8C4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000177")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C99")]
			[Address(RVA = "0x162CA90", Offset = "0x162CA90", VA = "0x162CA90", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C94")]
		[Address(RVA = "0x162BF50", Offset = "0x162BF50", VA = "0x162BF50")]
		[DebuggerHidden]
		public <ChangeSteamVRStateToRestore>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x6000C95")]
		[Address(RVA = "0x162C490", Offset = "0x162C490", VA = "0x162C490", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C96")]
		[Address(RVA = "0x162C570", Offset = "0x162C570", VA = "0x162C570", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C98")]
		[Address(RVA = "0x162C9B0", Offset = "0x162C9B0", VA = "0x162C9B0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000378")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool _isSteamVRTransitionState;

	[Token(Token = "0x4000379")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OnDeviceChangedDelegate OnDeviceBeforeChangeToOpenVRCallBack;

	[Token(Token = "0x400037A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OnDeviceChangedDelegate OnDeviceBeforeChangeToNoneCallBack;

	[Token(Token = "0x400037B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public OnDeviceChangedDelegate OnDeviceChangedToOpenVRCallBack;

	[Token(Token = "0x400037C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public OnDeviceChangedDelegate OnDeviceChangedToNoneCallBack;

	[Token(Token = "0x6000461")]
	[Address(RVA = "0x162B554", Offset = "0x162B554", VA = "0x162B554")]
	public void StartChangeSteamVRStateToTransition()
	{
	}

	[Token(Token = "0x6000462")]
	[Address(RVA = "0x162B8A4", Offset = "0x162B8A4", VA = "0x162B8A4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD01F68", Offset = "0xD01F68")]
	private IEnumerator ChangeSteamVRStateToTransition()
	{
		return null;
	}

	[Token(Token = "0x6000463")]
	[Address(RVA = "0x162BAC0", Offset = "0x162BAC0", VA = "0x162BAC0")]
	public void StartChangeSteamVRStateToRestore(bool bForce = false)
	{
	}

	[Token(Token = "0x6000464")]
	[Address(RVA = "0x162BE28", Offset = "0x162BE28", VA = "0x162BE28")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD01FCC", Offset = "0xD01FCC")]
	private IEnumerator ChangeSteamVRStateToRestore(bool bForce)
	{
		return null;
	}

	[Token(Token = "0x6000465")]
	[Address(RVA = "0x162C050", Offset = "0x162C050", VA = "0x162C050")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x6000466")]
	[Address(RVA = "0x162C260", Offset = "0x162C260", VA = "0x162C260")]
	public VRDeviceChange2()
	{
	}
}
[Token(Token = "0x20000BC")]
public class VRDeviceInteract : MonoBehaviour
{
	[Token(Token = "0x400037D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCFC110", Offset = "0xCFC110")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xCFC110", Offset = "0xCFC110")]
	private VRDeviceChange2 <_deviceChange>k__BackingField;

	[Token(Token = "0x400037E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool _isDeviceNone;

	[Token(Token = "0x1700005D")]
	public VRDeviceChange2 _deviceChange
	{
		[Token(Token = "0x6000467")]
		[Address(RVA = "0x162D4C0", Offset = "0x162D4C0", VA = "0x162D4C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD02030", Offset = "0xD02030")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000468")]
		[Address(RVA = "0x162D674", Offset = "0x162D674", VA = "0x162D674")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD02040", Offset = "0xD02040")]
		private set
		{
		}
	}

	[Token(Token = "0x6000469")]
	[Address(RVA = "0x162D834", Offset = "0x162D834", VA = "0x162D834")]
	private void Awake()
	{
	}

	[Token(Token = "0x600046A")]
	[Address(RVA = "0x162E64C", Offset = "0x162E64C", VA = "0x162E64C")]
	private void Update()
	{
	}

	[Token(Token = "0x600046B")]
	[Address(RVA = "0x162E85C", Offset = "0x162E85C", VA = "0x162E85C")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600046C")]
	[Address(RVA = "0x162ECA8", Offset = "0x162ECA8", VA = "0x162ECA8")]
	public void OnDeviceBeforeChangeToOpenVR()
	{
	}

	[Token(Token = "0x600046D")]
	[Address(RVA = "0x162EEB8", Offset = "0x162EEB8", VA = "0x162EEB8")]
	public void OnDeviceBeforeChangeToNone()
	{
	}

	[Token(Token = "0x600046E")]
	[Address(RVA = "0x162F0C8", Offset = "0x162F0C8", VA = "0x162F0C8")]
	public void OnDeviceChangedToOpenVR()
	{
	}

	[Token(Token = "0x600046F")]
	[Address(RVA = "0x162F338", Offset = "0x162F338", VA = "0x162F338")]
	public void OnDeviceChangedToNone()
	{
	}

	[Token(Token = "0x6000470")]
	[Address(RVA = "0x162F5AC", Offset = "0x162F5AC", VA = "0x162F5AC")]
	public void StartChangeSteamVRStateToTransition()
	{
	}

	[Token(Token = "0x6000471")]
	[Address(RVA = "0x162F900", Offset = "0x162F900", VA = "0x162F900")]
	public void StartChangeSteamVRStateToRestore()
	{
	}

	[Token(Token = "0x6000472")]
	[Address(RVA = "0x162FC58", Offset = "0x162FC58", VA = "0x162FC58")]
	public VRDeviceInteract()
	{
	}
}
[Token(Token = "0x20000BD")]
public class VROverlayBase : MonoBehaviour
{
	[Token(Token = "0x20001A9")]
	public enum eControllerPositionType
	{
		[Token(Token = "0x400081D")]
		Right,
		[Token(Token = "0x400081E")]
		Left
	}

	[Token(Token = "0x20001AA")]
	public enum eControllerButtonType
	{
		[Token(Token = "0x4000820")]
		Trigger,
		[Token(Token = "0x4000821")]
		Menu,
		[Token(Token = "0x4000822")]
		Touchpad,
		[Token(Token = "0x4000823")]
		Grip,
		[Token(Token = "0x4000824")]
		Max
	}

	[Token(Token = "0x400037F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCFC14C", Offset = "0xCFC14C")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xCFC14C", Offset = "0xCFC14C")]
	private Transform <_cameraTransform>k__BackingField;

	[Token(Token = "0x4000380")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCFC188", Offset = "0xCFC188")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xCFC188", Offset = "0xCFC188")]
	private string <_overlayKey>k__BackingField;

	[Token(Token = "0x4000381")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCFC1C4", Offset = "0xCFC1C4")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xCFC1C4", Offset = "0xCFC1C4")]
	private float <_scale>k__BackingField;

	[Token(Token = "0x4000382")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCFC200", Offset = "0xCFC200")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xCFC200", Offset = "0xCFC200")]
	private float <_additionalHeight>k__BackingField;

	[Token(Token = "0x4000383")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCFC23C", Offset = "0xCFC23C")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xCFC23C", Offset = "0xCFC23C")]
	private float <_distanceFromCamera>k__BackingField;

	[Token(Token = "0x4000384")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCFC278", Offset = "0xCFC278")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xCFC278", Offset = "0xCFC278")]
	private bool <_attachCamera>k__BackingField;

	[Token(Token = "0x4000385")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCFC2B4", Offset = "0xCFC2B4")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xCFC2B4", Offset = "0xCFC2B4")]
	private string <_windowHandle>k__BackingField;

	[Token(Token = "0x4000386")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCFC2F0", Offset = "0xCFC2F0")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xCFC2F0", Offset = "0xCFC2F0")]
	private string <_overlayBGImageFile>k__BackingField;

	[Token(Token = "0x1700005E")]
	public Transform _cameraTransform
	{
		[Token(Token = "0x6000473")]
		[Address(RVA = "0x162FE88", Offset = "0x162FE88", VA = "0x162FE88")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD02050", Offset = "0xD02050")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000474")]
		[Address(RVA = "0x163003C", Offset = "0x163003C", VA = "0x163003C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD02060", Offset = "0xD02060")]
		set
		{
		}
	}

	[Token(Token = "0x1700005F")]
	public string _overlayKey
	{
		[Token(Token = "0x6000475")]
		[Address(RVA = "0x16301FC", Offset = "0x16301FC", VA = "0x16301FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD02070", Offset = "0xD02070")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000476")]
		[Address(RVA = "0x16303B0", Offset = "0x16303B0", VA = "0x16303B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD02080", Offset = "0xD02080")]
		set
		{
		}
	}

	[Token(Token = "0x17000060")]
	public float _scale
	{
		[Token(Token = "0x6000477")]
		[Address(RVA = "0x1630570", Offset = "0x1630570", VA = "0x1630570")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD02090", Offset = "0xD02090")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000478")]
		[Address(RVA = "0x1630734", Offset = "0x1630734", VA = "0x1630734")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD020A0", Offset = "0xD020A0")]
		set
		{
		}
	}

	[Token(Token = "0x17000061")]
	public float _additionalHeight
	{
		[Token(Token = "0x6000479")]
		[Address(RVA = "0x16308FC", Offset = "0x16308FC", VA = "0x16308FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD020B0", Offset = "0xD020B0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600047A")]
		[Address(RVA = "0x1630AC0", Offset = "0x1630AC0", VA = "0x1630AC0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD020C0", Offset = "0xD020C0")]
		set
		{
		}
	}

	[Token(Token = "0x17000062")]
	public float _distanceFromCamera
	{
		[Token(Token = "0x600047B")]
		[Address(RVA = "0x1630C88", Offset = "0x1630C88", VA = "0x1630C88")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD020D0", Offset = "0xD020D0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600047C")]
		[Address(RVA = "0x1630E4C", Offset = "0x1630E4C", VA = "0x1630E4C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD020E0", Offset = "0xD020E0")]
		set
		{
		}
	}

	[Token(Token = "0x17000063")]
	public bool _attachCamera
	{
		[Token(Token = "0x600047D")]
		[Address(RVA = "0x1631014", Offset = "0x1631014", VA = "0x1631014")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD020F0", Offset = "0xD020F0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600047E")]
		[Address(RVA = "0x16311D8", Offset = "0x16311D8", VA = "0x16311D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD02100", Offset = "0xD02100")]
		set
		{
		}
	}

	[Token(Token = "0x17000064")]
	public string _windowHandle
	{
		[Token(Token = "0x600047F")]
		[Address(RVA = "0x16313A4", Offset = "0x16313A4", VA = "0x16313A4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD02110", Offset = "0xD02110")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000480")]
		[Address(RVA = "0x1631558", Offset = "0x1631558", VA = "0x1631558")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD02120", Offset = "0xD02120")]
		protected set
		{
		}
	}

	[Token(Token = "0x17000065")]
	public string _overlayBGImageFile
	{
		[Token(Token = "0x6000481")]
		[Address(RVA = "0x1631718", Offset = "0x1631718", VA = "0x1631718")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD02130", Offset = "0xD02130")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000482")]
		[Address(RVA = "0x16318CC", Offset = "0x16318CC", VA = "0x16318CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD02140", Offset = "0xD02140")]
		protected set
		{
		}
	}

	[Token(Token = "0x6000483")]
	[Address(RVA = "0x1631A8C", Offset = "0x1631A8C", VA = "0x1631A8C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000484")]
	[Address(RVA = "0x1632EB8", Offset = "0x1632EB8", VA = "0x1632EB8", Slot = "4")]
	public virtual void GetControllerButtonPressByTriggerNMenu(ref bool[] isPressedTrigger, ref bool[] isPressedMenu)
	{
	}

	[Token(Token = "0x6000485")]
	[Address(RVA = "0x16330DC", Offset = "0x16330DC", VA = "0x16330DC", Slot = "5")]
	public virtual void RequestShowOverlay()
	{
	}

	[Token(Token = "0x6000486")]
	[Address(RVA = "0x16332EC", Offset = "0x16332EC", VA = "0x16332EC", Slot = "6")]
	public virtual bool FindOverlay()
	{
		return default(bool);
	}

	[Token(Token = "0x6000487")]
	[Address(RVA = "0x1633558", Offset = "0x1633558", VA = "0x1633558", Slot = "7")]
	public virtual string GetOverlayError()
	{
		return null;
	}

	[Token(Token = "0x6000488")]
	[Address(RVA = "0x16337C8", Offset = "0x16337C8", VA = "0x16337C8", Slot = "8")]
	public virtual void ClearOverlay()
	{
	}

	[Token(Token = "0x6000489")]
	[Address(RVA = "0x16339D8", Offset = "0x16339D8", VA = "0x16339D8", Slot = "9")]
	public virtual void ProcessOverlayBeforeShow()
	{
	}

	[Token(Token = "0x600048A")]
	[Address(RVA = "0x1633BE8", Offset = "0x1633BE8", VA = "0x1633BE8", Slot = "10")]
	public virtual void MakeHMDMatrix()
	{
	}

	[Token(Token = "0x600048B")]
	[Address(RVA = "0x1633DF8", Offset = "0x1633DF8", VA = "0x1633DF8", Slot = "11")]
	public virtual void SetupOverlay()
	{
	}

	[Token(Token = "0x600048C")]
	[Address(RVA = "0x1634008", Offset = "0x1634008", VA = "0x1634008", Slot = "12")]
	public virtual bool UpdateOverlay()
	{
		return default(bool);
	}

	[Token(Token = "0x600048D")]
	[Address(RVA = "0x1634274", Offset = "0x1634274", VA = "0x1634274")]
	public VROverlayBase()
	{
	}
}
[Token(Token = "0x20000BE")]
public class VROverlayClient : MonoBehaviour
{
	[Token(Token = "0x20001AB")]
	public delegate void OnOverlayDelegate();

	[Token(Token = "0x4000387")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCFC32C", Offset = "0xCFC32C")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xCFC32C", Offset = "0xCFC32C")]
	private DeviceClient <_deviceClient>k__BackingField;

	[Token(Token = "0x4000388")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private VROverlayBase _overlayBase;

	[Token(Token = "0x4000389")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform _cameraTransform;

	[Token(Token = "0x400038A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float _elapsedTimeWhilePressedTrigger;

	[Token(Token = "0x400038B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float _elapsedTimeWhilePressedMenu;

	[Token(Token = "0x400038C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float _HotkeyInvokeTime;

	[Token(Token = "0x400038D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private bool _blockHotkey;

	[Token(Token = "0x400038E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
	private bool _isShowOverlay;

	[Token(Token = "0x400038F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private string _overlayKey;

	[Token(Token = "0x4000390")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float _scale;

	[Token(Token = "0x4000391")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float _additionalHeight;

	[Token(Token = "0x4000392")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float _distanceFromCamera;

	[Token(Token = "0x4000393")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public bool _attachCamera;

	[Token(Token = "0x4000394")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
	private bool _requestShowOverlay;

	[Token(Token = "0x4000395")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Transform _blurCameraTransform;

	[Token(Token = "0x4000396")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Camera _blurCamera;

	[Token(Token = "0x4000397")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private VRBlurOptimized _vrBlur;

	[Token(Token = "0x4000398")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCFC368", Offset = "0xCFC368")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xCFC368", Offset = "0xCFC368")]
	private string <_appName>k__BackingField;

	[Token(Token = "0x4000399")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCFC3A4", Offset = "0xCFC3A4")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xCFC3A4", Offset = "0xCFC3A4")]
	private string <_appFolderName>k__BackingField;

	[Token(Token = "0x400039A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public OnOverlayDelegate OnOverlayBeforeShowCallBack;

	[Token(Token = "0x400039B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public OnOverlayDelegate OnOverlayAfterHideCallBack;

	[Token(Token = "0x17000066")]
	public DeviceClient _deviceClient
	{
		[Token(Token = "0x600048E")]
		[Address(RVA = "0x1634364", Offset = "0x1634364", VA = "0x1634364")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD02150", Offset = "0xD02150")]
		get
		{
			return null;
		}
		[Token(Token = "0x600048F")]
		[Address(RVA = "0x1634518", Offset = "0x1634518", VA = "0x1634518")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD02160", Offset = "0xD02160")]
		set
		{
		}
	}

	[Token(Token = "0x17000067")]
	public string _appName
	{
		[Token(Token = "0x6000490")]
		[Address(RVA = "0x16346D8", Offset = "0x16346D8", VA = "0x16346D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD02170", Offset = "0xD02170")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000491")]
		[Address(RVA = "0x163488C", Offset = "0x163488C", VA = "0x163488C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD02180", Offset = "0xD02180")]
		set
		{
		}
	}

	[Token(Token = "0x17000068")]
	public string _appFolderName
	{
		[Token(Token = "0x6000492")]
		[Address(RVA = "0x1634A4C", Offset = "0x1634A4C", VA = "0x1634A4C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD02190", Offset = "0xD02190")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000493")]
		[Address(RVA = "0x1634C00", Offset = "0x1634C00", VA = "0x1634C00")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD021A0", Offset = "0xD021A0")]
		set
		{
		}
	}

	[Token(Token = "0x6000494")]
	[Address(RVA = "0x1634DC0", Offset = "0x1634DC0", VA = "0x1634DC0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000495")]
	[Address(RVA = "0x163531C", Offset = "0x163531C", VA = "0x163531C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000496")]
	[Address(RVA = "0x163666C", Offset = "0x163666C", VA = "0x163666C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000497")]
	[Address(RVA = "0x1635714", Offset = "0x1635714", VA = "0x1635714")]
	public void CreateVROverlayByDevice()
	{
	}

	[Token(Token = "0x6000498")]
	[Address(RVA = "0x1637FC4", Offset = "0x1637FC4", VA = "0x1637FC4")]
	private void DetectCamera()
	{
	}

	[Token(Token = "0x6000499")]
	[Address(RVA = "0x1638618", Offset = "0x1638618", VA = "0x1638618")]
	public void SetCameraTransform(Transform cameraTransform)
	{
	}

	[Token(Token = "0x600049A")]
	[Address(RVA = "0x1636A0C", Offset = "0x1636A0C", VA = "0x1636A0C")]
	private void UpdateInputHotkey()
	{
	}

	[Token(Token = "0x600049B")]
	[Address(RVA = "0x1639060", Offset = "0x1639060", VA = "0x1639060")]
	private void RequestShowHideOverlay(bool isShow)
	{
	}

	[Token(Token = "0x600049C")]
	[Address(RVA = "0x163B128", Offset = "0x163B128", VA = "0x163B128")]
	public void OnProcess_SC_Ack_ShowHideOverlay(DevicePacketDataOverlay receivePacketOverlay)
	{
	}

	[Token(Token = "0x600049D")]
	[Address(RVA = "0x163CF90", Offset = "0x163CF90", VA = "0x163CF90")]
	private void ShowHideOverlay(bool isShow)
	{
	}

	[Token(Token = "0x600049E")]
	[Address(RVA = "0x1637BAC", Offset = "0x1637BAC", VA = "0x1637BAC")]
	private void UpdateOverlay()
	{
	}

	[Token(Token = "0x600049F")]
	[Address(RVA = "0x163F25C", Offset = "0x163F25C", VA = "0x163F25C")]
	private void SetBlurCamera()
	{
	}

	[Token(Token = "0x60004A0")]
	[Address(RVA = "0x163F7E0", Offset = "0x163F7E0", VA = "0x163F7E0")]
	private void UnsetBlurCamera()
	{
	}

	[Token(Token = "0x60004A1")]
	[Address(RVA = "0x163FBB0", Offset = "0x163FBB0", VA = "0x163FBB0")]
	public VROverlayClient()
	{
	}
}
[Token(Token = "0x20000BF")]
public class VROverlayOculus : VROverlayBase
{
	[Token(Token = "0x60004A2")]
	[Address(RVA = "0x16401A4", Offset = "0x16401A4", VA = "0x16401A4")]
	public VROverlayOculus()
	{
	}
}
[Token(Token = "0x20000C0")]
public class VROverlayVive : VROverlayBase
{
	[Token(Token = "0x60004A3")]
	[Address(RVA = "0x1640290", Offset = "0x1640290", VA = "0x1640290")]
	public VROverlayVive()
	{
	}
}
[Token(Token = "0x20000C1")]
public class VRPostEffectsBase : MonoBehaviour
{
	[Token(Token = "0x400039C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool supportHDRTextures;

	[Token(Token = "0x400039D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	protected bool supportDX11;

	[Token(Token = "0x400039E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	protected bool isSupported;

	[Token(Token = "0x400039F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<Material> createdMaterials;

	[Token(Token = "0x60004A4")]
	[Address(RVA = "0x164037C", Offset = "0x164037C", VA = "0x164037C")]
	protected Material CheckShaderAndCreateMaterial(Shader s, Material m2Create)
	{
		return null;
	}

	[Token(Token = "0x60004A5")]
	[Address(RVA = "0x1641B48", Offset = "0x1641B48", VA = "0x1641B48")]
	protected Material CreateMaterial(Shader s, Material m2Create)
	{
		return null;
	}

	[Token(Token = "0x60004A6")]
	[Address(RVA = "0x16429E0", Offset = "0x16429E0", VA = "0x16429E0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60004A7")]
	[Address(RVA = "0x1642C54", Offset = "0x1642C54", VA = "0x1642C54")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60004A8")]
	[Address(RVA = "0x1642F2C", Offset = "0x1642F2C", VA = "0x1642F2C")]
	private void RemoveCreatedMaterials()
	{
	}

	[Token(Token = "0x60004A9")]
	[Address(RVA = "0x1643674", Offset = "0x1643674", VA = "0x1643674")]
	protected bool CheckSupport()
	{
		return default(bool);
	}

	[Token(Token = "0x60004AA")]
	[Address(RVA = "0x1644698", Offset = "0x1644698", VA = "0x1644698", Slot = "4")]
	public virtual bool CheckResources()
	{
		return default(bool);
	}

	[Token(Token = "0x60004AB")]
	[Address(RVA = "0x1644B0C", Offset = "0x1644B0C", VA = "0x1644B0C")]
	protected void Start()
	{
	}

	[Token(Token = "0x60004AC")]
	[Address(RVA = "0x1643958", Offset = "0x1643958", VA = "0x1643958")]
	protected bool CheckSupport(bool needDepth)
	{
		return default(bool);
	}

	[Token(Token = "0x60004AD")]
	[Address(RVA = "0x1644DEC", Offset = "0x1644DEC", VA = "0x1644DEC")]
	protected bool CheckSupport(bool needDepth, bool needHdr)
	{
		return default(bool);
	}

	[Token(Token = "0x60004AE")]
	[Address(RVA = "0x1645450", Offset = "0x1645450", VA = "0x1645450")]
	public bool Dx11Support()
	{
		return default(bool);
	}

	[Token(Token = "0x60004AF")]
	[Address(RVA = "0x16456CC", Offset = "0x16456CC", VA = "0x16456CC")]
	protected void ReportAutoDisable()
	{
	}

	[Token(Token = "0x60004B0")]
	[Address(RVA = "0x1645AD4", Offset = "0x1645AD4", VA = "0x1645AD4")]
	private bool CheckShader(Shader s)
	{
		return default(bool);
	}

	[Token(Token = "0x60004B1")]
	[Address(RVA = "0x16417B0", Offset = "0x16417B0", VA = "0x16417B0")]
	protected void NotSupported()
	{
	}

	[Token(Token = "0x60004B2")]
	[Address(RVA = "0x1646464", Offset = "0x1646464", VA = "0x1646464")]
	protected void DrawBorder(RenderTexture dest, Material material)
	{
	}

	[Token(Token = "0x60004B3")]
	[Address(RVA = "0x1649678", Offset = "0x1649678", VA = "0x1649678")]
	public VRPostEffectsBase()
	{
	}
}
[Token(Token = "0x20000C2")]
public class VRControllerInputModule : BaseInputModule
{
	[Token(Token = "0x40003A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static VRControllerInputModule Instance;

	[Token(Token = "0x40003A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Vector3 LaserPointerPos;

	[Token(Token = "0x40003A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool _handActive;

	[Token(Token = "0x40003A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private static bool _initialized;

	[Token(Token = "0x40003A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCFC3E0", Offset = "0xCFC3E0")]
	public float dragThreshold;

	[Token(Token = "0x40003A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private LineRenderer laser;

	[Token(Token = "0x40003A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private ExtendedPointerEventData m_pointerEventData;

	[Token(Token = "0x40003A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float m_pressedDistance;

	[Token(Token = "0x40003A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private GameObject pointerObject;

	[Token(Token = "0x40003A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private Transform vrPointer;

	[Token(Token = "0x40003AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Transform leftHandTransform;

	[Token(Token = "0x40003AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Transform rightHandTransform;

	[Token(Token = "0x40003AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Transform desktopHmdTransform;

	[Token(Token = "0x40003AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private bool m_isButtonPressed;

	[Token(Token = "0x40003AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
	private bool m_isButtonPressedChanged;

	[Token(Token = "0x60004B4")]
	[Address(RVA = "0x178FAA0", Offset = "0x178FAA0", VA = "0x178FAA0")]
	private bool IsButtonReleasedThisFrame()
	{
		return default(bool);
	}

	[Token(Token = "0x60004B5")]
	[Address(RVA = "0x178FC6C", Offset = "0x178FC6C", VA = "0x178FC6C")]
	private bool IsButtonPressedThisFrame()
	{
		return default(bool);
	}

	[Token(Token = "0x60004B6")]
	[Address(RVA = "0x178FE38", Offset = "0x178FE38", VA = "0x178FE38")]
	[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0xD021B0", Offset = "0xD021B0")]
	private static void Initialize()
	{
	}

	[Token(Token = "0x60004B7")]
	[Address(RVA = "0x1790194", Offset = "0x1790194", VA = "0x1790194")]
	private static void GameSceneLoaderOnLevelLoaded()
	{
	}

	[Token(Token = "0x60004B8")]
	[Address(RVA = "0x1790404", Offset = "0x1790404", VA = "0x1790404", Slot = "6")]
	protected override void Start()
	{
	}

	[Token(Token = "0x60004B9")]
	[Address(RVA = "0x179224C", Offset = "0x179224C", VA = "0x179224C", Slot = "17")]
	public override void Process()
	{
	}

	[Token(Token = "0x60004BA")]
	[Address(RVA = "0x1792A84", Offset = "0x1792A84", VA = "0x1792A84")]
	private void UpdateControllerData(bool stateDown)
	{
	}

	[Token(Token = "0x60004BB")]
	[Address(RVA = "0x179096C", Offset = "0x179096C", VA = "0x179096C")]
	private void UpdateVisual(bool stateDown, bool rightHand, bool leftHand)
	{
	}

	[Token(Token = "0x60004BC")]
	[Address(RVA = "0x1792F58", Offset = "0x1792F58", VA = "0x1792F58")]
	private void ProcessControllerEvent()
	{
	}

	[Token(Token = "0x60004BD")]
	[Address(RVA = "0x17934A8", Offset = "0x17934A8", VA = "0x17934A8")]
	private ExtendedPointerEventData GetPointerEventData()
	{
		return null;
	}

	[Token(Token = "0x60004BE")]
	[Address(RVA = "0x179AD9C", Offset = "0x179AD9C", VA = "0x179AD9C")]
	private RaycastResult PerformRaycast(ExtendedPointerEventData eventData)
	{
		return default(RaycastResult);
	}

	[Token(Token = "0x60004BF")]
	[Address(RVA = "0x1799298", Offset = "0x1799298", VA = "0x1799298")]
	private void ProcessDrag(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60004C0")]
	[Address(RVA = "0x179B710", Offset = "0x179B710", VA = "0x179B710")]
	private bool ShouldStartDrag(PointerEventData eventData)
	{
		return default(bool);
	}

	[Token(Token = "0x60004C1")]
	[Address(RVA = "0x1794A00", Offset = "0x1794A00", VA = "0x1794A00")]
	private void ProcessMove(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60004C2")]
	[Address(RVA = "0x1795AC8", Offset = "0x1795AC8", VA = "0x1795AC8")]
	private void ProcessPress(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60004C3")]
	[Address(RVA = "0x179BC6C", Offset = "0x179BC6C", VA = "0x179BC6C")]
	private void DeselectIfSelectionChanged(GameObject currentOverGo, BaseEventData pointerEvent)
	{
	}

	[Token(Token = "0x60004C4")]
	[Address(RVA = "0x179C410", Offset = "0x179C410", VA = "0x179C410")]
	private bool SendUpdateEventToSelectedObject()
	{
		return default(bool);
	}

	[Token(Token = "0x60004C5")]
	[Address(RVA = "0x179CD80", Offset = "0x179CD80", VA = "0x179CD80")]
	public VRControllerInputModule()
	{
	}
}
namespace DeviceNetwork
{
	[Token(Token = "0x20000C3")]
	public enum DeviceNetworkProtocol
	{
		[Token(Token = "0x40003B0")]
		None,
		[Token(Token = "0x40003B1")]
		CS_Req_ChangeHMDLauncher,
		[Token(Token = "0x40003B2")]
		CS_Ack_ChangeVRApp,
		[Token(Token = "0x40003B3")]
		SC_Ack_ChangeHMDLauncher,
		[Token(Token = "0x40003B4")]
		SC_Req_ChangeVRApp,
		[Token(Token = "0x40003B5")]
		SC_Req_QuitVRApp,
		[Token(Token = "0x40003B6")]
		CS_Req_ShowHideOverlay,
		[Token(Token = "0x40003B7")]
		SC_Ack_ShowHideOverlay,
		[Token(Token = "0x40003B8")]
		CS_Ack_ShowHideOverlay,
		[Token(Token = "0x40003B9")]
		SC_Req_ErrorCode,
		[Token(Token = "0x40003BA")]
		CS_Ack_ErrorCode,
		[Token(Token = "0x40003BB")]
		SC_Req_GetVersionInfo,
		[Token(Token = "0x40003BC")]
		CS_Ack_GetVersionInfo,
		[Token(Token = "0x40003BD")]
		CS_Req_SendVGSInfo,
		[Token(Token = "0x40003BE")]
		SC_Ack_SendVGSInfo,
		[Token(Token = "0x40003BF")]
		Max
	}
	[Token(Token = "0x20000C4")]
	public enum eErrorCodeType
	{
		[Token(Token = "0x40003C1")]
		None,
		[Token(Token = "0x40003C2")]
		AppQuitByFailedConnectToVGS,
		[Token(Token = "0x40003C3")]
		Max
	}
	[Serializable]
	[Token(Token = "0x20000C5")]
	public class DevicePacketData
	{
		[Token(Token = "0x40003C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int Protocol;

		[Token(Token = "0x40003C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string Data;

		[Token(Token = "0x60004C6")]
		[Address(RVA = "0x14FBFD8", Offset = "0x14FBFD8", VA = "0x14FBFD8")]
		public DevicePacketData()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000C6")]
	public class DevicePacketDataOverlay
	{
		[Token(Token = "0x40003C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string Request;

		[Token(Token = "0x40003C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string Result;

		[Token(Token = "0x40003C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string Data;

		[Token(Token = "0x60004C7")]
		[Address(RVA = "0x14FF20C", Offset = "0x14FF20C", VA = "0x14FF20C")]
		public DevicePacketDataOverlay()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000C7")]
	public class DevicePacketDataOverlayAppName
	{
		[Token(Token = "0x40003C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string AppName;

		[Token(Token = "0x40003CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string AppFolderName;

		[Token(Token = "0x40003CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string WindowHandle;

		[Token(Token = "0x60004C8")]
		[Address(RVA = "0x1501D74", Offset = "0x1501D74", VA = "0x1501D74")]
		public DevicePacketDataOverlayAppName()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000C8")]
	public class DevicePacketDataOverlaySetting
	{
		[Token(Token = "0x40003CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string OverlayKey;

		[Token(Token = "0x40003CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float Scale;

		[Token(Token = "0x40003CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float AdditionalHeight;

		[Token(Token = "0x40003CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float DistanceFromCamera;

		[Token(Token = "0x60004C9")]
		[Address(RVA = "0x1504B34", Offset = "0x1504B34", VA = "0x1504B34")]
		public DevicePacketDataOverlaySetting()
		{
		}
	}
	[Token(Token = "0x20000C9")]
	public static class JsonUtilityCustom
	{
		[Token(Token = "0x60004CA")]
		public static T FromJson<T>(T instance, string data) where T : class
		{
			return null;
		}
	}
}
namespace EditorHelpers
{
	[Token(Token = "0x20000CA")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xCF8E80", Offset = "0xCF8E80")]
	public sealed class EditorButtonAttribute : Attribute
	{
		[Token(Token = "0x40003D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ButtonMode mode;

		[Token(Token = "0x60004CB")]
		[Address(RVA = "0x342295C", Offset = "0x342295C", VA = "0x342295C")]
		public EditorButtonAttribute()
		{
		}

		[Token(Token = "0x60004CC")]
		[Address(RVA = "0x3422C90", Offset = "0x3422C90", VA = "0x3422C90")]
		public EditorButtonAttribute(ButtonMode mode)
		{
		}
	}
	[Token(Token = "0x20000CB")]
	public enum ButtonMode
	{
		[Token(Token = "0x40003D2")]
		AlwaysEnabled,
		[Token(Token = "0x40003D3")]
		EnabledInPlayMode,
		[Token(Token = "0x40003D4")]
		DisabledInPlayMode
	}
}
namespace Pool
{
	[Token(Token = "0x20000CC")]
	public class PoolManager : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20001AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCF9BE0", Offset = "0xCF9BE0")]
		private sealed class <>c
		{
			[Token(Token = "0x4000825")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000826")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<GameObject> <>9__4_0;

			[Token(Token = "0x6000C9F")]
			[Address(RVA = "0x1A12068", Offset = "0x1A12068", VA = "0x1A12068")]
			public <>c()
			{
			}

			[Token(Token = "0x6000CA0")]
			[Address(RVA = "0x1A12158", Offset = "0x1A12158", VA = "0x1A12158")]
			internal bool <GetObjectForType>b__4_0(GameObject x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40003D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private PoolSettings poolSettings;

		[Token(Token = "0x40003D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static GameObject _containerObject;

		[Token(Token = "0x40003D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Dictionary<string, List<GameObject>> _pool;

		[Token(Token = "0x60004CD")]
		[Address(RVA = "0x1A0E8E8", Offset = "0x1A0E8E8", VA = "0x1A0E8E8")]
		public void Awake()
		{
		}

		[Token(Token = "0x60004CE")]
		[Address(RVA = "0x1A0FCBC", Offset = "0x1A0FCBC", VA = "0x1A0FCBC")]
		public static GameObject GetObjectForType(string objectType, bool onlyPooled, [Optional] Vector3 position, [Optional] Quaternion rotation)
		{
			return null;
		}

		[Token(Token = "0x60004CF")]
		[Address(RVA = "0x1A10BB0", Offset = "0x1A10BB0", VA = "0x1A10BB0")]
		private static GameObject GetObjectFromPool(GameObject pooledObject, [Optional] Vector3 position, [Optional] Quaternion rotation)
		{
			return null;
		}

		[Token(Token = "0x60004D0")]
		[Address(RVA = "0x1A0F2D8", Offset = "0x1A0F2D8", VA = "0x1A0F2D8")]
		public static void AddPoolEntry(GameObject obj, int count)
		{
		}

		[Token(Token = "0x60004D1")]
		[Address(RVA = "0x19EF9A8", Offset = "0x19EF9A8", VA = "0x19EF9A8")]
		public static void PoolObject(GameObject obj)
		{
		}

		[Token(Token = "0x60004D2")]
		[Address(RVA = "0x1A112A0", Offset = "0x1A112A0", VA = "0x1A112A0")]
		private static void AddToPool(GameObject obj)
		{
		}

		[Token(Token = "0x60004D3")]
		[Address(RVA = "0x1A11E6C", Offset = "0x1A11E6C", VA = "0x1A11E6C")]
		public PoolManager()
		{
		}
	}
	[Token(Token = "0x20000CD")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCF8E94", Offset = "0xCF8E94")]
	public class PoolSettings : ScriptableObject
	{
		[Token(Token = "0x40003D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ObjectPoolEntry[] Entries;

		[Token(Token = "0x60004D4")]
		[Address(RVA = "0x1A123A8", Offset = "0x1A123A8", VA = "0x1A123A8")]
		public PoolSettings()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000CE")]
	public struct ObjectPoolEntry
	{
		[Token(Token = "0x40003D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public GameObject Prefab;

		[Token(Token = "0x40003DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int Count;
	}
}
namespace UpdateProvider
{
	[Token(Token = "0x20000CF")]
	public class UpdateProvider : MonoBehaviour
	{
		[Token(Token = "0x40003DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Action OnUpdate;

		[Token(Token = "0x40003DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private UpdateProvider _instance;

		[Token(Token = "0x60004D5")]
		[Address(RVA = "0x178C694", Offset = "0x178C694", VA = "0x178C694")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0xD021C4", Offset = "0xD021C4")]
		private static void CreateInstanceBinder()
		{
		}

		[Token(Token = "0x60004D6")]
		[Address(RVA = "0x178CB60", Offset = "0x178CB60", VA = "0x178CB60")]
		private void Update()
		{
		}

		[Token(Token = "0x60004D7")]
		[Address(RVA = "0x178CE50", Offset = "0x178CE50", VA = "0x178CE50")]
		public UpdateProvider()
		{
		}
	}
}
namespace UnityEngine.Experimental.Rendering
{
	[Token(Token = "0x20000D0")]
	public class SRPBatcherProfiler : MonoBehaviour
	{
		[Token(Token = "0x20001AD")]
		internal class RecorderEntry
		{
			[Token(Token = "0x4000827")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string name;

			[Token(Token = "0x4000828")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string oldName;

			[Token(Token = "0x4000829")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int callCount;

			[Token(Token = "0x400082A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public float accTime;

			[Token(Token = "0x400082B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Recorder recorder;

			[Token(Token = "0x6000CA1")]
			[Address(RVA = "0x178C5A4", Offset = "0x178C5A4", VA = "0x178C5A4")]
			public RecorderEntry()
			{
			}
		}

		[Token(Token = "0x20001AE")]
		private enum SRPBMarkers
		{
			[Token(Token = "0x400082D")]
			kStdRenderDraw,
			[Token(Token = "0x400082E")]
			kStdShadowDraw,
			[Token(Token = "0x400082F")]
			kSRPBRenderDraw,
			[Token(Token = "0x4000830")]
			kSRPBShadowDraw,
			[Token(Token = "0x4000831")]
			kRenderThreadIdle,
			[Token(Token = "0x4000832")]
			kStdRenderApplyShader,
			[Token(Token = "0x4000833")]
			kStdShadowApplyShader,
			[Token(Token = "0x4000834")]
			kSRPBRenderApplyShader,
			[Token(Token = "0x4000835")]
			kSRPBShadowApplyShader,
			[Token(Token = "0x4000836")]
			kPrepareBatchRendererGroupNodes
		}

		[Token(Token = "0x40003DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool m_Enable;

		[Token(Token = "0x40003DE")]
		private const float kAverageStatDuration = 1f;

		[Token(Token = "0x40003DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private int m_frameCount;

		[Token(Token = "0x40003E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float m_AccDeltaTime;

		[Token(Token = "0x40003E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string m_statsLabel;

		[Token(Token = "0x40003E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private GUIStyle m_style;

		[Token(Token = "0x40003E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool m_oldBatcherEnable;

		[Token(Token = "0x40003E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private RecorderEntry[] recordersList;

		[Token(Token = "0x60004D8")]
		[Address(RVA = "0x1785C84", Offset = "0x1785C84", VA = "0x1785C84")]
		private void Awake()
		{
		}

		[Token(Token = "0x60004D9")]
		[Address(RVA = "0x1787298", Offset = "0x1787298", VA = "0x1787298")]
		private void RazCounters()
		{
		}

		[Token(Token = "0x60004DA")]
		[Address(RVA = "0x1786F54", Offset = "0x1786F54", VA = "0x1786F54")]
		private void ResetStats()
		{
		}

		[Token(Token = "0x60004DB")]
		[Address(RVA = "0x178798C", Offset = "0x178798C", VA = "0x178798C")]
		private void ToggleStats()
		{
		}

		[Token(Token = "0x60004DC")]
		[Address(RVA = "0x1787CD0", Offset = "0x1787CD0", VA = "0x1787CD0")]
		private void Update()
		{
		}

		[Token(Token = "0x60004DD")]
		[Address(RVA = "0x178AAF4", Offset = "0x178AAF4", VA = "0x178AAF4")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x60004DE")]
		[Address(RVA = "0x178BA78", Offset = "0x178BA78", VA = "0x178BA78")]
		public SRPBatcherProfiler()
		{
		}
	}
}
namespace EpicToonFX
{
	[Token(Token = "0x20000D1")]
	public class ETFXLightFade : MonoBehaviour
	{
		[Token(Token = "0x40003E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCFC458", Offset = "0xCFC458")]
		public float life;

		[Token(Token = "0x40003E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool killAfterLife;

		[Token(Token = "0x40003E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Light li;

		[Token(Token = "0x40003E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float initIntensity;

		[Token(Token = "0x60004DF")]
		[Address(RVA = "0x3423B04", Offset = "0x3423B04", VA = "0x3423B04")]
		private void Start()
		{
		}

		[Token(Token = "0x60004E0")]
		[Address(RVA = "0x34244C8", Offset = "0x34244C8", VA = "0x34244C8")]
		private void Update()
		{
		}

		[Token(Token = "0x60004E1")]
		[Address(RVA = "0x3424BDC", Offset = "0x3424BDC", VA = "0x3424BDC")]
		public ETFXLightFade()
		{
		}
	}
}
namespace Zooma
{
	[Token(Token = "0x20000D2")]
	public static class AppInfo
	{
		[Token(Token = "0x60004E2")]
		[Address(RVA = "0x164AFD8", Offset = "0x164AFD8", VA = "0x164AFD8")]
		public static string GetStoreName()
		{
			return null;
		}

		[Token(Token = "0x60004E3")]
		[Address(RVA = "0x164C238", Offset = "0x164C238", VA = "0x164C238")]
		public static string GetHmdName()
		{
			return null;
		}
	}
	[Token(Token = "0x20000D3")]
	public class HandController : MonoBehaviour
	{
		[Token(Token = "0x20001AF")]
		public enum Hand
		{
			[Token(Token = "0x4000838")]
			Left,
			[Token(Token = "0x4000839")]
			Right
		}

		[Token(Token = "0x40003E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Hand hand;

		[Token(Token = "0x60004E4")]
		[Address(RVA = "0x167B4DC", Offset = "0x167B4DC", VA = "0x167B4DC")]
		public HandController()
		{
		}
	}
	[Token(Token = "0x20000D4")]
	public class LaserPointer : MonoBehaviour
	{
		[Token(Token = "0x40003EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LineRenderer laserLine;

		[Token(Token = "0x40003EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform tip;

		[Token(Token = "0x40003EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float length;

		[Token(Token = "0x60004E5")]
		[Address(RVA = "0x1684534", Offset = "0x1684534", VA = "0x1684534")]
		private void Update()
		{
		}

		[Token(Token = "0x60004E6")]
		[Address(RVA = "0x168480C", Offset = "0x168480C", VA = "0x168480C")]
		private void Raycast()
		{
		}

		[Token(Token = "0x60004E7")]
		[Address(RVA = "0x16864EC", Offset = "0x16864EC", VA = "0x16864EC")]
		public LaserPointer()
		{
		}
	}
	[Token(Token = "0x20000D5")]
	public class ZoomaInput : MonoBehaviour
	{
		[Token(Token = "0x40003ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Vector3 PlayerOriginOffset;

		[Token(Token = "0x40003EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public static Quaternion PlayerOriginRotation;

		[Token(Token = "0x40003EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private static bool isInputEnabled;

		[Token(Token = "0x40003F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
		public static ActionState LeftFireState;

		[Token(Token = "0x40003F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F")]
		public static ActionState RightFireState;

		[Token(Token = "0x40003F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public static ActionState MenuState;

		[Token(Token = "0x40003F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
		public static ActionState RecenterState;

		[Token(Token = "0x40003F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		public static ActionState PresenceState;

		[Token(Token = "0x40003F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x27")]
		public static ActionState EscState;

		[Token(Token = "0x40003F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public static Vector2 LookState;

		[Token(Token = "0x40003F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public static Vector2 MoveState;

		[Token(Token = "0x40003F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public static Vector2 ScrollState;

		[Token(Token = "0x40003FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ZoomaInputMap commonInputMap;

		[Token(Token = "0x40003FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ActionStateReader actionStateReader;

		[Token(Token = "0x14000016")]
		public static event Action LeftFire
		{
			[Token(Token = "0x60004EF")]
			[Address(RVA = "0x168EF58", Offset = "0x168EF58", VA = "0x168EF58")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD021D8", Offset = "0xD021D8")]
			add
			{
			}
			[Token(Token = "0x60004F0")]
			[Address(RVA = "0x168F10C", Offset = "0x168F10C", VA = "0x168F10C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD021E8", Offset = "0xD021E8")]
			remove
			{
			}
		}

		[Token(Token = "0x14000017")]
		public static event Action RightFire
		{
			[Token(Token = "0x60004F1")]
			[Address(RVA = "0x168F2C0", Offset = "0x168F2C0", VA = "0x168F2C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD021F8", Offset = "0xD021F8")]
			add
			{
			}
			[Token(Token = "0x60004F2")]
			[Address(RVA = "0x168F474", Offset = "0x168F474", VA = "0x168F474")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD02208", Offset = "0xD02208")]
			remove
			{
			}
		}

		[Token(Token = "0x14000018")]
		public static event Action MenuPressed
		{
			[Token(Token = "0x60004F3")]
			[Address(RVA = "0x168F628", Offset = "0x168F628", VA = "0x168F628")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD02218", Offset = "0xD02218")]
			add
			{
			}
			[Token(Token = "0x60004F4")]
			[Address(RVA = "0x168F7DC", Offset = "0x168F7DC", VA = "0x168F7DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD02228", Offset = "0xD02228")]
			remove
			{
			}
		}

		[Token(Token = "0x60004E8")]
		[Address(RVA = "0x168CE28", Offset = "0x168CE28", VA = "0x168CE28")]
		public static bool IsDevToolsKeyDown()
		{
			return default(bool);
		}

		[Token(Token = "0x60004E9")]
		[Address(RVA = "0x168D3A8", Offset = "0x168D3A8", VA = "0x168D3A8")]
		public static void LockAndHideCursor()
		{
		}

		[Token(Token = "0x60004EA")]
		[Address(RVA = "0x168D738", Offset = "0x168D738", VA = "0x168D738")]
		public static void ReleaseCursor()
		{
		}

		[Token(Token = "0x60004EB")]
		[Address(RVA = "0x168DAD0", Offset = "0x168DAD0", VA = "0x168DAD0")]
		public static void HapticImpulseLeft()
		{
		}

		[Token(Token = "0x60004EC")]
		[Address(RVA = "0x168EC70", Offset = "0x168EC70", VA = "0x168EC70")]
		public static void HapticImpulseRight()
		{
		}

		[Token(Token = "0x60004ED")]
		[Address(RVA = "0x168DDB8", Offset = "0x168DDB8", VA = "0x168DDB8")]
		private static void SendHapticImpulse(InputDeviceCharacteristics hand)
		{
		}

		[Token(Token = "0x60004EE")]
		[Address(RVA = "0x167D364", Offset = "0x167D364", VA = "0x167D364")]
		public static void EnableInput(bool enable)
		{
		}

		[Token(Token = "0x60004F5")]
		[Address(RVA = "0x168F990", Offset = "0x168F990", VA = "0x168F990")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xD02238", Offset = "0xD02238")]
		private void Log(object message)
		{
		}

		[Token(Token = "0x60004F6")]
		[Address(RVA = "0x168FC68", Offset = "0x168FC68", VA = "0x168FC68")]
		private void Awake()
		{
		}

		[Token(Token = "0x60004F7")]
		[Address(RVA = "0x1690120", Offset = "0x1690120", VA = "0x1690120")]
		private void InitInput()
		{
		}

		[Token(Token = "0x60004F8")]
		[Address(RVA = "0x16907DC", Offset = "0x16907DC", VA = "0x16907DC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60004F9")]
		[Address(RVA = "0x1690AC8", Offset = "0x1690AC8", VA = "0x1690AC8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60004FA")]
		[Address(RVA = "0x1690DB4", Offset = "0x1690DB4", VA = "0x1690DB4")]
		private void Update()
		{
		}

		[Token(Token = "0x60004FB")]
		[Address(RVA = "0x169108C", Offset = "0x169108C", VA = "0x169108C")]
		private void ProcessActions()
		{
		}

		[Token(Token = "0x60004FC")]
		[Address(RVA = "0x1692E80", Offset = "0x1692E80", VA = "0x1692E80")]
		private void ProcessClickFeedback()
		{
		}

		[Token(Token = "0x60004FD")]
		[Address(RVA = "0x1693410", Offset = "0x1693410", VA = "0x1693410")]
		public ZoomaInput()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000D6")]
	public struct ActionState
	{
		[Token(Token = "0x40003FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool activated;

		[Token(Token = "0x40003FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		public bool active;

		[Token(Token = "0x60004FF")]
		[Address(RVA = "0x164ACD4", Offset = "0x164ACD4", VA = "0x164ACD4")]
		public void Update(bool isActive)
		{
		}
	}
	[Token(Token = "0x20000D7")]
	internal class EmptyActionStateReader : ActionStateReader
	{
		[Token(Token = "0x6000500")]
		[Address(RVA = "0x166A5D0", Offset = "0x166A5D0", VA = "0x166A5D0", Slot = "4")]
		public bool LeftFireState()
		{
			return default(bool);
		}

		[Token(Token = "0x6000501")]
		[Address(RVA = "0x166A784", Offset = "0x166A784", VA = "0x166A784", Slot = "5")]
		public bool RightFireState()
		{
			return default(bool);
		}

		[Token(Token = "0x6000502")]
		[Address(RVA = "0x166A938", Offset = "0x166A938", VA = "0x166A938", Slot = "6")]
		public bool MenuState()
		{
			return default(bool);
		}

		[Token(Token = "0x6000503")]
		[Address(RVA = "0x166AAEC", Offset = "0x166AAEC", VA = "0x166AAEC", Slot = "7")]
		public bool UiTapState()
		{
			return default(bool);
		}

		[Token(Token = "0x6000504")]
		[Address(RVA = "0x166ACA0", Offset = "0x166ACA0", VA = "0x166ACA0", Slot = "8")]
		public bool RecenterState()
		{
			return default(bool);
		}

		[Token(Token = "0x6000505")]
		[Address(RVA = "0x166AE54", Offset = "0x166AE54", VA = "0x166AE54", Slot = "9")]
		public bool PresenceState()
		{
			return default(bool);
		}

		[Token(Token = "0x6000506")]
		[Address(RVA = "0x166B008", Offset = "0x166B008", VA = "0x166B008", Slot = "10")]
		public Vector2 ScrollState()
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000507")]
		[Address(RVA = "0x166B1C0", Offset = "0x166B1C0", VA = "0x166B1C0")]
		public EmptyActionStateReader()
		{
		}
	}
	[Token(Token = "0x20000D8")]
	internal class InputSystemActionStateReader : ActionStateReader, IDisposable
	{
		[Token(Token = "0x4000400")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly ZoomaInputMap inputMap;

		[Token(Token = "0x17000069")]
		private InputAction FireLeft
		{
			[Token(Token = "0x6000508")]
			[Address(RVA = "0x1681250", Offset = "0x1681250", VA = "0x1681250")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700006A")]
		private InputAction FireRight
		{
			[Token(Token = "0x6000509")]
			[Address(RVA = "0x16816B8", Offset = "0x16816B8", VA = "0x16816B8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600050A")]
		[Address(RVA = "0x1681B20", Offset = "0x1681B20", VA = "0x1681B20", Slot = "4")]
		public bool LeftFireState()
		{
			return default(bool);
		}

		[Token(Token = "0x600050B")]
		[Address(RVA = "0x1681DD8", Offset = "0x1681DD8", VA = "0x1681DD8", Slot = "5")]
		public bool RightFireState()
		{
			return default(bool);
		}

		[Token(Token = "0x600050C")]
		[Address(RVA = "0x1682090", Offset = "0x1682090", VA = "0x1682090", Slot = "6")]
		public bool MenuState()
		{
			return default(bool);
		}

		[Token(Token = "0x600050D")]
		[Address(RVA = "0x16823E0", Offset = "0x16823E0", VA = "0x16823E0", Slot = "7")]
		public bool UiTapState()
		{
			return default(bool);
		}

		[Token(Token = "0x600050E")]
		[Address(RVA = "0x1682730", Offset = "0x1682730", VA = "0x1682730", Slot = "8")]
		public bool RecenterState()
		{
			return default(bool);
		}

		[Token(Token = "0x600050F")]
		[Address(RVA = "0x1682A80", Offset = "0x1682A80", VA = "0x1682A80", Slot = "9")]
		public bool PresenceState()
		{
			return default(bool);
		}

		[Token(Token = "0x6000510")]
		[Address(RVA = "0x1683988", Offset = "0x1683988", VA = "0x1683988", Slot = "10")]
		public Vector2 ScrollState()
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000511")]
		[Address(RVA = "0x1683CE4", Offset = "0x1683CE4", VA = "0x1683CE4")]
		internal InputSystemActionStateReader()
		{
		}

		[Token(Token = "0x6000512")]
		[Address(RVA = "0x168417C", Offset = "0x168417C", VA = "0x168417C", Slot = "11")]
		public void Dispose()
		{
		}
	}
	[Token(Token = "0x20000D9")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCF8F04", Offset = "0xCF8F04")]
	public class ChapterConfig : ScriptableObject
	{
		[Token(Token = "0x4000401")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string title;

		[Token(Token = "0x4000402")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string description;

		[Token(Token = "0x4000403")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Sprite background;

		[Token(Token = "0x4000404")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Sprite backgroundLocked;

		[Token(Token = "0x4000405")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public AssetReference environment;

		[Token(Token = "0x4000406")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public AssetReference[] levelScenes;

		[Token(Token = "0x4000407")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public AssetReference[] bonusLevelScenes;

		[Token(Token = "0x4000408")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xCFC544", Offset = "0xCFC544")]
		public uint steamDlcAppId;

		[Token(Token = "0x4000409")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public bool newChapter;

		[Token(Token = "0x1700006B")]
		public bool IsDLC
		{
			[Token(Token = "0x6000513")]
			[Address(RVA = "0x164C92C", Offset = "0x164C92C", VA = "0x164C92C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000514")]
		[Address(RVA = "0x164CAF0", Offset = "0x164CAF0", VA = "0x164CAF0")]
		public ChapterConfig()
		{
		}
	}
	[Token(Token = "0x20000DA")]
	public class ChapterManager : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20001B0")]
		public struct Chapter
		{
			[Token(Token = "0x400083A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ChapterConfig config;

			[Token(Token = "0x400083B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public ContentState contentState;

			[Token(Token = "0x400083C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LevelMap levelMap;

			[Token(Token = "0x400083D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LevelMap bonusLevelMap;

			[Token(Token = "0x400083E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public LevelProgress progress;

			[Token(Token = "0x400083F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public int number;

			[Token(Token = "0x4000840")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public int maxStars;

			[Token(Token = "0x4000841")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			public int maxKeys;

			[Token(Token = "0x4000842")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public int maxKeysPerDifficulty;

			[Token(Token = "0x17000178")]
			public bool IsContentAvailable
			{
				[Token(Token = "0x6000CA2")]
				[Address(RVA = "0x165A344", Offset = "0x165A344", VA = "0x165A344")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x17000179")]
			public bool isAvailable
			{
				[Token(Token = "0x6000CA3")]
				[Address(RVA = "0x165A510", Offset = "0x165A510", VA = "0x165A510")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x6000CA4")]
				[Address(RVA = "0x164FA7C", Offset = "0x164FA7C", VA = "0x164FA7C")]
				set
				{
				}
			}

			[Token(Token = "0x1700017A")]
			public Sprite BackgroundSprite
			{
				[Token(Token = "0x6000CA9")]
				[Address(RVA = "0x165AFE4", Offset = "0x165AFE4", VA = "0x165AFE4")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000CA5")]
			[Address(RVA = "0x165A6E8", Offset = "0x165A6E8", VA = "0x165A6E8")]
			public Level[] GetLevels(int difficulty)
			{
				return null;
			}

			[Token(Token = "0x6000CA6")]
			[Address(RVA = "0x165AB28", Offset = "0x165AB28", VA = "0x165AB28")]
			public Level[] GetBonusLevels(int difficulty)
			{
				return null;
			}

			[Token(Token = "0x6000CA7")]
			[Address(RVA = "0x165572C", Offset = "0x165572C", VA = "0x165572C")]
			public IEnumerable<Level> GetAllLevels()
			{
				return null;
			}

			[Token(Token = "0x6000CA8")]
			[Address(RVA = "0x165AD7C", Offset = "0x165AD7C", VA = "0x165AD7C")]
			public int MaxStarsOn(int difficulty)
			{
				return default(int);
			}

			[Token(Token = "0x6000CAA")]
			[Address(RVA = "0x165B24C", Offset = "0x165B24C", VA = "0x165B24C")]
			public bool HasLevelScene(int levelIndex)
			{
				return default(bool);
			}

			[Token(Token = "0x6000CAB")]
			[Address(RVA = "0x165B92C", Offset = "0x165B92C", VA = "0x165B92C")]
			public bool HasLevelScene(Level level)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20001B1")]
		public enum ContentState
		{
			[Token(Token = "0x4000844")]
			NoContent,
			[Token(Token = "0x4000845")]
			NeedsLicense,
			[Token(Token = "0x4000846")]
			NotInstalled,
			[Token(Token = "0x4000847")]
			Downloading,
			[Token(Token = "0x4000848")]
			Ready,
			[Token(Token = "0x4000849")]
			Verifying,
			[Token(Token = "0x400084A")]
			Missing
		}

		[Token(Token = "0x20001B2")]
		public readonly struct LevelMap
		{
			[Serializable]
			[Token(Token = "0x2000247")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCF9FD0", Offset = "0xCF9FD0")]
			private sealed class <>c
			{
				[Token(Token = "0x4000A1F")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public static readonly <>c <>9;

				[Token(Token = "0x4000A20")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
				public static Func<Level[], IEnumerable<Level>> <>9__7_0;

				[Token(Token = "0x6000EAE")]
				[Address(RVA = "0x165C1B0", Offset = "0x165C1B0", VA = "0x165C1B0")]
				public <>c()
				{
				}

				[Token(Token = "0x6000EAF")]
				[Address(RVA = "0x165C2A0", Offset = "0x165C2A0", VA = "0x165C2A0")]
				internal IEnumerable<Level> <get_AllLevels>b__7_0(Level[] levelSet)
				{
					return null;
				}
			}

			[Token(Token = "0x2000248")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCF9FE0", Offset = "0xCF9FE0")]
			private sealed class <>c__DisplayClass8_0
			{
				[Token(Token = "0x4000A21")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public Level level;

				[Token(Token = "0x6000EB0")]
				[Address(RVA = "0x165BEB4", Offset = "0x165BEB4", VA = "0x165BEB4")]
				public <>c__DisplayClass8_0()
				{
				}

				[Token(Token = "0x6000EB1")]
				[Address(RVA = "0x165C458", Offset = "0x165C458", VA = "0x165C458")]
				internal bool <GetLevelIndex>b__0(Level l)
				{
					return default(bool);
				}
			}

			[Token(Token = "0x2000249")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCF9FF0", Offset = "0xCF9FF0")]
			private sealed class <>c__DisplayClass9_0
			{
				[Token(Token = "0x4000A22")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public Level currentLevel;

				[Token(Token = "0x6000EB2")]
				[Address(RVA = "0x165BFAC", Offset = "0x165BFAC", VA = "0x165BFAC")]
				public <>c__DisplayClass9_0()
				{
				}

				[Token(Token = "0x6000EB3")]
				[Address(RVA = "0x165C700", Offset = "0x165C700", VA = "0x165C700")]
				internal bool <GetNextLevel>b__0(Level l)
				{
					return default(bool);
				}
			}

			[Token(Token = "0x400084B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly Level[][] levelSets;

			[Token(Token = "0x400084C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCFFBC0", Offset = "0xCFFBC0")]
			[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xCFFBC0", Offset = "0xCFFBC0")]
			private readonly int <levelCountPerDifficulty>k__BackingField;

			[Token(Token = "0x1700017B")]
			public int levelCountPerDifficulty
			{
				[Token(Token = "0x6000CAD")]
				[Address(RVA = "0x165BCE8", Offset = "0x165BCE8", VA = "0x165BCE8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD038B4", Offset = "0xD038B4")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x1700017C")]
			public IEnumerable<Level> AllLevels
			{
				[Token(Token = "0x6000CAF")]
				[Address(RVA = "0x16510C4", Offset = "0x16510C4", VA = "0x16510C4")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000CAC")]
			[Address(RVA = "0x1654D94", Offset = "0x1654D94", VA = "0x1654D94")]
			public LevelMap(Level[][] levelSets)
			{
			}

			[Token(Token = "0x6000CAE")]
			[Address(RVA = "0x165A92C", Offset = "0x165A92C", VA = "0x165A92C")]
			public Level[] Levels(int difficulty)
			{
				return null;
			}

			[Token(Token = "0x6000CB0")]
			[Address(RVA = "0x16536D0", Offset = "0x16536D0", VA = "0x16536D0")]
			public int GetLevelIndex(Level level, int difficulty)
			{
				return default(int);
			}

			[Token(Token = "0x6000CB1")]
			[Address(RVA = "0x1653E4C", Offset = "0x1653E4C", VA = "0x1653E4C")]
			public Level GetNextLevel(int difficulty, Level currentLevel)
			{
				return default(Level);
			}
		}

		[Token(Token = "0x20001B3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCF9C00", Offset = "0xCF9C00")]
		private sealed class <VerifyChapterContentAsync>d__19 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400084D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400084E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400084F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int chapterIndex;

			[Token(Token = "0x4000850")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public ChapterManager <>4__this;

			[Token(Token = "0x4000851")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private ChapterConfig <chapterConfig>5__1;

			[Token(Token = "0x4000852")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private ContentState <contentState>5__2;

			[Token(Token = "0x4000853")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private AssetReference <scene>5__3;

			[Token(Token = "0x4000854")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private AddressablesUtil.BoolPromise <promise>5__4;

			[Token(Token = "0x1700017D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000CB5")]
				[Address(RVA = "0x165A050", Offset = "0x165A050", VA = "0x165A050", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700017E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000CB7")]
				[Address(RVA = "0x165A21C", Offset = "0x165A21C", VA = "0x165A21C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000CB2")]
			[Address(RVA = "0x16551D8", Offset = "0x16551D8", VA = "0x16551D8")]
			[DebuggerHidden]
			public <VerifyChapterContentAsync>d__19(int <>1__state)
			{
			}

			[Token(Token = "0x6000CB3")]
			[Address(RVA = "0x1658650", Offset = "0x1658650", VA = "0x1658650", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000CB4")]
			[Address(RVA = "0x1658730", Offset = "0x1658730", VA = "0x1658730", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000CB6")]
			[Address(RVA = "0x165A13C", Offset = "0x165A13C", VA = "0x165A13C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400040A")]
		public const int Difficulties = 3;

		[Token(Token = "0x400040B")]
		public const int MaxStarsPerLevel = 3;

		[Token(Token = "0x400040C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ChapterManagerConfig config;

		[Token(Token = "0x400040D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LevelManager levelManager;

		[Token(Token = "0x400040E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCFC57C", Offset = "0xCFC57C")]
		[SerializeField]
		private Chapter[] chapters;

		[Token(Token = "0x400040F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static ChapterManager instance;

		[Token(Token = "0x6000515")]
		[Address(RVA = "0x164CBE0", Offset = "0x164CBE0", VA = "0x164CBE0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000516")]
		[Address(RVA = "0x164CFFC", Offset = "0x164CFFC", VA = "0x164CFFC")]
		private void InitChapters()
		{
		}

		[Token(Token = "0x6000517")]
		[Address(RVA = "0x164FE00", Offset = "0x164FE00", VA = "0x164FE00")]
		[AttributeAttribute(Name = "EditorButtonAttribute", RVA = "0xD02270", Offset = "0xD02270")]
		public void RefreshChaptersLevelLocks()
		{
		}

		[Token(Token = "0x6000518")]
		[Address(RVA = "0x16519DC", Offset = "0x16519DC", VA = "0x16519DC")]
		public Chapter GetChapter(int index)
		{
			return default(Chapter);
		}

		[Token(Token = "0x6000519")]
		[Address(RVA = "0x1652ABC", Offset = "0x1652ABC", VA = "0x1652ABC")]
		public Chapter[] GetChapters()
		{
			return null;
		}

		[Token(Token = "0x600051A")]
		[Address(RVA = "0x1653394", Offset = "0x1653394", VA = "0x1653394")]
		public int GetLevelIndexInChapter(Level level, int chapter, int difficulty)
		{
			return default(int);
		}

		[Token(Token = "0x600051B")]
		[Address(RVA = "0x1653B10", Offset = "0x1653B10", VA = "0x1653B10")]
		public Level GetNextLevelInChapter(int chapter, int difficulty, Level currentLevel)
		{
			return default(Level);
		}

		[Token(Token = "0x600051C")]
		[Address(RVA = "0x1652DF0", Offset = "0x1652DF0", VA = "0x1652DF0")]
		private void UpdateChaptersProgress()
		{
		}

		[Token(Token = "0x600051D")]
		[Address(RVA = "0x1651D88", Offset = "0x1651D88", VA = "0x1651D88")]
		private void UpdateChapterProgress(int chapter)
		{
		}

		[Token(Token = "0x600051E")]
		[Address(RVA = "0x164DD50", Offset = "0x164DD50", VA = "0x164DD50")]
		private LevelMap InitChapterLevelMap(ChapterConfig config)
		{
			return default(LevelMap);
		}

		[Token(Token = "0x600051F")]
		[Address(RVA = "0x164E9F4", Offset = "0x164E9F4", VA = "0x164E9F4")]
		private LevelMap InitChapterBonusLevels(ChapterConfig config)
		{
			return default(LevelMap);
		}

		[Token(Token = "0x6000520")]
		[Address(RVA = "0x16550B4", Offset = "0x16550B4", VA = "0x16550B4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD02280", Offset = "0xD02280")]
		public IEnumerator VerifyChapterContentAsync(int chapterIndex)
		{
			return null;
		}

		[Token(Token = "0x6000521")]
		[Address(RVA = "0x16552D8", Offset = "0x16552D8", VA = "0x16552D8")]
		public static void DEV_UnlockChapterLevels(int chapter)
		{
		}

		[Token(Token = "0x6000522")]
		[Address(RVA = "0x1655A68", Offset = "0x1655A68", VA = "0x1655A68")]
		public static void DEV_UnlockAllLevels()
		{
		}

		[Token(Token = "0x6000523")]
		[Address(RVA = "0x16562D8", Offset = "0x16562D8", VA = "0x16562D8")]
		private static void UnlockLevel(Level level)
		{
		}

		[Token(Token = "0x6000524")]
		[Address(RVA = "0x16567E8", Offset = "0x16567E8", VA = "0x16567E8")]
		public static void DEV_MaxChapterStarsAndKeys(int chapter)
		{
		}

		[Token(Token = "0x6000525")]
		[Address(RVA = "0x16574B4", Offset = "0x16574B4", VA = "0x16574B4")]
		public static void DEV_ResetAllChapters()
		{
		}

		[Token(Token = "0x6000526")]
		[Address(RVA = "0x1657F04", Offset = "0x1657F04", VA = "0x1657F04")]
		private static void LockLevel(Level level)
		{
		}

		[Token(Token = "0x6000527")]
		[Address(RVA = "0x165822C", Offset = "0x165822C", VA = "0x165822C")]
		public static void DEV_LockChapter(int chapter)
		{
		}

		[Token(Token = "0x6000528")]
		[Address(RVA = "0x1658560", Offset = "0x1658560", VA = "0x1658560")]
		public ChapterManager()
		{
		}
	}
	[Token(Token = "0x20000DB")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCF8F74", Offset = "0xCF8F74")]
	public class ChapterManagerConfig : ScriptableObject
	{
		[Token(Token = "0x4000410")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ChapterConfig[] chapterConfigs;

		[Token(Token = "0x6000529")]
		[Address(RVA = "0x165C9A8", Offset = "0x165C9A8", VA = "0x165C9A8")]
		public ChapterManagerConfig()
		{
		}
	}
	[Token(Token = "0x20000DC")]
	public class ChaptersUI : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20001B4")]
		private struct ChapterUiLocker
		{
			[Token(Token = "0x4000855")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public GameObject lockUi;

			[Token(Token = "0x4000856")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public GameObject[] lockedItems;

			[Token(Token = "0x6000CB8")]
			[Address(RVA = "0x16651D4", Offset = "0x16651D4", VA = "0x16651D4")]
			public void Lock(bool locked)
			{
			}
		}

		[Token(Token = "0x20001B5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCF9C10", Offset = "0xCF9C10")]
		private sealed class <>c__DisplayClass19_0
		{
			[Token(Token = "0x4000857")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int chapterIndex;

			[Token(Token = "0x4000858")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public ChaptersUI <>4__this;

			[Token(Token = "0x6000CB9")]
			[Address(RVA = "0x165E360", Offset = "0x165E360", VA = "0x165E360")]
			public <>c__DisplayClass19_0()
			{
			}

			[Token(Token = "0x6000CBA")]
			[Address(RVA = "0x166651C", Offset = "0x166651C", VA = "0x166651C")]
			internal void <CreateChapterButtons>b__0()
			{
			}
		}

		[Token(Token = "0x20001B6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCF9C20", Offset = "0xCF9C20")]
		private sealed class <HighlightLevelDeferred>d__36 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000859")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400085A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400085B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ChaptersUI <>4__this;

			[Token(Token = "0x400085C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <row>5__1;

			[Token(Token = "0x400085D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <targetPos>5__2;

			[Token(Token = "0x400085E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private ScrollButton <scrollButton>5__3;

			[Token(Token = "0x1700017F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000CBE")]
				[Address(RVA = "0x1667AB8", Offset = "0x1667AB8", VA = "0x1667AB8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000180")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000CC0")]
				[Address(RVA = "0x1667C84", Offset = "0x1667C84", VA = "0x1667C84", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000CBB")]
			[Address(RVA = "0x1660AAC", Offset = "0x1660AAC", VA = "0x1660AAC")]
			[DebuggerHidden]
			public <HighlightLevelDeferred>d__36(int <>1__state)
			{
			}

			[Token(Token = "0x6000CBC")]
			[Address(RVA = "0x1666BC8", Offset = "0x1666BC8", VA = "0x1666BC8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000CBD")]
			[Address(RVA = "0x1666CA8", Offset = "0x1666CA8", VA = "0x1666CA8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000CBF")]
			[Address(RVA = "0x1667BA4", Offset = "0x1667BA4", VA = "0x1667BA4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20001B7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCF9C30", Offset = "0xCF9C30")]
		private sealed class <>c__DisplayClass37_0
		{
			[Token(Token = "0x400085F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Level level;

			[Token(Token = "0x4000860")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public ChaptersUI <>4__this;

			[Token(Token = "0x6000CC1")]
			[Address(RVA = "0x1665D78", Offset = "0x1665D78", VA = "0x1665D78")]
			public <>c__DisplayClass37_0()
			{
			}

			[Token(Token = "0x6000CC2")]
			[Address(RVA = "0x1666758", Offset = "0x1666758", VA = "0x1666758")]
			internal void <UpdateCurrentChapterContent>b__0()
			{
			}
		}

		[Token(Token = "0x20001B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCF9C40", Offset = "0xCF9C40")]
		private sealed class <>c__DisplayClass37_1
		{
			[Token(Token = "0x4000861")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Level bonusLevel;

			[Token(Token = "0x4000862")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public ChaptersUI <>4__this;

			[Token(Token = "0x6000CC3")]
			[Address(RVA = "0x1665E68", Offset = "0x1665E68", VA = "0x1665E68")]
			public <>c__DisplayClass37_1()
			{
			}

			[Token(Token = "0x6000CC4")]
			[Address(RVA = "0x1666990", Offset = "0x1666990", VA = "0x1666990")]
			internal void <UpdateCurrentChapterContent>b__1()
			{
			}
		}

		[Token(Token = "0x4000413")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ChapterManager chapterManager;

		[Token(Token = "0x4000414")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public LevelManager levelManager;

		[Token(Token = "0x4000415")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private bool showComingSoon;

		[Token(Token = "0x4000416")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCFC650", Offset = "0xCFC650")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xCFC650", Offset = "0xCFC650")]
		[SerializeField]
		private Transform chapterButtonsParent;

		[Token(Token = "0x4000417")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xCFC6C0", Offset = "0xCFC6C0")]
		[SerializeField]
		private UiEpisodeButton chapterButtonPrefab;

		[Token(Token = "0x4000418")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xCFC70C", Offset = "0xCFC70C")]
		[SerializeField]
		private UiEpisodeButton chapterButtonComingSoonPrefab;

		[Token(Token = "0x4000419")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private ScrollRect chapterButtonsScrollRect;

		[Token(Token = "0x400041A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private UiEpisodeButton[] chapterButtons;

		[Token(Token = "0x400041B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private UiLevelButton[] levelButtons;

		[Token(Token = "0x400041C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCFC768", Offset = "0xCFC768")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xCFC768", Offset = "0xCFC768")]
		private int <selectedChapter>k__BackingField;

		[Token(Token = "0x400041D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCFC7A4", Offset = "0xCFC7A4")]
		[SerializeField]
		private LocalazableUIText _title;

		[Token(Token = "0x400041E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private Image _backgroundImage;

		[Token(Token = "0x400041F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private Transform _contentsParent;

		[Token(Token = "0x4000420")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private Transform _bonusContentsParent;

		[Token(Token = "0x4000421")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private GameObject _levelButtonPrefab;

		[Token(Token = "0x4000422")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private GameObject _bonusLevelButtonPrefab;

		[Token(Token = "0x4000423")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private ScrollRect levelsScrollRect;

		[Token(Token = "0x4000424")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private int highlightLevelIndex;

		[Token(Token = "0x4000425")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private ChapterUiLocker uiLocker;

		[Token(Token = "0x4000426")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private UiChapterDLC uiChapterDlc;

		[Token(Token = "0x1700006C")]
		public int selectedChapter
		{
			[Token(Token = "0x600052E")]
			[Address(RVA = "0x165D038", Offset = "0x165D038", VA = "0x165D038")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD02324", Offset = "0xD02324")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600052F")]
			[Address(RVA = "0x165D1EC", Offset = "0x165D1EC", VA = "0x165D1EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD02334", Offset = "0xD02334")]
			set
			{
			}
		}

		[Token(Token = "0x14000019")]
		public event Action<int> ChapterSelected
		{
			[Token(Token = "0x600052A")]
			[Address(RVA = "0x165CA98", Offset = "0x165CA98", VA = "0x165CA98")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD022E4", Offset = "0xD022E4")]
			add
			{
			}
			[Token(Token = "0x600052B")]
			[Address(RVA = "0x165CC00", Offset = "0x165CC00", VA = "0x165CC00")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD022F4", Offset = "0xD022F4")]
			remove
			{
			}
		}

		[Token(Token = "0x1400001A")]
		public event Action<Level> LevelSelected
		{
			[Token(Token = "0x600052C")]
			[Address(RVA = "0x165CD68", Offset = "0x165CD68", VA = "0x165CD68")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD02304", Offset = "0xD02304")]
			add
			{
			}
			[Token(Token = "0x600052D")]
			[Address(RVA = "0x165CED0", Offset = "0x165CED0", VA = "0x165CED0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD02314", Offset = "0xD02314")]
			remove
			{
			}
		}

		[Token(Token = "0x6000530")]
		[Address(RVA = "0x165D3B4", Offset = "0x165D3B4", VA = "0x165D3B4")]
		public void CreateChapterButtons()
		{
		}

		[Token(Token = "0x6000531")]
		[Address(RVA = "0x165E450", Offset = "0x165E450", VA = "0x165E450")]
		private void OnChapterSelected(int chapter)
		{
		}

		[Token(Token = "0x6000532")]
		[Address(RVA = "0x165E9EC", Offset = "0x165E9EC", VA = "0x165E9EC")]
		public void UpdateChapterButtons()
		{
		}

		[Token(Token = "0x6000533")]
		[Address(RVA = "0x165F9E4", Offset = "0x165F9E4", VA = "0x165F9E4")]
		private void Start()
		{
		}

		[Token(Token = "0x6000534")]
		[Address(RVA = "0x165FCBC", Offset = "0x165FCBC", VA = "0x165FCBC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000535")]
		[Address(RVA = "0x166000C", Offset = "0x166000C", VA = "0x166000C")]
		public void HighlightLevel(int index)
		{
		}

		[Token(Token = "0x6000536")]
		[Address(RVA = "0x1660990", Offset = "0x1660990", VA = "0x1660990")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD02344", Offset = "0xD02344")]
		private IEnumerator HighlightLevelDeferred()
		{
			return null;
		}

		[Token(Token = "0x6000537")]
		[Address(RVA = "0x1660BAC", Offset = "0x1660BAC", VA = "0x1660BAC")]
		public void UpdateCurrentChapterContent()
		{
		}

		[Token(Token = "0x6000538")]
		[Address(RVA = "0x1665F58", Offset = "0x1665F58", VA = "0x1665F58")]
		private void OnLevelSelected(Level level)
		{
		}

		[Token(Token = "0x6000539")]
		[Address(RVA = "0x1664758", Offset = "0x1664758", VA = "0x1664758")]
		private void RemoveChildren(Transform parent)
		{
		}

		[Token(Token = "0x600053A")]
		[Address(RVA = "0x1666258", Offset = "0x1666258", VA = "0x1666258")]
		public ChaptersUI()
		{
		}
	}
	[Token(Token = "0x20000DD")]
	public enum Difficulty
	{
		[Token(Token = "0x4000428")]
		Normal,
		[Token(Token = "0x4000429")]
		Epic,
		[Token(Token = "0x400042A")]
		Legendary
	}
	[Token(Token = "0x20000DE")]
	public class EpisodesManager : MonoBehaviour
	{
		[Token(Token = "0x20001B9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCF9C50", Offset = "0xCF9C50")]
		private sealed class <RestoreLevelSelection>d__19 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000863")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000864")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000865")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public EpisodesManager <>4__this;

			[Token(Token = "0x4000866")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <startupLevelIndex>5__1;

			[Token(Token = "0x4000867")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private int <startupChapterIndex>5__2;

			[Token(Token = "0x4000868")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private ChapterManager.Chapter <chapter>5__3;

			[Token(Token = "0x4000869")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			private Level[] <levels>5__4;

			[Token(Token = "0x400086A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			private bool <canSelectLevel>5__5;

			[Token(Token = "0x17000181")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000CC8")]
				[Address(RVA = "0x1675220", Offset = "0x1675220", VA = "0x1675220", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000182")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000CCA")]
				[Address(RVA = "0x16753EC", Offset = "0x16753EC", VA = "0x16753EC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000CC5")]
			[Address(RVA = "0x166E004", Offset = "0x166E004", VA = "0x166E004")]
			[DebuggerHidden]
			public <RestoreLevelSelection>d__19(int <>1__state)
			{
			}

			[Token(Token = "0x6000CC6")]
			[Address(RVA = "0x1673F88", Offset = "0x1673F88", VA = "0x1673F88", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000CC7")]
			[Address(RVA = "0x1674068", Offset = "0x1674068", VA = "0x1674068", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000CC9")]
			[Address(RVA = "0x167530C", Offset = "0x167530C", VA = "0x167530C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20001BA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCF9C60", Offset = "0xCF9C60")]
		private sealed class <UpdateRoutine>d__31 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400086B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400086C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400086D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public EpisodesManager <>4__this;

			[Token(Token = "0x400086E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <chapterCount>5__1;

			[Token(Token = "0x400086F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private int <lastPlayedChapterIndex>5__2;

			[Token(Token = "0x4000870")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <i>5__3;

			[Token(Token = "0x17000183")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000CCE")]
				[Address(RVA = "0x1676268", Offset = "0x1676268", VA = "0x1676268", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000184")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000CD0")]
				[Address(RVA = "0x1676434", Offset = "0x1676434", VA = "0x1676434", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000CCB")]
			[Address(RVA = "0x1673AF8", Offset = "0x1673AF8", VA = "0x1673AF8")]
			[DebuggerHidden]
			public <UpdateRoutine>d__31(int <>1__state)
			{
			}

			[Token(Token = "0x6000CCC")]
			[Address(RVA = "0x16754D8", Offset = "0x16754D8", VA = "0x16754D8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000CCD")]
			[Address(RVA = "0x16755B8", Offset = "0x16755B8", VA = "0x16755B8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000CCF")]
			[Address(RVA = "0x1676354", Offset = "0x1676354", VA = "0x1676354", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20001BB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCF9C70", Offset = "0xCF9C70")]
		private sealed class <VerifyChapterContentAndLoadLevel>d__32 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000871")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000872")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000873")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Level level;

			[Token(Token = "0x4000874")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public EpisodesManager <>4__this;

			[Token(Token = "0x4000875")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private ChapterManager.Chapter <chapter>5__1;

			[Token(Token = "0x17000185")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000CD4")]
				[Address(RVA = "0x167701C", Offset = "0x167701C", VA = "0x167701C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000186")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000CD6")]
				[Address(RVA = "0x16771E8", Offset = "0x16771E8", VA = "0x16771E8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000CD1")]
			[Address(RVA = "0x1673BF8", Offset = "0x1673BF8", VA = "0x1673BF8")]
			[DebuggerHidden]
			public <VerifyChapterContentAndLoadLevel>d__32(int <>1__state)
			{
			}

			[Token(Token = "0x6000CD2")]
			[Address(RVA = "0x1676520", Offset = "0x1676520", VA = "0x1676520", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000CD3")]
			[Address(RVA = "0x1676600", Offset = "0x1676600", VA = "0x1676600", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000CD5")]
			[Address(RVA = "0x1677108", Offset = "0x1677108", VA = "0x1677108", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400042B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static EpisodesManager Instance;

		[Token(Token = "0x400042D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ChapterManager chapterManager;

		[Token(Token = "0x400042E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LevelManager levelManager;

		[Token(Token = "0x400042F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ChaptersUI chaptersUi;

		[Token(Token = "0x4000430")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int selectedChapter;

		[Token(Token = "0x4000431")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public int selectedLevelIndex;

		[Token(Token = "0x4000432")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Level lastSelectedLevel;

		[Token(Token = "0x4000433")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Coroutine updateCoroutine;

		[Token(Token = "0x1700006D")]
		public static string CurrentChapter
		{
			[Token(Token = "0x600053D")]
			[Address(RVA = "0x166C6BC", Offset = "0x166C6BC", VA = "0x166C6BC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700006E")]
		public static string CurrentLevel
		{
			[Token(Token = "0x600053E")]
			[Address(RVA = "0x166C92C", Offset = "0x166C92C", VA = "0x166C92C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700006F")]
		public Difficulty CurrentDifficulty
		{
			[Token(Token = "0x600053F")]
			[Address(RVA = "0x166CB9C", Offset = "0x166CB9C", VA = "0x166CB9C")]
			get
			{
				return default(Difficulty);
			}
		}

		[Token(Token = "0x1400001B")]
		public static event Action<int> OnCurrentEpisodeUpdated
		{
			[Token(Token = "0x600053B")]
			[Address(RVA = "0x166C3C4", Offset = "0x166C3C4", VA = "0x166C3C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD023A8", Offset = "0xD023A8")]
			add
			{
			}
			[Token(Token = "0x600053C")]
			[Address(RVA = "0x166C540", Offset = "0x166C540", VA = "0x166C540")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD023B8", Offset = "0xD023B8")]
			remove
			{
			}
		}

		[Token(Token = "0x6000540")]
		[Address(RVA = "0x166CD50", Offset = "0x166CD50", VA = "0x166CD50")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xD023C8", Offset = "0xD023C8")]
		private void Log(object message)
		{
		}

		[Token(Token = "0x6000541")]
		[Address(RVA = "0x166D034", Offset = "0x166D034", VA = "0x166D034")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000542")]
		[Address(RVA = "0x166D414", Offset = "0x166D414", VA = "0x166D414")]
		private void Start()
		{
		}

		[Token(Token = "0x6000543")]
		[Address(RVA = "0x166DEE8", Offset = "0x166DEE8", VA = "0x166DEE8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD02400", Offset = "0xD02400")]
		private IEnumerator RestoreLevelSelection()
		{
			return null;
		}

		[Token(Token = "0x6000544")]
		[Address(RVA = "0x166E104", Offset = "0x166E104", VA = "0x166E104")]
		private void OnApplicationFocus(bool hasFocus)
		{
		}

		[Token(Token = "0x6000545")]
		[Address(RVA = "0x166ED3C", Offset = "0x166ED3C", VA = "0x166ED3C")]
		public void SelectEpisode(int EpisodeNumber)
		{
		}

		[Token(Token = "0x6000546")]
		[Address(RVA = "0x166F2E8", Offset = "0x166F2E8", VA = "0x166F2E8")]
		private void LoadSelectedLevel(Level level)
		{
		}

		[Token(Token = "0x6000547")]
		[Address(RVA = "0x166F91C", Offset = "0x166F91C", VA = "0x166F91C")]
		public bool IsNextLevelAvailable()
		{
			return default(bool);
		}

		[Token(Token = "0x6000548")]
		[Address(RVA = "0x167028C", Offset = "0x167028C", VA = "0x167028C")]
		public void SelectNextLevel()
		{
		}

		[Token(Token = "0x6000549")]
		[Address(RVA = "0x16707BC", Offset = "0x16707BC", VA = "0x16707BC")]
		private void LoadLevel(Level level)
		{
		}

		[Token(Token = "0x600054A")]
		[Address(RVA = "0x16715B8", Offset = "0x16715B8", VA = "0x16715B8")]
		[AttributeAttribute(Name = "UsedImplicitlyAttribute", RVA = "0xD02464", Offset = "0xD02464")]
		public void RestartCurrentLevel()
		{
		}

		[Token(Token = "0x600054B")]
		[Address(RVA = "0x1671EB0", Offset = "0x1671EB0", VA = "0x1671EB0")]
		[AttributeAttribute(Name = "UsedImplicitlyAttribute", RVA = "0xD02474", Offset = "0xD02474")]
		public void HandleCurrentLevelResult(LevelProgress progress)
		{
		}

		[Token(Token = "0x600054C")]
		[Address(RVA = "0x16733EC", Offset = "0x16733EC", VA = "0x16733EC")]
		[AttributeAttribute(Name = "UsedImplicitlyAttribute", RVA = "0xD02484", Offset = "0xD02484")]
		public void QuitToMenu()
		{
		}

		[Token(Token = "0x600054D")]
		[Address(RVA = "0x166E6C4", Offset = "0x166E6C4", VA = "0x166E6C4")]
		[AttributeAttribute(Name = "EditorButtonAttribute", RVA = "0xD02494", Offset = "0xD02494")]
		public void UpdateAll()
		{
		}

		[Token(Token = "0x600054E")]
		[Address(RVA = "0x16739DC", Offset = "0x16739DC", VA = "0x16739DC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD024A4", Offset = "0xD024A4")]
		private IEnumerator UpdateRoutine()
		{
			return null;
		}

		[Token(Token = "0x600054F")]
		[Address(RVA = "0x166F7FC", Offset = "0x166F7FC", VA = "0x166F7FC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD02508", Offset = "0xD02508")]
		private IEnumerator VerifyChapterContentAndLoadLevel(Level level)
		{
			return null;
		}

		[Token(Token = "0x6000550")]
		[Address(RVA = "0x1673CF8", Offset = "0x1673CF8", VA = "0x1673CF8")]
		public EpisodesManager()
		{
		}
	}
	[Token(Token = "0x20000DF")]
	public struct LevelConfig
	{
		[Token(Token = "0x4000434")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public AssetReference scene;

		[Token(Token = "0x4000435")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AssetReference environment;

		[Token(Token = "0x4000436")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int difficulty;

		[Token(Token = "0x4000437")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public bool isBonus;

		[Token(Token = "0x17000070")]
		internal string id
		{
			[Token(Token = "0x6000551")]
			[Address(RVA = "0x1686FA4", Offset = "0x1686FA4", VA = "0x1686FA4")]
			get
			{
				return null;
			}
		}
	}
	[Serializable]
	[Token(Token = "0x20000E0")]
	public struct LevelProgress
	{
		[Token(Token = "0x4000438")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool locked;

		[Token(Token = "0x4000439")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int score;

		[Token(Token = "0x400043A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int stars;

		[Token(Token = "0x400043B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int keys;

		[Token(Token = "0x400043C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int time;
	}
	[Serializable]
	[Token(Token = "0x20000E1")]
	public struct Level
	{
		[Token(Token = "0x400043D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Level EMPTY;

		[Token(Token = "0x400043E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal string id;

		[Token(Token = "0x17000071")]
		public bool NotEmpty
		{
			[Token(Token = "0x6000552")]
			[Address(RVA = "0x1670050", Offset = "0x1670050", VA = "0x1670050")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000553")]
		[Address(RVA = "0x168679C", Offset = "0x168679C", VA = "0x168679C")]
		internal Level(string id)
		{
		}

		[Token(Token = "0x6000554")]
		[Address(RVA = "0x1686A28", Offset = "0x1686A28", VA = "0x1686A28", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x20000E2")]
	public class LevelManager : MonoBehaviour
	{
		[Token(Token = "0x400043F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCFC8AC", Offset = "0xCFC8AC")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xCFC8AC", Offset = "0xCFC8AC")]
		private static LevelManager <Instance>k__BackingField;

		[Token(Token = "0x4000440")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameSceneLoader gameSceneLoader;

		[Token(Token = "0x4000441")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly Dictionary<Level, LevelConfig> levelConfigs;

		[Token(Token = "0x4000442")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly Dictionary<Level, LevelProgress> levelProgressMap;

		[Token(Token = "0x4000443")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Level currentLevel;

		[Token(Token = "0x17000072")]
		public static LevelManager Instance
		{
			[Token(Token = "0x6000556")]
			[Address(RVA = "0x16872C4", Offset = "0x16872C4", VA = "0x16872C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0256C", Offset = "0xD0256C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000557")]
			[Address(RVA = "0x1687474", Offset = "0x1687474", VA = "0x1687474")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0257C", Offset = "0xD0257C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000073")]
		public bool IsGameLevel
		{
			[Token(Token = "0x6000559")]
			[Address(RVA = "0x167F0C8", Offset = "0x167F0C8", VA = "0x167F0C8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000074")]
		public bool IsBonusLevel
		{
			[Token(Token = "0x600055A")]
			[Address(RVA = "0x16877F0", Offset = "0x16877F0", VA = "0x16877F0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000558")]
		[Address(RVA = "0x168763C", Offset = "0x168763C", VA = "0x168763C")]
		public Dictionary<Level, LevelProgress> GetLevelProgressMap()
		{
			return null;
		}

		[Token(Token = "0x600055B")]
		[Address(RVA = "0x1687A54", Offset = "0x1687A54", VA = "0x1687A54")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xD0258C", Offset = "0xD0258C")]
		private void Log(object message)
		{
		}

		[Token(Token = "0x600055C")]
		[Address(RVA = "0x1654668", Offset = "0x1654668", VA = "0x1654668")]
		public Level SetupLevel(LevelConfig config)
		{
			return default(Level);
		}

		[Token(Token = "0x600055D")]
		[Address(RVA = "0x1670FDC", Offset = "0x1670FDC", VA = "0x1670FDC")]
		public void LoadLevel(Level level)
		{
		}

		[Token(Token = "0x600055E")]
		[Address(RVA = "0x16736D4", Offset = "0x16736D4", VA = "0x16736D4")]
		[AttributeAttribute(Name = "EditorButtonAttribute", RVA = "0xD025C4", Offset = "0xD025C4")]
		public void LoadDefault()
		{
		}

		[Token(Token = "0x600055F")]
		[Address(RVA = "0x1671A60", Offset = "0x1671A60", VA = "0x1671A60")]
		public void ReloadCurrentLevel()
		{
		}

		[Token(Token = "0x6000560")]
		[Address(RVA = "0x1672444", Offset = "0x1672444", VA = "0x1672444")]
		public void SetCurrentLevelProgress(LevelProgress progress)
		{
		}

		[Token(Token = "0x6000561")]
		[Address(RVA = "0x16516B8", Offset = "0x16516B8", VA = "0x16516B8")]
		internal void SetLevelProgress(Level level, LevelProgress progress)
		{
		}

		[Token(Token = "0x6000562")]
		[Address(RVA = "0x1651418", Offset = "0x1651418", VA = "0x1651418")]
		public LevelProgress GetLevelProgress(Level id)
		{
			return default(LevelProgress);
		}

		[Token(Token = "0x6000563")]
		[Address(RVA = "0x1687CAC", Offset = "0x1687CAC", VA = "0x1687CAC")]
		public LevelProgress GetCurrentLevelProgress()
		{
			return default(LevelProgress);
		}

		[Token(Token = "0x6000564")]
		[Address(RVA = "0x1687EF0", Offset = "0x1687EF0", VA = "0x1687EF0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000565")]
		[Address(RVA = "0x1688980", Offset = "0x1688980", VA = "0x1688980")]
		private void Start()
		{
		}

		[Token(Token = "0x6000566")]
		[Address(RVA = "0x1688530", Offset = "0x1688530", VA = "0x1688530")]
		private void InitLobbyLevel()
		{
		}

		[Token(Token = "0x6000567")]
		[Address(RVA = "0x1688D2C", Offset = "0x1688D2C", VA = "0x1688D2C")]
		public LevelManager()
		{
		}
	}
	[Token(Token = "0x20000E3")]
	public class ZoomaContentManager : MonoBehaviour
	{
		[Token(Token = "0x4000445")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static IZoomaContentProvider contentProvider;

		[Token(Token = "0x1400001C")]
		public static event Action ContentStateChanged
		{
			[Token(Token = "0x6000568")]
			[Address(RVA = "0x166DD70", Offset = "0x166DD70", VA = "0x166DD70")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD025D4", Offset = "0xD025D4")]
			add
			{
			}
			[Token(Token = "0x6000569")]
			[Address(RVA = "0x168B8EC", Offset = "0x168B8EC", VA = "0x168B8EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD025E4", Offset = "0xD025E4")]
			remove
			{
			}
		}

		[Token(Token = "0x600056A")]
		[Address(RVA = "0x1659380", Offset = "0x1659380", VA = "0x1659380")]
		public static ChapterManager.ContentState GetChapterContentState(ChapterConfig chapterConfig)
		{
			return default(ChapterManager.ContentState);
		}

		[Token(Token = "0x600056B")]
		[Address(RVA = "0x168BDD8", Offset = "0x168BDD8", VA = "0x168BDD8")]
		public static void InstallDLC(uint id)
		{
		}

		[Token(Token = "0x600056C")]
		[Address(RVA = "0x168BA64", Offset = "0x168BA64", VA = "0x168BA64")]
		public static bool IsDLCDownloading(uint id)
		{
			return default(bool);
		}

		[Token(Token = "0x600056D")]
		[Address(RVA = "0x168C13C", Offset = "0x168C13C", VA = "0x168C13C")]
		public static float GetDLCDownloadProgress(uint id)
		{
			return default(float);
		}

		[Token(Token = "0x600056E")]
		[Address(RVA = "0x168C4B4", Offset = "0x168C4B4", VA = "0x168C4B4")]
		public static void OpenDLCStoreOverlay(uint id)
		{
		}

		[Token(Token = "0x600056F")]
		[Address(RVA = "0x168C818", Offset = "0x168C818", VA = "0x168C818")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000570")]
		[Address(RVA = "0x168CD38", Offset = "0x168CD38", VA = "0x168CD38")]
		public ZoomaContentManager()
		{
		}
	}
	[Token(Token = "0x20000E4")]
	public interface IZoomaContentProvider
	{
		[Token(Token = "0x1400001D")]
		event Action ContentStateChanged;

		[Token(Token = "0x6000571")]
		bool HasDLCLicense(uint id);

		[Token(Token = "0x6000572")]
		bool IsDLCInstalled(uint id);

		[Token(Token = "0x6000573")]
		void InstallDLC(uint id);

		[Token(Token = "0x6000574")]
		bool IsDLCDownloading(uint id);

		[Token(Token = "0x6000575")]
		float GetDLCDownloadProgress(uint id);

		[Token(Token = "0x6000576")]
		void ShowDLCStoreOverlay(uint id);
	}
	[Token(Token = "0x20000E5")]
	internal class FileStorage : GameDataStorage
	{
		[Token(Token = "0x17000075")]
		protected virtual string StoragePath
		{
			[Token(Token = "0x6000579")]
			[Address(RVA = "0x16772D4", Offset = "0x16772D4", VA = "0x16772D4", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000076")]
		private string FilePath
		{
			[Token(Token = "0x600057A")]
			[Address(RVA = "0x1677500", Offset = "0x1677500", VA = "0x1677500")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600057B")]
		[Address(RVA = "0x16777CC", Offset = "0x16777CC", VA = "0x16777CC", Slot = "4")]
		public override bool IsAvailable()
		{
			return default(bool);
		}

		[Token(Token = "0x600057C")]
		public override void WriteObject<T>(T content)
		{
		}

		[Token(Token = "0x600057D")]
		public override bool ReadObject<T>(out T content)
		{
			return default(bool);
		}

		[Token(Token = "0x600057E")]
		[Address(RVA = "0x1677A3C", Offset = "0x1677A3C", VA = "0x1677A3C", Slot = "7")]
		public override void WipeStorage()
		{
		}

		[Token(Token = "0x600057F")]
		[Address(RVA = "0x1677FE0", Offset = "0x1677FE0", VA = "0x1677FE0")]
		public FileStorage()
		{
		}
	}
	[Token(Token = "0x20000E6")]
	internal sealed class V1toV2Binder : SerializationBinder
	{
		[Token(Token = "0x6000580")]
		[Address(RVA = "0x168AC30", Offset = "0x168AC30", VA = "0x168AC30", Slot = "5")]
		public override Type BindToType(string assemblyName, string typeName)
		{
			return null;
		}

		[Token(Token = "0x6000581")]
		[Address(RVA = "0x168B444", Offset = "0x168B444", VA = "0x168B444")]
		public V1toV2Binder()
		{
		}
	}
	[Token(Token = "0x20000E7")]
	public class GameProgressStorage : MonoBehaviour
	{
		[Token(Token = "0x20001BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCF9C80", Offset = "0xCF9C80")]
		private sealed class <Start>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000876")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000877")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000878")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GameProgressStorage <>4__this;

			[Token(Token = "0x17000187")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000CDA")]
				[Address(RVA = "0x167B224", Offset = "0x167B224", VA = "0x167B224", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000188")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000CDC")]
				[Address(RVA = "0x167B3F0", Offset = "0x167B3F0", VA = "0x167B3F0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000CD7")]
			[Address(RVA = "0x1678CA8", Offset = "0x1678CA8", VA = "0x1678CA8")]
			[DebuggerHidden]
			public <Start>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x6000CD8")]
			[Address(RVA = "0x167A944", Offset = "0x167A944", VA = "0x167A944", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000CD9")]
			[Address(RVA = "0x167AA24", Offset = "0x167AA24", VA = "0x167AA24", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000CDB")]
			[Address(RVA = "0x167B310", Offset = "0x167B310", VA = "0x167B310", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000446")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly GameDataStorage fileStorage;

		[Token(Token = "0x4000447")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static GameDataStorage cloudStorage;

		[Token(Token = "0x4000448")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static GameDataStorage[] storageGroup;

		[Token(Token = "0x4000449")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private LevelManager levelManager;

		[Token(Token = "0x6000582")]
		[Address(RVA = "0x1678700", Offset = "0x1678700", VA = "0x1678700")]
		private static GameDataStorage InitCloudStorage()
		{
			return null;
		}

		[Token(Token = "0x6000583")]
		[Address(RVA = "0x16728EC", Offset = "0x16728EC", VA = "0x16728EC")]
		public static void Save()
		{
		}

		[Token(Token = "0x6000584")]
		[Address(RVA = "0x1678B8C", Offset = "0x1678B8C", VA = "0x1678B8C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD02614", Offset = "0xD02614")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x6000585")]
		[Address(RVA = "0x1678DA8", Offset = "0x1678DA8", VA = "0x1678DA8")]
		private void Load()
		{
		}

		[Token(Token = "0x6000586")]
		[Address(RVA = "0x1679F40", Offset = "0x1679F40", VA = "0x1679F40")]
		[AttributeAttribute(Name = "EditorButtonAttribute", RVA = "0xD02678", Offset = "0xD02678")]
		private void SaveNow()
		{
		}

		[Token(Token = "0x6000587")]
		[Address(RVA = "0x167A184", Offset = "0x167A184", VA = "0x167A184")]
		[AttributeAttribute(Name = "EditorButtonAttribute", RVA = "0xD02688", Offset = "0xD02688")]
		private void LoadNow()
		{
		}

		[Token(Token = "0x6000588")]
		[Address(RVA = "0x167A540", Offset = "0x167A540", VA = "0x167A540")]
		public GameProgressStorage()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000E8")]
	internal struct GameProgressData
	{
		[Token(Token = "0x400044A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string appVersion;

		[Token(Token = "0x400044B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Dictionary<Level, LevelProgress> levelsProgress;
	}
	[Token(Token = "0x20000E9")]
	internal abstract class GameDataStorage
	{
		[Token(Token = "0x600058A")]
		public abstract bool IsAvailable();

		[Token(Token = "0x600058B")]
		public abstract void WriteObject<T>(T content);

		[Token(Token = "0x600058C")]
		public abstract bool ReadObject<T>(out T content);

		[Token(Token = "0x600058D")]
		public abstract void WipeStorage();

		[Token(Token = "0x600058E")]
		[Address(RVA = "0x16780CC", Offset = "0x16780CC", VA = "0x16780CC")]
		protected static void LogInfo(object message)
		{
		}

		[Token(Token = "0x600058F")]
		[Address(RVA = "0x16783C8", Offset = "0x16783C8", VA = "0x16783C8")]
		protected static void LogWarning(object message)
		{
		}

		[Token(Token = "0x6000590")]
		[Address(RVA = "0x166BE74", Offset = "0x166BE74", VA = "0x166BE74")]
		protected GameDataStorage()
		{
		}
	}
	[Token(Token = "0x20000EA")]
	internal sealed class EmptyStorage : GameDataStorage
	{
		[Token(Token = "0x6000591")]
		[Address(RVA = "0x166B908", Offset = "0x166B908", VA = "0x166B908", Slot = "4")]
		public override bool IsAvailable()
		{
			return default(bool);
		}

		[Token(Token = "0x6000592")]
		public override void WriteObject<T>(T content)
		{
		}

		[Token(Token = "0x6000593")]
		public override bool ReadObject<T>(out T content)
		{
			return default(bool);
		}

		[Token(Token = "0x6000594")]
		[Address(RVA = "0x166BB78", Offset = "0x166BB78", VA = "0x166BB78", Slot = "7")]
		public override void WipeStorage()
		{
		}

		[Token(Token = "0x6000595")]
		[Address(RVA = "0x166BD88", Offset = "0x166BD88", VA = "0x166BD88")]
		public EmptyStorage()
		{
		}
	}
	[Token(Token = "0x20000EB")]
	internal class OculusCloudStorage : FileStorage
	{
		[Token(Token = "0x400044C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private string userDirPath;

		[Token(Token = "0x17000077")]
		protected override string StoragePath
		{
			[Token(Token = "0x6000596")]
			[Address(RVA = "0x16891C8", Offset = "0x16891C8", VA = "0x16891C8", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000597")]
		[Address(RVA = "0x168937C", Offset = "0x168937C", VA = "0x168937C", Slot = "4")]
		public override bool IsAvailable()
		{
			return default(bool);
		}

		[Token(Token = "0x6000598")]
		[Address(RVA = "0x1689668", Offset = "0x1689668", VA = "0x1689668")]
		public OculusCloudStorage()
		{
		}
	}
	[Token(Token = "0x20000EC")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCF8FE4", Offset = "0xCF8FE4")]
	public class CompositorConfig : ScriptableObject
	{
		[Token(Token = "0x400044D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Texture front;

		[Token(Token = "0x400044E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Texture back;

		[Token(Token = "0x400044F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Texture left;

		[Token(Token = "0x4000450")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Texture right;

		[Token(Token = "0x4000451")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Texture top;

		[Token(Token = "0x4000452")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Texture bottom;

		[Token(Token = "0x4000453")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Color backgroundColor;

		[Token(Token = "0x6000599")]
		[Address(RVA = "0x1667DB8", Offset = "0x1667DB8", VA = "0x1667DB8")]
		public CompositorConfig()
		{
		}
	}
	[Token(Token = "0x20000ED")]
	public class CompositorController : MonoBehaviour
	{
		[Token(Token = "0x4000454")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static ICompositorController _compositorController;

		[Token(Token = "0x4000455")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CompositorConfig openVRConfig;

		[Token(Token = "0x600059A")]
		[Address(RVA = "0x1667EA8", Offset = "0x1667EA8", VA = "0x1667EA8")]
		public static void FadeIn(float duration)
		{
		}

		[Token(Token = "0x600059B")]
		[Address(RVA = "0x1668220", Offset = "0x1668220", VA = "0x1668220")]
		public static void FadeOut(float duration)
		{
		}

		[Token(Token = "0x600059C")]
		[Address(RVA = "0x166859C", Offset = "0x166859C", VA = "0x166859C")]
		public static void SuspendRendering(bool suspend)
		{
		}

		[Token(Token = "0x600059D")]
		[Address(RVA = "0x1668920", Offset = "0x1668920", VA = "0x1668920")]
		private void Awake()
		{
		}

		[Token(Token = "0x600059E")]
		[Address(RVA = "0x1668D28", Offset = "0x1668D28", VA = "0x1668D28")]
		[AttributeAttribute(Name = "EditorButtonAttribute", RVA = "0xD02698", Offset = "0xD02698")]
		private void FadeIn()
		{
		}

		[Token(Token = "0x600059F")]
		[Address(RVA = "0x1668F70", Offset = "0x1668F70", VA = "0x1668F70")]
		[AttributeAttribute(Name = "EditorButtonAttribute", RVA = "0xD026A8", Offset = "0xD026A8")]
		private void FadeOut()
		{
		}

		[Token(Token = "0x60005A0")]
		[Address(RVA = "0x166A1B8", Offset = "0x166A1B8", VA = "0x166A1B8")]
		public CompositorController()
		{
		}
	}
	[Token(Token = "0x20000EE")]
	internal class PicoCompositor : ICompositorController
	{
		[Token(Token = "0x60005A2")]
		[Address(RVA = "0x1689990", Offset = "0x1689990", VA = "0x1689990", Slot = "4")]
		public void FadeIn(float seconds)
		{
		}

		[Token(Token = "0x60005A3")]
		[Address(RVA = "0x1689F00", Offset = "0x1689F00", VA = "0x1689F00", Slot = "5")]
		public void FadeOut(float seconds)
		{
		}

		[Token(Token = "0x60005A4")]
		[Address(RVA = "0x168A470", Offset = "0x168A470", VA = "0x168A470", Slot = "6")]
		public void SuspendRendering(bool suspend)
		{
		}

		[Token(Token = "0x60005A5")]
		[Address(RVA = "0x1668C38", Offset = "0x1668C38", VA = "0x1668C38")]
		public PicoCompositor()
		{
		}
	}
	[Token(Token = "0x20000EF")]
	public class HmdUnmountDetector : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20001BD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCF9C90", Offset = "0xCF9C90")]
		private sealed class <>c
		{
			[Token(Token = "0x4000879")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400087A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action <>9__3_0;

			[Token(Token = "0x400087B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Action <>9__3_1;

			[Token(Token = "0x6000CDE")]
			[Address(RVA = "0x167F584", Offset = "0x167F584", VA = "0x167F584")]
			public <>c()
			{
			}

			[Token(Token = "0x6000CDF")]
			[Address(RVA = "0x167F674", Offset = "0x167F674", VA = "0x167F674")]
			internal void <Start>b__3_0()
			{
			}

			[Token(Token = "0x6000CE0")]
			[Address(RVA = "0x16800AC", Offset = "0x16800AC", VA = "0x16800AC")]
			internal void <Start>b__3_1()
			{
			}
		}

		[Token(Token = "0x4000456")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool userIsPresent;

		[Token(Token = "0x4000457")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool userPresenceSpotted;

		[Token(Token = "0x4000458")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		private bool isSuspended;

		[Token(Token = "0x60005A6")]
		[Address(RVA = "0x167B5CC", Offset = "0x167B5CC", VA = "0x167B5CC")]
		private void Log(object message)
		{
		}

		[Token(Token = "0x60005A7")]
		[Address(RVA = "0x167B8B0", Offset = "0x167B8B0", VA = "0x167B8B0")]
		private void Start()
		{
		}

		[Token(Token = "0x60005A8")]
		[Address(RVA = "0x167C2C0", Offset = "0x167C2C0", VA = "0x167C2C0")]
		private void Update()
		{
		}

		[Token(Token = "0x60005A9")]
		[Address(RVA = "0x167D144", Offset = "0x167D144", VA = "0x167D144")]
		private void OnApplicationFocus(bool hasFocus)
		{
		}

		[Token(Token = "0x60005AA")]
		[Address(RVA = "0x167C78C", Offset = "0x167C78C", VA = "0x167C78C")]
		private void ProcessFocus()
		{
		}

		[Token(Token = "0x60005AB")]
		[Address(RVA = "0x167DA28", Offset = "0x167DA28", VA = "0x167DA28")]
		private void SuspendApp(bool pause)
		{
		}

		[Token(Token = "0x60005AC")]
		[Address(RVA = "0x167F388", Offset = "0x167F388", VA = "0x167F388")]
		public HmdUnmountDetector()
		{
		}
	}
	[Token(Token = "0x20000F0")]
	public class OculusGraphicsController : MonoBehaviour
	{
		[Token(Token = "0x60005AD")]
		[Address(RVA = "0x16898A0", Offset = "0x16898A0", VA = "0x16898A0")]
		public OculusGraphicsController()
		{
		}
	}
	[Token(Token = "0x20000F1")]
	internal struct UserPresenceTracker
	{
		[Token(Token = "0x60005AE")]
		[Address(RVA = "0x16831F4", Offset = "0x16831F4", VA = "0x16831F4")]
		public static bool IsUserPresent()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20000F2")]
	internal interface ICompositorController
	{
		[Token(Token = "0x60005AF")]
		void FadeIn(float seconds);

		[Token(Token = "0x60005B0")]
		void FadeOut(float seconds);

		[Token(Token = "0x60005B1")]
		void SuspendRendering(bool suspend);
	}
	[Token(Token = "0x20000F3")]
	internal class EmptyCompositorController : ICompositorController
	{
		[Token(Token = "0x60005B2")]
		[Address(RVA = "0x166B2B0", Offset = "0x166B2B0", VA = "0x166B2B0", Slot = "4")]
		public void FadeIn(float seconds)
		{
		}

		[Token(Token = "0x60005B3")]
		[Address(RVA = "0x166B4CC", Offset = "0x166B4CC", VA = "0x166B4CC", Slot = "5")]
		public void FadeOut(float seconds)
		{
		}

		[Token(Token = "0x60005B4")]
		[Address(RVA = "0x166B6E8", Offset = "0x166B6E8", VA = "0x166B6E8", Slot = "6")]
		public void SuspendRendering(bool suspend)
		{
		}

		[Token(Token = "0x60005B5")]
		[Address(RVA = "0x166A4E0", Offset = "0x166A4E0", VA = "0x166A4E0")]
		public EmptyCompositorController()
		{
		}
	}
	[Token(Token = "0x20000F4")]
	public static class XrUtil
	{
		[Token(Token = "0x60005B6")]
		[Address(RVA = "0x167F89C", Offset = "0x167F89C", VA = "0x167F89C")]
		public static void EnableRendering(bool enable)
		{
		}

		[Token(Token = "0x60005B7")]
		[Address(RVA = "0x168B534", Offset = "0x168B534", VA = "0x168B534")]
		public static void Recenter()
		{
		}

		[Token(Token = "0x60005B8")]
		public static T GetLoadedXrSubsystem<T>() where T : class, ISubsystem
		{
			return null;
		}
	}
	[Token(Token = "0x20000F5")]
	public class ZoomaXrManager : MonoBehaviour
	{
		[Token(Token = "0x20001BE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCF9CA0", Offset = "0xCF9CA0")]
		private sealed class <InitializeAsync>d__19 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400087C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400087D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400087E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ZoomaXrManager <>4__this;

			[Token(Token = "0x17000189")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000CE4")]
				[Address(RVA = "0x4C0A51C", Offset = "0x4C0A51C", VA = "0x4C0A51C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700018A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000CE6")]
				[Address(RVA = "0x4C0A6E8", Offset = "0x4C0A6E8", VA = "0x4C0A6E8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000CE1")]
			[Address(RVA = "0x4C093C4", Offset = "0x4C093C4", VA = "0x4C093C4")]
			[DebuggerHidden]
			public <InitializeAsync>d__19(int <>1__state)
			{
			}

			[Token(Token = "0x6000CE2")]
			[Address(RVA = "0x4C09B94", Offset = "0x4C09B94", VA = "0x4C09B94", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000CE3")]
			[Address(RVA = "0x4C09C74", Offset = "0x4C09C74", VA = "0x4C09C74", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000CE5")]
			[Address(RVA = "0x4C0A608", Offset = "0x4C0A608", VA = "0x4C0A608", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20001BF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCF9CB0", Offset = "0xCF9CB0")]
		private sealed class <LaunchXR>d__20 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400087F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000880")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000881")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ZoomaXrManager <>4__this;

			[Token(Token = "0x1700018B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000CEA")]
				[Address(RVA = "0x4C0B130", Offset = "0x4C0B130", VA = "0x4C0B130", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700018C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000CEC")]
				[Address(RVA = "0x4C0B2FC", Offset = "0x4C0B2FC", VA = "0x4C0B2FC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000CE7")]
			[Address(RVA = "0x4C095E0", Offset = "0x4C095E0", VA = "0x4C095E0")]
			[DebuggerHidden]
			public <LaunchXR>d__20(int <>1__state)
			{
			}

			[Token(Token = "0x6000CE8")]
			[Address(RVA = "0x4C0A7D4", Offset = "0x4C0A7D4", VA = "0x4C0A7D4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000CE9")]
			[Address(RVA = "0x4C0A8B4", Offset = "0x4C0A8B4", VA = "0x4C0A8B4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000CEB")]
			[Address(RVA = "0x4C0B21C", Offset = "0x4C0B21C", VA = "0x4C0B21C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400045B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCFC9AC", Offset = "0xCFC9AC")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xCFC9AC", Offset = "0xCFC9AC")]
		private static bool <IsVrInitialized>k__BackingField;

		[Token(Token = "0x400045C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		private static bool _isVrInitFailure;

		[Token(Token = "0x400045D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static XrWrapper xrWrapper;

		[Token(Token = "0x17000078")]
		public static bool IsVrInitialized
		{
			[Token(Token = "0x60005BD")]
			[Address(RVA = "0x4C074C4", Offset = "0x4C074C4", VA = "0x4C074C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD026F8", Offset = "0xD026F8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60005BE")]
			[Address(RVA = "0x4C0769C", Offset = "0x4C0769C", VA = "0x4C0769C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD02708", Offset = "0xD02708")]
			private set
			{
			}
		}

		[Token(Token = "0x17000079")]
		public static bool IsVrInitFailure
		{
			[Token(Token = "0x60005BF")]
			[Address(RVA = "0x4C0788C", Offset = "0x4C0788C", VA = "0x4C0788C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700007A")]
		public static bool HasInputFocus
		{
			[Token(Token = "0x60005C0")]
			[Address(RVA = "0x4C07A64", Offset = "0x4C07A64", VA = "0x4C07A64")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700007B")]
		public static bool HasVrFocus
		{
			[Token(Token = "0x60005C1")]
			[Address(RVA = "0x4C07D1C", Offset = "0x4C07D1C", VA = "0x4C07D1C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1400001E")]
		public static event Action VrFocusLost
		{
			[Token(Token = "0x60005B9")]
			[Address(RVA = "0x4C06DFC", Offset = "0x4C06DFC", VA = "0x4C06DFC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD026B8", Offset = "0xD026B8")]
			add
			{
			}
			[Token(Token = "0x60005BA")]
			[Address(RVA = "0x4C06FAC", Offset = "0x4C06FAC", VA = "0x4C06FAC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD026C8", Offset = "0xD026C8")]
			remove
			{
			}
		}

		[Token(Token = "0x1400001F")]
		public static event Action VrFocusAcquired
		{
			[Token(Token = "0x60005BB")]
			[Address(RVA = "0x4C0715C", Offset = "0x4C0715C", VA = "0x4C0715C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD026D8", Offset = "0xD026D8")]
			add
			{
			}
			[Token(Token = "0x60005BC")]
			[Address(RVA = "0x4C07310", Offset = "0x4C07310", VA = "0x4C07310")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD026E8", Offset = "0xD026E8")]
			remove
			{
			}
		}

		[Token(Token = "0x60005C2")]
		[Address(RVA = "0x4C07FD8", Offset = "0x4C07FD8", VA = "0x4C07FD8")]
		private static void Log(object message)
		{
		}

		[Token(Token = "0x60005C3")]
		[Address(RVA = "0x4C092A8", Offset = "0x4C092A8", VA = "0x4C092A8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD02718", Offset = "0xD02718")]
		public IEnumerator InitializeAsync()
		{
			return null;
		}

		[Token(Token = "0x60005C4")]
		[Address(RVA = "0x4C094C4", Offset = "0x4C094C4", VA = "0x4C094C4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD0277C", Offset = "0xD0277C")]
		private IEnumerator LaunchXR()
		{
			return null;
		}

		[Token(Token = "0x60005C5")]
		[Address(RVA = "0x4C096E0", Offset = "0x4C096E0", VA = "0x4C096E0")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x60005C6")]
		[Address(RVA = "0x4C098F0", Offset = "0x4C098F0", VA = "0x4C098F0")]
		public ZoomaXrManager()
		{
		}
	}
	[Token(Token = "0x20000F6")]
	internal static class ZoomaXrWrapper
	{
		[Token(Token = "0x60005C8")]
		[Address(RVA = "0x4C0A240", Offset = "0x4C0A240", VA = "0x4C0A240")]
		public static XrWrapper Initialize()
		{
			return null;
		}
	}
	[Token(Token = "0x20000F7")]
	public class EmptyXrWrapper : XrWrapper
	{
		[Token(Token = "0x1700007C")]
		public bool HasInputFocus
		{
			[Token(Token = "0x60005C9")]
			[Address(RVA = "0x166BF64", Offset = "0x166BF64", VA = "0x166BF64", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700007D")]
		public bool HasVrFocus
		{
			[Token(Token = "0x60005CA")]
			[Address(RVA = "0x166C11C", Offset = "0x166C11C", VA = "0x166C11C", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60005CB")]
		[Address(RVA = "0x166C2D4", Offset = "0x166C2D4", VA = "0x166C2D4")]
		public EmptyXrWrapper()
		{
		}
	}
}
namespace Zooma.Utils
{
	[Token(Token = "0x20000F8")]
	public static class LogUtility
	{
		[MethodImpl(256)]
		[Token(Token = "0x60005CC")]
		[Address(RVA = "0x168A690", Offset = "0x168A690", VA = "0x168A690")]
		public static void Log(string source, object msg)
		{
		}

		[MethodImpl(256)]
		[Token(Token = "0x60005CD")]
		[Address(RVA = "0x168A960", Offset = "0x168A960", VA = "0x168A960")]
		public static void LogBold(string source, object msg)
		{
		}
	}
}
namespace Zooma.Input
{
	[Token(Token = "0x20000F9")]
	public class TrackedDeviceRaycasterPlus : TrackedDeviceRaycaster
	{
		[Token(Token = "0x400045E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCFC9E8", Offset = "0xCFC9E8")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xCFC9E8", Offset = "0xCFC9E8")]
		private static readonly List<TrackedDeviceRaycaster> <Instances>k__BackingField;

		[Token(Token = "0x1700007E")]
		public static List<TrackedDeviceRaycaster> Instances
		{
			[Token(Token = "0x60005CE")]
			[Address(RVA = "0x16802D4", Offset = "0x16802D4", VA = "0x16802D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD027E0", Offset = "0xD027E0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60005CF")]
		[Address(RVA = "0x168049C", Offset = "0x168049C", VA = "0x168049C", Slot = "5")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x60005D0")]
		[Address(RVA = "0x1680AB0", Offset = "0x1680AB0", VA = "0x1680AB0", Slot = "7")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x60005D1")]
		[Address(RVA = "0x1680EFC", Offset = "0x1680EFC", VA = "0x1680EFC")]
		public TrackedDeviceRaycasterPlus()
		{
		}
	}
}
namespace Oculus.Spatializer.Propagation
{
	[Token(Token = "0x20000FA")]
	public enum FaceType : uint
	{
		[Token(Token = "0x4000460")]
		TRIANGLES,
		[Token(Token = "0x4000461")]
		QUADS
	}
	[Token(Token = "0x20000FB")]
	public enum MaterialProperty : uint
	{
		[Token(Token = "0x4000463")]
		ABSORPTION,
		[Token(Token = "0x4000464")]
		TRANSMISSION,
		[Token(Token = "0x4000465")]
		SCATTERING
	}
	[Token(Token = "0x20000FC")]
	public struct MeshGroup
	{
		[Token(Token = "0x4000466")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public UIntPtr indexOffset;

		[Token(Token = "0x4000467")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public UIntPtr faceCount;

		[Token(Token = "0x4000468")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public FaceType faceType;

		[Token(Token = "0x4000469")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public IntPtr material;
	}
}
namespace GameAnalyticsSDK
{
	[Token(Token = "0x20000FD")]
	public enum GAErrorSeverity
	{
		[Token(Token = "0x400046B")]
		Undefined,
		[Token(Token = "0x400046C")]
		Debug,
		[Token(Token = "0x400046D")]
		Info,
		[Token(Token = "0x400046E")]
		Warning,
		[Token(Token = "0x400046F")]
		Error,
		[Token(Token = "0x4000470")]
		Critical
	}
	[Token(Token = "0x20000FE")]
	public enum GAProgressionStatus
	{
		[Token(Token = "0x4000472")]
		Undefined,
		[Token(Token = "0x4000473")]
		Start,
		[Token(Token = "0x4000474")]
		Complete,
		[Token(Token = "0x4000475")]
		Fail
	}
	[Token(Token = "0x20000FF")]
	public enum GAResourceFlowType
	{
		[Token(Token = "0x4000477")]
		Undefined,
		[Token(Token = "0x4000478")]
		Source,
		[Token(Token = "0x4000479")]
		Sink
	}
	[Token(Token = "0x2000100")]
	public enum GAAdAction
	{
		[Token(Token = "0x400047B")]
		Undefined,
		[Token(Token = "0x400047C")]
		Clicked,
		[Token(Token = "0x400047D")]
		Show,
		[Token(Token = "0x400047E")]
		FailedShow,
		[Token(Token = "0x400047F")]
		RewardReceived,
		[Token(Token = "0x4000480")]
		Request,
		[Token(Token = "0x4000481")]
		Loaded
	}
	[Token(Token = "0x2000101")]
	public enum GAAdType
	{
		[Token(Token = "0x4000483")]
		Undefined,
		[Token(Token = "0x4000484")]
		Video,
		[Token(Token = "0x4000485")]
		RewardedVideo,
		[Token(Token = "0x4000486")]
		Playable,
		[Token(Token = "0x4000487")]
		Interstitial,
		[Token(Token = "0x4000488")]
		OfferWall,
		[Token(Token = "0x4000489")]
		Banner
	}
	[Token(Token = "0x2000102")]
	public enum GAAdError
	{
		[Token(Token = "0x400048B")]
		Undefined,
		[Token(Token = "0x400048C")]
		Unknown,
		[Token(Token = "0x400048D")]
		Offline,
		[Token(Token = "0x400048E")]
		NoFill,
		[Token(Token = "0x400048F")]
		InternalError,
		[Token(Token = "0x4000490")]
		InvalidRequest,
		[Token(Token = "0x4000491")]
		UnableToPrecache
	}
	[Token(Token = "0x2000103")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xCF9054", Offset = "0xCF9054")]
	[ExecuteInEditMode]
	public class GameAnalytics : MonoBehaviour
	{
		[Token(Token = "0x4000492")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Settings _settings;

		[Token(Token = "0x4000493")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static GameAnalytics _instance;

		[Token(Token = "0x4000494")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static bool _hasInitializeBeenCalled;

		[Token(Token = "0x1700007F")]
		public static Settings SettingsGA
		{
			[Token(Token = "0x60005D3")]
			[Address(RVA = "0x41AFDE0", Offset = "0x41AFDE0", VA = "0x41AFDE0")]
			get
			{
				return null;
			}
			[Token(Token = "0x60005D4")]
			[Address(RVA = "0x41B4CD0", Offset = "0x41B4CD0", VA = "0x41B4CD0")]
			private set
			{
			}
		}

		[Token(Token = "0x14000020")]
		public static event Action OnRemoteConfigsUpdatedEvent
		{
			[Token(Token = "0x60005F4")]
			[Address(RVA = "0x41C7C8C", Offset = "0x41C7C8C", VA = "0x41C7C8C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD027F0", Offset = "0xD027F0")]
			add
			{
			}
			[Token(Token = "0x60005F5")]
			[Address(RVA = "0x41C7E08", Offset = "0x41C7E08", VA = "0x41C7E08")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD02800", Offset = "0xD02800")]
			remove
			{
			}
		}

		[Token(Token = "0x60005D5")]
		[Address(RVA = "0x41B4F54", Offset = "0x41B4F54", VA = "0x41B4F54")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60005D6")]
		[Address(RVA = "0x41B52C0", Offset = "0x41B52C0", VA = "0x41B52C0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60005D7")]
		[Address(RVA = "0x41B562C", Offset = "0x41B562C", VA = "0x41B562C")]
		public void Awake()
		{
		}

		[Token(Token = "0x60005D8")]
		[Address(RVA = "0x41B6058", Offset = "0x41B6058", VA = "0x41B6058")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60005D9")]
		[Address(RVA = "0x41B65C0", Offset = "0x41B65C0", VA = "0x41B65C0")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x60005DA")]
		[Address(RVA = "0x41B43E4", Offset = "0x41B43E4", VA = "0x41B43E4")]
		private static void InitAPI()
		{
		}

		[Token(Token = "0x60005DB")]
		[Address(RVA = "0x41B6FF8", Offset = "0x41B6FF8", VA = "0x41B6FF8")]
		private static void InternalInitialize()
		{
		}

		[Token(Token = "0x60005DC")]
		[Address(RVA = "0x41BDFD8", Offset = "0x41BDFD8", VA = "0x41BDFD8")]
		public static void Initialize()
		{
		}

		[Token(Token = "0x60005DD")]
		[Address(RVA = "0x41C0490", Offset = "0x41C0490", VA = "0x41C0490")]
		public static void NewBusinessEvent(string currency, int amount, string itemType, string itemId, string cartType)
		{
		}

		[Token(Token = "0x60005DE")]
		[Address(RVA = "0x41C0A18", Offset = "0x41C0A18", VA = "0x41C0A18")]
		public static void NewBusinessEventGooglePlay(string currency, int amount, string itemType, string itemId, string cartType, string receipt, string signature)
		{
		}

		[Token(Token = "0x60005DF")]
		[Address(RVA = "0x41C0FB4", Offset = "0x41C0FB4", VA = "0x41C0FB4")]
		public static void NewDesignEvent(string eventName)
		{
		}

		[Token(Token = "0x60005E0")]
		[Address(RVA = "0x41B14D0", Offset = "0x41B14D0", VA = "0x41B14D0")]
		public static void NewDesignEvent(string eventName, float eventValue)
		{
		}

		[Token(Token = "0x60005E1")]
		[Address(RVA = "0x41C150C", Offset = "0x41C150C", VA = "0x41C150C")]
		public static void NewProgressionEvent(GAProgressionStatus progressionStatus, string progression01)
		{
		}

		[Token(Token = "0x60005E2")]
		[Address(RVA = "0x41C1A70", Offset = "0x41C1A70", VA = "0x41C1A70")]
		public static void NewProgressionEvent(GAProgressionStatus progressionStatus, string progression01, string progression02)
		{
		}

		[Token(Token = "0x60005E3")]
		[Address(RVA = "0x41C1FDC", Offset = "0x41C1FDC", VA = "0x41C1FDC")]
		public static void NewProgressionEvent(GAProgressionStatus progressionStatus, string progression01, string progression02, string progression03)
		{
		}

		[Token(Token = "0x60005E4")]
		[Address(RVA = "0x41C2554", Offset = "0x41C2554", VA = "0x41C2554")]
		public static void NewProgressionEvent(GAProgressionStatus progressionStatus, string progression01, int score)
		{
		}

		[Token(Token = "0x60005E5")]
		[Address(RVA = "0x41C2AC8", Offset = "0x41C2AC8", VA = "0x41C2AC8")]
		public static void NewProgressionEvent(GAProgressionStatus progressionStatus, string progression01, string progression02, int score)
		{
		}

		[Token(Token = "0x60005E6")]
		[Address(RVA = "0x41C3040", Offset = "0x41C3040", VA = "0x41C3040")]
		public static void NewProgressionEvent(GAProgressionStatus progressionStatus, string progression01, string progression02, string progression03, int score)
		{
		}

		[Token(Token = "0x60005E7")]
		[Address(RVA = "0x41C35C8", Offset = "0x41C35C8", VA = "0x41C35C8")]
		public static void NewResourceEvent(GAResourceFlowType flowType, string currency, float amount, string itemType, string itemId)
		{
		}

		[Token(Token = "0x60005E8")]
		[Address(RVA = "0x41C3B4C", Offset = "0x41C3B4C", VA = "0x41C3B4C")]
		public static void NewErrorEvent(GAErrorSeverity severity, string message)
		{
		}

		[Token(Token = "0x60005E9")]
		[Address(RVA = "0x41C40B0", Offset = "0x41C40B0", VA = "0x41C40B0")]
		public static void NewAdEvent(GAAdAction adAction, GAAdType adType, string adSdkName, string adPlacement, long duration)
		{
		}

		[Token(Token = "0x60005EA")]
		[Address(RVA = "0x41C462C", Offset = "0x41C462C", VA = "0x41C462C")]
		public static void NewAdEvent(GAAdAction adAction, GAAdType adType, string adSdkName, string adPlacement, GAAdError noAdReason)
		{
		}

		[Token(Token = "0x60005EB")]
		[Address(RVA = "0x41C4BA8", Offset = "0x41C4BA8", VA = "0x41C4BA8")]
		public static void NewAdEvent(GAAdAction adAction, GAAdType adType, string adSdkName, string adPlacement)
		{
		}

		[Token(Token = "0x60005EC")]
		[Address(RVA = "0x41C5114", Offset = "0x41C5114", VA = "0x41C5114")]
		public static void SetCustomId(string userId)
		{
		}

		[Token(Token = "0x60005ED")]
		[Address(RVA = "0x41BDCD0", Offset = "0x41BDCD0", VA = "0x41BDCD0")]
		public static void SetEnabledManualSessionHandling(bool enabled)
		{
		}

		[Token(Token = "0x60005EE")]
		[Address(RVA = "0x41C5B70", Offset = "0x41C5B70", VA = "0x41C5B70")]
		public static void SetEnabledEventSubmission(bool enabled)
		{
		}

		[Token(Token = "0x60005EF")]
		[Address(RVA = "0x41C6178", Offset = "0x41C6178", VA = "0x41C6178")]
		public static void StartSession()
		{
		}

		[Token(Token = "0x60005F0")]
		[Address(RVA = "0x41C6AB8", Offset = "0x41C6AB8", VA = "0x41C6AB8")]
		public static void EndSession()
		{
		}

		[Token(Token = "0x60005F1")]
		[Address(RVA = "0x41C73F8", Offset = "0x41C73F8", VA = "0x41C73F8")]
		public static void SetCustomDimension01(string customDimension)
		{
		}

		[Token(Token = "0x60005F2")]
		[Address(RVA = "0x41C76D4", Offset = "0x41C76D4", VA = "0x41C76D4")]
		public static void SetCustomDimension02(string customDimension)
		{
		}

		[Token(Token = "0x60005F3")]
		[Address(RVA = "0x41C79B0", Offset = "0x41C79B0", VA = "0x41C79B0")]
		public static void SetCustomDimension03(string customDimension)
		{
		}

		[Token(Token = "0x60005F6")]
		[Address(RVA = "0x41C7F84", Offset = "0x41C7F84", VA = "0x41C7F84")]
		public void OnRemoteConfigsUpdated()
		{
		}

		[Token(Token = "0x60005F7")]
		[Address(RVA = "0x41C83F8", Offset = "0x41C83F8", VA = "0x41C83F8")]
		public static void RemoteConfigsUpdated()
		{
		}

		[Token(Token = "0x60005F8")]
		[Address(RVA = "0x41C885C", Offset = "0x41C885C", VA = "0x41C885C")]
		public static string GetRemoteConfigsValueAsString(string key)
		{
			return null;
		}

		[Token(Token = "0x60005F9")]
		[Address(RVA = "0x41C8B3C", Offset = "0x41C8B3C", VA = "0x41C8B3C")]
		public static string GetRemoteConfigsValueAsString(string key, string defaultValue)
		{
			return null;
		}

		[Token(Token = "0x60005FA")]
		[Address(RVA = "0x41CA174", Offset = "0x41CA174", VA = "0x41CA174")]
		public static bool IsRemoteConfigsReady()
		{
			return default(bool);
		}

		[Token(Token = "0x60005FB")]
		[Address(RVA = "0x41CA74C", Offset = "0x41CA74C", VA = "0x41CA74C")]
		public static string GetRemoteConfigsContentAsString()
		{
			return null;
		}

		[Token(Token = "0x60005FC")]
		[Address(RVA = "0x41CAD1C", Offset = "0x41CAD1C", VA = "0x41CAD1C")]
		public static string GetABTestingId()
		{
			return null;
		}

		[Token(Token = "0x60005FD")]
		[Address(RVA = "0x41CB2EC", Offset = "0x41CB2EC", VA = "0x41CB2EC")]
		public static string GetABTestingVariantId()
		{
			return null;
		}

		[Token(Token = "0x60005FE")]
		[Address(RVA = "0x41CB8BC", Offset = "0x41CB8BC", VA = "0x41CB8BC")]
		public static void StartTimer(string key)
		{
		}

		[Token(Token = "0x60005FF")]
		[Address(RVA = "0x41CBEAC", Offset = "0x41CBEAC", VA = "0x41CBEAC")]
		public static void PauseTimer(string key)
		{
		}

		[Token(Token = "0x6000600")]
		[Address(RVA = "0x41CC49C", Offset = "0x41CC49C", VA = "0x41CC49C")]
		public static void ResumeTimer(string key)
		{
		}

		[Token(Token = "0x6000601")]
		[Address(RVA = "0x41CCA8C", Offset = "0x41CCA8C", VA = "0x41CCA8C")]
		public static long StopTimer(string key)
		{
			return default(long);
		}

		[Token(Token = "0x6000602")]
		[Address(RVA = "0x41CD094", Offset = "0x41CD094", VA = "0x41CD094")]
		public static void SubscribeMoPubImpressions()
		{
		}

		[Token(Token = "0x6000603")]
		[Address(RVA = "0x41CD65C", Offset = "0x41CD65C", VA = "0x41CD65C")]
		public static void SubscribeFyberImpressions()
		{
		}

		[Token(Token = "0x6000604")]
		[Address(RVA = "0x41BC2F8", Offset = "0x41BC2F8", VA = "0x41BC2F8")]
		private static string GetUnityVersion()
		{
			return null;
		}

		[Token(Token = "0x6000605")]
		[Address(RVA = "0x41BA884", Offset = "0x41BA884", VA = "0x41BA884")]
		private static int GetPlatformIndex()
		{
			return default(int);
		}

		[Token(Token = "0x6000606")]
		[Address(RVA = "0x41CDC24", Offset = "0x41CDC24", VA = "0x41CDC24")]
		public static void SetBuildAllPlatforms(string build)
		{
		}

		[Token(Token = "0x6000607")]
		[Address(RVA = "0x41CE34C", Offset = "0x41CE34C", VA = "0x41CE34C")]
		public GameAnalytics()
		{
		}
	}
}
namespace GameAnalyticsSDK.Wrapper
{
	[Token(Token = "0x2000104")]
	public class GA_Wrapper
	{
		[Token(Token = "0x4000496")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly AndroidJavaClass GA;

		[Token(Token = "0x4000497")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly AndroidJavaClass UNITY_GA;

		[Token(Token = "0x4000498")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static readonly AndroidJavaClass GA_IMEI;

		[Token(Token = "0x6000608")]
		[Address(RVA = "0x420356C", Offset = "0x420356C", VA = "0x420356C")]
		private static void configureAvailableCustomDimensions01(string list)
		{
		}

		[Token(Token = "0x6000609")]
		[Address(RVA = "0x42043F4", Offset = "0x42043F4", VA = "0x42043F4")]
		private static void configureAvailableCustomDimensions02(string list)
		{
		}

		[Token(Token = "0x600060A")]
		[Address(RVA = "0x420527C", Offset = "0x420527C", VA = "0x420527C")]
		private static void configureAvailableCustomDimensions03(string list)
		{
		}

		[Token(Token = "0x600060B")]
		[Address(RVA = "0x4206104", Offset = "0x4206104", VA = "0x4206104")]
		private static void configureAvailableResourceCurrencies(string list)
		{
		}

		[Token(Token = "0x600060C")]
		[Address(RVA = "0x4206F8C", Offset = "0x4206F8C", VA = "0x4206F8C")]
		private static void configureAvailableResourceItemTypes(string list)
		{
		}

		[Token(Token = "0x600060D")]
		[Address(RVA = "0x4207E14", Offset = "0x4207E14", VA = "0x4207E14")]
		private static void configureSdkGameEngineVersion(string unitySdkVersion)
		{
		}

		[Token(Token = "0x600060E")]
		[Address(RVA = "0x420819C", Offset = "0x420819C", VA = "0x420819C")]
		private static void configureGameEngineVersion(string unityEngineVersion)
		{
		}

		[Token(Token = "0x600060F")]
		[Address(RVA = "0x4208524", Offset = "0x4208524", VA = "0x4208524")]
		private static void configureBuild(string build)
		{
		}

		[Token(Token = "0x6000610")]
		[Address(RVA = "0x42088AC", Offset = "0x42088AC", VA = "0x42088AC")]
		private static void configureUserId(string userId)
		{
		}

		[Token(Token = "0x6000611")]
		[Address(RVA = "0x4208C34", Offset = "0x4208C34", VA = "0x4208C34")]
		private static void configureAutoDetectAppVersion(bool flag)
		{
		}

		[Token(Token = "0x6000612")]
		[Address(RVA = "0x4208FDC", Offset = "0x4208FDC", VA = "0x4208FDC")]
		private static void initialize(string gamekey, string gamesecret)
		{
		}

		[Token(Token = "0x6000613")]
		[Address(RVA = "0x420A084", Offset = "0x420A084", VA = "0x420A084")]
		private static void setCustomDimension01(string customDimension)
		{
		}

		[Token(Token = "0x6000614")]
		[Address(RVA = "0x420A40C", Offset = "0x420A40C", VA = "0x420A40C")]
		private static void setCustomDimension02(string customDimension)
		{
		}

		[Token(Token = "0x6000615")]
		[Address(RVA = "0x420A794", Offset = "0x420A794", VA = "0x420A794")]
		private static void setCustomDimension03(string customDimension)
		{
		}

		[Token(Token = "0x6000616")]
		[Address(RVA = "0x420AB1C", Offset = "0x420AB1C", VA = "0x420AB1C")]
		private static void addBusinessEvent(string currency, int amount, string itemType, string itemId, string cartType, string fields)
		{
		}

		[Token(Token = "0x6000617")]
		[Address(RVA = "0x420B014", Offset = "0x420B014", VA = "0x420B014")]
		private static void addBusinessEventWithReceipt(string currency, int amount, string itemType, string itemId, string cartType, string receipt, string store, string signature, string fields)
		{
		}

		[Token(Token = "0x6000618")]
		[Address(RVA = "0x420B5FC", Offset = "0x420B5FC", VA = "0x420B5FC")]
		private static void addResourceEvent(int flowType, string currency, float amount, string itemType, string itemId, string fields)
		{
		}

		[Token(Token = "0x6000619")]
		[Address(RVA = "0x420BB08", Offset = "0x420BB08", VA = "0x420BB08")]
		private static void addProgressionEvent(int progressionStatus, string progression01, string progression02, string progression03, string fields)
		{
		}

		[Token(Token = "0x600061A")]
		[Address(RVA = "0x420BFB0", Offset = "0x420BFB0", VA = "0x420BFB0")]
		private static void addProgressionEventWithScore(int progressionStatus, string progression01, string progression02, string progression03, int score, string fields)
		{
		}

		[Token(Token = "0x600061B")]
		[Address(RVA = "0x420C4C0", Offset = "0x420C4C0", VA = "0x420C4C0")]
		private static void addDesignEvent(string eventId, string fields)
		{
		}

		[Token(Token = "0x600061C")]
		[Address(RVA = "0x420C84C", Offset = "0x420C84C", VA = "0x420C84C")]
		private static void addDesignEventWithValue(string eventId, float value, string fields)
		{
		}

		[Token(Token = "0x600061D")]
		[Address(RVA = "0x420CC50", Offset = "0x420CC50", VA = "0x420CC50")]
		private static void addErrorEvent(int severity, string message, string fields)
		{
		}

		[Token(Token = "0x600061E")]
		[Address(RVA = "0x420D044", Offset = "0x420D044", VA = "0x420D044")]
		private static void addAdEventWithDuration(int adAction, int adType, string adSdkName, string adPlacement, long duration)
		{
		}

		[Token(Token = "0x600061F")]
		[Address(RVA = "0x420D560", Offset = "0x420D560", VA = "0x420D560")]
		private static void addAdEventWithReason(int adAction, int adType, string adSdkName, string adPlacement, int noAdReason)
		{
		}

		[Token(Token = "0x6000620")]
		[Address(RVA = "0x420DA78", Offset = "0x420DA78", VA = "0x420DA78")]
		private static void addAdEvent(int adAction, int adType, string adSdkName, string adPlacement)
		{
		}

		[Token(Token = "0x6000621")]
		[Address(RVA = "0x420DF24", Offset = "0x420DF24", VA = "0x420DF24")]
		private static void setEnabledInfoLog(bool enabled)
		{
		}

		[Token(Token = "0x6000622")]
		[Address(RVA = "0x420E2CC", Offset = "0x420E2CC", VA = "0x420E2CC")]
		private static void setEnabledVerboseLog(bool enabled)
		{
		}

		[Token(Token = "0x6000623")]
		[Address(RVA = "0x420E674", Offset = "0x420E674", VA = "0x420E674")]
		private static void setManualSessionHandling(bool enabled)
		{
		}

		[Token(Token = "0x6000624")]
		[Address(RVA = "0x420EA1C", Offset = "0x420EA1C", VA = "0x420EA1C")]
		private static void setEventSubmission(bool enabled)
		{
		}

		[Token(Token = "0x6000625")]
		[Address(RVA = "0x420EDC4", Offset = "0x420EDC4", VA = "0x420EDC4")]
		private static void gameAnalyticsStartSession()
		{
		}

		[Token(Token = "0x6000626")]
		[Address(RVA = "0x420F154", Offset = "0x420F154", VA = "0x420F154")]
		private static void gameAnalyticsEndSession()
		{
		}

		[Token(Token = "0x6000627")]
		[Address(RVA = "0x420F4E4", Offset = "0x420F4E4", VA = "0x420F4E4")]
		private static string getRemoteConfigsValueAsString(string key, string defaultValue)
		{
			return null;
		}

		[Token(Token = "0x6000628")]
		[Address(RVA = "0x420F8CC", Offset = "0x420F8CC", VA = "0x420F8CC")]
		private static bool isRemoteConfigsReady()
		{
			return default(bool);
		}

		[Token(Token = "0x6000629")]
		[Address(RVA = "0x420FC74", Offset = "0x420FC74", VA = "0x420FC74")]
		private static string getRemoteConfigsContentAsString()
		{
			return null;
		}

		[Token(Token = "0x600062A")]
		[Address(RVA = "0x4210018", Offset = "0x4210018", VA = "0x4210018")]
		private static string getABTestingId()
		{
			return null;
		}

		[Token(Token = "0x600062B")]
		[Address(RVA = "0x42103BC", Offset = "0x42103BC", VA = "0x42103BC")]
		private static string getABTestingVariantId()
		{
			return null;
		}

		[Token(Token = "0x600062C")]
		[Address(RVA = "0x4210760", Offset = "0x4210760", VA = "0x4210760")]
		private static void startTimer(string key)
		{
		}

		[Token(Token = "0x600062D")]
		[Address(RVA = "0x4210AE8", Offset = "0x4210AE8", VA = "0x4210AE8")]
		private static void pauseTimer(string key)
		{
		}

		[Token(Token = "0x600062E")]
		[Address(RVA = "0x4210E70", Offset = "0x4210E70", VA = "0x4210E70")]
		private static void resumeTimer(string key)
		{
		}

		[Token(Token = "0x600062F")]
		[Address(RVA = "0x42111F8", Offset = "0x42111F8", VA = "0x42111F8")]
		private static long stopTimer(string key)
		{
			return default(long);
		}

		[Token(Token = "0x6000630")]
		[Address(RVA = "0x4211594", Offset = "0x4211594", VA = "0x4211594")]
		private static void subscribeMoPubImpressions()
		{
		}

		[Token(Token = "0x6000631")]
		[Address(RVA = "0x42118F8", Offset = "0x42118F8", VA = "0x42118F8")]
		private static void MopubImpressionHandler(string json)
		{
		}

		[Token(Token = "0x6000632")]
		[Address(RVA = "0x4211B08", Offset = "0x4211B08", VA = "0x4211B08")]
		private static void subscribeFyberImpressions()
		{
		}

		[Token(Token = "0x6000633")]
		[Address(RVA = "0x4211E6C", Offset = "0x4211E6C", VA = "0x4211E6C")]
		private static void FyberImpressionHandler(string json)
		{
		}

		[Token(Token = "0x6000634")]
		[Address(RVA = "0x41A8F18", Offset = "0x41A8F18", VA = "0x41A8F18")]
		public static void SetAvailableCustomDimensions01(string list)
		{
		}

		[Token(Token = "0x6000635")]
		[Address(RVA = "0x41A9858", Offset = "0x41A9858", VA = "0x41A9858")]
		public static void SetAvailableCustomDimensions02(string list)
		{
		}

		[Token(Token = "0x6000636")]
		[Address(RVA = "0x41AA198", Offset = "0x41AA198", VA = "0x41AA198")]
		public static void SetAvailableCustomDimensions03(string list)
		{
		}

		[Token(Token = "0x6000637")]
		[Address(RVA = "0x41AB660", Offset = "0x41AB660", VA = "0x41AB660")]
		public static void SetAvailableResourceCurrencies(string list)
		{
		}

		[Token(Token = "0x6000638")]
		[Address(RVA = "0x41ACB1C", Offset = "0x41ACB1C", VA = "0x41ACB1C")]
		public static void SetAvailableResourceItemTypes(string list)
		{
		}

		[Token(Token = "0x6000639")]
		[Address(RVA = "0x41BC000", Offset = "0x41BC000", VA = "0x41BC000")]
		public static void SetUnitySdkVersion(string unitySdkVersion)
		{
		}

		[Token(Token = "0x600063A")]
		[Address(RVA = "0x41BD3D8", Offset = "0x41BD3D8", VA = "0x41BD3D8")]
		public static void SetUnityEngineVersion(string unityEngineVersion)
		{
		}

		[Token(Token = "0x600063B")]
		[Address(RVA = "0x41BD9D8", Offset = "0x41BD9D8", VA = "0x41BD9D8")]
		public static void SetBuild(string build)
		{
		}

		[Token(Token = "0x600063C")]
		[Address(RVA = "0x41C5570", Offset = "0x41C5570", VA = "0x41C5570")]
		public static void SetCustomUserId(string userId)
		{
		}

		[Token(Token = "0x600063D")]
		[Address(RVA = "0x41C5868", Offset = "0x41C5868", VA = "0x41C5868")]
		public static void SetEnabledManualSessionHandling(bool enabled)
		{
		}

		[Token(Token = "0x600063E")]
		[Address(RVA = "0x41C5E78", Offset = "0x41C5E78", VA = "0x41C5E78")]
		public static void SetEnabledEventSubmission(bool enabled)
		{
		}

		[Token(Token = "0x600063F")]
		[Address(RVA = "0x41BD6D0", Offset = "0x41BD6D0", VA = "0x41BD6D0")]
		public static void SetAutoDetectAppVersion(bool flag)
		{
		}

		[Token(Token = "0x6000640")]
		[Address(RVA = "0x41C645C", Offset = "0x41C645C", VA = "0x41C645C")]
		public static void StartSession()
		{
		}

		[Token(Token = "0x6000641")]
		[Address(RVA = "0x41C6D9C", Offset = "0x41C6D9C", VA = "0x41C6D9C")]
		public static void EndSession()
		{
		}

		[Token(Token = "0x6000642")]
		[Address(RVA = "0x41C0180", Offset = "0x41C0180", VA = "0x41C0180")]
		public static void Initialize(string gamekey, string gamesecret)
		{
		}

		[Token(Token = "0x6000643")]
		[Address(RVA = "0x41ADD2C", Offset = "0x41ADD2C", VA = "0x41ADD2C")]
		public static void SetCustomDimension01(string customDimension)
		{
		}

		[Token(Token = "0x6000644")]
		[Address(RVA = "0x41AE31C", Offset = "0x41AE31C", VA = "0x41AE31C")]
		public static void SetCustomDimension02(string customDimension)
		{
		}

		[Token(Token = "0x6000645")]
		[Address(RVA = "0x41AE90C", Offset = "0x41AE90C", VA = "0x41AE90C")]
		public static void SetCustomDimension03(string customDimension)
		{
		}

		[Token(Token = "0x6000646")]
		[Address(RVA = "0x421207C", Offset = "0x421207C", VA = "0x421207C")]
		public static void AddBusinessEventWithReceipt(string currency, int amount, string itemType, string itemId, string cartType, string receipt, string store, string signature, IDictionary<string, object> fields)
		{
		}

		[Token(Token = "0x6000647")]
		[Address(RVA = "0x42132F8", Offset = "0x42132F8", VA = "0x42132F8")]
		public static void AddBusinessEvent(string currency, int amount, string itemType, string itemId, string cartType, IDictionary<string, object> fields)
		{
		}

		[Token(Token = "0x6000648")]
		[Address(RVA = "0x41A7EDC", Offset = "0x41A7EDC", VA = "0x41A7EDC")]
		public static void AddResourceEvent(GAResourceFlowType flowType, string currency, float amount, string itemType, string itemId, IDictionary<string, object> fields)
		{
		}

		[Token(Token = "0x6000649")]
		[Address(RVA = "0x4213714", Offset = "0x4213714", VA = "0x4213714")]
		public static void AddProgressionEvent(GAProgressionStatus progressionStatus, string progression01, string progression02, string progression03, IDictionary<string, object> fields)
		{
		}

		[Token(Token = "0x600064A")]
		[Address(RVA = "0x4213B20", Offset = "0x4213B20", VA = "0x4213B20")]
		public static void AddProgressionEventWithScore(GAProgressionStatus progressionStatus, string progression01, string progression02, string progression03, int score, IDictionary<string, object> fields)
		{
		}

		[Token(Token = "0x600064B")]
		[Address(RVA = "0x4213F40", Offset = "0x4213F40", VA = "0x4213F40")]
		public static void AddDesignEvent(string eventID, float eventValue, IDictionary<string, object> fields)
		{
		}

		[Token(Token = "0x600064C")]
		[Address(RVA = "0x421433C", Offset = "0x421433C", VA = "0x421433C")]
		public static void AddDesignEvent(string eventID, IDictionary<string, object> fields)
		{
		}

		[Token(Token = "0x600064D")]
		[Address(RVA = "0x4214728", Offset = "0x4214728", VA = "0x4214728")]
		public static void AddErrorEvent(GAErrorSeverity severity, string message, IDictionary<string, object> fields)
		{
		}

		[Token(Token = "0x600064E")]
		[Address(RVA = "0x4214B20", Offset = "0x4214B20", VA = "0x4214B20")]
		public static void AddAdEventWithDuration(GAAdAction adAction, GAAdType adType, string adSdkName, string adPlacement, long duration)
		{
		}

		[Token(Token = "0x600064F")]
		[Address(RVA = "0x4214E60", Offset = "0x4214E60", VA = "0x4214E60")]
		public static void AddAdEventWithReason(GAAdAction adAction, GAAdType adType, string adSdkName, string adPlacement, GAAdError noAdReason)
		{
		}

		[Token(Token = "0x6000650")]
		[Address(RVA = "0x42151A0", Offset = "0x42151A0", VA = "0x42151A0")]
		public static void AddAdEvent(GAAdAction adAction, GAAdType adType, string adSdkName, string adPlacement)
		{
		}

		[Token(Token = "0x6000651")]
		[Address(RVA = "0x41AD11C", Offset = "0x41AD11C", VA = "0x41AD11C")]
		public static void SetInfoLog(bool enabled)
		{
		}

		[Token(Token = "0x6000652")]
		[Address(RVA = "0x41AD72C", Offset = "0x41AD72C", VA = "0x41AD72C")]
		public static void SetVerboseLog(bool enabled)
		{
		}

		[Token(Token = "0x6000653")]
		[Address(RVA = "0x41C8E58", Offset = "0x41C8E58", VA = "0x41C8E58")]
		public static string GetRemoteConfigsValueAsString(string key, string defaultValue)
		{
			return null;
		}

		[Token(Token = "0x6000654")]
		[Address(RVA = "0x41CA460", Offset = "0x41CA460", VA = "0x41CA460")]
		public static bool IsRemoteConfigsReady()
		{
			return default(bool);
		}

		[Token(Token = "0x6000655")]
		[Address(RVA = "0x41CAA34", Offset = "0x41CAA34", VA = "0x41CAA34")]
		public static string GetRemoteConfigsContentAsString()
		{
			return null;
		}

		[Token(Token = "0x6000656")]
		[Address(RVA = "0x41CB004", Offset = "0x41CB004", VA = "0x41CB004")]
		public static string GetABTestingId()
		{
			return null;
		}

		[Token(Token = "0x6000657")]
		[Address(RVA = "0x41CB5D4", Offset = "0x41CB5D4", VA = "0x41CB5D4")]
		public static string GetABTestingVariantId()
		{
			return null;
		}

		[Token(Token = "0x6000658")]
		[Address(RVA = "0x42124BC", Offset = "0x42124BC", VA = "0x42124BC")]
		private static string DictionaryToJsonString(IDictionary<string, object> dict)
		{
			return null;
		}

		[Token(Token = "0x6000659")]
		[Address(RVA = "0x41CBBB4", Offset = "0x41CBBB4", VA = "0x41CBBB4")]
		public static void StartTimer(string key)
		{
		}

		[Token(Token = "0x600065A")]
		[Address(RVA = "0x41CC1A4", Offset = "0x41CC1A4", VA = "0x41CC1A4")]
		public static void PauseTimer(string key)
		{
		}

		[Token(Token = "0x600065B")]
		[Address(RVA = "0x41CC794", Offset = "0x41CC794", VA = "0x41CC794")]
		public static void ResumeTimer(string key)
		{
		}

		[Token(Token = "0x600065C")]
		[Address(RVA = "0x41CCD90", Offset = "0x41CCD90", VA = "0x41CCD90")]
		public static long StopTimer(string key)
		{
			return default(long);
		}

		[Token(Token = "0x600065D")]
		[Address(RVA = "0x41CD378", Offset = "0x41CD378", VA = "0x41CD378")]
		public static void SubscribeMoPubImpressions()
		{
		}

		[Token(Token = "0x600065E")]
		[Address(RVA = "0x41CD940", Offset = "0x41CD940", VA = "0x41CD940")]
		public static void SubscribeFyberImpressions()
		{
		}

		[Token(Token = "0x600065F")]
		[Address(RVA = "0x42154CC", Offset = "0x42154CC", VA = "0x42154CC")]
		public GA_Wrapper()
		{
		}
	}
}
namespace GameAnalyticsSDK.Utilities
{
	[Token(Token = "0x2000105")]
	public class GA_MiniJSON
	{
		[Token(Token = "0x20001C0")]
		private sealed class Parser : IDisposable
		{
			[Token(Token = "0x200024A")]
			private enum TOKEN
			{
				[Token(Token = "0x4000A24")]
				NONE,
				[Token(Token = "0x4000A25")]
				CURLY_OPEN,
				[Token(Token = "0x4000A26")]
				CURLY_CLOSE,
				[Token(Token = "0x4000A27")]
				SQUARED_OPEN,
				[Token(Token = "0x4000A28")]
				SQUARED_CLOSE,
				[Token(Token = "0x4000A29")]
				COLON,
				[Token(Token = "0x4000A2A")]
				COMMA,
				[Token(Token = "0x4000A2B")]
				STRING,
				[Token(Token = "0x4000A2C")]
				NUMBER,
				[Token(Token = "0x4000A2D")]
				TRUE,
				[Token(Token = "0x4000A2E")]
				FALSE,
				[Token(Token = "0x4000A2F")]
				NULL
			}

			[Token(Token = "0x4000882")]
			private const string WORD_BREAK = "{}[],:\"";

			[Token(Token = "0x4000883")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private StringReader json;

			[Token(Token = "0x1700018D")]
			private char PeekChar
			{
				[Token(Token = "0x6000CF8")]
				[Address(RVA = "0x41EC6C8", Offset = "0x41EC6C8", VA = "0x41EC6C8")]
				get
				{
					return default(char);
				}
			}

			[Token(Token = "0x1700018E")]
			private char NextChar
			{
				[Token(Token = "0x6000CF9")]
				[Address(RVA = "0x41EB18C", Offset = "0x41EB18C", VA = "0x41EB18C")]
				get
				{
					return default(char);
				}
			}

			[Token(Token = "0x1700018F")]
			private string NextWord
			{
				[Token(Token = "0x6000CFA")]
				[Address(RVA = "0x41EB51C", Offset = "0x41EB51C", VA = "0x41EB51C")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000190")]
			private TOKEN NextToken
			{
				[Token(Token = "0x6000CFB")]
				[Address(RVA = "0x41E66D8", Offset = "0x41E66D8", VA = "0x41E66D8")]
				get
				{
					return default(TOKEN);
				}
			}

			[Token(Token = "0x6000CED")]
			[Address(RVA = "0x41E39D4", Offset = "0x41E39D4", VA = "0x41E39D4")]
			public static bool IsWordBreak(char c)
			{
				return default(bool);
			}

			[Token(Token = "0x6000CEE")]
			[Address(RVA = "0x41E3D84", Offset = "0x41E3D84", VA = "0x41E3D84")]
			private Parser(string jsonString)
			{
			}

			[Token(Token = "0x6000CEF")]
			[Address(RVA = "0x41E2E0C", Offset = "0x41E2E0C", VA = "0x41E2E0C")]
			public static object Parse(string jsonString)
			{
				return null;
			}

			[Token(Token = "0x6000CF0")]
			[Address(RVA = "0x41E5524", Offset = "0x41E5524", VA = "0x41E5524", Slot = "4")]
			public void Dispose()
			{
			}

			[Token(Token = "0x6000CF1")]
			[Address(RVA = "0x41E5870", Offset = "0x41E5870", VA = "0x41E5870")]
			private Dictionary<string, object> ParseObject()
			{
				return null;
			}

			[Token(Token = "0x6000CF2")]
			[Address(RVA = "0x41E967C", Offset = "0x41E967C", VA = "0x41E967C")]
			private List<object> ParseArray()
			{
				return null;
			}

			[Token(Token = "0x6000CF3")]
			[Address(RVA = "0x41E5160", Offset = "0x41E5160", VA = "0x41E5160")]
			private object ParseValue()
			{
				return null;
			}

			[Token(Token = "0x6000CF4")]
			[Address(RVA = "0x41EA238", Offset = "0x41EA238", VA = "0x41EA238")]
			private object ParseByToken(TOKEN token)
			{
				return null;
			}

			[Token(Token = "0x6000CF5")]
			[Address(RVA = "0x41E770C", Offset = "0x41E770C", VA = "0x41E770C")]
			private string ParseString()
			{
				return null;
			}

			[Token(Token = "0x6000CF6")]
			[Address(RVA = "0x41EAA28", Offset = "0x41EAA28", VA = "0x41EAA28")]
			private object ParseNumber()
			{
				return null;
			}

			[Token(Token = "0x6000CF7")]
			[Address(RVA = "0x41EBF0C", Offset = "0x41EBF0C", VA = "0x41EBF0C")]
			private void EatWhitespace()
			{
			}
		}

		[Token(Token = "0x20001C1")]
		private sealed class Serializer
		{
			[Token(Token = "0x4000884")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private StringBuilder builder;

			[Token(Token = "0x6000CFC")]
			[Address(RVA = "0x41ECA50", Offset = "0x41ECA50", VA = "0x41ECA50")]
			private Serializer()
			{
			}

			[Token(Token = "0x6000CFD")]
			[Address(RVA = "0x41E3420", Offset = "0x41E3420", VA = "0x41E3420")]
			public static string Serialize(object obj)
			{
				return null;
			}

			[Token(Token = "0x6000CFE")]
			[Address(RVA = "0x41ECE0C", Offset = "0x41ECE0C", VA = "0x41ECE0C")]
			private void SerializeValue(object value)
			{
			}

			[Token(Token = "0x6000CFF")]
			[Address(RVA = "0x41F0A88", Offset = "0x41F0A88", VA = "0x41F0A88")]
			private void SerializeObject(IDictionary obj)
			{
			}

			[Token(Token = "0x6000D00")]
			[Address(RVA = "0x41EFBC0", Offset = "0x41EFBC0", VA = "0x41EFBC0")]
			private void SerializeArray(IList anArray)
			{
			}

			[Token(Token = "0x6000D01")]
			[Address(RVA = "0x41EE114", Offset = "0x41EE114", VA = "0x41EE114")]
			private void SerializeString(string str)
			{
			}

			[Token(Token = "0x6000D02")]
			[Address(RVA = "0x41F1D60", Offset = "0x41F1D60", VA = "0x41F1D60")]
			private void SerializeOther(object value)
			{
			}
		}

		[Token(Token = "0x6000661")]
		[Address(RVA = "0x41E29BC", Offset = "0x41E29BC", VA = "0x41E29BC")]
		public static object Deserialize(string json)
		{
			return null;
		}

		[Token(Token = "0x6000662")]
		[Address(RVA = "0x41A8C3C", Offset = "0x41A8C3C", VA = "0x41A8C3C")]
		public static string Serialize(object obj)
		{
			return null;
		}

		[Token(Token = "0x6000663")]
		[Address(RVA = "0x41E38E4", Offset = "0x41E38E4", VA = "0x41E38E4")]
		public GA_MiniJSON()
		{
		}
	}
}
namespace GameAnalyticsSDK.State
{
	[Token(Token = "0x2000106")]
	internal static class GAState
	{
		[Token(Token = "0x4000499")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Settings _settings;

		[Token(Token = "0x6000664")]
		[Address(RVA = "0x41B67D0", Offset = "0x41B67D0", VA = "0x41B67D0")]
		public static void Init()
		{
		}

		[Token(Token = "0x6000665")]
		[Address(RVA = "0x41E0E58", Offset = "0x41E0E58", VA = "0x41E0E58")]
		private static bool ListContainsString(List<string> _list, string _string)
		{
			return default(bool);
		}

		[Token(Token = "0x6000666")]
		[Address(RVA = "0x41E1260", Offset = "0x41E1260", VA = "0x41E1260")]
		public static bool IsManualSessionHandlingEnabled()
		{
			return default(bool);
		}

		[Token(Token = "0x6000667")]
		[Address(RVA = "0x41E14EC", Offset = "0x41E14EC", VA = "0x41E14EC")]
		public static bool HasAvailableResourceCurrency(string _currency)
		{
			return default(bool);
		}

		[Token(Token = "0x6000668")]
		[Address(RVA = "0x41E1904", Offset = "0x41E1904", VA = "0x41E1904")]
		public static bool HasAvailableResourceItemType(string _itemType)
		{
			return default(bool);
		}

		[Token(Token = "0x6000669")]
		[Address(RVA = "0x41E1D1C", Offset = "0x41E1D1C", VA = "0x41E1D1C")]
		public static bool HasAvailableCustomDimensions01(string _dimension01)
		{
			return default(bool);
		}

		[Token(Token = "0x600066A")]
		[Address(RVA = "0x41E2134", Offset = "0x41E2134", VA = "0x41E2134")]
		public static bool HasAvailableCustomDimensions02(string _dimension02)
		{
			return default(bool);
		}

		[Token(Token = "0x600066B")]
		[Address(RVA = "0x41E25A4", Offset = "0x41E25A4", VA = "0x41E25A4")]
		public static bool HasAvailableCustomDimensions03(string _dimension03)
		{
			return default(bool);
		}
	}
}
namespace GameAnalyticsSDK.Setup
{
	[Token(Token = "0x2000107")]
	public class Settings : ScriptableObject
	{
		[Token(Token = "0x20001C2")]
		public enum HelpTypes
		{
			[Token(Token = "0x4000886")]
			None,
			[Token(Token = "0x4000887")]
			IncludeSystemSpecsHelp,
			[Token(Token = "0x4000888")]
			ProvideCustomUserID
		}

		[Token(Token = "0x20001C3")]
		public enum MessageTypes
		{
			[Token(Token = "0x400088A")]
			None,
			[Token(Token = "0x400088B")]
			Error,
			[Token(Token = "0x400088C")]
			Info,
			[Token(Token = "0x400088D")]
			Warning
		}

		[Token(Token = "0x20001C4")]
		public struct HelpInfo
		{
			[Token(Token = "0x400088E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string Message;

			[Token(Token = "0x400088F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public MessageTypes MsgType;

			[Token(Token = "0x4000890")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public HelpTypes HelpType;
		}

		[Token(Token = "0x20001C5")]
		public enum InspectorStates
		{
			[Token(Token = "0x4000892")]
			Account,
			[Token(Token = "0x4000893")]
			Basic,
			[Token(Token = "0x4000894")]
			Debugging,
			[Token(Token = "0x4000895")]
			Pref
		}

		[Token(Token = "0x400049A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[HideInInspector]
		public static string VERSION;

		[Token(Token = "0x400049B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[HideInInspector]
		public static bool CheckingForUpdates;

		[Token(Token = "0x400049C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int TotalMessagesSubmitted;

		[Token(Token = "0x400049D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int TotalMessagesFailed;

		[Token(Token = "0x400049E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int DesignMessagesSubmitted;

		[Token(Token = "0x400049F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int DesignMessagesFailed;

		[Token(Token = "0x40004A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int QualityMessagesSubmitted;

		[Token(Token = "0x40004A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int QualityMessagesFailed;

		[Token(Token = "0x40004A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int ErrorMessagesSubmitted;

		[Token(Token = "0x40004A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public int ErrorMessagesFailed;

		[Token(Token = "0x40004A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int BusinessMessagesSubmitted;

		[Token(Token = "0x40004A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int BusinessMessagesFailed;

		[Token(Token = "0x40004A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int UserMessagesSubmitted;

		[Token(Token = "0x40004A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public int UserMessagesFailed;

		[Token(Token = "0x40004A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string CustomArea;

		[Token(Token = "0x40004A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private List<string> gameKey;

		[Token(Token = "0x40004AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private List<string> secretKey;

		[Token(Token = "0x40004AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		public List<string> Build;

		[Token(Token = "0x40004AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		public List<string> SelectedPlatformOrganization;

		[Token(Token = "0x40004AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		public List<string> SelectedPlatformStudio;

		[Token(Token = "0x40004AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		public List<string> SelectedPlatformGame;

		[Token(Token = "0x40004AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		public List<int> SelectedPlatformGameID;

		[Token(Token = "0x40004B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		public List<int> SelectedOrganization;

		[Token(Token = "0x40004B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		public List<int> SelectedStudio;

		[Token(Token = "0x40004B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		public List<int> SelectedGame;

		[Token(Token = "0x40004B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public string NewVersion;

		[Token(Token = "0x40004B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public string Changes;

		[Token(Token = "0x40004B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public bool SignUpOpen;

		[Token(Token = "0x40004B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public string StudioName;

		[Token(Token = "0x40004B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public string GameName;

		[Token(Token = "0x40004B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public string OrganizationName;

		[Token(Token = "0x40004B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public string OrganizationIdentifier;

		[Token(Token = "0x40004BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public string EmailGA;

		[NonSerialized]
		[Token(Token = "0x40004BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public string PasswordGA;

		[NonSerialized]
		[Token(Token = "0x40004BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public string TokenGA;

		[NonSerialized]
		[Token(Token = "0x40004BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public string ExpireTime;

		[NonSerialized]
		[Token(Token = "0x40004BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public string LoginStatus;

		[NonSerialized]
		[Token(Token = "0x40004BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public bool JustSignedUp;

		[NonSerialized]
		[Token(Token = "0x40004C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x101")]
		public bool HideSignupWarning;

		[Token(Token = "0x40004C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x102")]
		public bool IntroScreen;

		[NonSerialized]
		[Token(Token = "0x40004C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public List<Organization> Organizations;

		[Token(Token = "0x40004C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public bool InfoLogEditor;

		[Token(Token = "0x40004C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x111")]
		public bool InfoLogBuild;

		[Token(Token = "0x40004C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x112")]
		public bool VerboseLogBuild;

		[Token(Token = "0x40004C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x113")]
		public bool UseManualSessionHandling;

		[Token(Token = "0x40004C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		public bool SendExampleGameDataToMyGame;

		[Token(Token = "0x40004C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x115")]
		public bool UseIMEI;

		[Token(Token = "0x40004C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x116")]
		public bool InternetConnectivity;

		[Token(Token = "0x40004CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public List<string> CustomDimensions01;

		[Token(Token = "0x40004CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public List<string> CustomDimensions02;

		[Token(Token = "0x40004CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public List<string> CustomDimensions03;

		[Token(Token = "0x40004CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public List<string> ResourceItemTypes;

		[Token(Token = "0x40004CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public List<string> ResourceCurrencies;

		[Token(Token = "0x40004CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public RuntimePlatform LastCreatedGamePlatform;

		[Token(Token = "0x40004D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		public List<RuntimePlatform> Platforms;

		[Token(Token = "0x40004D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		public InspectorStates CurrentInspectorState;

		[Token(Token = "0x40004D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		public List<HelpTypes> ClosedHints;

		[Token(Token = "0x40004D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		public bool DisplayHints;

		[Token(Token = "0x40004D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
		public Vector2 DisplayHintsScrollState;

		[Token(Token = "0x40004D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		public Texture2D Logo;

		[Token(Token = "0x40004D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		public Texture2D UpdateIcon;

		[Token(Token = "0x40004D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		public Texture2D InfoIcon;

		[Token(Token = "0x40004D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		public Texture2D DeleteIcon;

		[Token(Token = "0x40004D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		public Texture2D GameIcon;

		[Token(Token = "0x40004DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		public Texture2D HomeIcon;

		[Token(Token = "0x40004DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		public Texture2D InstrumentIcon;

		[Token(Token = "0x40004DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		public Texture2D QuestionIcon;

		[Token(Token = "0x40004DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		public Texture2D UserIcon;

		[Token(Token = "0x40004DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		public Texture2D AmazonIcon;

		[Token(Token = "0x40004DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		public Texture2D GooglePlayIcon;

		[Token(Token = "0x40004E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		public Texture2D iosIcon;

		[Token(Token = "0x40004E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		public Texture2D macIcon;

		[Token(Token = "0x40004E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		public Texture2D windowsPhoneIcon;

		[NonSerialized]
		[Token(Token = "0x40004E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		public GUIStyle SignupButton;

		[Token(Token = "0x40004E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		public bool UsePlayerSettingsBuildNumber;

		[Token(Token = "0x40004E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E9")]
		public bool SubmitErrors;

		[Token(Token = "0x40004E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1EC")]
		public int MaxErrorCount;

		[Token(Token = "0x40004E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		public bool SubmitFpsAverage;

		[Token(Token = "0x40004E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F1")]
		public bool SubmitFpsCritical;

		[Token(Token = "0x40004E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F2")]
		public bool IncludeGooglePlay;

		[Token(Token = "0x40004EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F4")]
		public int FpsCriticalThreshold;

		[Token(Token = "0x40004EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		public int FpsCirticalSubmitInterval;

		[Token(Token = "0x40004EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		public List<bool> PlatformFoldOut;

		[Token(Token = "0x40004ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		public bool CustomDimensions01FoldOut;

		[Token(Token = "0x40004EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x209")]
		public bool CustomDimensions02FoldOut;

		[Token(Token = "0x40004EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20A")]
		public bool CustomDimensions03FoldOut;

		[Token(Token = "0x40004F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20B")]
		public bool ResourceItemTypesFoldOut;

		[Token(Token = "0x40004F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20C")]
		public bool ResourceCurrenciesFoldOut;

		[Token(Token = "0x40004F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly RuntimePlatform[] AvailablePlatforms;

		[Token(Token = "0x600066C")]
		[Address(RVA = "0x41D2D2C", Offset = "0x41D2D2C", VA = "0x41D2D2C")]
		public void SetCustomUserID(string customID)
		{
		}

		[Token(Token = "0x600066D")]
		[Address(RVA = "0x41D3134", Offset = "0x41D3134", VA = "0x41D3134")]
		public void RemovePlatformAtIndex(int index)
		{
		}

		[Token(Token = "0x600066E")]
		[Address(RVA = "0x41D4004", Offset = "0x41D4004", VA = "0x41D4004")]
		public void AddPlatform(RuntimePlatform platform)
		{
		}

		[Token(Token = "0x600066F")]
		[Address(RVA = "0x41D4CDC", Offset = "0x41D4CDC", VA = "0x41D4CDC")]
		public string[] GetAvailablePlatforms()
		{
			return null;
		}

		[Token(Token = "0x6000670")]
		[Address(RVA = "0x41D7108", Offset = "0x41D7108", VA = "0x41D7108")]
		public bool IsGameKeyValid(int index, string value)
		{
			return default(bool);
		}

		[Token(Token = "0x6000671")]
		[Address(RVA = "0x41D7B90", Offset = "0x41D7B90", VA = "0x41D7B90")]
		public bool IsSecretKeyValid(int index, string value)
		{
			return default(bool);
		}

		[Token(Token = "0x6000672")]
		[Address(RVA = "0x41D8618", Offset = "0x41D8618", VA = "0x41D8618")]
		public void UpdateGameKey(int index, string value)
		{
		}

		[Token(Token = "0x6000673")]
		[Address(RVA = "0x41D9284", Offset = "0x41D9284", VA = "0x41D9284")]
		public void UpdateSecretKey(int index, string value)
		{
		}

		[Token(Token = "0x6000674")]
		[Address(RVA = "0x41BFB68", Offset = "0x41BFB68", VA = "0x41BFB68")]
		public string GetGameKey(int index)
		{
			return null;
		}

		[Token(Token = "0x6000675")]
		[Address(RVA = "0x41BFE74", Offset = "0x41BFE74", VA = "0x41BFE74")]
		public string GetSecretKey(int index)
		{
			return null;
		}

		[Token(Token = "0x6000676")]
		[Address(RVA = "0x41D9EF0", Offset = "0x41D9EF0", VA = "0x41D9EF0")]
		public void SetCustomArea(string customArea)
		{
		}

		[Token(Token = "0x6000677")]
		[Address(RVA = "0x41DA10C", Offset = "0x41DA10C", VA = "0x41DA10C")]
		public void SetKeys(string gamekey, string secretkey)
		{
		}

		[Token(Token = "0x6000678")]
		[Address(RVA = "0x41DA330", Offset = "0x41DA330", VA = "0x41DA330")]
		public Settings()
		{
		}
	}
	[Token(Token = "0x2000108")]
	public class Organization
	{
		[Token(Token = "0x40004F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCFCB20", Offset = "0xCFCB20")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xCFCB20", Offset = "0xCFCB20")]
		private string <Name>k__BackingField;

		[Token(Token = "0x40004F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCFCB5C", Offset = "0xCFCB5C")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xCFCB5C", Offset = "0xCFCB5C")]
		private string <ID>k__BackingField;

		[Token(Token = "0x40004F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCFCB98", Offset = "0xCFCB98")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xCFCB98", Offset = "0xCFCB98")]
		private List<Studio> <Studios>k__BackingField;

		[Token(Token = "0x17000080")]
		public string Name
		{
			[Token(Token = "0x600067A")]
			[Address(RVA = "0x41CFF70", Offset = "0x41CFF70", VA = "0x41CFF70")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD02810", Offset = "0xD02810")]
			get
			{
				return null;
			}
			[Token(Token = "0x600067B")]
			[Address(RVA = "0x41D0124", Offset = "0x41D0124", VA = "0x41D0124")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD02820", Offset = "0xD02820")]
			private set
			{
			}
		}

		[Token(Token = "0x17000081")]
		public string ID
		{
			[Token(Token = "0x600067C")]
			[Address(RVA = "0x41D02E4", Offset = "0x41D02E4", VA = "0x41D02E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD02830", Offset = "0xD02830")]
			get
			{
				return null;
			}
			[Token(Token = "0x600067D")]
			[Address(RVA = "0x41D0498", Offset = "0x41D0498", VA = "0x41D0498")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD02840", Offset = "0xD02840")]
			private set
			{
			}
		}

		[Token(Token = "0x17000082")]
		public List<Studio> Studios
		{
			[Token(Token = "0x600067E")]
			[Address(RVA = "0x41D0658", Offset = "0x41D0658", VA = "0x41D0658")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD02850", Offset = "0xD02850")]
			get
			{
				return null;
			}
			[Token(Token = "0x600067F")]
			[Address(RVA = "0x41D080C", Offset = "0x41D080C", VA = "0x41D080C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD02860", Offset = "0xD02860")]
			private set
			{
			}
		}

		[Token(Token = "0x6000680")]
		[Address(RVA = "0x41D09CC", Offset = "0x41D09CC", VA = "0x41D09CC")]
		public Organization(string name, string id)
		{
		}

		[Token(Token = "0x6000681")]
		[Address(RVA = "0x41D14F8", Offset = "0x41D14F8", VA = "0x41D14F8")]
		public static string[] GetOrganizationNames(List<Organization> organizations, bool addFirstEmpty = true)
		{
			return null;
		}
	}
	[Token(Token = "0x2000109")]
	public class Studio
	{
		[Token(Token = "0x40004F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCFCBD4", Offset = "0xCFCBD4")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xCFCBD4", Offset = "0xCFCBD4")]
		private string <Name>k__BackingField;

		[Token(Token = "0x40004F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCFCC10", Offset = "0xCFCC10")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xCFCC10", Offset = "0xCFCC10")]
		private string <ID>k__BackingField;

		[Token(Token = "0x40004F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCFCC4C", Offset = "0xCFCC4C")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xCFCC4C", Offset = "0xCFCC4C")]
		private string <OrganizationID>k__BackingField;

		[Token(Token = "0x40004F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCFCC88", Offset = "0xCFCC88")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xCFCC88", Offset = "0xCFCC88")]
		private List<Game> <Games>k__BackingField;

		[Token(Token = "0x17000083")]
		public string Name
		{
			[Token(Token = "0x6000682")]
			[Address(RVA = "0x41DC684", Offset = "0x41DC684", VA = "0x41DC684")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD02870", Offset = "0xD02870")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000683")]
			[Address(RVA = "0x41DC838", Offset = "0x41DC838", VA = "0x41DC838")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD02880", Offset = "0xD02880")]
			private set
			{
			}
		}

		[Token(Token = "0x17000084")]
		public string ID
		{
			[Token(Token = "0x6000684")]
			[Address(RVA = "0x41DC9F8", Offset = "0x41DC9F8", VA = "0x41DC9F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD02890", Offset = "0xD02890")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000685")]
			[Address(RVA = "0x41DCBAC", Offset = "0x41DCBAC", VA = "0x41DCBAC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD028A0", Offset = "0xD028A0")]
			private set
			{
			}
		}

		[Token(Token = "0x17000085")]
		public string OrganizationID
		{
			[Token(Token = "0x6000686")]
			[Address(RVA = "0x41DCD6C", Offset = "0x41DCD6C", VA = "0x41DCD6C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD028B0", Offset = "0xD028B0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000687")]
			[Address(RVA = "0x41DCF20", Offset = "0x41DCF20", VA = "0x41DCF20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD028C0", Offset = "0xD028C0")]
			private set
			{
			}
		}

		[Token(Token = "0x17000086")]
		public List<Game> Games
		{
			[Token(Token = "0x6000688")]
			[Address(RVA = "0x41DD0D0", Offset = "0x41DD0D0", VA = "0x41DD0D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD028D0", Offset = "0xD028D0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000689")]
			[Address(RVA = "0x41DD284", Offset = "0x41DD284", VA = "0x41DD284")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD028E0", Offset = "0xD028E0")]
			private set
			{
			}
		}

		[Token(Token = "0x600068A")]
		[Address(RVA = "0x41DD444", Offset = "0x41DD444", VA = "0x41DD444")]
		public Studio(string name, string id, string orgId, List<Game> games)
		{
		}

		[Token(Token = "0x600068B")]
		[Address(RVA = "0x41DE184", Offset = "0x41DE184", VA = "0x41DE184")]
		public static string[] GetStudioNames(List<Studio> studios, bool addFirstEmpty = true)
		{
			return null;
		}

		[Token(Token = "0x600068C")]
		[Address(RVA = "0x41DF9B8", Offset = "0x41DF9B8", VA = "0x41DF9B8")]
		public static string[] GetGameNames(int index, List<Studio> studios)
		{
			return null;
		}
	}
	[Token(Token = "0x200010A")]
	public class Game
	{
		[Token(Token = "0x40004FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCFCCC4", Offset = "0xCFCCC4")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xCFCCC4", Offset = "0xCFCCC4")]
		private string <Name>k__BackingField;

		[Token(Token = "0x40004FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCFCD00", Offset = "0xCFCD00")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xCFCD00", Offset = "0xCFCD00")]
		private int <ID>k__BackingField;

		[Token(Token = "0x40004FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCFCD3C", Offset = "0xCFCD3C")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xCFCD3C", Offset = "0xCFCD3C")]
		private string <GameKey>k__BackingField;

		[Token(Token = "0x40004FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCFCD78", Offset = "0xCFCD78")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xCFCD78", Offset = "0xCFCD78")]
		private string <SecretKey>k__BackingField;

		[Token(Token = "0x17000087")]
		public string Name
		{
			[Token(Token = "0x600068D")]
			[Address(RVA = "0x41CE43C", Offset = "0x41CE43C", VA = "0x41CE43C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD028F0", Offset = "0xD028F0")]
			get
			{
				return null;
			}
			[Token(Token = "0x600068E")]
			[Address(RVA = "0x41CE5F0", Offset = "0x41CE5F0", VA = "0x41CE5F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD02900", Offset = "0xD02900")]
			private set
			{
			}
		}

		[Token(Token = "0x17000088")]
		public int ID
		{
			[Token(Token = "0x600068F")]
			[Address(RVA = "0x41CE7B0", Offset = "0x41CE7B0", VA = "0x41CE7B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD02910", Offset = "0xD02910")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000690")]
			[Address(RVA = "0x41CE964", Offset = "0x41CE964", VA = "0x41CE964")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD02920", Offset = "0xD02920")]
			private set
			{
			}
		}

		[Token(Token = "0x17000089")]
		public string GameKey
		{
			[Token(Token = "0x6000691")]
			[Address(RVA = "0x41CEB2C", Offset = "0x41CEB2C", VA = "0x41CEB2C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD02930", Offset = "0xD02930")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000692")]
			[Address(RVA = "0x41CECE0", Offset = "0x41CECE0", VA = "0x41CECE0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD02940", Offset = "0xD02940")]
			private set
			{
			}
		}

		[Token(Token = "0x1700008A")]
		public string SecretKey
		{
			[Token(Token = "0x6000693")]
			[Address(RVA = "0x41CEEA0", Offset = "0x41CEEA0", VA = "0x41CEEA0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD02950", Offset = "0xD02950")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000694")]
			[Address(RVA = "0x41CF054", Offset = "0x41CF054", VA = "0x41CF054")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD02960", Offset = "0xD02960")]
			private set
			{
			}
		}

		[Token(Token = "0x6000695")]
		[Address(RVA = "0x41CF214", Offset = "0x41CF214", VA = "0x41CF214")]
		public Game(string name, int id, string gameKey, string secretKey)
		{
		}
	}
}
namespace GameAnalyticsSDK.Events
{
	[Token(Token = "0x200010B")]
	public static class GA_Ads
	{
		[Token(Token = "0x6000696")]
		[Address(RVA = "0x343226C", Offset = "0x343226C", VA = "0x343226C")]
		public static void NewEvent(GAAdAction adAction, GAAdType adType, string adSdkName, string adPlacement, long duration)
		{
		}

		[Token(Token = "0x6000697")]
		[Address(RVA = "0x34325B0", Offset = "0x34325B0", VA = "0x34325B0")]
		public static void NewEvent(GAAdAction adAction, GAAdType adType, string adSdkName, string adPlacement, GAAdError noAdReason)
		{
		}

		[Token(Token = "0x6000698")]
		[Address(RVA = "0x34328F4", Offset = "0x34328F4", VA = "0x34328F4")]
		public static void NewEvent(GAAdAction adAction, GAAdType adType, string adSdkName, string adPlacement)
		{
		}
	}
	[Token(Token = "0x200010C")]
	public static class GA_Business
	{
		[Token(Token = "0x6000699")]
		[Address(RVA = "0x3432C24", Offset = "0x3432C24", VA = "0x3432C24")]
		public static void NewEventGooglePlay(string currency, int amount, string itemType, string itemId, string cartType, string receipt, string signature, IDictionary<string, object> fields)
		{
		}

		[Token(Token = "0x600069A")]
		[Address(RVA = "0x3432FBC", Offset = "0x3432FBC", VA = "0x3432FBC")]
		public static void NewEvent(string currency, int amount, string itemType, string itemId, string cartType, IDictionary<string, object> fields)
		{
		}
	}
	[Token(Token = "0x200010D")]
	public static class GA_Debug
	{
		[Token(Token = "0x40004FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int MaxErrorCount;

		[Token(Token = "0x40004FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static int _errorCount;

		[Token(Token = "0x4000500")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static bool _showLogOnGUI;

		[Token(Token = "0x4000501")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static List<string> Messages;

		[Token(Token = "0x600069B")]
		[Address(RVA = "0x3434320", Offset = "0x3434320", VA = "0x3434320")]
		public static void HandleLog(string logString, string stackTrace, LogType type)
		{
		}

		[Token(Token = "0x600069C")]
		[Address(RVA = "0x3435A64", Offset = "0x3435A64", VA = "0x3435A64")]
		private static void SubmitError(string message, LogType type)
		{
		}

		[Token(Token = "0x600069D")]
		[Address(RVA = "0x3436534", Offset = "0x3436534", VA = "0x3436534")]
		public static void EnabledLog()
		{
		}
	}
	[Token(Token = "0x200010E")]
	public static class GA_Design
	{
		[Token(Token = "0x600069F")]
		[Address(RVA = "0x3436A44", Offset = "0x3436A44", VA = "0x3436A44")]
		public static void NewEvent(string eventName, float eventValue, IDictionary<string, object> fields)
		{
		}

		[Token(Token = "0x60006A0")]
		[Address(RVA = "0x3437500", Offset = "0x3437500", VA = "0x3437500")]
		public static void NewEvent(string eventName, IDictionary<string, object> fields)
		{
		}

		[Token(Token = "0x60006A1")]
		[Address(RVA = "0x3436DC0", Offset = "0x3436DC0", VA = "0x3436DC0")]
		private static void CreateNewEvent(string eventName, float? eventValue, IDictionary<string, object> fields)
		{
		}
	}
	[Token(Token = "0x200010F")]
	public static class GA_Error
	{
		[Token(Token = "0x60006A2")]
		[Address(RVA = "0x3436244", Offset = "0x3436244", VA = "0x3436244")]
		public static void NewEvent(GAErrorSeverity severity, string message, IDictionary<string, object> fields)
		{
		}

		[Token(Token = "0x60006A3")]
		[Address(RVA = "0x34377EC", Offset = "0x34377EC", VA = "0x34377EC")]
		private static void CreateNewEvent(GAErrorSeverity severity, string message, IDictionary<string, object> fields)
		{
		}
	}
	[Token(Token = "0x2000110")]
	public static class GA_Progression
	{
		[Token(Token = "0x60006A4")]
		[Address(RVA = "0x3437B0C", Offset = "0x3437B0C", VA = "0x3437B0C")]
		public static void NewEvent(GAProgressionStatus progressionStatus, string progression01, IDictionary<string, object> fields)
		{
		}

		[Token(Token = "0x60006A5")]
		[Address(RVA = "0x3438598", Offset = "0x3438598", VA = "0x3438598")]
		public static void NewEvent(GAProgressionStatus progressionStatus, string progression01, string progression02, IDictionary<string, object> fields)
		{
		}

		[Token(Token = "0x60006A6")]
		[Address(RVA = "0x343889C", Offset = "0x343889C", VA = "0x343889C")]
		public static void NewEvent(GAProgressionStatus progressionStatus, string progression01, string progression02, string progression03, IDictionary<string, object> fields)
		{
		}

		[Token(Token = "0x60006A7")]
		[Address(RVA = "0x3438BA4", Offset = "0x3438BA4", VA = "0x3438BA4")]
		public static void NewEvent(GAProgressionStatus progressionStatus, string progression01, int score, IDictionary<string, object> fields)
		{
		}

		[Token(Token = "0x60006A8")]
		[Address(RVA = "0x3438F34", Offset = "0x3438F34", VA = "0x3438F34")]
		public static void NewEvent(GAProgressionStatus progressionStatus, string progression01, string progression02, int score, IDictionary<string, object> fields)
		{
		}

		[Token(Token = "0x60006A9")]
		[Address(RVA = "0x34392D8", Offset = "0x34392D8", VA = "0x34392D8")]
		public static void NewEvent(GAProgressionStatus progressionStatus, string progression01, string progression02, string progression03, int score, IDictionary<string, object> fields)
		{
		}

		[Token(Token = "0x60006AA")]
		[Address(RVA = "0x3437E08", Offset = "0x3437E08", VA = "0x3437E08")]
		private static void CreateEvent(GAProgressionStatus progressionStatus, string progression01, string progression02, string progression03, int? score, IDictionary<string, object> fields)
		{
		}
	}
	[Token(Token = "0x2000111")]
	public static class GA_Resource
	{
		[Token(Token = "0x60006AB")]
		[Address(RVA = "0x41A7B7C", Offset = "0x41A7B7C", VA = "0x41A7B7C")]
		public static void NewEvent(GAResourceFlowType flowType, string currency, float amount, string itemType, string itemId, IDictionary<string, object> fields)
		{
		}
	}
	[Token(Token = "0x2000112")]
	public static class GA_Setup
	{
		[Token(Token = "0x60006AC")]
		[Address(RVA = "0x41A82FC", Offset = "0x41A82FC", VA = "0x41A82FC")]
		public static void SetAvailableCustomDimensions01(List<string> customDimensions)
		{
		}

		[Token(Token = "0x60006AD")]
		[Address(RVA = "0x41A9210", Offset = "0x41A9210", VA = "0x41A9210")]
		public static void SetAvailableCustomDimensions02(List<string> customDimensions)
		{
		}

		[Token(Token = "0x60006AE")]
		[Address(RVA = "0x41A9B50", Offset = "0x41A9B50", VA = "0x41A9B50")]
		public static void SetAvailableCustomDimensions03(List<string> customDimensions)
		{
		}

		[Token(Token = "0x60006AF")]
		[Address(RVA = "0x41AA490", Offset = "0x41AA490", VA = "0x41AA490")]
		public static void SetAvailableResourceCurrencies(List<string> resourceCurrencies)
		{
		}

		[Token(Token = "0x60006B0")]
		[Address(RVA = "0x41AB958", Offset = "0x41AB958", VA = "0x41AB958")]
		public static void SetAvailableResourceItemTypes(List<string> resourceItemTypes)
		{
		}

		[Token(Token = "0x60006B1")]
		[Address(RVA = "0x41ACE14", Offset = "0x41ACE14", VA = "0x41ACE14")]
		public static void SetInfoLog(bool enabled)
		{
		}

		[Token(Token = "0x60006B2")]
		[Address(RVA = "0x41AD424", Offset = "0x41AD424", VA = "0x41AD424")]
		public static void SetVerboseLog(bool enabled)
		{
		}

		[Token(Token = "0x60006B3")]
		[Address(RVA = "0x41ADA34", Offset = "0x41ADA34", VA = "0x41ADA34")]
		public static void SetCustomDimension01(string customDimension)
		{
		}

		[Token(Token = "0x60006B4")]
		[Address(RVA = "0x41AE024", Offset = "0x41AE024", VA = "0x41AE024")]
		public static void SetCustomDimension02(string customDimension)
		{
		}

		[Token(Token = "0x60006B5")]
		[Address(RVA = "0x41AE614", Offset = "0x41AE614", VA = "0x41AE614")]
		public static void SetCustomDimension03(string customDimension)
		{
		}
	}
	[Token(Token = "0x2000113")]
	public class GA_SpecialEvents : MonoBehaviour
	{
		[Token(Token = "0x20001C6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCF9CC0", Offset = "0xCF9CC0")]
		private sealed class <SubmitFPSRoutine>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000896")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000897")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000898")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GA_SpecialEvents <>4__this;

			[Token(Token = "0x17000191")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000D06")]
				[Address(RVA = "0x41B412C", Offset = "0x41B412C", VA = "0x41B412C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000192")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000D08")]
				[Address(RVA = "0x41B42F8", Offset = "0x41B42F8", VA = "0x41B42F8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000D03")]
			[Address(RVA = "0x41AF2D4", Offset = "0x41AF2D4", VA = "0x41AF2D4")]
			[DebuggerHidden]
			public <SubmitFPSRoutine>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x6000D04")]
			[Address(RVA = "0x41B37AC", Offset = "0x41B37AC", VA = "0x41B37AC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000D05")]
			[Address(RVA = "0x41B388C", Offset = "0x41B388C", VA = "0x41B388C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000D07")]
			[Address(RVA = "0x41B4218", Offset = "0x41B4218", VA = "0x41B4218", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20001C7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCF9CD0", Offset = "0xCF9CD0")]
		private sealed class <CheckCriticalFPSRoutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000899")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400089A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400089B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GA_SpecialEvents <>4__this;

			[Token(Token = "0x17000193")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000D0C")]
				[Address(RVA = "0x41B34F4", Offset = "0x41B34F4", VA = "0x41B34F4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000194")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000D0E")]
				[Address(RVA = "0x41B36C0", Offset = "0x41B36C0", VA = "0x41B36C0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000D09")]
			[Address(RVA = "0x41AF3D4", Offset = "0x41AF3D4", VA = "0x41AF3D4")]
			[DebuggerHidden]
			public <CheckCriticalFPSRoutine>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x6000D0A")]
			[Address(RVA = "0x41B2AF8", Offset = "0x41B2AF8", VA = "0x41B2AF8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000D0B")]
			[Address(RVA = "0x41B2BD8", Offset = "0x41B2BD8", VA = "0x41B2BD8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000D0D")]
			[Address(RVA = "0x41B35E0", Offset = "0x41B35E0", VA = "0x41B35E0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000502")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int _frameCountAvg;

		[Token(Token = "0x4000503")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static float _lastUpdateAvg;

		[Token(Token = "0x4000504")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int _frameCountCrit;

		[Token(Token = "0x4000505")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float _lastUpdateCrit;

		[Token(Token = "0x4000506")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static int _criticalFpsCount;

		[Token(Token = "0x60006B6")]
		[Address(RVA = "0x41AEC04", Offset = "0x41AEC04", VA = "0x41AEC04")]
		public void Start()
		{
		}

		[Token(Token = "0x60006B7")]
		[Address(RVA = "0x41AF09C", Offset = "0x41AF09C", VA = "0x41AF09C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD02970", Offset = "0xD02970")]
		private IEnumerator SubmitFPSRoutine()
		{
			return null;
		}

		[Token(Token = "0x60006B8")]
		[Address(RVA = "0x41AF1B8", Offset = "0x41AF1B8", VA = "0x41AF1B8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD029D4", Offset = "0xD029D4")]
		private IEnumerator CheckCriticalFPSRoutine()
		{
			return null;
		}

		[Token(Token = "0x60006B9")]
		[Address(RVA = "0x41AF4D4", Offset = "0x41AF4D4", VA = "0x41AF4D4")]
		public void Update()
		{
		}

		[Token(Token = "0x60006BA")]
		[Address(RVA = "0x41B0328", Offset = "0x41B0328", VA = "0x41B0328")]
		public static void SubmitFPS()
		{
		}

		[Token(Token = "0x60006BB")]
		[Address(RVA = "0x41B1A34", Offset = "0x41B1A34", VA = "0x41B1A34")]
		public void CheckCriticalFPS()
		{
		}

		[Token(Token = "0x60006BC")]
		[Address(RVA = "0x41B25E4", Offset = "0x41B25E4", VA = "0x41B25E4")]
		public GA_SpecialEvents()
		{
		}
	}
}
namespace GameAnalyticsSDK.Validators
{
	[Token(Token = "0x2000114")]
	internal static class GAValidator
	{
		[Token(Token = "0x60006BE")]
		[Address(RVA = "0x41F2B80", Offset = "0x41F2B80", VA = "0x41F2B80")]
		public static bool StringMatch(string s, string pattern)
		{
			return default(bool);
		}

		[Token(Token = "0x60006BF")]
		[Address(RVA = "0x41F301C", Offset = "0x41F301C", VA = "0x41F301C")]
		public static bool ValidateBusinessEvent(string currency, int amount, string cartType, string itemType, string itemId)
		{
			return default(bool);
		}

		[Token(Token = "0x60006C0")]
		[Address(RVA = "0x41F607C", Offset = "0x41F607C", VA = "0x41F607C")]
		public static bool ValidateResourceEvent(GAResourceFlowType flowType, string currency, float amount, string itemType, string itemId)
		{
			return default(bool);
		}

		[Token(Token = "0x60006C1")]
		[Address(RVA = "0x41F822C", Offset = "0x41F822C", VA = "0x41F822C")]
		public static bool ValidateProgressionEvent(GAProgressionStatus progressionStatus, string progression01, string progression02, string progression03)
		{
			return default(bool);
		}

		[Token(Token = "0x60006C2")]
		[Address(RVA = "0x41FA904", Offset = "0x41FA904", VA = "0x41FA904")]
		public static bool ValidateDesignEvent(string eventId)
		{
			return default(bool);
		}

		[Token(Token = "0x60006C3")]
		[Address(RVA = "0x41FBE90", Offset = "0x41FBE90", VA = "0x41FBE90")]
		public static bool ValidateErrorEvent(GAErrorSeverity severity, string message)
		{
			return default(bool);
		}

		[Token(Token = "0x60006C4")]
		[Address(RVA = "0x41FCD30", Offset = "0x41FCD30", VA = "0x41FCD30")]
		public static bool ValidateAdEvent(GAAdAction adAction, GAAdType adType, string adSdkName, string adPlacement)
		{
			return default(bool);
		}

		[Token(Token = "0x60006C5")]
		[Address(RVA = "0x41FE118", Offset = "0x41FE118", VA = "0x41FE118")]
		public static bool ValidateSdkErrorEvent(string gameKey, string gameSecret, GAErrorSeverity type)
		{
			return default(bool);
		}

		[Token(Token = "0x60006C6")]
		[Address(RVA = "0x41FE7D8", Offset = "0x41FE7D8", VA = "0x41FE7D8")]
		public static bool ValidateKeys(string gameKey, string gameSecret)
		{
			return default(bool);
		}

		[Token(Token = "0x60006C7")]
		[Address(RVA = "0x41F46B0", Offset = "0x41F46B0", VA = "0x41F46B0")]
		public static bool ValidateCurrency(string currency)
		{
			return default(bool);
		}

		[Token(Token = "0x60006C8")]
		[Address(RVA = "0x41F53DC", Offset = "0x41F53DC", VA = "0x41F53DC")]
		public static bool ValidateEventPartLength(string eventPart, bool allowNull)
		{
			return default(bool);
		}

		[Token(Token = "0x60006C9")]
		[Address(RVA = "0x41F5C24", Offset = "0x41F5C24", VA = "0x41F5C24")]
		public static bool ValidateEventPartCharacters(string eventPart)
		{
			return default(bool);
		}

		[Token(Token = "0x60006CA")]
		[Address(RVA = "0x41FB218", Offset = "0x41FB218", VA = "0x41FB218")]
		public static bool ValidateEventIdLength(string eventId)
		{
			return default(bool);
		}

		[Token(Token = "0x60006CB")]
		[Address(RVA = "0x41FB854", Offset = "0x41FB854", VA = "0x41FB854")]
		public static bool ValidateEventIdCharacters(string eventId)
		{
			return default(bool);
		}

		[Token(Token = "0x60006CC")]
		[Address(RVA = "0x41FEE1C", Offset = "0x41FEE1C", VA = "0x41FEE1C")]
		public static bool ValidateBuild(string build)
		{
			return default(bool);
		}

		[Token(Token = "0x60006CD")]
		[Address(RVA = "0x41FF264", Offset = "0x41FF264", VA = "0x41FF264")]
		public static bool ValidateUserId(string uId)
		{
			return default(bool);
		}

		[Token(Token = "0x60006CE")]
		[Address(RVA = "0x41F4CEC", Offset = "0x41F4CEC", VA = "0x41F4CEC")]
		public static bool ValidateShortString(string shortString, bool canBeEmpty)
		{
			return default(bool);
		}

		[Token(Token = "0x60006CF")]
		[Address(RVA = "0x41FDA28", Offset = "0x41FDA28", VA = "0x41FDA28")]
		public static bool ValidateString(string s, bool canBeEmpty)
		{
			return default(bool);
		}

		[Token(Token = "0x60006D0")]
		[Address(RVA = "0x41FC640", Offset = "0x41FC640", VA = "0x41FC640")]
		public static bool ValidateLongString(string longString, bool canBeEmpty)
		{
			return default(bool);
		}

		[Token(Token = "0x60006D1")]
		[Address(RVA = "0x41FF7A8", Offset = "0x41FF7A8", VA = "0x41FF7A8")]
		public static bool ValidateConnectionType(string connectionType)
		{
			return default(bool);
		}

		[Token(Token = "0x60006D2")]
		[Address(RVA = "0x41A8944", Offset = "0x41A8944", VA = "0x41A8944")]
		public static bool ValidateCustomDimensions(params string[] customDimensions)
		{
			return default(bool);
		}

		[Token(Token = "0x60006D3")]
		[Address(RVA = "0x41AAAD8", Offset = "0x41AAAD8", VA = "0x41AAAD8")]
		public static bool ValidateResourceCurrencies(params string[] resourceCurrencies)
		{
			return default(bool);
		}

		[Token(Token = "0x60006D4")]
		[Address(RVA = "0x41ABFA0", Offset = "0x41ABFA0", VA = "0x41ABFA0")]
		public static bool ValidateResourceItemTypes(params string[] resourceItemTypes)
		{
			return default(bool);
		}

		[Token(Token = "0x60006D5")]
		[Address(RVA = "0x42017C0", Offset = "0x42017C0", VA = "0x42017C0")]
		public static bool ValidateDimension01(string dimension01)
		{
			return default(bool);
		}

		[Token(Token = "0x60006D6")]
		[Address(RVA = "0x4202058", Offset = "0x4202058", VA = "0x4202058")]
		public static bool ValidateDimension02(string dimension02)
		{
			return default(bool);
		}

		[Token(Token = "0x60006D7")]
		[Address(RVA = "0x42028F0", Offset = "0x42028F0", VA = "0x42028F0")]
		public static bool ValidateDimension03(string dimension03)
		{
			return default(bool);
		}

		[Token(Token = "0x60006D8")]
		[Address(RVA = "0x41FFA94", Offset = "0x41FFA94", VA = "0x41FFA94")]
		public static bool ValidateArrayOfStrings(long maxCount, long maxStringLength, bool allowNoValues, string logTag, params string[] arrayOfStrings)
		{
			return default(bool);
		}

		[Token(Token = "0x60006D9")]
		[Address(RVA = "0x4203188", Offset = "0x4203188", VA = "0x4203188")]
		public static bool ValidateClientTs(long clientTs)
		{
			return default(bool);
		}
	}
}
namespace Dreamteck
{
	[Token(Token = "0x2000115")]
	public static class ArrayUtility
	{
		[Token(Token = "0x60006DA")]
		public static void Add<T>(ref T[] array, T item)
		{
		}

		[Token(Token = "0x60006DB")]
		public static bool Contains<T>(T[] array, T item)
		{
			return default(bool);
		}

		[Token(Token = "0x60006DC")]
		public static int IndexOf<T>(T[] array, T value)
		{
			return default(int);
		}

		[Token(Token = "0x60006DD")]
		public static void Insert<T>(ref T[] array, int index, T item)
		{
		}

		[Token(Token = "0x60006DE")]
		public static void RemoveAt<T>(ref T[] array, int index)
		{
		}
	}
	[Token(Token = "0x2000116")]
	public static class DMath
	{
		[Token(Token = "0x60006DF")]
		[Address(RVA = "0x1505084", Offset = "0x1505084", VA = "0x1505084")]
		public static double Sin(double a)
		{
			return default(double);
		}

		[Token(Token = "0x60006E0")]
		[Address(RVA = "0x1505398", Offset = "0x1505398", VA = "0x1505398")]
		public static double Cos(double a)
		{
			return default(double);
		}

		[Token(Token = "0x60006E1")]
		[Address(RVA = "0x15056AC", Offset = "0x15056AC", VA = "0x15056AC")]
		public static double Tan(double a)
		{
			return default(double);
		}

		[Token(Token = "0x60006E2")]
		[Address(RVA = "0x15059C0", Offset = "0x15059C0", VA = "0x15059C0")]
		public static double Pow(double x, double y)
		{
			return default(double);
		}

		[Token(Token = "0x60006E3")]
		[Address(RVA = "0x1505CE8", Offset = "0x1505CE8", VA = "0x1505CE8")]
		public static double Log(double a, double newBase)
		{
			return default(double);
		}

		[Token(Token = "0x60006E4")]
		[Address(RVA = "0x1506010", Offset = "0x1506010", VA = "0x1506010")]
		public static double Log10(double a)
		{
			return default(double);
		}

		[Token(Token = "0x60006E5")]
		[Address(RVA = "0x1506324", Offset = "0x1506324", VA = "0x1506324")]
		public static double Clamp01(double a)
		{
			return default(double);
		}

		[Token(Token = "0x60006E6")]
		[Address(RVA = "0x15067DC", Offset = "0x15067DC", VA = "0x15067DC")]
		public static double Clamp(double a, double min, double max)
		{
			return default(double);
		}

		[Token(Token = "0x60006E7")]
		[Address(RVA = "0x1506CB0", Offset = "0x1506CB0", VA = "0x1506CB0")]
		public static double Lerp(double a, double b, double t)
		{
			return default(double);
		}

		[Token(Token = "0x60006E8")]
		[Address(RVA = "0x150701C", Offset = "0x150701C", VA = "0x150701C")]
		public static double InverseLerp(double a, double b, double t)
		{
			return default(double);
		}

		[Token(Token = "0x60006E9")]
		[Address(RVA = "0x150744C", Offset = "0x150744C", VA = "0x150744C")]
		public static Vector3 LerpVector3(Vector3 a, Vector3 b, double t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60006EA")]
		[Address(RVA = "0x1507B34", Offset = "0x1507B34", VA = "0x1507B34")]
		public static double Round(double a)
		{
			return default(double);
		}

		[Token(Token = "0x60006EB")]
		[Address(RVA = "0x1507EA4", Offset = "0x1507EA4", VA = "0x1507EA4")]
		public static int RoundInt(double a)
		{
			return default(int);
		}

		[Token(Token = "0x60006EC")]
		[Address(RVA = "0x1508210", Offset = "0x1508210", VA = "0x1508210")]
		public static double Ceil(double a)
		{
			return default(double);
		}

		[Token(Token = "0x60006ED")]
		[Address(RVA = "0x150851C", Offset = "0x150851C", VA = "0x150851C")]
		public static int CeilInt(double a)
		{
			return default(int);
		}

		[Token(Token = "0x60006EE")]
		[Address(RVA = "0x1508820", Offset = "0x1508820", VA = "0x1508820")]
		public static double Floor(double a)
		{
			return default(double);
		}

		[Token(Token = "0x60006EF")]
		[Address(RVA = "0x1508B2C", Offset = "0x1508B2C", VA = "0x1508B2C")]
		public static int FloorInt(double a)
		{
			return default(int);
		}

		[Token(Token = "0x60006F0")]
		[Address(RVA = "0x1508E30", Offset = "0x1508E30", VA = "0x1508E30")]
		public static double Move(double current, double target, double amount)
		{
			return default(double);
		}

		[Token(Token = "0x60006F1")]
		[Address(RVA = "0x1509600", Offset = "0x1509600", VA = "0x1509600")]
		public static double Abs(double a)
		{
			return default(double);
		}
	}
	[Token(Token = "0x2000117")]
	public static class DuplicateUtility
	{
		[Token(Token = "0x60006F2")]
		[Address(RVA = "0x150999C", Offset = "0x150999C", VA = "0x150999C")]
		public static AnimationCurve DuplicateCurve(AnimationCurve input)
		{
			return null;
		}

		[Token(Token = "0x60006F3")]
		[Address(RVA = "0x150A400", Offset = "0x150A400", VA = "0x150A400")]
		public static Gradient DuplicateGradient(Gradient input)
		{
			return null;
		}
	}
	[Token(Token = "0x2000118")]
	public static class LinearAlgebraUtility
	{
		[Token(Token = "0x60006F4")]
		[Address(RVA = "0x150A66C", Offset = "0x150A66C", VA = "0x150A66C")]
		public static Vector3 ProjectOnLine(Vector3 fromPoint, Vector3 toPoint, Vector3 project)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60006F5")]
		[Address(RVA = "0x150B2D4", Offset = "0x150B2D4", VA = "0x150B2D4")]
		public static float InverseLerp(Vector3 a, Vector3 b, Vector3 value)
		{
			return default(float);
		}
	}
	[Token(Token = "0x2000119")]
	public class MeshUtility
	{
		[Token(Token = "0x4000507")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Vector3[] tan1;

		[Token(Token = "0x4000508")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Vector3[] tan2;

		[Token(Token = "0x60006F6")]
		[Address(RVA = "0x150B8D8", Offset = "0x150B8D8", VA = "0x150B8D8")]
		public static int[] GeneratePlaneTriangles(int x, int z, bool flip, int startTriangleIndex = 0, int startVertex = 0)
		{
			return null;
		}

		[Token(Token = "0x60006F7")]
		[Address(RVA = "0x150BD7C", Offset = "0x150BD7C", VA = "0x150BD7C")]
		public static int[] GeneratePlaneTriangles(ref int[] triangles, int x, int z, bool flip, int startTriangleIndex = 0, int startVertex = 0, bool reallocateArray = false)
		{
			return null;
		}

		[Token(Token = "0x60006F8")]
		[Address(RVA = "0x150D6F8", Offset = "0x150D6F8", VA = "0x150D6F8")]
		public static void CalculateTangents(TS_Mesh mesh)
		{
		}

		[Token(Token = "0x60006F9")]
		[Address(RVA = "0x1510334", Offset = "0x1510334", VA = "0x1510334")]
		public static void MakeDoublesided(Mesh input)
		{
		}

		[Token(Token = "0x60006FA")]
		[Address(RVA = "0x1514830", Offset = "0x1514830", VA = "0x1514830")]
		public static void MakeDoublesided(TS_Mesh input)
		{
		}

		[Token(Token = "0x60006FB")]
		[Address(RVA = "0x1518128", Offset = "0x1518128", VA = "0x1518128")]
		public static void MakeDoublesidedHalf(TS_Mesh input)
		{
		}

		[Token(Token = "0x60006FC")]
		[Address(RVA = "0x151A67C", Offset = "0x151A67C", VA = "0x151A67C")]
		public static void InverseTransformMesh(TS_Mesh input, TS_Transform transform)
		{
		}

		[Token(Token = "0x60006FD")]
		[Address(RVA = "0x151AFB4", Offset = "0x151AFB4", VA = "0x151AFB4")]
		public static void TransformMesh(TS_Mesh input, TS_Transform transform)
		{
		}

		[Token(Token = "0x60006FE")]
		[Address(RVA = "0x151B8F4", Offset = "0x151B8F4", VA = "0x151B8F4")]
		public static void InverseTransformMesh(TS_Mesh input, Transform transform)
		{
		}

		[Token(Token = "0x60006FF")]
		[Address(RVA = "0x151C234", Offset = "0x151C234", VA = "0x151C234")]
		public static void TransformMesh(TS_Mesh input, Transform transform)
		{
		}

		[Token(Token = "0x6000700")]
		[Address(RVA = "0x151CB74", Offset = "0x151CB74", VA = "0x151CB74")]
		public static void InverseTransformMesh(Mesh input, Transform transform)
		{
		}

		[Token(Token = "0x6000701")]
		[Address(RVA = "0x151D8BC", Offset = "0x151D8BC", VA = "0x151D8BC")]
		public static void TransformMesh(Mesh input, Transform transform)
		{
		}

		[Token(Token = "0x6000702")]
		[Address(RVA = "0x151E790", Offset = "0x151E790", VA = "0x151E790")]
		public static void TransformVertices(Vector3[] vertices, Transform transform)
		{
		}

		[Token(Token = "0x6000703")]
		[Address(RVA = "0x151EDEC", Offset = "0x151EDEC", VA = "0x151EDEC")]
		public static void InverseTransformVertices(Vector3[] vertices, Transform transform)
		{
		}

		[Token(Token = "0x6000704")]
		[Address(RVA = "0x151F448", Offset = "0x151F448", VA = "0x151F448")]
		public static void TransformNormals(Vector3[] normals, Transform transform)
		{
		}

		[Token(Token = "0x6000705")]
		[Address(RVA = "0x151FAA4", Offset = "0x151FAA4", VA = "0x151FAA4")]
		public static void InverseTransformNormals(Vector3[] normals, Transform transform)
		{
		}

		[Token(Token = "0x6000706")]
		[Address(RVA = "0x1520100", Offset = "0x1520100", VA = "0x1520100")]
		public static string ToOBJString(Mesh mesh, Material[] materials)
		{
			return null;
		}

		[Token(Token = "0x6000707")]
		[Address(RVA = "0x15244D4", Offset = "0x15244D4", VA = "0x15244D4")]
		public static Mesh Copy(Mesh input)
		{
			return null;
		}

		[Token(Token = "0x6000708")]
		[Address(RVA = "0x1525EDC", Offset = "0x1525EDC", VA = "0x1525EDC")]
		public static void Triangulate(Vector2[] points, ref int[] output)
		{
		}

		[Token(Token = "0x6000709")]
		[Address(RVA = "0x1529E10", Offset = "0x1529E10", VA = "0x1529E10")]
		public static void FlipTriangles(ref int[] triangles)
		{
		}

		[Token(Token = "0x600070A")]
		[Address(RVA = "0x152A4F0", Offset = "0x152A4F0", VA = "0x152A4F0")]
		public static void FlipFaces(TS_Mesh input)
		{
		}

		[Token(Token = "0x600070B")]
		[Address(RVA = "0x152B170", Offset = "0x152B170", VA = "0x152B170")]
		public static void BreakMesh(Mesh input, bool keepNormals = true)
		{
		}

		[Token(Token = "0x600070C")]
		[Address(RVA = "0x1528914", Offset = "0x1528914", VA = "0x1528914")]
		private static float Area(Vector2[] points, int maxCount)
		{
			return default(float);
		}

		[Token(Token = "0x600070D")]
		[Address(RVA = "0x15290F0", Offset = "0x15290F0", VA = "0x15290F0")]
		private static bool Snip(Vector2[] points, int u, int v, int w, int n, int[] V)
		{
			return default(bool);
		}

		[Token(Token = "0x600070E")]
		[Address(RVA = "0x152FA24", Offset = "0x152FA24", VA = "0x152FA24")]
		private static bool InsideTriangle(Vector2 A, Vector2 B, Vector2 C, Vector2 P)
		{
			return default(bool);
		}

		[Token(Token = "0x600070F")]
		[Address(RVA = "0x15303B8", Offset = "0x15303B8", VA = "0x15303B8")]
		public MeshUtility()
		{
		}
	}
	[Token(Token = "0x200011A")]
	public static class SceneUtility
	{
		[Token(Token = "0x6000711")]
		[Address(RVA = "0x3363C80", Offset = "0x3363C80", VA = "0x3363C80")]
		public static void GetChildrenRecursively(Transform current, ref List<Transform> transformList)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200011B")]
	public class TS_Bounds
	{
		[Token(Token = "0x4000509")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 center;

		[Token(Token = "0x400050A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 extents;

		[Token(Token = "0x400050B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 max;

		[Token(Token = "0x400050C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Vector3 min;

		[Token(Token = "0x400050D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector3 size;

		[Token(Token = "0x6000712")]
		[Address(RVA = "0x33F33D4", Offset = "0x33F33D4", VA = "0x33F33D4")]
		public TS_Bounds()
		{
		}

		[Token(Token = "0x6000713")]
		[Address(RVA = "0x33F3B54", Offset = "0x33F3B54", VA = "0x33F3B54")]
		public TS_Bounds(Bounds bounds)
		{
		}

		[Token(Token = "0x6000714")]
		[Address(RVA = "0x33F4760", Offset = "0x33F4760", VA = "0x33F4760")]
		public TS_Bounds(Vector3 c, Vector3 s)
		{
		}

		[Token(Token = "0x6000715")]
		[Address(RVA = "0x33F52B8", Offset = "0x33F52B8", VA = "0x33F52B8")]
		public TS_Bounds(Vector3 min, Vector3 max, Vector3 center)
		{
		}

		[Token(Token = "0x6000716")]
		[Address(RVA = "0x33F5DB4", Offset = "0x33F5DB4", VA = "0x33F5DB4")]
		public void CreateFromMinMax(Vector3 min, Vector3 max)
		{
		}

		[Token(Token = "0x6000717")]
		[Address(RVA = "0x33F6440", Offset = "0x33F6440", VA = "0x33F6440")]
		public bool Contains(Vector3 point)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200011C")]
	public class TS_Mesh
	{
		[Token(Token = "0x400050E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3[] vertices;

		[Token(Token = "0x400050F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3[] normals;

		[Token(Token = "0x4000510")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector4[] tangents;

		[Token(Token = "0x4000511")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Color[] colors;

		[Token(Token = "0x4000512")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector2[] uv;

		[Token(Token = "0x4000513")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector2[] uv2;

		[Token(Token = "0x4000514")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector2[] uv3;

		[Token(Token = "0x4000515")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Vector2[] uv4;

		[Token(Token = "0x4000516")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public int[] triangles;

		[Token(Token = "0x4000517")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public List<int[]> subMeshes;

		[Token(Token = "0x4000518")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public TS_Bounds bounds;

		[Token(Token = "0x4000519")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public bool hasUpdate;

		[Token(Token = "0x1700008B")]
		public int vertexCount
		{
			[Token(Token = "0x6000718")]
			[Address(RVA = "0x33F6A68", Offset = "0x33F6A68", VA = "0x33F6A68")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000719")]
			[Address(RVA = "0x33F6CE4", Offset = "0x33F6CE4", VA = "0x33F6CE4")]
			set
			{
			}
		}

		[Token(Token = "0x600071A")]
		[Address(RVA = "0x33F6F00", Offset = "0x33F6F00", VA = "0x33F6F00")]
		public TS_Mesh()
		{
		}

		[Token(Token = "0x600071B")]
		[Address(RVA = "0x33F7974", Offset = "0x33F7974", VA = "0x33F7974")]
		public TS_Mesh(Mesh mesh)
		{
		}

		[Token(Token = "0x600071C")]
		[Address(RVA = "0x33F968C", Offset = "0x33F968C", VA = "0x33F968C")]
		public void Clear()
		{
		}

		[Token(Token = "0x600071D")]
		[Address(RVA = "0x33F84BC", Offset = "0x33F84BC", VA = "0x33F84BC")]
		public void CreateFromMesh(Mesh mesh)
		{
		}

		[Token(Token = "0x600071E")]
		[Address(RVA = "0x33F9FD0", Offset = "0x33F9FD0", VA = "0x33F9FD0")]
		public void Combine(List<TS_Mesh> newMeshes, bool overwrite = false)
		{
		}

		[Token(Token = "0x600071F")]
		[Address(RVA = "0x3402AE0", Offset = "0x3402AE0", VA = "0x3402AE0")]
		public void Combine(TS_Mesh newMesh)
		{
		}

		[Token(Token = "0x6000720")]
		[Address(RVA = "0x3405BCC", Offset = "0x3405BCC", VA = "0x3405BCC")]
		public static TS_Mesh Copy(TS_Mesh input)
		{
			return null;
		}

		[Token(Token = "0x6000721")]
		[Address(RVA = "0x34076FC", Offset = "0x34076FC", VA = "0x34076FC")]
		public void Absorb(TS_Mesh input)
		{
		}

		[Token(Token = "0x6000722")]
		[Address(RVA = "0x340A5C4", Offset = "0x340A5C4", VA = "0x340A5C4")]
		public void WriteMesh(ref Mesh input)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200011D")]
	public class TS_Transform
	{
		[Token(Token = "0x400051A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool setPosition;

		[Token(Token = "0x400051B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		private bool setRotation;

		[Token(Token = "0x400051C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		private bool setScale;

		[Token(Token = "0x400051D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13")]
		private bool setLocalPosition;

		[Token(Token = "0x400051E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private bool setLocalRotation;

		[Token(Token = "0x400051F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[HideInInspector]
		private Transform _transform;

		[Token(Token = "0x4000520")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[HideInInspector]
		private float posX;

		[Token(Token = "0x4000521")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		[HideInInspector]
		private float posY;

		[Token(Token = "0x4000522")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[HideInInspector]
		private float posZ;

		[Token(Token = "0x4000523")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		[HideInInspector]
		private float scaleX;

		[Token(Token = "0x4000524")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[HideInInspector]
		private float scaleY;

		[Token(Token = "0x4000525")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		[HideInInspector]
		private float scaleZ;

		[Token(Token = "0x4000526")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[HideInInspector]
		private float lossyScaleX;

		[Token(Token = "0x4000527")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		[HideInInspector]
		private float lossyScaleY;

		[Token(Token = "0x4000528")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[HideInInspector]
		private float lossyScaleZ;

		[Token(Token = "0x4000529")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		[HideInInspector]
		private float rotX;

		[Token(Token = "0x400052A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		[HideInInspector]
		private float rotY;

		[Token(Token = "0x400052B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		[HideInInspector]
		private float rotZ;

		[Token(Token = "0x400052C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[HideInInspector]
		private float rotW;

		[Token(Token = "0x400052D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		[HideInInspector]
		private float lposX;

		[Token(Token = "0x400052E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		[HideInInspector]
		private float lposY;

		[Token(Token = "0x400052F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[SerializeField]
		[HideInInspector]
		private float lposZ;

		[Token(Token = "0x4000530")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		[HideInInspector]
		private float lrotX;

		[Token(Token = "0x4000531")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[SerializeField]
		[HideInInspector]
		private float lrotY;

		[Token(Token = "0x4000532")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		[HideInInspector]
		private float lrotZ;

		[Token(Token = "0x4000533")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[SerializeField]
		[HideInInspector]
		private float lrotW;

		[Token(Token = "0x1700008C")]
		public Vector3 position
		{
			[Token(Token = "0x6000723")]
			[Address(RVA = "0x340C24C", Offset = "0x340C24C", VA = "0x340C24C")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000724")]
			[Address(RVA = "0x340C594", Offset = "0x340C594", VA = "0x340C594")]
			set
			{
			}
		}

		[Token(Token = "0x1700008D")]
		public Quaternion rotation
		{
			[Token(Token = "0x6000725")]
			[Address(RVA = "0x340C9C0", Offset = "0x340C9C0", VA = "0x340C9C0")]
			get
			{
				return default(Quaternion);
			}
			[Token(Token = "0x6000726")]
			[Address(RVA = "0x340CD1C", Offset = "0x340CD1C", VA = "0x340CD1C")]
			set
			{
			}
		}

		[Token(Token = "0x1700008E")]
		public Vector3 scale
		{
			[Token(Token = "0x6000727")]
			[Address(RVA = "0x340D1B4", Offset = "0x340D1B4", VA = "0x340D1B4")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000728")]
			[Address(RVA = "0x340D4FC", Offset = "0x340D4FC", VA = "0x340D4FC")]
			set
			{
			}
		}

		[Token(Token = "0x1700008F")]
		public Vector3 lossyScale
		{
			[Token(Token = "0x6000729")]
			[Address(RVA = "0x340D8C8", Offset = "0x340D8C8", VA = "0x340D8C8")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x600072A")]
			[Address(RVA = "0x340DC10", Offset = "0x340DC10", VA = "0x340DC10")]
			set
			{
			}
		}

		[Token(Token = "0x17000090")]
		public Vector3 localPosition
		{
			[Token(Token = "0x600072B")]
			[Address(RVA = "0x340DFDC", Offset = "0x340DFDC", VA = "0x340DFDC")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x600072C")]
			[Address(RVA = "0x340E324", Offset = "0x340E324", VA = "0x340E324")]
			set
			{
			}
		}

		[Token(Token = "0x17000091")]
		public Quaternion localRotation
		{
			[Token(Token = "0x600072D")]
			[Address(RVA = "0x340E750", Offset = "0x340E750", VA = "0x340E750")]
			get
			{
				return default(Quaternion);
			}
			[Token(Token = "0x600072E")]
			[Address(RVA = "0x340EAAC", Offset = "0x340EAAC", VA = "0x340EAAC")]
			set
			{
			}
		}

		[Token(Token = "0x17000092")]
		public Transform transform
		{
			[Token(Token = "0x600072F")]
			[Address(RVA = "0x340EF44", Offset = "0x340EF44", VA = "0x340EF44")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000730")]
		[Address(RVA = "0x340F1B0", Offset = "0x340F1B0", VA = "0x340F1B0")]
		public TS_Transform(Transform input)
		{
		}

		[Token(Token = "0x6000731")]
		[Address(RVA = "0x34102E4", Offset = "0x34102E4", VA = "0x34102E4")]
		public void Update()
		{
		}

		[Token(Token = "0x6000732")]
		[Address(RVA = "0x340FF30", Offset = "0x340FF30", VA = "0x340FF30")]
		public void SetTransform(Transform input)
		{
		}

		[Token(Token = "0x6000733")]
		[Address(RVA = "0x3411C40", Offset = "0x3411C40", VA = "0x3411C40")]
		public bool HasChange()
		{
			return default(bool);
		}

		[Token(Token = "0x6000734")]
		[Address(RVA = "0x3412020", Offset = "0x3412020", VA = "0x3412020")]
		public bool HasPositionChange()
		{
			return default(bool);
		}

		[Token(Token = "0x6000735")]
		[Address(RVA = "0x3412480", Offset = "0x3412480", VA = "0x3412480")]
		public bool HasRotationChange()
		{
			return default(bool);
		}

		[Token(Token = "0x6000736")]
		[Address(RVA = "0x3412984", Offset = "0x3412984", VA = "0x3412984")]
		public bool HasScaleChange()
		{
			return default(bool);
		}

		[Token(Token = "0x6000737")]
		[Address(RVA = "0x3412DE4", Offset = "0x3412DE4", VA = "0x3412DE4")]
		public Vector3 TransformPoint(Vector3 point)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000738")]
		[Address(RVA = "0x34134B0", Offset = "0x34134B0", VA = "0x34134B0")]
		public Vector3 TransformDirection(Vector3 direction)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000739")]
		[Address(RVA = "0x341390C", Offset = "0x341390C", VA = "0x341390C")]
		public Vector3 InverseTransformPoint(Vector3 point)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600073A")]
		[Address(RVA = "0x3413D74", Offset = "0x3413D74", VA = "0x3413D74")]
		public Vector3 InverseTransformDirection(Vector3 direction)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600073B")]
		public T GetComponent<T>()
		{
			return (T)null;
		}
	}
	[Token(Token = "0x200011E")]
	public static class TransformUtility
	{
		[Token(Token = "0x600073C")]
		[Address(RVA = "0x3414324", Offset = "0x3414324", VA = "0x3414324")]
		public static Vector3 GetPosition(Matrix4x4 m)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600073D")]
		[Address(RVA = "0x34146D8", Offset = "0x34146D8", VA = "0x34146D8")]
		public static Quaternion GetRotation(Matrix4x4 m)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x600073E")]
		[Address(RVA = "0x3414C78", Offset = "0x3414C78", VA = "0x3414C78")]
		public static Vector3 GetScale(Matrix4x4 m)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600073F")]
		[Address(RVA = "0x34152C0", Offset = "0x34152C0", VA = "0x34152C0")]
		public static void SetPosition(ref Matrix4x4 m, ref Vector3 p)
		{
		}

		[Token(Token = "0x6000740")]
		[Address(RVA = "0x3415630", Offset = "0x3415630", VA = "0x3415630")]
		public static void GetChildCount(Transform parent, ref int count)
		{
		}

		[Token(Token = "0x6000741")]
		[Address(RVA = "0x3416070", Offset = "0x3416070", VA = "0x3416070")]
		public static bool IsParent(Transform child, Transform parent)
		{
			return default(bool);
		}
	}
}
namespace Dreamteck.Splines
{
	[Token(Token = "0x200011F")]
	public class BlankUser : SplineUser
	{
		[Token(Token = "0x6000742")]
		[Address(RVA = "0x3364680", Offset = "0x3364680", VA = "0x3364680")]
		private void Start()
		{
		}

		[Token(Token = "0x6000743")]
		[Address(RVA = "0x3364890", Offset = "0x3364890", VA = "0x3364890", Slot = "15")]
		protected override void LateRun()
		{
		}

		[Token(Token = "0x6000744")]
		[Address(RVA = "0x3364B6C", Offset = "0x3364B6C", VA = "0x3364B6C", Slot = "16")]
		protected override void Build()
		{
		}

		[Token(Token = "0x6000745")]
		[Address(RVA = "0x3364E48", Offset = "0x3364E48", VA = "0x3364E48", Slot = "17")]
		protected override void PostBuild()
		{
		}

		[Token(Token = "0x6000746")]
		[Address(RVA = "0x3365124", Offset = "0x3365124", VA = "0x3365124")]
		public BlankUser()
		{
		}
	}
	[Token(Token = "0x2000120")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xCF90C8", Offset = "0xCF90C8")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xCF90C8", Offset = "0xCF90C8")]
	public class EdgeColliderGenerator : SplineUser
	{
		[Token(Token = "0x4000534")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		[SerializeField]
		[HideInInspector]
		private float _offset;

		[Token(Token = "0x4000535")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		[HideInInspector]
		protected EdgeCollider2D edgeCollider;

		[Token(Token = "0x4000536")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		[HideInInspector]
		protected Vector2[] vertices;

		[Token(Token = "0x4000537")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[HideInInspector]
		public float updateRate;

		[Token(Token = "0x4000538")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		protected float lastUpdateTime;

		[Token(Token = "0x4000539")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private bool updateCollider;

		[Token(Token = "0x17000093")]
		public float offset
		{
			[Token(Token = "0x6000747")]
			[Address(RVA = "0x3379660", Offset = "0x3379660", VA = "0x3379660")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000748")]
			[Address(RVA = "0x33798DC", Offset = "0x33798DC", VA = "0x33798DC")]
			set
			{
			}
		}

		[Token(Token = "0x6000749")]
		[Address(RVA = "0x3379DB4", Offset = "0x3379DB4", VA = "0x3379DB4", Slot = "6")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x600074A")]
		[Address(RVA = "0x337A16C", Offset = "0x337A16C", VA = "0x337A16C", Slot = "7")]
		protected override void Reset()
		{
		}

		[Token(Token = "0x600074B")]
		[Address(RVA = "0x337A448", Offset = "0x337A448", VA = "0x337A448", Slot = "8")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x600074C")]
		[Address(RVA = "0x337A724", Offset = "0x337A724", VA = "0x337A724", Slot = "9")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x600074D")]
		[Address(RVA = "0x337AA00", Offset = "0x337AA00", VA = "0x337AA00", Slot = "10")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x600074E")]
		[Address(RVA = "0x337ACDC", Offset = "0x337ACDC", VA = "0x337ACDC", Slot = "15")]
		protected override void LateRun()
		{
		}

		[Token(Token = "0x600074F")]
		[Address(RVA = "0x337B73C", Offset = "0x337B73C", VA = "0x337B73C", Slot = "16")]
		protected override void Build()
		{
		}

		[Token(Token = "0x6000750")]
		[Address(RVA = "0x337CA04", Offset = "0x337CA04", VA = "0x337CA04", Slot = "17")]
		protected override void PostBuild()
		{
		}

		[Token(Token = "0x6000751")]
		[Address(RVA = "0x337D5C4", Offset = "0x337D5C4", VA = "0x337D5C4")]
		public EdgeColliderGenerator()
		{
		}
	}
	[Token(Token = "0x2000121")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xCF9150", Offset = "0xCF9150")]
	public class LengthCalculator : SplineUser
	{
		[Serializable]
		[Token(Token = "0x20001C8")]
		public class LengthEvent
		{
			[Token(Token = "0x200024B")]
			public enum Type
			{
				[Token(Token = "0x4000A31")]
				Growing,
				[Token(Token = "0x4000A32")]
				Shrinking,
				[Token(Token = "0x4000A33")]
				Both
			}

			[Token(Token = "0x400089C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool enabled;

			[Token(Token = "0x400089D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float targetLength;

			[Token(Token = "0x400089E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public UnityEvent onChange;

			[Token(Token = "0x400089F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Type type;

			[Token(Token = "0x6000D0F")]
			[Address(RVA = "0x33C7764", Offset = "0x33C7764", VA = "0x33C7764")]
			public LengthEvent()
			{
			}

			[Token(Token = "0x6000D10")]
			[Address(RVA = "0x33C7C48", Offset = "0x33C7C48", VA = "0x33C7C48")]
			public LengthEvent(Type t)
			{
			}

			[Token(Token = "0x6000D11")]
			[Address(RVA = "0x33C6684", Offset = "0x33C6684", VA = "0x33C6684")]
			public void Check(float fromLength, float toLength)
			{
			}
		}

		[Token(Token = "0x400053A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[HideInInspector]
		public LengthEvent[] lengthEvents;

		[Token(Token = "0x400053B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[HideInInspector]
		public float idealLength;

		[Token(Token = "0x400053C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private float _length;

		[Token(Token = "0x400053D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private float lastLength;

		[Token(Token = "0x17000094")]
		public float length
		{
			[Token(Token = "0x6000752")]
			[Address(RVA = "0x33C5150", Offset = "0x33C5150", VA = "0x33C5150")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000753")]
		[Address(RVA = "0x33C53CC", Offset = "0x33C53CC", VA = "0x33C53CC", Slot = "6")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6000754")]
		[Address(RVA = "0x33C5D00", Offset = "0x33C5D00", VA = "0x33C5D00", Slot = "16")]
		protected override void Build()
		{
		}

		[Token(Token = "0x6000755")]
		[Address(RVA = "0x33C6F3C", Offset = "0x33C6F3C", VA = "0x33C6F3C")]
		private void AddEvent(LengthEvent lengthEvent)
		{
		}

		[Token(Token = "0x6000756")]
		[Address(RVA = "0x33C73F8", Offset = "0x33C73F8", VA = "0x33C73F8")]
		public LengthCalculator()
		{
		}
	}
	[Token(Token = "0x2000122")]
	public class MeshGenerator : SplineUser
	{
		[Token(Token = "0x20001C9")]
		public enum UVMode
		{
			[Token(Token = "0x40008A1")]
			Clip,
			[Token(Token = "0x40008A2")]
			UniformClip,
			[Token(Token = "0x40008A3")]
			Clamp,
			[Token(Token = "0x40008A4")]
			UniformClamp
		}

		[Token(Token = "0x20001CA")]
		public enum NormalMethod
		{
			[Token(Token = "0x40008A6")]
			Recalculate,
			[Token(Token = "0x40008A7")]
			SplineNormals
		}

		[Token(Token = "0x400053E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		[SerializeField]
		[HideInInspector]
		private bool _baked;

		[Token(Token = "0x400053F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAD")]
		[SerializeField]
		[HideInInspector]
		private bool _markDynamic;

		[Token(Token = "0x4000540")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		[HideInInspector]
		private float _size;

		[Token(Token = "0x4000541")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		[SerializeField]
		[HideInInspector]
		private Color _color;

		[Token(Token = "0x4000542")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[SerializeField]
		[HideInInspector]
		private Vector3 _offset;

		[Token(Token = "0x4000543")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		[HideInInspector]
		private NormalMethod _normalMethod;

		[Token(Token = "0x4000544")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		[SerializeField]
		[HideInInspector]
		private bool _calculateTangents;

		[Token(Token = "0x4000545")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		[HideInInspector]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCFD4AC", Offset = "0xCFD4AC")]
		private float _rotation;

		[Token(Token = "0x4000546")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[SerializeField]
		[HideInInspector]
		private bool _flipFaces;

		[Token(Token = "0x4000547")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDD")]
		[SerializeField]
		[HideInInspector]
		private bool _doubleSided;

		[Token(Token = "0x4000548")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		[HideInInspector]
		private UVMode _uvMode;

		[Token(Token = "0x4000549")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[SerializeField]
		[HideInInspector]
		private Vector2 _uvScale;

		[Token(Token = "0x400054A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		[SerializeField]
		[HideInInspector]
		private Vector2 _uvOffset;

		[Token(Token = "0x400054B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		[SerializeField]
		[HideInInspector]
		private float _uvRotation;

		[Token(Token = "0x400054C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		[HideInInspector]
		protected MeshCollider meshCollider;

		[Token(Token = "0x400054D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		[HideInInspector]
		protected MeshFilter filter;

		[Token(Token = "0x400054E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[SerializeField]
		[HideInInspector]
		protected MeshRenderer meshRenderer;

		[Token(Token = "0x400054F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[SerializeField]
		[HideInInspector]
		protected TS_Mesh tsMesh;

		[Token(Token = "0x4000550")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[SerializeField]
		[HideInInspector]
		protected Mesh mesh;

		[Token(Token = "0x4000551")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[HideInInspector]
		public float colliderUpdateRate;

		[Token(Token = "0x4000552")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		protected bool updateCollider;

		[Token(Token = "0x4000553")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		protected float lastUpdateTime;

		[Token(Token = "0x4000554")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		private float vDist;

		[Token(Token = "0x4000555")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected static Vector2 uvs;

		[Token(Token = "0x17000095")]
		public float size
		{
			[Token(Token = "0x6000757")]
			[Address(RVA = "0x33C81A4", Offset = "0x33C81A4", VA = "0x33C81A4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000758")]
			[Address(RVA = "0x33C8420", Offset = "0x33C8420", VA = "0x33C8420")]
			set
			{
			}
		}

		[Token(Token = "0x17000096")]
		public Color color
		{
			[Token(Token = "0x6000759")]
			[Address(RVA = "0x33C8960", Offset = "0x33C8960", VA = "0x33C8960")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x600075A")]
			[Address(RVA = "0x33C8BF4", Offset = "0x33C8BF4", VA = "0x33C8BF4")]
			set
			{
			}
		}

		[Token(Token = "0x17000097")]
		public Vector3 offset
		{
			[Token(Token = "0x600075B")]
			[Address(RVA = "0x33C9138", Offset = "0x33C9138", VA = "0x33C9138")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x600075C")]
			[Address(RVA = "0x33C93C8", Offset = "0x33C93C8", VA = "0x33C93C8")]
			set
			{
			}
		}

		[Token(Token = "0x17000098")]
		public NormalMethod normalMethod
		{
			[Token(Token = "0x600075D")]
			[Address(RVA = "0x33C9960", Offset = "0x33C9960", VA = "0x33C9960")]
			get
			{
				return default(NormalMethod);
			}
			[Token(Token = "0x600075E")]
			[Address(RVA = "0x33C9BCC", Offset = "0x33C9BCC", VA = "0x33C9BCC")]
			set
			{
			}
		}

		[Token(Token = "0x17000099")]
		public bool calculateTangents
		{
			[Token(Token = "0x600075F")]
			[Address(RVA = "0x33CA0A4", Offset = "0x33CA0A4", VA = "0x33CA0A4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000760")]
			[Address(RVA = "0x33CA320", Offset = "0x33CA320", VA = "0x33CA320")]
			set
			{
			}
		}

		[Token(Token = "0x1700009A")]
		public float rotation
		{
			[Token(Token = "0x6000761")]
			[Address(RVA = "0x33CA7F8", Offset = "0x33CA7F8", VA = "0x33CA7F8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000762")]
			[Address(RVA = "0x33CAA74", Offset = "0x33CAA74", VA = "0x33CAA74")]
			set
			{
			}
		}

		[Token(Token = "0x1700009B")]
		public bool flipFaces
		{
			[Token(Token = "0x6000763")]
			[Address(RVA = "0x33CAF4C", Offset = "0x33CAF4C", VA = "0x33CAF4C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000764")]
			[Address(RVA = "0x33CB1C8", Offset = "0x33CB1C8", VA = "0x33CB1C8")]
			set
			{
			}
		}

		[Token(Token = "0x1700009C")]
		public bool doubleSided
		{
			[Token(Token = "0x6000765")]
			[Address(RVA = "0x33CB6A8", Offset = "0x33CB6A8", VA = "0x33CB6A8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000766")]
			[Address(RVA = "0x33CB924", Offset = "0x33CB924", VA = "0x33CB924")]
			set
			{
			}
		}

		[Token(Token = "0x1700009D")]
		public UVMode uvMode
		{
			[Token(Token = "0x6000767")]
			[Address(RVA = "0x33CBE04", Offset = "0x33CBE04", VA = "0x33CBE04")]
			get
			{
				return default(UVMode);
			}
			[Token(Token = "0x6000768")]
			[Address(RVA = "0x33CC070", Offset = "0x33CC070", VA = "0x33CC070")]
			set
			{
			}
		}

		[Token(Token = "0x1700009E")]
		public Vector2 uvScale
		{
			[Token(Token = "0x6000769")]
			[Address(RVA = "0x33CC548", Offset = "0x33CC548", VA = "0x33CC548")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x600076A")]
			[Address(RVA = "0x33CC7C8", Offset = "0x33CC7C8", VA = "0x33CC7C8")]
			set
			{
			}
		}

		[Token(Token = "0x1700009F")]
		public Vector2 uvOffset
		{
			[Token(Token = "0x600076B")]
			[Address(RVA = "0x33CCD40", Offset = "0x33CCD40", VA = "0x33CCD40")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x600076C")]
			[Address(RVA = "0x33CCFC0", Offset = "0x33CCFC0", VA = "0x33CCFC0")]
			set
			{
			}
		}

		[Token(Token = "0x170000A0")]
		public float uvRotation
		{
			[Token(Token = "0x600076D")]
			[Address(RVA = "0x33CD538", Offset = "0x33CD538", VA = "0x33CD538")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600076E")]
			[Address(RVA = "0x33CD7B4", Offset = "0x33CD7B4", VA = "0x33CD7B4")]
			set
			{
			}
		}

		[Token(Token = "0x170000A1")]
		public bool baked
		{
			[Token(Token = "0x600076F")]
			[Address(RVA = "0x33CDC8C", Offset = "0x33CDC8C", VA = "0x33CDC8C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000A2")]
		public bool markDynamic
		{
			[Token(Token = "0x6000770")]
			[Address(RVA = "0x33CDF08", Offset = "0x33CDF08", VA = "0x33CDF08")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000771")]
			[Address(RVA = "0x33CE184", Offset = "0x33CE184", VA = "0x33CE184")]
			set
			{
			}
		}

		[Token(Token = "0x6000772")]
		[Address(RVA = "0x33CE9B0", Offset = "0x33CE9B0", VA = "0x33CE9B0", Slot = "6")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6000773")]
		[Address(RVA = "0x33CF178", Offset = "0x33CF178", VA = "0x33CF178", Slot = "7")]
		protected override void Reset()
		{
		}

		[Token(Token = "0x6000774")]
		[Address(RVA = "0x33CF454", Offset = "0x33CF454", VA = "0x33CF454")]
		public void CloneMesh()
		{
		}

		[Token(Token = "0x6000775")]
		[Address(RVA = "0x33CFF04", Offset = "0x33CFF04", VA = "0x33CFF04", Slot = "12")]
		public override void Rebuild()
		{
		}

		[Token(Token = "0x6000776")]
		[Address(RVA = "0x33D02FC", Offset = "0x33D02FC", VA = "0x33D02FC", Slot = "13")]
		public override void RebuildImmediate()
		{
		}

		[Token(Token = "0x6000777")]
		[Address(RVA = "0x33D06F4", Offset = "0x33D06F4", VA = "0x33D06F4", Slot = "8")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6000778")]
		[Address(RVA = "0x33D09D0", Offset = "0x33D09D0", VA = "0x33D09D0", Slot = "9")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6000779")]
		[Address(RVA = "0x33D0CAC", Offset = "0x33D0CAC", VA = "0x33D0CAC", Slot = "10")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x600077A")]
		[Address(RVA = "0x33D15C4", Offset = "0x33D15C4", VA = "0x33D15C4")]
		public void UpdateCollider()
		{
		}

		[Token(Token = "0x600077B")]
		[Address(RVA = "0x33D1CE4", Offset = "0x33D1CE4", VA = "0x33D1CE4", Slot = "15")]
		protected override void LateRun()
		{
		}

		[Token(Token = "0x600077C")]
		[Address(RVA = "0x33D28F4", Offset = "0x33D28F4", VA = "0x33D28F4", Slot = "16")]
		protected override void Build()
		{
		}

		[Token(Token = "0x600077D")]
		[Address(RVA = "0x33D2DD0", Offset = "0x33D2DD0", VA = "0x33D2DD0", Slot = "17")]
		protected override void PostBuild()
		{
		}

		[Token(Token = "0x600077E")]
		[Address(RVA = "0x33D3170", Offset = "0x33D3170", VA = "0x33D3170", Slot = "20")]
		protected virtual void BuildMesh()
		{
		}

		[Token(Token = "0x600077F")]
		[Address(RVA = "0x33D3380", Offset = "0x33D3380", VA = "0x33D3380", Slot = "21")]
		protected virtual void WriteMesh()
		{
		}

		[Token(Token = "0x6000780")]
		[Address(RVA = "0x33D4510", Offset = "0x33D4510", VA = "0x33D4510", Slot = "22")]
		protected virtual void AllocateMesh(int vertexCount, int trisCount)
		{
		}

		[Token(Token = "0x6000781")]
		[Address(RVA = "0x33D4F68", Offset = "0x33D4F68", VA = "0x33D4F68")]
		protected void ResetUVDistance()
		{
		}

		[Token(Token = "0x6000782")]
		[Address(RVA = "0x33D6504", Offset = "0x33D6504", VA = "0x33D6504")]
		protected void AddUVDistance(int sampleIndex)
		{
		}

		[Token(Token = "0x6000783")]
		[Address(RVA = "0x33D6A90", Offset = "0x33D6A90", VA = "0x33D6A90")]
		protected void CalculateUVs(double percent, float u)
		{
		}

		[Token(Token = "0x6000784")]
		[Address(RVA = "0x33D7474", Offset = "0x33D7474", VA = "0x33D7474")]
		public MeshGenerator()
		{
		}
	}
	[Token(Token = "0x2000123")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xCF9188", Offset = "0xCF9188")]
	public class Node : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20001CB")]
		public class Connection
		{
			[Token(Token = "0x40008A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool invertTangents;

			[Token(Token = "0x40008A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[SerializeField]
			private int _pointIndex;

			[Token(Token = "0x40008AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[SerializeField]
			private SplineComputer _computer;

			[Token(Token = "0x40008AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[SerializeField]
			[HideInInspector]
			internal SplinePoint point;

			[Token(Token = "0x17000195")]
			public SplineComputer spline
			{
				[Token(Token = "0x6000D12")]
				[Address(RVA = "0x440B014", Offset = "0x440B014", VA = "0x440B014")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000196")]
			public int pointIndex
			{
				[Token(Token = "0x6000D13")]
				[Address(RVA = "0x440B280", Offset = "0x440B280", VA = "0x440B280")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x17000197")]
			internal bool isValid
			{
				[Token(Token = "0x6000D14")]
				[Address(RVA = "0x440B4EC", Offset = "0x440B4EC", VA = "0x440B4EC")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x6000D15")]
			[Address(RVA = "0x440E90C", Offset = "0x440E90C", VA = "0x440E90C")]
			internal Connection(SplineComputer comp, int index, SplinePoint inputPoint)
			{
			}
		}

		[Token(Token = "0x20001CC")]
		public enum Type
		{
			[Token(Token = "0x40008AD")]
			Smooth,
			[Token(Token = "0x40008AE")]
			Free
		}

		[Token(Token = "0x4000556")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public Type type;

		[Token(Token = "0x4000557")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[HideInInspector]
		protected Connection[] connections;

		[Token(Token = "0x4000558")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[HideInInspector]
		private bool _transformSize;

		[Token(Token = "0x4000559")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		[SerializeField]
		[HideInInspector]
		private bool _transformNormals;

		[Token(Token = "0x400055A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		[SerializeField]
		[HideInInspector]
		private bool _transformTangents;

		[Token(Token = "0x400055B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector3 lastPosition;

		[Token(Token = "0x400055C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 lastScale;

		[Token(Token = "0x400055D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Quaternion lastRotation;

		[Token(Token = "0x400055E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Transform trs;

		[Token(Token = "0x170000A3")]
		public bool transformNormals
		{
			[Token(Token = "0x6000786")]
			[Address(RVA = "0x440082C", Offset = "0x440082C", VA = "0x440082C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000787")]
			[Address(RVA = "0x4400AA8", Offset = "0x4400AA8", VA = "0x4400AA8")]
			set
			{
			}
		}

		[Token(Token = "0x170000A4")]
		public bool transformSize
		{
			[Token(Token = "0x6000788")]
			[Address(RVA = "0x4401C94", Offset = "0x4401C94", VA = "0x4401C94")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000789")]
			[Address(RVA = "0x4401F10", Offset = "0x4401F10", VA = "0x4401F10")]
			set
			{
			}
		}

		[Token(Token = "0x170000A5")]
		public bool transformTangents
		{
			[Token(Token = "0x600078A")]
			[Address(RVA = "0x44023E8", Offset = "0x44023E8", VA = "0x44023E8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600078B")]
			[Address(RVA = "0x4402664", Offset = "0x4402664", VA = "0x4402664")]
			set
			{
			}
		}

		[Token(Token = "0x600078C")]
		[Address(RVA = "0x4402B3C", Offset = "0x4402B3C", VA = "0x4402B3C")]
		private void Awake()
		{
		}

		[Token(Token = "0x600078D")]
		[Address(RVA = "0x4403400", Offset = "0x4403400", VA = "0x4403400")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600078E")]
		[Address(RVA = "0x4403C48", Offset = "0x4403C48", VA = "0x4403C48")]
		private void Update()
		{
		}

		[Token(Token = "0x600078F")]
		[Address(RVA = "0x4403F20", Offset = "0x4403F20", VA = "0x4403F20")]
		private bool TransformChanged()
		{
			return default(bool);
		}

		[Token(Token = "0x6000790")]
		[Address(RVA = "0x4402EE8", Offset = "0x4402EE8", VA = "0x4402EE8")]
		private void SampleTransform()
		{
		}

		[Token(Token = "0x6000791")]
		[Address(RVA = "0x44036D0", Offset = "0x44036D0", VA = "0x44036D0")]
		private void Run()
		{
		}

		[Token(Token = "0x6000792")]
		[Address(RVA = "0x4406358", Offset = "0x4406358", VA = "0x4406358")]
		public SplinePoint GetPoint(int connectionIndex, bool swapTangents)
		{
			return default(SplinePoint);
		}

		[Token(Token = "0x6000793")]
		[Address(RVA = "0x4407678", Offset = "0x4407678", VA = "0x4407678")]
		public void SetPoint(int connectionIndex, SplinePoint worldPoint, bool swappedTangents)
		{
		}

		[Token(Token = "0x6000794")]
		[Address(RVA = "0x440A3A4", Offset = "0x440A3A4", VA = "0x440A3A4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000795")]
		[Address(RVA = "0x440A67C", Offset = "0x440A67C", VA = "0x440A67C")]
		public void ClearConnections()
		{
		}

		[Token(Token = "0x6000796")]
		[Address(RVA = "0x44045A8", Offset = "0x44045A8", VA = "0x44045A8")]
		public void UpdateConnectedComputers([Optional] SplineComputer excludeComputer)
		{
		}

		[Token(Token = "0x6000797")]
		[Address(RVA = "0x440C684", Offset = "0x440C684", VA = "0x440C684")]
		public void UpdatePoint(SplineComputer computer, int pointIndex, SplinePoint point, bool updatePosition = true)
		{
		}

		[Token(Token = "0x6000798")]
		[Address(RVA = "0x4400F80", Offset = "0x4400F80", VA = "0x4400F80")]
		public void UpdatePoints()
		{
		}

		[Token(Token = "0x6000799")]
		[Address(RVA = "0x440D034", Offset = "0x440D034", VA = "0x440D034")]
		protected void RemoveInvalidConnections()
		{
		}

		[Token(Token = "0x600079A")]
		[Address(RVA = "0x440D73C", Offset = "0x440D73C", VA = "0x440D73C", Slot = "4")]
		public virtual void AddConnection(SplineComputer computer, int pointIndex)
		{
		}

		[Token(Token = "0x600079B")]
		[Address(RVA = "0x4409810", Offset = "0x4409810", VA = "0x4409810")]
		protected SplinePoint PointToLocal(SplinePoint worldPoint)
		{
			return default(SplinePoint);
		}

		[Token(Token = "0x600079C")]
		[Address(RVA = "0x4406A7C", Offset = "0x4406A7C", VA = "0x4406A7C")]
		protected SplinePoint PointToWorld(SplinePoint localPoint)
		{
			return default(SplinePoint);
		}

		[Token(Token = "0x600079D")]
		[Address(RVA = "0x440EE58", Offset = "0x440EE58", VA = "0x440EE58", Slot = "5")]
		public virtual void RemoveConnection(SplineComputer computer, int pointIndex)
		{
		}

		[Token(Token = "0x600079E")]
		[Address(RVA = "0x440BAC0", Offset = "0x440BAC0", VA = "0x440BAC0")]
		private void RemoveConnection(int index)
		{
		}

		[Token(Token = "0x600079F")]
		[Address(RVA = "0x440F980", Offset = "0x440F980", VA = "0x440F980", Slot = "6")]
		public virtual bool HasConnection(SplineComputer computer, int pointIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x60007A0")]
		[Address(RVA = "0x44104F8", Offset = "0x44104F8", VA = "0x44104F8")]
		public Connection[] GetConnections()
		{
			return null;
		}

		[Token(Token = "0x60007A1")]
		[Address(RVA = "0x4410764", Offset = "0x4410764", VA = "0x4410764")]
		public Node()
		{
		}
	}
	[Token(Token = "0x2000124")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xCF91D4", Offset = "0xCF91D4")]
	public class ObjectBender : SplineUser
	{
		[Token(Token = "0x20001CD")]
		public enum Axis
		{
			[Token(Token = "0x40008B0")]
			X,
			[Token(Token = "0x40008B1")]
			Y,
			[Token(Token = "0x40008B2")]
			Z
		}

		[Token(Token = "0x20001CE")]
		public enum NormalMode
		{
			[Token(Token = "0x40008B4")]
			Spline,
			[Token(Token = "0x40008B5")]
			Auto,
			[Token(Token = "0x40008B6")]
			Custom
		}

		[Token(Token = "0x20001CF")]
		public enum ForwardMode
		{
			[Token(Token = "0x40008B8")]
			Spline,
			[Token(Token = "0x40008B9")]
			Custom
		}

		[Serializable]
		[Token(Token = "0x20001D0")]
		public class BendProperty
		{
			[Token(Token = "0x40008BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool enabled;

			[Token(Token = "0x40008BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public TS_Transform transform;

			[Token(Token = "0x40008BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool applyRotation;

			[Token(Token = "0x40008BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
			public bool applyScale;

			[Token(Token = "0x40008BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
			public bool generateLightmapUVs;

			[Token(Token = "0x40008BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
			[SerializeField]
			[HideInInspector]
			private bool _bendMesh;

			[Token(Token = "0x40008C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[SerializeField]
			[HideInInspector]
			private bool _bendSpline;

			[Token(Token = "0x40008C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
			[SerializeField]
			[HideInInspector]
			private bool _bendCollider;

			[Token(Token = "0x40008C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float colliderUpdateDue;

			[Token(Token = "0x40008C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float colliderUpdateRate;

			[Token(Token = "0x40008C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private bool updateCollider;

			[Token(Token = "0x40008C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public Vector3 originalPosition;

			[Token(Token = "0x40008C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public Vector3 originalScale;

			[Token(Token = "0x40008C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			public Quaternion originalRotation;

			[Token(Token = "0x40008C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			public Quaternion parentRotation;

			[Token(Token = "0x40008C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
			public Vector3 positionPercent;

			[Token(Token = "0x40008CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			public Vector3[] vertexPercents;

			[Token(Token = "0x40008CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			public Vector3[] normals;

			[Token(Token = "0x40008CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			public Vector3[] colliderVertexPercents;

			[Token(Token = "0x40008CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			public Vector3[] colliderNormals;

			[Token(Token = "0x40008CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			[SerializeField]
			[HideInInspector]
			private Mesh originalMesh;

			[Token(Token = "0x40008CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			[SerializeField]
			[HideInInspector]
			private Mesh originalColliderMesh;

			[Token(Token = "0x40008D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
			private Spline _originalSpline;

			[Token(Token = "0x40008D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
			[SerializeField]
			[HideInInspector]
			private Mesh destinationMesh;

			[Token(Token = "0x40008D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			[SerializeField]
			[HideInInspector]
			private Mesh destinationColliderMesh;

			[Token(Token = "0x40008D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			public Spline destinationSpline;

			[Token(Token = "0x40008D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
			public TS_Mesh _editMesh;

			[Token(Token = "0x40008D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
			public TS_Mesh _editColliderMesh;

			[Token(Token = "0x40008D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
			public MeshFilter filter;

			[Token(Token = "0x40008D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
			public MeshCollider collider;

			[Token(Token = "0x40008D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
			public SplineComputer splineComputer;

			[Token(Token = "0x40008D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
			public Vector3[] splinePointPercents;

			[Token(Token = "0x40008DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
			public Vector3[] primaryTangentPercents;

			[Token(Token = "0x40008DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
			public Vector3[] secondaryTangentPercents;

			[Token(Token = "0x40008DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
			[SerializeField]
			[HideInInspector]
			private bool parent;

			[Token(Token = "0x17000198")]
			public bool isValid
			{
				[Token(Token = "0x6000D16")]
				[Address(RVA = "0x4435554", Offset = "0x4435554", VA = "0x4435554")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x17000199")]
			public bool bendMesh
			{
				[Token(Token = "0x6000D17")]
				[Address(RVA = "0x441DAA4", Offset = "0x441DAA4", VA = "0x441DAA4")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x6000D18")]
				[Address(RVA = "0x441DD20", Offset = "0x441DD20", VA = "0x441DD20")]
				set
				{
				}
			}

			[Token(Token = "0x1700019A")]
			public bool bendCollider
			{
				[Token(Token = "0x6000D19")]
				[Address(RVA = "0x441EB94", Offset = "0x441EB94", VA = "0x441EB94")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x6000D1A")]
				[Address(RVA = "0x441EE10", Offset = "0x441EE10", VA = "0x441EE10")]
				set
				{
				}
			}

			[Token(Token = "0x1700019B")]
			public bool bendSpline
			{
				[Token(Token = "0x6000D1B")]
				[Address(RVA = "0x4436238", Offset = "0x4436238", VA = "0x4436238")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x6000D1C")]
				[Address(RVA = "0x44364B4", Offset = "0x44364B4", VA = "0x44364B4")]
				set
				{
				}
			}

			[Token(Token = "0x1700019C")]
			public TS_Mesh editMesh
			{
				[Token(Token = "0x6000D1D")]
				[Address(RVA = "0x44281C0", Offset = "0x44281C0", VA = "0x44281C0")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700019D")]
			public TS_Mesh editColliderMesh
			{
				[Token(Token = "0x6000D1E")]
				[Address(RVA = "0x44288E8", Offset = "0x44288E8", VA = "0x44288E8")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700019E")]
			public Spline originalSpline
			{
				[Token(Token = "0x6000D1F")]
				[Address(RVA = "0x44290B8", Offset = "0x44290B8", VA = "0x44290B8")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700019F")]
			public bool isParent
			{
				[Token(Token = "0x6000D20")]
				[Address(RVA = "0x4427F44", Offset = "0x4427F44", VA = "0x4427F44")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x6000D21")]
			[Address(RVA = "0x4419EA0", Offset = "0x4419EA0", VA = "0x4419EA0")]
			public BendProperty(Transform t, bool parent = false)
			{
			}

			[Token(Token = "0x6000D22")]
			[Address(RVA = "0x4429FC0", Offset = "0x4429FC0", VA = "0x4429FC0")]
			public void Revert()
			{
			}

			[Token(Token = "0x6000D23")]
			[Address(RVA = "0x44358E8", Offset = "0x44358E8", VA = "0x44358E8")]
			private void RevertMesh()
			{
			}

			[Token(Token = "0x6000D24")]
			[Address(RVA = "0x44368AC", Offset = "0x44368AC", VA = "0x44368AC")]
			private void RevertTransform()
			{
			}

			[Token(Token = "0x6000D25")]
			[Address(RVA = "0x4435D90", Offset = "0x4435D90", VA = "0x4435D90")]
			private void RevertCollider()
			{
			}

			[Token(Token = "0x6000D26")]
			[Address(RVA = "0x442B080", Offset = "0x442B080", VA = "0x442B080")]
			public void Apply(bool applyTransform)
			{
			}

			[Token(Token = "0x6000D27")]
			[Address(RVA = "0x442C4E8", Offset = "0x442C4E8", VA = "0x442C4E8")]
			public void Update()
			{
			}

			[Token(Token = "0x6000D28")]
			[Address(RVA = "0x4436F20", Offset = "0x4436F20", VA = "0x4436F20")]
			private void ApplyMesh()
			{
			}

			[Token(Token = "0x6000D29")]
			[Address(RVA = "0x4437FE0", Offset = "0x4437FE0", VA = "0x4437FE0")]
			private void ApplyCollider()
			{
			}

			[Token(Token = "0x6000D2A")]
			[Address(RVA = "0x4437BBC", Offset = "0x4437BBC", VA = "0x4437BBC")]
			private void ApplySpline()
			{
			}
		}

		[Token(Token = "0x400055F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		[SerializeField]
		[HideInInspector]
		private bool _bend;

		[Token(Token = "0x4000560")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[HideInInspector]
		public BendProperty[] bendProperties;

		[Token(Token = "0x4000561")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		[HideInInspector]
		private bool _parentIsTheSpline;

		[Token(Token = "0x4000562")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		[HideInInspector]
		private TS_Bounds bounds;

		[Token(Token = "0x4000563")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		[HideInInspector]
		private Axis _axis;

		[Token(Token = "0x4000564")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[SerializeField]
		[HideInInspector]
		private NormalMode _normalMode;

		[Token(Token = "0x4000565")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		[HideInInspector]
		private ForwardMode _forwardMode;

		[Token(Token = "0x4000566")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		[SerializeField]
		[HideInInspector]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xCFD9CC", Offset = "0xCFD9CC")]
		private Vector3 _customNormal;

		[Token(Token = "0x4000567")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		[HideInInspector]
		private Vector3 _customForward;

		[Token(Token = "0x4000568")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private Matrix4x4 normalMatrix;

		[Token(Token = "0x4000569")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		private Quaternion bendRotation;

		[Token(Token = "0x170000A6")]
		public bool bend
		{
			[Token(Token = "0x60007A2")]
			[Address(RVA = "0x4410B38", Offset = "0x4410B38", VA = "0x4410B38")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60007A3")]
			[Address(RVA = "0x4410DB4", Offset = "0x4410DB4", VA = "0x4410DB4")]
			set
			{
			}
		}

		[Token(Token = "0x170000A7")]
		public Axis axis
		{
			[Token(Token = "0x60007A4")]
			[Address(RVA = "0x4412D2C", Offset = "0x4412D2C", VA = "0x4412D2C")]
			get
			{
				return default(Axis);
			}
			[Token(Token = "0x60007A5")]
			[Address(RVA = "0x4412F98", Offset = "0x4412F98", VA = "0x4412F98")]
			set
			{
			}
		}

		[Token(Token = "0x170000A8")]
		public NormalMode upMode
		{
			[Token(Token = "0x60007A6")]
			[Address(RVA = "0x44146B0", Offset = "0x44146B0", VA = "0x44146B0")]
			get
			{
				return default(NormalMode);
			}
			[Token(Token = "0x60007A7")]
			[Address(RVA = "0x441491C", Offset = "0x441491C", VA = "0x441491C")]
			set
			{
			}
		}

		[Token(Token = "0x170000A9")]
		public Vector3 customNormal
		{
			[Token(Token = "0x60007A8")]
			[Address(RVA = "0x4414F74", Offset = "0x4414F74", VA = "0x4414F74")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60007A9")]
			[Address(RVA = "0x4415204", Offset = "0x4415204", VA = "0x4415204")]
			set
			{
			}
		}

		[Token(Token = "0x170000AA")]
		public ForwardMode forwardMode
		{
			[Token(Token = "0x60007AA")]
			[Address(RVA = "0x4415934", Offset = "0x4415934", VA = "0x4415934")]
			get
			{
				return default(ForwardMode);
			}
			[Token(Token = "0x60007AB")]
			[Address(RVA = "0x4415BA0", Offset = "0x4415BA0", VA = "0x4415BA0")]
			set
			{
			}
		}

		[Token(Token = "0x170000AB")]
		public Vector3 customForward
		{
			[Token(Token = "0x60007AC")]
			[Address(RVA = "0x44161F8", Offset = "0x44161F8", VA = "0x44161F8")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60007AD")]
			[Address(RVA = "0x4416488", Offset = "0x4416488", VA = "0x4416488")]
			set
			{
			}
		}

		[Token(Token = "0x60007AE")]
		[Address(RVA = "0x4416BB8", Offset = "0x4416BB8", VA = "0x4416BB8")]
		private void GetTransformsRecursively(Transform current, ref List<Transform> transformList)
		{
		}

		[Token(Token = "0x60007AF")]
		[Address(RVA = "0x4417684", Offset = "0x4417684", VA = "0x4417684")]
		private void GetObjects()
		{
		}

		[Token(Token = "0x60007B0")]
		[Address(RVA = "0x4419B48", Offset = "0x4419B48", VA = "0x4419B48")]
		public TS_Bounds GetBounds()
		{
			return null;
		}

		[Token(Token = "0x60007B1")]
		[Address(RVA = "0x441837C", Offset = "0x441837C", VA = "0x441837C")]
		private void CreateProperty(ref BendProperty property, Transform t)
		{
		}

		[Token(Token = "0x60007B2")]
		[Address(RVA = "0x441F904", Offset = "0x441F904", VA = "0x441F904")]
		private void CalculateBounds()
		{
		}

		[Token(Token = "0x60007B3")]
		[Address(RVA = "0x4420694", Offset = "0x4420694", VA = "0x4420694")]
		private void CalculatePropertyBounds(ref BendProperty property)
		{
		}

		[Token(Token = "0x60007B4")]
		[Address(RVA = "0x4424E78", Offset = "0x4424E78", VA = "0x4424E78")]
		public void CalculatePercents(BendProperty property)
		{
		}

		[Token(Token = "0x60007B5")]
		[Address(RVA = "0x4412740", Offset = "0x4412740", VA = "0x4412740")]
		private void Revert()
		{
		}

		[Token(Token = "0x60007B6")]
		[Address(RVA = "0x4411594", Offset = "0x4411594", VA = "0x4411594")]
		public void UpdateReferences()
		{
		}

		[Token(Token = "0x60007B7")]
		[Address(RVA = "0x442CA20", Offset = "0x442CA20", VA = "0x442CA20")]
		private void GetevalResult(Vector3 percentage)
		{
		}

		[Token(Token = "0x60007B8")]
		[Address(RVA = "0x4429A0C", Offset = "0x4429A0C", VA = "0x4429A0C")]
		private Vector3 GetPercentage(Vector3 point)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60007B9")]
		[Address(RVA = "0x442F5DC", Offset = "0x442F5DC", VA = "0x442F5DC", Slot = "16")]
		protected override void Build()
		{
		}

		[Token(Token = "0x60007BA")]
		[Address(RVA = "0x442A7FC", Offset = "0x442A7FC", VA = "0x442A7FC")]
		private void Bend()
		{
		}

		[Token(Token = "0x60007BB")]
		[Address(RVA = "0x442FA40", Offset = "0x442FA40", VA = "0x442FA40")]
		public void BendObject(BendProperty p)
		{
		}

		[Token(Token = "0x60007BC")]
		[Address(RVA = "0x4432D50", Offset = "0x4432D50", VA = "0x4432D50")]
		private void BendMesh(Vector3[] vertexPercents, Vector3[] originalNormals, TS_Mesh mesh, Matrix4x4 worldToLocalMatrix)
		{
		}

		[Token(Token = "0x60007BD")]
		[Address(RVA = "0x4433C1C", Offset = "0x4433C1C", VA = "0x4433C1C", Slot = "17")]
		protected override void PostBuild()
		{
		}

		[Token(Token = "0x60007BE")]
		[Address(RVA = "0x4434688", Offset = "0x4434688", VA = "0x4434688", Slot = "15")]
		protected override void LateRun()
		{
		}

		[Token(Token = "0x60007BF")]
		[Address(RVA = "0x4434D40", Offset = "0x4434D40", VA = "0x4434D40")]
		public ObjectBender()
		{
		}
	}
	[Token(Token = "0x2000125")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xCF920C", Offset = "0xCF920C")]
	public class ObjectController : SplineUser
	{
		[Serializable]
		[Token(Token = "0x20001D1")]
		internal class ObjectControl
		{
			[Token(Token = "0x40008DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject gameObject;

			[Token(Token = "0x40008DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector3 position;

			[Token(Token = "0x40008DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public Quaternion rotation;

			[Token(Token = "0x40008E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public Vector3 scale;

			[Token(Token = "0x40008E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public bool active;

			[Token(Token = "0x40008E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public Vector3 baseScale;

			[Token(Token = "0x170001A0")]
			public bool isNull
			{
				[Token(Token = "0x6000D2B")]
				[Address(RVA = "0x4453008", Offset = "0x4453008", VA = "0x4453008")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x170001A1")]
			public Transform transform
			{
				[Token(Token = "0x6000D2C")]
				[Address(RVA = "0x44457E4", Offset = "0x44457E4", VA = "0x44457E4")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000D2D")]
			[Address(RVA = "0x444822C", Offset = "0x444822C", VA = "0x444822C")]
			public ObjectControl(GameObject input)
			{
			}

			[Token(Token = "0x6000D2E")]
			[Address(RVA = "0x4445C94", Offset = "0x4445C94", VA = "0x4445C94")]
			public void Destroy()
			{
			}

			[Token(Token = "0x6000D2F")]
			[Address(RVA = "0x4446480", Offset = "0x4446480", VA = "0x4446480")]
			public void DestroyImmediate()
			{
			}

			[Token(Token = "0x6000D30")]
			[Address(RVA = "0x4450A18", Offset = "0x4450A18", VA = "0x4450A18")]
			public void Apply()
			{
			}
		}

		[Token(Token = "0x20001D2")]
		public enum ObjectMethod
		{
			[Token(Token = "0x40008E4")]
			Instantiate,
			[Token(Token = "0x40008E5")]
			GetChildren
		}

		[Token(Token = "0x20001D3")]
		public enum Positioning
		{
			[Token(Token = "0x40008E7")]
			Stretch,
			[Token(Token = "0x40008E8")]
			Clip
		}

		[Token(Token = "0x20001D4")]
		public enum Iteration
		{
			[Token(Token = "0x40008EA")]
			Ordered,
			[Token(Token = "0x40008EB")]
			Random
		}

		[Token(Token = "0x20001D5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCF9CE0", Offset = "0xCF9CE0")]
		private sealed class <InstantiateAllWithDelay>d__94 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40008EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40008ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40008EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ObjectController <>4__this;

			[Token(Token = "0x40008EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <i>5__1;

			[Token(Token = "0x170001A2")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000D34")]
				[Address(RVA = "0x4452D50", Offset = "0x4452D50", VA = "0x4452D50", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001A3")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000D36")]
				[Address(RVA = "0x4452F1C", Offset = "0x4452F1C", VA = "0x4452F1C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000D31")]
			[Address(RVA = "0x4449C74", Offset = "0x4449C74", VA = "0x4449C74")]
			[DebuggerHidden]
			public <InstantiateAllWithDelay>d__94(int <>1__state)
			{
			}

			[Token(Token = "0x6000D32")]
			[Address(RVA = "0x44520E0", Offset = "0x44520E0", VA = "0x44520E0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000D33")]
			[Address(RVA = "0x44521C0", Offset = "0x44521C0", VA = "0x44521C0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000D35")]
			[Address(RVA = "0x4452E3C", Offset = "0x4452E3C", VA = "0x4452E3C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400056A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		[HideInInspector]
		public GameObject[] objects;

		[Token(Token = "0x400056B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		[HideInInspector]
		private float _evaluateOffset;

		[Token(Token = "0x400056C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		[SerializeField]
		[HideInInspector]
		private int _spawnCount;

		[Token(Token = "0x400056D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		[HideInInspector]
		private Positioning _objectPositioning;

		[Token(Token = "0x400056E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[SerializeField]
		[HideInInspector]
		private Iteration _iteration;

		[Token(Token = "0x400056F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		[HideInInspector]
		private int _randomSeed;

		[Token(Token = "0x4000570")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[SerializeField]
		[HideInInspector]
		private Vector3 _minOffset;

		[Token(Token = "0x4000571")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		[HideInInspector]
		private Vector3 _maxOffset;

		[Token(Token = "0x4000572")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[SerializeField]
		[HideInInspector]
		private bool _offsetUseWorldCoords;

		[Token(Token = "0x4000573")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		[HideInInspector]
		private Vector3 _minRotation;

		[Token(Token = "0x4000574")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		[SerializeField]
		[HideInInspector]
		private Vector3 _maxRotation;

		[Token(Token = "0x4000575")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		[HideInInspector]
		private bool _uniformScaleLerp;

		[Token(Token = "0x4000576")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		[SerializeField]
		[HideInInspector]
		private Vector3 _minScaleMultiplier;

		[Token(Token = "0x4000577")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[SerializeField]
		[HideInInspector]
		private Vector3 _maxScaleMultiplier;

		[Token(Token = "0x4000578")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		[SerializeField]
		[HideInInspector]
		private bool _shellOffset;

		[Token(Token = "0x4000579")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11D")]
		[SerializeField]
		[HideInInspector]
		private bool _applyRotation;

		[Token(Token = "0x400057A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11E")]
		[SerializeField]
		[HideInInspector]
		private bool _rotateByOffset;

		[Token(Token = "0x400057B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11F")]
		[SerializeField]
		[HideInInspector]
		private bool _applyScale;

		[Token(Token = "0x400057C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[SerializeField]
		[HideInInspector]
		private ObjectMethod _objectMethod;

		[Token(Token = "0x400057D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		[HideInInspector]
		public bool delayedSpawn;

		[Token(Token = "0x400057E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[HideInInspector]
		public float spawnDelay;

		[Token(Token = "0x400057F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		[SerializeField]
		[HideInInspector]
		private int lastChildCount;

		[Token(Token = "0x4000580")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[SerializeField]
		[HideInInspector]
		private ObjectControl[] spawned;

		[Token(Token = "0x4000581")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private System.Random offsetRandomizer;

		[Token(Token = "0x4000582")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private System.Random shellRandomizer;

		[Token(Token = "0x4000583")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private System.Random rotationRandomizer;

		[Token(Token = "0x4000584")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private System.Random scaleRandomizer;

		[Token(Token = "0x170000AC")]
		public ObjectMethod objectMethod
		{
			[Token(Token = "0x60007C0")]
			[Address(RVA = "0x4438FEC", Offset = "0x4438FEC", VA = "0x4438FEC")]
			get
			{
				return default(ObjectMethod);
			}
			[Token(Token = "0x60007C1")]
			[Address(RVA = "0x4439258", Offset = "0x4439258", VA = "0x4439258")]
			set
			{
			}
		}

		[Token(Token = "0x170000AD")]
		public int spawnCount
		{
			[Token(Token = "0x60007C2")]
			[Address(RVA = "0x443A2EC", Offset = "0x443A2EC", VA = "0x443A2EC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60007C3")]
			[Address(RVA = "0x443A558", Offset = "0x443A558", VA = "0x443A558")]
			set
			{
			}
		}

		[Token(Token = "0x170000AE")]
		public Positioning objectPositioning
		{
			[Token(Token = "0x60007C4")]
			[Address(RVA = "0x443C608", Offset = "0x443C608", VA = "0x443C608")]
			get
			{
				return default(Positioning);
			}
			[Token(Token = "0x60007C5")]
			[Address(RVA = "0x443C874", Offset = "0x443C874", VA = "0x443C874")]
			set
			{
			}
		}

		[Token(Token = "0x170000AF")]
		public Iteration iteration
		{
			[Token(Token = "0x60007C6")]
			[Address(RVA = "0x443CD4C", Offset = "0x443CD4C", VA = "0x443CD4C")]
			get
			{
				return default(Iteration);
			}
			[Token(Token = "0x60007C7")]
			[Address(RVA = "0x443CFB8", Offset = "0x443CFB8", VA = "0x443CFB8")]
			set
			{
			}
		}

		[Token(Token = "0x170000B0")]
		public int randomSeed
		{
			[Token(Token = "0x60007C8")]
			[Address(RVA = "0x443D490", Offset = "0x443D490", VA = "0x443D490")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60007C9")]
			[Address(RVA = "0x443D6FC", Offset = "0x443D6FC", VA = "0x443D6FC")]
			set
			{
			}
		}

		[Token(Token = "0x170000B1")]
		public Vector3 minOffset
		{
			[Token(Token = "0x60007CA")]
			[Address(RVA = "0x443DBD4", Offset = "0x443DBD4", VA = "0x443DBD4")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60007CB")]
			[Address(RVA = "0x443DE64", Offset = "0x443DE64", VA = "0x443DE64")]
			set
			{
			}
		}

		[Token(Token = "0x170000B2")]
		public Vector3 maxOffset
		{
			[Token(Token = "0x60007CC")]
			[Address(RVA = "0x443E3FC", Offset = "0x443E3FC", VA = "0x443E3FC")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60007CD")]
			[Address(RVA = "0x443E68C", Offset = "0x443E68C", VA = "0x443E68C")]
			set
			{
			}
		}

		[Token(Token = "0x170000B3")]
		public bool offsetUseWorldCoords
		{
			[Token(Token = "0x60007CE")]
			[Address(RVA = "0x443EC24", Offset = "0x443EC24", VA = "0x443EC24")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60007CF")]
			[Address(RVA = "0x443EEA0", Offset = "0x443EEA0", VA = "0x443EEA0")]
			set
			{
			}
		}

		[Token(Token = "0x170000B4")]
		public Vector3 minRotation
		{
			[Token(Token = "0x60007D0")]
			[Address(RVA = "0x443F380", Offset = "0x443F380", VA = "0x443F380")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60007D1")]
			[Address(RVA = "0x443F610", Offset = "0x443F610", VA = "0x443F610")]
			set
			{
			}
		}

		[Token(Token = "0x170000B5")]
		public Vector3 maxRotation
		{
			[Token(Token = "0x60007D2")]
			[Address(RVA = "0x443FBA8", Offset = "0x443FBA8", VA = "0x443FBA8")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60007D3")]
			[Address(RVA = "0x443FE38", Offset = "0x443FE38", VA = "0x443FE38")]
			set
			{
			}
		}

		[Token(Token = "0x170000B6")]
		public Vector3 rotationOffset
		{
			[Token(Token = "0x60007D4")]
			[Address(RVA = "0x44403D0", Offset = "0x44403D0", VA = "0x44403D0")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60007D5")]
			[Address(RVA = "0x44407B8", Offset = "0x44407B8", VA = "0x44407B8")]
			set
			{
			}
		}

		[Token(Token = "0x170000B7")]
		public Vector3 minScaleMultiplier
		{
			[Token(Token = "0x60007D6")]
			[Address(RVA = "0x4440E30", Offset = "0x4440E30", VA = "0x4440E30")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60007D7")]
			[Address(RVA = "0x44410C4", Offset = "0x44410C4", VA = "0x44410C4")]
			set
			{
			}
		}

		[Token(Token = "0x170000B8")]
		public Vector3 maxScaleMultiplier
		{
			[Token(Token = "0x60007D8")]
			[Address(RVA = "0x444165C", Offset = "0x444165C", VA = "0x444165C")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60007D9")]
			[Address(RVA = "0x44418F0", Offset = "0x44418F0", VA = "0x44418F0")]
			set
			{
			}
		}

		[Token(Token = "0x170000B9")]
		public bool uniformScaleLerp
		{
			[Token(Token = "0x60007DA")]
			[Address(RVA = "0x4441E8C", Offset = "0x4441E8C", VA = "0x4441E8C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60007DB")]
			[Address(RVA = "0x4442108", Offset = "0x4442108", VA = "0x4442108")]
			set
			{
			}
		}

		[Token(Token = "0x170000BA")]
		public bool shellOffset
		{
			[Token(Token = "0x60007DC")]
			[Address(RVA = "0x44425E8", Offset = "0x44425E8", VA = "0x44425E8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60007DD")]
			[Address(RVA = "0x4442864", Offset = "0x4442864", VA = "0x4442864")]
			set
			{
			}
		}

		[Token(Token = "0x170000BB")]
		public bool applyRotation
		{
			[Token(Token = "0x60007DE")]
			[Address(RVA = "0x4442D44", Offset = "0x4442D44", VA = "0x4442D44")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60007DF")]
			[Address(RVA = "0x4442FC0", Offset = "0x4442FC0", VA = "0x4442FC0")]
			set
			{
			}
		}

		[Token(Token = "0x170000BC")]
		public bool rotateByOffset
		{
			[Token(Token = "0x60007E0")]
			[Address(RVA = "0x44434A0", Offset = "0x44434A0", VA = "0x44434A0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60007E1")]
			[Address(RVA = "0x444371C", Offset = "0x444371C", VA = "0x444371C")]
			set
			{
			}
		}

		[Token(Token = "0x170000BD")]
		public bool applyScale
		{
			[Token(Token = "0x60007E2")]
			[Address(RVA = "0x4443BFC", Offset = "0x4443BFC", VA = "0x4443BFC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60007E3")]
			[Address(RVA = "0x4443E78", Offset = "0x4443E78", VA = "0x4443E78")]
			set
			{
			}
		}

		[Token(Token = "0x170000BE")]
		public float evaluateOffset
		{
			[Token(Token = "0x60007E4")]
			[Address(RVA = "0x4444358", Offset = "0x4444358", VA = "0x4444358")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60007E5")]
			[Address(RVA = "0x44445D4", Offset = "0x44445D4", VA = "0x44445D4")]
			set
			{
			}
		}

		[Token(Token = "0x60007E6")]
		[Address(RVA = "0x4444AAC", Offset = "0x4444AAC", VA = "0x4444AAC")]
		public void Clear()
		{
		}

		[Token(Token = "0x60007E7")]
		[Address(RVA = "0x4446150", Offset = "0x4446150", VA = "0x4446150")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x60007E8")]
		[Address(RVA = "0x443B074", Offset = "0x443B074", VA = "0x443B074")]
		private void Remove()
		{
		}

		[Token(Token = "0x60007E9")]
		[Address(RVA = "0x444693C", Offset = "0x444693C", VA = "0x444693C")]
		public void GetAll()
		{
		}

		[Token(Token = "0x60007EA")]
		[Address(RVA = "0x44398F8", Offset = "0x44398F8", VA = "0x44398F8")]
		public void Spawn()
		{
		}

		[Token(Token = "0x60007EB")]
		[Address(RVA = "0x44494EC", Offset = "0x44494EC", VA = "0x44494EC", Slot = "15")]
		protected override void LateRun()
		{
		}

		[Token(Token = "0x60007EC")]
		[Address(RVA = "0x4448B38", Offset = "0x4448B38", VA = "0x4448B38")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD02A38", Offset = "0xD02A38")]
		private IEnumerator InstantiateAllWithDelay()
		{
			return null;
		}

		[Token(Token = "0x60007ED")]
		[Address(RVA = "0x4448C54", Offset = "0x4448C54", VA = "0x4448C54")]
		private void InstantiateAll()
		{
		}

		[Token(Token = "0x60007EE")]
		[Address(RVA = "0x4449D74", Offset = "0x4449D74", VA = "0x4449D74")]
		private void InstantiateSingle()
		{
		}

		[Token(Token = "0x60007EF")]
		[Address(RVA = "0x444AEF8", Offset = "0x444AEF8", VA = "0x444AEF8", Slot = "16")]
		protected override void Build()
		{
		}

		[Token(Token = "0x60007F0")]
		[Address(RVA = "0x4450360", Offset = "0x4450360", VA = "0x4450360", Slot = "17")]
		protected override void PostBuild()
		{
		}

		[Token(Token = "0x60007F1")]
		[Address(RVA = "0x44512D8", Offset = "0x44512D8", VA = "0x44512D8")]
		public ObjectController()
		{
		}
	}
	[Token(Token = "0x2000126")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xCF9244", Offset = "0xCF9244")]
	public class ParticleController : SplineUser
	{
		[Token(Token = "0x20001D6")]
		public enum EmitPoint
		{
			[Token(Token = "0x40008F1")]
			Beginning,
			[Token(Token = "0x40008F2")]
			Ending,
			[Token(Token = "0x40008F3")]
			Random,
			[Token(Token = "0x40008F4")]
			Ordered
		}

		[Token(Token = "0x20001D7")]
		public enum MotionType
		{
			[Token(Token = "0x40008F6")]
			None,
			[Token(Token = "0x40008F7")]
			UseParticleSystem,
			[Token(Token = "0x40008F8")]
			FollowForward,
			[Token(Token = "0x40008F9")]
			FollowBackward,
			[Token(Token = "0x40008FA")]
			ByNormal,
			[Token(Token = "0x40008FB")]
			ByNormalRandomized
		}

		[Token(Token = "0x20001D8")]
		public enum Wrap
		{
			[Token(Token = "0x40008FD")]
			Default,
			[Token(Token = "0x40008FE")]
			Loop
		}

		[Token(Token = "0x20001D9")]
		public class Particle
		{
			[Token(Token = "0x40008FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal Vector2 startOffset;

			[Token(Token = "0x4000900")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal Vector2 endOffset;

			[Token(Token = "0x4000901")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal float cycleSpeed;

			[Token(Token = "0x4000902")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			internal float startLifetime;

			[Token(Token = "0x4000903")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal Color startColor;

			[Token(Token = "0x4000904")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			internal float remainingLifetime;

			[Token(Token = "0x4000905")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			internal float lifeTime;

			[Token(Token = "0x4000906")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			internal double startPercent;

			[Token(Token = "0x6000D37")]
			[Address(RVA = "0x42BA890", Offset = "0x42BA890", VA = "0x42BA890")]
			internal double GetSplinePercent(Wrap wrap, ParticleSystem.Particle particle)
			{
				return default(double);
			}

			[Token(Token = "0x6000D38")]
			[Address(RVA = "0x42BB198", Offset = "0x42BB198", VA = "0x42BB198")]
			public Particle()
			{
			}
		}

		[Token(Token = "0x4000585")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[HideInInspector]
		public ParticleSystem _particleSystem;

		[Token(Token = "0x4000586")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[HideInInspector]
		public bool volumetric;

		[Token(Token = "0x4000587")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB9")]
		[HideInInspector]
		public bool emitFromShell;

		[Token(Token = "0x4000588")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		[HideInInspector]
		public Vector2 scale;

		[Token(Token = "0x4000589")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[HideInInspector]
		public EmitPoint emitPoint;

		[Token(Token = "0x400058A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[HideInInspector]
		public MotionType motionType;

		[Token(Token = "0x400058B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[HideInInspector]
		public Wrap wrapMode;

		[Token(Token = "0x400058C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[HideInInspector]
		public float minCycles;

		[Token(Token = "0x400058D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		[HideInInspector]
		public float maxCycles;

		[Token(Token = "0x400058E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private ParticleSystem.Particle[] particles;

		[Token(Token = "0x400058F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private Particle[] controllers;

		[Token(Token = "0x4000590")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private int particleCount;

		[Token(Token = "0x4000591")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private int birthIndex;

		[Token(Token = "0x60007F2")]
		[Address(RVA = "0x445651C", Offset = "0x445651C", VA = "0x445651C", Slot = "15")]
		protected override void LateRun()
		{
		}

		[Token(Token = "0x60007F3")]
		[Address(RVA = "0x445910C", Offset = "0x445910C", VA = "0x445910C")]
		private void TransformParticle(ref ParticleSystem.Particle particle, Transform trs)
		{
		}

		[Token(Token = "0x60007F4")]
		[Address(RVA = "0x445F658", Offset = "0x445F658", VA = "0x445F658")]
		private void InverseTransformParticle(ref ParticleSystem.Particle particle, Transform trs)
		{
		}

		[Token(Token = "0x60007F5")]
		[Address(RVA = "0x4461998", Offset = "0x4461998", VA = "0x4461998", Slot = "7")]
		protected override void Reset()
		{
		}

		[Token(Token = "0x60007F6")]
		[Address(RVA = "0x445FC84", Offset = "0x445FC84", VA = "0x445FC84")]
		private void HandleParticle(int index)
		{
		}

		[Token(Token = "0x60007F7")]
		[Address(RVA = "0x4461F14", Offset = "0x4461F14", VA = "0x4461F14")]
		private void OnParticleDie(int index)
		{
		}

		[Token(Token = "0x60007F8")]
		[Address(RVA = "0x4459738", Offset = "0x4459738", VA = "0x4459738")]
		private void OnParticleBorn(int index)
		{
		}

		[Token(Token = "0x60007F9")]
		[Address(RVA = "0x4462130", Offset = "0x4462130", VA = "0x4462130")]
		public ParticleController()
		{
		}
	}
	[Token(Token = "0x2000127")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xCF9290", Offset = "0xCF9290")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xCF9290", Offset = "0xCF9290")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xCF9290", Offset = "0xCF9290")]
	public class PathGenerator : MeshGenerator
	{
		[Token(Token = "0x4000592")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[SerializeField]
		[HideInInspector]
		private int _slices;

		[Token(Token = "0x4000593")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		[SerializeField]
		[HideInInspector]
		private bool _useShapeCurve;

		[Token(Token = "0x4000594")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[SerializeField]
		[HideInInspector]
		private AnimationCurve _shape;

		[Token(Token = "0x4000595")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[SerializeField]
		[HideInInspector]
		private AnimationCurve _lastShape;

		[Token(Token = "0x4000596")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[SerializeField]
		[HideInInspector]
		private float _shapeExposure;

		[Token(Token = "0x170000BF")]
		public int slices
		{
			[Token(Token = "0x60007FA")]
			[Address(RVA = "0x42BB818", Offset = "0x42BB818", VA = "0x42BB818")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60007FB")]
			[Address(RVA = "0x42BBA84", Offset = "0x42BBA84", VA = "0x42BBA84")]
			set
			{
			}
		}

		[Token(Token = "0x170000C0")]
		public bool useShapeCurve
		{
			[Token(Token = "0x60007FC")]
			[Address(RVA = "0x42BC07C", Offset = "0x42BC07C", VA = "0x42BC07C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60007FD")]
			[Address(RVA = "0x42BC2F8", Offset = "0x42BC2F8", VA = "0x42BC2F8")]
			set
			{
			}
		}

		[Token(Token = "0x170000C1")]
		public float shapeExposure
		{
			[Token(Token = "0x60007FE")]
			[Address(RVA = "0x42BCD80", Offset = "0x42BCD80", VA = "0x42BCD80")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60007FF")]
			[Address(RVA = "0x42BCFFC", Offset = "0x42BCFFC", VA = "0x42BCFFC")]
			set
			{
			}
		}

		[Token(Token = "0x170000C2")]
		public AnimationCurve shape
		{
			[Token(Token = "0x6000800")]
			[Address(RVA = "0x42BD5EC", Offset = "0x42BD5EC", VA = "0x42BD5EC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000801")]
			[Address(RVA = "0x42BD858", Offset = "0x42BD858", VA = "0x42BD858")]
			set
			{
			}
		}

		[Token(Token = "0x6000802")]
		[Address(RVA = "0x42BF6AC", Offset = "0x42BF6AC", VA = "0x42BF6AC", Slot = "6")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6000803")]
		[Address(RVA = "0x42BFA70", Offset = "0x42BFA70", VA = "0x42BFA70", Slot = "7")]
		protected override void Reset()
		{
		}

		[Token(Token = "0x6000804")]
		[Address(RVA = "0x42BFD4C", Offset = "0x42BFD4C", VA = "0x42BFD4C", Slot = "20")]
		protected override void BuildMesh()
		{
		}

		[Token(Token = "0x6000805")]
		[Address(RVA = "0x42C0414", Offset = "0x42C0414", VA = "0x42C0414")]
		private void GenerateVertices()
		{
		}

		[Token(Token = "0x6000806")]
		[Address(RVA = "0x42C5B4C", Offset = "0x42C5B4C", VA = "0x42C5B4C")]
		public PathGenerator()
		{
		}
	}
	[Token(Token = "0x2000128")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xCF9340", Offset = "0xCF9340")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xCF9340", Offset = "0xCF9340")]
	public class PolygonColliderGenerator : SplineUser
	{
		[Token(Token = "0x20001DA")]
		public enum Type
		{
			[Token(Token = "0x4000908")]
			Path,
			[Token(Token = "0x4000909")]
			Shape
		}

		[Token(Token = "0x4000597")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		[SerializeField]
		[HideInInspector]
		private Type _type;

		[Token(Token = "0x4000598")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		[HideInInspector]
		private float _size;

		[Token(Token = "0x4000599")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		[SerializeField]
		[HideInInspector]
		private float _offset;

		[Token(Token = "0x400059A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		[HideInInspector]
		protected PolygonCollider2D polygonCollider;

		[Token(Token = "0x400059B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		[HideInInspector]
		protected Vector2[] vertices;

		[Token(Token = "0x400059C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[HideInInspector]
		public float updateRate;

		[Token(Token = "0x400059D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		protected float lastUpdateTime;

		[Token(Token = "0x400059E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private bool updateCollider;

		[Token(Token = "0x170000C3")]
		public Type type
		{
			[Token(Token = "0x6000807")]
			[Address(RVA = "0x42C5E6C", Offset = "0x42C5E6C", VA = "0x42C5E6C")]
			get
			{
				return default(Type);
			}
			[Token(Token = "0x6000808")]
			[Address(RVA = "0x42C60D8", Offset = "0x42C60D8", VA = "0x42C60D8")]
			set
			{
			}
		}

		[Token(Token = "0x170000C4")]
		public float size
		{
			[Token(Token = "0x6000809")]
			[Address(RVA = "0x42C65B0", Offset = "0x42C65B0", VA = "0x42C65B0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600080A")]
			[Address(RVA = "0x42C682C", Offset = "0x42C682C", VA = "0x42C682C")]
			set
			{
			}
		}

		[Token(Token = "0x170000C5")]
		public float offset
		{
			[Token(Token = "0x600080B")]
			[Address(RVA = "0x42C6D04", Offset = "0x42C6D04", VA = "0x42C6D04")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600080C")]
			[Address(RVA = "0x42C6F80", Offset = "0x42C6F80", VA = "0x42C6F80")]
			set
			{
			}
		}

		[Token(Token = "0x600080D")]
		[Address(RVA = "0x42C7458", Offset = "0x42C7458", VA = "0x42C7458", Slot = "6")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x600080E")]
		[Address(RVA = "0x42C7810", Offset = "0x42C7810", VA = "0x42C7810", Slot = "7")]
		protected override void Reset()
		{
		}

		[Token(Token = "0x600080F")]
		[Address(RVA = "0x42C7AEC", Offset = "0x42C7AEC", VA = "0x42C7AEC", Slot = "8")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6000810")]
		[Address(RVA = "0x42C7DC8", Offset = "0x42C7DC8", VA = "0x42C7DC8", Slot = "9")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6000811")]
		[Address(RVA = "0x42C80A4", Offset = "0x42C80A4", VA = "0x42C80A4", Slot = "10")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6000812")]
		[Address(RVA = "0x42C8380", Offset = "0x42C8380", VA = "0x42C8380", Slot = "15")]
		protected override void LateRun()
		{
		}

		[Token(Token = "0x6000813")]
		[Address(RVA = "0x42C8DE4", Offset = "0x42C8DE4", VA = "0x42C8DE4", Slot = "16")]
		protected override void Build()
		{
		}

		[Token(Token = "0x6000814")]
		[Address(RVA = "0x42CBAEC", Offset = "0x42CBAEC", VA = "0x42CBAEC", Slot = "17")]
		protected override void PostBuild()
		{
		}

		[Token(Token = "0x6000815")]
		[Address(RVA = "0x42C95BC", Offset = "0x42C95BC", VA = "0x42C95BC")]
		private void GeneratePath()
		{
		}

		[Token(Token = "0x6000816")]
		[Address(RVA = "0x42CAAF0", Offset = "0x42CAAF0", VA = "0x42CAAF0")]
		private void GenerateShape()
		{
		}

		[Token(Token = "0x6000817")]
		[Address(RVA = "0x42CC768", Offset = "0x42CC768", VA = "0x42CC768")]
		public PolygonColliderGenerator()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000129")]
	public class ColorModifier : SplineSampleModifier
	{
		[Serializable]
		[Token(Token = "0x20001DB")]
		public class ColorKey : Key
		{
			[Token(Token = "0x200024C")]
			public enum BlendMode
			{
				[Token(Token = "0x4000A35")]
				Lerp,
				[Token(Token = "0x4000A36")]
				Multiply,
				[Token(Token = "0x4000A37")]
				Add,
				[Token(Token = "0x4000A38")]
				Subtract
			}

			[Token(Token = "0x400090A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public Color color;

			[Token(Token = "0x400090B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			public BlendMode blendMode;

			[Token(Token = "0x6000D39")]
			[Address(RVA = "0x33679E8", Offset = "0x33679E8", VA = "0x33679E8")]
			public ColorKey(double f, double t, ColorModifier modifier)
			{
			}

			[Token(Token = "0x6000D3A")]
			[Address(RVA = "0x3368908", Offset = "0x3368908", VA = "0x3368908")]
			public Color Blend(Color input, float percent)
			{
				return default(Color);
			}
		}

		[Token(Token = "0x400059F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<ColorKey> keys;

		[Token(Token = "0x6000818")]
		[Address(RVA = "0x3365214", Offset = "0x3365214", VA = "0x3365214")]
		public ColorModifier()
		{
		}

		[Token(Token = "0x6000819")]
		[Address(RVA = "0x33656C0", Offset = "0x33656C0", VA = "0x33656C0", Slot = "4")]
		public override List<Key> GetKeys()
		{
			return null;
		}

		[Token(Token = "0x600081A")]
		[Address(RVA = "0x3365E24", Offset = "0x3365E24", VA = "0x3365E24", Slot = "5")]
		public override void SetKeys(List<Key> input)
		{
		}

		[Token(Token = "0x600081B")]
		[Address(RVA = "0x3367640", Offset = "0x3367640", VA = "0x3367640")]
		public void AddKey(double f, double t)
		{
		}

		[Token(Token = "0x600081C")]
		[Address(RVA = "0x3367E48", Offset = "0x3367E48", VA = "0x3367E48", Slot = "6")]
		public override void Apply(SplineSample result)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200012A")]
	public class MeshScaleModifier : SplineSampleModifier
	{
		[Serializable]
		[Token(Token = "0x20001DC")]
		public class ScaleKey : Key
		{
			[Token(Token = "0x400090C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public Vector2 scale;

			[Token(Token = "0x6000D3B")]
			[Address(RVA = "0x43FEED0", Offset = "0x43FEED0", VA = "0x43FEED0")]
			public ScaleKey(double f, double t, MeshScaleModifier modifier)
			{
			}
		}

		[Token(Token = "0x40005A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<ScaleKey> keys;

		[Token(Token = "0x600081D")]
		[Address(RVA = "0x43FD578", Offset = "0x43FD578", VA = "0x43FD578")]
		public MeshScaleModifier()
		{
		}

		[Token(Token = "0x600081E")]
		[Address(RVA = "0x43FDA24", Offset = "0x43FDA24", VA = "0x43FDA24", Slot = "4")]
		public override List<Key> GetKeys()
		{
			return null;
		}

		[Token(Token = "0x600081F")]
		[Address(RVA = "0x43FE238", Offset = "0x43FE238", VA = "0x43FE238", Slot = "5")]
		public override void SetKeys(List<Key> input)
		{
		}

		[Token(Token = "0x6000820")]
		[Address(RVA = "0x43FEB28", Offset = "0x43FEB28", VA = "0x43FEB28")]
		public void AddKey(double f, double t)
		{
		}

		[Token(Token = "0x6000821")]
		[Address(RVA = "0x43FF2DC", Offset = "0x43FF2DC", VA = "0x43FF2DC", Slot = "6")]
		public override void Apply(SplineSample result)
		{
		}

		[Token(Token = "0x6000822")]
		[Address(RVA = "0x43FFCE8", Offset = "0x43FFCE8", VA = "0x43FFCE8")]
		public Vector2 GetScale(SplineSample sample)
		{
			return default(Vector2);
		}
	}
	[Serializable]
	[Token(Token = "0x200012B")]
	public class OffsetModifier : SplineSampleModifier
	{
		[Serializable]
		[Token(Token = "0x20001DD")]
		public class OffsetKey : Key
		{
			[Token(Token = "0x400090D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public Vector2 offset;

			[Token(Token = "0x6000D3C")]
			[Address(RVA = "0x4454B18", Offset = "0x4454B18", VA = "0x4454B18")]
			public OffsetKey(Vector2 o, double f, double t, OffsetModifier modifier)
			{
			}
		}

		[Token(Token = "0x40005A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<OffsetKey> keys;

		[Token(Token = "0x6000823")]
		[Address(RVA = "0x445331C", Offset = "0x445331C", VA = "0x445331C")]
		public OffsetModifier()
		{
		}

		[Token(Token = "0x6000824")]
		[Address(RVA = "0x44537C8", Offset = "0x44537C8", VA = "0x44537C8", Slot = "4")]
		public override List<Key> GetKeys()
		{
			return null;
		}

		[Token(Token = "0x6000825")]
		[Address(RVA = "0x4453F2C", Offset = "0x4453F2C", VA = "0x4453F2C", Slot = "5")]
		public override void SetKeys(List<Key> input)
		{
		}

		[Token(Token = "0x6000826")]
		[Address(RVA = "0x4454748", Offset = "0x4454748", VA = "0x4454748")]
		public void AddKey(Vector2 offset, double f, double t)
		{
		}

		[Token(Token = "0x6000827")]
		[Address(RVA = "0x4454F94", Offset = "0x4454F94", VA = "0x4454F94", Slot = "6")]
		public override void Apply(SplineSample result)
		{
		}

		[Token(Token = "0x6000828")]
		[Address(RVA = "0x44558C8", Offset = "0x44558C8", VA = "0x44558C8")]
		private Vector2 Evaluate(double time)
		{
			return default(Vector2);
		}
	}
	[Serializable]
	[Token(Token = "0x200012C")]
	public class RotationModifier : SplineSampleModifier
	{
		[Serializable]
		[Token(Token = "0x20001DE")]
		public class RotationKey : Key
		{
			[Token(Token = "0x400090E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public bool useLookTarget;

			[Token(Token = "0x400090F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public Transform target;

			[Token(Token = "0x4000910")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public Vector3 rotation;

			[Token(Token = "0x6000D3D")]
			[Address(RVA = "0x42E89C4", Offset = "0x42E89C4", VA = "0x42E89C4")]
			public RotationKey(Vector3 rotation, double f, double t, RotationModifier modifier)
			{
			}
		}

		[Token(Token = "0x40005A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<RotationKey> keys;

		[Token(Token = "0x6000829")]
		[Address(RVA = "0x42E71BC", Offset = "0x42E71BC", VA = "0x42E71BC")]
		public RotationModifier()
		{
		}

		[Token(Token = "0x600082A")]
		[Address(RVA = "0x42E7668", Offset = "0x42E7668", VA = "0x42E7668", Slot = "4")]
		public override List<Key> GetKeys()
		{
			return null;
		}

		[Token(Token = "0x600082B")]
		[Address(RVA = "0x42E7DCC", Offset = "0x42E7DCC", VA = "0x42E7DCC", Slot = "5")]
		public override void SetKeys(List<Key> input)
		{
		}

		[Token(Token = "0x600082C")]
		[Address(RVA = "0x42E85E8", Offset = "0x42E85E8", VA = "0x42E85E8")]
		public void AddKey(Vector3 rotation, double f, double t)
		{
		}

		[Token(Token = "0x600082D")]
		[Address(RVA = "0x42E8F18", Offset = "0x42E8F18", VA = "0x42E8F18", Slot = "6")]
		public override void Apply(SplineSample result)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200012D")]
	public class SizeModifier : SplineSampleModifier
	{
		[Serializable]
		[Token(Token = "0x20001DF")]
		public class SizeKey : Key
		{
			[Token(Token = "0x4000911")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public float size;

			[Token(Token = "0x6000D3E")]
			[Address(RVA = "0x4305A68", Offset = "0x4305A68", VA = "0x4305A68")]
			public SizeKey(double f, double t, SizeModifier modifier)
			{
			}
		}

		[Token(Token = "0x40005A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<SizeKey> keys;

		[Token(Token = "0x600082E")]
		[Address(RVA = "0x43041C0", Offset = "0x43041C0", VA = "0x43041C0")]
		public SizeModifier()
		{
		}

		[Token(Token = "0x600082F")]
		[Address(RVA = "0x430466C", Offset = "0x430466C", VA = "0x430466C", Slot = "4")]
		public override List<Key> GetKeys()
		{
			return null;
		}

		[Token(Token = "0x6000830")]
		[Address(RVA = "0x4304DD0", Offset = "0x4304DD0", VA = "0x4304DD0", Slot = "5")]
		public override void SetKeys(List<Key> input)
		{
		}

		[Token(Token = "0x6000831")]
		[Address(RVA = "0x43056C0", Offset = "0x43056C0", VA = "0x43056C0")]
		public void AddKey(double f, double t)
		{
		}

		[Token(Token = "0x6000832")]
		[Address(RVA = "0x4305DD0", Offset = "0x4305DD0", VA = "0x4305DD0", Slot = "6")]
		public override void Apply(SplineSample result)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200012E")]
	public class SplineSampleModifier
	{
		[Serializable]
		[Token(Token = "0x20001E0")]
		public class Key
		{
			[Token(Token = "0x4000912")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			private double _featherStart;

			[Token(Token = "0x4000913")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[SerializeField]
			private double _featherEnd;

			[Token(Token = "0x4000914")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[SerializeField]
			private double _centerStart;

			[Token(Token = "0x4000915")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[SerializeField]
			private double _centerEnd;

			[Token(Token = "0x4000916")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[SerializeField]
			internal SplineSampleModifier modifier;

			[Token(Token = "0x4000917")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public AnimationCurve interpolation;

			[Token(Token = "0x4000918")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public float blend;

			[Token(Token = "0x170001A4")]
			public double start
			{
				[Token(Token = "0x6000D3F")]
				[Address(RVA = "0x3C84980", Offset = "0x3C84980", VA = "0x3C84980")]
				get
				{
					return default(double);
				}
				[Token(Token = "0x6000D40")]
				[Address(RVA = "0x3C84BFC", Offset = "0x3C84BFC", VA = "0x3C84BFC")]
				set
				{
				}
			}

			[Token(Token = "0x170001A5")]
			public double end
			{
				[Token(Token = "0x6000D41")]
				[Address(RVA = "0x3C85078", Offset = "0x3C85078", VA = "0x3C85078")]
				get
				{
					return default(double);
				}
				[Token(Token = "0x6000D42")]
				[Address(RVA = "0x3C852F4", Offset = "0x3C852F4", VA = "0x3C852F4")]
				set
				{
				}
			}

			[Token(Token = "0x170001A6")]
			public double centerStart
			{
				[Token(Token = "0x6000D43")]
				[Address(RVA = "0x3C85770", Offset = "0x3C85770", VA = "0x3C85770")]
				get
				{
					return default(double);
				}
				[Token(Token = "0x6000D44")]
				[Address(RVA = "0x3C859EC", Offset = "0x3C859EC", VA = "0x3C859EC")]
				set
				{
				}
			}

			[Token(Token = "0x170001A7")]
			public double centerEnd
			{
				[Token(Token = "0x6000D45")]
				[Address(RVA = "0x3C85F90", Offset = "0x3C85F90", VA = "0x3C85F90")]
				get
				{
					return default(double);
				}
				[Token(Token = "0x6000D46")]
				[Address(RVA = "0x3C8620C", Offset = "0x3C8620C", VA = "0x3C8620C")]
				set
				{
				}
			}

			[Token(Token = "0x170001A8")]
			public double globalCenterStart
			{
				[Token(Token = "0x6000D47")]
				[Address(RVA = "0x3C867B0", Offset = "0x3C867B0", VA = "0x3C867B0")]
				get
				{
					return default(double);
				}
				[Token(Token = "0x6000D48")]
				[Address(RVA = "0x3C871B4", Offset = "0x3C871B4", VA = "0x3C871B4")]
				set
				{
				}
			}

			[Token(Token = "0x170001A9")]
			public double globalCenterEnd
			{
				[Token(Token = "0x6000D49")]
				[Address(RVA = "0x3C87D90", Offset = "0x3C87D90", VA = "0x3C87D90")]
				get
				{
					return default(double);
				}
				[Token(Token = "0x6000D4A")]
				[Address(RVA = "0x3C880F8", Offset = "0x3C880F8", VA = "0x3C880F8")]
				set
				{
				}
			}

			[Token(Token = "0x170001AA")]
			public double position
			{
				[Token(Token = "0x6000D4B")]
				[Address(RVA = "0x3C884E4", Offset = "0x3C884E4", VA = "0x3C884E4")]
				get
				{
					return default(double);
				}
				[Token(Token = "0x6000D4C")]
				[Address(RVA = "0x3C88EA8", Offset = "0x3C88EA8", VA = "0x3C88EA8")]
				set
				{
				}
			}

			[Token(Token = "0x6000D4D")]
			[Address(RVA = "0x3C89440", Offset = "0x3C89440", VA = "0x3C89440")]
			internal Key(double f, double t, SplineSampleModifier modifier)
			{
			}

			[Token(Token = "0x6000D4E")]
			[Address(RVA = "0x3C875A0", Offset = "0x3C875A0", VA = "0x3C875A0")]
			private double GlobalToLocalPercent(double t)
			{
				return default(double);
			}

			[Token(Token = "0x6000D4F")]
			[Address(RVA = "0x3C86B18", Offset = "0x3C86B18", VA = "0x3C86B18")]
			private double LocalToGlobalPercent(double t)
			{
				return default(double);
			}

			[Token(Token = "0x6000D50")]
			[Address(RVA = "0x3C89C70", Offset = "0x3C89C70", VA = "0x3C89C70")]
			public float Evaluate(double t)
			{
				return default(float);
			}

			[Token(Token = "0x6000D51")]
			[Address(RVA = "0x3C8A518", Offset = "0x3C8A518", VA = "0x3C8A518", Slot = "4")]
			public virtual Key Duplicate()
			{
				return null;
			}
		}

		[Token(Token = "0x40005A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float blend;

		[Token(Token = "0x6000833")]
		[Address(RVA = "0x3C838D4", Offset = "0x3C838D4", VA = "0x3C838D4", Slot = "4")]
		public virtual List<Key> GetKeys()
		{
			return null;
		}

		[Token(Token = "0x6000834")]
		[Address(RVA = "0x3C83BC8", Offset = "0x3C83BC8", VA = "0x3C83BC8", Slot = "5")]
		public virtual void SetKeys(List<Key> input)
		{
		}

		[Token(Token = "0x6000835")]
		[Address(RVA = "0x3C84160", Offset = "0x3C84160", VA = "0x3C84160", Slot = "6")]
		public virtual void Apply(SplineSample result)
		{
		}

		[Token(Token = "0x6000836")]
		[Address(RVA = "0x3C8437C", Offset = "0x3C8437C", VA = "0x3C8437C", Slot = "7")]
		public virtual void Apply(SplineSample source, SplineSample destination)
		{
		}

		[Token(Token = "0x6000837")]
		[Address(RVA = "0x3C8474C", Offset = "0x3C8474C", VA = "0x3C8474C")]
		public SplineSampleModifier()
		{
		}
	}
	[Token(Token = "0x200012F")]
	public delegate void EmptySplineHandler();
	[Token(Token = "0x2000130")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xCF93C8", Offset = "0xCF93C8")]
	[ExecuteInEditMode]
	public class SplineComputer : MonoBehaviour
	{
		[Token(Token = "0x20001E1")]
		public enum Space
		{
			[Token(Token = "0x400091A")]
			World,
			[Token(Token = "0x400091B")]
			Local
		}

		[Token(Token = "0x20001E2")]
		public enum EvaluateMode
		{
			[Token(Token = "0x400091D")]
			Cached,
			[Token(Token = "0x400091E")]
			Calculate
		}

		[Token(Token = "0x20001E3")]
		public enum SampleMode
		{
			[Token(Token = "0x4000920")]
			Default,
			[Token(Token = "0x4000921")]
			Uniform,
			[Token(Token = "0x4000922")]
			Optimized
		}

		[Token(Token = "0x20001E4")]
		public enum UpdateMode
		{
			[Token(Token = "0x4000924")]
			Update,
			[Token(Token = "0x4000925")]
			FixedUpdate,
			[Token(Token = "0x4000926")]
			LateUpdate,
			[Token(Token = "0x4000927")]
			AllUpdate,
			[Token(Token = "0x4000928")]
			None
		}

		[Serializable]
		[Token(Token = "0x20001E5")]
		internal class NodeLink
		{
			[Token(Token = "0x4000929")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			internal Node node;

			[Token(Token = "0x400092A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[SerializeField]
			internal int pointIndex;

			[Token(Token = "0x6000D52")]
			[Address(RVA = "0x3FF14D0", Offset = "0x3FF14D0", VA = "0x3FF14D0")]
			internal List<Node.Connection> GetConnections(SplineComputer exclude)
			{
				return null;
			}

			[Token(Token = "0x6000D53")]
			[Address(RVA = "0x3FF5E34", Offset = "0x3FF5E34", VA = "0x3FF5E34")]
			public NodeLink()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20001E6")]
		public class Morph
		{
			[Serializable]
			[Token(Token = "0x200024D")]
			internal class SplineMorphState
			{
				[Token(Token = "0x4000A39")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public SplinePoint[] points;

				[Token(Token = "0x4000A3A")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				public float percent;

				[Token(Token = "0x4000A3B")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				public string name;

				[Token(Token = "0x6000EB4")]
				[Address(RVA = "0x4005C30", Offset = "0x4005C30", VA = "0x4005C30")]
				public SplineMorphState()
				{
				}
			}

			[Token(Token = "0x400092B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			private SplineComputer computer;

			[Token(Token = "0x400092C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[SerializeField]
			private SplineMorphState[] morphStates;

			[Token(Token = "0x400092D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[SerializeField]
			internal bool initialized;

			[Token(Token = "0x6000D54")]
			[Address(RVA = "0x3FFF730", Offset = "0x3FFF730", VA = "0x3FFF730")]
			public Morph(SplineComputer input)
			{
			}

			[Token(Token = "0x6000D55")]
			[Address(RVA = "0x3FFFC1C", Offset = "0x3FFFC1C", VA = "0x3FFFC1C")]
			public void SetWeight(int index, float weight)
			{
			}

			[Token(Token = "0x6000D56")]
			[Address(RVA = "0x40025B8", Offset = "0x40025B8", VA = "0x40025B8")]
			public void SetWeight(string name, float weight)
			{
			}

			[Token(Token = "0x6000D57")]
			[Address(RVA = "0x40033B0", Offset = "0x40033B0", VA = "0x40033B0")]
			public void CaptureSnapshot(int index)
			{
			}

			[Token(Token = "0x6000D58")]
			[Address(RVA = "0x4003C58", Offset = "0x4003C58", VA = "0x4003C58")]
			public void CaptureSnapshot(string name)
			{
			}

			[Token(Token = "0x6000D59")]
			[Address(RVA = "0x400401C", Offset = "0x400401C", VA = "0x400401C")]
			public void Clear()
			{
			}

			[Token(Token = "0x6000D5A")]
			[Address(RVA = "0x400429C", Offset = "0x400429C", VA = "0x400429C")]
			public SplinePoint[] GetSnapshot(int index)
			{
				return null;
			}

			[Token(Token = "0x6000D5B")]
			[Address(RVA = "0x4004558", Offset = "0x4004558", VA = "0x4004558")]
			public SplinePoint[] GetSnapshot(string name)
			{
				return null;
			}

			[Token(Token = "0x6000D5C")]
			[Address(RVA = "0x40048F0", Offset = "0x40048F0", VA = "0x40048F0")]
			public float GetWeight(int index)
			{
				return default(float);
			}

			[Token(Token = "0x6000D5D")]
			[Address(RVA = "0x4004BC8", Offset = "0x4004BC8", VA = "0x4004BC8")]
			public float GetWeight(string name)
			{
				return default(float);
			}

			[Token(Token = "0x6000D5E")]
			[Address(RVA = "0x4004F70", Offset = "0x4004F70", VA = "0x4004F70")]
			public void AddChannel(string name)
			{
			}

			[Token(Token = "0x6000D5F")]
			[Address(RVA = "0x4005F48", Offset = "0x4005F48", VA = "0x4005F48")]
			public void RemoveChannel(string name)
			{
			}

			[Token(Token = "0x6000D60")]
			[Address(RVA = "0x400630C", Offset = "0x400630C", VA = "0x400630C")]
			public void RemoveChannel(int index)
			{
			}

			[Token(Token = "0x6000D61")]
			[Address(RVA = "0x4000060", Offset = "0x4000060", VA = "0x4000060")]
			private void Update()
			{
			}

			[Token(Token = "0x6000D62")]
			[Address(RVA = "0x4002AD8", Offset = "0x4002AD8", VA = "0x4002AD8")]
			private int GetChannelIndex(string name)
			{
				return default(int);
			}

			[Token(Token = "0x6000D63")]
			[Address(RVA = "0x4006E94", Offset = "0x4006E94", VA = "0x4006E94")]
			public int GetChannelCount()
			{
				return default(int);
			}

			[Token(Token = "0x6000D64")]
			[Address(RVA = "0x4007230", Offset = "0x4007230", VA = "0x4007230")]
			public string[] GetChannelNames()
			{
				return null;
			}
		}

		[Token(Token = "0x40005A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public bool multithreaded;

		[Token(Token = "0x40005A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[HideInInspector]
		public bool rebuildOnAwake;

		[Token(Token = "0x40005A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[HideInInspector]
		public UpdateMode updateMode;

		[Token(Token = "0x40005A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public TriggerGroup[] triggerGroups;

		[Token(Token = "0x40005A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		[SerializeField]
		private Spline spline;

		[Token(Token = "0x40005AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		[SerializeField]
		private SplineSample[] _rawSamples;

		[Token(Token = "0x40005AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		[SerializeField]
		private SplineSample[] _transformedSamples;

		[Token(Token = "0x40005AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		[SerializeField]
		private SampleCollection sampleCollection;

		[Token(Token = "0x40005AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[HideInInspector]
		[SerializeField]
		private double[] originalSamplePercents;

		[Token(Token = "0x40005AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool[] sampleFlter;

		[Token(Token = "0x40005AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		[SerializeField]
		private int _sampleCount;

		[Token(Token = "0x40005B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[HideInInspector]
		[SerializeField]
		private bool _is2D;

		[Token(Token = "0x40005B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
		[HideInInspector]
		[SerializeField]
		private bool hasSamples;

		[Token(Token = "0x40005B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[HideInInspector]
		[SerializeField]
		private bool[] pointsDirty;

		[Token(Token = "0x40005B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[HideInInspector]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCFE420", Offset = "0xCFE420")]
		private float _optimizeAngleThreshold;

		[Token(Token = "0x40005B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[HideInInspector]
		[SerializeField]
		private Space _space;

		[Token(Token = "0x40005B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[HideInInspector]
		[SerializeField]
		private SampleMode _sampleMode;

		[Token(Token = "0x40005B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[HideInInspector]
		[SerializeField]
		private SplineUser[] subscribers;

		[Token(Token = "0x40005B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[HideInInspector]
		[SerializeField]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xCFE520", Offset = "0xCFE520")]
		private NodeLink[] nodes;

		[Token(Token = "0x40005B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private bool rebuildPending;

		[Token(Token = "0x40005B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
		private bool _trsCheck;

		[Token(Token = "0x40005BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Transform _trs;

		[Token(Token = "0x40005BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Matrix4x4 transformMatrix;

		[Token(Token = "0x40005BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private Matrix4x4 inverseTransformMatrix;

		[Token(Token = "0x40005BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private bool queueResample;

		[Token(Token = "0x40005BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x119")]
		private bool queueRebuild;

		[Token(Token = "0x40005BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		private Vector3 lastPosition;

		[Token(Token = "0x40005C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private Vector3 lastScale;

		[Token(Token = "0x40005C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		private bool uniformScale;

		[Token(Token = "0x40005C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private Quaternion lastRotation;

		[Token(Token = "0x170000C6")]
		public Space space
		{
			[Token(Token = "0x600083C")]
			[Address(RVA = "0x3FB9960", Offset = "0x3FB9960", VA = "0x3FB9960")]
			get
			{
				return default(Space);
			}
			[Token(Token = "0x600083D")]
			[Address(RVA = "0x3FB9BCC", Offset = "0x3FB9BCC", VA = "0x3FB9BCC")]
			set
			{
			}
		}

		[Token(Token = "0x170000C7")]
		public Spline.Type type
		{
			[Token(Token = "0x600083E")]
			[Address(RVA = "0x3FBD5F0", Offset = "0x3FBD5F0", VA = "0x3FBD5F0")]
			get
			{
				return default(Spline.Type);
			}
			[Token(Token = "0x600083F")]
			[Address(RVA = "0x3FBD86C", Offset = "0x3FBD86C", VA = "0x3FBD86C")]
			set
			{
			}
		}

		[Token(Token = "0x170000C8")]
		public bool linearAverageDirection
		{
			[Token(Token = "0x6000840")]
			[Address(RVA = "0x3FBDD60", Offset = "0x3FBDD60", VA = "0x3FBDD60")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000841")]
			[Address(RVA = "0x3FBDFF0", Offset = "0x3FBDFF0", VA = "0x3FBDFF0")]
			set
			{
			}
		}

		[Token(Token = "0x170000C9")]
		public bool is2D
		{
			[Token(Token = "0x6000842")]
			[Address(RVA = "0x3FBE4EC", Offset = "0x3FBE4EC", VA = "0x3FBE4EC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000843")]
			[Address(RVA = "0x3FBE768", Offset = "0x3FBE768", VA = "0x3FBE768")]
			set
			{
			}
		}

		[Token(Token = "0x170000CA")]
		public int sampleRate
		{
			[Token(Token = "0x6000844")]
			[Address(RVA = "0x3FBECBC", Offset = "0x3FBECBC", VA = "0x3FBECBC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000845")]
			[Address(RVA = "0x3FBEF38", Offset = "0x3FBEF38", VA = "0x3FBEF38")]
			set
			{
			}
		}

		[Token(Token = "0x170000CB")]
		public float optimizeAngleThreshold
		{
			[Token(Token = "0x6000846")]
			[Address(RVA = "0x3FBF54C", Offset = "0x3FBF54C", VA = "0x3FBF54C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000847")]
			[Address(RVA = "0x3FBF7C8", Offset = "0x3FBF7C8", VA = "0x3FBF7C8")]
			set
			{
			}
		}

		[Token(Token = "0x170000CC")]
		public SampleMode sampleMode
		{
			[Token(Token = "0x6000848")]
			[Address(RVA = "0x3FBFF30", Offset = "0x3FBFF30", VA = "0x3FBFF30")]
			get
			{
				return default(SampleMode);
			}
			[Token(Token = "0x6000849")]
			[Address(RVA = "0x3FC019C", Offset = "0x3FC019C", VA = "0x3FC019C")]
			set
			{
			}
		}

		[Token(Token = "0x170000CD")]
		public AnimationCurve customValueInterpolation
		{
			[Token(Token = "0x600084A")]
			[Address(RVA = "0x3FC0670", Offset = "0x3FC0670", VA = "0x3FC0670")]
			get
			{
				return null;
			}
			[Token(Token = "0x600084B")]
			[Address(RVA = "0x3FC08EC", Offset = "0x3FC08EC", VA = "0x3FC08EC")]
			set
			{
			}
		}

		[Token(Token = "0x170000CE")]
		public AnimationCurve customNormalInterpolation
		{
			[Token(Token = "0x600084C")]
			[Address(RVA = "0x3FC0C48", Offset = "0x3FC0C48", VA = "0x3FC0C48")]
			get
			{
				return null;
			}
			[Token(Token = "0x600084D")]
			[Address(RVA = "0x3FC0EC4", Offset = "0x3FC0EC4", VA = "0x3FC0EC4")]
			set
			{
			}
		}

		[Token(Token = "0x170000CF")]
		public int iterations
		{
			[Token(Token = "0x600084E")]
			[Address(RVA = "0x3FC1220", Offset = "0x3FC1220", VA = "0x3FC1220")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000D0")]
		public double moveStep
		{
			[Token(Token = "0x600084F")]
			[Address(RVA = "0x3FA6104", Offset = "0x3FA6104", VA = "0x3FA6104")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x170000D1")]
		public bool isClosed
		{
			[Token(Token = "0x6000850")]
			[Address(RVA = "0x3FC1510", Offset = "0x3FC1510", VA = "0x3FC1510")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000D2")]
		public int pointCount
		{
			[Token(Token = "0x6000851")]
			[Address(RVA = "0x3FA5260", Offset = "0x3FA5260", VA = "0x3FA5260")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000D3")]
		public SplineSample[] samples
		{
			[Token(Token = "0x6000852")]
			[Address(RVA = "0x3FC1804", Offset = "0x3FC1804", VA = "0x3FC1804")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D4")]
		public int sampleCount
		{
			[Token(Token = "0x6000853")]
			[Address(RVA = "0x3FC1A80", Offset = "0x3FC1A80", VA = "0x3FC1A80")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000D5")]
		public SplineSample[] rawSamples
		{
			[Token(Token = "0x6000854")]
			[Address(RVA = "0x3FC1CEC", Offset = "0x3FC1CEC", VA = "0x3FC1CEC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D6")]
		public Vector3 position
		{
			[Token(Token = "0x6000855")]
			[Address(RVA = "0x3FC1F58", Offset = "0x3FC1F58", VA = "0x3FC1F58")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170000D7")]
		public Quaternion rotation
		{
			[Token(Token = "0x6000856")]
			[Address(RVA = "0x3FC21EC", Offset = "0x3FC21EC", VA = "0x3FC21EC")]
			get
			{
				return default(Quaternion);
			}
		}

		[Token(Token = "0x170000D8")]
		public Vector3 scale
		{
			[Token(Token = "0x6000857")]
			[Address(RVA = "0x3FC2488", Offset = "0x3FC2488", VA = "0x3FC2488")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170000D9")]
		public int subscriberCount
		{
			[Token(Token = "0x6000858")]
			[Address(RVA = "0x3FC271C", Offset = "0x3FC271C", VA = "0x3FC271C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000DA")]
		public Transform trs
		{
			[Token(Token = "0x6000859")]
			[Address(RVA = "0x3FC2998", Offset = "0x3FC2998", VA = "0x3FC2998")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000DB")]
		private bool useMultithreading
		{
			[Token(Token = "0x600085C")]
			[Address(RVA = "0x3FC3128", Offset = "0x3FC3128", VA = "0x3FC3128")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x14000021")]
		public event EmptySplineHandler onRebuild
		{
			[Token(Token = "0x600085A")]
			[Address(RVA = "0x3FC2E50", Offset = "0x3FC2E50", VA = "0x3FC2E50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD02A9C", Offset = "0xD02A9C")]
			add
			{
			}
			[Token(Token = "0x600085B")]
			[Address(RVA = "0x3FC2FBC", Offset = "0x3FC2FBC", VA = "0x3FC2FBC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD02AAC", Offset = "0xD02AAC")]
			remove
			{
			}
		}

		[Token(Token = "0x600085D")]
		[Address(RVA = "0x3FC33A4", Offset = "0x3FC33A4", VA = "0x3FC33A4")]
		private void Awake()
		{
		}

		[Token(Token = "0x600085E")]
		[Address(RVA = "0x3FC4ADC", Offset = "0x3FC4ADC", VA = "0x3FC4ADC")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x600085F")]
		[Address(RVA = "0x3FC6BC4", Offset = "0x3FC6BC4", VA = "0x3FC6BC4")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000860")]
		[Address(RVA = "0x3FC6F60", Offset = "0x3FC6F60", VA = "0x3FC6F60")]
		private void Update()
		{
		}

		[Token(Token = "0x6000861")]
		[Address(RVA = "0x3FC4E78", Offset = "0x3FC4E78", VA = "0x3FC4E78")]
		private void RunUpdate()
		{
		}

		[Token(Token = "0x6000862")]
		[Address(RVA = "0x3FD0E04", Offset = "0x3FD0E04", VA = "0x3FD0E04")]
		private void TransformSamplesThreaded()
		{
		}

		[Token(Token = "0x6000863")]
		[Address(RVA = "0x3FD10E0", Offset = "0x3FD10E0", VA = "0x3FD10E0")]
		private void CalculateAndTransformSamples()
		{
		}

		[Token(Token = "0x6000864")]
		[Address(RVA = "0x3FC72FC", Offset = "0x3FC72FC", VA = "0x3FC72FC")]
		private bool TransformHasChanged()
		{
			return default(bool);
		}

		[Token(Token = "0x6000865")]
		[Address(RVA = "0x3FD1484", Offset = "0x3FD1484", VA = "0x3FD1484")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000866")]
		[Address(RVA = "0x3FD1930", Offset = "0x3FD1930", VA = "0x3FD1930")]
		public void GetSamples(SampleCollection collection)
		{
		}

		[Token(Token = "0x6000867")]
		[Address(RVA = "0x3FC3EBC", Offset = "0x3FC3EBC", VA = "0x3FC3EBC")]
		public void ResampleTransform()
		{
		}

		[Token(Token = "0x6000868")]
		[Address(RVA = "0x3FD1CD0", Offset = "0x3FD1CD0", VA = "0x3FD1CD0")]
		public void Subscribe(SplineUser input)
		{
		}

		[Token(Token = "0x6000869")]
		[Address(RVA = "0x3FD2910", Offset = "0x3FD2910", VA = "0x3FD2910")]
		public void Unsubscribe(SplineUser input)
		{
		}

		[Token(Token = "0x600086A")]
		[Address(RVA = "0x3FD218C", Offset = "0x3FD218C", VA = "0x3FD218C")]
		public bool IsSubscribed(SplineUser user)
		{
			return default(bool);
		}

		[Token(Token = "0x600086B")]
		[Address(RVA = "0x3FD3110", Offset = "0x3FD3110", VA = "0x3FD3110")]
		public SplineUser[] GetSubscribers()
		{
			return null;
		}

		[Token(Token = "0x600086C")]
		[Address(RVA = "0x3FBA78C", Offset = "0x3FBA78C", VA = "0x3FBA78C")]
		public SplinePoint[] GetPoints(Space getSpace = Space.World)
		{
			return null;
		}

		[Token(Token = "0x600086D")]
		[Address(RVA = "0x3FD3B38", Offset = "0x3FD3B38", VA = "0x3FD3B38")]
		public SplinePoint GetPoint(int index, Space getSpace = Space.World)
		{
			return default(SplinePoint);
		}

		[Token(Token = "0x600086E")]
		[Address(RVA = "0x3FD45A0", Offset = "0x3FD45A0", VA = "0x3FD45A0")]
		public Vector3 GetPointPosition(int index, Space getSpace = Space.World)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600086F")]
		[Address(RVA = "0x3FD4AA0", Offset = "0x3FD4AA0", VA = "0x3FD4AA0")]
		public Vector3 GetPointNormal(int index, Space getSpace = Space.World)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000870")]
		[Address(RVA = "0x3FD5034", Offset = "0x3FD5034", VA = "0x3FD5034")]
		public Vector3 GetPointTangent(int index, Space getSpace = Space.World)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000871")]
		[Address(RVA = "0x3FD5534", Offset = "0x3FD5534", VA = "0x3FD5534")]
		public Vector3 GetPointTangent2(int index, Space getSpace = Space.World)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000872")]
		[Address(RVA = "0x3FD5A34", Offset = "0x3FD5A34", VA = "0x3FD5A34")]
		public float GetPointSize(int index, Space getSpace = Space.World)
		{
			return default(float);
		}

		[Token(Token = "0x6000873")]
		[Address(RVA = "0x3FD5D18", Offset = "0x3FD5D18", VA = "0x3FD5D18")]
		public Color GetPointColor(int index, Space getSpace = Space.World)
		{
			return default(Color);
		}

		[Token(Token = "0x6000874")]
		[Address(RVA = "0x3FD6014", Offset = "0x3FD6014", VA = "0x3FD6014")]
		private void Make2D(ref SplinePoint point)
		{
		}

		[Token(Token = "0x6000875")]
		[Address(RVA = "0x3FBB528", Offset = "0x3FBB528", VA = "0x3FBB528")]
		public void SetPoints(SplinePoint[] points, Space setSpace = Space.World)
		{
		}

		[Token(Token = "0x6000876")]
		[Address(RVA = "0x3FD8C28", Offset = "0x3FD8C28", VA = "0x3FD8C28")]
		public void SetPointPosition(int index, Vector3 pos, Space setSpace = Space.World)
		{
		}

		[Token(Token = "0x6000877")]
		[Address(RVA = "0x3FDA6C4", Offset = "0x3FDA6C4", VA = "0x3FDA6C4")]
		public void SetPointTangents(int index, Vector3 tan1, Vector3 tan2, Space setSpace = Space.World)
		{
		}

		[Token(Token = "0x6000878")]
		[Address(RVA = "0x3FDBED4", Offset = "0x3FDBED4", VA = "0x3FDBED4")]
		public void SetPointNormal(int index, Vector3 nrm, Space setSpace = Space.World)
		{
		}

		[Token(Token = "0x6000879")]
		[Address(RVA = "0x3FDCE3C", Offset = "0x3FDCE3C", VA = "0x3FDCE3C")]
		public void SetPointSize(int index, float size)
		{
		}

		[Token(Token = "0x600087A")]
		[Address(RVA = "0x3FDD8CC", Offset = "0x3FDD8CC", VA = "0x3FDD8CC")]
		public void SetPointColor(int index, Color color)
		{
		}

		[Token(Token = "0x600087B")]
		[Address(RVA = "0x3FDE3D4", Offset = "0x3FDE3D4", VA = "0x3FDE3D4")]
		public void SetPoint(int index, SplinePoint point, Space setSpace = Space.World)
		{
		}

		[Token(Token = "0x600087C")]
		[Address(RVA = "0x3FD99C0", Offset = "0x3FD99C0", VA = "0x3FD99C0")]
		private void AppendPoints(int count)
		{
		}

		[Token(Token = "0x600087D")]
		[Address(RVA = "0x3FDF738", Offset = "0x3FDF738", VA = "0x3FDF738")]
		public double GetPointPercent(int pointIndex)
		{
			return default(double);
		}

		[Token(Token = "0x600087E")]
		[Address(RVA = "0x3FE0428", Offset = "0x3FE0428", VA = "0x3FE0428")]
		public int PercentToPointIndex(double percent, Spline.Direction direction = Spline.Direction.Forward)
		{
			return default(int);
		}

		[Token(Token = "0x600087F")]
		[Address(RVA = "0x3FAAEA8", Offset = "0x3FAAEA8", VA = "0x3FAAEA8")]
		public Vector3 EvaluatePosition(double percent)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000880")]
		[Address(RVA = "0x3FE188C", Offset = "0x3FE188C", VA = "0x3FE188C")]
		public Vector3 EvaluatePosition(double percent, EvaluateMode mode = EvaluateMode.Cached)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000881")]
		[Address(RVA = "0x3FE1E08", Offset = "0x3FE1E08", VA = "0x3FE1E08")]
		public Vector3 EvaluatePosition(int pointIndex, EvaluateMode mode = EvaluateMode.Cached)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000882")]
		[Address(RVA = "0x3FE219C", Offset = "0x3FE219C", VA = "0x3FE219C")]
		public SplineSample Evaluate(double percent)
		{
			return null;
		}

		[Token(Token = "0x6000883")]
		[Address(RVA = "0x3FE2490", Offset = "0x3FE2490", VA = "0x3FE2490")]
		public SplineSample Evaluate(double percent, EvaluateMode mode = EvaluateMode.Cached)
		{
			return null;
		}

		[Token(Token = "0x6000884")]
		[Address(RVA = "0x3FE2F20", Offset = "0x3FE2F20", VA = "0x3FE2F20")]
		public SplineSample Evaluate(int pointIndex)
		{
			return null;
		}

		[Token(Token = "0x6000885")]
		[Address(RVA = "0x3FE335C", Offset = "0x3FE335C", VA = "0x3FE335C")]
		public void Evaluate(int pointIndex, SplineSample result)
		{
		}

		[Token(Token = "0x6000886")]
		[Address(RVA = "0x3FE36DC", Offset = "0x3FE36DC", VA = "0x3FE36DC")]
		public void Evaluate(double percent, SplineSample result)
		{
		}

		[Token(Token = "0x6000887")]
		[Address(RVA = "0x3FE28E0", Offset = "0x3FE28E0", VA = "0x3FE28E0")]
		public void Evaluate(double percent, SplineSample result, EvaluateMode mode = EvaluateMode.Cached)
		{
		}

		[Token(Token = "0x6000888")]
		[Address(RVA = "0x3FE4234", Offset = "0x3FE4234", VA = "0x3FE4234")]
		public void Evaluate(ref SplineSample[] results, double from = 0.0, double to = 1.0)
		{
		}

		[Token(Token = "0x6000889")]
		[Address(RVA = "0x3FE4548", Offset = "0x3FE4548", VA = "0x3FE4548")]
		public void EvaluatePositions(ref Vector3[] positions, double from = 0.0, double to = 1.0)
		{
		}

		[Token(Token = "0x600088A")]
		[Address(RVA = "0x3FE485C", Offset = "0x3FE485C", VA = "0x3FE485C")]
		public double Travel(double start, float distance, out float moved, Spline.Direction direction = Spline.Direction.Forward)
		{
			return default(double);
		}

		[Token(Token = "0x600088B")]
		[Address(RVA = "0x3FE4BA4", Offset = "0x3FE4BA4", VA = "0x3FE4BA4")]
		public double Travel(double start, float distance, Spline.Direction direction = Spline.Direction.Forward)
		{
			return default(double);
		}

		[Token(Token = "0x600088C")]
		[Address(RVA = "0x3FE4ED4", Offset = "0x3FE4ED4", VA = "0x3FE4ED4")]
		public void Project(SplineSample result, Vector3 position, double from = 0.0, double to = 1.0, EvaluateMode mode = EvaluateMode.Cached, int subdivisions = 4)
		{
		}

		[Token(Token = "0x600088D")]
		[Address(RVA = "0x3FE57C0", Offset = "0x3FE57C0", VA = "0x3FE57C0")]
		public SplineSample Project(Vector3 point, double from = 0.0, double to = 1.0)
		{
			return null;
		}

		[Token(Token = "0x600088E")]
		[Address(RVA = "0x3FAFC3C", Offset = "0x3FAFC3C", VA = "0x3FAFC3C")]
		public float CalculateLength(double from = 0.0, double to = 1.0)
		{
			return default(float);
		}

		[Token(Token = "0x600088F")]
		[Address(RVA = "0x3FE39DC", Offset = "0x3FE39DC", VA = "0x3FE39DC")]
		private void TransformResult(SplineSample result)
		{
		}

		[Token(Token = "0x6000890")]
		[Address(RVA = "0x3FBD0C0", Offset = "0x3FBD0C0", VA = "0x3FBD0C0")]
		public void Rebuild(bool forceUpdateAll = false)
		{
		}

		[Token(Token = "0x6000891")]
		[Address(RVA = "0x3FC380C", Offset = "0x3FC380C", VA = "0x3FC380C")]
		public void RebuildImmediate(bool calculateSamples = true, bool forceUpdateAll = false)
		{
		}

		[Token(Token = "0x6000892")]
		[Address(RVA = "0x3FC9384", Offset = "0x3FC9384", VA = "0x3FC9384")]
		private void RebuildUsers()
		{
		}

		[Token(Token = "0x6000893")]
		[Address(RVA = "0x3FE5C24", Offset = "0x3FE5C24", VA = "0x3FE5C24")]
		private void UnsetPointsDirty()
		{
		}

		[Token(Token = "0x6000894")]
		[Address(RVA = "0x3FD06F0", Offset = "0x3FD06F0", VA = "0x3FD06F0")]
		private void SetPointsDirty()
		{
		}

		[Token(Token = "0x6000895")]
		[Address(RVA = "0x3FD6D98", Offset = "0x3FD6D98", VA = "0x3FD6D98")]
		private void SetDirty(int index)
		{
		}

		[Token(Token = "0x6000896")]
		[Address(RVA = "0x3FCA4F0", Offset = "0x3FCA4F0", VA = "0x3FCA4F0")]
		private void CalculateSamples()
		{
		}

		[Token(Token = "0x6000897")]
		[Address(RVA = "0x3FCCA3C", Offset = "0x3FCCA3C", VA = "0x3FCCA3C")]
		private void TransformSamples(bool forceTransformAll = false)
		{
		}

		[Token(Token = "0x6000898")]
		[Address(RVA = "0x3FE9134", Offset = "0x3FE9134", VA = "0x3FE9134")]
		private void OptimizeSamples()
		{
		}

		[Token(Token = "0x6000899")]
		[Address(RVA = "0x3FE627C", Offset = "0x3FE627C", VA = "0x3FE627C")]
		private bool IsDirtyBezier(double samplePercent)
		{
			return default(bool);
		}

		[Token(Token = "0x600089A")]
		[Address(RVA = "0x3FE7498", Offset = "0x3FE7498", VA = "0x3FE7498")]
		private bool IsDirtyHermite(double samplePercent)
		{
			return default(bool);
		}

		[Token(Token = "0x600089B")]
		[Address(RVA = "0x3FD6474", Offset = "0x3FD6474", VA = "0x3FD6474")]
		public void Break()
		{
		}

		[Token(Token = "0x600089C")]
		[Address(RVA = "0x3FEAD04", Offset = "0x3FEAD04", VA = "0x3FEAD04")]
		public void Break(int at)
		{
		}

		[Token(Token = "0x600089D")]
		[Address(RVA = "0x3FEB700", Offset = "0x3FEB700", VA = "0x3FEB700")]
		public void Close()
		{
		}

		[Token(Token = "0x600089E")]
		[Address(RVA = "0x3FEBEB0", Offset = "0x3FEBEB0", VA = "0x3FEBEB0")]
		public void CatToBezierTangents()
		{
		}

		[Token(Token = "0x600089F")]
		[Address(RVA = "0x3FEC284", Offset = "0x3FEC284", VA = "0x3FEC284")]
		public bool Raycast(out RaycastHit hit, out double hitPercent, LayerMask layerMask, double resolution = 1.0, double from = 0.0, double to = 1.0, QueryTriggerInteraction hitTriggers = QueryTriggerInteraction.UseGlobal)
		{
			return default(bool);
		}

		[Token(Token = "0x60008A0")]
		[Address(RVA = "0x3FED56C", Offset = "0x3FED56C", VA = "0x3FED56C")]
		public bool RaycastAll(out RaycastHit[] hits, out double[] hitPercents, LayerMask layerMask, double resolution = 1.0, double from = 0.0, double to = 1.0, QueryTriggerInteraction hitTriggers = QueryTriggerInteraction.UseGlobal)
		{
			return default(bool);
		}

		[Token(Token = "0x60008A1")]
		[Address(RVA = "0x3FEF180", Offset = "0x3FEF180", VA = "0x3FEF180")]
		public void CheckTriggers(double start, double end, [Optional] SplineUser user)
		{
		}

		[Token(Token = "0x60008A2")]
		[Address(RVA = "0x3FEF79C", Offset = "0x3FEF79C", VA = "0x3FEF79C")]
		public void CheckTriggers(int group, double start, double end)
		{
		}

		[Token(Token = "0x60008A3")]
		[Address(RVA = "0x3FEFE14", Offset = "0x3FEFE14", VA = "0x3FEFE14")]
		public void ResetTriggers()
		{
		}

		[Token(Token = "0x60008A4")]
		[Address(RVA = "0x3FF0354", Offset = "0x3FF0354", VA = "0x3FF0354")]
		public void ResetTriggers(int group)
		{
		}

		[Token(Token = "0x60008A5")]
		[Address(RVA = "0x3FF0CF4", Offset = "0x3FF0CF4", VA = "0x3FF0CF4")]
		public List<Node.Connection> GetJunctions(int pointIndex)
		{
			return null;
		}

		[Token(Token = "0x60008A6")]
		[Address(RVA = "0x3FF1F74", Offset = "0x3FF1F74", VA = "0x3FF1F74")]
		public Dictionary<int, List<Node.Connection>> GetJunctions(double start = 0.0, double end = 1.0)
		{
			return null;
		}

		[Token(Token = "0x60008A7")]
		[Address(RVA = "0x3FF329C", Offset = "0x3FF329C", VA = "0x3FF329C")]
		public void ConnectNode(Node node, int pointIndex)
		{
		}

		[Token(Token = "0x60008A8")]
		[Address(RVA = "0x3FF557C", Offset = "0x3FF557C", VA = "0x3FF557C")]
		public void DisconnectNode(int pointIndex)
		{
		}

		[Token(Token = "0x60008A9")]
		[Address(RVA = "0x3FF4FE4", Offset = "0x3FF4FE4", VA = "0x3FF4FE4")]
		private void AddNodeLink(Node node, int pointIndex)
		{
		}

		[Token(Token = "0x60008AA")]
		[Address(RVA = "0x3FF60C4", Offset = "0x3FF60C4", VA = "0x3FF60C4")]
		public Dictionary<int, Node> GetNodes(double start = 0.0, double end = 1.0)
		{
			return null;
		}

		[Token(Token = "0x60008AB")]
		[Address(RVA = "0x3FF736C", Offset = "0x3FF736C", VA = "0x3FF736C")]
		public Node GetNode(int pointIndex)
		{
			return null;
		}

		[Token(Token = "0x60008AC")]
		[Address(RVA = "0x3FF7BEC", Offset = "0x3FF7BEC", VA = "0x3FF7BEC")]
		public void TransferNode(int pointIndex, int newPointIndex)
		{
		}

		[Token(Token = "0x60008AD")]
		[Address(RVA = "0x3FF8BE4", Offset = "0x3FF8BE4", VA = "0x3FF8BE4")]
		public void ShiftNodes(int startIndex, int endIndex, int shift)
		{
		}

		[Token(Token = "0x60008AE")]
		[Address(RVA = "0x3FF9BB4", Offset = "0x3FF9BB4", VA = "0x3FF9BB4")]
		public void GetConnectedComputers(List<SplineComputer> computers, List<int> connectionIndices, List<int> connectedIndices, double percent, Spline.Direction direction, bool includeEqual)
		{
		}

		[Token(Token = "0x60008AF")]
		[Address(RVA = "0x3FFBAF8", Offset = "0x3FFBAF8", VA = "0x3FFBAF8")]
		public List<SplineComputer> GetConnectedComputers()
		{
			return null;
		}

		[Token(Token = "0x60008B0")]
		[Address(RVA = "0x3FE1578", Offset = "0x3FE1578", VA = "0x3FE1578")]
		public void GetSamplingValues(double percent, out int index, out double lerp)
		{
		}

		[Token(Token = "0x60008B1")]
		[Address(RVA = "0x3FFC134", Offset = "0x3FFC134", VA = "0x3FFC134")]
		private void GetConnectedComputers(ref List<SplineComputer> computers)
		{
		}

		[Token(Token = "0x60008B2")]
		[Address(RVA = "0x3FFDCB4", Offset = "0x3FFDCB4", VA = "0x3FFDCB4")]
		private void RemoveNodeLinkAt(int index)
		{
		}

		[Token(Token = "0x60008B3")]
		[Address(RVA = "0x3FD9ED0", Offset = "0x3FD9ED0", VA = "0x3FD9ED0")]
		private void SetNodeForPoint(int index, SplinePoint worldPoint)
		{
		}

		[Token(Token = "0x60008B4")]
		[Address(RVA = "0x3FD74C4", Offset = "0x3FD74C4", VA = "0x3FD74C4")]
		private void UpdateConnectedNodes(SplinePoint[] worldPoints)
		{
		}

		[Token(Token = "0x60008B5")]
		[Address(RVA = "0x3FC7AE4", Offset = "0x3FC7AE4", VA = "0x3FC7AE4")]
		private void UpdateConnectedNodes()
		{
		}

		[Token(Token = "0x60008B6")]
		[Address(RVA = "0x3FD34F0", Offset = "0x3FD34F0", VA = "0x3FD34F0")]
		public Vector3 TransformPoint(Vector3 point)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60008B7")]
		[Address(RVA = "0x3FD6750", Offset = "0x3FD6750", VA = "0x3FD6750")]
		public Vector3 InverseTransformPoint(Vector3 point)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60008B8")]
		[Address(RVA = "0x3FD3814", Offset = "0x3FD3814", VA = "0x3FD3814")]
		public Vector3 TransformDirection(Vector3 direction)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60008B9")]
		[Address(RVA = "0x3FD6A74", Offset = "0x3FD6A74", VA = "0x3FD6A74")]
		public Vector3 InverseTransformDirection(Vector3 direction)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60008BA")]
		[Address(RVA = "0x3FFE63C", Offset = "0x3FFE63C", VA = "0x3FFE63C")]
		public SplineComputer()
		{
		}
	}
	[Token(Token = "0x2000131")]
	public delegate void SplineReachHandler();
	[Token(Token = "0x2000132")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xCF9414", Offset = "0xCF9414")]
	public class SplineFollower : SplineTracer
	{
		[Token(Token = "0x20001E7")]
		public enum FollowMode
		{
			[Token(Token = "0x400092F")]
			Uniform,
			[Token(Token = "0x4000930")]
			Time
		}

		[Token(Token = "0x20001E8")]
		public enum Wrap
		{
			[Token(Token = "0x4000932")]
			Default,
			[Token(Token = "0x4000933")]
			Loop,
			[Token(Token = "0x4000934")]
			PingPong
		}

		[Token(Token = "0x40005C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[HideInInspector]
		public Wrap wrapMode;

		[Token(Token = "0x40005C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		[HideInInspector]
		public FollowMode followMode;

		[Token(Token = "0x40005C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[HideInInspector]
		public bool autoStartPosition;

		[Token(Token = "0x40005C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x131")]
		[HideInInspector]
		public bool follow;

		[Token(Token = "0x40005C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x132")]
		[HideInInspector]
		public bool preserveUniformSpeedWithOffset;

		[Token(Token = "0x40005CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[SerializeField]
		[HideInInspector]
		private float _followSpeed;

		[Token(Token = "0x40005CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
		[SerializeField]
		[HideInInspector]
		private float _followDuration;

		[Token(Token = "0x40005CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[SerializeField]
		[HideInInspector]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCFE6F0", Offset = "0xCFE6F0")]
		private double _startPosition;

		[Token(Token = "0x40005CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private double lastClippedPercent;

		[Token(Token = "0x40005CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private bool followStarted;

		[Token(Token = "0x170000DC")]
		public float followSpeed
		{
			[Token(Token = "0x60008BF")]
			[Address(RVA = "0x4007A14", Offset = "0x4007A14", VA = "0x4007A14")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60008C0")]
			[Address(RVA = "0x4007C90", Offset = "0x4007C90", VA = "0x4007C90")]
			set
			{
			}
		}

		[Token(Token = "0x170000DD")]
		public double startPosition
		{
			[Token(Token = "0x60008C1")]
			[Address(RVA = "0x40081AC", Offset = "0x40081AC", VA = "0x40081AC")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x60008C2")]
			[Address(RVA = "0x4008428", Offset = "0x4008428", VA = "0x4008428")]
			set
			{
			}
		}

		[Token(Token = "0x170000DE")]
		public float followDuration
		{
			[Token(Token = "0x60008C3")]
			[Address(RVA = "0x4008A44", Offset = "0x4008A44", VA = "0x4008A44")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60008C4")]
			[Address(RVA = "0x4008CC0", Offset = "0x4008CC0", VA = "0x4008CC0")]
			set
			{
			}
		}

		[Token(Token = "0x14000022")]
		public event Action<double> onEndReached
		{
			[Token(Token = "0x60008C5")]
			[Address(RVA = "0x40091E4", Offset = "0x40091E4", VA = "0x40091E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD02ABC", Offset = "0xD02ABC")]
			add
			{
			}
			[Token(Token = "0x60008C6")]
			[Address(RVA = "0x4009350", Offset = "0x4009350", VA = "0x4009350")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD02ACC", Offset = "0xD02ACC")]
			remove
			{
			}
		}

		[Token(Token = "0x14000023")]
		public event Action<double> onBeginningReached
		{
			[Token(Token = "0x60008C7")]
			[Address(RVA = "0x40094BC", Offset = "0x40094BC", VA = "0x40094BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD02ADC", Offset = "0xD02ADC")]
			add
			{
			}
			[Token(Token = "0x60008C8")]
			[Address(RVA = "0x4009628", Offset = "0x4009628", VA = "0x4009628")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD02AEC", Offset = "0xD02AEC")]
			remove
			{
			}
		}

		[Token(Token = "0x60008C9")]
		[Address(RVA = "0x4009794", Offset = "0x4009794", VA = "0x4009794", Slot = "20")]
		protected override void Start()
		{
		}

		[Token(Token = "0x60008CA")]
		[Address(RVA = "0x4009E58", Offset = "0x4009E58", VA = "0x4009E58", Slot = "15")]
		protected override void LateRun()
		{
		}

		[Token(Token = "0x60008CB")]
		[Address(RVA = "0x400B1A4", Offset = "0x400B1A4", VA = "0x400B1A4", Slot = "17")]
		protected override void PostBuild()
		{
		}

		[Token(Token = "0x60008CC")]
		[Address(RVA = "0x400A2BC", Offset = "0x400A2BC", VA = "0x400A2BC")]
		private void Follow()
		{
		}

		[Token(Token = "0x60008CD")]
		[Address(RVA = "0x4010E2C", Offset = "0x4010E2C", VA = "0x4010E2C")]
		public void Restart(double startPosition = 0.0)
		{
		}

		[Token(Token = "0x60008CE")]
		[Address(RVA = "0x401118C", Offset = "0x401118C", VA = "0x401118C", Slot = "21")]
		public override void SetPercent(double percent, bool checkTriggers = false, bool handleJuncitons = false)
		{
		}

		[Token(Token = "0x60008CF")]
		[Address(RVA = "0x401150C", Offset = "0x401150C", VA = "0x401150C", Slot = "22")]
		public override void SetDistance(float distance, bool checkTriggers = false, bool handleJuncitons = false)
		{
		}

		[Token(Token = "0x60008D0")]
		[Address(RVA = "0x400E2C0", Offset = "0x400E2C0", VA = "0x400E2C0")]
		public void Move(double percent)
		{
		}

		[Token(Token = "0x60008D1")]
		[Address(RVA = "0x400B884", Offset = "0x400B884", VA = "0x400B884")]
		public void Move(float distance)
		{
		}

		[Token(Token = "0x60008D2")]
		[Address(RVA = "0x4011BD4", Offset = "0x4011BD4", VA = "0x4011BD4", Slot = "26")]
		protected virtual double DoTravel(double start, float distance, out float moved)
		{
			return default(double);
		}

		[Token(Token = "0x60008D3")]
		[Address(RVA = "0x4012520", Offset = "0x4012520", VA = "0x4012520")]
		public SplineFollower()
		{
		}
	}
	[Token(Token = "0x2000133")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xCF944C", Offset = "0xCF944C")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xCF944C", Offset = "0xCF944C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xCF944C", Offset = "0xCF944C")]
	public class SplineMesh : MeshGenerator
	{
		[Serializable]
		[Token(Token = "0x20001E9")]
		public class Channel
		{
			[Token(Token = "0x200024E")]
			public delegate float FloatHandler(double percent);

			[Token(Token = "0x200024F")]
			public delegate Vector2 Vector2Handler(double percent);

			[Token(Token = "0x2000250")]
			public delegate Vector3 Vector3Handler(double percent);

			[Token(Token = "0x2000251")]
			public delegate Quaternion QuaternionHandler(double percent);

			[Token(Token = "0x2000252")]
			public enum Type
			{
				[Token(Token = "0x4000A3D")]
				Extrude,
				[Token(Token = "0x4000A3E")]
				Place
			}

			[Token(Token = "0x2000253")]
			public enum UVOverride
			{
				[Token(Token = "0x4000A40")]
				None,
				[Token(Token = "0x4000A41")]
				ClampU,
				[Token(Token = "0x4000A42")]
				ClampV,
				[Token(Token = "0x4000A43")]
				UniformU,
				[Token(Token = "0x4000A44")]
				UniformV
			}

			[Serializable]
			[Token(Token = "0x2000254")]
			public class MeshDefinition
			{
				[Token(Token = "0x2000259")]
				public enum MirrorMethod
				{
					[Token(Token = "0x4000A68")]
					None,
					[Token(Token = "0x4000A69")]
					X,
					[Token(Token = "0x4000A6A")]
					Y,
					[Token(Token = "0x4000A6B")]
					Z
				}

				[Serializable]
				[Token(Token = "0x200025A")]
				public class Submesh
				{
					[Token(Token = "0x4000A6C")]
					[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
					public int[] triangles;

					[Token(Token = "0x6000EEF")]
					[Address(RVA = "0x44B01F0", Offset = "0x44B01F0", VA = "0x44B01F0")]
					public Submesh()
					{
					}

					[Token(Token = "0x6000EF0")]
					[Address(RVA = "0x44A05B4", Offset = "0x44A05B4", VA = "0x44A05B4")]
					public Submesh(int[] input)
					{
					}
				}

				[Serializable]
				[Token(Token = "0x200025B")]
				public class VertexGroup
				{
					[Token(Token = "0x4000A6D")]
					[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
					public float value;

					[Token(Token = "0x4000A6E")]
					[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
					public double percent;

					[Token(Token = "0x4000A6F")]
					[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
					public int[] ids;

					[Token(Token = "0x6000EF1")]
					[Address(RVA = "0x44AF854", Offset = "0x44AF854", VA = "0x44AF854")]
					public VertexGroup(float val, double perc, int[] vertIds)
					{
					}

					[Token(Token = "0x6000EF2")]
					[Address(RVA = "0x44AFD4C", Offset = "0x44AFD4C", VA = "0x44AFD4C")]
					public void AddId(int id)
					{
					}
				}

				[Token(Token = "0x4000A45")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				[SerializeField]
				[HideInInspector]
				internal Vector3[] vertices;

				[Token(Token = "0x4000A46")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				[SerializeField]
				[HideInInspector]
				internal Vector3[] normals;

				[Token(Token = "0x4000A47")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				[SerializeField]
				[HideInInspector]
				internal Vector4[] tangents;

				[Token(Token = "0x4000A48")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
				[SerializeField]
				[HideInInspector]
				internal Color[] colors;

				[Token(Token = "0x4000A49")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
				[SerializeField]
				[HideInInspector]
				internal Vector2[] uv;

				[Token(Token = "0x4000A4A")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
				[SerializeField]
				[HideInInspector]
				internal Vector2[] uv2;

				[Token(Token = "0x4000A4B")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
				[SerializeField]
				[HideInInspector]
				internal Vector2[] uv3;

				[Token(Token = "0x4000A4C")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
				[SerializeField]
				[HideInInspector]
				internal Vector2[] uv4;

				[Token(Token = "0x4000A4D")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
				[SerializeField]
				[HideInInspector]
				internal int[] triangles;

				[Token(Token = "0x4000A4E")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
				[SerializeField]
				[HideInInspector]
				internal List<Submesh> subMeshes;

				[Token(Token = "0x4000A4F")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
				[SerializeField]
				[HideInInspector]
				internal TS_Bounds bounds;

				[Token(Token = "0x4000A50")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
				[SerializeField]
				[HideInInspector]
				internal List<VertexGroup> vertexGroups;

				[Token(Token = "0x4000A51")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
				[SerializeField]
				[HideInInspector]
				private Mesh _mesh;

				[Token(Token = "0x4000A52")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
				[SerializeField]
				[HideInInspector]
				private Vector3 _rotation;

				[Token(Token = "0x4000A53")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
				[SerializeField]
				[HideInInspector]
				private Vector3 _offset;

				[Token(Token = "0x4000A54")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
				[SerializeField]
				[HideInInspector]
				private Vector3 _scale;

				[Token(Token = "0x4000A55")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
				[SerializeField]
				[HideInInspector]
				private Vector2 _uvScale;

				[Token(Token = "0x4000A56")]
				[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
				[SerializeField]
				[HideInInspector]
				private Vector2 _uvOffset;

				[Token(Token = "0x4000A57")]
				[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
				[SerializeField]
				[HideInInspector]
				private float _uvRotation;

				[Token(Token = "0x4000A58")]
				[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
				[SerializeField]
				[HideInInspector]
				private MirrorMethod _mirror;

				[Token(Token = "0x4000A59")]
				[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
				[SerializeField]
				[HideInInspector]
				private float _vertexGroupingMargin;

				[Token(Token = "0x4000A5A")]
				[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
				[SerializeField]
				[HideInInspector]
				private bool _removeInnerFaces;

				[Token(Token = "0x4000A5B")]
				[Il2CppDummyDll.FieldOffset(Offset = "0xB9")]
				[SerializeField]
				[HideInInspector]
				private bool _flipFaces;

				[Token(Token = "0x4000A5C")]
				[Il2CppDummyDll.FieldOffset(Offset = "0xBA")]
				[SerializeField]
				[HideInInspector]
				private bool _doubleSided;

				[Token(Token = "0x170001E6")]
				public Mesh mesh
				{
					[Token(Token = "0x6000EC5")]
					[Address(RVA = "0x449A968", Offset = "0x449A968", VA = "0x449A968")]
					get
					{
						return null;
					}
					[Token(Token = "0x6000EC6")]
					[Address(RVA = "0x449ABD4", Offset = "0x449ABD4", VA = "0x449ABD4")]
					set
					{
					}
				}

				[Token(Token = "0x170001E7")]
				public Vector3 rotation
				{
					[Token(Token = "0x6000EC7")]
					[Address(RVA = "0x449B130", Offset = "0x449B130", VA = "0x449B130")]
					get
					{
						return default(Vector3);
					}
					[Token(Token = "0x6000EC8")]
					[Address(RVA = "0x449B3C0", Offset = "0x449B3C0", VA = "0x449B3C0")]
					set
					{
					}
				}

				[Token(Token = "0x170001E8")]
				public Vector3 offset
				{
					[Token(Token = "0x6000EC9")]
					[Address(RVA = "0x449B9C4", Offset = "0x449B9C4", VA = "0x449B9C4")]
					get
					{
						return default(Vector3);
					}
					[Token(Token = "0x6000ECA")]
					[Address(RVA = "0x449BC54", Offset = "0x449BC54", VA = "0x449BC54")]
					set
					{
					}
				}

				[Token(Token = "0x170001E9")]
				public Vector3 scale
				{
					[Token(Token = "0x6000ECB")]
					[Address(RVA = "0x449C1E4", Offset = "0x449C1E4", VA = "0x449C1E4")]
					get
					{
						return default(Vector3);
					}
					[Token(Token = "0x6000ECC")]
					[Address(RVA = "0x449C474", Offset = "0x449C474", VA = "0x449C474")]
					set
					{
					}
				}

				[Token(Token = "0x170001EA")]
				public Vector2 uvScale
				{
					[Token(Token = "0x6000ECD")]
					[Address(RVA = "0x449CA04", Offset = "0x449CA04", VA = "0x449CA04")]
					get
					{
						return default(Vector2);
					}
					[Token(Token = "0x6000ECE")]
					[Address(RVA = "0x449CC84", Offset = "0x449CC84", VA = "0x449CC84")]
					set
					{
					}
				}

				[Token(Token = "0x170001EB")]
				public Vector2 uvOffset
				{
					[Token(Token = "0x6000ECF")]
					[Address(RVA = "0x449D1F4", Offset = "0x449D1F4", VA = "0x449D1F4")]
					get
					{
						return default(Vector2);
					}
					[Token(Token = "0x6000ED0")]
					[Address(RVA = "0x449D474", Offset = "0x449D474", VA = "0x449D474")]
					set
					{
					}
				}

				[Token(Token = "0x170001EC")]
				public float uvRotation
				{
					[Token(Token = "0x6000ED1")]
					[Address(RVA = "0x449D9E4", Offset = "0x449D9E4", VA = "0x449D9E4")]
					get
					{
						return default(float);
					}
					[Token(Token = "0x6000ED2")]
					[Address(RVA = "0x449DC60", Offset = "0x449DC60", VA = "0x449DC60")]
					set
					{
					}
				}

				[Token(Token = "0x170001ED")]
				public float vertexGroupingMargin
				{
					[Token(Token = "0x6000ED3")]
					[Address(RVA = "0x449E130", Offset = "0x449E130", VA = "0x449E130")]
					get
					{
						return default(float);
					}
					[Token(Token = "0x6000ED4")]
					[Address(RVA = "0x449E3AC", Offset = "0x449E3AC", VA = "0x449E3AC")]
					set
					{
					}
				}

				[Token(Token = "0x170001EE")]
				public MirrorMethod mirror
				{
					[Token(Token = "0x6000ED5")]
					[Address(RVA = "0x449E87C", Offset = "0x449E87C", VA = "0x449E87C")]
					get
					{
						return default(MirrorMethod);
					}
					[Token(Token = "0x6000ED6")]
					[Address(RVA = "0x449EAE8", Offset = "0x449EAE8", VA = "0x449EAE8")]
					set
					{
					}
				}

				[Token(Token = "0x170001EF")]
				public bool removeInnerFaces
				{
					[Token(Token = "0x6000ED7")]
					[Address(RVA = "0x449EFB8", Offset = "0x449EFB8", VA = "0x449EFB8")]
					get
					{
						return default(bool);
					}
					[Token(Token = "0x6000ED8")]
					[Address(RVA = "0x449F234", Offset = "0x449F234", VA = "0x449F234")]
					set
					{
					}
				}

				[Token(Token = "0x170001F0")]
				public bool flipFaces
				{
					[Token(Token = "0x6000ED9")]
					[Address(RVA = "0x449F70C", Offset = "0x449F70C", VA = "0x449F70C")]
					get
					{
						return default(bool);
					}
					[Token(Token = "0x6000EDA")]
					[Address(RVA = "0x449F988", Offset = "0x449F988", VA = "0x449F988")]
					set
					{
					}
				}

				[Token(Token = "0x170001F1")]
				public bool doubleSided
				{
					[Token(Token = "0x6000EDB")]
					[Address(RVA = "0x449FE60", Offset = "0x449FE60", VA = "0x449FE60")]
					get
					{
						return default(bool);
					}
					[Token(Token = "0x6000EDC")]
					[Address(RVA = "0x44A00DC", Offset = "0x44A00DC", VA = "0x44A00DC")]
					set
					{
					}
				}

				[Token(Token = "0x6000EDD")]
				[Address(RVA = "0x4492008", Offset = "0x4492008", VA = "0x4492008")]
				internal MeshDefinition Copy()
				{
					return null;
				}

				[Token(Token = "0x6000EDE")]
				[Address(RVA = "0x448E82C", Offset = "0x448E82C", VA = "0x448E82C")]
				public MeshDefinition(Mesh input)
				{
				}

				[Token(Token = "0x6000EDF")]
				[Address(RVA = "0x4496770", Offset = "0x4496770", VA = "0x4496770")]
				public void Refresh()
				{
				}

				[Token(Token = "0x6000EE0")]
				[Address(RVA = "0x44A762C", Offset = "0x44A762C", VA = "0x44A762C")]
				private void RemoveInnerFaces()
				{
				}

				[Token(Token = "0x6000EE1")]
				[Address(RVA = "0x44A4040", Offset = "0x44A4040", VA = "0x44A4040")]
				private void FlipFaces()
				{
				}

				[Token(Token = "0x6000EE2")]
				[Address(RVA = "0x44A2BD0", Offset = "0x44A2BD0", VA = "0x44A2BD0")]
				private void DoubleSided()
				{
				}

				[Token(Token = "0x6000EE3")]
				[Address(RVA = "0x4478C10", Offset = "0x4478C10", VA = "0x4478C10")]
				public void Write(TS_Mesh target, int forceMaterialId = -1)
				{
				}

				[Token(Token = "0x6000EE4")]
				[Address(RVA = "0x44A64AC", Offset = "0x44A64AC", VA = "0x44A64AC")]
				private void CalculateBounds()
				{
				}

				[Token(Token = "0x6000EE5")]
				[Address(RVA = "0x44A0A78", Offset = "0x44A0A78", VA = "0x44A0A78")]
				private void Mirror()
				{
				}

				[Token(Token = "0x6000EE6")]
				[Address(RVA = "0x44A49A4", Offset = "0x44A49A4", VA = "0x44A49A4")]
				private void TransformVertices()
				{
				}

				[Token(Token = "0x6000EE7")]
				[Address(RVA = "0x44A9738", Offset = "0x44A9738", VA = "0x44A9738")]
				private void GroupVertices()
				{
				}

				[Token(Token = "0x6000EE8")]
				[Address(RVA = "0x44AEE10", Offset = "0x44AEE10", VA = "0x44AEE10")]
				private int FindInsertIndex(Vector3 pos, float value)
				{
					return default(int);
				}

				[Token(Token = "0x6000EE9")]
				[Address(RVA = "0x44AC254", Offset = "0x44AC254", VA = "0x44AC254")]
				private void CalculateTangents()
				{
				}
			}

			[Token(Token = "0x4000935")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string name;

			[Token(Token = "0x4000936")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private System.Random iterationRandom;

			[Token(Token = "0x4000937")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[SerializeField]
			[HideInInspector]
			private int _iterationSeed;

			[Token(Token = "0x4000938")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[SerializeField]
			[HideInInspector]
			private int _offsetSeed;

			[Token(Token = "0x4000939")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private System.Random offsetRandom;

			[Token(Token = "0x400093A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Vector2Handler _offsetHandler;

			[Token(Token = "0x400093B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[SerializeField]
			[HideInInspector]
			private int _rotationSeed;

			[Token(Token = "0x400093C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private System.Random rotationRandom;

			[Token(Token = "0x400093D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private QuaternionHandler _placeRotationHandler;

			[Token(Token = "0x400093E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private FloatHandler _extrudeRotationHandler;

			[Token(Token = "0x400093F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			[SerializeField]
			[HideInInspector]
			private int _scaleSeed;

			[Token(Token = "0x4000940")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private System.Random scaleRandom;

			[Token(Token = "0x4000941")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			private Vector3Handler _scaleHandler;

			[Token(Token = "0x4000942")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			[SerializeField]
			internal SplineMesh owner;

			[Token(Token = "0x4000943")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			[SerializeField]
			[HideInInspector]
			private List<MeshDefinition> meshes;

			[Token(Token = "0x4000944")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			[SerializeField]
			[HideInInspector]
			private double _clipFrom;

			[Token(Token = "0x4000945")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			[SerializeField]
			[HideInInspector]
			private double _clipTo;

			[Token(Token = "0x4000946")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			[SerializeField]
			[HideInInspector]
			private bool _randomOrder;

			[Token(Token = "0x4000947")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
			[SerializeField]
			[HideInInspector]
			private UVOverride _overrideUVs;

			[Token(Token = "0x4000948")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			[SerializeField]
			[HideInInspector]
			private Vector2 _uvScale;

			[Token(Token = "0x4000949")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			[SerializeField]
			[HideInInspector]
			private Vector2 _uvOffset;

			[Token(Token = "0x400094A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
			[SerializeField]
			[HideInInspector]
			private bool _overrideNormal;

			[Token(Token = "0x400094B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
			[SerializeField]
			[HideInInspector]
			private Vector3 _customNormal;

			[Token(Token = "0x400094C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			[SerializeField]
			[HideInInspector]
			private Type _type;

			[Token(Token = "0x400094D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
			[SerializeField]
			[HideInInspector]
			private int _count;

			[Token(Token = "0x400094E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			[SerializeField]
			[HideInInspector]
			private bool _autoCount;

			[Token(Token = "0x400094F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
			[SerializeField]
			[HideInInspector]
			private double _spacing;

			[Token(Token = "0x4000950")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
			[SerializeField]
			[HideInInspector]
			private bool _randomRotation;

			[Token(Token = "0x4000951")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
			[SerializeField]
			[HideInInspector]
			private Vector3 _minRotation;

			[Token(Token = "0x4000952")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
			[SerializeField]
			[HideInInspector]
			private Vector3 _maxRotation;

			[Token(Token = "0x4000953")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
			[SerializeField]
			[HideInInspector]
			private bool _randomOffset;

			[Token(Token = "0x4000954")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
			[SerializeField]
			[HideInInspector]
			private Vector2 _minOffset;

			[Token(Token = "0x4000955")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
			[SerializeField]
			[HideInInspector]
			private Vector2 _maxOffset;

			[Token(Token = "0x4000956")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
			[SerializeField]
			[HideInInspector]
			private bool _randomScale;

			[Token(Token = "0x4000957")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x101")]
			[SerializeField]
			[HideInInspector]
			private bool _uniformRandomScale;

			[Token(Token = "0x4000958")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
			[SerializeField]
			[HideInInspector]
			private Vector3 _minScale;

			[Token(Token = "0x4000959")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
			[SerializeField]
			[HideInInspector]
			private Vector3 _maxScale;

			[Token(Token = "0x400095A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
			private int iterator;

			[Token(Token = "0x400095B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
			[SerializeField]
			[HideInInspector]
			private bool _overrideMaterialID;

			[Token(Token = "0x400095C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
			[SerializeField]
			[HideInInspector]
			private int _targetMaterialID;

			[Token(Token = "0x400095D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
			[SerializeField]
			[HideInInspector]
			protected MeshScaleModifier _scaleModifier;

			[Token(Token = "0x170001AB")]
			public double clipFrom
			{
				[Token(Token = "0x6000D65")]
				[Address(RVA = "0x446E330", Offset = "0x446E330", VA = "0x446E330")]
				get
				{
					return default(double);
				}
				[Token(Token = "0x6000D66")]
				[Address(RVA = "0x4481158", Offset = "0x4481158", VA = "0x4481158")]
				set
				{
				}
			}

			[Token(Token = "0x170001AC")]
			public double clipTo
			{
				[Token(Token = "0x6000D67")]
				[Address(RVA = "0x446E5AC", Offset = "0x446E5AC", VA = "0x446E5AC")]
				get
				{
					return default(double);
				}
				[Token(Token = "0x6000D68")]
				[Address(RVA = "0x4481A70", Offset = "0x4481A70", VA = "0x4481A70")]
				set
				{
				}
			}

			[Token(Token = "0x170001AD")]
			public bool randomOffset
			{
				[Token(Token = "0x6000D69")]
				[Address(RVA = "0x4481F40", Offset = "0x4481F40", VA = "0x4481F40")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x6000D6A")]
				[Address(RVA = "0x44821BC", Offset = "0x44821BC", VA = "0x44821BC")]
				set
				{
				}
			}

			[Token(Token = "0x170001AE")]
			public Vector2Handler offsetHandler
			{
				[Token(Token = "0x6000D6B")]
				[Address(RVA = "0x4482694", Offset = "0x4482694", VA = "0x4482694")]
				get
				{
					return null;
				}
				[Token(Token = "0x6000D6C")]
				[Address(RVA = "0x4482900", Offset = "0x4482900", VA = "0x4482900")]
				set
				{
				}
			}

			[Token(Token = "0x170001AF")]
			public bool overrideMaterialID
			{
				[Token(Token = "0x6000D6D")]
				[Address(RVA = "0x4478728", Offset = "0x4478728", VA = "0x4478728")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x6000D6E")]
				[Address(RVA = "0x4482E24", Offset = "0x4482E24", VA = "0x4482E24")]
				set
				{
				}
			}

			[Token(Token = "0x170001B0")]
			public int targetMaterialID
			{
				[Token(Token = "0x6000D6F")]
				[Address(RVA = "0x44789A4", Offset = "0x44789A4", VA = "0x44789A4")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6000D70")]
				[Address(RVA = "0x44832FC", Offset = "0x44832FC", VA = "0x44832FC")]
				set
				{
				}
			}

			[Token(Token = "0x170001B1")]
			public bool randomRotation
			{
				[Token(Token = "0x6000D71")]
				[Address(RVA = "0x44837CC", Offset = "0x44837CC", VA = "0x44837CC")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x6000D72")]
				[Address(RVA = "0x4483A48", Offset = "0x4483A48", VA = "0x4483A48")]
				set
				{
				}
			}

			[Token(Token = "0x170001B2")]
			public QuaternionHandler placeRotationHandler
			{
				[Token(Token = "0x6000D73")]
				[Address(RVA = "0x4483F20", Offset = "0x4483F20", VA = "0x4483F20")]
				get
				{
					return null;
				}
				[Token(Token = "0x6000D74")]
				[Address(RVA = "0x448418C", Offset = "0x448418C", VA = "0x448418C")]
				set
				{
				}
			}

			[Token(Token = "0x170001B3")]
			public FloatHandler extrudeRotationHandler
			{
				[Token(Token = "0x6000D75")]
				[Address(RVA = "0x44846A8", Offset = "0x44846A8", VA = "0x44846A8")]
				get
				{
					return null;
				}
				[Token(Token = "0x6000D76")]
				[Address(RVA = "0x4484914", Offset = "0x4484914", VA = "0x4484914")]
				set
				{
				}
			}

			[Token(Token = "0x170001B4")]
			public bool randomScale
			{
				[Token(Token = "0x6000D77")]
				[Address(RVA = "0x4484E38", Offset = "0x4484E38", VA = "0x4484E38")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x6000D78")]
				[Address(RVA = "0x44850B4", Offset = "0x44850B4", VA = "0x44850B4")]
				set
				{
				}
			}

			[Token(Token = "0x170001B5")]
			public Vector3Handler scaleHandler
			{
				[Token(Token = "0x6000D79")]
				[Address(RVA = "0x448558C", Offset = "0x448558C", VA = "0x448558C")]
				get
				{
					return null;
				}
				[Token(Token = "0x6000D7A")]
				[Address(RVA = "0x44857F8", Offset = "0x44857F8", VA = "0x44857F8")]
				set
				{
				}
			}

			[Token(Token = "0x170001B6")]
			public bool uniformRandomScale
			{
				[Token(Token = "0x6000D7B")]
				[Address(RVA = "0x4485D1C", Offset = "0x4485D1C", VA = "0x4485D1C")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x6000D7C")]
				[Address(RVA = "0x4485F98", Offset = "0x4485F98", VA = "0x4485F98")]
				set
				{
				}
			}

			[Token(Token = "0x170001B7")]
			public int offsetSeed
			{
				[Token(Token = "0x6000D7D")]
				[Address(RVA = "0x4486470", Offset = "0x4486470", VA = "0x4486470")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6000D7E")]
				[Address(RVA = "0x44866DC", Offset = "0x44866DC", VA = "0x44866DC")]
				set
				{
				}
			}

			[Token(Token = "0x170001B8")]
			public int rotationSeed
			{
				[Token(Token = "0x6000D7F")]
				[Address(RVA = "0x4486BAC", Offset = "0x4486BAC", VA = "0x4486BAC")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6000D80")]
				[Address(RVA = "0x4486E18", Offset = "0x4486E18", VA = "0x4486E18")]
				set
				{
				}
			}

			[Token(Token = "0x170001B9")]
			public int scaleSeed
			{
				[Token(Token = "0x6000D81")]
				[Address(RVA = "0x44872E8", Offset = "0x44872E8", VA = "0x44872E8")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6000D82")]
				[Address(RVA = "0x4487554", Offset = "0x4487554", VA = "0x4487554")]
				set
				{
				}
			}

			[Token(Token = "0x170001BA")]
			public double spacing
			{
				[Token(Token = "0x6000D83")]
				[Address(RVA = "0x446F760", Offset = "0x446F760", VA = "0x446F760")]
				get
				{
					return default(double);
				}
				[Token(Token = "0x6000D84")]
				[Address(RVA = "0x4487A24", Offset = "0x4487A24", VA = "0x4487A24")]
				set
				{
				}
			}

			[Token(Token = "0x170001BB")]
			public Vector2 minOffset
			{
				[Token(Token = "0x6000D85")]
				[Address(RVA = "0x4487EF4", Offset = "0x4487EF4", VA = "0x4487EF4")]
				get
				{
					return default(Vector2);
				}
				[Token(Token = "0x6000D86")]
				[Address(RVA = "0x4488174", Offset = "0x4488174", VA = "0x4488174")]
				set
				{
				}
			}

			[Token(Token = "0x170001BC")]
			public Vector2 maxOffset
			{
				[Token(Token = "0x6000D87")]
				[Address(RVA = "0x44886E4", Offset = "0x44886E4", VA = "0x44886E4")]
				get
				{
					return default(Vector2);
				}
				[Token(Token = "0x6000D88")]
				[Address(RVA = "0x4488964", Offset = "0x4488964", VA = "0x4488964")]
				set
				{
				}
			}

			[Token(Token = "0x170001BD")]
			public Vector3 minRotation
			{
				[Token(Token = "0x6000D89")]
				[Address(RVA = "0x4488ED4", Offset = "0x4488ED4", VA = "0x4488ED4")]
				get
				{
					return default(Vector3);
				}
				[Token(Token = "0x6000D8A")]
				[Address(RVA = "0x4489164", Offset = "0x4489164", VA = "0x4489164")]
				set
				{
				}
			}

			[Token(Token = "0x170001BE")]
			public Vector3 maxRotation
			{
				[Token(Token = "0x6000D8B")]
				[Address(RVA = "0x44896F4", Offset = "0x44896F4", VA = "0x44896F4")]
				get
				{
					return default(Vector3);
				}
				[Token(Token = "0x6000D8C")]
				[Address(RVA = "0x4489984", Offset = "0x4489984", VA = "0x4489984")]
				set
				{
				}
			}

			[Token(Token = "0x170001BF")]
			public Vector3 minScale
			{
				[Token(Token = "0x6000D8D")]
				[Address(RVA = "0x4489F14", Offset = "0x4489F14", VA = "0x4489F14")]
				get
				{
					return default(Vector3);
				}
				[Token(Token = "0x6000D8E")]
				[Address(RVA = "0x448A1A8", Offset = "0x448A1A8", VA = "0x448A1A8")]
				set
				{
				}
			}

			[Token(Token = "0x170001C0")]
			public Vector3 maxScale
			{
				[Token(Token = "0x6000D8F")]
				[Address(RVA = "0x448A740", Offset = "0x448A740", VA = "0x448A740")]
				get
				{
					return default(Vector3);
				}
				[Token(Token = "0x6000D90")]
				[Address(RVA = "0x448A9D4", Offset = "0x448A9D4", VA = "0x448A9D4")]
				set
				{
				}
			}

			[Token(Token = "0x170001C1")]
			public Type type
			{
				[Token(Token = "0x6000D91")]
				[Address(RVA = "0x446F9DC", Offset = "0x446F9DC", VA = "0x446F9DC")]
				get
				{
					return default(Type);
				}
				[Token(Token = "0x6000D92")]
				[Address(RVA = "0x448AF68", Offset = "0x448AF68", VA = "0x448AF68")]
				set
				{
				}
			}

			[Token(Token = "0x170001C2")]
			public bool randomOrder
			{
				[Token(Token = "0x6000D93")]
				[Address(RVA = "0x448B438", Offset = "0x448B438", VA = "0x448B438")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x6000D94")]
				[Address(RVA = "0x448B6B4", Offset = "0x448B6B4", VA = "0x448B6B4")]
				set
				{
				}
			}

			[Token(Token = "0x170001C3")]
			public int randomSeed
			{
				[Token(Token = "0x6000D95")]
				[Address(RVA = "0x448BB8C", Offset = "0x448BB8C", VA = "0x448BB8C")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6000D96")]
				[Address(RVA = "0x448BDF8", Offset = "0x448BDF8", VA = "0x448BDF8")]
				set
				{
				}
			}

			[Token(Token = "0x170001C4")]
			public int count
			{
				[Token(Token = "0x6000D97")]
				[Address(RVA = "0x446DB44", Offset = "0x446DB44", VA = "0x446DB44")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6000D98")]
				[Address(RVA = "0x446E828", Offset = "0x446E828", VA = "0x446E828")]
				set
				{
				}
			}

			[Token(Token = "0x170001C5")]
			public bool autoCount
			{
				[Token(Token = "0x6000D99")]
				[Address(RVA = "0x446DDB0", Offset = "0x446DDB0", VA = "0x446DDB0")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x6000D9A")]
				[Address(RVA = "0x448C388", Offset = "0x448C388", VA = "0x448C388")]
				set
				{
				}
			}

			[Token(Token = "0x170001C6")]
			public UVOverride overrideUVs
			{
				[Token(Token = "0x6000D9B")]
				[Address(RVA = "0x4480284", Offset = "0x4480284", VA = "0x4480284")]
				get
				{
					return default(UVOverride);
				}
				[Token(Token = "0x6000D9C")]
				[Address(RVA = "0x448C860", Offset = "0x448C860", VA = "0x448C860")]
				set
				{
				}
			}

			[Token(Token = "0x170001C7")]
			public Vector2 uvOffset
			{
				[Token(Token = "0x6000D9D")]
				[Address(RVA = "0x4480770", Offset = "0x4480770", VA = "0x4480770")]
				get
				{
					return default(Vector2);
				}
				[Token(Token = "0x6000D9E")]
				[Address(RVA = "0x448CD30", Offset = "0x448CD30", VA = "0x448CD30")]
				set
				{
				}
			}

			[Token(Token = "0x170001C8")]
			public Vector2 uvScale
			{
				[Token(Token = "0x6000D9F")]
				[Address(RVA = "0x44804F0", Offset = "0x44804F0", VA = "0x44804F0")]
				get
				{
					return default(Vector2);
				}
				[Token(Token = "0x6000DA0")]
				[Address(RVA = "0x448D2A0", Offset = "0x448D2A0", VA = "0x448D2A0")]
				set
				{
				}
			}

			[Token(Token = "0x170001C9")]
			public bool overrideNormal
			{
				[Token(Token = "0x6000DA1")]
				[Address(RVA = "0x447D218", Offset = "0x447D218", VA = "0x447D218")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x6000DA2")]
				[Address(RVA = "0x448D810", Offset = "0x448D810", VA = "0x448D810")]
				set
				{
				}
			}

			[Token(Token = "0x170001CA")]
			public Vector3 customNormal
			{
				[Token(Token = "0x6000DA3")]
				[Address(RVA = "0x447D494", Offset = "0x447D494", VA = "0x447D494")]
				get
				{
					return default(Vector3);
				}
				[Token(Token = "0x6000DA4")]
				[Address(RVA = "0x448DCE8", Offset = "0x448DCE8", VA = "0x448DCE8")]
				set
				{
				}
			}

			[Token(Token = "0x170001CB")]
			public MeshScaleModifier scaleModifier
			{
				[Token(Token = "0x6000DA5")]
				[Address(RVA = "0x447F980", Offset = "0x447F980", VA = "0x447F980")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000DA6")]
			[Address(RVA = "0x4465FDC", Offset = "0x4465FDC", VA = "0x4465FDC")]
			public Channel(string n, SplineMesh parent)
			{
			}

			[Token(Token = "0x6000DA7")]
			[Address(RVA = "0x446452C", Offset = "0x446452C", VA = "0x446452C")]
			public Channel(string n, Mesh inputMesh, SplineMesh parent)
			{
			}

			[Token(Token = "0x6000DA8")]
			[Address(RVA = "0x448E278", Offset = "0x448E278", VA = "0x448E278")]
			private void Init()
			{
			}

			[Token(Token = "0x6000DA9")]
			[Address(RVA = "0x448FB88", Offset = "0x448FB88", VA = "0x448FB88")]
			public void CopyTo(Channel target)
			{
			}

			[Token(Token = "0x6000DAA")]
			[Address(RVA = "0x446D84C", Offset = "0x446D84C", VA = "0x446D84C")]
			public int GetMeshCount()
			{
				return default(int);
			}

			[Token(Token = "0x6000DAB")]
			[Address(RVA = "0x4493FA4", Offset = "0x4493FA4", VA = "0x4493FA4")]
			public void SwapMeshes(int a, int b)
			{
			}

			[Token(Token = "0x6000DAC")]
			[Address(RVA = "0x4494850", Offset = "0x4494850", VA = "0x4494850")]
			public void DuplicateMesh(int index)
			{
			}

			[Token(Token = "0x6000DAD")]
			[Address(RVA = "0x446E024", Offset = "0x446E024", VA = "0x446E024")]
			public MeshDefinition GetMesh(int index)
			{
				return null;
			}

			[Token(Token = "0x6000DAE")]
			[Address(RVA = "0x4494EE8", Offset = "0x4494EE8", VA = "0x4494EE8")]
			public void AddMesh(Mesh input)
			{
			}

			[Token(Token = "0x6000DAF")]
			[Address(RVA = "0x4495338", Offset = "0x4495338", VA = "0x4495338")]
			public void RemoveMesh(int index)
			{
			}

			[Token(Token = "0x6000DB0")]
			[Address(RVA = "0x446EE20", Offset = "0x446EE20", VA = "0x446EE20")]
			public void ResetIteration()
			{
			}

			[Token(Token = "0x6000DB1")]
			[Address(RVA = "0x447C9D0", Offset = "0x447C9D0", VA = "0x447C9D0")]
			public Vector2 NextOffset(double percent)
			{
				return default(Vector2);
			}

			[Token(Token = "0x6000DB2")]
			[Address(RVA = "0x447D724", Offset = "0x447D724", VA = "0x447D724")]
			public Quaternion NextPlaceRotation(double percent)
			{
				return default(Quaternion);
			}

			[Token(Token = "0x6000DB3")]
			[Address(RVA = "0x447FBEC", Offset = "0x447FBEC", VA = "0x447FBEC")]
			public float NextExtrudeRotation(double percent)
			{
				return default(float);
			}

			[Token(Token = "0x6000DB4")]
			[Address(RVA = "0x447ECBC", Offset = "0x447ECBC", VA = "0x447ECBC")]
			public Vector3 NextExtrudeScale(double percent)
			{
				return default(Vector3);
			}

			[Token(Token = "0x6000DB5")]
			[Address(RVA = "0x447E20C", Offset = "0x447E20C", VA = "0x447E20C")]
			public Vector3 NextPlaceScale()
			{
				return default(Vector3);
			}

			[Token(Token = "0x6000DB6")]
			[Address(RVA = "0x4477F48", Offset = "0x4477F48", VA = "0x4477F48")]
			public MeshDefinition NextMesh()
			{
				return null;
			}

			[Token(Token = "0x6000DB7")]
			[Address(RVA = "0x4481628", Offset = "0x4481628", VA = "0x4481628")]
			internal void Rebuild()
			{
			}

			[Token(Token = "0x6000DB8")]
			[Address(RVA = "0x44960AC", Offset = "0x44960AC", VA = "0x44960AC")]
			private void Refresh()
			{
			}
		}

		[Token(Token = "0x40005D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[SerializeField]
		[HideInInspector]
		private List<Channel> channels;

		[Token(Token = "0x40005D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private bool useLastResult;

		[Token(Token = "0x40005D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private List<TS_Mesh> combineMeshes;

		[Token(Token = "0x40005D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private int meshCount;

		[Token(Token = "0x40005D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
		private Matrix4x4 vertexMatrix;

		[Token(Token = "0x40005D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
		private Matrix4x4 normalMatrix;

		[Token(Token = "0x40005D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		private SplineSample lastResult;

		[Token(Token = "0x40005D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		private SplineSample modifiedResult;

		[Token(Token = "0x60008D4")]
		[Address(RVA = "0x4462860", Offset = "0x4462860", VA = "0x4462860", Slot = "6")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60008D5")]
		[Address(RVA = "0x4462C24", Offset = "0x4462C24", VA = "0x4462C24", Slot = "7")]
		protected override void Reset()
		{
		}

		[Token(Token = "0x60008D6")]
		[Address(RVA = "0x4463434", Offset = "0x4463434", VA = "0x4463434")]
		public void RemoveChannel(int index)
		{
		}

		[Token(Token = "0x60008D7")]
		[Address(RVA = "0x4463808", Offset = "0x4463808", VA = "0x4463808")]
		public void SwapChannels(int a, int b)
		{
		}

		[Token(Token = "0x60008D8")]
		[Address(RVA = "0x44640BC", Offset = "0x44640BC", VA = "0x44640BC")]
		public Channel AddChannel(Mesh inputMesh, string name)
		{
			return null;
		}

		[Token(Token = "0x60008D9")]
		[Address(RVA = "0x4462FD4", Offset = "0x4462FD4", VA = "0x4462FD4")]
		public Channel AddChannel(string name)
		{
			return null;
		}

		[Token(Token = "0x60008DA")]
		[Address(RVA = "0x4467844", Offset = "0x4467844", VA = "0x4467844")]
		public int GetChannelCount()
		{
			return default(int);
		}

		[Token(Token = "0x60008DB")]
		[Address(RVA = "0x4467B3C", Offset = "0x4467B3C", VA = "0x4467B3C")]
		public Channel GetChannel(int index)
		{
			return null;
		}

		[Token(Token = "0x60008DC")]
		[Address(RVA = "0x4467E48", Offset = "0x4467E48", VA = "0x4467E48", Slot = "20")]
		protected override void BuildMesh()
		{
		}

		[Token(Token = "0x60008DD")]
		[Address(RVA = "0x4468370", Offset = "0x4468370", VA = "0x4468370")]
		private void Generate()
		{
		}

		[Token(Token = "0x60008DE")]
		[Address(RVA = "0x44741BC", Offset = "0x44741BC", VA = "0x44741BC")]
		private void Place(Channel channel, TS_Mesh target, double percent)
		{
		}

		[Token(Token = "0x60008DF")]
		[Address(RVA = "0x446FC48", Offset = "0x446FC48", VA = "0x446FC48")]
		private void Stretch(Channel channel, TS_Mesh target, double from, double to)
		{
		}

		[Token(Token = "0x60008E0")]
		[Address(RVA = "0x44809F0", Offset = "0x44809F0", VA = "0x44809F0")]
		public SplineMesh()
		{
		}
	}
	[Token(Token = "0x2000134")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xCF94FC", Offset = "0xCF94FC")]
	public class SplineMorph : MonoBehaviour
	{
		[Token(Token = "0x20001EA")]
		public enum CycleMode
		{
			[Token(Token = "0x400095F")]
			Default,
			[Token(Token = "0x4000960")]
			Loop,
			[Token(Token = "0x4000961")]
			PingPong
		}

		[Token(Token = "0x20001EB")]
		public enum UpdateMode
		{
			[Token(Token = "0x4000963")]
			Update,
			[Token(Token = "0x4000964")]
			FixedUpdate,
			[Token(Token = "0x4000965")]
			LateUpdate
		}

		[Serializable]
		[Token(Token = "0x20001EC")]
		public class Channel
		{
			[Token(Token = "0x2000255")]
			public enum Interpolation
			{
				[Token(Token = "0x4000A5E")]
				Linear,
				[Token(Token = "0x4000A5F")]
				Spherical
			}

			[Token(Token = "0x4000966")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			internal SplinePoint[] points;

			[Token(Token = "0x4000967")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[SerializeField]
			internal float percent;

			[Token(Token = "0x4000968")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string name;

			[Token(Token = "0x4000969")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public AnimationCurve curve;

			[Token(Token = "0x400096A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Interpolation interpolation;

			[Token(Token = "0x6000DB9")]
			[Address(RVA = "0x44BBF30", Offset = "0x44BBF30", VA = "0x44BBF30")]
			public Channel()
			{
			}
		}

		[Token(Token = "0x40005D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public SplineComputer.Space space;

		[Token(Token = "0x40005D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[HideInInspector]
		public bool cycle;

		[Token(Token = "0x40005DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public CycleMode cycleMode;

		[Token(Token = "0x40005DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[HideInInspector]
		public UpdateMode cycleUpdateMode;

		[Token(Token = "0x40005DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public float cycleDuration;

		[Token(Token = "0x40005DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[HideInInspector]
		private SplineComputer _spline;

		[Token(Token = "0x40005DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private SplinePoint[] points;

		[Token(Token = "0x40005DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float cycleValue;

		[Token(Token = "0x40005E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private short cycleDirection;

		[Token(Token = "0x40005E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[HideInInspector]
		[SerializeField]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xCFE800", Offset = "0xCFE800")]
		private Channel[] channels;

		[Token(Token = "0x170000DF")]
		public SplineComputer spline
		{
			[Token(Token = "0x60008E1")]
			[Address(RVA = "0x44B07B8", Offset = "0x44B07B8", VA = "0x44B07B8")]
			get
			{
				return null;
			}
			[Token(Token = "0x60008E2")]
			[Address(RVA = "0x44B0A24", Offset = "0x44B0A24", VA = "0x44B0A24")]
			set
			{
			}
		}

		[Token(Token = "0x60008E3")]
		[Address(RVA = "0x44B11F4", Offset = "0x44B11F4", VA = "0x44B11F4")]
		private void Reset()
		{
		}

		[Token(Token = "0x60008E4")]
		[Address(RVA = "0x44B154C", Offset = "0x44B154C", VA = "0x44B154C")]
		private void Update()
		{
		}

		[Token(Token = "0x60008E5")]
		[Address(RVA = "0x44B29AC", Offset = "0x44B29AC", VA = "0x44B29AC")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x60008E6")]
		[Address(RVA = "0x44B2D48", Offset = "0x44B2D48", VA = "0x44B2D48")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60008E7")]
		[Address(RVA = "0x44B18E4", Offset = "0x44B18E4", VA = "0x44B18E4")]
		private void RunUpdate()
		{
		}

		[Token(Token = "0x60008E8")]
		[Address(RVA = "0x44B3E3C", Offset = "0x44B3E3C", VA = "0x44B3E3C")]
		public void SetCycle(float value)
		{
		}

		[Token(Token = "0x60008E9")]
		[Address(RVA = "0x44B4168", Offset = "0x44B4168", VA = "0x44B4168")]
		public void SetWeight(int index, float weight)
		{
		}

		[Token(Token = "0x60008EA")]
		[Address(RVA = "0x44B8404", Offset = "0x44B8404", VA = "0x44B8404")]
		public void SetWeight(string name, float weight)
		{
		}

		[Token(Token = "0x60008EB")]
		[Address(RVA = "0x44B30E4", Offset = "0x44B30E4", VA = "0x44B30E4")]
		public void SetWeight(float percent, bool loop = false)
		{
		}

		[Token(Token = "0x60008EC")]
		[Address(RVA = "0x44B91FC", Offset = "0x44B91FC", VA = "0x44B91FC")]
		public void CaptureSnapshot(string name)
		{
		}

		[Token(Token = "0x60008ED")]
		[Address(RVA = "0x44B9554", Offset = "0x44B9554", VA = "0x44B9554")]
		public void CaptureSnapshot(int index)
		{
		}

		[Token(Token = "0x60008EE")]
		[Address(RVA = "0x44B9FAC", Offset = "0x44B9FAC", VA = "0x44B9FAC")]
		public void Clear()
		{
		}

		[Token(Token = "0x60008EF")]
		[Address(RVA = "0x44BA234", Offset = "0x44BA234", VA = "0x44BA234")]
		public SplinePoint[] GetSnapshot(int index)
		{
			return null;
		}

		[Token(Token = "0x60008F0")]
		[Address(RVA = "0x44BA4F0", Offset = "0x44BA4F0", VA = "0x44BA4F0")]
		public SplinePoint[] GetSnapshot(string name)
		{
			return null;
		}

		[Token(Token = "0x60008F1")]
		[Address(RVA = "0x44BA888", Offset = "0x44BA888", VA = "0x44BA888")]
		public float GetWeight(int index)
		{
			return default(float);
		}

		[Token(Token = "0x60008F2")]
		[Address(RVA = "0x44BAB60", Offset = "0x44BAB60", VA = "0x44BAB60")]
		public float GetWeight(string name)
		{
			return default(float);
		}

		[Token(Token = "0x60008F3")]
		[Address(RVA = "0x44BAF08", Offset = "0x44BAF08", VA = "0x44BAF08")]
		public void AddChannel(string name)
		{
		}

		[Token(Token = "0x60008F4")]
		[Address(RVA = "0x44BC2A8", Offset = "0x44BC2A8", VA = "0x44BC2A8")]
		public void RemoveChannel(string name)
		{
		}

		[Token(Token = "0x60008F5")]
		[Address(RVA = "0x44BC66C", Offset = "0x44BC66C", VA = "0x44BC66C")]
		public void RemoveChannel(int index)
		{
		}

		[Token(Token = "0x60008F6")]
		[Address(RVA = "0x44B8924", Offset = "0x44B8924", VA = "0x44B8924")]
		private int GetChannelIndex(string name)
		{
			return default(int);
		}

		[Token(Token = "0x60008F7")]
		[Address(RVA = "0x44BD2C0", Offset = "0x44BD2C0", VA = "0x44BD2C0")]
		public int GetChannelCount()
		{
			return default(int);
		}

		[Token(Token = "0x60008F8")]
		[Address(RVA = "0x44BD65C", Offset = "0x44BD65C", VA = "0x44BD65C")]
		public Channel GetChannel(int index)
		{
			return null;
		}

		[Token(Token = "0x60008F9")]
		[Address(RVA = "0x44BD90C", Offset = "0x44BD90C", VA = "0x44BD90C")]
		public Channel GetChannel(string name)
		{
			return null;
		}

		[Token(Token = "0x60008FA")]
		[Address(RVA = "0x44B45AC", Offset = "0x44B45AC", VA = "0x44B45AC")]
		public void UpdateMorph()
		{
		}

		[Token(Token = "0x60008FB")]
		[Address(RVA = "0x44BE2AC", Offset = "0x44BE2AC", VA = "0x44BE2AC")]
		public SplineMorph()
		{
		}
	}
	[Token(Token = "0x2000135")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xCF9534", Offset = "0xCF9534")]
	public class SplinePositioner : SplineTracer
	{
		[Token(Token = "0x20001ED")]
		public enum Mode
		{
			[Token(Token = "0x400096C")]
			Percent,
			[Token(Token = "0x400096D")]
			Distance
		}

		[Token(Token = "0x40005E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[SerializeField]
		[HideInInspector]
		private GameObject _targetObject;

		[Token(Token = "0x40005E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[SerializeField]
		[HideInInspector]
		private double _position;

		[Token(Token = "0x40005E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[SerializeField]
		[HideInInspector]
		private float animPosition;

		[Token(Token = "0x40005E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		[SerializeField]
		[HideInInspector]
		private Mode _mode;

		[Token(Token = "0x170000E0")]
		public GameObject targetObject
		{
			[Token(Token = "0x60008FC")]
			[Address(RVA = "0x44C61F0", Offset = "0x44C61F0", VA = "0x44C61F0")]
			get
			{
				return null;
			}
			[Token(Token = "0x60008FD")]
			[Address(RVA = "0x44C6694", Offset = "0x44C6694", VA = "0x44C6694")]
			set
			{
			}
		}

		[Token(Token = "0x170000E1")]
		public double position
		{
			[Token(Token = "0x60008FE")]
			[Address(RVA = "0x44C6CCC", Offset = "0x44C6CCC", VA = "0x44C6CCC")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x60008FF")]
			[Address(RVA = "0x44C6F48", Offset = "0x44C6F48", VA = "0x44C6F48")]
			set
			{
			}
		}

		[Token(Token = "0x170000E2")]
		public Mode mode
		{
			[Token(Token = "0x6000900")]
			[Address(RVA = "0x44C76AC", Offset = "0x44C76AC", VA = "0x44C76AC")]
			get
			{
				return default(Mode);
			}
			[Token(Token = "0x6000901")]
			[Address(RVA = "0x44C7908", Offset = "0x44C7908", VA = "0x44C7908")]
			set
			{
			}
		}

		[Token(Token = "0x6000902")]
		[Address(RVA = "0x44C7DE0", Offset = "0x44C7DE0", VA = "0x44C7DE0", Slot = "11")]
		protected override void OnDidApplyAnimationProperties()
		{
		}

		[Token(Token = "0x6000903")]
		[Address(RVA = "0x44C8264", Offset = "0x44C8264", VA = "0x44C8264", Slot = "25")]
		protected override Transform GetTransform()
		{
			return null;
		}

		[Token(Token = "0x6000904")]
		[Address(RVA = "0x44C85C4", Offset = "0x44C85C4", VA = "0x44C85C4", Slot = "23")]
		protected override Rigidbody GetRigidbody()
		{
			return null;
		}

		[Token(Token = "0x6000905")]
		[Address(RVA = "0x44C892C", Offset = "0x44C892C", VA = "0x44C892C", Slot = "24")]
		protected override Rigidbody2D GetRigidbody2D()
		{
			return null;
		}

		[Token(Token = "0x6000906")]
		[Address(RVA = "0x44C8C94", Offset = "0x44C8C94", VA = "0x44C8C94", Slot = "17")]
		protected override void PostBuild()
		{
		}

		[Token(Token = "0x6000907")]
		[Address(RVA = "0x44C9268", Offset = "0x44C9268", VA = "0x44C9268", Slot = "21")]
		public override void SetPercent(double percent, bool checkTriggers = false, bool handleJuncitons = false)
		{
		}

		[Token(Token = "0x6000908")]
		[Address(RVA = "0x44C95E8", Offset = "0x44C95E8", VA = "0x44C95E8", Slot = "22")]
		public override void SetDistance(float distance, bool checkTriggers = false, bool handleJuncitons = false)
		{
		}

		[Token(Token = "0x6000909")]
		[Address(RVA = "0x44C996C", Offset = "0x44C996C", VA = "0x44C996C")]
		public SplinePositioner()
		{
		}
	}
	[Token(Token = "0x2000136")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xCF956C", Offset = "0xCF956C")]
	public class SplineProjector : SplineTracer
	{
		[Token(Token = "0x20001EE")]
		public enum Mode
		{
			[Token(Token = "0x400096F")]
			Accurate,
			[Token(Token = "0x4000970")]
			Cached
		}

		[Token(Token = "0x40005E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[SerializeField]
		[HideInInspector]
		private Mode _mode;

		[Token(Token = "0x40005E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		[SerializeField]
		[HideInInspector]
		private bool _autoProject;

		[Token(Token = "0x40005E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[SerializeField]
		[HideInInspector]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCFE9AC", Offset = "0xCFE9AC")]
		private int _subdivide;

		[Token(Token = "0x40005E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[SerializeField]
		[HideInInspector]
		private Transform _projectTarget;

		[Token(Token = "0x40005EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[SerializeField]
		[HideInInspector]
		private Transform applyTarget;

		[Token(Token = "0x40005EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[SerializeField]
		[HideInInspector]
		private GameObject _targetObject;

		[Token(Token = "0x40005EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[SerializeField]
		[HideInInspector]
		public Vector2 _offset;

		[Token(Token = "0x40005ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		[SerializeField]
		[HideInInspector]
		public Vector3 _rotationOffset;

		[Token(Token = "0x40005F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		[SerializeField]
		[HideInInspector]
		private Vector3 lastPosition;

		[Token(Token = "0x170000E3")]
		public Mode mode
		{
			[Token(Token = "0x600090A")]
			[Address(RVA = "0x3C5F5CC", Offset = "0x3C5F5CC", VA = "0x3C5F5CC")]
			get
			{
				return default(Mode);
			}
			[Token(Token = "0x600090B")]
			[Address(RVA = "0x3C5F838", Offset = "0x3C5F838", VA = "0x3C5F838")]
			set
			{
			}
		}

		[Token(Token = "0x170000E4")]
		public bool autoProject
		{
			[Token(Token = "0x600090C")]
			[Address(RVA = "0x3C5FD10", Offset = "0x3C5FD10", VA = "0x3C5FD10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600090D")]
			[Address(RVA = "0x3C5FF8C", Offset = "0x3C5FF8C", VA = "0x3C5FF8C")]
			set
			{
			}
		}

		[Token(Token = "0x170000E5")]
		public int subdivide
		{
			[Token(Token = "0x600090E")]
			[Address(RVA = "0x3C6052C", Offset = "0x3C6052C", VA = "0x3C6052C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600090F")]
			[Address(RVA = "0x3C60798", Offset = "0x3C60798", VA = "0x3C60798")]
			set
			{
			}
		}

		[Token(Token = "0x170000E6")]
		public Transform projectTarget
		{
			[Token(Token = "0x6000910")]
			[Address(RVA = "0x3C60D30", Offset = "0x3C60D30", VA = "0x3C60D30")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000911")]
			[Address(RVA = "0x3C611D4", Offset = "0x3C611D4", VA = "0x3C611D4")]
			set
			{
			}
		}

		[Token(Token = "0x170000E7")]
		public GameObject targetObject
		{
			[Token(Token = "0x6000912")]
			[Address(RVA = "0x3C61740", Offset = "0x3C61740", VA = "0x3C61740")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000913")]
			[Address(RVA = "0x3C61F1C", Offset = "0x3C61F1C", VA = "0x3C61F1C")]
			set
			{
			}
		}

		[Token(Token = "0x14000024")]
		public event SplineReachHandler onEndReached
		{
			[Token(Token = "0x6000914")]
			[Address(RVA = "0x3C62BE4", Offset = "0x3C62BE4", VA = "0x3C62BE4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD02AFC", Offset = "0xD02AFC")]
			add
			{
			}
			[Token(Token = "0x6000915")]
			[Address(RVA = "0x3C62D50", Offset = "0x3C62D50", VA = "0x3C62D50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD02B0C", Offset = "0xD02B0C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000025")]
		public event SplineReachHandler onBeginningReached
		{
			[Token(Token = "0x6000916")]
			[Address(RVA = "0x3C62EBC", Offset = "0x3C62EBC", VA = "0x3C62EBC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD02B1C", Offset = "0xD02B1C")]
			add
			{
			}
			[Token(Token = "0x6000917")]
			[Address(RVA = "0x3C63028", Offset = "0x3C63028", VA = "0x3C63028")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD02B2C", Offset = "0xD02B2C")]
			remove
			{
			}
		}

		[Token(Token = "0x6000918")]
		[Address(RVA = "0x3C63194", Offset = "0x3C63194", VA = "0x3C63194", Slot = "7")]
		protected override void Reset()
		{
		}

		[Token(Token = "0x6000919")]
		[Address(RVA = "0x3C63750", Offset = "0x3C63750", VA = "0x3C63750", Slot = "25")]
		protected override Transform GetTransform()
		{
			return null;
		}

		[Token(Token = "0x600091A")]
		[Address(RVA = "0x3C63CD4", Offset = "0x3C63CD4", VA = "0x3C63CD4", Slot = "23")]
		protected override Rigidbody GetRigidbody()
		{
			return null;
		}

		[Token(Token = "0x600091B")]
		[Address(RVA = "0x3C64268", Offset = "0x3C64268", VA = "0x3C64268", Slot = "24")]
		protected override Rigidbody2D GetRigidbody2D()
		{
			return null;
		}

		[Token(Token = "0x600091C")]
		[Address(RVA = "0x3C647FC", Offset = "0x3C647FC", VA = "0x3C647FC", Slot = "15")]
		protected override void LateRun()
		{
		}

		[Token(Token = "0x600091D")]
		[Address(RVA = "0x3C67444", Offset = "0x3C67444", VA = "0x3C67444", Slot = "17")]
		protected override void PostBuild()
		{
		}

		[Token(Token = "0x600091E")]
		[Address(RVA = "0x3C67CA8", Offset = "0x3C67CA8", VA = "0x3C67CA8", Slot = "18")]
		protected override void OnSplineChanged()
		{
		}

		[Token(Token = "0x600091F")]
		[Address(RVA = "0x3C69570", Offset = "0x3C69570", VA = "0x3C69570")]
		private void Project()
		{
		}

		[Token(Token = "0x6000920")]
		[Address(RVA = "0x3C6554C", Offset = "0x3C6554C", VA = "0x3C6554C")]
		public void CalculateProjection()
		{
		}

		[Token(Token = "0x6000921")]
		[Address(RVA = "0x3C7077C", Offset = "0x3C7077C", VA = "0x3C7077C")]
		public SplineProjector()
		{
		}
	}
	[Token(Token = "0x2000137")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xCF95B8", Offset = "0xCF95B8")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xCF95B8", Offset = "0xCF95B8")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xCF95B8", Offset = "0xCF95B8")]
	[ExecuteInEditMode]
	public class SplineRenderer : MeshGenerator
	{
		[Token(Token = "0x40005F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[HideInInspector]
		public bool autoOrient;

		[Token(Token = "0x40005F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		[HideInInspector]
		public int updateFrameInterval;

		[Token(Token = "0x40005F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private int currentFrame;

		[Token(Token = "0x40005F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		[SerializeField]
		[HideInInspector]
		private int _slices;

		[Token(Token = "0x40005F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[SerializeField]
		[HideInInspector]
		private Vector3 vertexDirection;

		[Token(Token = "0x40005F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
		private bool orthographic;

		[Token(Token = "0x40005F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14D")]
		private bool init;

		[Token(Token = "0x170000E8")]
		public int slices
		{
			[Token(Token = "0x6000922")]
			[Address(RVA = "0x3C716A4", Offset = "0x3C716A4", VA = "0x3C716A4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000923")]
			[Address(RVA = "0x3C71910", Offset = "0x3C71910", VA = "0x3C71910")]
			set
			{
			}
		}

		[Token(Token = "0x6000924")]
		[Address(RVA = "0x3C71F08", Offset = "0x3C71F08", VA = "0x3C71F08", Slot = "6")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6000925")]
		[Address(RVA = "0x3C722CC", Offset = "0x3C722CC", VA = "0x3C722CC")]
		private void Start()
		{
		}

		[Token(Token = "0x6000926")]
		[Address(RVA = "0x3C72800", Offset = "0x3C72800", VA = "0x3C72800", Slot = "15")]
		protected override void LateRun()
		{
		}

		[Token(Token = "0x6000927")]
		[Address(RVA = "0x3C72D20", Offset = "0x3C72D20", VA = "0x3C72D20", Slot = "20")]
		protected override void BuildMesh()
		{
		}

		[Token(Token = "0x6000928")]
		[Address(RVA = "0x3C76528", Offset = "0x3C76528", VA = "0x3C76528")]
		public void RenderWithCamera(Camera cam)
		{
		}

		[Token(Token = "0x6000929")]
		[Address(RVA = "0x3C772AC", Offset = "0x3C772AC", VA = "0x3C772AC")]
		private void OnWillRenderObject()
		{
		}

		[Token(Token = "0x600092A")]
		[Address(RVA = "0x3C7326C", Offset = "0x3C7326C", VA = "0x3C7326C")]
		public void GenerateVertices(Vector3 vertexDirection, bool orthoGraphic)
		{
		}

		[Token(Token = "0x600092B")]
		[Address(RVA = "0x3C7818C", Offset = "0x3C7818C", VA = "0x3C7818C")]
		public SplineRenderer()
		{
		}
	}
	[Token(Token = "0x2000138")]
	public class SplineTracer : SplineUser
	{
		[Token(Token = "0x20001EF")]
		public class NodeConnection
		{
			[Token(Token = "0x4000971")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Node node;

			[Token(Token = "0x4000972")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int point;

			[Token(Token = "0x6000DBA")]
			[Address(RVA = "0x3C9DBF8", Offset = "0x3C9DBF8", VA = "0x3C9DBF8")]
			public NodeConnection(Node node, int point)
			{
			}
		}

		[Token(Token = "0x20001F0")]
		public enum PhysicsMode
		{
			[Token(Token = "0x4000974")]
			Transform,
			[Token(Token = "0x4000975")]
			Rigidbody,
			[Token(Token = "0x4000976")]
			Rigidbody2D
		}

		[Token(Token = "0x20001F1")]
		public delegate void JunctionHandler(List<NodeConnection> passed);

		[Token(Token = "0x40005F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private SplineTrigger[] triggerInvokeQueue;

		[Token(Token = "0x40005F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private List<NodeConnection> nodeConnectionQueue;

		[Token(Token = "0x40005FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private int addTriggerIndex;

		[Token(Token = "0x40005FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[HideInInspector]
		public bool applyDirectionRotation;

		[Token(Token = "0x40005FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC5")]
		[HideInInspector]
		public bool useTriggers;

		[Token(Token = "0x40005FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[HideInInspector]
		public int triggerGroup;

		[Token(Token = "0x40005FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[SerializeField]
		[HideInInspector]
		protected Spline.Direction _direction;

		[Token(Token = "0x40005FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		[HideInInspector]
		protected PhysicsMode _physicsMode;

		[Token(Token = "0x4000600")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		[HideInInspector]
		protected TransformModule _motion;

		[Token(Token = "0x4000601")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		[HideInInspector]
		protected Rigidbody targetRigidbody;

		[Token(Token = "0x4000602")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		[HideInInspector]
		protected Rigidbody2D targetRigidbody2D;

		[Token(Token = "0x4000603")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		[HideInInspector]
		protected Transform targetTransform;

		[Token(Token = "0x4000604")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		[HideInInspector]
		protected SplineSample _result;

		[Token(Token = "0x4000605")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		[HideInInspector]
		protected SplineSample _finalResult;

		[Token(Token = "0x4000606")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private bool setPercentOnRebuild;

		[Token(Token = "0x4000607")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private double targetPercentOnRebuild;

		[Token(Token = "0x400060A")]
		private const double MIN_DELTA = 1E-06;

		[Token(Token = "0x170000E9")]
		public PhysicsMode physicsMode
		{
			[Token(Token = "0x600092C")]
			[Address(RVA = "0x3C929CC", Offset = "0x3C929CC", VA = "0x3C929CC")]
			get
			{
				return default(PhysicsMode);
			}
			[Token(Token = "0x600092D")]
			[Address(RVA = "0x3C92C38", Offset = "0x3C92C38", VA = "0x3C92C38")]
			set
			{
			}
		}

		[Token(Token = "0x170000EA")]
		public TransformModule motion
		{
			[Token(Token = "0x600092E")]
			[Address(RVA = "0x3C92F84", Offset = "0x3C92F84", VA = "0x3C92F84")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000EB")]
		public SplineSample result
		{
			[Token(Token = "0x600092F")]
			[Address(RVA = "0x3C93CB8", Offset = "0x3C93CB8", VA = "0x3C93CB8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000EC")]
		public SplineSample modifiedResult
		{
			[Token(Token = "0x6000930")]
			[Address(RVA = "0x3C93F24", Offset = "0x3C93F24", VA = "0x3C93F24")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000ED")]
		public Spline.Direction direction
		{
			[Token(Token = "0x6000931")]
			[Address(RVA = "0x3C94190", Offset = "0x3C94190", VA = "0x3C94190")]
			get
			{
				return default(Spline.Direction);
			}
			[Token(Token = "0x6000932")]
			[Address(RVA = "0x3C943FC", Offset = "0x3C943FC", VA = "0x3C943FC")]
			set
			{
			}
		}

		[Token(Token = "0x14000026")]
		public event JunctionHandler onNode
		{
			[Token(Token = "0x6000933")]
			[Address(RVA = "0x3C948CC", Offset = "0x3C948CC", VA = "0x3C948CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD02B3C", Offset = "0xD02B3C")]
			add
			{
			}
			[Token(Token = "0x6000934")]
			[Address(RVA = "0x3C94A38", Offset = "0x3C94A38", VA = "0x3C94A38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD02B4C", Offset = "0xD02B4C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000027")]
		public event EmptySplineHandler onMotionApplied
		{
			[Token(Token = "0x6000935")]
			[Address(RVA = "0x3C94BA4", Offset = "0x3C94BA4", VA = "0x3C94BA4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD02B5C", Offset = "0xD02B5C")]
			add
			{
			}
			[Token(Token = "0x6000936")]
			[Address(RVA = "0x3C94D10", Offset = "0x3C94D10", VA = "0x3C94D10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD02B6C", Offset = "0xD02B6C")]
			remove
			{
			}
		}

		[Token(Token = "0x6000937")]
		[Address(RVA = "0x3C94E7C", Offset = "0x3C94E7C", VA = "0x3C94E7C", Slot = "20")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x6000938")]
		[Address(RVA = "0x3C95154", Offset = "0x3C95154", VA = "0x3C95154", Slot = "21")]
		public virtual void SetPercent(double percent, bool checkTriggers = false, bool handleJunctions = false)
		{
		}

		[Token(Token = "0x6000939")]
		[Address(RVA = "0x3C960E8", Offset = "0x3C960E8", VA = "0x3C960E8", Slot = "22")]
		public virtual void SetDistance(float distance, bool checkTriggers = false, bool handleJunctions = false)
		{
		}

		[Token(Token = "0x600093A")]
		[Address(RVA = "0x3C677E4", Offset = "0x3C677E4", VA = "0x3C677E4", Slot = "17")]
		protected override void PostBuild()
		{
		}

		[Token(Token = "0x600093B")]
		[Address(RVA = "0x3C96FE4", Offset = "0x3C96FE4", VA = "0x3C96FE4", Slot = "23")]
		protected virtual Rigidbody GetRigidbody()
		{
			return null;
		}

		[Token(Token = "0x600093C")]
		[Address(RVA = "0x3C972CC", Offset = "0x3C972CC", VA = "0x3C972CC", Slot = "24")]
		protected virtual Rigidbody2D GetRigidbody2D()
		{
			return null;
		}

		[Token(Token = "0x600093D")]
		[Address(RVA = "0x3C975B4", Offset = "0x3C975B4", VA = "0x3C975B4", Slot = "25")]
		protected virtual Transform GetTransform()
		{
			return null;
		}

		[Token(Token = "0x600093E")]
		[Address(RVA = "0x3C6D768", Offset = "0x3C6D768", VA = "0x3C6D768")]
		protected void ApplyMotion()
		{
		}

		[Token(Token = "0x600093F")]
		[Address(RVA = "0x3C6B690", Offset = "0x3C6B690", VA = "0x3C6B690")]
		protected void CheckNodes(double from, double to)
		{
		}

		[Token(Token = "0x6000940")]
		[Address(RVA = "0x3C701B8", Offset = "0x3C701B8", VA = "0x3C701B8")]
		protected void InvokeNodes()
		{
		}

		[Token(Token = "0x6000941")]
		[Address(RVA = "0x3C6A544", Offset = "0x3C6A544", VA = "0x3C6A544")]
		protected void CheckTriggers(double from, double to)
		{
		}

		[Token(Token = "0x6000942")]
		[Address(RVA = "0x3C9C0EC", Offset = "0x3C9C0EC", VA = "0x3C9C0EC")]
		private NodeConnection GetJunction(int pointIndex)
		{
			return null;
		}

		[Token(Token = "0x6000943")]
		[Address(RVA = "0x3C6F9F0", Offset = "0x3C6F9F0", VA = "0x3C6F9F0")]
		protected void InvokeTriggers()
		{
		}

		[Token(Token = "0x6000944")]
		[Address(RVA = "0x3C62550", Offset = "0x3C62550", VA = "0x3C62550")]
		protected void RefreshTargets()
		{
		}

		[Token(Token = "0x6000945")]
		[Address(RVA = "0x3C9D484", Offset = "0x3C9D484", VA = "0x3C9D484")]
		private void AddTriggerToQueue(SplineTrigger trigger)
		{
		}

		[Token(Token = "0x6000946")]
		[Address(RVA = "0x3C70CD4", Offset = "0x3C70CD4", VA = "0x3C70CD4")]
		public SplineTracer()
		{
		}
	}
	[Token(Token = "0x2000139")]
	[ExecuteInEditMode]
	public class SplineUser : MonoBehaviour, ISerializationCallbackReceiver
	{
		[Token(Token = "0x20001F2")]
		public enum UpdateMethod
		{
			[Token(Token = "0x4000978")]
			Update,
			[Token(Token = "0x4000979")]
			FixedUpdate,
			[Token(Token = "0x400097A")]
			LateUpdate
		}

		[Token(Token = "0x400060B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public UpdateMethod updateMethod;

		[Token(Token = "0x400060C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[HideInInspector]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xCFEECC", Offset = "0xCFEECC")]
		private SplineComputer _spline;

		[Token(Token = "0x400060D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[HideInInspector]
		private bool _autoUpdate;

		[Token(Token = "0x400060E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[HideInInspector]
		protected RotationModifier _rotationModifier;

		[Token(Token = "0x400060F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[HideInInspector]
		protected OffsetModifier _offsetModifier;

		[Token(Token = "0x4000610")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[HideInInspector]
		protected ColorModifier _colorModifier;

		[Token(Token = "0x4000611")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		[HideInInspector]
		protected SizeModifier _sizeModifier;

		[Token(Token = "0x4000612")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[HideInInspector]
		private SampleCollection sampleCollection;

		[Token(Token = "0x4000613")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		[HideInInspector]
		private SplineSample clipFromSample;

		[Token(Token = "0x4000614")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		[HideInInspector]
		private SplineSample clipToSample;

		[Token(Token = "0x4000615")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		[HideInInspector]
		private bool _loopSamples;

		[Token(Token = "0x4000616")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		[HideInInspector]
		private double _clipFrom;

		[Token(Token = "0x4000617")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		[HideInInspector]
		private double _clipTo;

		[Token(Token = "0x4000618")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		[HideInInspector]
		private float animClipFrom;

		[Token(Token = "0x4000619")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[SerializeField]
		[HideInInspector]
		private float animClipTo;

		[Token(Token = "0x400061A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private bool rebuild;

		[Token(Token = "0x400061B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
		private bool getSamples;

		[Token(Token = "0x400061C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8A")]
		private bool postBuild;

		[Token(Token = "0x400061D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		protected Transform trs;

		[Token(Token = "0x400061E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		[HideInInspector]
		private int _sampleCount;

		[Token(Token = "0x400061F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[SerializeField]
		[HideInInspector]
		private int startSampleIndex;

		[Token(Token = "0x4000620")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		protected SplineSample evalResult;

		[Token(Token = "0x4000621")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[HideInInspector]
		public bool multithreaded;

		[Token(Token = "0x4000622")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA9")]
		[HideInInspector]
		public bool buildOnAwake;

		[Token(Token = "0x4000623")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAA")]
		[HideInInspector]
		public bool buildOnEnable;

		[Token(Token = "0x4000624")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAB")]
		[SerializeField]
		[HideInInspector]
		private bool _isUpdated;

		[Token(Token = "0x170000EE")]
		public SplineComputer spline
		{
			[Token(Token = "0x6000947")]
			[Address(RVA = "0x3C68AB8", Offset = "0x3C68AB8", VA = "0x3C68AB8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000948")]
			[Address(RVA = "0x3CA0810", Offset = "0x3CA0810", VA = "0x3CA0810")]
			set
			{
			}
		}

		[Token(Token = "0x170000EF")]
		public double clipFrom
		{
			[Token(Token = "0x6000949")]
			[Address(RVA = "0x3C68D24", Offset = "0x3C68D24", VA = "0x3C68D24")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x600094A")]
			[Address(RVA = "0x3CA1408", Offset = "0x3CA1408", VA = "0x3CA1408")]
			set
			{
			}
		}

		[Token(Token = "0x170000F0")]
		public double clipTo
		{
			[Token(Token = "0x600094B")]
			[Address(RVA = "0x3C68FA0", Offset = "0x3C68FA0", VA = "0x3C68FA0")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x600094C")]
			[Address(RVA = "0x3CA1D30", Offset = "0x3CA1D30", VA = "0x3CA1D30")]
			set
			{
			}
		}

		[Token(Token = "0x170000F1")]
		public bool autoUpdate
		{
			[Token(Token = "0x600094D")]
			[Address(RVA = "0x3CA2658", Offset = "0x3CA2658", VA = "0x3CA2658")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600094E")]
			[Address(RVA = "0x3CA28D4", Offset = "0x3CA28D4", VA = "0x3CA28D4")]
			set
			{
			}
		}

		[Token(Token = "0x170000F2")]
		public bool loopSamples
		{
			[Token(Token = "0x600094F")]
			[Address(RVA = "0x3CA2E70", Offset = "0x3CA2E70", VA = "0x3CA2E70")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000950")]
			[Address(RVA = "0x3CA30EC", Offset = "0x3CA30EC", VA = "0x3CA30EC")]
			set
			{
			}
		}

		[Token(Token = "0x170000F3")]
		public double span
		{
			[Token(Token = "0x6000951")]
			[Address(RVA = "0x3CA3894", Offset = "0x3CA3894", VA = "0x3CA3894")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x170000F4")]
		public bool samplesAreLooped
		{
			[Token(Token = "0x6000952")]
			[Address(RVA = "0x3C6A2C0", Offset = "0x3C6A2C0", VA = "0x3C6A2C0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000F5")]
		public RotationModifier rotationModifier
		{
			[Token(Token = "0x6000953")]
			[Address(RVA = "0x3CA3CA8", Offset = "0x3CA3CA8", VA = "0x3CA3CA8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F6")]
		public OffsetModifier offsetModifier
		{
			[Token(Token = "0x6000954")]
			[Address(RVA = "0x3CA3F14", Offset = "0x3CA3F14", VA = "0x3CA3F14")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F7")]
		public ColorModifier colorModifier
		{
			[Token(Token = "0x6000955")]
			[Address(RVA = "0x3CA4180", Offset = "0x3CA4180", VA = "0x3CA4180")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F8")]
		public SizeModifier sizeModifier
		{
			[Token(Token = "0x6000956")]
			[Address(RVA = "0x3CA43EC", Offset = "0x3CA43EC", VA = "0x3CA43EC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F9")]
		public int sampleCount
		{
			[Token(Token = "0x6000957")]
			[Address(RVA = "0x3C762BC", Offset = "0x3C762BC", VA = "0x3C762BC")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6000958")]
		[Address(RVA = "0x3CA4650", Offset = "0x3CA4650", VA = "0x3CA4650", Slot = "6")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6000959")]
		[Address(RVA = "0x3C63540", Offset = "0x3C63540", VA = "0x3C63540", Slot = "7")]
		protected virtual void Reset()
		{
		}

		[Token(Token = "0x600095A")]
		[Address(RVA = "0x3CA4F44", Offset = "0x3CA4F44", VA = "0x3CA4F44", Slot = "8")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x600095B")]
		[Address(RVA = "0x3CA5398", Offset = "0x3CA5398", VA = "0x3CA5398", Slot = "9")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x600095C")]
		[Address(RVA = "0x3CA55A8", Offset = "0x3CA55A8", VA = "0x3CA55A8", Slot = "10")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x600095D")]
		[Address(RVA = "0x3CA57B8", Offset = "0x3CA57B8", VA = "0x3CA57B8", Slot = "11")]
		protected virtual void OnDidApplyAnimationProperties()
		{
		}

		[Token(Token = "0x600095E")]
		[Address(RVA = "0x3CA6A40", Offset = "0x3CA6A40", VA = "0x3CA6A40")]
		public SplineSample GetSampleRaw(int index)
		{
			return null;
		}

		[Token(Token = "0x600095F")]
		[Address(RVA = "0x3C77E1C", Offset = "0x3C77E1C", VA = "0x3C77E1C")]
		public void GetSample(int index, SplineSample target)
		{
		}

		[Token(Token = "0x6000960")]
		[Address(RVA = "0x3CA7C14", Offset = "0x3CA7C14", VA = "0x3CA7C14", Slot = "12")]
		public virtual void Rebuild()
		{
		}

		[Token(Token = "0x6000961")]
		[Address(RVA = "0x3CA8008", Offset = "0x3CA8008", VA = "0x3CA8008", Slot = "13")]
		public virtual void RebuildImmediate()
		{
		}

		[Token(Token = "0x6000962")]
		[Address(RVA = "0x3CA8908", Offset = "0x3CA8908", VA = "0x3CA8908")]
		private void Update()
		{
		}

		[Token(Token = "0x6000963")]
		[Address(RVA = "0x3CA9F30", Offset = "0x3CA9F30", VA = "0x3CA9F30")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000964")]
		[Address(RVA = "0x3CAA524", Offset = "0x3CAA524", VA = "0x3CAA524")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000965")]
		[Address(RVA = "0x3CA8EF8", Offset = "0x3CA8EF8", VA = "0x3CA8EF8")]
		private void RunUpdate()
		{
		}

		[Token(Token = "0x6000966")]
		[Address(RVA = "0x3CAAB18", Offset = "0x3CAAB18", VA = "0x3CAAB18")]
		private void BuildThreaded()
		{
		}

		[Token(Token = "0x6000967")]
		[Address(RVA = "0x3CAAE60", Offset = "0x3CAAE60", VA = "0x3CAAE60")]
		private void ResampleAndBuildThreaded()
		{
		}

		[Token(Token = "0x6000968")]
		[Address(RVA = "0x3CAB270", Offset = "0x3CAB270", VA = "0x3CAB270", Slot = "14")]
		protected virtual void Run()
		{
		}

		[Token(Token = "0x6000969")]
		[Address(RVA = "0x3C6533C", Offset = "0x3C6533C", VA = "0x3C6533C", Slot = "15")]
		protected virtual void LateRun()
		{
		}

		[Token(Token = "0x600096A")]
		[Address(RVA = "0x3CAB480", Offset = "0x3CAB480", VA = "0x3CAB480", Slot = "16")]
		protected virtual void Build()
		{
		}

		[Token(Token = "0x600096B")]
		[Address(RVA = "0x3CAB690", Offset = "0x3CAB690", VA = "0x3CAB690", Slot = "17")]
		protected virtual void PostBuild()
		{
		}

		[Token(Token = "0x600096C")]
		[Address(RVA = "0x3CAB8A0", Offset = "0x3CAB8A0", VA = "0x3CAB8A0", Slot = "18")]
		protected virtual void OnSplineChanged()
		{
		}

		[Token(Token = "0x600096D")]
		[Address(RVA = "0x3C97894", Offset = "0x3C97894", VA = "0x3C97894")]
		public void ModifySample(SplineSample source, SplineSample destination)
		{
		}

		[Token(Token = "0x600096E")]
		[Address(RVA = "0x3CABAB0", Offset = "0x3CABAB0", VA = "0x3CABAB0")]
		public void ModifySample(SplineSample sample)
		{
		}

		[Token(Token = "0x600096F")]
		[Address(RVA = "0x3CAC0BC", Offset = "0x3CAC0BC", VA = "0x3CAC0BC")]
		public void SetClipRange(double from, double to)
		{
		}

		[Token(Token = "0x6000970")]
		[Address(RVA = "0x3CA5EA8", Offset = "0x3CA5EA8", VA = "0x3CA5EA8")]
		private void GetSamples()
		{
		}

		[Token(Token = "0x6000971")]
		[Address(RVA = "0x3C6921C", Offset = "0x3C6921C", VA = "0x3C6921C")]
		public double ClipPercent(double percent)
		{
			return default(double);
		}

		[Token(Token = "0x6000972")]
		[Address(RVA = "0x3CAC7E8", Offset = "0x3CAC7E8", VA = "0x3CAC7E8")]
		public void ClipPercent(ref double percent)
		{
		}

		[Token(Token = "0x6000973")]
		[Address(RVA = "0x3CADC60", Offset = "0x3CADC60", VA = "0x3CADC60")]
		public double UnclipPercent(double percent)
		{
			return default(double);
		}

		[Token(Token = "0x6000974")]
		[Address(RVA = "0x3C9AB74", Offset = "0x3C9AB74", VA = "0x3C9AB74")]
		public void UnclipPercent(ref double percent)
		{
		}

		[Token(Token = "0x6000975")]
		[Address(RVA = "0x3CADFB4", Offset = "0x3CADFB4", VA = "0x3CADFB4")]
		private int GetSampleIndex(double percent)
		{
			return default(int);
		}

		[Token(Token = "0x6000976")]
		[Address(RVA = "0x3CAE3AC", Offset = "0x3CAE3AC", VA = "0x3CAE3AC")]
		public Vector3 EvaluatePosition(double percent)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000977")]
		[Address(RVA = "0x3C95C7C", Offset = "0x3C95C7C", VA = "0x3C95C7C")]
		public void Evaluate(double percent, SplineSample result)
		{
		}

		[Token(Token = "0x6000978")]
		[Address(RVA = "0x3CAE744", Offset = "0x3CAE744", VA = "0x3CAE744")]
		public SplineSample Evaluate(double percent)
		{
			return null;
		}

		[Token(Token = "0x6000979")]
		[Address(RVA = "0x3CAECE4", Offset = "0x3CAECE4", VA = "0x3CAECE4")]
		public void Evaluate(ref SplineSample[] results, double from = 0.0, double to = 1.0)
		{
		}

		[Token(Token = "0x600097A")]
		[Address(RVA = "0x3CAF4C8", Offset = "0x3CAF4C8", VA = "0x3CAF4C8")]
		public void EvaluatePositions(ref Vector3[] positions, double from = 0.0, double to = 1.0)
		{
		}

		[Token(Token = "0x600097B")]
		[Address(RVA = "0x3CAF8E0", Offset = "0x3CAF8E0", VA = "0x3CAF8E0")]
		public double Travel(double start, float distance, Spline.Direction direction, out float moved)
		{
			return default(double);
		}

		[Token(Token = "0x600097C")]
		[Address(RVA = "0x3C96CB4", Offset = "0x3C96CB4", VA = "0x3C96CB4")]
		public double Travel(double start, float distance, Spline.Direction direction = Spline.Direction.Forward)
		{
			return default(double);
		}

		[Token(Token = "0x600097D")]
		[Address(RVA = "0x3CB03E0", Offset = "0x3CB03E0", VA = "0x3CB03E0")]
		public double TravelWithOffset(double start, float distance, Spline.Direction direction, Vector3 offset, out float moved)
		{
			return default(double);
		}

		[Token(Token = "0x600097E")]
		[Address(RVA = "0x3CB0F18", Offset = "0x3CB0F18", VA = "0x3CB0F18", Slot = "19")]
		public virtual void Project(Vector3 position, SplineSample result, double from = 0.0, double to = 1.0)
		{
		}

		[Token(Token = "0x600097F")]
		[Address(RVA = "0x3CB1694", Offset = "0x3CB1694", VA = "0x3CB1694")]
		public float CalculateLength(double from = 0.0, double to = 1.0)
		{
			return default(float);
		}

		[Token(Token = "0x6000980")]
		[Address(RVA = "0x3CB1A9C", Offset = "0x3CB1A9C", VA = "0x3CB1A9C")]
		public float CalculateLengthWithOffset(Vector3 offset, double from = 0.0, double to = 1.0)
		{
			return default(float);
		}

		[Token(Token = "0x6000981")]
		[Address(RVA = "0x3CB1ED8", Offset = "0x3CB1ED8", VA = "0x3CB1ED8", Slot = "4")]
		public void OnBeforeSerialize()
		{
		}

		[Token(Token = "0x6000982")]
		[Address(RVA = "0x3CB2244", Offset = "0x3CB2244", VA = "0x3CB2244", Slot = "5")]
		public void OnAfterDeserialize()
		{
		}

		[Token(Token = "0x6000983")]
		[Address(RVA = "0x3C9E768", Offset = "0x3C9E768", VA = "0x3C9E768")]
		public SplineUser()
		{
		}
	}
	[Token(Token = "0x200013A")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xCF9688", Offset = "0xCF9688")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xCF9688", Offset = "0xCF9688")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xCF9688", Offset = "0xCF9688")]
	public class SurfaceGenerator : MeshGenerator
	{
		[Token(Token = "0x4000625")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[SerializeField]
		[HideInInspector]
		private float _expand;

		[Token(Token = "0x4000626")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		[SerializeField]
		[HideInInspector]
		private float _extrude;

		[Token(Token = "0x4000627")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[SerializeField]
		[HideInInspector]
		private Vector2 _sideUvScale;

		[Token(Token = "0x4000628")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[SerializeField]
		[HideInInspector]
		private Vector2 _sideUvOffset;

		[Token(Token = "0x4000629")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[SerializeField]
		[HideInInspector]
		private SplineComputer _extrudeSpline;

		[Token(Token = "0x400062A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[SerializeField]
		[HideInInspector]
		private SplineSample[] extrudeResults;

		[Token(Token = "0x400062B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		[SerializeField]
		[HideInInspector]
		private Vector3[] identityVertices;

		[Token(Token = "0x400062C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		[SerializeField]
		[HideInInspector]
		private Vector3[] identityNormals;

		[Token(Token = "0x400062D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		[SerializeField]
		[HideInInspector]
		private Vector2[] projectedVerts;

		[Token(Token = "0x400062E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		[SerializeField]
		[HideInInspector]
		private int[] surfaceTris;

		[Token(Token = "0x400062F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		[SerializeField]
		[HideInInspector]
		private int[] wallTris;

		[Token(Token = "0x4000630")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		[SerializeField]
		[HideInInspector]
		private double _extrudeFrom;

		[Token(Token = "0x4000631")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		[SerializeField]
		[HideInInspector]
		private double _extrudeTo;

		[Token(Token = "0x4000632")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		[SerializeField]
		[HideInInspector]
		private bool _uniformUvs;

		[Token(Token = "0x170000FA")]
		public float expand
		{
			[Token(Token = "0x6000984")]
			[Address(RVA = "0x3CB2B50", Offset = "0x3CB2B50", VA = "0x3CB2B50")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000985")]
			[Address(RVA = "0x3CB2DCC", Offset = "0x3CB2DCC", VA = "0x3CB2DCC")]
			set
			{
			}
		}

		[Token(Token = "0x170000FB")]
		public float extrude
		{
			[Token(Token = "0x6000986")]
			[Address(RVA = "0x3CB32A4", Offset = "0x3CB32A4", VA = "0x3CB32A4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000987")]
			[Address(RVA = "0x3CB3520", Offset = "0x3CB3520", VA = "0x3CB3520")]
			set
			{
			}
		}

		[Token(Token = "0x170000FC")]
		public double extrudeClipFrom
		{
			[Token(Token = "0x6000988")]
			[Address(RVA = "0x3CB39F8", Offset = "0x3CB39F8", VA = "0x3CB39F8")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x6000989")]
			[Address(RVA = "0x3CB3C74", Offset = "0x3CB3C74", VA = "0x3CB3C74")]
			set
			{
			}
		}

		[Token(Token = "0x170000FD")]
		public double extrudeClipTo
		{
			[Token(Token = "0x600098A")]
			[Address(RVA = "0x3CB414C", Offset = "0x3CB414C", VA = "0x3CB414C")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x600098B")]
			[Address(RVA = "0x3CB43C8", Offset = "0x3CB43C8", VA = "0x3CB43C8")]
			set
			{
			}
		}

		[Token(Token = "0x170000FE")]
		public Vector2 sideUvScale
		{
			[Token(Token = "0x600098C")]
			[Address(RVA = "0x3CB48A0", Offset = "0x3CB48A0", VA = "0x3CB48A0")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x600098D")]
			[Address(RVA = "0x3CB4B24", Offset = "0x3CB4B24", VA = "0x3CB4B24")]
			set
			{
			}
		}

		[Token(Token = "0x170000FF")]
		public Vector2 sideUvOffset
		{
			[Token(Token = "0x600098E")]
			[Address(RVA = "0x3CB5108", Offset = "0x3CB5108", VA = "0x3CB5108")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x600098F")]
			[Address(RVA = "0x3CB538C", Offset = "0x3CB538C", VA = "0x3CB538C")]
			set
			{
			}
		}

		[Token(Token = "0x17000100")]
		public SplineComputer extrudeSpline
		{
			[Token(Token = "0x6000990")]
			[Address(RVA = "0x3CB5970", Offset = "0x3CB5970", VA = "0x3CB5970")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000991")]
			[Address(RVA = "0x3CB5BDC", Offset = "0x3CB5BDC", VA = "0x3CB5BDC")]
			set
			{
			}
		}

		[Token(Token = "0x17000101")]
		public bool uniformUvs
		{
			[Token(Token = "0x6000992")]
			[Address(RVA = "0x3CB659C", Offset = "0x3CB659C", VA = "0x3CB659C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000993")]
			[Address(RVA = "0x3CB6818", Offset = "0x3CB6818", VA = "0x3CB6818")]
			set
			{
			}
		}

		[Token(Token = "0x6000994")]
		[Address(RVA = "0x3CB6CF8", Offset = "0x3CB6CF8", VA = "0x3CB6CF8", Slot = "6")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6000995")]
		[Address(RVA = "0x3CB70BC", Offset = "0x3CB70BC", VA = "0x3CB70BC", Slot = "20")]
		protected override void BuildMesh()
		{
		}

		[Token(Token = "0x6000996")]
		[Address(RVA = "0x3CB7664", Offset = "0x3CB7664", VA = "0x3CB7664")]
		public void Generate()
		{
		}

		[Token(Token = "0x6000997")]
		[Address(RVA = "0x3CC411C", Offset = "0x3CC411C", VA = "0x3CC411C")]
		private void GenerateSurfaceTris(bool flip)
		{
		}

		[Token(Token = "0x6000998")]
		[Address(RVA = "0x3CC5BD0", Offset = "0x3CC5BD0", VA = "0x3CC5BD0")]
		private int WriteTris(ref int[] tris, ref int[] target, int vertexOffset, int trisOffset, bool flip)
		{
			return default(int);
		}

		[Token(Token = "0x6000999")]
		[Address(RVA = "0x3CC38D0", Offset = "0x3CC38D0", VA = "0x3CC38D0")]
		private bool IsClockwise(Vector2[] points2D)
		{
			return default(bool);
		}

		[Token(Token = "0x600099A")]
		[Address(RVA = "0x3CC45E0", Offset = "0x3CC45E0", VA = "0x3CC45E0")]
		private void GetIdentityVerts(Vector3 center, Vector3 normal, bool clockwise)
		{
		}

		[Token(Token = "0x600099B")]
		[Address(RVA = "0x3CC12D8", Offset = "0x3CC12D8", VA = "0x3CC12D8")]
		private void GetProjectedVertices(int count, out Vector3 center, out Vector3 normal)
		{
		}

		[Token(Token = "0x600099C")]
		[Address(RVA = "0x3CC68B4", Offset = "0x3CC68B4", VA = "0x3CC68B4")]
		public SurfaceGenerator()
		{
		}
	}
	[Token(Token = "0x200013B")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xCF9738", Offset = "0xCF9738")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xCF9738", Offset = "0xCF9738")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xCF9738", Offset = "0xCF9738")]
	public class TubeGenerator : MeshGenerator
	{
		[Token(Token = "0x20001F3")]
		public enum CapMethod
		{
			[Token(Token = "0x400097C")]
			None,
			[Token(Token = "0x400097D")]
			Flat,
			[Token(Token = "0x400097E")]
			Round
		}

		[Token(Token = "0x4000633")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[SerializeField]
		[HideInInspector]
		private int _sides;

		[Token(Token = "0x4000634")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		[SerializeField]
		[HideInInspector]
		private int _roundCapLatitude;

		[Token(Token = "0x4000635")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[SerializeField]
		[HideInInspector]
		private CapMethod _capMode;

		[Token(Token = "0x4000636")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		[SerializeField]
		[HideInInspector]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCFF690", Offset = "0xCFF690")]
		private float _revolve;

		[Token(Token = "0x4000637")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[SerializeField]
		[HideInInspector]
		private float _capUVScale;

		[Token(Token = "0x4000638")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		private int bodyVertexCount;

		[Token(Token = "0x4000639")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private int bodyTrisCount;

		[Token(Token = "0x400063A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
		private int capVertexCount;

		[Token(Token = "0x400063B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private int capTrisCount;

		[Token(Token = "0x17000102")]
		public int sides
		{
			[Token(Token = "0x600099D")]
			[Address(RVA = "0x33D96F0", Offset = "0x33D96F0", VA = "0x33D96F0")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600099E")]
			[Address(RVA = "0x33D995C", Offset = "0x33D995C", VA = "0x33D995C")]
			set
			{
			}
		}

		[Token(Token = "0x17000103")]
		public CapMethod capMode
		{
			[Token(Token = "0x600099F")]
			[Address(RVA = "0x33D9F54", Offset = "0x33D9F54", VA = "0x33D9F54")]
			get
			{
				return default(CapMethod);
			}
			[Token(Token = "0x60009A0")]
			[Address(RVA = "0x33DA1B8", Offset = "0x33DA1B8", VA = "0x33DA1B8")]
			set
			{
			}
		}

		[Token(Token = "0x17000104")]
		public int roundCapLatitude
		{
			[Token(Token = "0x60009A1")]
			[Address(RVA = "0x33DA690", Offset = "0x33DA690", VA = "0x33DA690")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60009A2")]
			[Address(RVA = "0x33DA8FC", Offset = "0x33DA8FC", VA = "0x33DA8FC")]
			set
			{
			}
		}

		[Token(Token = "0x17000105")]
		public float revolve
		{
			[Token(Token = "0x60009A3")]
			[Address(RVA = "0x33DAFB8", Offset = "0x33DAFB8", VA = "0x33DAFB8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60009A4")]
			[Address(RVA = "0x33DB234", Offset = "0x33DB234", VA = "0x33DB234")]
			set
			{
			}
		}

		[Token(Token = "0x17000106")]
		public float capUVScale
		{
			[Token(Token = "0x60009A5")]
			[Address(RVA = "0x33DB70C", Offset = "0x33DB70C", VA = "0x33DB70C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60009A6")]
			[Address(RVA = "0x33DB988", Offset = "0x33DB988", VA = "0x33DB988")]
			set
			{
			}
		}

		[Token(Token = "0x17000107")]
		private bool useCap
		{
			[Token(Token = "0x60009A7")]
			[Address(RVA = "0x33DBE60", Offset = "0x33DBE60", VA = "0x33DBE60")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60009A8")]
		[Address(RVA = "0x33DC528", Offset = "0x33DC528", VA = "0x33DC528", Slot = "7")]
		protected override void Reset()
		{
		}

		[Token(Token = "0x60009A9")]
		[Address(RVA = "0x33DC804", Offset = "0x33DC804", VA = "0x33DC804", Slot = "6")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60009AA")]
		[Address(RVA = "0x33DCBC8", Offset = "0x33DCBC8", VA = "0x33DCBC8", Slot = "20")]
		protected override void BuildMesh()
		{
		}

		[Token(Token = "0x60009AB")]
		[Address(RVA = "0x33DDF78", Offset = "0x33DDF78", VA = "0x33DDF78")]
		private void Generate()
		{
		}

		[Token(Token = "0x60009AC")]
		[Address(RVA = "0x33E0B20", Offset = "0x33E0B20", VA = "0x33E0B20")]
		private void GenerateFlatCaps()
		{
		}

		[Token(Token = "0x60009AD")]
		[Address(RVA = "0x33E3A38", Offset = "0x33E3A38", VA = "0x33E3A38")]
		private void GenerateRoundCaps()
		{
		}

		[Token(Token = "0x60009AE")]
		[Address(RVA = "0x33EB754", Offset = "0x33EB754", VA = "0x33EB754")]
		public TubeGenerator()
		{
		}
	}
	[Token(Token = "0x200013C")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xCF97E8", Offset = "0xCF97E8")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xCF97E8", Offset = "0xCF97E8")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xCF97E8", Offset = "0xCF97E8")]
	public class WaveformGenerator : MeshGenerator
	{
		[Token(Token = "0x20001F4")]
		public enum Axis
		{
			[Token(Token = "0x4000980")]
			X,
			[Token(Token = "0x4000981")]
			Y,
			[Token(Token = "0x4000982")]
			Z
		}

		[Token(Token = "0x20001F5")]
		public enum Space
		{
			[Token(Token = "0x4000984")]
			World,
			[Token(Token = "0x4000985")]
			Local
		}

		[Token(Token = "0x20001F6")]
		public enum UVWrapMode
		{
			[Token(Token = "0x4000987")]
			Clamp,
			[Token(Token = "0x4000988")]
			UniformX,
			[Token(Token = "0x4000989")]
			UniformY,
			[Token(Token = "0x400098A")]
			Uniform
		}

		[Token(Token = "0x400063C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[SerializeField]
		[HideInInspector]
		private Axis _axis;

		[Token(Token = "0x400063D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		[SerializeField]
		[HideInInspector]
		private bool _symmetry;

		[Token(Token = "0x400063E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[SerializeField]
		[HideInInspector]
		private UVWrapMode _uvWrapMode;

		[Token(Token = "0x400063F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		[SerializeField]
		[HideInInspector]
		private int _slices;

		[Token(Token = "0x17000108")]
		public Axis axis
		{
			[Token(Token = "0x60009AF")]
			[Address(RVA = "0x33EBCBC", Offset = "0x33EBCBC", VA = "0x33EBCBC")]
			get
			{
				return default(Axis);
			}
			[Token(Token = "0x60009B0")]
			[Address(RVA = "0x33EBF28", Offset = "0x33EBF28", VA = "0x33EBF28")]
			set
			{
			}
		}

		[Token(Token = "0x17000109")]
		public bool symmetry
		{
			[Token(Token = "0x60009B1")]
			[Address(RVA = "0x33EC400", Offset = "0x33EC400", VA = "0x33EC400")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60009B2")]
			[Address(RVA = "0x33EC67C", Offset = "0x33EC67C", VA = "0x33EC67C")]
			set
			{
			}
		}

		[Token(Token = "0x1700010A")]
		public UVWrapMode uvWrapMode
		{
			[Token(Token = "0x60009B3")]
			[Address(RVA = "0x33ECB5C", Offset = "0x33ECB5C", VA = "0x33ECB5C")]
			get
			{
				return default(UVWrapMode);
			}
			[Token(Token = "0x60009B4")]
			[Address(RVA = "0x33ECDC8", Offset = "0x33ECDC8", VA = "0x33ECDC8")]
			set
			{
			}
		}

		[Token(Token = "0x1700010B")]
		public int slices
		{
			[Token(Token = "0x60009B5")]
			[Address(RVA = "0x33ED2A0", Offset = "0x33ED2A0", VA = "0x33ED2A0")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60009B6")]
			[Address(RVA = "0x33ED50C", Offset = "0x33ED50C", VA = "0x33ED50C")]
			set
			{
			}
		}

		[Token(Token = "0x60009B7")]
		[Address(RVA = "0x33EDB04", Offset = "0x33EDB04", VA = "0x33EDB04", Slot = "6")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60009B8")]
		[Address(RVA = "0x33EDEC8", Offset = "0x33EDEC8", VA = "0x33EDEC8", Slot = "20")]
		protected override void BuildMesh()
		{
		}

		[Token(Token = "0x60009B9")]
		[Address(RVA = "0x33F2A9C", Offset = "0x33F2A9C", VA = "0x33F2A9C", Slot = "16")]
		protected override void Build()
		{
		}

		[Token(Token = "0x60009BA")]
		[Address(RVA = "0x33F2D78", Offset = "0x33F2D78", VA = "0x33F2D78", Slot = "15")]
		protected override void LateRun()
		{
		}

		[Token(Token = "0x60009BB")]
		[Address(RVA = "0x33EE26C", Offset = "0x33EE26C", VA = "0x33EE26C")]
		private void Generate()
		{
		}

		[Token(Token = "0x60009BC")]
		[Address(RVA = "0x33F3054", Offset = "0x33F3054", VA = "0x33F3054")]
		public WaveformGenerator()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200013D")]
	public class CustomOffsetModule
	{
		[Serializable]
		[Token(Token = "0x20001F7")]
		public class Key
		{
			[Token(Token = "0x400098B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			private Vector2 _offset;

			[Token(Token = "0x400098C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[SerializeField]
			private double _from;

			[Token(Token = "0x400098D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[SerializeField]
			private double _to;

			[Token(Token = "0x400098E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[SerializeField]
			private double _center;

			[Token(Token = "0x400098F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[SerializeField]
			private bool _loop;

			[Token(Token = "0x4000990")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public AnimationCurve interpolation;

			[Token(Token = "0x170001CC")]
			public Vector2 offset
			{
				[Token(Token = "0x6000DBF")]
				[Address(RVA = "0x336F688", Offset = "0x336F688", VA = "0x336F688")]
				get
				{
					return default(Vector2);
				}
				[Token(Token = "0x6000DC0")]
				[Address(RVA = "0x336F908", Offset = "0x336F908", VA = "0x336F908")]
				set
				{
				}
			}

			[Token(Token = "0x170001CD")]
			public double center
			{
				[Token(Token = "0x6000DC1")]
				[Address(RVA = "0x336FB8C", Offset = "0x336FB8C", VA = "0x336FB8C")]
				get
				{
					return default(double);
				}
				[Token(Token = "0x6000DC2")]
				[Address(RVA = "0x336FE08", Offset = "0x336FE08", VA = "0x336FE08")]
				set
				{
				}
			}

			[Token(Token = "0x170001CE")]
			public double from
			{
				[Token(Token = "0x6000DC3")]
				[Address(RVA = "0x336EE80", Offset = "0x336EE80", VA = "0x336EE80")]
				get
				{
					return default(double);
				}
				[Token(Token = "0x6000DC4")]
				[Address(RVA = "0x337010C", Offset = "0x337010C", VA = "0x337010C")]
				set
				{
				}
			}

			[Token(Token = "0x170001CF")]
			public double to
			{
				[Token(Token = "0x6000DC5")]
				[Address(RVA = "0x336F0FC", Offset = "0x336F0FC", VA = "0x336F0FC")]
				get
				{
					return default(double);
				}
				[Token(Token = "0x6000DC6")]
				[Address(RVA = "0x3370410", Offset = "0x3370410", VA = "0x3370410")]
				set
				{
				}
			}

			[Token(Token = "0x170001D0")]
			public bool loop
			{
				[Token(Token = "0x6000DC7")]
				[Address(RVA = "0x3370714", Offset = "0x3370714", VA = "0x3370714")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x6000DC8")]
				[Address(RVA = "0x3370990", Offset = "0x3370990", VA = "0x3370990")]
				set
				{
				}
			}

			[Token(Token = "0x170001D1")]
			public double position
			{
				[Token(Token = "0x6000DC9")]
				[Address(RVA = "0x336E5A8", Offset = "0x336E5A8", VA = "0x336E5A8")]
				get
				{
					return default(double);
				}
				[Token(Token = "0x6000DCA")]
				[Address(RVA = "0x3370C18", Offset = "0x3370C18", VA = "0x3370C18")]
				set
				{
				}
			}

			[Token(Token = "0x6000DCB")]
			[Address(RVA = "0x336A25C", Offset = "0x336A25C", VA = "0x336A25C")]
			public Key(Vector2 o, double f, double t, double c)
			{
			}

			[Token(Token = "0x6000DCC")]
			[Address(RVA = "0x336F370", Offset = "0x336F370", VA = "0x336F370")]
			public float Evaluate(float t)
			{
				return default(float);
			}
		}

		[Token(Token = "0x4000640")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<Key> keys;

		[Token(Token = "0x4000641")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _blend;

		[Token(Token = "0x1700010C")]
		public float blend
		{
			[Token(Token = "0x60009BD")]
			[Address(RVA = "0x33693C8", Offset = "0x33693C8", VA = "0x33693C8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60009BE")]
			[Address(RVA = "0x3369644", Offset = "0x3369644", VA = "0x3369644")]
			set
			{
			}
		}

		[Token(Token = "0x60009BF")]
		[Address(RVA = "0x3369970", Offset = "0x3369970", VA = "0x3369970")]
		public CustomOffsetModule()
		{
		}

		[Token(Token = "0x60009C0")]
		[Address(RVA = "0x3369E80", Offset = "0x3369E80", VA = "0x3369E80")]
		public void AddKey(Vector2 offset, double f, double t, double c)
		{
		}

		[Token(Token = "0x60009C1")]
		[Address(RVA = "0x336AB98", Offset = "0x336AB98", VA = "0x336AB98")]
		public Vector2 Evaluate(double time)
		{
			return default(Vector2);
		}
	}
	[Serializable]
	[Token(Token = "0x200013E")]
	public class CustomRotationModule
	{
		[Serializable]
		[Token(Token = "0x20001F8")]
		public class Key
		{
			[Token(Token = "0x4000991")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			private Vector3 _rotation;

			[Token(Token = "0x4000992")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[SerializeField]
			private double _from;

			[Token(Token = "0x4000993")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[SerializeField]
			private double _to;

			[Token(Token = "0x4000994")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[SerializeField]
			private double _center;

			[Token(Token = "0x4000995")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[SerializeField]
			private bool _loop;

			[Token(Token = "0x4000996")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public AnimationCurve interpolation;

			[Token(Token = "0x170001D2")]
			public Vector3 rotation
			{
				[Token(Token = "0x6000DCD")]
				[Address(RVA = "0x33778C8", Offset = "0x33778C8", VA = "0x33778C8")]
				get
				{
					return default(Vector3);
				}
				[Token(Token = "0x6000DCE")]
				[Address(RVA = "0x3377B58", Offset = "0x3377B58", VA = "0x3377B58")]
				set
				{
				}
			}

			[Token(Token = "0x170001D3")]
			public double center
			{
				[Token(Token = "0x6000DCF")]
				[Address(RVA = "0x3377DEC", Offset = "0x3377DEC", VA = "0x3377DEC")]
				get
				{
					return default(double);
				}
				[Token(Token = "0x6000DD0")]
				[Address(RVA = "0x3378068", Offset = "0x3378068", VA = "0x3378068")]
				set
				{
				}
			}

			[Token(Token = "0x170001D4")]
			public double from
			{
				[Token(Token = "0x6000DD1")]
				[Address(RVA = "0x33770B8", Offset = "0x33770B8", VA = "0x33770B8")]
				get
				{
					return default(double);
				}
				[Token(Token = "0x6000DD2")]
				[Address(RVA = "0x337836C", Offset = "0x337836C", VA = "0x337836C")]
				set
				{
				}
			}

			[Token(Token = "0x170001D5")]
			public double to
			{
				[Token(Token = "0x6000DD3")]
				[Address(RVA = "0x3377334", Offset = "0x3377334", VA = "0x3377334")]
				get
				{
					return default(double);
				}
				[Token(Token = "0x6000DD4")]
				[Address(RVA = "0x3378670", Offset = "0x3378670", VA = "0x3378670")]
				set
				{
				}
			}

			[Token(Token = "0x170001D6")]
			public bool loop
			{
				[Token(Token = "0x6000DD5")]
				[Address(RVA = "0x3378974", Offset = "0x3378974", VA = "0x3378974")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x6000DD6")]
				[Address(RVA = "0x3378BF0", Offset = "0x3378BF0", VA = "0x3378BF0")]
				set
				{
				}
			}

			[Token(Token = "0x170001D7")]
			public double position
			{
				[Token(Token = "0x6000DD7")]
				[Address(RVA = "0x33767E0", Offset = "0x33767E0", VA = "0x33767E0")]
				get
				{
					return default(double);
				}
				[Token(Token = "0x6000DD8")]
				[Address(RVA = "0x3378E78", Offset = "0x3378E78", VA = "0x3378E78")]
				set
				{
				}
			}

			[Token(Token = "0x6000DD9")]
			[Address(RVA = "0x33722A0", Offset = "0x33722A0", VA = "0x33722A0")]
			public Key(Vector3 r, double f, double t, double c)
			{
			}

			[Token(Token = "0x6000DDA")]
			[Address(RVA = "0x33775B0", Offset = "0x33775B0", VA = "0x33775B0")]
			public float Evaluate(float t)
			{
				return default(float);
			}
		}

		[Token(Token = "0x4000642")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<Key> keys;

		[Token(Token = "0x4000643")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _blend;

		[Token(Token = "0x1700010D")]
		public float blend
		{
			[Token(Token = "0x60009C2")]
			[Address(RVA = "0x3371400", Offset = "0x3371400", VA = "0x3371400")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60009C3")]
			[Address(RVA = "0x337167C", Offset = "0x337167C", VA = "0x337167C")]
			set
			{
			}
		}

		[Token(Token = "0x60009C4")]
		[Address(RVA = "0x33719A8", Offset = "0x33719A8", VA = "0x33719A8")]
		public CustomRotationModule()
		{
		}

		[Token(Token = "0x60009C5")]
		[Address(RVA = "0x3371EB8", Offset = "0x3371EB8", VA = "0x3371EB8")]
		public void AddKey(Vector3 rotation, double f, double t, double c)
		{
		}

		[Token(Token = "0x60009C6")]
		[Address(RVA = "0x3372BFC", Offset = "0x3372BFC", VA = "0x3372BFC")]
		public Quaternion Evaluate(Quaternion baseRotation, double time)
		{
			return default(Quaternion);
		}
	}
	[Serializable]
	[Token(Token = "0x200013F")]
	public class ObjectSequence<T>
	{
		[Token(Token = "0x20001F9")]
		public enum Iteration
		{
			[Token(Token = "0x4000998")]
			Ordered,
			[Token(Token = "0x4000999")]
			Random
		}

		[Token(Token = "0x4000644")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public T startObject;

		[Token(Token = "0x4000645")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public T endObject;

		[Token(Token = "0x4000646")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public T[] objects;

		[Token(Token = "0x4000647")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Iteration iteration;

		[Token(Token = "0x4000648")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		[HideInInspector]
		private int _randomSeed;

		[Token(Token = "0x4000649")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		[HideInInspector]
		private int index;

		[Token(Token = "0x400064A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		[HideInInspector]
		private System.Random randomizer;

		[Token(Token = "0x1700010E")]
		public int randomSeed
		{
			[Token(Token = "0x60009C7")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60009C8")]
			set
			{
			}
		}

		[Token(Token = "0x60009C9")]
		public ObjectSequence()
		{
		}

		[Token(Token = "0x60009CA")]
		public T GetFirst()
		{
			return (T)null;
		}

		[Token(Token = "0x60009CB")]
		public T GetLast()
		{
			return (T)null;
		}

		[Token(Token = "0x60009CC")]
		public T Next()
		{
			return (T)null;
		}
	}
	[Serializable]
	[Token(Token = "0x2000140")]
	public class SampleCollection
	{
		[Token(Token = "0x400064B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[HideInInspector]
		public SplineSample[] samples;

		[Token(Token = "0x400064C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int[] optimizedIndices;

		[Token(Token = "0x400064D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SplineComputer.SampleMode sampleMode;

		[Token(Token = "0x400064E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private SplineSample _workSample;

		[Token(Token = "0x400064F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public double clipFrom;

		[Token(Token = "0x4000650")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public double clipTo;

		[Token(Token = "0x4000651")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public bool loopSamples;

		[Token(Token = "0x1700010F")]
		public int Count
		{
			[Token(Token = "0x60009CD")]
			[Address(RVA = "0x42EB448", Offset = "0x42EB448", VA = "0x42EB448")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000110")]
		private bool hasSamples
		{
			[Token(Token = "0x60009CE")]
			[Address(RVA = "0x42EB6C4", Offset = "0x42EB6C4", VA = "0x42EB6C4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60009CF")]
		[Address(RVA = "0x42EB9A8", Offset = "0x42EB9A8", VA = "0x42EB9A8")]
		public SampleCollection()
		{
		}

		[Token(Token = "0x60009D0")]
		[Address(RVA = "0x42EBFD8", Offset = "0x42EBFD8", VA = "0x42EBFD8")]
		public SampleCollection(SampleCollection input)
		{
		}

		[Token(Token = "0x60009D1")]
		[Address(RVA = "0x42ED77C", Offset = "0x42ED77C", VA = "0x42ED77C")]
		public int GetClippedSampleCount(double clipFrom, double clipTo, out int startIndex, out int endIndex)
		{
			return default(int);
		}

		[Token(Token = "0x60009D2")]
		[Address(RVA = "0x42EE68C", Offset = "0x42EE68C", VA = "0x42EE68C")]
		public void GetSamplingValues(double percent, out int sampleIndex, out double lerp)
		{
		}

		[Token(Token = "0x60009D3")]
		[Address(RVA = "0x42EF600", Offset = "0x42EF600", VA = "0x42EF600")]
		public Vector3 EvaluatePosition(double percent)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60009D4")]
		[Address(RVA = "0x42EFE5C", Offset = "0x42EFE5C", VA = "0x42EFE5C")]
		public SplineSample Evaluate(double percent)
		{
			return null;
		}

		[Token(Token = "0x60009D5")]
		[Address(RVA = "0x42F0298", Offset = "0x42F0298", VA = "0x42F0298")]
		public void Evaluate(double percent, SplineSample result)
		{
		}

		[Token(Token = "0x60009D6")]
		[Address(RVA = "0x42F0B78", Offset = "0x42F0B78", VA = "0x42F0B78")]
		public void Evaluate(ref SplineSample[] results, double from = 0.0, double to = 1.0)
		{
		}

		[Token(Token = "0x60009D7")]
		[Address(RVA = "0x42F246C", Offset = "0x42F246C", VA = "0x42F246C")]
		public void EvaluatePositions(ref Vector3[] positions, double from = 0.0, double to = 1.0)
		{
		}

		[Token(Token = "0x60009D8")]
		[Address(RVA = "0x42F3590", Offset = "0x42F3590", VA = "0x42F3590")]
		public double Travel(double start, float distance, Spline.Direction direction, out float moved, double clipFrom = 0.0, double clipTo = 1.0)
		{
			return default(double);
		}

		[Token(Token = "0x60009D9")]
		[Address(RVA = "0x42F61EC", Offset = "0x42F61EC", VA = "0x42F61EC")]
		public double TravelWithOffset(double start, float distance, Spline.Direction direction, Vector3 offset, out float moved, double clipFrom = 0.0, double clipTo = 1.0)
		{
			return default(double);
		}

		[Token(Token = "0x60009DA")]
		[Address(RVA = "0x42FA150", Offset = "0x42FA150", VA = "0x42FA150")]
		public double Travel(double start, float distance, Spline.Direction direction = Spline.Direction.Forward)
		{
			return default(double);
		}

		[Token(Token = "0x60009DB")]
		[Address(RVA = "0x42FA488", Offset = "0x42FA488", VA = "0x42FA488")]
		public void Project(Vector3 position, int controlPointCount, SplineSample result, double from = 0.0, double to = 1.0)
		{
		}

		[Token(Token = "0x60009DC")]
		[Address(RVA = "0x43005F4", Offset = "0x43005F4", VA = "0x43005F4")]
		private double GetSamplePercent(int sampleIndex)
		{
			return default(double);
		}

		[Token(Token = "0x60009DD")]
		[Address(RVA = "0x4300AF0", Offset = "0x4300AF0", VA = "0x4300AF0")]
		public float CalculateLength(double from = 0.0, double to = 1.0)
		{
			return default(float);
		}

		[Token(Token = "0x60009DE")]
		[Address(RVA = "0x4301C04", Offset = "0x4301C04", VA = "0x4301C04")]
		public float CalculateLengthWithOffset(Vector3 offset, double from = 0.0, double to = 1.0)
		{
			return default(float);
		}
	}
	[Serializable]
	[Token(Token = "0x2000141")]
	public class Spline
	{
		[Token(Token = "0x20001FA")]
		public enum Direction
		{
			[Token(Token = "0x400099B")]
			Forward = 1,
			[Token(Token = "0x400099C")]
			Backward = -1
		}

		[Token(Token = "0x20001FB")]
		public enum Type
		{
			[Token(Token = "0x400099E")]
			CatmullRom,
			[Token(Token = "0x400099F")]
			BSpline,
			[Token(Token = "0x40009A0")]
			Bezier,
			[Token(Token = "0x40009A1")]
			Linear
		}

		[Token(Token = "0x4000652")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SplinePoint[] points;

		[Token(Token = "0x4000653")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool closed;

		[Token(Token = "0x4000654")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Type type;

		[Token(Token = "0x4000655")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool linearAverageDirection;

		[Token(Token = "0x4000656")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AnimationCurve customValueInterpolation;

		[Token(Token = "0x4000657")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AnimationCurve customNormalInterpolation;

		[Token(Token = "0x4000658")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int sampleRate;

		[Token(Token = "0x4000659")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Vector3[] catPoints;

		[Token(Token = "0x17000111")]
		public bool isClosed
		{
			[Token(Token = "0x60009DF")]
			[Address(RVA = "0x42E3D28", Offset = "0x42E3D28", VA = "0x42E3D28")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60009E0")]
			[Address(RVA = "0x43067EC", Offset = "0x43067EC", VA = "0x43067EC")]
			set
			{
			}
		}

		[Token(Token = "0x17000112")]
		public double moveStep
		{
			[Token(Token = "0x60009E1")]
			[Address(RVA = "0x4306A0C", Offset = "0x4306A0C", VA = "0x4306A0C")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x60009E2")]
			[Address(RVA = "0x43071F4", Offset = "0x43071F4", VA = "0x43071F4")]
			set
			{
			}
		}

		[Token(Token = "0x17000113")]
		public int iterations
		{
			[Token(Token = "0x60009E3")]
			[Address(RVA = "0x4306E28", Offset = "0x4306E28", VA = "0x4306E28")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60009E4")]
		[Address(RVA = "0x42E28FC", Offset = "0x42E28FC", VA = "0x42E28FC")]
		public Spline(Type type)
		{
		}

		[Token(Token = "0x60009E5")]
		[Address(RVA = "0x4307410", Offset = "0x4307410", VA = "0x4307410")]
		public Spline(Type type, int sampleRate)
		{
		}

		[Token(Token = "0x60009E6")]
		[Address(RVA = "0x4307B04", Offset = "0x4307B04", VA = "0x4307B04")]
		public float CalculateLength(double from = 0.0, double to = 1.0, double resolution = 1.0)
		{
			return default(float);
		}

		[Token(Token = "0x60009E7")]
		[Address(RVA = "0x4309224", Offset = "0x4309224", VA = "0x4309224")]
		public double Project(Vector3 position, int subdivide = 4, double from = 0.0, double to = 1.0)
		{
			return default(double);
		}

		[Token(Token = "0x60009E8")]
		[Address(RVA = "0x430BE30", Offset = "0x430BE30", VA = "0x430BE30")]
		public bool Raycast(out RaycastHit hit, out double hitPercent, LayerMask layerMask, double resolution = 1.0, double from = 0.0, double to = 1.0, QueryTriggerInteraction hitTriggers = QueryTriggerInteraction.UseGlobal)
		{
			return default(bool);
		}

		[Token(Token = "0x60009E9")]
		[Address(RVA = "0x430D41C", Offset = "0x430D41C", VA = "0x430D41C")]
		public bool RaycastAll(out RaycastHit[] hits, out double[] hitPercents, LayerMask layerMask, double resolution = 1.0, double from = 0.0, double to = 1.0, QueryTriggerInteraction hitTriggers = QueryTriggerInteraction.UseGlobal)
		{
			return default(bool);
		}

		[Token(Token = "0x60009EA")]
		[Address(RVA = "0x430F35C", Offset = "0x430F35C", VA = "0x430F35C")]
		public double GetPointPercent(int pointIndex)
		{
			return default(double);
		}

		[Token(Token = "0x60009EB")]
		[Address(RVA = "0x4308C7C", Offset = "0x4308C7C", VA = "0x4308C7C")]
		public Vector3 EvaluatePosition(double percent)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60009EC")]
		[Address(RVA = "0x430FE40", Offset = "0x430FE40", VA = "0x430FE40")]
		public SplineSample Evaluate(double percent)
		{
			return null;
		}

		[Token(Token = "0x60009ED")]
		[Address(RVA = "0x43141B0", Offset = "0x43141B0", VA = "0x43141B0")]
		public SplineSample Evaluate(int pointIndex)
		{
			return null;
		}

		[Token(Token = "0x60009EE")]
		[Address(RVA = "0x4314670", Offset = "0x4314670", VA = "0x4314670")]
		public void Evaluate(SplineSample result, int pointIndex)
		{
		}

		[Token(Token = "0x60009EF")]
		[Address(RVA = "0x431027C", Offset = "0x431027C", VA = "0x431027C")]
		public void Evaluate(SplineSample result, double percent)
		{
		}

		[Token(Token = "0x60009F0")]
		[Address(RVA = "0x43151A0", Offset = "0x43151A0", VA = "0x43151A0")]
		public void Evaluate(ref SplineSample[] samples, double from = 0.0, double to = 1.0)
		{
		}

		[Token(Token = "0x60009F1")]
		[Address(RVA = "0x431640C", Offset = "0x431640C", VA = "0x431640C")]
		public void EvaluateUniform(ref SplineSample[] samples, ref double[] originalSamplePercents, double from = 0.0, double to = 1.0)
		{
		}

		[Token(Token = "0x60009F2")]
		[Address(RVA = "0x4319BFC", Offset = "0x4319BFC", VA = "0x4319BFC")]
		public void EvaluatePositions(ref Vector3[] positions, double from = 0.0, double to = 1.0)
		{
		}

		[Token(Token = "0x60009F3")]
		[Address(RVA = "0x4318168", Offset = "0x4318168", VA = "0x4318168")]
		public double Travel(double start, float distance, out float moved, Direction direction)
		{
			return default(double);
		}

		[Token(Token = "0x60009F4")]
		[Address(RVA = "0x431AD24", Offset = "0x431AD24", VA = "0x431AD24")]
		public double Travel(double start, float distance, Direction direction = Direction.Forward)
		{
			return default(double);
		}

		[Token(Token = "0x60009F5")]
		[Address(RVA = "0x430F688", Offset = "0x430F688", VA = "0x430F688")]
		public void EvaluatePosition(ref Vector3 point, double percent)
		{
		}

		[Token(Token = "0x60009F6")]
		[Address(RVA = "0x43149E8", Offset = "0x43149E8", VA = "0x43149E8")]
		public void EvaluateTangent(ref Vector3 tangent, double percent)
		{
		}

		[Token(Token = "0x60009F7")]
		[Address(RVA = "0x430A4B4", Offset = "0x430A4B4", VA = "0x430A4B4")]
		private double GetClosestPoint(int iterations, Vector3 point, double start, double end, int slices)
		{
			return default(double);
		}

		[Token(Token = "0x60009F8")]
		[Address(RVA = "0x42E3FBC", Offset = "0x42E3FBC", VA = "0x42E3FBC")]
		public void Break()
		{
		}

		[Token(Token = "0x60009F9")]
		[Address(RVA = "0x431C41C", Offset = "0x431C41C", VA = "0x431C41C")]
		public void Break(int at)
		{
		}

		[Token(Token = "0x60009FA")]
		[Address(RVA = "0x42E2F84", Offset = "0x42E2F84", VA = "0x42E2F84")]
		public void Close()
		{
		}

		[Token(Token = "0x60009FB")]
		[Address(RVA = "0x431D324", Offset = "0x431D324", VA = "0x431D324")]
		public void CatToBezierTangents()
		{
		}

		[Token(Token = "0x60009FC")]
		[Address(RVA = "0x431B054", Offset = "0x431B054", VA = "0x431B054")]
		private void GetPoint(ref Vector3 point, double percent, int pointIndex)
		{
		}

		[Token(Token = "0x60009FD")]
		[Address(RVA = "0x431BD90", Offset = "0x431BD90", VA = "0x431BD90")]
		private void GetTangent(ref Vector3 tangent, double percent, int pointIndex)
		{
		}

		[Token(Token = "0x60009FE")]
		[Address(RVA = "0x4324E00", Offset = "0x4324E00", VA = "0x4324E00")]
		private void LinearGetPoint(ref Vector3 point, double t, int i)
		{
		}

		[Token(Token = "0x60009FF")]
		[Address(RVA = "0x4327B6C", Offset = "0x4327B6C", VA = "0x4327B6C")]
		private void LinearGetTangent(ref Vector3 tangent, double t, int i)
		{
		}

		[Token(Token = "0x6000A00")]
		[Address(RVA = "0x43235FC", Offset = "0x43235FC", VA = "0x43235FC")]
		private void BSPGetPoint(ref Vector3 point, double time, int i)
		{
		}

		[Token(Token = "0x6000A01")]
		[Address(RVA = "0x43226AC", Offset = "0x43226AC", VA = "0x43226AC")]
		private void BezierGetPoint(ref Vector3 point, double t, int i)
		{
		}

		[Token(Token = "0x6000A02")]
		[Address(RVA = "0x4326954", Offset = "0x4326954", VA = "0x4326954")]
		private void BezierGetTangent(ref Vector3 tangent, double t, int i)
		{
		}

		[Token(Token = "0x6000A03")]
		[Address(RVA = "0x4320E50", Offset = "0x4320E50", VA = "0x4320E50")]
		private void CatmullRomGetPoint(ref Vector3 point, double t, int i)
		{
		}

		[Token(Token = "0x6000A04")]
		[Address(RVA = "0x4325898", Offset = "0x4325898", VA = "0x4325898")]
		private void GetCatmullRomTangent(ref Vector3 direction, double t, int i)
		{
		}

		[Token(Token = "0x6000A05")]
		[Address(RVA = "0x431F780", Offset = "0x431F780", VA = "0x431F780")]
		private void GetCatPoints(int i)
		{
		}

		[Token(Token = "0x6000A06")]
		[Address(RVA = "0x42F1CC4", Offset = "0x42F1CC4", VA = "0x42F1CC4")]
		public static void FormatFromTo(ref double from, ref double to, bool preventInvert = true)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000142")]
	public class SplineAddress
	{
		[Serializable]
		[Token(Token = "0x20001FC")]
		public class Element
		{
			[Token(Token = "0x40009A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SplineComputer computer;

			[Token(Token = "0x40009A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[SerializeField]
			private int _startPoint;

			[Token(Token = "0x40009A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[SerializeField]
			private int _endPoint;

			[Token(Token = "0x170001D8")]
			public int startPoint
			{
				[Token(Token = "0x6000DDB")]
				[Address(RVA = "0x3FB5DB0", Offset = "0x3FB5DB0", VA = "0x3FB5DB0")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6000DDC")]
				[Address(RVA = "0x3FB6430", Offset = "0x3FB6430", VA = "0x3FB6430")]
				set
				{
				}
			}

			[Token(Token = "0x170001D9")]
			public int endPoint
			{
				[Token(Token = "0x6000DDD")]
				[Address(RVA = "0x3FB601C", Offset = "0x3FB601C", VA = "0x3FB601C")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6000DDE")]
				[Address(RVA = "0x3FA3BF8", Offset = "0x3FA3BF8", VA = "0x3FA3BF8")]
				set
				{
				}
			}

			[Token(Token = "0x170001DA")]
			public double startPercent
			{
				[Token(Token = "0x6000DDF")]
				[Address(RVA = "0x3FAB848", Offset = "0x3FAB848", VA = "0x3FAB848")]
				get
				{
					return default(double);
				}
			}

			[Token(Token = "0x170001DB")]
			public double endPercent
			{
				[Token(Token = "0x6000DE0")]
				[Address(RVA = "0x3FABBCC", Offset = "0x3FABBCC", VA = "0x3FABBCC")]
				get
				{
					return default(double);
				}
			}

			[Token(Token = "0x170001DC")]
			public int span
			{
				[Token(Token = "0x6000DE1")]
				[Address(RVA = "0x3FAB1C0", Offset = "0x3FAB1C0", VA = "0x3FAB1C0")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x6000DE2")]
			[Address(RVA = "0x3FA3964", Offset = "0x3FA3964", VA = "0x3FA3964")]
			public Element()
			{
			}
		}

		[Token(Token = "0x400065A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Element[] _elements;

		[Token(Token = "0x17000114")]
		public int depth
		{
			[Token(Token = "0x6000A08")]
			[Address(RVA = "0x3FA2A44", Offset = "0x3FA2A44", VA = "0x3FA2A44")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000115")]
		public SplineComputer root
		{
			[Token(Token = "0x6000A09")]
			[Address(RVA = "0x3FA2DE0", Offset = "0x3FA2DE0", VA = "0x3FA2DE0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000A0A")]
			[Address(RVA = "0x3FA3408", Offset = "0x3FA3408", VA = "0x3FA3408")]
			set
			{
			}
		}

		[Token(Token = "0x17000116")]
		public Element[] elements
		{
			[Token(Token = "0x6000A0B")]
			[Address(RVA = "0x3FA4658", Offset = "0x3FA4658", VA = "0x3FA4658")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000117")]
		public double moveStep
		{
			[Token(Token = "0x6000A0C")]
			[Address(RVA = "0x3FA48C4", Offset = "0x3FA48C4", VA = "0x3FA48C4")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x6000A0D")]
		[Address(RVA = "0x3FA6408", Offset = "0x3FA6408", VA = "0x3FA6408")]
		public SplineAddress(SplineComputer rootComp)
		{
		}

		[Token(Token = "0x6000A0E")]
		[Address(RVA = "0x3FA6A0C", Offset = "0x3FA6A0C", VA = "0x3FA6A0C")]
		public SplineAddress(SplineAddress copy)
		{
		}

		[Token(Token = "0x6000A0F")]
		[Address(RVA = "0x3FA7988", Offset = "0x3FA7988", VA = "0x3FA7988")]
		public SplineResult Evaluate(double percent)
		{
			return null;
		}

		[Token(Token = "0x6000A10")]
		[Address(RVA = "0x3FA7DC4", Offset = "0x3FA7DC4", VA = "0x3FA7DC4")]
		public void Evaluate(SplineResult result, double percent)
		{
		}

		[Token(Token = "0x6000A11")]
		[Address(RVA = "0x3FA98A4", Offset = "0x3FA98A4", VA = "0x3FA98A4")]
		public Vector3 EvaluatePosition(double percent)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000A12")]
		[Address(RVA = "0x3FABF50", Offset = "0x3FABF50", VA = "0x3FABF50")]
		public double Project(Vector3 point, int subdivide = 4, double from = 0.0, double to = 1.0)
		{
			return default(double);
		}

		[Token(Token = "0x6000A13")]
		[Address(RVA = "0x3FAF16C", Offset = "0x3FAF16C", VA = "0x3FAF16C")]
		public float CalculateLength(double from = 0.0, double to = 1.0)
		{
			return default(float);
		}

		[Token(Token = "0x6000A14")]
		[Address(RVA = "0x3FB0078", Offset = "0x3FB0078", VA = "0x3FB0078")]
		public double Travel(double start, float distance, Spline.Direction direction, int iterations)
		{
			return default(double);
		}

		[Token(Token = "0x6000A15")]
		[Address(RVA = "0x3FB1644", Offset = "0x3FB1644", VA = "0x3FB1644")]
		public int GetElementIndex(double percent)
		{
			return default(int);
		}

		[Token(Token = "0x6000A16")]
		[Address(RVA = "0x3FACDA8", Offset = "0x3FACDA8", VA = "0x3FACDA8")]
		public double PathToLocalPercent(double pathPercent, int elementIndex)
		{
			return default(double);
		}

		[Token(Token = "0x6000A17")]
		[Address(RVA = "0x3FADFA0", Offset = "0x3FADFA0", VA = "0x3FADFA0")]
		public double LocalToPathPercent(double localPercent, int elementIndex)
		{
			return default(double);
		}

		[Token(Token = "0x6000A18")]
		[Address(RVA = "0x3FA54EC", Offset = "0x3FA54EC", VA = "0x3FA54EC")]
		public int GetTotalPointCount()
		{
			return default(int);
		}

		[Token(Token = "0x6000A19")]
		[Address(RVA = "0x3FA858C", Offset = "0x3FA858C", VA = "0x3FA858C")]
		public void GetEvaluationValues(double inputPercent, out SplineComputer computer, out double percent, out Spline.Direction direction)
		{
		}

		[Token(Token = "0x6000A1A")]
		[Address(RVA = "0x3FB25F0", Offset = "0x3FB25F0", VA = "0x3FB25F0")]
		private int LocalToPathPoint(int point, int elementIndex)
		{
			return default(int);
		}

		[Token(Token = "0x6000A1B")]
		[Address(RVA = "0x3FB2F94", Offset = "0x3FB2F94", VA = "0x3FB2F94")]
		private void PathToLocalPoint(int point, out int computerIndex, out int localPoint)
		{
		}

		[Token(Token = "0x6000A1C")]
		[Address(RVA = "0x3FB3B34", Offset = "0x3FB3B34", VA = "0x3FB3B34")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xD02B7C", Offset = "0xD02B7C")]
		public void Enter(Node node, int connectionIndex, Spline.Direction direction = Spline.Direction.Forward)
		{
		}

		[Token(Token = "0x6000A1D")]
		[Address(RVA = "0x3FB3E38", Offset = "0x3FB3E38", VA = "0x3FB3E38")]
		public void AddSpline(Node node, int connectionIndex, Spline.Direction direction = Spline.Direction.Forward)
		{
		}

		[Token(Token = "0x6000A1E")]
		[Address(RVA = "0x3FB6D20", Offset = "0x3FB6D20", VA = "0x3FB6D20")]
		public void AddSpline(SplineComputer computer, int connectionIndex, int connectedIndex, Spline.Direction direction = Spline.Direction.Forward)
		{
		}

		[Token(Token = "0x6000A1F")]
		[Address(RVA = "0x3FB7F68", Offset = "0x3FB7F68", VA = "0x3FB7F68")]
		public void Exit(int exitDepth)
		{
		}

		[Token(Token = "0x6000A20")]
		[Address(RVA = "0x3FB8B4C", Offset = "0x3FB8B4C", VA = "0x3FB8B4C")]
		public void Collapse()
		{
		}

		[Token(Token = "0x6000A21")]
		[Address(RVA = "0x3FB9490", Offset = "0x3FB9490", VA = "0x3FB9490")]
		public void Clear()
		{
		}

		[Token(Token = "0x6000A22")]
		[Address(RVA = "0x3FA74CC", Offset = "0x3FA74CC", VA = "0x3FA74CC")]
		private void AddElement(Element element)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000143")]
	public struct SplinePoint
	{
		[Token(Token = "0x20001FD")]
		public enum Type
		{
			[Token(Token = "0x40009A6")]
			SmoothMirrored,
			[Token(Token = "0x40009A7")]
			Broken,
			[Token(Token = "0x40009A8")]
			SmoothFree
		}

		[Token(Token = "0x400065B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xCFF914", Offset = "0xCFF914")]
		[SerializeField]
		[HideInInspector]
		private Type _type;

		[Token(Token = "0x400065C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public Vector3 position;

		[Token(Token = "0x400065D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Color color;

		[Token(Token = "0x400065E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 normal;

		[Token(Token = "0x400065F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float size;

		[Token(Token = "0x4000660")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 tangent;

		[Token(Token = "0x4000661")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Vector3 tangent2;

		[Token(Token = "0x17000118")]
		public Type type
		{
			[Token(Token = "0x6000A23")]
			[Address(RVA = "0x44BDC34", Offset = "0x44BDC34", VA = "0x44BDC34")]
			get
			{
				return default(Type);
			}
			[Token(Token = "0x6000A24")]
			[Address(RVA = "0x44BDEA0", Offset = "0x44BDEA0", VA = "0x44BDEA0")]
			set
			{
			}
		}

		[Token(Token = "0x6000A25")]
		[Address(RVA = "0x44BEC20", Offset = "0x44BEC20", VA = "0x44BEC20")]
		public static SplinePoint Lerp(SplinePoint a, SplinePoint b, float t)
		{
			return default(SplinePoint);
		}

		[Token(Token = "0x6000A26")]
		[Address(RVA = "0x44BFA88", Offset = "0x44BFA88", VA = "0x44BFA88")]
		private static void GetInterpolatedTangents(SplinePoint a, SplinePoint b, float t, out Vector3 t1, out Vector3 t2)
		{
		}

		[Token(Token = "0x6000A27")]
		[Address(RVA = "0x44C089C", Offset = "0x44C089C", VA = "0x44C089C")]
		public static bool AreDifferent(ref SplinePoint a, ref SplinePoint b)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A28")]
		[Address(RVA = "0x44C1754", Offset = "0x44C1754", VA = "0x44C1754")]
		public void SetPosition(Vector3 pos)
		{
		}

		[Token(Token = "0x6000A29")]
		[Address(RVA = "0x44C1D7C", Offset = "0x44C1D7C", VA = "0x44C1D7C")]
		public void SetTangentPosition(Vector3 pos)
		{
		}

		[Token(Token = "0x6000A2A")]
		[Address(RVA = "0x44C2970", Offset = "0x44C2970", VA = "0x44C2970")]
		public void SetTangent2Position(Vector3 pos)
		{
		}

		[Token(Token = "0x6000A2B")]
		[Address(RVA = "0x44C3958", Offset = "0x44C3958", VA = "0x44C3958")]
		public SplinePoint(Vector3 p)
		{
		}

		[Token(Token = "0x6000A2C")]
		[Address(RVA = "0x44C4058", Offset = "0x44C4058", VA = "0x44C4058")]
		public SplinePoint(Vector3 p, Vector3 t)
		{
		}

		[Token(Token = "0x6000A2D")]
		[Address(RVA = "0x44C48A8", Offset = "0x44C48A8", VA = "0x44C48A8")]
		public SplinePoint(Vector3 pos, Vector3 tan, Vector3 nor, float s, Color col)
		{
		}

		[Token(Token = "0x6000A2E")]
		[Address(RVA = "0x44C5054", Offset = "0x44C5054", VA = "0x44C5054")]
		public SplinePoint(Vector3 pos, Vector3 tan, Vector3 tan2, Vector3 nor, float s, Color col)
		{
		}

		[Token(Token = "0x6000A2F")]
		[Address(RVA = "0x44C590C", Offset = "0x44C590C", VA = "0x44C590C")]
		public SplinePoint(SplinePoint source)
		{
		}

		[Token(Token = "0x6000A30")]
		[Address(RVA = "0x44BE824", Offset = "0x44BE824", VA = "0x44BE824")]
		private void SmoothMirrorTangent2()
		{
		}

		[Token(Token = "0x6000A31")]
		[Address(RVA = "0x44C2F0C", Offset = "0x44C2F0C", VA = "0x44C2F0C")]
		private void SmoothMirrorTangent()
		{
		}

		[Token(Token = "0x6000A32")]
		[Address(RVA = "0x44C2318", Offset = "0x44C2318", VA = "0x44C2318")]
		private void SmoothFreeTangent2()
		{
		}

		[Token(Token = "0x6000A33")]
		[Address(RVA = "0x44C3300", Offset = "0x44C3300", VA = "0x44C3300")]
		private void SmoothFreeTangent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000144")]
	public class SplineResult
	{
		[Token(Token = "0x4000662")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 position;

		[Token(Token = "0x4000663")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 normal;

		[Token(Token = "0x4000664")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 direction;

		[Token(Token = "0x4000665")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Color color;

		[Token(Token = "0x4000666")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float size;

		[Token(Token = "0x4000667")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public double percent;

		[Token(Token = "0x17000119")]
		public Quaternion rotation
		{
			[Token(Token = "0x6000A34")]
			[Address(RVA = "0x3C786E4", Offset = "0x3C786E4", VA = "0x3C786E4")]
			get
			{
				return default(Quaternion);
			}
		}

		[Token(Token = "0x1700011A")]
		public Vector3 right
		{
			[Token(Token = "0x6000A35")]
			[Address(RVA = "0x3C791F0", Offset = "0x3C791F0", VA = "0x3C791F0")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6000A36")]
		[Address(RVA = "0x3C79C9C", Offset = "0x3C79C9C", VA = "0x3C79C9C")]
		public static SplineResult Lerp(SplineResult a, SplineResult b, float t)
		{
			return null;
		}

		[Token(Token = "0x6000A37")]
		[Address(RVA = "0x3C7B1D0", Offset = "0x3C7B1D0", VA = "0x3C7B1D0")]
		public static SplineResult Lerp(SplineResult a, SplineResult b, double t)
		{
			return null;
		}

		[Token(Token = "0x6000A38")]
		[Address(RVA = "0x3C7B60C", Offset = "0x3C7B60C", VA = "0x3C7B60C")]
		public static void Lerp(SplineResult a, SplineResult b, double t, SplineResult target)
		{
		}

		[Token(Token = "0x6000A39")]
		[Address(RVA = "0x3C7A83C", Offset = "0x3C7A83C", VA = "0x3C7A83C")]
		public static void Lerp(SplineResult a, SplineResult b, float t, SplineResult target)
		{
		}

		[Token(Token = "0x6000A3A")]
		[Address(RVA = "0x3C7C018", Offset = "0x3C7C018", VA = "0x3C7C018")]
		public void Lerp(SplineResult b, double t)
		{
		}

		[Token(Token = "0x6000A3B")]
		[Address(RVA = "0x3C7C318", Offset = "0x3C7C318", VA = "0x3C7C318")]
		public void Lerp(SplineResult b, float t)
		{
		}

		[Token(Token = "0x6000A3C")]
		[Address(RVA = "0x3C7C618", Offset = "0x3C7C618", VA = "0x3C7C618")]
		public void CopyFrom(SplineResult input)
		{
		}

		[Token(Token = "0x6000A3D")]
		[Address(RVA = "0x3C7A0D8", Offset = "0x3C7A0D8", VA = "0x3C7A0D8")]
		public SplineResult()
		{
		}

		[Token(Token = "0x6000A3E")]
		[Address(RVA = "0x3C7CB34", Offset = "0x3C7CB34", VA = "0x3C7CB34")]
		public SplineResult(Vector3 p, Vector3 n, Vector3 d, Color c, float s, double t)
		{
		}

		[Token(Token = "0x6000A3F")]
		[Address(RVA = "0x3C7D570", Offset = "0x3C7D570", VA = "0x3C7D570")]
		public SplineResult(SplineResult input)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000145")]
	public class SplineSample
	{
		[Token(Token = "0x4000668")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 position;

		[Token(Token = "0x4000669")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 up;

		[Token(Token = "0x400066A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 forward;

		[Token(Token = "0x400066B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Color color;

		[Token(Token = "0x400066C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float size;

		[Token(Token = "0x400066D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public double percent;

		[Token(Token = "0x1700011B")]
		public Quaternion rotation
		{
			[Token(Token = "0x6000A40")]
			[Address(RVA = "0x3C7DFE0", Offset = "0x3C7DFE0", VA = "0x3C7DFE0")]
			get
			{
				return default(Quaternion);
			}
		}

		[Token(Token = "0x1700011C")]
		public Vector3 right
		{
			[Token(Token = "0x6000A41")]
			[Address(RVA = "0x3C7EAE4", Offset = "0x3C7EAE4", VA = "0x3C7EAE4")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6000A42")]
		[Address(RVA = "0x3C7F590", Offset = "0x3C7F590", VA = "0x3C7F590")]
		public static SplineSample Lerp(SplineSample a, SplineSample b, float t)
		{
			return null;
		}

		[Token(Token = "0x6000A43")]
		[Address(RVA = "0x3C80AC4", Offset = "0x3C80AC4", VA = "0x3C80AC4")]
		public static SplineSample Lerp(SplineSample a, SplineSample b, double t)
		{
			return null;
		}

		[Token(Token = "0x6000A44")]
		[Address(RVA = "0x3C80F00", Offset = "0x3C80F00", VA = "0x3C80F00")]
		public static void Lerp(SplineSample a, SplineSample b, double t, SplineSample target)
		{
		}

		[Token(Token = "0x6000A45")]
		[Address(RVA = "0x3C80130", Offset = "0x3C80130", VA = "0x3C80130")]
		public static void Lerp(SplineSample a, SplineSample b, float t, SplineSample target)
		{
		}

		[Token(Token = "0x6000A46")]
		[Address(RVA = "0x3C8190C", Offset = "0x3C8190C", VA = "0x3C8190C")]
		public void Lerp(SplineSample b, double t)
		{
		}

		[Token(Token = "0x6000A47")]
		[Address(RVA = "0x3C81C0C", Offset = "0x3C81C0C", VA = "0x3C81C0C")]
		public void Lerp(SplineSample b, float t)
		{
		}

		[Token(Token = "0x6000A48")]
		[Address(RVA = "0x3C81F0C", Offset = "0x3C81F0C", VA = "0x3C81F0C")]
		public void CopyFrom(SplineSample input)
		{
		}

		[Token(Token = "0x6000A49")]
		[Address(RVA = "0x3C7F9CC", Offset = "0x3C7F9CC", VA = "0x3C7F9CC")]
		public SplineSample()
		{
		}

		[Token(Token = "0x6000A4A")]
		[Address(RVA = "0x3C82428", Offset = "0x3C82428", VA = "0x3C82428")]
		public SplineSample(Vector3 position, Vector3 normal, Vector3 direction, Color color, float size, double percent)
		{
		}

		[Token(Token = "0x6000A4B")]
		[Address(RVA = "0x3C82E64", Offset = "0x3C82E64", VA = "0x3C82E64")]
		public SplineSample(SplineSample input)
		{
		}
	}
	[Token(Token = "0x2000146")]
	public static class SplineThreading
	{
		[Token(Token = "0x20001FE")]
		public delegate void EmptyHandler();

		[Token(Token = "0x20001FF")]
		internal class ThreadDef
		{
			[Token(Token = "0x2000256")]
			internal class Worker
			{
				[Token(Token = "0x4000A60")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				internal bool computing;

				[Token(Token = "0x4000A61")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				internal Queue<EmptyHandler> instructions;

				[Token(Token = "0x6000EEA")]
				[Address(RVA = "0x3C92388", Offset = "0x3C92388", VA = "0x3C92388")]
				public Worker()
				{
				}
			}

			[Token(Token = "0x2000257")]
			internal delegate void BoolHandler(bool flag);

			[Token(Token = "0x40009A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private ParameterizedThreadStart start;

			[Token(Token = "0x40009AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal Thread thread;

			[Token(Token = "0x40009AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private Worker worker;

			[Token(Token = "0x170001DD")]
			internal bool isAlive
			{
				[Token(Token = "0x6000DE7")]
				[Address(RVA = "0x3C90B18", Offset = "0x3C90B18", VA = "0x3C90B18")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x170001DE")]
			internal bool computing
			{
				[Token(Token = "0x6000DE8")]
				[Address(RVA = "0x3C90E0C", Offset = "0x3C90E0C", VA = "0x3C90E0C")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x6000DE9")]
			[Address(RVA = "0x3C8C6D0", Offset = "0x3C8C6D0", VA = "0x3C8C6D0")]
			internal ThreadDef()
			{
			}

			[Token(Token = "0x6000DEA")]
			[Address(RVA = "0x3C9109C", Offset = "0x3C9109C", VA = "0x3C9109C")]
			internal void Queue(EmptyHandler handler)
			{
			}

			[Token(Token = "0x6000DEB")]
			[Address(RVA = "0x3C913B4", Offset = "0x3C913B4", VA = "0x3C913B4")]
			internal void Interrupt()
			{
			}

			[Token(Token = "0x6000DEC")]
			[Address(RVA = "0x3C8CC40", Offset = "0x3C8CC40", VA = "0x3C8CC40")]
			internal void Restart()
			{
			}

			[Token(Token = "0x6000DED")]
			[Address(RVA = "0x3C91E30", Offset = "0x3C91E30", VA = "0x3C91E30")]
			internal void Abort()
			{
			}
		}

		[Token(Token = "0x400066E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal static ThreadDef[] threads;

		[Token(Token = "0x400066F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal static readonly object locker;

		[Token(Token = "0x1700011D")]
		public static int threadCount
		{
			[Token(Token = "0x6000A4C")]
			[Address(RVA = "0x3C8ABC4", Offset = "0x3C8ABC4", VA = "0x3C8ABC4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000A4D")]
			[Address(RVA = "0x3C8AE54", Offset = "0x3C8AE54", VA = "0x3C8AE54")]
			set
			{
			}
		}

		[Token(Token = "0x6000A4E")]
		[Address(RVA = "0x3C8D114", Offset = "0x3C8D114", VA = "0x3C8D114")]
		static SplineThreading()
		{
		}

		[Token(Token = "0x6000A4F")]
		[Address(RVA = "0x3C8D7D4", Offset = "0x3C8D7D4", VA = "0x3C8D7D4")]
		private static void Quitting()
		{
		}

		[Token(Token = "0x6000A50")]
		[Address(RVA = "0x3C8E020", Offset = "0x3C8E020", VA = "0x3C8E020")]
		private static void RunThread(object o)
		{
		}

		[Token(Token = "0x6000A51")]
		[Address(RVA = "0x3C8FD2C", Offset = "0x3C8FD2C", VA = "0x3C8FD2C")]
		public static void Run(EmptyHandler handler)
		{
		}

		[Token(Token = "0x6000A52")]
		[Address(RVA = "0x3C916A0", Offset = "0x3C916A0", VA = "0x3C916A0")]
		public static void PrewarmThreads()
		{
		}

		[Token(Token = "0x6000A53")]
		[Address(RVA = "0x3C8DAB0", Offset = "0x3C8DAB0", VA = "0x3C8DAB0")]
		public static void Stop()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000147")]
	public class TriggerGroup
	{
		[Token(Token = "0x4000670")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool enabled;

		[Token(Token = "0x4000671")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string name;

		[Token(Token = "0x4000672")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color color;

		[Token(Token = "0x4000673")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public SplineTrigger[] triggers;

		[Token(Token = "0x6000A54")]
		[Address(RVA = "0x33D83CC", Offset = "0x33D83CC", VA = "0x33D83CC")]
		public void Check(double start, double end, [Optional] SplineUser user)
		{
		}

		[Token(Token = "0x6000A55")]
		[Address(RVA = "0x33D8D9C", Offset = "0x33D8D9C", VA = "0x33D8D9C")]
		public void Reset()
		{
		}

		[Token(Token = "0x6000A56")]
		[Address(RVA = "0x33D92DC", Offset = "0x33D92DC", VA = "0x33D92DC")]
		public TriggerGroup()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000148")]
	public class SplineTrigger
	{
		[Token(Token = "0x2000200")]
		public enum Type
		{
			[Token(Token = "0x40009AD")]
			Double,
			[Token(Token = "0x40009AE")]
			Forward,
			[Token(Token = "0x40009AF")]
			Backward
		}

		[Token(Token = "0x4000674")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x4000675")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public Type type;

		[Token(Token = "0x4000676")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool workOnce;

		[Token(Token = "0x4000677")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
		private bool worked;

		[Token(Token = "0x4000678")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCFF980", Offset = "0xCFF980")]
		public double position;

		[Token(Token = "0x4000679")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		public bool enabled;

		[Token(Token = "0x400067A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		public Color color;

		[Token(Token = "0x400067B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[HideInInspector]
		public UnityEvent onCross;

		[Token(Token = "0x14000028")]
		public event Action<SplineUser> onUserCross
		{
			[Token(Token = "0x6000A57")]
			[Address(RVA = "0x3C9F70C", Offset = "0x3C9F70C", VA = "0x3C9F70C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD02BB4", Offset = "0xD02BB4")]
			add
			{
			}
			[Token(Token = "0x6000A58")]
			[Address(RVA = "0x3C9F874", Offset = "0x3C9F874", VA = "0x3C9F874")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD02BC4", Offset = "0xD02BC4")]
			remove
			{
			}
		}

		[Token(Token = "0x6000A59")]
		[Address(RVA = "0x3C9F9DC", Offset = "0x3C9F9DC", VA = "0x3C9F9DC")]
		public SplineTrigger(Type t)
		{
		}

		[Token(Token = "0x6000A5A")]
		[Address(RVA = "0x3CA02A4", Offset = "0x3CA02A4", VA = "0x3CA02A4")]
		public void AddListener(UnityAction action)
		{
		}

		[Token(Token = "0x6000A5B")]
		[Address(RVA = "0x3CA05A0", Offset = "0x3CA05A0", VA = "0x3CA05A0")]
		public void Reset()
		{
		}

		[Token(Token = "0x6000A5C")]
		[Address(RVA = "0x3C9CAB8", Offset = "0x3C9CAB8", VA = "0x3C9CAB8")]
		public bool Check(double previousPercent, double currentPercent)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A5D")]
		[Address(RVA = "0x3C9E01C", Offset = "0x3C9E01C", VA = "0x3C9E01C")]
		public void Invoke([Optional] SplineUser user)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000149")]
	public class TransformModule : ISerializationCallbackReceiver
	{
		[Token(Token = "0x2000201")]
		public enum VelocityHandleMode
		{
			[Token(Token = "0x40009B1")]
			Zero,
			[Token(Token = "0x40009B2")]
			Preserve,
			[Token(Token = "0x40009B3")]
			Align,
			[Token(Token = "0x40009B4")]
			AlignRealistic
		}

		[Token(Token = "0x400067D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		[HideInInspector]
		private bool _hasOffset;

		[Token(Token = "0x400067E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		[SerializeField]
		[HideInInspector]
		private bool _hasRotationOffset;

		[Token(Token = "0x400067F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		[HideInInspector]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xCFFA9C", Offset = "0xCFFA9C")]
		private Vector2 _offset;

		[Token(Token = "0x4000680")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		[HideInInspector]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xCFFAF8", Offset = "0xCFFAF8")]
		private Vector3 _rotationOffset;

		[Token(Token = "0x4000681")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[HideInInspector]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xCFFB54", Offset = "0xCFFB54")]
		private Vector3 _baseScale;

		[Token(Token = "0x4000682")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public VelocityHandleMode velocityHandleMode;

		[Token(Token = "0x4000683")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private SplineSample _splineResult;

		[Token(Token = "0x4000684")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool applyPositionX;

		[Token(Token = "0x4000685")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		public bool applyPositionY;

		[Token(Token = "0x4000686")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
		public bool applyPositionZ;

		[Token(Token = "0x4000687")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Spline.Direction direction;

		[Token(Token = "0x4000688")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool applyRotationX;

		[Token(Token = "0x4000689")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		public bool applyRotationY;

		[Token(Token = "0x400068A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
		public bool applyRotationZ;

		[Token(Token = "0x400068B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4B")]
		public bool applyScaleX;

		[Token(Token = "0x400068C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public bool applyScaleY;

		[Token(Token = "0x400068D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
		public bool applyScaleZ;

		[Token(Token = "0x400068E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[HideInInspector]
		public SplineUser targetUser;

		[Token(Token = "0x400068F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Vector3 position;

		[Token(Token = "0x4000690")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private static Quaternion rotation;

		[Token(Token = "0x1700011E")]
		public Vector2 offset
		{
			[Token(Token = "0x6000A5E")]
			[Address(RVA = "0x3CC7138", Offset = "0x3CC7138", VA = "0x3CC7138")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x6000A5F")]
			[Address(RVA = "0x3CC73B8", Offset = "0x3CC73B8", VA = "0x3CC73B8")]
			set
			{
			}
		}

		[Token(Token = "0x1700011F")]
		public Vector3 rotationOffset
		{
			[Token(Token = "0x6000A60")]
			[Address(RVA = "0x3CC7CD4", Offset = "0x3CC7CD4", VA = "0x3CC7CD4")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000A61")]
			[Address(RVA = "0x3CC7F64", Offset = "0x3CC7F64", VA = "0x3CC7F64")]
			set
			{
			}
		}

		[Token(Token = "0x17000120")]
		public bool hasOffset
		{
			[Token(Token = "0x6000A62")]
			[Address(RVA = "0x3CC88C4", Offset = "0x3CC88C4", VA = "0x3CC88C4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000121")]
		public bool hasRotationOffset
		{
			[Token(Token = "0x6000A63")]
			[Address(RVA = "0x3CC8B40", Offset = "0x3CC8B40", VA = "0x3CC8B40")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000122")]
		public Vector3 baseScale
		{
			[Token(Token = "0x6000A64")]
			[Address(RVA = "0x3CC8DBC", Offset = "0x3CC8DBC", VA = "0x3CC8DBC")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000A65")]
			[Address(RVA = "0x3CC904C", Offset = "0x3CC904C", VA = "0x3CC904C")]
			set
			{
			}
		}

		[Token(Token = "0x17000123")]
		public SplineSample splineResult
		{
			[Token(Token = "0x6000A66")]
			[Address(RVA = "0x3CC9804", Offset = "0x3CC9804", VA = "0x3CC9804")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000A67")]
			[Address(RVA = "0x3C97C5C", Offset = "0x3C97C5C", VA = "0x3C97C5C")]
			set
			{
			}
		}

		[Token(Token = "0x17000124")]
		public bool applyPosition
		{
			[Token(Token = "0x6000A68")]
			[Address(RVA = "0x3CC9C14", Offset = "0x3CC9C14", VA = "0x3CC9C14")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000A69")]
			[Address(RVA = "0x3CC9EA8", Offset = "0x3CC9EA8", VA = "0x3CC9EA8")]
			set
			{
			}
		}

		[Token(Token = "0x17000125")]
		public bool applyRotation
		{
			[Token(Token = "0x6000A6A")]
			[Address(RVA = "0x3CCA138", Offset = "0x3CCA138", VA = "0x3CCA138")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000A6B")]
			[Address(RVA = "0x3CCA3CC", Offset = "0x3CCA3CC", VA = "0x3CCA3CC")]
			set
			{
			}
		}

		[Token(Token = "0x17000126")]
		public bool applyScale
		{
			[Token(Token = "0x6000A6C")]
			[Address(RVA = "0x3CCA65C", Offset = "0x3CCA65C", VA = "0x3CCA65C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000A6D")]
			[Address(RVA = "0x3CCA8F0", Offset = "0x3CCA8F0", VA = "0x3CCA8F0")]
			set
			{
			}
		}

		[Token(Token = "0x6000A6E")]
		[Address(RVA = "0x3C98108", Offset = "0x3C98108", VA = "0x3C98108")]
		public void ApplyTransform(Transform input)
		{
		}

		[Token(Token = "0x6000A6F")]
		[Address(RVA = "0x3C98924", Offset = "0x3C98924", VA = "0x3C98924")]
		public void ApplyRigidbody(Rigidbody input)
		{
		}

		[Token(Token = "0x6000A70")]
		[Address(RVA = "0x3C99B58", Offset = "0x3C99B58", VA = "0x3C99B58")]
		public void ApplyRigidbody2D(Rigidbody2D input)
		{
		}

		[Token(Token = "0x6000A71")]
		[Address(RVA = "0x3CCD1C0", Offset = "0x3CCD1C0", VA = "0x3CCD1C0")]
		private Vector3 HandleVelocity(Vector3 velocity)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000A72")]
		[Address(RVA = "0x3CCAB80", Offset = "0x3CCAB80", VA = "0x3CCAB80")]
		private Vector3 GetPosition(Vector3 inputPosition)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000A73")]
		[Address(RVA = "0x3CCB9F0", Offset = "0x3CCB9F0", VA = "0x3CCB9F0")]
		private Quaternion GetRotation(Quaternion inputRotation)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000A74")]
		[Address(RVA = "0x3CCCB64", Offset = "0x3CCCB64", VA = "0x3CCCB64")]
		private Vector3 GetScale(Vector3 inputScale)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000A75")]
		[Address(RVA = "0x3CCE6E8", Offset = "0x3CCE6E8", VA = "0x3CCE6E8", Slot = "4")]
		public void OnBeforeSerialize()
		{
		}

		[Token(Token = "0x6000A76")]
		[Address(RVA = "0x3CCE8F8", Offset = "0x3CCE8F8", VA = "0x3CCE8F8", Slot = "5")]
		public void OnAfterDeserialize()
		{
		}

		[Token(Token = "0x6000A77")]
		[Address(RVA = "0x3C93394", Offset = "0x3C93394", VA = "0x3C93394")]
		public TransformModule()
		{
		}
	}
}
namespace Dreamteck.Splines.Primitives
{
	[Token(Token = "0x200014A")]
	public class Capsule : SplinePrimitive
	{
		[Token(Token = "0x4000691")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float radius;

		[Token(Token = "0x4000692")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float height;

		[Token(Token = "0x6000A79")]
		[Address(RVA = "0x42CCBFC", Offset = "0x42CCBFC", VA = "0x42CCBFC", Slot = "6")]
		public override Spline.Type GetSplineType()
		{
			return default(Spline.Type);
		}

		[Token(Token = "0x6000A7A")]
		[Address(RVA = "0x42CCE6C", Offset = "0x42CCE6C", VA = "0x42CCE6C", Slot = "5")]
		protected override void Generate()
		{
		}

		[Token(Token = "0x6000A7B")]
		[Address(RVA = "0x42D1838", Offset = "0x42D1838", VA = "0x42D1838")]
		public Capsule()
		{
		}
	}
	[Token(Token = "0x200014B")]
	public class Ellipse : SplinePrimitive
	{
		[Token(Token = "0x4000693")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float xRadius;

		[Token(Token = "0x4000694")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float yRadius;

		[Token(Token = "0x6000A7C")]
		[Address(RVA = "0x42D1FCC", Offset = "0x42D1FCC", VA = "0x42D1FCC", Slot = "6")]
		public override Spline.Type GetSplineType()
		{
			return default(Spline.Type);
		}

		[Token(Token = "0x6000A7D")]
		[Address(RVA = "0x42D223C", Offset = "0x42D223C", VA = "0x42D223C", Slot = "5")]
		protected override void Generate()
		{
		}

		[Token(Token = "0x6000A7E")]
		[Address(RVA = "0x42D419C", Offset = "0x42D419C", VA = "0x42D419C")]
		public Ellipse()
		{
		}
	}
	[Token(Token = "0x200014C")]
	public class Line : SplinePrimitive
	{
		[Token(Token = "0x4000695")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		public bool mirror;

		[Token(Token = "0x4000696")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float length;

		[Token(Token = "0x4000697")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int segments;

		[Token(Token = "0x6000A7F")]
		[Address(RVA = "0x42D4430", Offset = "0x42D4430", VA = "0x42D4430", Slot = "6")]
		public override Spline.Type GetSplineType()
		{
			return default(Spline.Type);
		}

		[Token(Token = "0x6000A80")]
		[Address(RVA = "0x42D46A0", Offset = "0x42D46A0", VA = "0x42D46A0", Slot = "5")]
		protected override void Generate()
		{
		}

		[Token(Token = "0x6000A81")]
		[Address(RVA = "0x42D551C", Offset = "0x42D551C", VA = "0x42D551C")]
		public Line()
		{
		}
	}
	[Token(Token = "0x200014D")]
	public class Ngon : SplinePrimitive
	{
		[Token(Token = "0x4000698")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float radius;

		[Token(Token = "0x4000699")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int sides;

		[Token(Token = "0x6000A82")]
		[Address(RVA = "0x42D5814", Offset = "0x42D5814", VA = "0x42D5814", Slot = "6")]
		public override Spline.Type GetSplineType()
		{
			return default(Spline.Type);
		}

		[Token(Token = "0x6000A83")]
		[Address(RVA = "0x42D5A84", Offset = "0x42D5A84", VA = "0x42D5A84", Slot = "5")]
		protected override void Generate()
		{
		}

		[Token(Token = "0x6000A84")]
		[Address(RVA = "0x42D6720", Offset = "0x42D6720", VA = "0x42D6720")]
		public Ngon()
		{
		}
	}
	[Token(Token = "0x200014E")]
	public class Rectangle : SplinePrimitive
	{
		[Token(Token = "0x400069A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Vector2 size;

		[Token(Token = "0x6000A85")]
		[Address(RVA = "0x42D69B4", Offset = "0x42D69B4", VA = "0x42D69B4", Slot = "6")]
		public override Spline.Type GetSplineType()
		{
			return default(Spline.Type);
		}

		[Token(Token = "0x6000A86")]
		[Address(RVA = "0x42D6C24", Offset = "0x42D6C24", VA = "0x42D6C24", Slot = "5")]
		protected override void Generate()
		{
		}

		[Token(Token = "0x6000A87")]
		[Address(RVA = "0x42D8340", Offset = "0x42D8340", VA = "0x42D8340")]
		public Rectangle()
		{
		}
	}
	[Token(Token = "0x200014F")]
	public class RoundedRectangle : SplinePrimitive
	{
		[Token(Token = "0x400069B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Vector2 size;

		[Token(Token = "0x400069C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float xRadius;

		[Token(Token = "0x400069D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float yRadius;

		[Token(Token = "0x6000A88")]
		[Address(RVA = "0x42D8610", Offset = "0x42D8610", VA = "0x42D8610", Slot = "6")]
		public override Spline.Type GetSplineType()
		{
			return default(Spline.Type);
		}

		[Token(Token = "0x6000A89")]
		[Address(RVA = "0x42D8880", Offset = "0x42D8880", VA = "0x42D8880", Slot = "5")]
		protected override void Generate()
		{
		}

		[Token(Token = "0x6000A8A")]
		[Address(RVA = "0x42DCF2C", Offset = "0x42DCF2C", VA = "0x42DCF2C")]
		public RoundedRectangle()
		{
		}
	}
	[Token(Token = "0x2000150")]
	public class Spiral : SplinePrimitive
	{
		[Token(Token = "0x400069E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float startRadius;

		[Token(Token = "0x400069F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float endRadius;

		[Token(Token = "0x40006A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float stretch;

		[Token(Token = "0x40006A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public int iterations;

		[Token(Token = "0x40006A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public bool clockwise;

		[Token(Token = "0x40006A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public AnimationCurve curve;

		[Token(Token = "0x6000A8B")]
		[Address(RVA = "0x42DD2C4", Offset = "0x42DD2C4", VA = "0x42DD2C4", Slot = "6")]
		public override Spline.Type GetSplineType()
		{
			return default(Spline.Type);
		}

		[Token(Token = "0x6000A8C")]
		[Address(RVA = "0x42DD534", Offset = "0x42DD534", VA = "0x42DD534", Slot = "5")]
		protected override void Generate()
		{
		}

		[Token(Token = "0x6000A8D")]
		[Address(RVA = "0x42E0540", Offset = "0x42E0540", VA = "0x42E0540")]
		public Spiral()
		{
		}
	}
	[Token(Token = "0x2000151")]
	public class SplinePrimitive
	{
		[Token(Token = "0x40006A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected bool closed;

		[Token(Token = "0x40006A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected SplinePoint[] points;

		[Token(Token = "0x40006A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 offset;

		[Token(Token = "0x40006A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector3 rotation;

		[Token(Token = "0x40006A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool is2D;

		[Token(Token = "0x6000A8E")]
		[Address(RVA = "0x42E09E0", Offset = "0x42E09E0", VA = "0x42E09E0", Slot = "4")]
		public virtual void Calculate()
		{
		}

		[Token(Token = "0x6000A8F")]
		[Address(RVA = "0x42D0BDC", Offset = "0x42D0BDC", VA = "0x42D0BDC", Slot = "5")]
		protected virtual void Generate()
		{
		}

		[Token(Token = "0x6000A90")]
		[Address(RVA = "0x42E2178", Offset = "0x42E2178", VA = "0x42E2178")]
		public Spline CreateSpline()
		{
			return null;
		}

		[Token(Token = "0x6000A91")]
		[Address(RVA = "0x42E3470", Offset = "0x42E3470", VA = "0x42E3470")]
		public void UpdateSpline(Spline spline)
		{
		}

		[Token(Token = "0x6000A92")]
		[Address(RVA = "0x42E4298", Offset = "0x42E4298", VA = "0x42E4298")]
		public SplineComputer CreateSplineComputer(string name, Vector3 position, Quaternion rotation)
		{
			return null;
		}

		[Token(Token = "0x6000A93")]
		[Address(RVA = "0x42E4E04", Offset = "0x42E4E04", VA = "0x42E4E04")]
		public void UpdateSplineComputer(SplineComputer comp)
		{
		}

		[Token(Token = "0x6000A94")]
		[Address(RVA = "0x42E57AC", Offset = "0x42E57AC", VA = "0x42E57AC")]
		public SplinePoint[] GetPoints()
		{
			return null;
		}

		[Token(Token = "0x6000A95")]
		[Address(RVA = "0x42E5A10", Offset = "0x42E5A10", VA = "0x42E5A10", Slot = "6")]
		public virtual Spline.Type GetSplineType()
		{
			return default(Spline.Type);
		}

		[Token(Token = "0x6000A96")]
		[Address(RVA = "0x42E5C7C", Offset = "0x42E5C7C", VA = "0x42E5C7C")]
		public bool GetIsClosed()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A97")]
		[Address(RVA = "0x42E0D88", Offset = "0x42E0D88", VA = "0x42E0D88")]
		private void ApplyOffset()
		{
		}

		[Token(Token = "0x6000A98")]
		[Address(RVA = "0x42D0DEC", Offset = "0x42D0DEC", VA = "0x42D0DEC")]
		protected void CreatePoints(int count, SplinePoint.Type type)
		{
		}

		[Token(Token = "0x6000A99")]
		[Address(RVA = "0x42D1ACC", Offset = "0x42D1ACC", VA = "0x42D1ACC")]
		public SplinePrimitive()
		{
		}
	}
	[Token(Token = "0x2000152")]
	public class Star : SplinePrimitive
	{
		[Token(Token = "0x40006A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float radius;

		[Token(Token = "0x40006AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float depth;

		[Token(Token = "0x40006AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public int sides;

		[Token(Token = "0x6000A9A")]
		[Address(RVA = "0x42E5EF8", Offset = "0x42E5EF8", VA = "0x42E5EF8", Slot = "6")]
		public override Spline.Type GetSplineType()
		{
			return default(Spline.Type);
		}

		[Token(Token = "0x6000A9B")]
		[Address(RVA = "0x42E6168", Offset = "0x42E6168", VA = "0x42E6168", Slot = "5")]
		protected override void Generate()
		{
		}

		[Token(Token = "0x6000A9C")]
		[Address(RVA = "0x42E6EC4", Offset = "0x42E6EC4", VA = "0x42E6EC4")]
		public Star()
		{
		}
	}
}
namespace Dreamteck.Splines.IO
{
	[Token(Token = "0x2000153")]
	public class CSV : SplineParser
	{
		[Token(Token = "0x2000202")]
		public enum ColumnType
		{
			[Token(Token = "0x40009B6")]
			Position,
			[Token(Token = "0x40009B7")]
			Tangent,
			[Token(Token = "0x40009B8")]
			Tangent2,
			[Token(Token = "0x40009B9")]
			Normal,
			[Token(Token = "0x40009BA")]
			Size,
			[Token(Token = "0x40009BB")]
			Color
		}

		[Token(Token = "0x40006AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<ColumnType> columns;

		[Token(Token = "0x6000A9D")]
		[Address(RVA = "0x337DBF4", Offset = "0x337DBF4", VA = "0x337DBF4")]
		public CSV(SplineComputer computer)
		{
		}

		[Token(Token = "0x6000A9E")]
		[Address(RVA = "0x337FB08", Offset = "0x337FB08", VA = "0x337FB08")]
		public CSV(string filePath, [Optional] List<ColumnType> customColumns)
		{
		}

		[Token(Token = "0x6000A9F")]
		[Address(RVA = "0x3381B38", Offset = "0x3381B38", VA = "0x3381B38")]
		private void Read(string[] lines)
		{
		}

		[Token(Token = "0x6000AA0")]
		[Address(RVA = "0x3384F3C", Offset = "0x3384F3C", VA = "0x3384F3C")]
		public SplineComputer CreateSplineComputer(Vector3 position, Quaternion rotation)
		{
			return null;
		}

		[Token(Token = "0x6000AA1")]
		[Address(RVA = "0x33862E0", Offset = "0x33862E0", VA = "0x33862E0")]
		public Spline CreateSpline()
		{
			return null;
		}

		[Token(Token = "0x6000AA2")]
		[Address(RVA = "0x3386BD0", Offset = "0x3386BD0", VA = "0x3386BD0")]
		public void FlatX()
		{
		}

		[Token(Token = "0x6000AA3")]
		[Address(RVA = "0x3387888", Offset = "0x3387888", VA = "0x3387888")]
		public void FlatY()
		{
		}

		[Token(Token = "0x6000AA4")]
		[Address(RVA = "0x3388248", Offset = "0x3388248", VA = "0x3388248")]
		public void FlatZ()
		{
		}

		[Token(Token = "0x6000AA5")]
		[Address(RVA = "0x3388C08", Offset = "0x3388C08", VA = "0x3388C08")]
		private void AddTitle(ref string[] content, string title)
		{
		}

		[Token(Token = "0x6000AA6")]
		[Address(RVA = "0x33891A0", Offset = "0x33891A0", VA = "0x33891A0")]
		private void AddVector3Title(ref string[] content, string prefix)
		{
		}

		[Token(Token = "0x6000AA7")]
		[Address(RVA = "0x33896FC", Offset = "0x33896FC", VA = "0x33896FC")]
		private void AddColorTitle(ref string[] content, string prefix)
		{
		}

		[Token(Token = "0x6000AA8")]
		[Address(RVA = "0x3389CF0", Offset = "0x3389CF0", VA = "0x3389CF0")]
		private void AddVector3(ref string[] content, int index, Vector3 vector)
		{
		}

		[Token(Token = "0x6000AA9")]
		[Address(RVA = "0x338A7F8", Offset = "0x338A7F8", VA = "0x338A7F8")]
		private void AddColor(ref string[] content, int index, Color color)
		{
		}

		[Token(Token = "0x6000AAA")]
		[Address(RVA = "0x338A1B0", Offset = "0x338A1B0", VA = "0x338A1B0")]
		private void AddFloat(ref string[] content, int index, float value)
		{
		}

		[Token(Token = "0x6000AAB")]
		[Address(RVA = "0x338AD90", Offset = "0x338AD90", VA = "0x338AD90")]
		public void Write(string filePath)
		{
		}
	}
	[Token(Token = "0x2000154")]
	public class SVG : SplineParser
	{
		[Token(Token = "0x2000203")]
		public enum Axis
		{
			[Token(Token = "0x40009BD")]
			X,
			[Token(Token = "0x40009BE")]
			Y,
			[Token(Token = "0x40009BF")]
			Z
		}

		[Token(Token = "0x2000204")]
		internal class PathSegment
		{
			[Token(Token = "0x2000258")]
			internal enum Type
			{
				[Token(Token = "0x4000A63")]
				Cubic,
				[Token(Token = "0x4000A64")]
				CubicShort,
				[Token(Token = "0x4000A65")]
				Quadratic,
				[Token(Token = "0x4000A66")]
				QuadraticShort
			}

			[Token(Token = "0x40009C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal Vector3 startTangent;

			[Token(Token = "0x40009C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			internal Vector3 endTangent;

			[Token(Token = "0x40009C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal Vector3 endPoint;

			[Token(Token = "0x6000DEE")]
			[Address(RVA = "0x33BE944", Offset = "0x33BE944", VA = "0x33BE944")]
			internal PathSegment(Vector2 s, Vector2 e, Vector2 c)
			{
			}

			[Token(Token = "0x6000DEF")]
			[Address(RVA = "0x33BE38C", Offset = "0x33BE38C", VA = "0x33BE38C")]
			internal PathSegment()
			{
			}
		}

		[Token(Token = "0x2000205")]
		public enum Element
		{
			[Token(Token = "0x40009C4")]
			All,
			[Token(Token = "0x40009C5")]
			Path,
			[Token(Token = "0x40009C6")]
			Polygon,
			[Token(Token = "0x40009C7")]
			Ellipse,
			[Token(Token = "0x40009C8")]
			Rectangle,
			[Token(Token = "0x40009C9")]
			Line
		}

		[Serializable]
		[Token(Token = "0x2000206")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCF9CF0", Offset = "0xCF9CF0")]
		private sealed class <>c
		{
			[Token(Token = "0x40009CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40009CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<string, bool> <>9__23_0;

			[Token(Token = "0x6000DF1")]
			[Address(RVA = "0x33BF310", Offset = "0x33BF310", VA = "0x33BF310")]
			public <>c()
			{
			}

			[Token(Token = "0x6000DF2")]
			[Address(RVA = "0x33BF400", Offset = "0x33BF400", VA = "0x33BF400")]
			internal bool <ReadPath>b__23_0(string t)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40006AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<SplineDefinition> paths;

		[Token(Token = "0x40006AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<SplineDefinition> polygons;

		[Token(Token = "0x40006AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<SplineDefinition> ellipses;

		[Token(Token = "0x40006B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<SplineDefinition> rectangles;

		[Token(Token = "0x40006B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<SplineDefinition> lines;

		[Token(Token = "0x40006B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Transformation> transformBuffer;

		[Token(Token = "0x6000AAC")]
		[Address(RVA = "0x338D6E8", Offset = "0x338D6E8", VA = "0x338D6E8")]
		public SVG(string filePath)
		{
		}

		[Token(Token = "0x6000AAD")]
		[Address(RVA = "0x338F284", Offset = "0x338F284", VA = "0x338F284")]
		public SVG(List<SplineComputer> computers)
		{
		}

		[Token(Token = "0x6000AAE")]
		[Address(RVA = "0x3390D2C", Offset = "0x3390D2C", VA = "0x3390D2C")]
		public void Write(string filePath, Axis ax = Axis.Z)
		{
		}

		[Token(Token = "0x6000AAF")]
		[Address(RVA = "0x3395D34", Offset = "0x3395D34", VA = "0x3395D34")]
		private Vector2 MapPoint(Vector3 original, Axis ax)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000AB0")]
		[Address(RVA = "0x338EE34", Offset = "0x338EE34", VA = "0x338EE34")]
		private void Read(XmlDocument doc)
		{
		}

		[Token(Token = "0x6000AB1")]
		[Address(RVA = "0x33963F8", Offset = "0x33963F8", VA = "0x33963F8")]
		private void Traverse(XmlNodeList nodes)
		{
		}

		[Token(Token = "0x6000AB2")]
		[Address(RVA = "0x33A4B2C", Offset = "0x33A4B2C", VA = "0x33A4B2C")]
		public List<SplineComputer> CreateSplineComputers(Vector3 position, Quaternion rotation, Element elements = Element.All)
		{
			return null;
		}

		[Token(Token = "0x6000AB3")]
		[Address(RVA = "0x33A7590", Offset = "0x33A7590", VA = "0x33A7590")]
		public List<Spline> CreateSplines(Element elements = Element.All)
		{
			return null;
		}

		[Token(Token = "0x6000AB4")]
		[Address(RVA = "0x33A1DA0", Offset = "0x33A1DA0", VA = "0x33A1DA0")]
		private int ReadRectangle(XmlNode rectNode)
		{
			return default(int);
		}

		[Token(Token = "0x6000AB5")]
		[Address(RVA = "0x33A0124", Offset = "0x33A0124", VA = "0x33A0124")]
		private int ReadLine(XmlNode lineNode)
		{
			return default(int);
		}

		[Token(Token = "0x6000AB6")]
		[Address(RVA = "0x339DEE8", Offset = "0x339DEE8", VA = "0x339DEE8")]
		private int ReadEllipse(XmlNode ellipseNode)
		{
			return default(int);
		}

		[Token(Token = "0x6000AB7")]
		[Address(RVA = "0x339B57C", Offset = "0x339B57C", VA = "0x339B57C")]
		private int ReadPolygon(XmlNode polyNode, bool closed)
		{
			return default(int);
		}

		[Token(Token = "0x6000AB8")]
		[Address(RVA = "0x3398164", Offset = "0x3398164", VA = "0x3398164")]
		private int ParseTransformation(XmlNode node)
		{
			return default(int);
		}

		[Token(Token = "0x6000AB9")]
		[Address(RVA = "0x33ACE70", Offset = "0x33ACE70", VA = "0x33ACE70")]
		private List<Transformation> ParseTransformations(string transformContent)
		{
			return null;
		}

		[Token(Token = "0x6000ABA")]
		[Address(RVA = "0x33988B4", Offset = "0x33988B4", VA = "0x33988B4")]
		private int ReadPath(XmlNode pathNode)
		{
			return default(int);
		}

		[Token(Token = "0x6000ABB")]
		[Address(RVA = "0x33B2CAC", Offset = "0x33B2CAC", VA = "0x33B2CAC")]
		private void PathStart(string name, string coords, bool relative)
		{
		}

		[Token(Token = "0x6000ABC")]
		[Address(RVA = "0x33B3A64", Offset = "0x33B3A64", VA = "0x33B3A64")]
		private void PathClose()
		{
		}

		[Token(Token = "0x6000ABD")]
		[Address(RVA = "0x33B3CE8", Offset = "0x33B3CE8", VA = "0x33B3CE8")]
		private void PathLineTo(string coords, bool relative)
		{
		}

		[Token(Token = "0x6000ABE")]
		[Address(RVA = "0x33B4810", Offset = "0x33B4810", VA = "0x33B4810")]
		private void PathHorizontalLineTo(string coords, bool relative)
		{
		}

		[Token(Token = "0x6000ABF")]
		[Address(RVA = "0x33B5168", Offset = "0x33B5168", VA = "0x33B5168")]
		private void PathVerticalLineTo(string coords, bool relative)
		{
		}

		[Token(Token = "0x6000AC0")]
		[Address(RVA = "0x33B5AC0", Offset = "0x33B5AC0", VA = "0x33B5AC0")]
		private void PathCurveTo(string coords, PathSegment.Type type, bool relative)
		{
		}

		[Token(Token = "0x6000AC1")]
		[Address(RVA = "0x33AAAB0", Offset = "0x33AAAB0", VA = "0x33AAAB0")]
		private void WriteBufferTo(List<SplineDefinition> list)
		{
		}

		[Token(Token = "0x6000AC2")]
		[Address(RVA = "0x33B96EC", Offset = "0x33B96EC", VA = "0x33B96EC")]
		private PathSegment[] ParsePathSegment(string coord, PathSegment.Type type)
		{
			return null;
		}

		[Token(Token = "0x6000AC3")]
		[Address(RVA = "0x3394528", Offset = "0x3394528", VA = "0x3394528")]
		private string EncodePath(SplineDefinition definition, Axis ax)
		{
			return null;
		}

		[Token(Token = "0x6000AC4")]
		[Address(RVA = "0x3393840", Offset = "0x3393840", VA = "0x3393840")]
		private string EncodePolygon(SplineDefinition definition, Axis ax)
		{
			return null;
		}

		[Token(Token = "0x6000AC5")]
		[Address(RVA = "0x33A9F88", Offset = "0x33A9F88", VA = "0x33A9F88")]
		private string GetAttributeContent(XmlNode node, string attributeName)
		{
			return null;
		}
	}
	[Token(Token = "0x2000155")]
	public class SplineParser
	{
		[Token(Token = "0x2000207")]
		internal class Transformation
		{
			[Token(Token = "0x40009CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			protected static Matrix4x4 matrix;

			[Token(Token = "0x6000DF3")]
			[Address(RVA = "0x33C379C", Offset = "0x33C379C", VA = "0x33C379C")]
			internal static void ResetMatrix()
			{
			}

			[Token(Token = "0x6000DF4")]
			[Address(RVA = "0x33C45DC", Offset = "0x33C45DC", VA = "0x33C45DC", Slot = "4")]
			internal virtual void Push()
			{
			}

			[Token(Token = "0x6000DF5")]
			[Address(RVA = "0x33C3CA0", Offset = "0x33C3CA0", VA = "0x33C3CA0")]
			internal static void Apply(SplinePoint[] points)
			{
			}

			[Token(Token = "0x6000DF6")]
			[Address(RVA = "0x33C1270", Offset = "0x33C1270", VA = "0x33C1270")]
			public Transformation()
			{
			}
		}

		[Token(Token = "0x2000208")]
		internal class Translate : Transformation
		{
			[Token(Token = "0x40009CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private Vector2 offset;

			[Token(Token = "0x6000DF8")]
			[Address(RVA = "0x33B0F14", Offset = "0x33B0F14", VA = "0x33B0F14")]
			public Translate(Vector2 o)
			{
			}

			[Token(Token = "0x6000DF9")]
			[Address(RVA = "0x33C49A8", Offset = "0x33C49A8", VA = "0x33C49A8", Slot = "4")]
			internal override void Push()
			{
			}
		}

		[Token(Token = "0x2000209")]
		internal class Rotate : Transformation
		{
			[Token(Token = "0x40009CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private float angle;

			[Token(Token = "0x6000DFA")]
			[Address(RVA = "0x33B1388", Offset = "0x33B1388", VA = "0x33B1388")]
			public Rotate(float a)
			{
			}

			[Token(Token = "0x6000DFB")]
			[Address(RVA = "0x33C16F8", Offset = "0x33C16F8", VA = "0x33C16F8", Slot = "4")]
			internal override void Push()
			{
			}
		}

		[Token(Token = "0x200020A")]
		internal class Scale : Transformation
		{
			[Token(Token = "0x40009CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private Vector2 multiplier;

			[Token(Token = "0x6000DFC")]
			[Address(RVA = "0x33B1754", Offset = "0x33B1754", VA = "0x33B1754")]
			public Scale(Vector2 s)
			{
			}

			[Token(Token = "0x6000DFD")]
			[Address(RVA = "0x33C1E80", Offset = "0x33C1E80", VA = "0x33C1E80", Slot = "4")]
			internal override void Push()
			{
			}
		}

		[Token(Token = "0x200020B")]
		internal class SkewX : Transformation
		{
			[Token(Token = "0x40009D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private float amount;

			[Token(Token = "0x6000DFE")]
			[Address(RVA = "0x33B1BC8", Offset = "0x33B1BC8", VA = "0x33B1BC8")]
			public SkewX(float a)
			{
			}

			[Token(Token = "0x6000DFF")]
			[Address(RVA = "0x33C25A4", Offset = "0x33C25A4", VA = "0x33C25A4", Slot = "4")]
			internal override void Push()
			{
			}
		}

		[Token(Token = "0x200020C")]
		internal class SkewY : Transformation
		{
			[Token(Token = "0x40009D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private float amount;

			[Token(Token = "0x6000E00")]
			[Address(RVA = "0x33B1F94", Offset = "0x33B1F94", VA = "0x33B1F94")]
			public SkewY(float a)
			{
			}

			[Token(Token = "0x6000E01")]
			[Address(RVA = "0x33C2EA0", Offset = "0x33C2EA0", VA = "0x33C2EA0", Slot = "4")]
			internal override void Push()
			{
			}
		}

		[Token(Token = "0x200020D")]
		internal class MatrixTransform : Transformation
		{
			[Token(Token = "0x40009D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private Matrix4x4 transformMatrix;

			[Token(Token = "0x6000E02")]
			[Address(RVA = "0x33B2360", Offset = "0x33B2360", VA = "0x33B2360")]
			public MatrixTransform(float a, float b, float c, float d, float e, float f)
			{
			}

			[Token(Token = "0x6000E03")]
			[Address(RVA = "0x33C1360", Offset = "0x33C1360", VA = "0x33C1360", Slot = "4")]
			internal override void Push()
			{
			}
		}

		[Token(Token = "0x200020E")]
		internal class SplineDefinition
		{
			[Token(Token = "0x40009D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal string name;

			[Token(Token = "0x40009D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal Spline.Type type;

			[Token(Token = "0x40009D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal List<SplinePoint> points;

			[Token(Token = "0x40009D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal bool closed;

			[Token(Token = "0x40009D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			internal Vector3 position;

			[Token(Token = "0x40009D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			internal Vector3 tangent;

			[Token(Token = "0x40009D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			internal Vector3 tangent2;

			[Token(Token = "0x40009DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			internal Vector3 normal;

			[Token(Token = "0x40009DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			internal float size;

			[Token(Token = "0x40009DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			internal Color color;

			[Token(Token = "0x170001DF")]
			internal int pointCount
			{
				[Token(Token = "0x6000E04")]
				[Address(RVA = "0x3387590", Offset = "0x3387590", VA = "0x3387590")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x6000E05")]
			[Address(RVA = "0x3381060", Offset = "0x3381060", VA = "0x3381060")]
			internal SplineDefinition(string n, Spline.Type t)
			{
			}

			[Token(Token = "0x6000E06")]
			[Address(RVA = "0x337EE20", Offset = "0x337EE20", VA = "0x337EE20")]
			internal SplineDefinition(string n, Spline spline)
			{
			}

			[Token(Token = "0x6000E07")]
			[Address(RVA = "0x33BC110", Offset = "0x33BC110", VA = "0x33BC110")]
			internal SplinePoint GetLastPoint()
			{
				return default(SplinePoint);
			}

			[Token(Token = "0x6000E08")]
			[Address(RVA = "0x33BC680", Offset = "0x33BC680", VA = "0x33BC680")]
			internal void SetLastPoint(SplinePoint point)
			{
			}

			[Token(Token = "0x6000E09")]
			[Address(RVA = "0x33AC9BC", Offset = "0x33AC9BC", VA = "0x33AC9BC")]
			internal void CreateClosingPoint()
			{
			}

			[Token(Token = "0x6000E0A")]
			[Address(RVA = "0x3384B28", Offset = "0x3384B28", VA = "0x3384B28")]
			internal void CreateSmooth()
			{
			}

			[Token(Token = "0x6000E0B")]
			[Address(RVA = "0x33BCBE0", Offset = "0x33BCBE0", VA = "0x33BCBE0")]
			internal void CreateBroken()
			{
			}

			[Token(Token = "0x6000E0C")]
			[Address(RVA = "0x33AAEF0", Offset = "0x33AAEF0", VA = "0x33AAEF0")]
			internal void CreateLinear()
			{
			}

			[Token(Token = "0x6000E0D")]
			[Address(RVA = "0x3385258", Offset = "0x3385258", VA = "0x3385258")]
			internal SplineComputer CreateSplineComputer(Vector3 position, Quaternion rotation)
			{
				return null;
			}

			[Token(Token = "0x6000E0E")]
			[Address(RVA = "0x33865CC", Offset = "0x33865CC", VA = "0x33865CC")]
			internal Spline CreateSpline()
			{
				return null;
			}

			[Token(Token = "0x6000E0F")]
			[Address(RVA = "0x33BD3F0", Offset = "0x33BD3F0", VA = "0x33BD3F0")]
			internal void Transform(List<Transformation> trs)
			{
			}
		}

		[Token(Token = "0x40006B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected string fileName;

		[Token(Token = "0x40006B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal SplineDefinition buffer;

		[Token(Token = "0x17000127")]
		public string name
		{
			[Token(Token = "0x6000AC6")]
			[Address(RVA = "0x33BF644", Offset = "0x33BF644", VA = "0x33BF644")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000AC7")]
		[Address(RVA = "0x33B80D4", Offset = "0x33B80D4", VA = "0x33B80D4")]
		internal Vector2[] ParseVector2(string coord)
		{
			return null;
		}

		[Token(Token = "0x6000AC8")]
		[Address(RVA = "0x33B8EF0", Offset = "0x33B8EF0", VA = "0x33B8EF0")]
		internal float[] ParseFloat(string coord)
		{
			return null;
		}

		[Token(Token = "0x6000AC9")]
		[Address(RVA = "0x33AB238", Offset = "0x33AB238", VA = "0x33AB238")]
		internal List<float> ParseFloatArray(string content)
		{
			return null;
		}

		[Token(Token = "0x6000ACA")]
		[Address(RVA = "0x33BF8B0", Offset = "0x33BF8B0", VA = "0x33BF8B0")]
		public bool IsWHiteSpace(string s)
		{
			return default(bool);
		}

		[Token(Token = "0x6000ACB")]
		[Address(RVA = "0x337EB84", Offset = "0x337EB84", VA = "0x337EB84")]
		public SplineParser()
		{
		}
	}
}
namespace DG.Tweening
{
	[Token(Token = "0x2000156")]
	public static class DOTweenModuleSprite
	{
		[Token(Token = "0x200020F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCF9D00", Offset = "0xCF9D00")]
		private sealed class <>c__DisplayClass0_0
		{
			[Token(Token = "0x40009DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SpriteRenderer target;

			[Token(Token = "0x6000E10")]
			[Address(RVA = "0x13D7234", Offset = "0x13D7234", VA = "0x13D7234")]
			public <>c__DisplayClass0_0()
			{
			}

			[Token(Token = "0x6000E11")]
			[Address(RVA = "0x13D93F8", Offset = "0x13D93F8", VA = "0x13D93F8")]
			internal Color <DOColor>b__0()
			{
				return default(Color);
			}

			[Token(Token = "0x6000E12")]
			[Address(RVA = "0x13D9664", Offset = "0x13D9664", VA = "0x13D9664")]
			internal void <DOColor>b__1(Color x)
			{
			}
		}

		[Token(Token = "0x2000210")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCF9D10", Offset = "0xCF9D10")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x40009DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SpriteRenderer target;

			[Token(Token = "0x6000E13")]
			[Address(RVA = "0x13D79F4", Offset = "0x13D79F4", VA = "0x13D79F4")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x6000E14")]
			[Address(RVA = "0x13D98BC", Offset = "0x13D98BC", VA = "0x13D98BC")]
			internal Color <DOFade>b__0()
			{
				return default(Color);
			}

			[Token(Token = "0x6000E15")]
			[Address(RVA = "0x13D9B28", Offset = "0x13D9B28", VA = "0x13D9B28")]
			internal void <DOFade>b__1(Color x)
			{
			}
		}

		[Token(Token = "0x2000211")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCF9D20", Offset = "0xCF9D20")]
		private sealed class <>c__DisplayClass3_0
		{
			[Token(Token = "0x40009DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Color to;

			[Token(Token = "0x40009E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SpriteRenderer target;

			[Token(Token = "0x6000E16")]
			[Address(RVA = "0x13D9308", Offset = "0x13D9308", VA = "0x13D9308")]
			public <>c__DisplayClass3_0()
			{
			}

			[Token(Token = "0x6000E17")]
			[Address(RVA = "0x13D9D80", Offset = "0x13D9D80", VA = "0x13D9D80")]
			internal Color <DOBlendableColor>b__0()
			{
				return default(Color);
			}

			[Token(Token = "0x6000E18")]
			[Address(RVA = "0x13D9F5C", Offset = "0x13D9F5C", VA = "0x13D9F5C")]
			internal void <DOBlendableColor>b__1(Color x)
			{
			}
		}

		[Token(Token = "0x6000ACC")]
		[Address(RVA = "0x13D6B30", Offset = "0x13D6B30", VA = "0x13D6B30")]
		public static TweenerCore<Color, Color, ColorOptions> DOColor(this SpriteRenderer target, Color endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6000ACD")]
		[Address(RVA = "0x13D7324", Offset = "0x13D7324", VA = "0x13D7324")]
		public static TweenerCore<Color, Color, ColorOptions> DOFade(this SpriteRenderer target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6000ACE")]
		[Address(RVA = "0x13D7AE4", Offset = "0x13D7AE4", VA = "0x13D7AE4")]
		public static Sequence DOGradientColor(this SpriteRenderer target, Gradient gradient, float duration)
		{
			return null;
		}

		[Token(Token = "0x6000ACF")]
		[Address(RVA = "0x13D8988", Offset = "0x13D8988", VA = "0x13D8988")]
		public static Tweener DOBlendableColor(this SpriteRenderer target, Color endValue, float duration)
		{
			return null;
		}
	}
	[Token(Token = "0x2000157")]
	public static class DOTweenModuleUI
	{
		[Token(Token = "0x2000212")]
		public static class Utils
		{
			[Token(Token = "0x6000E19")]
			[Address(RVA = "0x14D3248", Offset = "0x14D3248", VA = "0x14D3248")]
			public static Vector2 SwitchToRectTransform(RectTransform from, RectTransform to)
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x2000213")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCF9D30", Offset = "0xCF9D30")]
		private sealed class <>c__DisplayClass0_0
		{
			[Token(Token = "0x40009E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public CanvasGroup target;

			[Token(Token = "0x6000E1A")]
			[Address(RVA = "0x14C2E44", Offset = "0x14C2E44", VA = "0x14C2E44")]
			public <>c__DisplayClass0_0()
			{
			}

			[Token(Token = "0x6000E1B")]
			[Address(RVA = "0x14C2F34", Offset = "0x14C2F34", VA = "0x14C2F34")]
			internal float <DOFade>b__0()
			{
				return default(float);
			}

			[Token(Token = "0x6000E1C")]
			[Address(RVA = "0x14C3188", Offset = "0x14C3188", VA = "0x14C3188")]
			internal void <DOFade>b__1(float x)
			{
			}
		}

		[Token(Token = "0x2000214")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCF9D40", Offset = "0xCF9D40")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x40009E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Graphic target;

			[Token(Token = "0x6000E1D")]
			[Address(RVA = "0x14C6C2C", Offset = "0x14C6C2C", VA = "0x14C6C2C")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x6000E1E")]
			[Address(RVA = "0x14C6D1C", Offset = "0x14C6D1C", VA = "0x14C6D1C")]
			internal Color <DOColor>b__0()
			{
				return default(Color);
			}

			[Token(Token = "0x6000E1F")]
			[Address(RVA = "0x14C6F90", Offset = "0x14C6F90", VA = "0x14C6F90")]
			internal void <DOColor>b__1(Color x)
			{
			}
		}

		[Token(Token = "0x2000215")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCF9D50", Offset = "0xCF9D50")]
		private sealed class <>c__DisplayClass2_0
		{
			[Token(Token = "0x40009E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Graphic target;

			[Token(Token = "0x6000E20")]
			[Address(RVA = "0x14CBEF8", Offset = "0x14CBEF8", VA = "0x14CBEF8")]
			public <>c__DisplayClass2_0()
			{
			}

			[Token(Token = "0x6000E21")]
			[Address(RVA = "0x14CBFE8", Offset = "0x14CBFE8", VA = "0x14CBFE8")]
			internal Color <DOFade>b__0()
			{
				return default(Color);
			}

			[Token(Token = "0x6000E22")]
			[Address(RVA = "0x14CC25C", Offset = "0x14CC25C", VA = "0x14CC25C")]
			internal void <DOFade>b__1(Color x)
			{
			}
		}

		[Token(Token = "0x2000216")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCF9D60", Offset = "0xCF9D60")]
		private sealed class <>c__DisplayClass3_0
		{
			[Token(Token = "0x40009E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Image target;

			[Token(Token = "0x6000E23")]
			[Address(RVA = "0x14D0848", Offset = "0x14D0848", VA = "0x14D0848")]
			public <>c__DisplayClass3_0()
			{
			}

			[Token(Token = "0x6000E24")]
			[Address(RVA = "0x14D0938", Offset = "0x14D0938", VA = "0x14D0938")]
			internal Color <DOColor>b__0()
			{
				return default(Color);
			}

			[Token(Token = "0x6000E25")]
			[Address(RVA = "0x14D0BAC", Offset = "0x14D0BAC", VA = "0x14D0BAC")]
			internal void <DOColor>b__1(Color x)
			{
			}
		}

		[Token(Token = "0x2000217")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCF9D70", Offset = "0xCF9D70")]
		private sealed class <>c__DisplayClass4_0
		{
			[Token(Token = "0x40009E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Image target;

			[Token(Token = "0x6000E26")]
			[Address(RVA = "0x14D0E0C", Offset = "0x14D0E0C", VA = "0x14D0E0C")]
			public <>c__DisplayClass4_0()
			{
			}

			[Token(Token = "0x6000E27")]
			[Address(RVA = "0x14D0EFC", Offset = "0x14D0EFC", VA = "0x14D0EFC")]
			internal Color <DOFade>b__0()
			{
				return default(Color);
			}

			[Token(Token = "0x6000E28")]
			[Address(RVA = "0x14D1170", Offset = "0x14D1170", VA = "0x14D1170")]
			internal void <DOFade>b__1(Color x)
			{
			}
		}

		[Token(Token = "0x2000218")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCF9D80", Offset = "0xCF9D80")]
		private sealed class <>c__DisplayClass5_0
		{
			[Token(Token = "0x40009E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Image target;

			[Token(Token = "0x6000E29")]
			[Address(RVA = "0x14D13D0", Offset = "0x14D13D0", VA = "0x14D13D0")]
			public <>c__DisplayClass5_0()
			{
			}

			[Token(Token = "0x6000E2A")]
			[Address(RVA = "0x14D14C0", Offset = "0x14D14C0", VA = "0x14D14C0")]
			internal float <DOFillAmount>b__0()
			{
				return default(float);
			}

			[Token(Token = "0x6000E2B")]
			[Address(RVA = "0x14D1714", Offset = "0x14D1714", VA = "0x14D1714")]
			internal void <DOFillAmount>b__1(float x)
			{
			}
		}

		[Token(Token = "0x2000219")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCF9D90", Offset = "0xCF9D90")]
		private sealed class <>c__DisplayClass7_0
		{
			[Token(Token = "0x40009E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LayoutElement target;

			[Token(Token = "0x6000E2C")]
			[Address(RVA = "0x14D1960", Offset = "0x14D1960", VA = "0x14D1960")]
			public <>c__DisplayClass7_0()
			{
			}

			[Token(Token = "0x6000E2D")]
			[Address(RVA = "0x14D1A50", Offset = "0x14D1A50", VA = "0x14D1A50")]
			internal Vector2 <DOFlexibleSize>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x6000E2E")]
			[Address(RVA = "0x14D1DC4", Offset = "0x14D1DC4", VA = "0x14D1DC4")]
			internal void <DOFlexibleSize>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x200021A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCF9DA0", Offset = "0xCF9DA0")]
		private sealed class <>c__DisplayClass8_0
		{
			[Token(Token = "0x40009E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LayoutElement target;

			[Token(Token = "0x6000E2F")]
			[Address(RVA = "0x14D21B0", Offset = "0x14D21B0", VA = "0x14D21B0")]
			public <>c__DisplayClass8_0()
			{
			}

			[Token(Token = "0x6000E30")]
			[Address(RVA = "0x14D22A0", Offset = "0x14D22A0", VA = "0x14D22A0")]
			internal Vector2 <DOMinSize>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x6000E31")]
			[Address(RVA = "0x14D2614", Offset = "0x14D2614", VA = "0x14D2614")]
			internal void <DOMinSize>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x200021B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCF9DB0", Offset = "0xCF9DB0")]
		private sealed class <>c__DisplayClass9_0
		{
			[Token(Token = "0x40009E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LayoutElement target;

			[Token(Token = "0x6000E32")]
			[Address(RVA = "0x14D2A00", Offset = "0x14D2A00", VA = "0x14D2A00")]
			public <>c__DisplayClass9_0()
			{
			}

			[Token(Token = "0x6000E33")]
			[Address(RVA = "0x14D2AF0", Offset = "0x14D2AF0", VA = "0x14D2AF0")]
			internal Vector2 <DOPreferredSize>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x6000E34")]
			[Address(RVA = "0x14D2E5C", Offset = "0x14D2E5C", VA = "0x14D2E5C")]
			internal void <DOPreferredSize>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x200021C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCF9DC0", Offset = "0xCF9DC0")]
		private sealed class <>c__DisplayClass10_0
		{
			[Token(Token = "0x40009EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Outline target;

			[Token(Token = "0x6000E35")]
			[Address(RVA = "0x14C33D4", Offset = "0x14C33D4", VA = "0x14C33D4")]
			public <>c__DisplayClass10_0()
			{
			}

			[Token(Token = "0x6000E36")]
			[Address(RVA = "0x14C34C4", Offset = "0x14C34C4", VA = "0x14C34C4")]
			internal Color <DOColor>b__0()
			{
				return default(Color);
			}

			[Token(Token = "0x6000E37")]
			[Address(RVA = "0x14C3730", Offset = "0x14C3730", VA = "0x14C3730")]
			internal void <DOColor>b__1(Color x)
			{
			}
		}

		[Token(Token = "0x200021D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCF9DD0", Offset = "0xCF9DD0")]
		private sealed class <>c__DisplayClass11_0
		{
			[Token(Token = "0x40009EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Outline target;

			[Token(Token = "0x6000E38")]
			[Address(RVA = "0x14C3988", Offset = "0x14C3988", VA = "0x14C3988")]
			public <>c__DisplayClass11_0()
			{
			}

			[Token(Token = "0x6000E39")]
			[Address(RVA = "0x14C3A78", Offset = "0x14C3A78", VA = "0x14C3A78")]
			internal Color <DOFade>b__0()
			{
				return default(Color);
			}

			[Token(Token = "0x6000E3A")]
			[Address(RVA = "0x14C3CE4", Offset = "0x14C3CE4", VA = "0x14C3CE4")]
			internal void <DOFade>b__1(Color x)
			{
			}
		}

		[Token(Token = "0x200021E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCF9DE0", Offset = "0xCF9DE0")]
		private sealed class <>c__DisplayClass12_0
		{
			[Token(Token = "0x40009EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Outline target;

			[Token(Token = "0x6000E3B")]
			[Address(RVA = "0x14C3F3C", Offset = "0x14C3F3C", VA = "0x14C3F3C")]
			public <>c__DisplayClass12_0()
			{
			}

			[Token(Token = "0x6000E3C")]
			[Address(RVA = "0x14C402C", Offset = "0x14C402C", VA = "0x14C402C")]
			internal Vector2 <DOScale>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x6000E3D")]
			[Address(RVA = "0x14C4280", Offset = "0x14C4280", VA = "0x14C4280")]
			internal void <DOScale>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x200021F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCF9DF0", Offset = "0xCF9DF0")]
		private sealed class <>c__DisplayClass13_0
		{
			[Token(Token = "0x40009ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform target;

			[Token(Token = "0x6000E3E")]
			[Address(RVA = "0x14C44CC", Offset = "0x14C44CC", VA = "0x14C44CC")]
			public <>c__DisplayClass13_0()
			{
			}

			[Token(Token = "0x6000E3F")]
			[Address(RVA = "0x14C45BC", Offset = "0x14C45BC", VA = "0x14C45BC")]
			internal Vector2 <DOAnchorPos>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x6000E40")]
			[Address(RVA = "0x14C4810", Offset = "0x14C4810", VA = "0x14C4810")]
			internal void <DOAnchorPos>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x2000220")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCF9E00", Offset = "0xCF9E00")]
		private sealed class <>c__DisplayClass14_0
		{
			[Token(Token = "0x40009EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform target;

			[Token(Token = "0x6000E41")]
			[Address(RVA = "0x14C4A5C", Offset = "0x14C4A5C", VA = "0x14C4A5C")]
			public <>c__DisplayClass14_0()
			{
			}

			[Token(Token = "0x6000E42")]
			[Address(RVA = "0x14C4B4C", Offset = "0x14C4B4C", VA = "0x14C4B4C")]
			internal Vector2 <DOAnchorPosX>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x6000E43")]
			[Address(RVA = "0x14C4DA0", Offset = "0x14C4DA0", VA = "0x14C4DA0")]
			internal void <DOAnchorPosX>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x2000221")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCF9E10", Offset = "0xCF9E10")]
		private sealed class <>c__DisplayClass15_0
		{
			[Token(Token = "0x40009EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform target;

			[Token(Token = "0x6000E44")]
			[Address(RVA = "0x14C4FEC", Offset = "0x14C4FEC", VA = "0x14C4FEC")]
			public <>c__DisplayClass15_0()
			{
			}

			[Token(Token = "0x6000E45")]
			[Address(RVA = "0x14C50DC", Offset = "0x14C50DC", VA = "0x14C50DC")]
			internal Vector2 <DOAnchorPosY>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x6000E46")]
			[Address(RVA = "0x14C5330", Offset = "0x14C5330", VA = "0x14C5330")]
			internal void <DOAnchorPosY>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x2000222")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCF9E20", Offset = "0xCF9E20")]
		private sealed class <>c__DisplayClass16_0
		{
			[Token(Token = "0x40009F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform target;

			[Token(Token = "0x6000E47")]
			[Address(RVA = "0x14C557C", Offset = "0x14C557C", VA = "0x14C557C")]
			public <>c__DisplayClass16_0()
			{
			}

			[Token(Token = "0x6000E48")]
			[Address(RVA = "0x14C566C", Offset = "0x14C566C", VA = "0x14C566C")]
			internal Vector3 <DOAnchorPos3D>b__0()
			{
				return default(Vector3);
			}

			[Token(Token = "0x6000E49")]
			[Address(RVA = "0x14C58D0", Offset = "0x14C58D0", VA = "0x14C58D0")]
			internal void <DOAnchorPos3D>b__1(Vector3 x)
			{
			}
		}

		[Token(Token = "0x2000223")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCF9E30", Offset = "0xCF9E30")]
		private sealed class <>c__DisplayClass17_0
		{
			[Token(Token = "0x40009F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform target;

			[Token(Token = "0x6000E4A")]
			[Address(RVA = "0x14C5B28", Offset = "0x14C5B28", VA = "0x14C5B28")]
			public <>c__DisplayClass17_0()
			{
			}

			[Token(Token = "0x6000E4B")]
			[Address(RVA = "0x14C5C18", Offset = "0x14C5C18", VA = "0x14C5C18")]
			internal Vector3 <DOAnchorPos3DX>b__0()
			{
				return default(Vector3);
			}

			[Token(Token = "0x6000E4C")]
			[Address(RVA = "0x14C5E7C", Offset = "0x14C5E7C", VA = "0x14C5E7C")]
			internal void <DOAnchorPos3DX>b__1(Vector3 x)
			{
			}
		}

		[Token(Token = "0x2000224")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCF9E40", Offset = "0xCF9E40")]
		private sealed class <>c__DisplayClass18_0
		{
			[Token(Token = "0x40009F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform target;

			[Token(Token = "0x6000E4D")]
			[Address(RVA = "0x14C60D4", Offset = "0x14C60D4", VA = "0x14C60D4")]
			public <>c__DisplayClass18_0()
			{
			}

			[Token(Token = "0x6000E4E")]
			[Address(RVA = "0x14C61C4", Offset = "0x14C61C4", VA = "0x14C61C4")]
			internal Vector3 <DOAnchorPos3DY>b__0()
			{
				return default(Vector3);
			}

			[Token(Token = "0x6000E4F")]
			[Address(RVA = "0x14C6428", Offset = "0x14C6428", VA = "0x14C6428")]
			internal void <DOAnchorPos3DY>b__1(Vector3 x)
			{
			}
		}

		[Token(Token = "0x2000225")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCF9E50", Offset = "0xCF9E50")]
		private sealed class <>c__DisplayClass19_0
		{
			[Token(Token = "0x40009F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform target;

			[Token(Token = "0x6000E50")]
			[Address(RVA = "0x14C6680", Offset = "0x14C6680", VA = "0x14C6680")]
			public <>c__DisplayClass19_0()
			{
			}

			[Token(Token = "0x6000E51")]
			[Address(RVA = "0x14C6770", Offset = "0x14C6770", VA = "0x14C6770")]
			internal Vector3 <DOAnchorPos3DZ>b__0()
			{
				return default(Vector3);
			}

			[Token(Token = "0x6000E52")]
			[Address(RVA = "0x14C69D4", Offset = "0x14C69D4", VA = "0x14C69D4")]
			internal void <DOAnchorPos3DZ>b__1(Vector3 x)
			{
			}
		}

		[Token(Token = "0x2000226")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCF9E60", Offset = "0xCF9E60")]
		private sealed class <>c__DisplayClass20_0
		{
			[Token(Token = "0x40009F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform target;

			[Token(Token = "0x6000E53")]
			[Address(RVA = "0x14C71F0", Offset = "0x14C71F0", VA = "0x14C71F0")]
			public <>c__DisplayClass20_0()
			{
			}

			[Token(Token = "0x6000E54")]
			[Address(RVA = "0x14C72E0", Offset = "0x14C72E0", VA = "0x14C72E0")]
			internal Vector2 <DOAnchorMax>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x6000E55")]
			[Address(RVA = "0x14C7534", Offset = "0x14C7534", VA = "0x14C7534")]
			internal void <DOAnchorMax>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x2000227")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCF9E70", Offset = "0xCF9E70")]
		private sealed class <>c__DisplayClass21_0
		{
			[Token(Token = "0x40009F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform target;

			[Token(Token = "0x6000E56")]
			[Address(RVA = "0x14C7780", Offset = "0x14C7780", VA = "0x14C7780")]
			public <>c__DisplayClass21_0()
			{
			}

			[Token(Token = "0x6000E57")]
			[Address(RVA = "0x14C7870", Offset = "0x14C7870", VA = "0x14C7870")]
			internal Vector2 <DOAnchorMin>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x6000E58")]
			[Address(RVA = "0x14C7AC4", Offset = "0x14C7AC4", VA = "0x14C7AC4")]
			internal void <DOAnchorMin>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x2000228")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCF9E80", Offset = "0xCF9E80")]
		private sealed class <>c__DisplayClass22_0
		{
			[Token(Token = "0x40009F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform target;

			[Token(Token = "0x6000E59")]
			[Address(RVA = "0x14C7D10", Offset = "0x14C7D10", VA = "0x14C7D10")]
			public <>c__DisplayClass22_0()
			{
			}

			[Token(Token = "0x6000E5A")]
			[Address(RVA = "0x14C7E00", Offset = "0x14C7E00", VA = "0x14C7E00")]
			internal Vector2 <DOPivot>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x6000E5B")]
			[Address(RVA = "0x14C8054", Offset = "0x14C8054", VA = "0x14C8054")]
			internal void <DOPivot>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x2000229")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCF9E90", Offset = "0xCF9E90")]
		private sealed class <>c__DisplayClass23_0
		{
			[Token(Token = "0x40009F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform target;

			[Token(Token = "0x6000E5C")]
			[Address(RVA = "0x14C82A0", Offset = "0x14C82A0", VA = "0x14C82A0")]
			public <>c__DisplayClass23_0()
			{
			}

			[Token(Token = "0x6000E5D")]
			[Address(RVA = "0x14C8390", Offset = "0x14C8390", VA = "0x14C8390")]
			internal Vector2 <DOPivotX>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x6000E5E")]
			[Address(RVA = "0x14C85E4", Offset = "0x14C85E4", VA = "0x14C85E4")]
			internal void <DOPivotX>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x200022A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCF9EA0", Offset = "0xCF9EA0")]
		private sealed class <>c__DisplayClass24_0
		{
			[Token(Token = "0x40009F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform target;

			[Token(Token = "0x6000E5F")]
			[Address(RVA = "0x14C8830", Offset = "0x14C8830", VA = "0x14C8830")]
			public <>c__DisplayClass24_0()
			{
			}

			[Token(Token = "0x6000E60")]
			[Address(RVA = "0x14C8920", Offset = "0x14C8920", VA = "0x14C8920")]
			internal Vector2 <DOPivotY>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x6000E61")]
			[Address(RVA = "0x14C8B74", Offset = "0x14C8B74", VA = "0x14C8B74")]
			internal void <DOPivotY>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x200022B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCF9EB0", Offset = "0xCF9EB0")]
		private sealed class <>c__DisplayClass25_0
		{
			[Token(Token = "0x40009F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform target;

			[Token(Token = "0x6000E62")]
			[Address(RVA = "0x14C8DC0", Offset = "0x14C8DC0", VA = "0x14C8DC0")]
			public <>c__DisplayClass25_0()
			{
			}

			[Token(Token = "0x6000E63")]
			[Address(RVA = "0x14C8EB0", Offset = "0x14C8EB0", VA = "0x14C8EB0")]
			internal Vector2 <DOSizeDelta>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x6000E64")]
			[Address(RVA = "0x14C9104", Offset = "0x14C9104", VA = "0x14C9104")]
			internal void <DOSizeDelta>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x200022C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCF9EC0", Offset = "0xCF9EC0")]
		private sealed class <>c__DisplayClass26_0
		{
			[Token(Token = "0x40009FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform target;

			[Token(Token = "0x6000E65")]
			[Address(RVA = "0x14C9350", Offset = "0x14C9350", VA = "0x14C9350")]
			public <>c__DisplayClass26_0()
			{
			}

			[Token(Token = "0x6000E66")]
			[Address(RVA = "0x14C9440", Offset = "0x14C9440", VA = "0x14C9440")]
			internal Vector3 <DOPunchAnchorPos>b__0()
			{
				return default(Vector3);
			}

			[Token(Token = "0x6000E67")]
			[Address(RVA = "0x14C974C", Offset = "0x14C974C", VA = "0x14C974C")]
			internal void <DOPunchAnchorPos>b__1(Vector3 x)
			{
			}
		}

		[Token(Token = "0x200022D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCF9ED0", Offset = "0xCF9ED0")]
		private sealed class <>c__DisplayClass27_0
		{
			[Token(Token = "0x40009FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform target;

			[Token(Token = "0x6000E68")]
			[Address(RVA = "0x14C9A5C", Offset = "0x14C9A5C", VA = "0x14C9A5C")]
			public <>c__DisplayClass27_0()
			{
			}

			[Token(Token = "0x6000E69")]
			[Address(RVA = "0x14C9B4C", Offset = "0x14C9B4C", VA = "0x14C9B4C")]
			internal Vector3 <DOShakeAnchorPos>b__0()
			{
				return default(Vector3);
			}

			[Token(Token = "0x6000E6A")]
			[Address(RVA = "0x14C9E58", Offset = "0x14C9E58", VA = "0x14C9E58")]
			internal void <DOShakeAnchorPos>b__1(Vector3 x)
			{
			}
		}

		[Token(Token = "0x200022E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCF9EE0", Offset = "0xCF9EE0")]
		private sealed class <>c__DisplayClass28_0
		{
			[Token(Token = "0x40009FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform target;

			[Token(Token = "0x6000E6B")]
			[Address(RVA = "0x14CA168", Offset = "0x14CA168", VA = "0x14CA168")]
			public <>c__DisplayClass28_0()
			{
			}

			[Token(Token = "0x6000E6C")]
			[Address(RVA = "0x14CA258", Offset = "0x14CA258", VA = "0x14CA258")]
			internal Vector3 <DOShakeAnchorPos>b__0()
			{
				return default(Vector3);
			}

			[Token(Token = "0x6000E6D")]
			[Address(RVA = "0x14CA564", Offset = "0x14CA564", VA = "0x14CA564")]
			internal void <DOShakeAnchorPos>b__1(Vector3 x)
			{
			}
		}

		[Token(Token = "0x200022F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCF9EF0", Offset = "0xCF9EF0")]
		private sealed class <>c__DisplayClass29_0
		{
			[Token(Token = "0x40009FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform target;

			[Token(Token = "0x40009FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float startPosY;

			[Token(Token = "0x40009FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public bool offsetYSet;

			[Token(Token = "0x4000A00")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float offsetY;

			[Token(Token = "0x4000A01")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Sequence s;

			[Token(Token = "0x4000A02")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Vector2 endValue;

			[Token(Token = "0x6000E6E")]
			[Address(RVA = "0x14CA874", Offset = "0x14CA874", VA = "0x14CA874")]
			public <>c__DisplayClass29_0()
			{
			}

			[Token(Token = "0x6000E6F")]
			[Address(RVA = "0x14CA964", Offset = "0x14CA964", VA = "0x14CA964")]
			internal Vector2 <DOJumpAnchorPos>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x6000E70")]
			[Address(RVA = "0x14CABB8", Offset = "0x14CABB8", VA = "0x14CABB8")]
			internal void <DOJumpAnchorPos>b__1(Vector2 x)
			{
			}

			[Token(Token = "0x6000E71")]
			[Address(RVA = "0x14CAE04", Offset = "0x14CAE04", VA = "0x14CAE04")]
			internal void <DOJumpAnchorPos>b__2()
			{
			}

			[Token(Token = "0x6000E72")]
			[Address(RVA = "0x14CB05C", Offset = "0x14CB05C", VA = "0x14CB05C")]
			internal Vector2 <DOJumpAnchorPos>b__3()
			{
				return default(Vector2);
			}

			[Token(Token = "0x6000E73")]
			[Address(RVA = "0x14CB2B0", Offset = "0x14CB2B0", VA = "0x14CB2B0")]
			internal void <DOJumpAnchorPos>b__4(Vector2 x)
			{
			}

			[Token(Token = "0x6000E74")]
			[Address(RVA = "0x14CB4FC", Offset = "0x14CB4FC", VA = "0x14CB4FC")]
			internal void <DOJumpAnchorPos>b__5()
			{
			}
		}

		[Token(Token = "0x2000230")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCF9F00", Offset = "0xCF9F00")]
		private sealed class <>c__DisplayClass30_0
		{
			[Token(Token = "0x4000A03")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ScrollRect target;

			[Token(Token = "0x6000E75")]
			[Address(RVA = "0x14CC4BC", Offset = "0x14CC4BC", VA = "0x14CC4BC")]
			public <>c__DisplayClass30_0()
			{
			}

			[Token(Token = "0x6000E76")]
			[Address(RVA = "0x14CC5AC", Offset = "0x14CC5AC", VA = "0x14CC5AC")]
			internal Vector2 <DONormalizedPos>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x6000E77")]
			[Address(RVA = "0x14CC910", Offset = "0x14CC910", VA = "0x14CC910")]
			internal void <DONormalizedPos>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x2000231")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCF9F10", Offset = "0xCF9F10")]
		private sealed class <>c__DisplayClass31_0
		{
			[Token(Token = "0x4000A04")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ScrollRect target;

			[Token(Token = "0x6000E78")]
			[Address(RVA = "0x14CCCEC", Offset = "0x14CCCEC", VA = "0x14CCCEC")]
			public <>c__DisplayClass31_0()
			{
			}

			[Token(Token = "0x6000E79")]
			[Address(RVA = "0x14CCDDC", Offset = "0x14CCDDC", VA = "0x14CCDDC")]
			internal float <DOHorizontalNormalizedPos>b__0()
			{
				return default(float);
			}

			[Token(Token = "0x6000E7A")]
			[Address(RVA = "0x14CD030", Offset = "0x14CD030", VA = "0x14CD030")]
			internal void <DOHorizontalNormalizedPos>b__1(float x)
			{
			}
		}

		[Token(Token = "0x2000232")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCF9F20", Offset = "0xCF9F20")]
		private sealed class <>c__DisplayClass32_0
		{
			[Token(Token = "0x4000A05")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ScrollRect target;

			[Token(Token = "0x6000E7B")]
			[Address(RVA = "0x14CD27C", Offset = "0x14CD27C", VA = "0x14CD27C")]
			public <>c__DisplayClass32_0()
			{
			}

			[Token(Token = "0x6000E7C")]
			[Address(RVA = "0x14CD36C", Offset = "0x14CD36C", VA = "0x14CD36C")]
			internal float <DOVerticalNormalizedPos>b__0()
			{
				return default(float);
			}

			[Token(Token = "0x6000E7D")]
			[Address(RVA = "0x14CD5C0", Offset = "0x14CD5C0", VA = "0x14CD5C0")]
			internal void <DOVerticalNormalizedPos>b__1(float x)
			{
			}
		}

		[Token(Token = "0x2000233")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCF9F30", Offset = "0xCF9F30")]
		private sealed class <>c__DisplayClass33_0
		{
			[Token(Token = "0x4000A06")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Slider target;

			[Token(Token = "0x6000E7E")]
			[Address(RVA = "0x14CD80C", Offset = "0x14CD80C", VA = "0x14CD80C")]
			public <>c__DisplayClass33_0()
			{
			}

			[Token(Token = "0x6000E7F")]
			[Address(RVA = "0x14CD8FC", Offset = "0x14CD8FC", VA = "0x14CD8FC")]
			internal float <DOValue>b__0()
			{
				return default(float);
			}

			[Token(Token = "0x6000E80")]
			[Address(RVA = "0x14CDB58", Offset = "0x14CDB58", VA = "0x14CDB58")]
			internal void <DOValue>b__1(float x)
			{
			}
		}

		[Token(Token = "0x2000234")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCF9F40", Offset = "0xCF9F40")]
		private sealed class <>c__DisplayClass34_0
		{
			[Token(Token = "0x4000A07")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Text target;

			[Token(Token = "0x6000E81")]
			[Address(RVA = "0x14CDDAC", Offset = "0x14CDDAC", VA = "0x14CDDAC")]
			public <>c__DisplayClass34_0()
			{
			}

			[Token(Token = "0x6000E82")]
			[Address(RVA = "0x14CDE9C", Offset = "0x14CDE9C", VA = "0x14CDE9C")]
			internal Color <DOColor>b__0()
			{
				return default(Color);
			}

			[Token(Token = "0x6000E83")]
			[Address(RVA = "0x14CE110", Offset = "0x14CE110", VA = "0x14CE110")]
			internal void <DOColor>b__1(Color x)
			{
			}
		}

		[Token(Token = "0x2000235")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCF9F50", Offset = "0xCF9F50")]
		private sealed class <>c__DisplayClass35_0
		{
			[Token(Token = "0x4000A08")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Text target;

			[Token(Token = "0x6000E84")]
			[Address(RVA = "0x14CE370", Offset = "0x14CE370", VA = "0x14CE370")]
			public <>c__DisplayClass35_0()
			{
			}

			[Token(Token = "0x6000E85")]
			[Address(RVA = "0x14CE460", Offset = "0x14CE460", VA = "0x14CE460")]
			internal Color <DOFade>b__0()
			{
				return default(Color);
			}

			[Token(Token = "0x6000E86")]
			[Address(RVA = "0x14CE6D4", Offset = "0x14CE6D4", VA = "0x14CE6D4")]
			internal void <DOFade>b__1(Color x)
			{
			}
		}

		[Token(Token = "0x2000236")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCF9F60", Offset = "0xCF9F60")]
		private sealed class <>c__DisplayClass36_0
		{
			[Token(Token = "0x4000A09")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Text target;

			[Token(Token = "0x6000E87")]
			[Address(RVA = "0x14CE934", Offset = "0x14CE934", VA = "0x14CE934")]
			public <>c__DisplayClass36_0()
			{
			}

			[Token(Token = "0x6000E88")]
			[Address(RVA = "0x14CEA24", Offset = "0x14CEA24", VA = "0x14CEA24")]
			internal string <DOText>b__0()
			{
				return null;
			}

			[Token(Token = "0x6000E89")]
			[Address(RVA = "0x14CEC6C", Offset = "0x14CEC6C", VA = "0x14CEC6C")]
			internal void <DOText>b__1(string x)
			{
			}
		}

		[Token(Token = "0x2000237")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCF9F70", Offset = "0xCF9F70")]
		private sealed class <>c__DisplayClass37_0
		{
			[Token(Token = "0x4000A0A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Color to;

			[Token(Token = "0x4000A0B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Graphic target;

			[Token(Token = "0x6000E8A")]
			[Address(RVA = "0x14CEEC0", Offset = "0x14CEEC0", VA = "0x14CEEC0")]
			public <>c__DisplayClass37_0()
			{
			}

			[Token(Token = "0x6000E8B")]
			[Address(RVA = "0x14CEFB0", Offset = "0x14CEFB0", VA = "0x14CEFB0")]
			internal Color <DOBlendableColor>b__0()
			{
				return default(Color);
			}

			[Token(Token = "0x6000E8C")]
			[Address(RVA = "0x14CF18C", Offset = "0x14CF18C", VA = "0x14CF18C")]
			internal void <DOBlendableColor>b__1(Color x)
			{
			}
		}

		[Token(Token = "0x2000238")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCF9F80", Offset = "0xCF9F80")]
		private sealed class <>c__DisplayClass38_0
		{
			[Token(Token = "0x4000A0C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Color to;

			[Token(Token = "0x4000A0D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Image target;

			[Token(Token = "0x6000E8D")]
			[Address(RVA = "0x14CF748", Offset = "0x14CF748", VA = "0x14CF748")]
			public <>c__DisplayClass38_0()
			{
			}

			[Token(Token = "0x6000E8E")]
			[Address(RVA = "0x14CF838", Offset = "0x14CF838", VA = "0x14CF838")]
			internal Color <DOBlendableColor>b__0()
			{
				return default(Color);
			}

			[Token(Token = "0x6000E8F")]
			[Address(RVA = "0x14CFA14", Offset = "0x14CFA14", VA = "0x14CFA14")]
			internal void <DOBlendableColor>b__1(Color x)
			{
			}
		}

		[Token(Token = "0x2000239")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCF9F90", Offset = "0xCF9F90")]
		private sealed class <>c__DisplayClass39_0
		{
			[Token(Token = "0x4000A0E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Color to;

			[Token(Token = "0x4000A0F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Text target;

			[Token(Token = "0x6000E90")]
			[Address(RVA = "0x14CFFD0", Offset = "0x14CFFD0", VA = "0x14CFFD0")]
			public <>c__DisplayClass39_0()
			{
			}

			[Token(Token = "0x6000E91")]
			[Address(RVA = "0x14D00C0", Offset = "0x14D00C0", VA = "0x14D00C0")]
			internal Color <DOBlendableColor>b__0()
			{
				return default(Color);
			}

			[Token(Token = "0x6000E92")]
			[Address(RVA = "0x14D029C", Offset = "0x14D029C", VA = "0x14D029C")]
			internal void <DOBlendableColor>b__1(Color x)
			{
			}
		}

		[Token(Token = "0x6000AD0")]
		[Address(RVA = "0x13DA508", Offset = "0x13DA508", VA = "0x13DA508")]
		public static TweenerCore<float, float, FloatOptions> DOFade(this CanvasGroup target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6000AD1")]
		[Address(RVA = "0x13DABDC", Offset = "0x13DABDC", VA = "0x13DABDC")]
		public static TweenerCore<Color, Color, ColorOptions> DOColor(this Graphic target, Color endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6000AD2")]
		[Address(RVA = "0x13DB2DC", Offset = "0x13DB2DC", VA = "0x13DB2DC")]
		public static TweenerCore<Color, Color, ColorOptions> DOFade(this Graphic target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6000AD3")]
		[Address(RVA = "0x13DB9B0", Offset = "0x13DB9B0", VA = "0x13DB9B0")]
		public static TweenerCore<Color, Color, ColorOptions> DOColor(this Image target, Color endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6000AD4")]
		[Address(RVA = "0x13DC0B8", Offset = "0x13DC0B8", VA = "0x13DC0B8")]
		public static TweenerCore<Color, Color, ColorOptions> DOFade(this Image target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6000AD5")]
		[Address(RVA = "0x13DC78C", Offset = "0x13DC78C", VA = "0x13DC78C")]
		public static TweenerCore<float, float, FloatOptions> DOFillAmount(this Image target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6000AD6")]
		[Address(RVA = "0x13DD0A4", Offset = "0x13DD0A4", VA = "0x13DD0A4")]
		public static Sequence DOGradientColor(this Image target, Gradient gradient, float duration)
		{
			return null;
		}

		[Token(Token = "0x6000AD7")]
		[Address(RVA = "0x13DDF50", Offset = "0x13DDF50", VA = "0x13DDF50")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOFlexibleSize(this LayoutElement target, Vector2 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6000AD8")]
		[Address(RVA = "0x13DE6C8", Offset = "0x13DE6C8", VA = "0x13DE6C8")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOMinSize(this LayoutElement target, Vector2 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6000AD9")]
		[Address(RVA = "0x13DEE40", Offset = "0x13DEE40", VA = "0x13DEE40")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOPreferredSize(this LayoutElement target, Vector2 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6000ADA")]
		[Address(RVA = "0x13DF5B8", Offset = "0x13DF5B8", VA = "0x13DF5B8")]
		public static TweenerCore<Color, Color, ColorOptions> DOColor(this Outline target, Color endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6000ADB")]
		[Address(RVA = "0x13DFCC0", Offset = "0x13DFCC0", VA = "0x13DFCC0")]
		public static TweenerCore<Color, Color, ColorOptions> DOFade(this Outline target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6000ADC")]
		[Address(RVA = "0x13E0394", Offset = "0x13E0394", VA = "0x13E0394")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOScale(this Outline target, Vector2 endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6000ADD")]
		[Address(RVA = "0x13E0A80", Offset = "0x13E0A80", VA = "0x13E0A80")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOAnchorPos(this RectTransform target, Vector2 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6000ADE")]
		[Address(RVA = "0x13E11F8", Offset = "0x13E11F8", VA = "0x13E11F8")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOAnchorPosX(this RectTransform target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6000ADF")]
		[Address(RVA = "0x13E19D8", Offset = "0x13E19D8", VA = "0x13E19D8")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOAnchorPosY(this RectTransform target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6000AE0")]
		[Address(RVA = "0x13E21C0", Offset = "0x13E21C0", VA = "0x13E21C0")]
		public static TweenerCore<Vector3, Vector3, VectorOptions> DOAnchorPos3D(this RectTransform target, Vector3 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6000AE1")]
		[Address(RVA = "0x13E2948", Offset = "0x13E2948", VA = "0x13E2948")]
		public static TweenerCore<Vector3, Vector3, VectorOptions> DOAnchorPos3DX(this RectTransform target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6000AE2")]
		[Address(RVA = "0x13E313C", Offset = "0x13E313C", VA = "0x13E313C")]
		public static TweenerCore<Vector3, Vector3, VectorOptions> DOAnchorPos3DY(this RectTransform target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6000AE3")]
		[Address(RVA = "0x13E3930", Offset = "0x13E3930", VA = "0x13E3930")]
		public static TweenerCore<Vector3, Vector3, VectorOptions> DOAnchorPos3DZ(this RectTransform target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6000AE4")]
		[Address(RVA = "0x13E4124", Offset = "0x13E4124", VA = "0x13E4124")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOAnchorMax(this RectTransform target, Vector2 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6000AE5")]
		[Address(RVA = "0x13E489C", Offset = "0x13E489C", VA = "0x13E489C")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOAnchorMin(this RectTransform target, Vector2 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6000AE6")]
		[Address(RVA = "0x13E5014", Offset = "0x13E5014", VA = "0x13E5014")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOPivot(this RectTransform target, Vector2 endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6000AE7")]
		[Address(RVA = "0x13E5700", Offset = "0x13E5700", VA = "0x13E5700")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOPivotX(this RectTransform target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6000AE8")]
		[Address(RVA = "0x13E5EDC", Offset = "0x13E5EDC", VA = "0x13E5EDC")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOPivotY(this RectTransform target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6000AE9")]
		[Address(RVA = "0x13E66B8", Offset = "0x13E66B8", VA = "0x13E66B8")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOSizeDelta(this RectTransform target, Vector2 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6000AEA")]
		[Address(RVA = "0x13E6E30", Offset = "0x13E6E30", VA = "0x13E6E30")]
		public static Tweener DOPunchAnchorPos(this RectTransform target, Vector2 punch, float duration, int vibrato = 10, float elasticity = 1f, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6000AEB")]
		[Address(RVA = "0x13E75D4", Offset = "0x13E75D4", VA = "0x13E75D4")]
		public static Tweener DOShakeAnchorPos(this RectTransform target, float duration, float strength = 100f, int vibrato = 10, float randomness = 90f, bool snapping = false, bool fadeOut = true)
		{
			return null;
		}

		[Token(Token = "0x6000AEC")]
		[Address(RVA = "0x13E7D58", Offset = "0x13E7D58", VA = "0x13E7D58")]
		public static Tweener DOShakeAnchorPos(this RectTransform target, float duration, Vector2 strength, int vibrato = 10, float randomness = 90f, bool snapping = false, bool fadeOut = true)
		{
			return null;
		}

		[Token(Token = "0x6000AED")]
		[Address(RVA = "0x13E859C", Offset = "0x13E859C", VA = "0x13E859C")]
		public static Sequence DOJumpAnchorPos(this RectTransform target, Vector2 endValue, float jumpPower, int numJumps, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6000AEE")]
		[Address(RVA = "0x13E9A58", Offset = "0x13E9A58", VA = "0x13E9A58")]
		public static Tweener DONormalizedPos(this ScrollRect target, Vector2 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6000AEF")]
		[Address(RVA = "0x13EA118", Offset = "0x13EA118", VA = "0x13EA118")]
		public static Tweener DOHorizontalNormalizedPos(this ScrollRect target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6000AF0")]
		[Address(RVA = "0x13EA7C4", Offset = "0x13EA7C4", VA = "0x13EA7C4")]
		public static Tweener DOVerticalNormalizedPos(this ScrollRect target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6000AF1")]
		[Address(RVA = "0x13EAE70", Offset = "0x13EAE70", VA = "0x13EAE70")]
		public static TweenerCore<float, float, FloatOptions> DOValue(this Slider target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6000AF2")]
		[Address(RVA = "0x13EB5D0", Offset = "0x13EB5D0", VA = "0x13EB5D0")]
		public static TweenerCore<Color, Color, ColorOptions> DOColor(this Text target, Color endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6000AF3")]
		[Address(RVA = "0x13EBCC8", Offset = "0x13EBCC8", VA = "0x13EBCC8")]
		public static TweenerCore<Color, Color, ColorOptions> DOFade(this Text target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6000AF4")]
		[Address(RVA = "0x13EC39C", Offset = "0x13EC39C", VA = "0x13EC39C")]
		public static TweenerCore<string, string, StringOptions> DOText(this Text target, string endValue, float duration, bool richTextEnabled = true, ScrambleMode scrambleMode = ScrambleMode.None, [Optional] string scrambleChars)
		{
			return null;
		}

		[Token(Token = "0x6000AF5")]
		[Address(RVA = "0x13ED0AC", Offset = "0x13ED0AC", VA = "0x13ED0AC")]
		public static Tweener DOBlendableColor(this Graphic target, Color endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6000AF6")]
		[Address(RVA = "0x13EDA38", Offset = "0x13EDA38", VA = "0x13EDA38")]
		public static Tweener DOBlendableColor(this Image target, Color endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6000AF7")]
		[Address(RVA = "0x13EE3C4", Offset = "0x13EE3C4", VA = "0x13EE3C4")]
		public static Tweener DOBlendableColor(this Text target, Color endValue, float duration)
		{
			return null;
		}
	}
	[Token(Token = "0x2000158")]
	public static class DOTweenModuleUnityVersion
	{
		[Token(Token = "0x200023A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCF9FA0", Offset = "0xCF9FA0")]
		private sealed class <>c__DisplayClass8_0
		{
			[Token(Token = "0x4000A10")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Material target;

			[Token(Token = "0x4000A11")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int propertyID;

			[Token(Token = "0x6000E93")]
			[Address(RVA = "0x14D9760", Offset = "0x14D9760", VA = "0x14D9760")]
			public <>c__DisplayClass8_0()
			{
			}

			[Token(Token = "0x6000E94")]
			[Address(RVA = "0x14DA440", Offset = "0x14DA440", VA = "0x14DA440")]
			internal Vector2 <DOOffset>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x6000E95")]
			[Address(RVA = "0x14DA698", Offset = "0x14DA698", VA = "0x14DA698")]
			internal void <DOOffset>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x200023B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCF9FB0", Offset = "0xCF9FB0")]
		private sealed class <>c__DisplayClass9_0
		{
			[Token(Token = "0x4000A12")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Material target;

			[Token(Token = "0x4000A13")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int propertyID;

			[Token(Token = "0x6000E96")]
			[Address(RVA = "0x14DA350", Offset = "0x14DA350", VA = "0x14DA350")]
			public <>c__DisplayClass9_0()
			{
			}

			[Token(Token = "0x6000E97")]
			[Address(RVA = "0x14DA8E8", Offset = "0x14DA8E8", VA = "0x14DA8E8")]
			internal Vector2 <DOTiling>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x6000E98")]
			[Address(RVA = "0x14DAB40", Offset = "0x14DAB40", VA = "0x14DAB40")]
			internal void <DOTiling>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x6000AF8")]
		[Address(RVA = "0x14D44D4", Offset = "0x14D44D4", VA = "0x14D44D4")]
		public static Sequence DOGradientColor(this Material target, Gradient gradient, float duration)
		{
			return null;
		}

		[Token(Token = "0x6000AF9")]
		[Address(RVA = "0x14D537C", Offset = "0x14D537C", VA = "0x14D537C")]
		public static Sequence DOGradientColor(this Material target, Gradient gradient, string property, float duration)
		{
			return null;
		}

		[Token(Token = "0x6000AFA")]
		[Address(RVA = "0x14D6234", Offset = "0x14D6234", VA = "0x14D6234")]
		public static CustomYieldInstruction WaitForCompletion(this Tween t, bool returnCustomYieldInstruction)
		{
			return null;
		}

		[Token(Token = "0x6000AFB")]
		[Address(RVA = "0x14D6930", Offset = "0x14D6930", VA = "0x14D6930")]
		public static CustomYieldInstruction WaitForRewind(this Tween t, bool returnCustomYieldInstruction)
		{
			return null;
		}

		[Token(Token = "0x6000AFC")]
		[Address(RVA = "0x14D702C", Offset = "0x14D702C", VA = "0x14D702C")]
		public static CustomYieldInstruction WaitForKill(this Tween t, bool returnCustomYieldInstruction)
		{
			return null;
		}

		[Token(Token = "0x6000AFD")]
		[Address(RVA = "0x14D7728", Offset = "0x14D7728", VA = "0x14D7728")]
		public static CustomYieldInstruction WaitForElapsedLoops(this Tween t, int elapsedLoops, bool returnCustomYieldInstruction)
		{
			return null;
		}

		[Token(Token = "0x6000AFE")]
		[Address(RVA = "0x14D7E38", Offset = "0x14D7E38", VA = "0x14D7E38")]
		public static CustomYieldInstruction WaitForPosition(this Tween t, float position, bool returnCustomYieldInstruction)
		{
			return null;
		}

		[Token(Token = "0x6000AFF")]
		[Address(RVA = "0x14D8550", Offset = "0x14D8550", VA = "0x14D8550")]
		public static CustomYieldInstruction WaitForStart(this Tween t, bool returnCustomYieldInstruction)
		{
			return null;
		}

		[Token(Token = "0x6000B00")]
		[Address(RVA = "0x14D8C4C", Offset = "0x14D8C4C", VA = "0x14D8C4C")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOOffset(this Material target, Vector2 endValue, int propertyID, float duration)
		{
			return null;
		}

		[Token(Token = "0x6000B01")]
		[Address(RVA = "0x14D9850", Offset = "0x14D9850", VA = "0x14D9850")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOTiling(this Material target, Vector2 endValue, int propertyID, float duration)
		{
			return null;
		}
	}
	[Token(Token = "0x2000159")]
	public static class DOTweenCYInstruction
	{
		[Token(Token = "0x200023C")]
		public class WaitForCompletion : CustomYieldInstruction
		{
			[Token(Token = "0x4000A14")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private readonly Tween t;

			[Token(Token = "0x170001E0")]
			public override bool keepWaiting
			{
				[Token(Token = "0x6000E99")]
				[Address(RVA = "0x13D3AA0", Offset = "0x13D3AA0", VA = "0x13D3AA0", Slot = "7")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x6000E9A")]
			[Address(RVA = "0x13D3FE8", Offset = "0x13D3FE8", VA = "0x13D3FE8")]
			public WaitForCompletion(Tween tween)
			{
			}
		}

		[Token(Token = "0x200023D")]
		public class WaitForRewind : CustomYieldInstruction
		{
			[Token(Token = "0x4000A15")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private readonly Tween t;

			[Token(Token = "0x170001E1")]
			public override bool keepWaiting
			{
				[Token(Token = "0x6000E9B")]
				[Address(RVA = "0x13D5A80", Offset = "0x13D5A80", VA = "0x13D5A80", Slot = "7")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x6000E9C")]
			[Address(RVA = "0x13D6100", Offset = "0x13D6100", VA = "0x13D6100")]
			public WaitForRewind(Tween tween)
			{
			}
		}

		[Token(Token = "0x200023E")]
		public class WaitForKill : CustomYieldInstruction
		{
			[Token(Token = "0x4000A16")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private readonly Tween t;

			[Token(Token = "0x170001E2")]
			public override bool keepWaiting
			{
				[Token(Token = "0x6000E9D")]
				[Address(RVA = "0x13D4A88", Offset = "0x13D4A88", VA = "0x13D4A88", Slot = "7")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x6000E9E")]
			[Address(RVA = "0x13D4D7C", Offset = "0x13D4D7C", VA = "0x13D4D7C")]
			public WaitForKill(Tween tween)
			{
			}
		}

		[Token(Token = "0x200023F")]
		public class WaitForElapsedLoops : CustomYieldInstruction
		{
			[Token(Token = "0x4000A17")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private readonly Tween t;

			[Token(Token = "0x4000A18")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private readonly int elapsedLoops;

			[Token(Token = "0x170001E3")]
			public override bool keepWaiting
			{
				[Token(Token = "0x6000E9F")]
				[Address(RVA = "0x13D4338", Offset = "0x13D4338", VA = "0x13D4338", Slot = "7")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x6000EA0")]
			[Address(RVA = "0x13D46C4", Offset = "0x13D46C4", VA = "0x13D46C4")]
			public WaitForElapsedLoops(Tween tween, int elapsedLoops)
			{
			}
		}

		[Token(Token = "0x2000240")]
		public class WaitForPosition : CustomYieldInstruction
		{
			[Token(Token = "0x4000A19")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private readonly Tween t;

			[Token(Token = "0x4000A1A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private readonly float position;

			[Token(Token = "0x170001E4")]
			public override bool keepWaiting
			{
				[Token(Token = "0x6000EA1")]
				[Address(RVA = "0x13D50CC", Offset = "0x13D50CC", VA = "0x13D50CC", Slot = "7")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x6000EA2")]
			[Address(RVA = "0x13D56BC", Offset = "0x13D56BC", VA = "0x13D56BC")]
			public WaitForPosition(Tween tween, float position)
			{
			}
		}

		[Token(Token = "0x2000241")]
		public class WaitForStart : CustomYieldInstruction
		{
			[Token(Token = "0x4000A1B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private readonly Tween t;

			[Token(Token = "0x170001E5")]
			public override bool keepWaiting
			{
				[Token(Token = "0x6000EA3")]
				[Address(RVA = "0x13D6450", Offset = "0x13D6450", VA = "0x13D6450", Slot = "7")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x6000EA4")]
			[Address(RVA = "0x13D67E0", Offset = "0x13D67E0", VA = "0x13D67E0")]
			public WaitForStart(Tween tween)
			{
			}
		}
	}
	[Token(Token = "0x200015A")]
	public static class DOTweenModuleUtils
	{
		[Token(Token = "0x2000242")]
		public static class Physics
		{
			[Token(Token = "0x6000EA5")]
			[Address(RVA = "0x14DB788", Offset = "0x14DB788", VA = "0x14DB788")]
			public static void SetOrientationOnPath(PathOptions options, Tween t, Quaternion newRot, Transform trans)
			{
			}

			[Token(Token = "0x6000EA6")]
			[Address(RVA = "0x14DBA94", Offset = "0x14DBA94", VA = "0x14DBA94")]
			public static bool HasRigidbody2D(Component target)
			{
				return default(bool);
			}

			[Token(Token = "0x6000EA7")]
			[Address(RVA = "0x14DBD00", Offset = "0x14DBD00", VA = "0x14DBD00")]
			[Preserve]
			public static bool HasRigidbody(Component target)
			{
				return default(bool);
			}

			[Token(Token = "0x6000EA8")]
			[Address(RVA = "0x14DBF6C", Offset = "0x14DBF6C", VA = "0x14DBF6C")]
			[Preserve]
			public static TweenerCore<Vector3, DG.Tweening.Plugins.Core.PathCore.Path, PathOptions> CreateDOTweenPathTween(MonoBehaviour target, bool tweenRigidbody, bool isLocal, DG.Tweening.Plugins.Core.PathCore.Path path, float duration, PathMode pathMode)
			{
				return null;
			}
		}

		[Token(Token = "0x40006B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool _initialized;

		[Token(Token = "0x6000B02")]
		[Address(RVA = "0x14DAD90", Offset = "0x14DAD90", VA = "0x14DAD90")]
		[Preserve]
		public static void Init()
		{
		}

		[Token(Token = "0x6000B03")]
		[Address(RVA = "0x14DB28C", Offset = "0x14DB28C", VA = "0x14DB28C")]
		[Preserve]
		private static void Preserver()
		{
		}
	}
}
