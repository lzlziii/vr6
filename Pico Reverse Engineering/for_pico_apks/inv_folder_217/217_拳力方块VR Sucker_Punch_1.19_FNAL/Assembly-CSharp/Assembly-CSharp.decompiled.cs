using System;
using System.Collections;
using System.Collections.Generic;
using System.Diagnostics;
using System.IO;
using System.Reflection;
using System.Runtime.InteropServices;
using System.Runtime.Serialization;
using System.Threading;
using ExitGames.Client.Photon;
using Glimpse;
using Glimpse.UI;
using Il2CppDummyDll;
using Oculus.Platform;
using Oculus.Platform.Models;
using Photon.Chat;
using Photon.Pun;
using Photon.Realtime;
using Photon.Voice.PUN;
using Photon.Voice.Unity;
using Photon.Voice.Unity.UtilityScripts;
using RGBSchemes;
using SimpleJSON;
using TMPro;
using UnityEngine;
using UnityEngine.AI;
using UnityEngine.Animations;
using UnityEngine.Audio;
using UnityEngine.EventSystems;
using UnityEngine.Events;
using UnityEngine.Localization.Tables;
using UnityEngine.Networking;
using UnityEngine.Rendering;
using UnityEngine.UI;
using UnityEngine.Video;
using UnityEngine.XR;
using UnityEngine.XR.Interaction.Toolkit;

[assembly: AssemblyVersion("0.0.0.0")]
[Token(Token = "0x2000002")]
public class OvrAvatarTestDriver : OvrAvatarDriver
{
	[Token(Token = "0x4000001")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Vector3 headPos;

	[Token(Token = "0x4000002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private Quaternion headRot;

	[Token(Token = "0x4000003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float voiceAmplitude;

	[Token(Token = "0x6000001")]
	[Address(RVA = "0xC403B0", Offset = "0xC403B0", VA = "0xC403B0")]
	private ControllerPose GetMalibuControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x6000002")]
	[Address(RVA = "0xC40514", Offset = "0xC40514", VA = "0xC40514")]
	private ControllerPose GetControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x6000003")]
	[Address(RVA = "0xC408B0", Offset = "0xC408B0", VA = "0xC408B0")]
	private void CalculateCurrentPose()
	{
	}

	[Token(Token = "0x6000004")]
	[Address(RVA = "0xC40A54", Offset = "0xC40A54", VA = "0xC40A54", Slot = "4")]
	public override void UpdateTransforms(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x6000005")]
	[Address(RVA = "0xC40A80", Offset = "0xC40A80", VA = "0xC40A80")]
	public OvrAvatarTestDriver()
	{
	}
}
[Token(Token = "0x2000003")]
public class PoseEditHelper : MonoBehaviour
{
	[Token(Token = "0x4000004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform poseRoot;

	[Token(Token = "0x6000006")]
	[Address(RVA = "0xC49EB4", Offset = "0xC49EB4", VA = "0xC49EB4")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000007")]
	[Address(RVA = "0xC49F3C", Offset = "0xC49F3C", VA = "0xC49F3C")]
	private void DrawJoints(Transform joint)
	{
	}

	[Token(Token = "0x6000008")]
	[Address(RVA = "0xC4A0B0", Offset = "0xC4A0B0", VA = "0xC4A0B0")]
	public PoseEditHelper()
	{
	}
}
[Token(Token = "0x2000004")]
public class GazeTargetSpawner : MonoBehaviour
{
	[Token(Token = "0x4000005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject GazeTargetPrefab;

	[Token(Token = "0x4000006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int NumberOfDummyTargets;

	[Token(Token = "0x4000007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int RadiusMultiplier;

	[Token(Token = "0x4000008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private bool isVisible;

	[Token(Token = "0x17000001")]
	public bool IsVisible
	{
		[Token(Token = "0x6000009")]
		[Address(RVA = "0xC6C334", Offset = "0xC6C334", VA = "0xC6C334")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600000A")]
		[Address(RVA = "0xC6C33C", Offset = "0xC6C33C", VA = "0xC6C33C")]
		set
		{
		}
	}

	[Token(Token = "0x600000B")]
	[Address(RVA = "0xC6C478", Offset = "0xC6C478", VA = "0xC6C478")]
	private void Start()
	{
	}

	[Token(Token = "0x600000C")]
	[Address(RVA = "0xC6C640", Offset = "0xC6C640", VA = "0xC6C640")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x600000D")]
	[Address(RVA = "0xC6C648", Offset = "0xC6C648", VA = "0xC6C648")]
	public GazeTargetSpawner()
	{
	}
}
[Token(Token = "0x2000005")]
public class RemoteLoopbackManager : MonoBehaviour
{
	[Token(Token = "0x2000006")]
	private class PacketLatencyPair
	{
		[Token(Token = "0x400000E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public byte[] PacketData;

		[Token(Token = "0x400000F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float FakeLatency;

		[Token(Token = "0x6000014")]
		[Address(RVA = "0xB30998", Offset = "0xB30998", VA = "0xB30998")]
		public PacketLatencyPair()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000007")]
	public class SimulatedLatencySettings
	{
		[Token(Token = "0x4000010")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x770B44", Offset = "0x770B44")]
		public float FakeLatencyMax;

		[Token(Token = "0x4000011")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x770B5C", Offset = "0x770B5C")]
		public float FakeLatencyMin;

		[Token(Token = "0x4000012")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x770B74", Offset = "0x770B74")]
		public float LatencyWeight;

		[Token(Token = "0x4000013")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x770B8C", Offset = "0x770B8C")]
		public int MaxSamples;

		[Token(Token = "0x4000014")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal float AverageWindow;

		[Token(Token = "0x4000015")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		internal float LatencySum;

		[Token(Token = "0x4000016")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal LinkedList<float> LatencyValues;

		[Token(Token = "0x6000015")]
		[Address(RVA = "0xB309A0", Offset = "0xB309A0", VA = "0xB309A0")]
		public float NextValue()
		{
			return default(float);
		}

		[Token(Token = "0x6000016")]
		[Address(RVA = "0xB30AD8", Offset = "0xB30AD8", VA = "0xB30AD8")]
		public SimulatedLatencySettings()
		{
		}
	}

	[Token(Token = "0x4000009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OvrAvatar LocalAvatar;

	[Token(Token = "0x400000A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OvrAvatar LoopbackAvatar;

	[Token(Token = "0x400000B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SimulatedLatencySettings LatencySettings;

	[Token(Token = "0x400000C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int PacketSequence;

	[Token(Token = "0x400000D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private LinkedList<PacketLatencyPair> packetQueue;

	[Token(Token = "0x600000E")]
	[Address(RVA = "0xCF219C", Offset = "0xCF219C", VA = "0xCF219C")]
	private void Start()
	{
	}

	[Token(Token = "0x600000F")]
	[Address(RVA = "0xCF22E0", Offset = "0xCF22E0", VA = "0xCF22E0")]
	private void OnLocalAvatarPacketRecorded(object sender, OvrAvatar.PacketEventArgs args)
	{
	}

	[Token(Token = "0x6000010")]
	[Address(RVA = "0xCF26B8", Offset = "0xCF26B8", VA = "0xCF26B8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000011")]
	[Address(RVA = "0xCF2610", Offset = "0xCF2610", VA = "0xCF2610")]
	private void SendPacketData(byte[] data)
	{
	}

	[Token(Token = "0x6000012")]
	[Address(RVA = "0xCF29E8", Offset = "0xCF29E8", VA = "0xCF29E8")]
	private void ReceivePacketData(byte[] data)
	{
	}

	[Token(Token = "0x6000013")]
	[Address(RVA = "0xCF2CD0", Offset = "0xCF2CD0", VA = "0xCF2CD0")]
	public RemoteLoopbackManager()
	{
	}
}
[Token(Token = "0x2000008")]
public class P2PManager
{
	[Token(Token = "0x2000009")]
	private enum MessageType : byte
	{
		[Token(Token = "0x4000018")]
		Update = 1
	}

	[Token(Token = "0x6000017")]
	[Address(RVA = "0xC41494", Offset = "0xC41494", VA = "0xC41494")]
	public P2PManager()
	{
	}

	[Token(Token = "0x6000018")]
	[Address(RVA = "0xC41574", Offset = "0xC41574", VA = "0xC41574")]
	public void ConnectTo(ulong userID)
	{
	}

	[Token(Token = "0x6000019")]
	[Address(RVA = "0xC41658", Offset = "0xC41658", VA = "0xC41658")]
	public void Disconnect(ulong userID)
	{
	}

	[Token(Token = "0x600001A")]
	[Address(RVA = "0xC416D8", Offset = "0xC416D8", VA = "0xC416D8")]
	private void PeerConnectRequestCallback(Message<NetworkingPeer> msg)
	{
	}

	[Token(Token = "0x600001B")]
	[Address(RVA = "0xC41848", Offset = "0xC41848", VA = "0xC41848")]
	private void ConnectionStateChangedCallback(Message<NetworkingPeer> msg)
	{
	}

	[Token(Token = "0x600001C")]
	[Address(RVA = "0xC41A88", Offset = "0xC41A88", VA = "0xC41A88")]
	public void SendAvatarUpdate(ulong userID, Transform rootTransform, uint sequence, byte[] avatarPacket)
	{
	}

	[Token(Token = "0x600001D")]
	[Address(RVA = "0xC41E78", Offset = "0xC41E78", VA = "0xC41E78")]
	public void GetRemotePackets()
	{
	}

	[Token(Token = "0x600001E")]
	[Address(RVA = "0xC42134", Offset = "0xC42134", VA = "0xC42134")]
	public void processAvatarPacket(RemotePlayer remote, ref byte[] packet, ref int offset)
	{
	}

	[Token(Token = "0x600001F")]
	[Address(RVA = "0xC41C54", Offset = "0xC41C54", VA = "0xC41C54")]
	private void PackByte(byte b, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x6000020")]
	[Address(RVA = "0xC42068", Offset = "0xC42068", VA = "0xC42068")]
	private byte ReadByte(byte[] buf, ref int offset)
	{
		return default(byte);
	}

	[Token(Token = "0x6000021")]
	[Address(RVA = "0xC41D38", Offset = "0xC41D38", VA = "0xC41D38")]
	private void PackFloat(float f, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x6000022")]
	[Address(RVA = "0xC4236C", Offset = "0xC4236C", VA = "0xC4236C")]
	private float ReadFloat(byte[] buf, ref int offset)
	{
		return default(float);
	}

	[Token(Token = "0x6000023")]
	[Address(RVA = "0xC41C9C", Offset = "0xC41C9C", VA = "0xC41C9C")]
	private void PackULong(ulong u, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x6000024")]
	[Address(RVA = "0xC420AC", Offset = "0xC420AC", VA = "0xC420AC")]
	private ulong ReadULong(byte[] buf, ref int offset)
	{
		return default(ulong);
	}

	[Token(Token = "0x6000025")]
	[Address(RVA = "0xC41DDC", Offset = "0xC41DDC", VA = "0xC41DDC")]
	private void PackUInt32(uint u, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x6000026")]
	[Address(RVA = "0xC423F4", Offset = "0xC423F4", VA = "0xC423F4")]
	private uint ReadUInt32(byte[] buf, ref int offset)
	{
		return default(uint);
	}
}
[Token(Token = "0x200000A")]
public class PlayerController : SocialPlatformManager
{
	[Token(Token = "0x4000019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Camera spyCamera;

	[Token(Token = "0x400001A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private GameObject cameraRig;

	[Token(Token = "0x400001B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private bool showUI;

	[Token(Token = "0x6000027")]
	[Address(RVA = "0xC46228", Offset = "0xC46228", VA = "0xC46228", Slot = "5")]
	public override void Awake()
	{
	}

	[Token(Token = "0x6000028")]
	[Address(RVA = "0xC46264", Offset = "0xC46264", VA = "0xC46264", Slot = "6")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000029")]
	[Address(RVA = "0xC4629C", Offset = "0xC4629C", VA = "0xC4629C", Slot = "4")]
	public override void Update()
	{
	}

	[Token(Token = "0x600002A")]
	[Address(RVA = "0xC462C4", Offset = "0xC462C4", VA = "0xC462C4")]
	private void checkInput()
	{
	}

	[Token(Token = "0x600002B")]
	[Address(RVA = "0xC46460", Offset = "0xC46460", VA = "0xC46460")]
	private void ToggleCamera()
	{
	}

	[Token(Token = "0x600002C")]
	[Address(RVA = "0xC464E0", Offset = "0xC464E0", VA = "0xC464E0")]
	private void ToggleUI()
	{
	}

	[Token(Token = "0x600002D")]
	[Address(RVA = "0xC46534", Offset = "0xC46534", VA = "0xC46534")]
	public PlayerController()
	{
	}
}
[Token(Token = "0x200000B")]
public class RemotePlayer
{
	[Token(Token = "0x400001C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong remoteUserID;

	[Token(Token = "0x400001D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool stillInRoom;

	[Token(Token = "0x400001E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public PeerConnectionState p2pConnectionState;

	[Token(Token = "0x400001F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PeerConnectionState voipConnectionState;

	[Token(Token = "0x4000020")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OvrAvatar RemoteAvatar;

	[Token(Token = "0x4000021")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 receivedRootPosition;

	[Token(Token = "0x4000022")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Vector3 receivedRootPositionPrior;

	[Token(Token = "0x4000023")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Quaternion receivedRootRotation;

	[Token(Token = "0x4000024")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Quaternion receivedRootRotationPrior;

	[Token(Token = "0x4000025")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public VoipAudioSourceHiLevel voipSource;

	[Token(Token = "0x600002E")]
	[Address(RVA = "0xCF2D74", Offset = "0xCF2D74", VA = "0xCF2D74")]
	public RemotePlayer()
	{
	}
}
[Token(Token = "0x200000C")]
public class RoomManager
{
	[Token(Token = "0x4000026")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong roomID;

	[Token(Token = "0x4000027")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ulong invitedRoomID;

	[Token(Token = "0x4000028")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool amIServer;

	[Token(Token = "0x4000029")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	private bool startupDone;

	[Token(Token = "0x600002F")]
	[Address(RVA = "0xCF3550", Offset = "0xCF3550", VA = "0xCF3550")]
	public RoomManager()
	{
	}

	[Token(Token = "0x6000030")]
	[Address(RVA = "0xCF3654", Offset = "0xCF3654", VA = "0xCF3654")]
	private void AcceptingInviteCallback(Message<string> msg)
	{
	}

	[Token(Token = "0x6000031")]
	[Address(RVA = "0xCF37D4", Offset = "0xCF37D4", VA = "0xCF37D4")]
	public bool CheckForInvite()
	{
		return default(bool);
	}

	[Token(Token = "0x6000032")]
	[Address(RVA = "0xCF3910", Offset = "0xCF3910", VA = "0xCF3910")]
	public void CreateRoom()
	{
	}

	[Token(Token = "0x6000033")]
	[Address(RVA = "0xCF39E4", Offset = "0xCF39E4", VA = "0xCF39E4")]
	private void CreateAndJoinPrivateRoomCallback(Message<Oculus.Platform.Models.Room> msg)
	{
	}

	[Token(Token = "0x6000034")]
	[Address(RVA = "0xCF3B20", Offset = "0xCF3B20", VA = "0xCF3B20")]
	private void OnLaunchInviteWorkflowComplete(Message msg)
	{
	}

	[Token(Token = "0x6000035")]
	[Address(RVA = "0xCF3804", Offset = "0xCF3804", VA = "0xCF3804")]
	public void JoinExistingRoom(ulong roomID)
	{
	}

	[Token(Token = "0x6000036")]
	[Address(RVA = "0xCF3BA8", Offset = "0xCF3BA8", VA = "0xCF3BA8")]
	private void JoinRoomCallback(Message<Oculus.Platform.Models.Room> msg)
	{
	}

	[Token(Token = "0x6000037")]
	[Address(RVA = "0xCF4300", Offset = "0xCF4300", VA = "0xCF4300")]
	private void RoomUpdateCallback(Message<Oculus.Platform.Models.Room> msg)
	{
	}

	[Token(Token = "0x6000038")]
	[Address(RVA = "0xCF4600", Offset = "0xCF4600", VA = "0xCF4600")]
	public void LeaveCurrentRoom()
	{
	}

	[Token(Token = "0x6000039")]
	[Address(RVA = "0xCF3E88", Offset = "0xCF3E88", VA = "0xCF3E88")]
	private void ProcessRoomData(Message<Oculus.Platform.Models.Room> msg)
	{
	}
}
[Token(Token = "0x200000D")]
public class SocialPlatformManager : MonoBehaviour
{
	[Token(Token = "0x200000E")]
	public enum State
	{
		[Token(Token = "0x4000050")]
		INITIALIZING,
		[Token(Token = "0x4000051")]
		CHECKING_LAUNCH_STATE,
		[Token(Token = "0x4000052")]
		CREATING_A_ROOM,
		[Token(Token = "0x4000053")]
		WAITING_IN_A_ROOM,
		[Token(Token = "0x4000054")]
		JOINING_A_ROOM,
		[Token(Token = "0x4000055")]
		CONNECTED_IN_A_ROOM,
		[Token(Token = "0x4000056")]
		LEAVING_A_ROOM,
		[Token(Token = "0x4000057")]
		SHUTDOWN
	}

	[Token(Token = "0x400002A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Vector3 START_ROTATION_ONE;

	[Token(Token = "0x400002B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static readonly Vector3 START_POSITION_ONE;

	[Token(Token = "0x400002C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static readonly Vector3 START_ROTATION_TWO;

	[Token(Token = "0x400002D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private static readonly Vector3 START_POSITION_TWO;

	[Token(Token = "0x400002E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static readonly Vector3 START_ROTATION_THREE;

	[Token(Token = "0x400002F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private static readonly Vector3 START_POSITION_THREE;

	[Token(Token = "0x4000030")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static readonly Vector3 START_ROTATION_FOUR;

	[Token(Token = "0x4000031")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private static readonly Vector3 START_POSITION_FOUR;

	[Token(Token = "0x4000032")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static readonly Color BLACK;

	[Token(Token = "0x4000033")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static readonly Color WHITE;

	[Token(Token = "0x4000034")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private static readonly Color CYAN;

	[Token(Token = "0x4000035")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private static readonly Color BLUE;

	[Token(Token = "0x4000036")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private static readonly Color GREEN;

	[Token(Token = "0x4000037")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float voiceCurrent;

	[Token(Token = "0x4000038")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private uint packetSequence;

	[Token(Token = "0x4000039")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OvrAvatar localAvatarPrefab;

	[Token(Token = "0x400003A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OvrAvatar remoteAvatarPrefab;

	[Token(Token = "0x400003B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject helpPanel;

	[Token(Token = "0x400003C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected MeshRenderer helpMesh;

	[Token(Token = "0x400003D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Material riftMaterial;

	[Token(Token = "0x400003E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Material gearMaterial;

	[Token(Token = "0x400003F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected OvrAvatar localAvatar;

	[Token(Token = "0x4000040")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	protected GameObject localTrackingSpace;

	[Token(Token = "0x4000041")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected GameObject localPlayerHead;

	[Token(Token = "0x4000042")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	protected Dictionary<ulong, RemotePlayer> remoteUsers;

	[Token(Token = "0x4000043")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject roomSphere;

	[Token(Token = "0x4000044")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	protected MeshRenderer sphereMesh;

	[Token(Token = "0x4000045")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject roomFloor;

	[Token(Token = "0x4000046")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	protected MeshRenderer floorMesh;

	[Token(Token = "0x4000047")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	protected State currentState;

	[Token(Token = "0x4000048")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	protected static SocialPlatformManager s_instance;

	[Token(Token = "0x4000049")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	protected RoomManager roomManager;

	[Token(Token = "0x400004A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	protected P2PManager p2pManager;

	[Token(Token = "0x400004B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	protected VoipManager voipManager;

	[Token(Token = "0x400004C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	protected ulong myID;

	[Token(Token = "0x400004D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	protected string myOculusID;

	[Token(Token = "0x400004E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public static readonly float VOIP_SCALE;

	[Token(Token = "0x17000002")]
	public static State CurrentState
	{
		[Token(Token = "0x6000046")]
		[Address(RVA = "0xB7F134", Offset = "0xB7F134", VA = "0xB7F134")]
		get
		{
			return default(State);
		}
	}

	[Token(Token = "0x17000003")]
	public static ulong MyID
	{
		[Token(Token = "0x6000047")]
		[Address(RVA = "0xB7F1A4", Offset = "0xB7F1A4", VA = "0xB7F1A4")]
		get
		{
			return default(ulong);
		}
	}

	[Token(Token = "0x17000004")]
	public static string MyOculusID
	{
		[Token(Token = "0x6000048")]
		[Address(RVA = "0xB7F284", Offset = "0xB7F284", VA = "0xB7F284")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600003A")]
	[Address(RVA = "0xB7D354", Offset = "0xB7D354", VA = "0xB7D354", Slot = "4")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x600003B")]
	[Address(RVA = "0xB7D6E4", Offset = "0xB7D6E4", VA = "0xB7D6E4", Slot = "5")]
	public virtual void Awake()
	{
	}

	[Token(Token = "0x600003C")]
	[Address(RVA = "0xB7DDF0", Offset = "0xB7DDF0", VA = "0xB7DDF0")]
	private void InitCallback(Message<PlatformInitialize> msg)
	{
	}

	[Token(Token = "0x600003D")]
	[Address(RVA = "0xB7E110", Offset = "0xB7E110", VA = "0xB7E110", Slot = "6")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x600003E")]
	[Address(RVA = "0xB7E114", Offset = "0xB7E114", VA = "0xB7E114")]
	private void IsEntitledCallback(Message msg)
	{
	}

	[Token(Token = "0x600003F")]
	[Address(RVA = "0xB7E234", Offset = "0xB7E234", VA = "0xB7E234")]
	private void GetLoggedInUserCallback(Message<User> msg)
	{
	}

	[Token(Token = "0x6000040")]
	[Address(RVA = "0xB7E93C", Offset = "0xB7E93C", VA = "0xB7E93C")]
	private void GetLoggedInUserFriendsAndRoomsCallback(Message<UserAndRoomList> msg)
	{
	}

	[Token(Token = "0x6000041")]
	[Address(RVA = "0xB7ED30", Offset = "0xB7ED30", VA = "0xB7ED30")]
	public void OnLocalAvatarPacketRecorded(object sender, OvrAvatar.PacketEventArgs args)
	{
	}

	[Token(Token = "0x6000042")]
	[Address(RVA = "0xB7EF40", Offset = "0xB7EF40", VA = "0xB7EF40")]
	public void OnApplicationQuit()
	{
	}

	[Token(Token = "0x6000043")]
	[Address(RVA = "0xB7F0C8", Offset = "0xB7F0C8", VA = "0xB7F0C8")]
	public void AddUser(ulong userID, ref RemotePlayer remoteUser)
	{
	}

	[Token(Token = "0x6000044")]
	[Address(RVA = "0xB7DA7C", Offset = "0xB7DA7C", VA = "0xB7DA7C")]
	public void LogOutputLine(string line)
	{
	}

	[Token(Token = "0x6000045")]
	[Address(RVA = "0xB7DF98", Offset = "0xB7DF98", VA = "0xB7DF98")]
	public static void TerminateWithError(Message msg)
	{
	}

	[Token(Token = "0x6000049")]
	[Address(RVA = "0xB7DB30", Offset = "0xB7DB30", VA = "0xB7DB30")]
	public static void TransitionToState(State newState)
	{
	}

	[Token(Token = "0x600004A")]
	[Address(RVA = "0xB7F3AC", Offset = "0xB7F3AC", VA = "0xB7F3AC")]
	private static void SetSphereColorForState()
	{
	}

	[Token(Token = "0x600004B")]
	[Address(RVA = "0xB7F528", Offset = "0xB7F528", VA = "0xB7F528")]
	public static void SetFloorColorForState(bool host)
	{
	}

	[Token(Token = "0x600004C")]
	[Address(RVA = "0xB7F60C", Offset = "0xB7F60C", VA = "0xB7F60C")]
	public static void MarkAllRemoteUsersAsNotInRoom()
	{
	}

	[Token(Token = "0x600004D")]
	[Address(RVA = "0xB7F768", Offset = "0xB7F768", VA = "0xB7F768")]
	public static void MarkRemoteUserInRoom(ulong userID)
	{
	}

	[Token(Token = "0x600004E")]
	[Address(RVA = "0xB7F84C", Offset = "0xB7F84C", VA = "0xB7F84C")]
	public static void ForgetRemoteUsersNotInRoom()
	{
	}

	[Token(Token = "0x600004F")]
	[Address(RVA = "0xB7E050", Offset = "0xB7E050", VA = "0xB7E050")]
	public static void LogOutput(string line)
	{
	}

	[Token(Token = "0x6000050")]
	[Address(RVA = "0xB7FD94", Offset = "0xB7FD94", VA = "0xB7FD94")]
	public static bool IsUserInRoom(ulong userID)
	{
		return default(bool);
	}

	[Token(Token = "0x6000051")]
	[Address(RVA = "0xB7FE28", Offset = "0xB7FE28", VA = "0xB7FE28")]
	public static void AddRemoteUser(ulong userID)
	{
	}

	[Token(Token = "0x6000052")]
	[Address(RVA = "0xB7FB80", Offset = "0xB7FB80", VA = "0xB7FB80")]
	public static void RemoveRemoteUser(ulong userID)
	{
	}

	[Token(Token = "0x6000053")]
	[Address(RVA = "0xB80018", Offset = "0xB80018", VA = "0xB80018")]
	public void UpdateVoiceData(short[] pcmData, int numChannels)
	{
	}

	[Token(Token = "0x6000054")]
	[Address(RVA = "0xB7D2D0", Offset = "0xB7D2D0", VA = "0xB7D2D0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x773E80", Offset = "0x773E80")]
	public static void MicFilter(short[] pcmData, UIntPtr pcmDataLength, int frequency, int numChannels)
	{
	}

	[Token(Token = "0x6000055")]
	[Address(RVA = "0xB8015C", Offset = "0xB8015C", VA = "0xB8015C")]
	public static RemotePlayer GetRemoteUser(ulong userID)
	{
		return null;
	}

	[Token(Token = "0x6000056")]
	[Address(RVA = "0xB80238", Offset = "0xB80238", VA = "0xB80238")]
	public SocialPlatformManager()
	{
	}
}
[Token(Token = "0x200000F")]
public class VoipManager
{
	[Token(Token = "0x6000058")]
	[Address(RVA = "0xAFB248", Offset = "0xAFB248", VA = "0xAFB248")]
	public VoipManager()
	{
	}

	[Token(Token = "0x6000059")]
	[Address(RVA = "0xAFB328", Offset = "0xAFB328", VA = "0xAFB328")]
	public void ConnectTo(ulong userID)
	{
	}

	[Token(Token = "0x600005A")]
	[Address(RVA = "0xAFB40C", Offset = "0xAFB40C", VA = "0xAFB40C")]
	public void Disconnect(ulong userID)
	{
	}

	[Token(Token = "0x600005B")]
	[Address(RVA = "0xAFB48C", Offset = "0xAFB48C", VA = "0xAFB48C")]
	private void VoipConnectRequestCallback(Message<NetworkingPeer> msg)
	{
	}

	[Token(Token = "0x600005C")]
	[Address(RVA = "0xAFB5FC", Offset = "0xAFB5FC", VA = "0xAFB5FC")]
	private void VoipStateChangedCallback(Message<NetworkingPeer> msg)
	{
	}
}
[Token(Token = "0x2000010")]
public class GazeTarget : MonoBehaviour
{
	[Token(Token = "0x4000058")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ovrAvatarGazeTargetType Type;

	[Token(Token = "0x4000059")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ovrAvatarGazeTargets RuntimeTargetList;

	[Token(Token = "0x600005D")]
	[Address(RVA = "0xC6C000", Offset = "0xC6C000", VA = "0xC6C000")]
	static GazeTarget()
	{
	}

	[Token(Token = "0x600005E")]
	[Address(RVA = "0xC6C078", Offset = "0xC6C078", VA = "0xC6C078")]
	private void Start()
	{
	}

	[Token(Token = "0x600005F")]
	[Address(RVA = "0xC6C1EC", Offset = "0xC6C1EC", VA = "0xC6C1EC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000060")]
	[Address(RVA = "0xC6C250", Offset = "0xC6C250", VA = "0xC6C250")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000061")]
	[Address(RVA = "0xC6C0B4", Offset = "0xC6C0B4", VA = "0xC6C0B4")]
	private void UpdateGazeTarget()
	{
	}

	[Token(Token = "0x6000062")]
	[Address(RVA = "0xC6C314", Offset = "0xC6C314", VA = "0xC6C314")]
	private ovrAvatarGazeTarget CreateOvrGazeTarget(uint targetId, Vector3 targetPosition, ovrAvatarGazeTargetType targetType)
	{
		return default(ovrAvatarGazeTarget);
	}

	[Token(Token = "0x6000063")]
	[Address(RVA = "0xC6C32C", Offset = "0xC6C32C", VA = "0xC6C32C")]
	public GazeTarget()
	{
	}
}
[Serializable]
[Token(Token = "0x2000011")]
public class AvatarLayer
{
	[Token(Token = "0x400005A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int layerIndex;

	[Token(Token = "0x6000064")]
	[Address(RVA = "0xB46888", Offset = "0xB46888", VA = "0xB46888")]
	public AvatarLayer()
	{
	}
}
[Serializable]
[Token(Token = "0x2000012")]
public class PacketRecordSettings
{
	[Token(Token = "0x400005B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	internal bool RecordingFrames;

	[Token(Token = "0x400005C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float UpdateRate;

	[Token(Token = "0x400005D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	internal float AccumulatedTime;

	[Token(Token = "0x6000065")]
	[Address(RVA = "0xC4247C", Offset = "0xC4247C", VA = "0xC4247C")]
	public PacketRecordSettings()
	{
	}
}
[Token(Token = "0x2000013")]
public class OvrAvatar : MonoBehaviour
{
	[Token(Token = "0x2000014")]
	public class PacketEventArgs : EventArgs
	{
		[Token(Token = "0x40000B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly OvrAvatarPacket Packet;

		[Token(Token = "0x600009A")]
		[Address(RVA = "0xB2EE5C", Offset = "0xB2EE5C", VA = "0xB2EE5C")]
		public PacketEventArgs(OvrAvatarPacket packet)
		{
		}
	}

	[Token(Token = "0x2000015")]
	public enum HandType
	{
		[Token(Token = "0x40000B9")]
		Right,
		[Token(Token = "0x40000BA")]
		Left,
		[Token(Token = "0x40000BB")]
		Max
	}

	[Token(Token = "0x2000016")]
	public enum HandJoint
	{
		[Token(Token = "0x40000BD")]
		HandBase,
		[Token(Token = "0x40000BE")]
		IndexBase,
		[Token(Token = "0x40000BF")]
		IndexTip,
		[Token(Token = "0x40000C0")]
		ThumbBase,
		[Token(Token = "0x40000C1")]
		ThumbTip,
		[Token(Token = "0x40000C2")]
		Max
	}

	[Token(Token = "0x2000017")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76F60C", Offset = "0x76F60C")]
	private sealed class <WaitForMouthAudioSource>d__137 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40000C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40000C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40000C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OvrAvatar <>4__this;

		[Token(Token = "0x17000005")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600009E")]
			[Address(RVA = "0xB2EE0C", Offset = "0xB2EE0C", VA = "0xB2EE0C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000006")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60000A0")]
			[Address(RVA = "0xB2EE54", Offset = "0xB2EE54", VA = "0xB2EE54", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600009B")]
		[Address(RVA = "0xB2EC3C", Offset = "0xB2EC3C", VA = "0xB2EC3C")]
		[DebuggerHidden]
		public <WaitForMouthAudioSource>d__137(int <>1__state)
		{
		}

		[Token(Token = "0x600009C")]
		[Address(RVA = "0xB2EC68", Offset = "0xB2EC68", VA = "0xB2EC68", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600009D")]
		[Address(RVA = "0xB2EC6C", Offset = "0xB2EC6C", VA = "0xB2EC6C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600009F")]
		[Address(RVA = "0xB2EE14", Offset = "0xB2EE14", VA = "0xB2EE14", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400005E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x770BA4", Offset = "0x770BA4")]
	public IntPtr sdkAvatar;

	[Token(Token = "0x400005F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string oculusUserID;

	[Token(Token = "0x4000060")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OvrAvatarDriver Driver;

	[Token(Token = "0x4000061")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x770BDC", Offset = "0x770BDC")]
	public bool EnableBody;

	[Token(Token = "0x4000062")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool EnableHands;

	[Token(Token = "0x4000063")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	public bool EnableBase;

	[Token(Token = "0x4000064")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
	public bool EnableExpressive;

	[Token(Token = "0x4000065")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x770C14", Offset = "0x770C14")]
	public bool RecordPackets;

	[Token(Token = "0x4000066")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	public bool UseSDKPackets;

	[Token(Token = "0x4000067")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public PacketRecordSettings PacketSettings;

	[Token(Token = "0x4000068")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x770C4C", Offset = "0x770C4C")]
	public bool StartWithControllers;

	[Token(Token = "0x4000069")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AvatarLayer FirstPersonLayer;

	[Token(Token = "0x400006A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AvatarLayer ThirdPersonLayer;

	[Token(Token = "0x400006B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool ShowFirstPerson;

	[Token(Token = "0x400006C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	public bool ShowThirdPerson;

	[Token(Token = "0x400006D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	internal ovrAvatarCapabilities Capabilities;

	[Token(Token = "0x400006E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x770C84", Offset = "0x770C84")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x770C84", Offset = "0x770C84")]
	internal ovrAvatarAssetLevelOfDetail LevelOfDetail;

	[Token(Token = "0x400006F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x770CF4", Offset = "0x770CF4")]
	private bool CombineMeshes;

	[Token(Token = "0x4000070")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x770D2C", Offset = "0x770D2C")]
	public bool UseTransparentRenderQueue;

	[Token(Token = "0x4000071")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x770D64", Offset = "0x770D64")]
	public Shader Monochrome_SurfaceShader;

	[Token(Token = "0x4000072")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Shader Monochrome_SurfaceShader_SelfOccluding;

	[Token(Token = "0x4000073")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Shader Monochrome_SurfaceShader_PBS;

	[Token(Token = "0x4000074")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Shader Skinshaded_SurfaceShader_SingleComponent;

	[Token(Token = "0x4000075")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Shader Skinshaded_VertFrag_SingleComponent;

	[Token(Token = "0x4000076")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Shader Skinshaded_VertFrag_CombinedMesh;

	[Token(Token = "0x4000077")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Shader Skinshaded_Expressive_SurfaceShader_SingleComponent;

	[Token(Token = "0x4000078")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Shader Skinshaded_Expressive_VertFrag_SingleComponent;

	[Token(Token = "0x4000079")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Shader Skinshaded_Expressive_VertFrag_CombinedMesh;

	[Token(Token = "0x400007A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Shader Loader_VertFrag_CombinedMesh;

	[Token(Token = "0x400007B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Shader EyeLens;

	[Token(Token = "0x400007C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Shader ControllerShader;

	[Token(Token = "0x400007D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x770D9C", Offset = "0x770D9C")]
	public bool CanOwnMicrophone;

	[Token(Token = "0x400007E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC9")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x770DD4", Offset = "0x770DD4")]
	public bool EnableLaughter;

	[Token(Token = "0x400007F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject MouthAnchor;

	[Token(Token = "0x4000080")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Transform LeftHandCustomPose;

	[Token(Token = "0x4000081")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Transform RightHandCustomPose;

	[Token(Token = "0x4000082")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private HashSet<ulong> assetLoadingIds;

	[Token(Token = "0x4000083")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private bool assetsFinishedLoading;

	[Token(Token = "0x4000084")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private OvrAvatarMaterialManager materialManager;

	[Token(Token = "0x4000085")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private bool waitingForCombinedMesh;

	[Token(Token = "0x4000086")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool doneExpressiveGlobalInit;

	[Token(Token = "0x4000087")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private Vector4 clothingAlphaOffset;

	[Token(Token = "0x4000088")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private ulong clothingAlphaTexture;

	[Token(Token = "0x4000089")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private OVRLipSyncMicInput micInput;

	[Token(Token = "0x400008A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private OVRLipSyncContext lipsyncContext;

	[Token(Token = "0x400008B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private OVRLipSync.Frame currentFrame;

	[Token(Token = "0x400008C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private float[] visemes;

	[Token(Token = "0x400008D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private AudioSource audioSource;

	[Token(Token = "0x400008E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private ONSPAudioSource spatializedSource;

	[Token(Token = "0x400008F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private List<float[]> voiceUpdates;

	[Token(Token = "0x4000090")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static ovrAvatarVisemes RuntimeVisemes;

	[Token(Token = "0x4000091")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private Transform cachedLeftHandCustomPose;

	[Token(Token = "0x4000092")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private Transform[] cachedCustomLeftHandJoints;

	[Token(Token = "0x4000093")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private ovrAvatarTransform[] cachedLeftHandTransforms;

	[Token(Token = "0x4000094")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private Transform cachedRightHandCustomPose;

	[Token(Token = "0x4000095")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private Transform[] cachedCustomRightHandJoints;

	[Token(Token = "0x4000096")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private ovrAvatarTransform[] cachedRightHandTransforms;

	[Token(Token = "0x4000097")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private bool showLeftController;

	[Token(Token = "0x4000098")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x189")]
	private bool showRightController;

	[Token(Token = "0x4000099")]
	private const bool USE_MOBILE_TEXTURE_FORMAT = true;

	[Token(Token = "0x400009A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static readonly Vector3 MOUTH_HEAD_OFFSET;

	[Token(Token = "0x400009B")]
	private const string MOUTH_HELPER_NAME = "MouthAnchor";

	[Token(Token = "0x400009C")]
	private const int VISEME_COUNT = 16;

	[Token(Token = "0x400009D")]
	private const float ACTION_UNIT_ONSET_SPEED = 30f;

	[Token(Token = "0x400009E")]
	private const float ACTION_UNIT_FALLOFF_SPEED = 20f;

	[Token(Token = "0x400009F")]
	private const float VISEME_LEVEL_MULTIPLIER = 1.5f;

	[Token(Token = "0x40000A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	internal ulong oculusUserIDInternal;

	[Token(Token = "0x40000A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	internal OvrAvatarBase Base;

	[Token(Token = "0x40000A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	internal OvrAvatarTouchController ControllerLeft;

	[Token(Token = "0x40000A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	internal OvrAvatarTouchController ControllerRight;

	[Token(Token = "0x40000A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	internal OvrAvatarBody Body;

	[Token(Token = "0x40000A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	internal OvrAvatarHand HandLeft;

	[Token(Token = "0x40000A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	internal OvrAvatarHand HandRight;

	[Token(Token = "0x40000A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	internal ovrAvatarLookAndFeelVersion LookAndFeelVersion;

	[Token(Token = "0x40000A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
	internal ovrAvatarLookAndFeelVersion FallbackLookAndFeelVersion;

	[Token(Token = "0x40000A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	private OvrAvatarPacket CurrentUnityPacket;

	[Token(Token = "0x40000AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public EventHandler<PacketEventArgs> PacketRecorded;

	[Token(Token = "0x40000AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static string[,] HandJoints;

	[Token(Token = "0x40000AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static Vector3 MOUTH_POSITION_OFFSET;

	[Token(Token = "0x40000AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static string VOICE_PROPERTY;

	[Token(Token = "0x40000AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static string MOUTH_POSITION_PROPERTY;

	[Token(Token = "0x40000AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static string MOUTH_DIRECTION_PROPERTY;

	[Token(Token = "0x40000B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private static string MOUTH_SCALE_PROPERTY;

	[Token(Token = "0x40000B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static float MOUTH_SCALE_GLOBAL;

	[Token(Token = "0x40000B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private static float MOUTH_MAX_GLOBAL;

	[Token(Token = "0x40000B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static string NECK_JONT;

	[Token(Token = "0x40000B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public float VoiceAmplitude;

	[Token(Token = "0x40000B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
	public bool EnableMouthVertexAnimation;

	[Token(Token = "0x40000B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static ovrAvatarLights ovrLights;

	[Token(Token = "0x6000066")]
	[Address(RVA = "0xB9CB98", Offset = "0xB9CB98", VA = "0xB9CB98")]
	static OvrAvatar()
	{
	}

	[Token(Token = "0x6000067")]
	[Address(RVA = "0xB9CF84", Offset = "0xB9CF84", VA = "0xB9CF84")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000068")]
	[Address(RVA = "0xB9D018", Offset = "0xB9D018", VA = "0xB9D018")]
	public void AssetLoadedCallback(OvrAvatarAsset asset)
	{
	}

	[Token(Token = "0x6000069")]
	[Address(RVA = "0xB9D080", Offset = "0xB9D080", VA = "0xB9D080")]
	public void CombinedMeshLoadedCallback(IntPtr assetPtr)
	{
	}

	[Token(Token = "0x600006A")]
	[Address(RVA = "0xB9D1B0", Offset = "0xB9D1B0", VA = "0xB9D1B0")]
	private OvrAvatarSkinnedMeshRenderComponent AddSkinnedMeshRenderComponent(GameObject gameObject, ovrAvatarRenderPart_SkinnedMeshRender skinnedMeshRender)
	{
		return null;
	}

	[Token(Token = "0x600006B")]
	[Address(RVA = "0xB9D290", Offset = "0xB9D290", VA = "0xB9D290")]
	private OvrAvatarSkinnedMeshRenderPBSComponent AddSkinnedMeshRenderPBSComponent(GameObject gameObject, ovrAvatarRenderPart_SkinnedMeshRenderPBS skinnedMeshRenderPBS)
	{
		return null;
	}

	[Token(Token = "0x600006C")]
	[Address(RVA = "0xB9D36C", Offset = "0xB9D36C", VA = "0xB9D36C")]
	private OvrAvatarSkinnedMeshPBSV2RenderComponent AddSkinnedMeshRenderPBSV2Component(IntPtr renderPart, GameObject go, ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2 skinnedMeshRenderPBSV2, bool isBodyPartZero, bool isControllerModel)
	{
		return null;
	}

	[Token(Token = "0x600006D")]
	[Address(RVA = "0xB9D550", Offset = "0xB9D550", VA = "0xB9D550")]
	public static IntPtr GetRenderPart(ovrAvatarComponent component, uint renderPartIndex)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x600006E")]
	[Address(RVA = "0xB9D62C", Offset = "0xB9D62C", VA = "0xB9D62C")]
	private static string GetRenderPartName(ovrAvatarComponent component, uint renderPartIndex)
	{
		return null;
	}

	[Token(Token = "0x600006F")]
	[Address(RVA = "0xB9D6A4", Offset = "0xB9D6A4", VA = "0xB9D6A4")]
	internal static void ConvertTransform(float[] transform, ref ovrAvatarTransform target)
	{
	}

	[Token(Token = "0x6000070")]
	[Address(RVA = "0xB9D78C", Offset = "0xB9D78C", VA = "0xB9D78C")]
	internal static void ConvertTransform(ovrAvatarTransform transform, Transform target)
	{
	}

	[Token(Token = "0x6000071")]
	[Address(RVA = "0xB9D818", Offset = "0xB9D818", VA = "0xB9D818")]
	public static ovrAvatarTransform CreateOvrAvatarTransform(Vector3 position, Quaternion orientation)
	{
		return default(ovrAvatarTransform);
	}

	[Token(Token = "0x6000072")]
	[Address(RVA = "0xB9D8A0", Offset = "0xB9D8A0", VA = "0xB9D8A0")]
	private static ovrAvatarGazeTarget CreateOvrGazeTarget(uint targetId, Vector3 targetPosition, ovrAvatarGazeTargetType targetType)
	{
		return default(ovrAvatarGazeTarget);
	}

	[Token(Token = "0x6000073")]
	[Address(RVA = "0xB9D8B8", Offset = "0xB9D8B8", VA = "0xB9D8B8")]
	private void BuildRenderComponents()
	{
	}

	[Token(Token = "0x6000074")]
	private void AddAvatarComponent<T>(ref T root, ovrAvatarComponent nativeComponent) where T : OvrAvatarComponent
	{
	}

	[Token(Token = "0x6000075")]
	[Address(RVA = "0xB9DD68", Offset = "0xB9DD68", VA = "0xB9DD68")]
	private void UpdateCustomPoses()
	{
	}

	[Token(Token = "0x6000076")]
	[Address(RVA = "0xB9E0E8", Offset = "0xB9E0E8", VA = "0xB9E0E8")]
	private static bool UpdatePoseRoot(Transform poseRoot, ref Transform cachedPoseRoot, ref Transform[] cachedPoseJoints, ref ovrAvatarTransform[] transforms)
	{
		return default(bool);
	}

	[Token(Token = "0x6000077")]
	[Address(RVA = "0xB9E290", Offset = "0xB9E290", VA = "0xB9E290")]
	private static bool UpdateTransforms(Transform[] joints, ovrAvatarTransform[] transforms)
	{
		return default(bool);
	}

	[Token(Token = "0x6000078")]
	[Address(RVA = "0xB9E4DC", Offset = "0xB9E4DC", VA = "0xB9E4DC")]
	private static void OrderJoints(Transform transform, List<Transform> joints)
	{
	}

	[Token(Token = "0x6000079")]
	[Address(RVA = "0xB9E5D0", Offset = "0xB9E5D0", VA = "0xB9E5D0")]
	private void AvatarSpecificationCallback(IntPtr avatarSpecification)
	{
	}

	[Token(Token = "0x600007A")]
	[Address(RVA = "0xB9E9D8", Offset = "0xB9E9D8", VA = "0xB9E9D8")]
	private void Start()
	{
	}

	[Token(Token = "0x600007B")]
	[Address(RVA = "0xB9ED04", Offset = "0xB9ED04", VA = "0xB9ED04")]
	private void Update()
	{
	}

	[Token(Token = "0x600007C")]
	[Address(RVA = "0xB9F728", Offset = "0xB9F728", VA = "0xB9F728")]
	public static ovrAvatarHandInputState CreateInputState(ovrAvatarTransform transform, OvrAvatarDriver.ControllerPose pose)
	{
		return default(ovrAvatarHandInputState);
	}

	[Token(Token = "0x600007D")]
	[Address(RVA = "0xB9F77C", Offset = "0xB9F77C", VA = "0xB9F77C")]
	public void ShowControllers(bool show)
	{
	}

	[Token(Token = "0x600007E")]
	[Address(RVA = "0xB9E890", Offset = "0xB9E890", VA = "0xB9E890")]
	public void ShowLeftController(bool show)
	{
	}

	[Token(Token = "0x600007F")]
	[Address(RVA = "0xB9E934", Offset = "0xB9E934", VA = "0xB9E934")]
	public void ShowRightController(bool show)
	{
	}

	[Token(Token = "0x6000080")]
	[Address(RVA = "0xB9F7AC", Offset = "0xB9F7AC", VA = "0xB9F7AC")]
	public void UpdateVoiceVisualization(float[] voiceSamples)
	{
	}

	[Token(Token = "0x6000081")]
	[Address(RVA = "0xB9F0DC", Offset = "0xB9F0DC", VA = "0xB9F0DC")]
	private void RecordFrame()
	{
	}

	[Token(Token = "0x6000082")]
	[Address(RVA = "0xB9FA20", Offset = "0xB9FA20", VA = "0xB9FA20")]
	private void RecordUnityFrame()
	{
	}

	[Token(Token = "0x6000083")]
	[Address(RVA = "0xB9F810", Offset = "0xB9F810", VA = "0xB9F810")]
	private void RecordSDKFrame()
	{
	}

	[Token(Token = "0x6000084")]
	[Address(RVA = "0xB9FCD0", Offset = "0xB9FCD0", VA = "0xB9FCD0")]
	private void AddRenderParts(OvrAvatarComponent ovrComponent, ovrAvatarComponent component, Transform parent)
	{
	}

	[Token(Token = "0x6000085")]
	[Address(RVA = "0xBA014C", Offset = "0xBA014C", VA = "0xBA014C")]
	public void RefreshBodyParts()
	{
	}

	[Token(Token = "0x6000086")]
	[Address(RVA = "0xBA03E4", Offset = "0xBA03E4", VA = "0xBA03E4")]
	public ovrAvatarBodyComponent? GetBodyComponent()
	{
		return null;
	}

	[Token(Token = "0x6000087")]
	[Address(RVA = "0xBA0538", Offset = "0xBA0538", VA = "0xBA0538")]
	public Transform GetHandTransform(HandType hand, HandJoint joint)
	{
		return null;
	}

	[Token(Token = "0x6000088")]
	[Address(RVA = "0xBA071C", Offset = "0xBA071C", VA = "0xBA071C")]
	public void GetPointingDirection(HandType hand, ref Vector3 forward, ref Vector3 up)
	{
	}

	[Token(Token = "0x6000089")]
	[Address(RVA = "0xB9F2A8", Offset = "0xB9F2A8", VA = "0xB9F2A8")]
	private void UpdateVoiceBehavior()
	{
	}

	[Token(Token = "0x600008A")]
	[Address(RVA = "0xBA07F0", Offset = "0xBA07F0", VA = "0xBA07F0")]
	private bool IsValidMic()
	{
		return default(bool);
	}

	[Token(Token = "0x600008B")]
	[Address(RVA = "0xB9F0EC", Offset = "0xB9F0EC", VA = "0xB9F0EC")]
	private void InitPostLoad()
	{
	}

	[Token(Token = "0x600008C")]
	[Address(RVA = "0xBA08E0", Offset = "0xBA08E0", VA = "0xBA08E0")]
	private static void ExpressiveGlobalInit()
	{
	}

	[Token(Token = "0x600008D")]
	[Address(RVA = "0xBA0F38", Offset = "0xBA0F38", VA = "0xBA0F38")]
	private static void InitializeLights()
	{
	}

	[Token(Token = "0x600008E")]
	[Address(RVA = "0xBA141C", Offset = "0xBA141C", VA = "0xBA141C")]
	private static ovrAvatarLight CreateLightDirectional(uint id, Vector3 direction, float intensity, ref ovrAvatarLight light)
	{
		return default(ovrAvatarLight);
	}

	[Token(Token = "0x600008F")]
	[Address(RVA = "0xBA1444", Offset = "0xBA1444", VA = "0xBA1444")]
	private static ovrAvatarLight CreateLightPoint(uint id, Vector3 position, float range, float intensity, ref ovrAvatarLight light)
	{
		return default(ovrAvatarLight);
	}

	[Token(Token = "0x6000090")]
	[Address(RVA = "0xBA146C", Offset = "0xBA146C", VA = "0xBA146C")]
	private static ovrAvatarLight CreateLightSpot(uint id, Vector3 position, Vector3 direction, float spotAngleDeg, float range, float intensity, ref ovrAvatarLight light)
	{
		return default(ovrAvatarLight);
	}

	[Token(Token = "0x6000091")]
	[Address(RVA = "0xB9F5B4", Offset = "0xB9F5B4", VA = "0xB9F5B4")]
	private void UpdateExpressive()
	{
	}

	[Token(Token = "0x6000092")]
	[Address(RVA = "0xBA09A4", Offset = "0xBA09A4", VA = "0xBA09A4")]
	private void ConfigureHelpers()
	{
	}

	[Token(Token = "0x6000093")]
	[Address(RVA = "0xBA188C", Offset = "0xBA188C", VA = "0xBA188C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x773EE0", Offset = "0x773EE0")]
	private IEnumerator WaitForMouthAudioSource()
	{
		return null;
	}

	[Token(Token = "0x6000094")]
	[Address(RVA = "0xBA18F8", Offset = "0xBA18F8", VA = "0xBA18F8")]
	public void DestroyHelperObjects()
	{
	}

	[Token(Token = "0x6000095")]
	[Address(RVA = "0xBA174C", Offset = "0xBA174C", VA = "0xBA174C")]
	public GameObject CreateHelperObject(Transform parent, Vector3 localPositionOffset, string helperName, string helperTag = "")
	{
		return null;
	}

	[Token(Token = "0x6000096")]
	[Address(RVA = "0xBA19BC", Offset = "0xBA19BC", VA = "0xBA19BC")]
	public void UpdateVoiceData(short[] pcmData, int numChannels)
	{
	}

	[Token(Token = "0x6000097")]
	[Address(RVA = "0xBA1AA4", Offset = "0xBA1AA4", VA = "0xBA1AA4")]
	public void UpdateVoiceData(float[] pcmData, int numChannels)
	{
	}

	[Token(Token = "0x6000098")]
	[Address(RVA = "0xBA14A8", Offset = "0xBA14A8", VA = "0xBA14A8")]
	private void UpdateFacewave()
	{
	}

	[Token(Token = "0x6000099")]
	[Address(RVA = "0xBA1B8C", Offset = "0xBA1B8C", VA = "0xBA1B8C")]
	public OvrAvatar()
	{
	}
}
[Token(Token = "0x2000018")]
public class OvrAvatarAsset
{
	[Token(Token = "0x40000C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong assetID;

	[Token(Token = "0x60000A1")]
	[Address(RVA = "0xBA1D4C", Offset = "0xBA1D4C", VA = "0xBA1D4C")]
	public OvrAvatarAsset()
	{
	}
}
[Token(Token = "0x2000019")]
public class OvrAvatarAssetMesh : OvrAvatarAsset
{
	[Token(Token = "0x40000C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Mesh mesh;

	[Token(Token = "0x40000C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ovrAvatarSkinnedMeshPose skinnedBindPose;

	[Token(Token = "0x40000C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string[] jointNames;

	[Token(Token = "0x60000A2")]
	[Address(RVA = "0xBA1E10", Offset = "0xBA1E10", VA = "0xBA1E10")]
	public OvrAvatarAssetMesh(ulong _assetId, IntPtr asset, ovrAvatarAssetType meshType)
	{
	}

	[Token(Token = "0x60000A3")]
	[Address(RVA = "0xBA3094", Offset = "0xBA3094", VA = "0xBA3094")]
	private void LoadSubmeshes(IntPtr asset, IntPtr indexBufferPtr, ulong indexCount)
	{
	}

	[Token(Token = "0x60000A4")]
	[Address(RVA = "0xBA2C68", Offset = "0xBA2C68", VA = "0xBA2C68")]
	private void LoadBlendShapes(IntPtr asset, long vertexCount)
	{
	}

	[Token(Token = "0x60000A5")]
	[Address(RVA = "0xBA29F8", Offset = "0xBA29F8", VA = "0xBA29F8")]
	private void SetSkinnedBindPose(IntPtr asset, ovrAvatarAssetType meshType)
	{
	}

	[Token(Token = "0x60000A6")]
	[Address(RVA = "0xBA2AD4", Offset = "0xBA2AD4", VA = "0xBA2AD4")]
	private void GetVertexAndIndexData(IntPtr asset, ovrAvatarAssetType meshType, out long vertexCount, out IntPtr vertexBuffer, out uint indexCount, out IntPtr indexBuffer)
	{
	}

	[Token(Token = "0x60000A7")]
	[Address(RVA = "0xBA3324", Offset = "0xBA3324", VA = "0xBA3324")]
	public SkinnedMeshRenderer CreateSkinnedMeshRendererOnObject(GameObject target)
	{
		return null;
	}
}
[Token(Token = "0x200001A")]
public class OvrAvatarAssetTexture : OvrAvatarAsset
{
	[Token(Token = "0x40000CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Texture2D texture;

	[Token(Token = "0x40000CB")]
	private const int ASTCHeaderSize = 16;

	[Token(Token = "0x60000A8")]
	[Address(RVA = "0xC355EC", Offset = "0xC355EC", VA = "0xC355EC")]
	public OvrAvatarAssetTexture(ulong _assetId, IntPtr asset)
	{
	}
}
[Token(Token = "0x200001B")]
public class OvrAvatarBase : OvrAvatarComponent
{
	[Token(Token = "0x40000CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private ovrAvatarBaseComponent component;

	[Token(Token = "0x60000A9")]
	[Address(RVA = "0xC35858", Offset = "0xC35858", VA = "0xC35858")]
	private void Update()
	{
	}

	[Token(Token = "0x60000AA")]
	[Address(RVA = "0xC35CA4", Offset = "0xC35CA4", VA = "0xC35CA4")]
	public OvrAvatarBase()
	{
	}
}
[Token(Token = "0x200001C")]
public class OvrAvatarBody : OvrAvatarComponent
{
	[Token(Token = "0x40000CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ovrAvatarBodyComponent component;

	[Token(Token = "0x60000AB")]
	[Address(RVA = "0xC35DBC", Offset = "0xC35DBC", VA = "0xC35DBC")]
	public ovrAvatarComponent? GetNativeAvatarComponent()
	{
		return null;
	}

	[Token(Token = "0x60000AC")]
	[Address(RVA = "0xC35F2C", Offset = "0xC35F2C", VA = "0xC35F2C")]
	private void Update()
	{
	}

	[Token(Token = "0x60000AD")]
	[Address(RVA = "0xC36050", Offset = "0xC36050", VA = "0xC36050")]
	public OvrAvatarBody()
	{
	}
}
[Token(Token = "0x200001D")]
public class OvrAvatarComponent : MonoBehaviour
{
	[Token(Token = "0x40000CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly string[] LayerKeywords;

	[Token(Token = "0x40000CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static readonly string[] LayerSampleModeParameters;

	[Token(Token = "0x40000D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static readonly string[] LayerBlendModeParameters;

	[Token(Token = "0x40000D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static readonly string[] LayerMaskTypeParameters;

	[Token(Token = "0x40000D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static readonly string[] LayerColorParameters;

	[Token(Token = "0x40000D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static readonly string[] LayerSurfaceParameters;

	[Token(Token = "0x40000D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static readonly string[] LayerSampleParametersParameters;

	[Token(Token = "0x40000D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static readonly string[] LayerMaskParametersParameters;

	[Token(Token = "0x40000D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static readonly string[] LayerMaskAxisParameters;

	[Token(Token = "0x40000D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dictionary<Material, ovrAvatarMaterialState> materialStates;

	[Token(Token = "0x40000D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<OvrAvatarRenderComponent> RenderParts;

	[Token(Token = "0x40000D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected OvrAvatar owner;

	[Token(Token = "0x40000DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected ovrAvatarComponent nativeAvatarComponent;

	[Token(Token = "0x60000AE")]
	[Address(RVA = "0xC360B0", Offset = "0xC360B0", VA = "0xC360B0")]
	public void SetOvrAvatarOwner(OvrAvatar ovrAvatarOwner)
	{
	}

	[Token(Token = "0x60000AF")]
	[Address(RVA = "0xC3597C", Offset = "0xC3597C", VA = "0xC3597C")]
	public void UpdateAvatar(IntPtr nativeComponent)
	{
	}

	[Token(Token = "0x60000B0")]
	[Address(RVA = "0xC36700", Offset = "0xC36700", VA = "0xC36700")]
	protected void UpdateActive(OvrAvatar avatar, ovrAvatarVisibilityFlags mask)
	{
	}

	[Token(Token = "0x60000B1")]
	[Address(RVA = "0xC36760", Offset = "0xC36760", VA = "0xC36760")]
	public void UpdateAvatarMaterial(Material mat, ovrAvatarMaterialState matState)
	{
	}

	[Token(Token = "0x60000B2")]
	[Address(RVA = "0xC36F14", Offset = "0xC36F14", VA = "0xC36F14")]
	public static Texture2D GetLoadedTexture(ulong assetId)
	{
		return null;
	}

	[Token(Token = "0x60000B3")]
	[Address(RVA = "0xC35D04", Offset = "0xC35D04", VA = "0xC35D04")]
	public OvrAvatarComponent()
	{
	}
}
[Token(Token = "0x200001E")]
public abstract class OvrAvatarDriver : MonoBehaviour
{
	[Token(Token = "0x200001F")]
	public enum PacketMode
	{
		[Token(Token = "0x40000DF")]
		SDK,
		[Token(Token = "0x40000E0")]
		Unity
	}

	[Token(Token = "0x2000020")]
	public struct ControllerPose
	{
		[Token(Token = "0x40000E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ovrAvatarButton buttons;

		[Token(Token = "0x40000E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public ovrAvatarTouch touches;

		[Token(Token = "0x40000E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Vector2 joystickPosition;

		[Token(Token = "0x40000E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float indexTrigger;

		[Token(Token = "0x40000E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float handTrigger;

		[Token(Token = "0x40000E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool isActive;

		[Token(Token = "0x60000BB")]
		[Address(RVA = "0xB2EED4", Offset = "0xB2EED4", VA = "0xB2EED4")]
		public static ControllerPose Interpolate(ControllerPose a, ControllerPose b, float t)
		{
			return default(ControllerPose);
		}
	}

	[Token(Token = "0x2000021")]
	public struct PoseFrame
	{
		[Token(Token = "0x40000E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 headPosition;

		[Token(Token = "0x40000E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Quaternion headRotation;

		[Token(Token = "0x40000E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 handLeftPosition;

		[Token(Token = "0x40000EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Quaternion handLeftRotation;

		[Token(Token = "0x40000EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector3 handRightPosition;

		[Token(Token = "0x40000EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Quaternion handRightRotation;

		[Token(Token = "0x40000ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float voiceAmplitude;

		[Token(Token = "0x40000EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public ControllerPose controllerLeftPose;

		[Token(Token = "0x40000EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public ControllerPose controllerRightPose;

		[Token(Token = "0x60000BC")]
		[Address(RVA = "0xB2EFB0", Offset = "0xB2EFB0", VA = "0xB2EFB0")]
		public static PoseFrame Interpolate(PoseFrame a, PoseFrame b, float t)
		{
			return default(PoseFrame);
		}
	}

	[Token(Token = "0x40000DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PacketMode Mode;

	[Token(Token = "0x40000DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	protected PoseFrame CurrentPose;

	[Token(Token = "0x40000DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private ovrAvatarControllerType ControllerType;

	[Token(Token = "0x60000B5")]
	[Address(RVA = "0xC385C0", Offset = "0xC385C0", VA = "0xC385C0")]
	public PoseFrame GetCurrentPose()
	{
		return default(PoseFrame);
	}

	[Token(Token = "0x60000B6")]
	public abstract void UpdateTransforms(IntPtr sdkAvatar);

	[Token(Token = "0x60000B7")]
	[Address(RVA = "0xC385D0", Offset = "0xC385D0", VA = "0xC385D0")]
	private void Start()
	{
	}

	[Token(Token = "0x60000B8")]
	[Address(RVA = "0xC38658", Offset = "0xC38658", VA = "0xC38658")]
	public void UpdateTransformsFromPose(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x60000B9")]
	[Address(RVA = "0xC388D4", Offset = "0xC388D4", VA = "0xC388D4")]
	public static bool GetIsTrackedRemote()
	{
		return default(bool);
	}

	[Token(Token = "0x60000BA")]
	[Address(RVA = "0xC388DC", Offset = "0xC388DC", VA = "0xC388DC")]
	protected OvrAvatarDriver()
	{
	}
}
[Token(Token = "0x2000022")]
public class OvrAvatarHand : OvrAvatarComponent
{
	[Token(Token = "0x40000F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool isLeftHand;

	[Token(Token = "0x40000F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ovrAvatarHandComponent component;

	[Token(Token = "0x60000BD")]
	[Address(RVA = "0xC388EC", Offset = "0xC388EC", VA = "0xC388EC")]
	private void Update()
	{
	}

	[Token(Token = "0x60000BE")]
	[Address(RVA = "0xC38A50", Offset = "0xC38A50", VA = "0xC38A50")]
	public OvrAvatarHand()
	{
	}
}
[Token(Token = "0x2000023")]
public class OvrAvatarLocalDriver : OvrAvatarDriver
{
	[Token(Token = "0x40000F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Vector3 centerEyePosition;

	[Token(Token = "0x40000F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private Quaternion centerEyeRotation;

	[Token(Token = "0x40000F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float voiceAmplitude;

	[Token(Token = "0x60000BF")]
	[Address(RVA = "0xC38AB8", Offset = "0xC38AB8", VA = "0xC38AB8")]
	private ControllerPose GetMalibuControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x60000C0")]
	[Address(RVA = "0xC38C1C", Offset = "0xC38C1C", VA = "0xC38C1C")]
	private ControllerPose GetControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x60000C1")]
	[Address(RVA = "0xC38FB8", Offset = "0xC38FB8", VA = "0xC38FB8")]
	private void CalculateCurrentPose()
	{
	}

	[Token(Token = "0x60000C2")]
	[Address(RVA = "0xC391DC", Offset = "0xC391DC", VA = "0xC391DC", Slot = "4")]
	public override void UpdateTransforms(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x60000C3")]
	[Address(RVA = "0xC39208", Offset = "0xC39208", VA = "0xC39208")]
	public OvrAvatarLocalDriver()
	{
	}
}
[Token(Token = "0x2000024")]
public class OvrAvatarMaterialManager : MonoBehaviour
{
	[Token(Token = "0x2000025")]
	public enum TextureType
	{
		[Token(Token = "0x4000116")]
		DiffuseTextures,
		[Token(Token = "0x4000117")]
		NormalMaps,
		[Token(Token = "0x4000118")]
		RoughnessMaps,
		[Token(Token = "0x4000119")]
		Count
	}

	[Token(Token = "0x2000026")]
	public struct AvatarComponentMaterialProperties
	{
		[Token(Token = "0x400011A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ovrAvatarBodyPartType TypeIndex;

		[Token(Token = "0x400011B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public Color Color;

		[Token(Token = "0x400011C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Texture2D[] Textures;

		[Token(Token = "0x400011D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float DiffuseIntensity;

		[Token(Token = "0x400011E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float RimIntensity;

		[Token(Token = "0x400011F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float ReflectionIntensity;
	}

	[Token(Token = "0x2000027")]
	public struct AvatarTextureArrayProperties
	{
		[Token(Token = "0x4000120")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Texture2D[] Textures;

		[Token(Token = "0x4000121")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Texture2DArray TextureArray;
	}

	[Token(Token = "0x2000028")]
	public struct AvatarMaterialPropertyBlock
	{
		[Token(Token = "0x4000122")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector4[] Colors;

		[Token(Token = "0x4000123")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float[] DiffuseIntensities;

		[Token(Token = "0x4000124")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float[] RimIntensities;

		[Token(Token = "0x4000125")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float[] ReflectionIntensities;
	}

	[Serializable]
	[Token(Token = "0x2000029")]
	public class AvatarMaterialConfig
	{
		[Token(Token = "0x4000126")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AvatarComponentMaterialProperties[] ComponentMaterialProperties;

		[Token(Token = "0x4000127")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AvatarMaterialPropertyBlock MaterialPropertyBlock;

		[Token(Token = "0x60000D3")]
		[Address(RVA = "0xB2F9AC", Offset = "0xB2F9AC", VA = "0xB2F9AC")]
		public AvatarMaterialConfig()
		{
		}
	}

	[Token(Token = "0x200002A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76F61C", Offset = "0x76F61C")]
	private sealed class <RunLoadingAnimation>d__49 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000128")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000129")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400012A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OvrAvatarMaterialManager <>4__this;

		[Token(Token = "0x400012B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action callBack;

		[Token(Token = "0x400012C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <srcBlend>5__2;

		[Token(Token = "0x400012D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int <dstBlend>5__3;

		[Token(Token = "0x400012E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string <lightModeTag>5__4;

		[Token(Token = "0x400012F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string <renderTypeTag>5__5;

		[Token(Token = "0x4000130")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private string <renderQueueTag>5__6;

		[Token(Token = "0x4000131")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private string <ignoreProjectorTag>5__7;

		[Token(Token = "0x4000132")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int <renderQueue>5__8;

		[Token(Token = "0x4000133")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private bool <transparentQueue>5__9;

		[Token(Token = "0x17000007")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60000D7")]
			[Address(RVA = "0xB2F95C", Offset = "0xB2F95C", VA = "0xB2F95C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000008")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60000D9")]
			[Address(RVA = "0xB2F9A4", Offset = "0xB2F9A4", VA = "0xB2F9A4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60000D4")]
		[Address(RVA = "0xB2F2B4", Offset = "0xB2F2B4", VA = "0xB2F2B4")]
		[DebuggerHidden]
		public <RunLoadingAnimation>d__49(int <>1__state)
		{
		}

		[Token(Token = "0x60000D5")]
		[Address(RVA = "0xB2F2E0", Offset = "0xB2F2E0", VA = "0xB2F2E0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60000D6")]
		[Address(RVA = "0xB2F2E4", Offset = "0xB2F2E4", VA = "0xB2F2E4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60000D8")]
		[Address(RVA = "0xB2F964", Offset = "0xB2F964", VA = "0xB2F964", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40000F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Renderer TargetRenderer;

	[Token(Token = "0x40000F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AvatarTextureArrayProperties[] TextureArrays;

	[Token(Token = "0x40000F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly string[] TextureTypeToShaderProperties;

	[Token(Token = "0x40000F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AvatarMaterialConfig LocalAvatarConfig;

	[Token(Token = "0x40000F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<ReflectionProbeBlendInfo> ReflectionProbes;

	[Token(Token = "0x40000FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Shader CombinedShader;

	[Token(Token = "0x40000FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string AVATAR_SHADER_LOADER;

	[Token(Token = "0x40000FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static string AVATAR_SHADER_MAINTEX;

	[Token(Token = "0x40000FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static string AVATAR_SHADER_NORMALMAP;

	[Token(Token = "0x40000FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static string AVATAR_SHADER_ROUGHNESSMAP;

	[Token(Token = "0x40000FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static string AVATAR_SHADER_COLOR;

	[Token(Token = "0x4000100")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static string AVATAR_SHADER_DIFFUSEINTENSITY;

	[Token(Token = "0x4000101")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static string AVATAR_SHADER_RIMINTENSITY;

	[Token(Token = "0x4000102")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static string AVATAR_SHADER_REFLECTIONINTENSITY;

	[Token(Token = "0x4000103")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static string AVATAR_SHADER_CUBEMAP;

	[Token(Token = "0x4000104")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public static string AVATAR_SHADER_ALPHA;

	[Token(Token = "0x4000105")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public static string AVATAR_SHADER_LOADING_DIMMER;

	[Token(Token = "0x4000106")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public static string AVATAR_SHADER_IRIS_COLOR;

	[Token(Token = "0x4000107")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public static string AVATAR_SHADER_LIP_COLOR;

	[Token(Token = "0x4000108")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public static string AVATAR_SHADER_BROW_COLOR;

	[Token(Token = "0x4000109")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public static string AVATAR_SHADER_LASH_COLOR;

	[Token(Token = "0x400010A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public static string AVATAR_SHADER_SCLERA_COLOR;

	[Token(Token = "0x400010B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public static string AVATAR_SHADER_GUM_COLOR;

	[Token(Token = "0x400010C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public static string AVATAR_SHADER_TEETH_COLOR;

	[Token(Token = "0x400010D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public static string AVATAR_SHADER_LIP_SMOOTHNESS;

	[Token(Token = "0x400010E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public static float[] DiffuseIntensities;

	[Token(Token = "0x400010F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public static float[] RimIntensities;

	[Token(Token = "0x4000110")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public static float[] ReflectionIntensities;

	[Token(Token = "0x4000111")]
	private const float LOADING_ANIMATION_AMPLITUDE = 0.5f;

	[Token(Token = "0x4000112")]
	private const float LOADING_ANIMATION_PERIOD = 0.35f;

	[Token(Token = "0x4000113")]
	private const float LOADING_ANIMATION_CURVE_SCALE = 0.25f;

	[Token(Token = "0x4000114")]
	private const float LOADING_ANIMATION_DIMMER_MIN = 0.3f;

	[Token(Token = "0x60000C4")]
	[Address(RVA = "0xC39254", Offset = "0xC39254", VA = "0xC39254")]
	public void CreateTextureArrays()
	{
	}

	[Token(Token = "0x60000C5")]
	[Address(RVA = "0xC393E0", Offset = "0xC393E0", VA = "0xC393E0")]
	public void SetRenderer(Renderer renderer)
	{
	}

	[Token(Token = "0x60000C6")]
	[Address(RVA = "0xC39408", Offset = "0xC39408", VA = "0xC39408")]
	public void OnCombinedMeshReady()
	{
	}

	[Token(Token = "0x60000C7")]
	[Address(RVA = "0xC39B64", Offset = "0xC39B64", VA = "0xC39B64")]
	public void AddTextureIDToTextureManager(ulong assetID, bool isSingleComponent)
	{
	}

	[Token(Token = "0x60000C8")]
	[Address(RVA = "0xC39E4C", Offset = "0xC39E4C", VA = "0xC39E4C")]
	private void DeleteTextureSet()
	{
	}

	[Token(Token = "0x60000C9")]
	[Address(RVA = "0xC394A4", Offset = "0xC394A4", VA = "0xC394A4")]
	public void InitTextureArrays()
	{
	}

	[Token(Token = "0x60000CA")]
	[Address(RVA = "0xC39F38", Offset = "0xC39F38", VA = "0xC39F38")]
	private void ProcessTexturesWithMips(Texture2D[] textures, int texArrayResolution, Texture2DArray texArray)
	{
	}

	[Token(Token = "0x60000CB")]
	[Address(RVA = "0xC398DC", Offset = "0xC398DC", VA = "0xC398DC")]
	private void SetMaterialPropertyBlock()
	{
	}

	[Token(Token = "0x60000CC")]
	[Address(RVA = "0xC3A1C8", Offset = "0xC3A1C8", VA = "0xC3A1C8")]
	private void ApplyMaterialPropertyBlock()
	{
	}

	[Token(Token = "0x60000CD")]
	[Address(RVA = "0xC3A46C", Offset = "0xC3A46C", VA = "0xC3A46C")]
	public static ovrAvatarBodyPartType GetComponentType(string objectName)
	{
		return default(ovrAvatarBodyPartType);
	}

	[Token(Token = "0x60000CE")]
	[Address(RVA = "0xC3A594", Offset = "0xC3A594", VA = "0xC3A594")]
	private ulong GetTextureIDForType(ovrAvatarPBSMaterialState materialState, TextureType type)
	{
		return default(ulong);
	}

	[Token(Token = "0x60000CF")]
	[Address(RVA = "0xC3A5CC", Offset = "0xC3A5CC", VA = "0xC3A5CC")]
	public void ValidateTextures(ovrAvatarPBSMaterialState[] materialStates)
	{
	}

	[Token(Token = "0x60000D0")]
	[Address(RVA = "0xC39AEC", Offset = "0xC39AEC", VA = "0xC39AEC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x773F90", Offset = "0x773F90")]
	private IEnumerator RunLoadingAnimation(Action callBack)
	{
		return null;
	}

	[Token(Token = "0x60000D1")]
	[Address(RVA = "0xC3B444", Offset = "0xC3B444", VA = "0xC3B444")]
	public OvrAvatarMaterialManager()
	{
	}
}
[Token(Token = "0x200002B")]
public class OvrAvatarPacket
{
	[Token(Token = "0x4000134")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public IntPtr ovrNativePacket;

	[Token(Token = "0x4000135")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<float> frameTimes;

	[Token(Token = "0x4000136")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<OvrAvatarDriver.PoseFrame> frames;

	[Token(Token = "0x4000137")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<byte[]> encodedAudioPackets;

	[Token(Token = "0x17000009")]
	public float Duration
	{
		[Token(Token = "0x60000DA")]
		[Address(RVA = "0xC3B988", Offset = "0xC3B988", VA = "0xC3B988")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700000A")]
	public OvrAvatarDriver.PoseFrame FinalFrame
	{
		[Token(Token = "0x60000DB")]
		[Address(RVA = "0xC3B9FC", Offset = "0xC3B9FC", VA = "0xC3B9FC")]
		get
		{
			return default(OvrAvatarDriver.PoseFrame);
		}
	}

	[Token(Token = "0x60000DC")]
	[Address(RVA = "0xC3BA8C", Offset = "0xC3BA8C", VA = "0xC3BA8C")]
	public OvrAvatarPacket()
	{
	}

	[Token(Token = "0x60000DD")]
	[Address(RVA = "0xC3BB94", Offset = "0xC3BB94", VA = "0xC3BB94")]
	public OvrAvatarPacket(OvrAvatarDriver.PoseFrame initialPose)
	{
	}

	[Token(Token = "0x60000DE")]
	[Address(RVA = "0xC3BD30", Offset = "0xC3BD30", VA = "0xC3BD30")]
	private OvrAvatarPacket(List<float> frameTimes, List<OvrAvatarDriver.PoseFrame> frames, List<byte[]> audioPackets)
	{
	}

	[Token(Token = "0x60000DF")]
	[Address(RVA = "0xC3BE50", Offset = "0xC3BE50", VA = "0xC3BE50")]
	public void AddFrame(OvrAvatarDriver.PoseFrame frame, float deltaSeconds)
	{
	}

	[Token(Token = "0x60000E0")]
	[Address(RVA = "0xC3BF28", Offset = "0xC3BF28", VA = "0xC3BF28")]
	public OvrAvatarDriver.PoseFrame GetPoseFrame(float seconds)
	{
		return default(OvrAvatarDriver.PoseFrame);
	}

	[Token(Token = "0x60000E1")]
	[Address(RVA = "0xC3C158", Offset = "0xC3C158", VA = "0xC3C158")]
	public static OvrAvatarPacket Read(Stream stream)
	{
		return null;
	}

	[Token(Token = "0x60000E2")]
	[Address(RVA = "0xC3C434", Offset = "0xC3C434", VA = "0xC3C434")]
	public void Write(Stream stream)
	{
	}
}
[Token(Token = "0x200002C")]
internal static class BinaryWriterExtensions
{
	[Token(Token = "0x60000E3")]
	[Address(RVA = "0xB49868", Offset = "0xB49868", VA = "0xB49868")]
	public static void Write(this BinaryWriter writer, OvrAvatarDriver.PoseFrame frame)
	{
	}

	[Token(Token = "0x60000E4")]
	[Address(RVA = "0xB4997C", Offset = "0xB4997C", VA = "0xB4997C")]
	public static void Write(this BinaryWriter writer, Vector3 vec3)
	{
	}

	[Token(Token = "0x60000E5")]
	[Address(RVA = "0xB49B28", Offset = "0xB49B28", VA = "0xB49B28")]
	public static void Write(this BinaryWriter writer, Vector2 vec2)
	{
	}

	[Token(Token = "0x60000E6")]
	[Address(RVA = "0xB499EC", Offset = "0xB499EC", VA = "0xB499EC")]
	public static void Write(this BinaryWriter writer, Quaternion quat)
	{
	}

	[Token(Token = "0x60000E7")]
	[Address(RVA = "0xB49A80", Offset = "0xB49A80", VA = "0xB49A80")]
	public static void Write(this BinaryWriter writer, OvrAvatarDriver.ControllerPose pose)
	{
	}
}
[Token(Token = "0x200002D")]
internal static class BinaryReaderExtensions
{
	[Token(Token = "0x60000E8")]
	[Address(RVA = "0xB49468", Offset = "0xB49468", VA = "0xB49468")]
	public static OvrAvatarDriver.PoseFrame ReadPoseFrame(this BinaryReader reader)
	{
		return default(OvrAvatarDriver.PoseFrame);
	}

	[Token(Token = "0x60000E9")]
	[Address(RVA = "0xB4980C", Offset = "0xB4980C", VA = "0xB4980C")]
	public static Vector2 ReadVector2(this BinaryReader reader)
	{
		return default(Vector2);
	}

	[Token(Token = "0x60000EA")]
	[Address(RVA = "0xB49608", Offset = "0xB49608", VA = "0xB49608")]
	public static Vector3 ReadVector3(this BinaryReader reader)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60000EB")]
	[Address(RVA = "0xB49680", Offset = "0xB49680", VA = "0xB49680")]
	public static Quaternion ReadQuaternion(this BinaryReader reader)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60000EC")]
	[Address(RVA = "0xB4971C", Offset = "0xB4971C", VA = "0xB4971C")]
	public static OvrAvatarDriver.ControllerPose ReadControllerPose(this BinaryReader reader)
	{
		return default(OvrAvatarDriver.ControllerPose);
	}
}
[Token(Token = "0x200002E")]
public class OvrAvatarRemoteDriver : OvrAvatarDriver
{
	[Token(Token = "0x4000138")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Queue<OvrAvatarPacket> packetQueue;

	[Token(Token = "0x4000139")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private IntPtr CurrentSDKPacket;

	[Token(Token = "0x400013A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float CurrentPacketTime;

	[Token(Token = "0x400013B")]
	private const int MinPacketQueue = 1;

	[Token(Token = "0x400013C")]
	private const int MaxPacketQueue = 4;

	[Token(Token = "0x400013D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private int CurrentSequence;

	[Token(Token = "0x400013E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private bool isStreaming;

	[Token(Token = "0x400013F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private OvrAvatarPacket currentPacket;

	[Token(Token = "0x60000ED")]
	[Address(RVA = "0xC3C65C", Offset = "0xC3C65C", VA = "0xC3C65C")]
	public void QueuePacket(int sequence, OvrAvatarPacket packet)
	{
	}

	[Token(Token = "0x60000EE")]
	[Address(RVA = "0xC3C6E4", Offset = "0xC3C6E4", VA = "0xC3C6E4", Slot = "4")]
	public override void UpdateTransforms(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x60000EF")]
	[Address(RVA = "0xC3C700", Offset = "0xC3C700", VA = "0xC3C700")]
	private void UpdateFromSDKPacket(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x60000F0")]
	[Address(RVA = "0xC3C8A4", Offset = "0xC3C8A4", VA = "0xC3C8A4")]
	private void UpdateFromUnityPacket(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x60000F1")]
	[Address(RVA = "0xC3CA54", Offset = "0xC3CA54", VA = "0xC3CA54")]
	public OvrAvatarRemoteDriver()
	{
	}
}
[Token(Token = "0x200002F")]
public class OvrAvatarRenderComponent : MonoBehaviour
{
	[Token(Token = "0x4000140")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool firstSkinnedUpdate;

	[Token(Token = "0x4000141")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SkinnedMeshRenderer mesh;

	[Token(Token = "0x4000142")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform[] bones;

	[Token(Token = "0x4000143")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool isBodyComponent;

	[Token(Token = "0x60000F2")]
	[Address(RVA = "0xC3CAE8", Offset = "0xC3CAE8", VA = "0xC3CAE8")]
	protected void UpdateActive(OvrAvatar avatar, ovrAvatarVisibilityFlags mask)
	{
	}

	[Token(Token = "0x60000F3")]
	[Address(RVA = "0xC3CBCC", Offset = "0xC3CBCC", VA = "0xC3CBCC")]
	protected SkinnedMeshRenderer CreateSkinnedMesh(ulong assetID, ovrAvatarVisibilityFlags visibilityMask, int thirdPersonLayer, int firstPersonLayer)
	{
		return null;
	}

	[Token(Token = "0x60000F4")]
	[Address(RVA = "0xC3CDC4", Offset = "0xC3CDC4", VA = "0xC3CDC4")]
	protected void UpdateSkinnedMesh(OvrAvatar avatar, Transform[] bones, ovrAvatarTransform localTransform, ovrAvatarVisibilityFlags visibilityMask, IntPtr renderPart)
	{
	}

	[Token(Token = "0x60000F5")]
	[Address(RVA = "0xC3D184", Offset = "0xC3D184", VA = "0xC3D184")]
	protected Material CreateAvatarMaterial(string name, Shader shader)
	{
		return null;
	}

	[Token(Token = "0x60000F6")]
	[Address(RVA = "0xC3D290", Offset = "0xC3D290", VA = "0xC3D290")]
	public OvrAvatarRenderComponent()
	{
	}
}
[Token(Token = "0x2000030")]
[Flags]
public enum ovrAvatarCapabilities
{
	[Token(Token = "0x4000145")]
	Body = 1,
	[Token(Token = "0x4000146")]
	Hands = 2,
	[Token(Token = "0x4000147")]
	Base = 4,
	[Token(Token = "0x4000148")]
	BodyTilt = 0x10,
	[Token(Token = "0x4000149")]
	Expressive = 0x20,
	[Token(Token = "0x400014A")]
	All = -1
}
[Token(Token = "0x2000031")]
public enum ovrAvatarMessageType
{
	[Token(Token = "0x400014C")]
	AvatarSpecification,
	[Token(Token = "0x400014D")]
	AssetLoaded,
	[Token(Token = "0x400014E")]
	Count
}
[Token(Token = "0x2000032")]
public struct ovrAvatarMessage_AvatarSpecification
{
	[Token(Token = "0x400014F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public IntPtr avatarSpec;

	[Token(Token = "0x4000150")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ulong oculusUserID;
}
[Token(Token = "0x2000033")]
public struct ovrAvatarMessage_AssetLoaded
{
	[Token(Token = "0x4000151")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ulong assetID;

	[Token(Token = "0x4000152")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public IntPtr asset;
}
[Token(Token = "0x2000034")]
public enum ovrAvatarAssetType
{
	[Token(Token = "0x4000154")]
	Mesh,
	[Token(Token = "0x4000155")]
	Texture,
	[Token(Token = "0x4000156")]
	Pose,
	[Token(Token = "0x4000157")]
	Material,
	[Token(Token = "0x4000158")]
	CombinedMesh,
	[Token(Token = "0x4000159")]
	PBSMaterial,
	[Token(Token = "0x400015A")]
	FailedLoad,
	[Token(Token = "0x400015B")]
	Count
}
[Token(Token = "0x2000035")]
public struct ovrAvatarMeshVertex
{
	[Token(Token = "0x400015C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x400015D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x400015E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float z;

	[Token(Token = "0x400015F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float nx;

	[Token(Token = "0x4000160")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float ny;

	[Token(Token = "0x4000161")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float nz;

	[Token(Token = "0x4000162")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float tx;

	[Token(Token = "0x4000163")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ty;

	[Token(Token = "0x4000164")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float tz;

	[Token(Token = "0x4000165")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float tw;

	[Token(Token = "0x4000166")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float u;

	[Token(Token = "0x4000167")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float v;

	[Token(Token = "0x4000168")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public byte[] blendIndices;

	[Token(Token = "0x4000169")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float[] blendWeights;
}
[Token(Token = "0x2000036")]
public struct ovrAvatarMeshVertexV2
{
	[Token(Token = "0x400016A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x400016B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x400016C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float z;

	[Token(Token = "0x400016D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float nx;

	[Token(Token = "0x400016E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float ny;

	[Token(Token = "0x400016F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float nz;

	[Token(Token = "0x4000170")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float tx;

	[Token(Token = "0x4000171")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ty;

	[Token(Token = "0x4000172")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float tz;

	[Token(Token = "0x4000173")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float tw;

	[Token(Token = "0x4000174")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float u;

	[Token(Token = "0x4000175")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float v;

	[Token(Token = "0x4000176")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float r;

	[Token(Token = "0x4000177")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float g;

	[Token(Token = "0x4000178")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float b;

	[Token(Token = "0x4000179")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float a;

	[Token(Token = "0x400017A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public byte[] blendIndices;

	[Token(Token = "0x400017B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float[] blendWeights;
}
[Token(Token = "0x2000037")]
public struct ovrAvatarBlendVertex
{
	[Token(Token = "0x400017C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x400017D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x400017E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float z;

	[Token(Token = "0x400017F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float nx;

	[Token(Token = "0x4000180")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float ny;

	[Token(Token = "0x4000181")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float nz;

	[Token(Token = "0x4000182")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float tx;

	[Token(Token = "0x4000183")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ty;

	[Token(Token = "0x4000184")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float tz;
}
[Token(Token = "0x2000038")]
public struct ovrAvatarMeshAssetData
{
	[Token(Token = "0x4000185")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint vertexCount;

	[Token(Token = "0x4000186")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public IntPtr vertexBuffer;

	[Token(Token = "0x4000187")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public uint indexCount;

	[Token(Token = "0x4000188")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr indexBuffer;

	[Token(Token = "0x4000189")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ovrAvatarSkinnedMeshPose skinnedBindPose;
}
[Token(Token = "0x2000039")]
public struct ovrAvatarMeshAssetDataV2
{
	[Token(Token = "0x400018A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint vertexCount;

	[Token(Token = "0x400018B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public IntPtr vertexBuffer;

	[Token(Token = "0x400018C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public uint indexCount;

	[Token(Token = "0x400018D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr indexBuffer;

	[Token(Token = "0x400018E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ovrAvatarSkinnedMeshPose skinnedBindPose;
}
[Token(Token = "0x200003A")]
public enum ovrAvatarTextureFormat
{
	[Token(Token = "0x4000190")]
	RGB24,
	[Token(Token = "0x4000191")]
	DXT1,
	[Token(Token = "0x4000192")]
	DXT5,
	[Token(Token = "0x4000193")]
	ASTC_RGB_6x6,
	[Token(Token = "0x4000194")]
	ASTC_RGB_6x6_MIPMAPS,
	[Token(Token = "0x4000195")]
	Count
}
[Token(Token = "0x200003B")]
public struct ovrAvatarTextureAssetData
{
	[Token(Token = "0x4000196")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTextureFormat format;

	[Token(Token = "0x4000197")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public uint sizeX;

	[Token(Token = "0x4000198")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public uint sizeY;

	[Token(Token = "0x4000199")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public uint mipCount;

	[Token(Token = "0x400019A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong textureDataSize;

	[Token(Token = "0x400019B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr textureData;
}
[Token(Token = "0x200003C")]
public enum ovrAvatarRenderPartType
{
	[Token(Token = "0x400019D")]
	SkinnedMeshRender,
	[Token(Token = "0x400019E")]
	SkinnedMeshRenderPBS,
	[Token(Token = "0x400019F")]
	ProjectorRender,
	[Token(Token = "0x40001A0")]
	SkinnedMeshRenderPBS_V2,
	[Token(Token = "0x40001A1")]
	Count
}
[Token(Token = "0x200003D")]
public enum ovrAvatarLogLevel
{
	[Token(Token = "0x40001A3")]
	Unknown,
	[Token(Token = "0x40001A4")]
	Default,
	[Token(Token = "0x40001A5")]
	Verbose,
	[Token(Token = "0x40001A6")]
	Debug,
	[Token(Token = "0x40001A7")]
	Info,
	[Token(Token = "0x40001A8")]
	Warn,
	[Token(Token = "0x40001A9")]
	Error,
	[Token(Token = "0x40001AA")]
	Fatal,
	[Token(Token = "0x40001AB")]
	Silent
}
[Token(Token = "0x200003E")]
public struct ovrAvatarTransform
{
	[Token(Token = "0x40001AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 position;

	[Token(Token = "0x40001AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Quaternion orientation;

	[Token(Token = "0x40001AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 scale;
}
[Token(Token = "0x200003F")]
[Flags]
public enum ovrAvatarButton
{
	[Token(Token = "0x40001B0")]
	One = 1,
	[Token(Token = "0x40001B1")]
	Two = 2,
	[Token(Token = "0x40001B2")]
	Three = 4,
	[Token(Token = "0x40001B3")]
	Joystick = 8
}
[Token(Token = "0x2000040")]
[Flags]
public enum ovrAvatarTouch
{
	[Token(Token = "0x40001B5")]
	One = 1,
	[Token(Token = "0x40001B6")]
	Two = 2,
	[Token(Token = "0x40001B7")]
	Joystick = 4,
	[Token(Token = "0x40001B8")]
	ThumbRest = 8,
	[Token(Token = "0x40001B9")]
	Index = 0x10,
	[Token(Token = "0x40001BA")]
	Pointing = 0x40,
	[Token(Token = "0x40001BB")]
	ThumbUp = 0x80
}
[Token(Token = "0x2000041")]
public struct ovrAvatarHandInputState
{
	[Token(Token = "0x40001BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform transform;

	[Token(Token = "0x40001BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarButton buttonMask;

	[Token(Token = "0x40001BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public ovrAvatarTouch touchMask;

	[Token(Token = "0x40001BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float joystickX;

	[Token(Token = "0x40001C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float joystickY;

	[Token(Token = "0x40001C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float indexTrigger;

	[Token(Token = "0x40001C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float handTrigger;

	[Token(Token = "0x40001C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool isActive;
}
[Token(Token = "0x2000042")]
public struct ovrAvatarComponent
{
	[Token(Token = "0x40001C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform transform;

	[Token(Token = "0x40001C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public uint renderPartCount;

	[Token(Token = "0x40001C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public IntPtr renderParts;

	[Token(Token = "0x40001C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string name;
}
[Token(Token = "0x2000043")]
internal struct ovrAvatarComponent_Offsets
{
	[Token(Token = "0x40001C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long transform;

	[Token(Token = "0x40001C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int renderPartCount;

	[Token(Token = "0x40001CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static int renderParts;

	[Token(Token = "0x40001CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static int name;
}
[Token(Token = "0x2000044")]
public struct ovrAvatarBaseComponent
{
	[Token(Token = "0x40001CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 basePosition;

	[Token(Token = "0x40001CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public IntPtr renderComponent;
}
[Token(Token = "0x2000045")]
public struct ovrAvatarBodyComponent
{
	[Token(Token = "0x40001CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform leftEyeTransform;

	[Token(Token = "0x40001CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarTransform rightEyeTransform;

	[Token(Token = "0x40001D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ovrAvatarTransform centerEyeTransform;

	[Token(Token = "0x40001D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public IntPtr renderComponent;
}
[Token(Token = "0x2000046")]
public struct ovrAvatarBodyComponent_Offsets
{
	[Token(Token = "0x40001D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long leftEyeTransform;

	[Token(Token = "0x40001D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long rightEyeTransform;

	[Token(Token = "0x40001D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static long centerEyeTransform;

	[Token(Token = "0x40001D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static long renderComponent;
}
[Token(Token = "0x2000047")]
public struct ovrAvatarControllerComponent
{
	[Token(Token = "0x40001D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarHandInputState inputState;

	[Token(Token = "0x40001D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public IntPtr renderComponent;
}
[Token(Token = "0x2000048")]
public struct ovrAvatarHandComponent
{
	[Token(Token = "0x40001D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarHandInputState inputState;

	[Token(Token = "0x40001D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public IntPtr renderComponent;
}
[Token(Token = "0x2000049")]
public enum ovrAvatarMaterialLayerBlendMode
{
	[Token(Token = "0x40001DB")]
	Add,
	[Token(Token = "0x40001DC")]
	Multiply,
	[Token(Token = "0x40001DD")]
	Count
}
[Token(Token = "0x200004A")]
public enum ovrAvatarMaterialLayerSampleMode
{
	[Token(Token = "0x40001DF")]
	Color,
	[Token(Token = "0x40001E0")]
	Texture,
	[Token(Token = "0x40001E1")]
	TextureSingleChannel,
	[Token(Token = "0x40001E2")]
	Parallax,
	[Token(Token = "0x40001E3")]
	Count
}
[Token(Token = "0x200004B")]
public enum ovrAvatarMaterialMaskType
{
	[Token(Token = "0x40001E5")]
	None,
	[Token(Token = "0x40001E6")]
	Positional,
	[Token(Token = "0x40001E7")]
	ViewReflection,
	[Token(Token = "0x40001E8")]
	Fresnel,
	[Token(Token = "0x40001E9")]
	Pulse,
	[Token(Token = "0x40001EA")]
	Count
}
[Token(Token = "0x200004C")]
public enum ovrAvatarControllerType
{
	[Token(Token = "0x40001EC")]
	Touch,
	[Token(Token = "0x40001ED")]
	Malibu,
	[Token(Token = "0x40001EE")]
	Go,
	[Token(Token = "0x40001EF")]
	Quest,
	[Token(Token = "0x40001F0")]
	Count
}
[Token(Token = "0x200004D")]
public enum ovrAvatarAssetLevelOfDetail
{
	[Token(Token = "0x40001F2")]
	Lowest = 1,
	[Token(Token = "0x40001F3")]
	Medium = 3,
	[Token(Token = "0x40001F4")]
	Highest = 5
}
[Token(Token = "0x200004E")]
public enum ovrAvatarLookAndFeelVersion
{
	[Token(Token = "0x40001F6")]
	Unknown = -1,
	[Token(Token = "0x40001F7")]
	One,
	[Token(Token = "0x40001F8")]
	Two
}
[Token(Token = "0x200004F")]
public struct ovrAvatarMaterialLayerState
{
	[Token(Token = "0x40001F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarMaterialLayerBlendMode blendMode;

	[Token(Token = "0x40001FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public ovrAvatarMaterialLayerSampleMode sampleMode;

	[Token(Token = "0x40001FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarMaterialMaskType maskType;

	[Token(Token = "0x40001FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector4 layerColor;

	[Token(Token = "0x40001FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector4 sampleParameters;

	[Token(Token = "0x40001FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong sampleTexture;

	[Token(Token = "0x40001FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector4 sampleScaleOffset;

	[Token(Token = "0x4000200")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector4 maskParameters;

	[Token(Token = "0x4000201")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector4 maskAxis;

	[Token(Token = "0x60000F9")]
	[Address(RVA = "0xB0180C", Offset = "0xB0180C", VA = "0xB0180C")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x60000FA")]
	[Address(RVA = "0xB0183C", Offset = "0xB0183C", VA = "0xB0183C", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x60000FB")]
	[Address(RVA = "0xB01A58", Offset = "0xB01A58", VA = "0xB01A58", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x2000050")]
public struct ovrAvatarMaterialState
{
	[Token(Token = "0x4000202")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector4 baseColor;

	[Token(Token = "0x4000203")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ovrAvatarMaterialMaskType baseMaskType;

	[Token(Token = "0x4000204")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Vector4 baseMaskParameters;

	[Token(Token = "0x4000205")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector4 baseMaskAxis;

	[Token(Token = "0x4000206")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public ovrAvatarMaterialLayerSampleMode sampleMode;

	[Token(Token = "0x4000207")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ulong alphaMaskTextureID;

	[Token(Token = "0x4000208")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector4 alphaMaskScaleOffset;

	[Token(Token = "0x4000209")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ulong normalMapTextureID;

	[Token(Token = "0x400020A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector4 normalMapScaleOffset;

	[Token(Token = "0x400020B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public ulong parallaxMapTextureID;

	[Token(Token = "0x400020C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Vector4 parallaxMapScaleOffset;

	[Token(Token = "0x400020D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public ulong roughnessMapTextureID;

	[Token(Token = "0x400020E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Vector4 roughnessMapScaleOffset;

	[Token(Token = "0x400020F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public uint layerCount;

	[Token(Token = "0x4000210")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public ovrAvatarMaterialLayerState[] layers;

	[Token(Token = "0x60000FC")]
	[Address(RVA = "0xB01B3C", Offset = "0xB01B3C", VA = "0xB01B3C")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x60000FD")]
	[Address(RVA = "0xB01B6C", Offset = "0xB01B6C", VA = "0xB01B6C", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x60000FE")]
	[Address(RVA = "0xB01F08", Offset = "0xB01F08", VA = "0xB01F08", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x2000051")]
public struct ovrAvatarExpressiveParameters
{
	[Token(Token = "0x4000211")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector4 irisColor;

	[Token(Token = "0x4000212")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Vector4 scleraColor;

	[Token(Token = "0x4000213")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector4 lashColor;

	[Token(Token = "0x4000214")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector4 browColor;

	[Token(Token = "0x4000215")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector4 lipColor;

	[Token(Token = "0x4000216")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Vector4 teethColor;

	[Token(Token = "0x4000217")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Vector4 gumColor;

	[Token(Token = "0x4000218")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float browLashIntensity;

	[Token(Token = "0x4000219")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float lipSmoothness;

	[Token(Token = "0x60000FF")]
	[Address(RVA = "0xB00D9C", Offset = "0xB00D9C", VA = "0xB00D9C")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x6000100")]
	[Address(RVA = "0xB00DCC", Offset = "0xB00DCC", VA = "0xB00DCC", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x6000101")]
	[Address(RVA = "0xB0105C", Offset = "0xB0105C", VA = "0xB0105C", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x2000052")]
public struct ovrAvatarPBSMaterialState
{
	[Token(Token = "0x400021A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector4 baseColor;

	[Token(Token = "0x400021B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong albedoTextureID;

	[Token(Token = "0x400021C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector4 albedoMultiplier;

	[Token(Token = "0x400021D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ulong metallicnessTextureID;

	[Token(Token = "0x400021E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float glossinessScale;

	[Token(Token = "0x400021F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ulong normalTextureID;

	[Token(Token = "0x4000220")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ulong heightTextureID;

	[Token(Token = "0x4000221")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ulong occlusionTextureID;

	[Token(Token = "0x4000222")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ulong emissionTextureID;

	[Token(Token = "0x4000223")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector4 emissionMultiplier;

	[Token(Token = "0x4000224")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public ulong detailMaskTextureID;

	[Token(Token = "0x4000225")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ulong detailAlbedoTextureID;

	[Token(Token = "0x4000226")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public ulong detailNormalTextureID;

	[Token(Token = "0x6000102")]
	[Address(RVA = "0xB02070", Offset = "0xB02070", VA = "0xB02070")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x6000103")]
	[Address(RVA = "0xB020A0", Offset = "0xB020A0", VA = "0xB020A0", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x6000104")]
	[Address(RVA = "0xB02290", Offset = "0xB02290", VA = "0xB02290", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x2000053")]
public class OvrAvatarAssetMaterial : OvrAvatarAsset
{
	[Token(Token = "0x4000227")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ovrAvatarMaterialState material;

	[Token(Token = "0x6000105")]
	[Address(RVA = "0xBA1D54", Offset = "0xBA1D54", VA = "0xBA1D54")]
	public OvrAvatarAssetMaterial(ulong id, IntPtr mat)
	{
	}
}
[Token(Token = "0x2000054")]
public struct ovrAvatarSkinnedMeshPose
{
	[Token(Token = "0x4000228")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint jointCount;

	[Token(Token = "0x4000229")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarTransform[] jointTransform;

	[Token(Token = "0x400022A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int[] jointParents;

	[Token(Token = "0x400022B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr[] jointNames;
}
[Token(Token = "0x2000055")]
[Flags]
public enum ovrAvatarVisibilityFlags
{
	[Token(Token = "0x400022D")]
	FirstPerson = 1,
	[Token(Token = "0x400022E")]
	ThirdPerson = 2,
	[Token(Token = "0x400022F")]
	SelfOccluding = 4
}
[Token(Token = "0x2000056")]
public struct ovrAvatarRenderPart_SkinnedMeshRender
{
	[Token(Token = "0x4000230")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x4000231")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarVisibilityFlags visibilityMask;

	[Token(Token = "0x4000232")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong meshAssetID;

	[Token(Token = "0x4000233")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ovrAvatarMaterialState materialState;

	[Token(Token = "0x4000234")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public ovrAvatarSkinnedMeshPose skinnedPose;
}
[Token(Token = "0x2000057")]
public struct ovrAvatarRenderPart_SkinnedMeshRenderPBS
{
	[Token(Token = "0x4000235")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x4000236")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarVisibilityFlags visibilityMask;

	[Token(Token = "0x4000237")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong meshAssetID;

	[Token(Token = "0x4000238")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ulong albedoTextureAssetID;

	[Token(Token = "0x4000239")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ulong surfaceTextureAssetID;

	[Token(Token = "0x400023A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ovrAvatarSkinnedMeshPose skinnedPose;
}
[Token(Token = "0x2000058")]
public struct ovrAvatarRenderPart_ProjectorRender
{
	[Token(Token = "0x400023B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x400023C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public uint componentIndex;

	[Token(Token = "0x400023D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public uint renderPartIndex;

	[Token(Token = "0x400023E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ovrAvatarMaterialState materialState;
}
[Token(Token = "0x2000059")]
public struct ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2
{
	[Token(Token = "0x400023F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x4000240")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarVisibilityFlags visibilityMask;

	[Token(Token = "0x4000241")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong meshAssetID;

	[Token(Token = "0x4000242")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ovrAvatarPBSMaterialState materialState;

	[Token(Token = "0x4000243")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public ovrAvatarSkinnedMeshPose skinnedPose;
}
[Token(Token = "0x200005A")]
public enum ovrAvatarHandGesture
{
	[Token(Token = "0x4000245")]
	Default,
	[Token(Token = "0x4000246")]
	GripSphere,
	[Token(Token = "0x4000247")]
	GripCube,
	[Token(Token = "0x4000248")]
	Count
}
[Token(Token = "0x200005B")]
public enum ovrAvatarBodyPartType
{
	[Token(Token = "0x400024A")]
	Body,
	[Token(Token = "0x400024B")]
	Clothing,
	[Token(Token = "0x400024C")]
	Eyewear,
	[Token(Token = "0x400024D")]
	Hair,
	[Token(Token = "0x400024E")]
	Beard,
	[Token(Token = "0x400024F")]
	Count
}
[Token(Token = "0x200005C")]
public struct ovrAvatarBlendShapeParams
{
	[Token(Token = "0x4000250")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint blendShapeParamCount;

	[Token(Token = "0x4000251")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float[] blendShapeParams;
}
[Token(Token = "0x200005D")]
internal struct ovrAvatarBlendShapeParams_Offsets
{
	[Token(Token = "0x4000252")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int blendShapeParamCount;

	[Token(Token = "0x4000253")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long blendShapeParams;
}
[Token(Token = "0x200005E")]
public struct ovrAvatarVisemes
{
	[Token(Token = "0x4000254")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint visemeParamCount;

	[Token(Token = "0x4000255")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float[] visemeParams;
}
[Token(Token = "0x200005F")]
internal struct ovrAvatarVisemes_Offsets
{
	[Token(Token = "0x4000256")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int visemeParamCount;

	[Token(Token = "0x4000257")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long visemeParams;
}
[Token(Token = "0x2000060")]
public enum ovrAvatarGazeTargetType
{
	[Token(Token = "0x4000259")]
	AvatarHead,
	[Token(Token = "0x400025A")]
	AvatarHand,
	[Token(Token = "0x400025B")]
	Object,
	[Token(Token = "0x400025C")]
	ObjectStatic,
	[Token(Token = "0x400025D")]
	Count
}
[Token(Token = "0x2000061")]
public struct ovrAvatarGazeTarget
{
	[Token(Token = "0x400025E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint id;

	[Token(Token = "0x400025F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public Vector3 worldPosition;

	[Token(Token = "0x4000260")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ovrAvatarGazeTargetType type;
}
[Token(Token = "0x2000062")]
internal struct ovrAvatarGazeTarget_Offsets
{
	[Token(Token = "0x4000261")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int id;

	[Token(Token = "0x4000262")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static int worldPosition;

	[Token(Token = "0x4000263")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int type;
}
[Token(Token = "0x2000063")]
public struct ovrAvatarGazeTargets
{
	[Token(Token = "0x4000264")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint targetCount;

	[Token(Token = "0x4000265")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarGazeTarget[] targets;
}
[Token(Token = "0x2000064")]
internal struct ovrAvatarGazeTargets_Offsets
{
	[Token(Token = "0x4000266")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int targetCount;

	[Token(Token = "0x4000267")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long targets;
}
[Token(Token = "0x2000065")]
public enum ovrAvatarLightType
{
	[Token(Token = "0x4000269")]
	Point,
	[Token(Token = "0x400026A")]
	Direction,
	[Token(Token = "0x400026B")]
	Spot,
	[Token(Token = "0x400026C")]
	Count
}
[Token(Token = "0x2000066")]
public struct ovrAvatarLight
{
	[Token(Token = "0x400026D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint id;

	[Token(Token = "0x400026E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public ovrAvatarLightType type;

	[Token(Token = "0x400026F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float intensity;

	[Token(Token = "0x4000270")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector3 worldDirection;

	[Token(Token = "0x4000271")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 worldPosition;

	[Token(Token = "0x4000272")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float range;

	[Token(Token = "0x4000273")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float spotAngleDeg;
}
[Token(Token = "0x2000067")]
internal struct ovrAvatarLight_Offsets
{
	[Token(Token = "0x4000274")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long id;

	[Token(Token = "0x4000275")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long type;

	[Token(Token = "0x4000276")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static long intensity;

	[Token(Token = "0x4000277")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static long worldDirection;

	[Token(Token = "0x4000278")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static long worldPosition;

	[Token(Token = "0x4000279")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static long range;

	[Token(Token = "0x400027A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static long spotAngleDeg;
}
[Token(Token = "0x2000068")]
public struct ovrAvatarLights
{
	[Token(Token = "0x400027B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float ambientIntensity;

	[Token(Token = "0x400027C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public uint lightCount;

	[Token(Token = "0x400027D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarLight[] lights;
}
[Token(Token = "0x2000069")]
internal struct ovrAvatarLights_Offsets
{
	[Token(Token = "0x400027E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long ambientIntensity;

	[Token(Token = "0x400027F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long lightCount;

	[Token(Token = "0x4000280")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static long lights;
}
[Token(Token = "0x200006A")]
[Flags]
public enum ovrAvatarDebugContext : uint
{
	[Token(Token = "0x4000282")]
	None = 0u,
	[Token(Token = "0x4000283")]
	GazeTarget = 1u,
	[Token(Token = "0x4000284")]
	Any = uint.MaxValue
}
[Token(Token = "0x200006B")]
public struct ovrAvatarDebugLine
{
	[Token(Token = "0x4000285")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 startPoint;

	[Token(Token = "0x4000286")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector3 endPoint;

	[Token(Token = "0x4000287")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 color;

	[Token(Token = "0x4000288")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public ovrAvatarDebugContext context;

	[Token(Token = "0x4000289")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public IntPtr text;
}
[Token(Token = "0x200006C")]
public struct ovrAvatarDebugTransform
{
	[Token(Token = "0x400028A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform transform;

	[Token(Token = "0x400028B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarDebugContext context;

	[Token(Token = "0x400028C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public IntPtr text;
}
[Token(Token = "0x200006D")]
public delegate void specificationCallback(IntPtr specification);
[Token(Token = "0x200006E")]
public delegate void assetLoadedCallback(OvrAvatarAsset asset);
[Token(Token = "0x200006F")]
public delegate void combinedMeshLoadedCallback(IntPtr asset);
[Token(Token = "0x2000070")]
public class OvrAvatarSDKManager : MonoBehaviour
{
	[Token(Token = "0x2000071")]
	public struct AvatarSpecRequestParams
	{
		[Token(Token = "0x400029A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong _userId;

		[Token(Token = "0x400029B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public specificationCallback _callback;

		[Token(Token = "0x400029C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool _useCombinedMesh;

		[Token(Token = "0x400029D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public ovrAvatarAssetLevelOfDetail _lod;

		[Token(Token = "0x400029E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool _forceMobileTextureFormat;

		[Token(Token = "0x400029F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public ovrAvatarLookAndFeelVersion _lookVersion;

		[Token(Token = "0x40002A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ovrAvatarLookAndFeelVersion _fallbackVersion;

		[Token(Token = "0x40002A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool _enableExpressive;

		[Token(Token = "0x6000129")]
		[Address(RVA = "0xB2F9B4", Offset = "0xB2F9B4", VA = "0xB2F9B4")]
		public AvatarSpecRequestParams(ulong userId, specificationCallback callback, bool useCombinedMesh, ovrAvatarAssetLevelOfDetail lod, bool forceMobileTextureFormat, ovrAvatarLookAndFeelVersion lookVersion, ovrAvatarLookAndFeelVersion fallbackVersion, bool enableExpressive)
		{
		}
	}

	[Token(Token = "0x400028D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static OvrAvatarSDKManager _instance;

	[Token(Token = "0x400028E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool initialized;

	[Token(Token = "0x400028F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<ulong, HashSet<specificationCallback>> specificationCallbacks;

	[Token(Token = "0x4000290")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<ulong, HashSet<assetLoadedCallback>> assetLoadedCallbacks;

	[Token(Token = "0x4000291")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Dictionary<IntPtr, combinedMeshLoadedCallback> combinedMeshLoadedCallbacks;

	[Token(Token = "0x4000292")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Dictionary<ulong, OvrAvatarAsset> assetCache;

	[Token(Token = "0x4000293")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private OvrAvatarTextureCopyManager textureCopyManager;

	[Token(Token = "0x4000294")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ovrAvatarLogLevel LoggingLevel;

	[Token(Token = "0x4000295")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Queue<AvatarSpecRequestParams> avatarSpecificationQueue;

	[Token(Token = "0x4000296")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<int> loadingAvatars;

	[Token(Token = "0x4000297")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool avatarSpecRequestAvailable;

	[Token(Token = "0x4000298")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float lastDispatchedAvatarSpecRequestTime;

	[Token(Token = "0x4000299")]
	private const float AVATAR_SPEC_REQUEST_TIMEOUT = 5f;

	[Token(Token = "0x1700000B")]
	public static OvrAvatarSDKManager Instance
	{
		[Token(Token = "0x6000118")]
		[Address(RVA = "0xC36FA4", Offset = "0xC36FA4", VA = "0xC36FA4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000119")]
	[Address(RVA = "0xC3D2A0", Offset = "0xC3D2A0", VA = "0xC3D2A0")]
	private bool Initialize()
	{
		return default(bool);
	}

	[Token(Token = "0x600011A")]
	[Address(RVA = "0xC3D5A8", Offset = "0xC3D5A8", VA = "0xC3D5A8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600011B")]
	[Address(RVA = "0xC3D618", Offset = "0xC3D618", VA = "0xC3D618")]
	private void Update()
	{
	}

	[Token(Token = "0x600011C")]
	[Address(RVA = "0xC3DFF4", Offset = "0xC3DFF4", VA = "0xC3DFF4")]
	public bool IsAvatarSpecWaiting()
	{
		return default(bool);
	}

	[Token(Token = "0x600011D")]
	[Address(RVA = "0xC3E048", Offset = "0xC3E048", VA = "0xC3E048")]
	public bool IsAvatarLoading()
	{
		return default(bool);
	}

	[Token(Token = "0x600011E")]
	[Address(RVA = "0xC3E09C", Offset = "0xC3E09C", VA = "0xC3E09C")]
	public void AddLoadingAvatar(int gameobjectID)
	{
	}

	[Token(Token = "0x600011F")]
	[Address(RVA = "0xC3E100", Offset = "0xC3E100", VA = "0xC3E100")]
	public void RemoveLoadingAvatar(int gameobjectID)
	{
	}

	[Token(Token = "0x6000120")]
	[Address(RVA = "0xC3E164", Offset = "0xC3E164", VA = "0xC3E164")]
	public void RequestAvatarSpecification(AvatarSpecRequestParams avatarSpecRequest)
	{
	}

	[Token(Token = "0x6000121")]
	[Address(RVA = "0xC3DDF4", Offset = "0xC3DDF4", VA = "0xC3DDF4")]
	private void DispatchAvatarSpecificationRequest(AvatarSpecRequestParams avatarSpecRequest)
	{
	}

	[Token(Token = "0x6000122")]
	[Address(RVA = "0xC3E240", Offset = "0xC3E240", VA = "0xC3E240")]
	public void BeginLoadingAsset(ulong assetId, ovrAvatarAssetLevelOfDetail lod, assetLoadedCallback callback)
	{
	}

	[Token(Token = "0x6000123")]
	[Address(RVA = "0xC3E394", Offset = "0xC3E394", VA = "0xC3E394")]
	public void RegisterCombinedMeshCallback(IntPtr sdkAvatar, combinedMeshLoadedCallback callback)
	{
	}

	[Token(Token = "0x6000124")]
	[Address(RVA = "0xC37178", Offset = "0xC37178", VA = "0xC37178")]
	public OvrAvatarAsset GetAsset(ulong assetId)
	{
		return null;
	}

	[Token(Token = "0x6000125")]
	[Address(RVA = "0xC3E488", Offset = "0xC3E488", VA = "0xC3E488")]
	public void DeleteAssetFromCache(ulong assetId)
	{
	}

	[Token(Token = "0x6000126")]
	[Address(RVA = "0xC3D55C", Offset = "0xC3D55C", VA = "0xC3D55C")]
	public string GetAppId()
	{
		return null;
	}

	[Token(Token = "0x6000127")]
	[Address(RVA = "0xC39BC4", Offset = "0xC39BC4", VA = "0xC39BC4")]
	public OvrAvatarTextureCopyManager GetTextureCopyManager()
	{
		return null;
	}

	[Token(Token = "0x6000128")]
	[Address(RVA = "0xC3E568", Offset = "0xC3E568", VA = "0xC3E568")]
	public OvrAvatarSDKManager()
	{
	}
}
[Token(Token = "0x2000072")]
public sealed class OvrAvatarSettings : ScriptableObject
{
	[Token(Token = "0x40002A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static OvrAvatarSettings instance;

	[Token(Token = "0x40002A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private string ovrAppID;

	[Token(Token = "0x40002A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private string ovrGearAppID;

	[Token(Token = "0x1700000C")]
	public static string AppID
	{
		[Token(Token = "0x600012A")]
		[Address(RVA = "0xC3E528", Offset = "0xC3E528", VA = "0xC3E528")]
		get
		{
			return null;
		}
		[Token(Token = "0x600012B")]
		[Address(RVA = "0xC3E6C0", Offset = "0xC3E6C0", VA = "0xC3E6C0")]
		set
		{
		}
	}

	[Token(Token = "0x1700000D")]
	public static string MobileAppID
	{
		[Token(Token = "0x600012C")]
		[Address(RVA = "0xC3E548", Offset = "0xC3E548", VA = "0xC3E548")]
		get
		{
			return null;
		}
		[Token(Token = "0x600012D")]
		[Address(RVA = "0xC3E6EC", Offset = "0xC3E6EC", VA = "0xC3E6EC")]
		set
		{
		}
	}

	[Token(Token = "0x1700000E")]
	public static OvrAvatarSettings Instance
	{
		[Token(Token = "0x600012E")]
		[Address(RVA = "0xC3E580", Offset = "0xC3E580", VA = "0xC3E580")]
		get
		{
			return null;
		}
		[Token(Token = "0x600012F")]
		[Address(RVA = "0xC3E718", Offset = "0xC3E718", VA = "0xC3E718")]
		set
		{
		}
	}

	[Token(Token = "0x6000130")]
	[Address(RVA = "0xC3E768", Offset = "0xC3E768", VA = "0xC3E768")]
	public OvrAvatarSettings()
	{
	}
}
[Token(Token = "0x2000073")]
public class OvrAvatarSkinnedMeshRenderComponent : OvrAvatarRenderComponent
{
	[Token(Token = "0x40002A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Shader surface;

	[Token(Token = "0x40002A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Shader surfaceSelfOccluding;

	[Token(Token = "0x40002A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool previouslyActive;

	[Token(Token = "0x6000131")]
	[Address(RVA = "0xC3FF8C", Offset = "0xC3FF8C", VA = "0xC3FF8C")]
	internal void Initialize(ovrAvatarRenderPart_SkinnedMeshRender skinnedMeshRender, Shader surface, Shader surfaceSelfOccluding, int thirdPersonLayer, int firstPersonLayer)
	{
	}

	[Token(Token = "0x6000132")]
	[Address(RVA = "0xC360B8", Offset = "0xC360B8", VA = "0xC360B8")]
	public void UpdateSkinnedMeshRender(OvrAvatarComponent component, OvrAvatar avatar, IntPtr renderPart)
	{
	}

	[Token(Token = "0x6000133")]
	[Address(RVA = "0xC400E4", Offset = "0xC400E4", VA = "0xC400E4")]
	private void UpdateMeshMaterial(ovrAvatarVisibilityFlags visibilityMask, SkinnedMeshRenderer rootMesh)
	{
	}

	[Token(Token = "0x6000134")]
	[Address(RVA = "0xC4024C", Offset = "0xC4024C", VA = "0xC4024C")]
	public OvrAvatarSkinnedMeshRenderComponent()
	{
	}
}
[Token(Token = "0x2000074")]
public class OvrAvatarSkinnedMeshRenderPBSComponent : OvrAvatarRenderComponent
{
	[Token(Token = "0x40002A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private bool isMaterialInitilized;

	[Token(Token = "0x6000135")]
	[Address(RVA = "0xC4025C", Offset = "0xC4025C", VA = "0xC4025C")]
	internal void Initialize(ovrAvatarRenderPart_SkinnedMeshRenderPBS skinnedMeshRenderPBS, Shader shader, int thirdPersonLayer, int firstPersonLayer)
	{
	}

	[Token(Token = "0x6000136")]
	[Address(RVA = "0xC362F4", Offset = "0xC362F4", VA = "0xC362F4")]
	internal void UpdateSkinnedMeshRenderPBS(OvrAvatar avatar, IntPtr renderPart, Material mat)
	{
	}

	[Token(Token = "0x6000137")]
	[Address(RVA = "0xC403A0", Offset = "0xC403A0", VA = "0xC403A0")]
	public OvrAvatarSkinnedMeshRenderPBSComponent()
	{
	}
}
[Token(Token = "0x2000075")]
public class OvrAvatarSkinnedMeshPBSV2RenderComponent : OvrAvatarRenderComponent
{
	[Token(Token = "0x40002A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private OvrAvatarMaterialManager avatarMaterialManager;

	[Token(Token = "0x40002AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool previouslyActive;

	[Token(Token = "0x40002AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	private bool isCombinedMaterial;

	[Token(Token = "0x40002AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private ovrAvatarExpressiveParameters ExpressiveParameters;

	[Token(Token = "0x40002AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private bool EnableExpressive;

	[Token(Token = "0x40002AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private int blendShapeCount;

	[Token(Token = "0x40002AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private ovrAvatarBlendShapeParams blendShapeParams;

	[Token(Token = "0x40002B0")]
	private const string MAIN_MATERIAL_NAME = "main_material";

	[Token(Token = "0x40002B1")]
	private const string EYE_MATERIAL_NAME = "eye_material";

	[Token(Token = "0x40002B2")]
	private const string DEFAULT_MATERIAL_NAME = "_material";

	[Token(Token = "0x6000138")]
	[Address(RVA = "0xC3E7BC", Offset = "0xC3E7BC", VA = "0xC3E7BC")]
	internal void Initialize(IntPtr renderPart, ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2 skinnedMeshRender, OvrAvatarMaterialManager materialManager, int thirdPersonLayer, int firstPersonLayer, bool combinedMesh, ovrAvatarAssetLevelOfDetail lod, bool assignExpressiveParams, OvrAvatar avatar, bool isControllerModel)
	{
	}

	[Token(Token = "0x6000139")]
	[Address(RVA = "0xC364C4", Offset = "0xC364C4", VA = "0xC364C4")]
	public void UpdateSkinnedMeshRender(OvrAvatarComponent component, OvrAvatar avatar, IntPtr renderPart)
	{
	}

	[Token(Token = "0x600013A")]
	[Address(RVA = "0xC3F710", Offset = "0xC3F710", VA = "0xC3F710")]
	private void InitializeSingleComponentMaterial(IntPtr renderPart, int lodIndex)
	{
	}

	[Token(Token = "0x600013B")]
	[Address(RVA = "0xC3EE84", Offset = "0xC3EE84", VA = "0xC3EE84")]
	private void InitializeCombinedMaterial(IntPtr renderPart, int lodIndex)
	{
	}

	[Token(Token = "0x600013C")]
	[Address(RVA = "0xC3EBA8", Offset = "0xC3EBA8", VA = "0xC3EBA8")]
	private void SetMaterialTransparent(Material mat)
	{
	}

	[Token(Token = "0x600013D")]
	[Address(RVA = "0xC3ED0C", Offset = "0xC3ED0C", VA = "0xC3ED0C")]
	private void SetMaterialOpaque(Material mat)
	{
	}

	[Token(Token = "0x600013E")]
	[Address(RVA = "0xC3FF7C", Offset = "0xC3FF7C", VA = "0xC3FF7C")]
	public OvrAvatarSkinnedMeshPBSV2RenderComponent()
	{
	}
}
[Token(Token = "0x2000076")]
public class OvrAvatarTextureCopyManager : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000077")]
	public struct FallbackTextureSet
	{
		[Token(Token = "0x40002C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool Initialized;

		[Token(Token = "0x40002C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Texture2D DiffuseRoughness;

		[Token(Token = "0x40002C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Texture2D Normal;
	}

	[Token(Token = "0x2000078")]
	private struct CopyTextureParams
	{
		[Token(Token = "0x40002C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Texture Src;

		[Token(Token = "0x40002C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Texture Dst;

		[Token(Token = "0x40002C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int Mip;

		[Token(Token = "0x40002C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int SrcSize;

		[Token(Token = "0x40002C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int DstElement;

		[Token(Token = "0x6000149")]
		[Address(RVA = "0xB30048", Offset = "0xB30048", VA = "0xB30048")]
		public CopyTextureParams(Texture src, Texture dst, int mip, int srcSize, int dstElement)
		{
		}
	}

	[Token(Token = "0x2000079")]
	public struct TextureSet
	{
		[Token(Token = "0x40002C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Dictionary<ulong, bool> TextureIDSingleMeshPair;

		[Token(Token = "0x40002CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool IsProcessed;

		[Token(Token = "0x600014A")]
		[Address(RVA = "0xB30058", Offset = "0xB30058", VA = "0xB30058")]
		public TextureSet(Dictionary<ulong, bool> textureIDSingleMeshPair, bool isProcessed)
		{
		}
	}

	[Token(Token = "0x200007A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76F69C", Offset = "0x76F69C")]
	private sealed class <DeleteTextureSetCoroutine>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40002CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40002CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40002CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextureSet textureSetToDelete;

		[Token(Token = "0x40002CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public OvrAvatarTextureCopyManager <>4__this;

		[Token(Token = "0x40002CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int gameobjectID;

		[Token(Token = "0x1700000F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600014E")]
			[Address(RVA = "0xB2FFF8", Offset = "0xB2FFF8", VA = "0xB2FFF8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000010")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000150")]
			[Address(RVA = "0xB30040", Offset = "0xB30040", VA = "0xB30040", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600014B")]
		[Address(RVA = "0xB2F9E0", Offset = "0xB2F9E0", VA = "0xB2F9E0")]
		[DebuggerHidden]
		public <DeleteTextureSetCoroutine>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x600014C")]
		[Address(RVA = "0xB2FA0C", Offset = "0xB2FA0C", VA = "0xB2FA0C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600014D")]
		[Address(RVA = "0xB2FA10", Offset = "0xB2FA10", VA = "0xB2FA10", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600014F")]
		[Address(RVA = "0xB30000", Offset = "0xB30000", VA = "0xB30000", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40002B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FallbackTextureSet[] FallbackTextureSets;

	[Token(Token = "0x40002B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Queue<CopyTextureParams> texturesToCopy;

	[Token(Token = "0x40002B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<int, TextureSet> textureSets;

	[Token(Token = "0x40002B6")]
	private const int TEXTURES_TO_COPY_QUEUE_CAPACITY = 256;

	[Token(Token = "0x40002B7")]
	private const int COPIES_PER_FRAME = 8;

	[Token(Token = "0x40002B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly string[] FALLBACK_TEXTURE_PATHS_DIFFUSE_ROUGHNESS;

	[Token(Token = "0x40002B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly string[] FALLBACK_TEXTURE_PATHS_NORMAL;

	[Token(Token = "0x40002BA")]
	private const string PATH_HIGHEST_DIFFUSE_ROUGHNESS = "FallbackTextures/fallback_diffuse_roughness_2048";

	[Token(Token = "0x40002BB")]
	private const string PATH_MEDIUM_DIFFUSE_ROUGHNESS = "FallbackTextures/fallback_diffuse_roughness_1024";

	[Token(Token = "0x40002BC")]
	private const string PATH_LOWEST_DIFFUSE_ROUGHNESS = "FallbackTextures/fallback_diffuse_roughness_256";

	[Token(Token = "0x40002BD")]
	private const string PATH_HIGHEST_NORMAL = "FallbackTextures/fallback_normal_2048";

	[Token(Token = "0x40002BE")]
	private const string PATH_MEDIUM_NORMAL = "FallbackTextures/fallback_normal_1024";

	[Token(Token = "0x40002BF")]
	private const string PATH_LOWEST_NORMAL = "FallbackTextures/fallback_normal_256";

	[Token(Token = "0x40002C0")]
	private const int GPU_TEXTURE_COPY_WAIT_TIME = 10;

	[Token(Token = "0x600013F")]
	[Address(RVA = "0xC40ACC", Offset = "0xC40ACC", VA = "0xC40ACC")]
	public OvrAvatarTextureCopyManager()
	{
	}

	[Token(Token = "0x6000140")]
	[Address(RVA = "0xC40EB4", Offset = "0xC40EB4", VA = "0xC40EB4")]
	public void Update()
	{
	}

	[Token(Token = "0x6000141")]
	[Address(RVA = "0xC410B4", Offset = "0xC410B4", VA = "0xC410B4")]
	public int GetTextureCount()
	{
		return default(int);
	}

	[Token(Token = "0x6000142")]
	[Address(RVA = "0xC3A01C", Offset = "0xC3A01C", VA = "0xC3A01C")]
	public void CopyTexture(Texture src, Texture dst, int mipLevel, int mipSize, int dstElement, bool useQueue = true)
	{
	}

	[Token(Token = "0x6000143")]
	[Address(RVA = "0xC41028", Offset = "0xC41028", VA = "0xC41028")]
	private void CopyTexture(CopyTextureParams copyTextureParams)
	{
	}

	[Token(Token = "0x6000144")]
	[Address(RVA = "0xC39C44", Offset = "0xC39C44", VA = "0xC39C44")]
	public void AddTextureIDToTextureSet(int gameobjectID, ulong textureID, bool isSingleMesh)
	{
	}

	[Token(Token = "0x6000145")]
	[Address(RVA = "0xC39E94", Offset = "0xC39E94", VA = "0xC39E94")]
	public void DeleteTextureSet(int gameobjectID)
	{
	}

	[Token(Token = "0x6000146")]
	[Address(RVA = "0xC41100", Offset = "0xC41100", VA = "0xC41100")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7740E0", Offset = "0x7740E0")]
	private IEnumerator DeleteTextureSetCoroutine(TextureSet textureSetToDelete, int gameobjectID)
	{
		return null;
	}

	[Token(Token = "0x6000147")]
	[Address(RVA = "0xC3E1F4", Offset = "0xC3E1F4", VA = "0xC3E1F4")]
	public void CheckFallbackTextureSet(ovrAvatarAssetLevelOfDetail lod)
	{
	}

	[Token(Token = "0x6000148")]
	[Address(RVA = "0xC41190", Offset = "0xC41190", VA = "0xC41190")]
	private void InitFallbackTextureSet(ovrAvatarAssetLevelOfDetail lod)
	{
	}
}
[Token(Token = "0x200007B")]
public class OvrAvatarTouchController : OvrAvatarComponent
{
	[Token(Token = "0x40002D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool isLeftHand;

	[Token(Token = "0x40002D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ovrAvatarControllerComponent component;

	[Token(Token = "0x6000151")]
	[Address(RVA = "0xC412C8", Offset = "0xC412C8", VA = "0xC412C8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000152")]
	[Address(RVA = "0xC4142C", Offset = "0xC4142C", VA = "0xC4142C")]
	public OvrAvatarTouchController()
	{
	}
}
[Token(Token = "0x200007C")]
public class DebugUIBuilder : MonoBehaviour
{
	[Token(Token = "0x200007D")]
	public delegate void OnClick();

	[Token(Token = "0x200007E")]
	public delegate void OnToggleValueChange(Toggle t);

	[Token(Token = "0x200007F")]
	public delegate void OnSlider(float f);

	[Token(Token = "0x2000080")]
	public delegate bool ActiveUpdate();

	[Token(Token = "0x2000081")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76F6AC", Offset = "0x76F6AC")]
	private sealed class <>c__DisplayClass36_0
	{
		[Token(Token = "0x40002ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnClick handler;

		[Token(Token = "0x6000172")]
		[Address(RVA = "0xB29270", Offset = "0xB29270", VA = "0xB29270")]
		public <>c__DisplayClass36_0()
		{
		}

		[Token(Token = "0x6000173")]
		[Address(RVA = "0xB29278", Offset = "0xB29278", VA = "0xB29278")]
		internal void <AddButton>b__0()
		{
		}
	}

	[Token(Token = "0x2000082")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76F6BC", Offset = "0x76F6BC")]
	private sealed class <>c__DisplayClass38_0
	{
		[Token(Token = "0x40002EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnSlider onValueChanged;

		[Token(Token = "0x6000174")]
		[Address(RVA = "0xB2949C", Offset = "0xB2949C", VA = "0xB2949C")]
		public <>c__DisplayClass38_0()
		{
		}

		[Token(Token = "0x6000175")]
		[Address(RVA = "0xB294A4", Offset = "0xB294A4", VA = "0xB294A4")]
		internal void <AddSlider>b__0(float f)
		{
		}
	}

	[Token(Token = "0x2000083")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76F6CC", Offset = "0x76F6CC")]
	private sealed class <>c__DisplayClass40_0
	{
		[Token(Token = "0x40002EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange onValueChanged;

		[Token(Token = "0x40002F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle t;

		[Token(Token = "0x6000176")]
		[Address(RVA = "0xB296F0", Offset = "0xB296F0", VA = "0xB296F0")]
		public <>c__DisplayClass40_0()
		{
		}

		[Token(Token = "0x6000177")]
		[Address(RVA = "0xB296F8", Offset = "0xB296F8", VA = "0xB296F8")]
		internal void <AddToggle>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x2000084")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76F6DC", Offset = "0x76F6DC")]
	private sealed class <>c__DisplayClass41_0
	{
		[Token(Token = "0x40002F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange onValueChanged;

		[Token(Token = "0x40002F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle t;

		[Token(Token = "0x6000178")]
		[Address(RVA = "0xB29A8C", Offset = "0xB29A8C", VA = "0xB29A8C")]
		public <>c__DisplayClass41_0()
		{
		}

		[Token(Token = "0x6000179")]
		[Address(RVA = "0xB29A94", Offset = "0xB29A94", VA = "0xB29A94")]
		internal void <AddToggle>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x2000085")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76F6EC", Offset = "0x76F6EC")]
	private sealed class <>c__DisplayClass42_0
	{
		[Token(Token = "0x40002F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange handler;

		[Token(Token = "0x40002F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle tb;

		[Token(Token = "0x600017A")]
		[Address(RVA = "0xB29AB4", Offset = "0xB29AB4", VA = "0xB29AB4")]
		public <>c__DisplayClass42_0()
		{
		}

		[Token(Token = "0x600017B")]
		[Address(RVA = "0xB29ABC", Offset = "0xB29ABC", VA = "0xB29ABC")]
		internal void <AddRadio>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x40002D2")]
	public const int DEBUG_PANE_CENTER = 0;

	[Token(Token = "0x40002D3")]
	public const int DEBUG_PANE_RIGHT = 1;

	[Token(Token = "0x40002D4")]
	public const int DEBUG_PANE_LEFT = 2;

	[Token(Token = "0x40002D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private RectTransform buttonPrefab;

	[Token(Token = "0x40002D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private RectTransform labelPrefab;

	[Token(Token = "0x40002D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private RectTransform sliderPrefab;

	[Token(Token = "0x40002D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private RectTransform dividerPrefab;

	[Token(Token = "0x40002D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private RectTransform togglePrefab;

	[Token(Token = "0x40002DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private RectTransform radioPrefab;

	[Token(Token = "0x40002DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private RectTransform textPrefab;

	[Token(Token = "0x40002DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private GameObject uiHelpersToInstantiate;

	[Token(Token = "0x40002DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Transform[] targetContentPanels;

	[Token(Token = "0x40002DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool[] reEnable;

	[Token(Token = "0x40002DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private List<GameObject> toEnable;

	[Token(Token = "0x40002E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private List<GameObject> toDisable;

	[Token(Token = "0x40002E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static DebugUIBuilder instance;

	[Token(Token = "0x40002E2")]
	private const float elementSpacing = 16f;

	[Token(Token = "0x40002E3")]
	private const float marginH = 16f;

	[Token(Token = "0x40002E4")]
	private const float marginV = 16f;

	[Token(Token = "0x40002E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Vector2[] insertPositions;

	[Token(Token = "0x40002E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private List<RectTransform>[] insertedElements;

	[Token(Token = "0x40002E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Vector3 menuOffset;

	[Token(Token = "0x40002E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private OVRCameraRig rig;

	[Token(Token = "0x40002E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Dictionary<string, ToggleGroup> radioGroups;

	[Token(Token = "0x40002EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private LaserPointer lp;

	[Token(Token = "0x40002EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private LineRenderer lr;

	[Token(Token = "0x40002EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public LaserPointer.LaserBeamBehavior laserBeamBehavior;

	[Token(Token = "0x6000153")]
	[Address(RVA = "0x11ECCC8", Offset = "0x11ECCC8", VA = "0x11ECCC8")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000154")]
	[Address(RVA = "0x11ED17C", Offset = "0x11ED17C", VA = "0x11ED17C")]
	public void Show()
	{
	}

	[Token(Token = "0x6000155")]
	[Address(RVA = "0x11ED740", Offset = "0x11ED740", VA = "0x11ED740")]
	public void Hide()
	{
	}

	[Token(Token = "0x6000156")]
	[Address(RVA = "0x11ED520", Offset = "0x11ED520", VA = "0x11ED520")]
	private void Relayout()
	{
	}

	[Token(Token = "0x6000157")]
	[Address(RVA = "0x11ED8FC", Offset = "0x11ED8FC", VA = "0x11ED8FC")]
	private void AddRect(RectTransform r, int targetCanvas)
	{
	}

	[Token(Token = "0x6000158")]
	[Address(RVA = "0x11EDBD4", Offset = "0x11EDBD4", VA = "0x11EDBD4")]
	public RectTransform AddButton(string label, OnClick handler, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000159")]
	[Address(RVA = "0x11EDE64", Offset = "0x11EDE64", VA = "0x11EDE64")]
	public RectTransform AddLabel(string label, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x600015A")]
	[Address(RVA = "0x11EDF68", Offset = "0x11EDF68", VA = "0x11EDF68")]
	public RectTransform AddSlider(string label, float min, float max, OnSlider onValueChanged, bool wholeNumbersOnly = false, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x600015B")]
	[Address(RVA = "0x11EE140", Offset = "0x11EE140", VA = "0x11EE140")]
	public RectTransform AddDivider(int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x600015C")]
	[Address(RVA = "0x11EE1E4", Offset = "0x11EE1E4", VA = "0x11EE1E4")]
	public RectTransform AddToggle(string label, OnToggleValueChange onValueChanged, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x600015D")]
	[Address(RVA = "0x11EE3B4", Offset = "0x11EE3B4", VA = "0x11EE3B4")]
	public RectTransform AddToggle(string label, OnToggleValueChange onValueChanged, bool defaultValue, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x600015E")]
	[Address(RVA = "0x11EE59C", Offset = "0x11EE59C", VA = "0x11EE59C")]
	public RectTransform AddRadio(string label, string group, OnToggleValueChange handler, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x600015F")]
	[Address(RVA = "0x11EE884", Offset = "0x11EE884", VA = "0x11EE884")]
	public RectTransform AddTextField(string label, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000160")]
	[Address(RVA = "0x11EE980", Offset = "0x11EE980", VA = "0x11EE980")]
	public void ToggleLaserPointer(bool isOn)
	{
	}

	[Token(Token = "0x6000161")]
	[Address(RVA = "0x11EEA2C", Offset = "0x11EEA2C", VA = "0x11EEA2C")]
	public DebugUIBuilder()
	{
	}
}
[Token(Token = "0x2000086")]
public class HandedInputSelector : MonoBehaviour
{
	[Token(Token = "0x40002F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRCameraRig m_CameraRig;

	[Token(Token = "0x40002F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private OVRInputModule m_InputModule;

	[Token(Token = "0x600017C")]
	[Address(RVA = "0xC75C18", Offset = "0xC75C18", VA = "0xC75C18")]
	private void Start()
	{
	}

	[Token(Token = "0x600017D")]
	[Address(RVA = "0xC75CB4", Offset = "0xC75CB4", VA = "0xC75CB4")]
	private void Update()
	{
	}

	[Token(Token = "0x600017E")]
	[Address(RVA = "0xC75D74", Offset = "0xC75D74", VA = "0xC75D74")]
	private void SetActiveController(OVRInput.Controller c)
	{
	}

	[Token(Token = "0x600017F")]
	[Address(RVA = "0xC75DB0", Offset = "0xC75DB0", VA = "0xC75DB0")]
	public HandedInputSelector()
	{
	}
}
[Token(Token = "0x2000087")]
public class LaserPointer : OVRCursor
{
	[Token(Token = "0x2000088")]
	public enum LaserBeamBehavior
	{
		[Token(Token = "0x4000301")]
		On,
		[Token(Token = "0x4000302")]
		Off,
		[Token(Token = "0x4000303")]
		OnWhenHitTarget
	}

	[Token(Token = "0x40002F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject cursorVisual;

	[Token(Token = "0x40002F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float maxLength;

	[Token(Token = "0x40002F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private LaserBeamBehavior _laserBeamBehavior;

	[Token(Token = "0x40002FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool m_restoreOnInputAcquired;

	[Token(Token = "0x40002FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 _startPoint;

	[Token(Token = "0x40002FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 _forward;

	[Token(Token = "0x40002FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 _endPoint;

	[Token(Token = "0x40002FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool _hitTarget;

	[Token(Token = "0x40002FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private LineRenderer lineRenderer;

	[Token(Token = "0x17000011")]
	public LaserBeamBehavior laserBeamBehavior
	{
		[Token(Token = "0x6000181")]
		[Address(RVA = "0xBCB418", Offset = "0xBCB418", VA = "0xBCB418")]
		get
		{
			return default(LaserBeamBehavior);
		}
		[Token(Token = "0x6000180")]
		[Address(RVA = "0xBCB3D4", Offset = "0xBCB3D4", VA = "0xBCB3D4")]
		set
		{
		}
	}

	[Token(Token = "0x6000182")]
	[Address(RVA = "0xBCB420", Offset = "0xBCB420", VA = "0xBCB420")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000183")]
	[Address(RVA = "0xBCB474", Offset = "0xBCB474", VA = "0xBCB474")]
	private void Start()
	{
	}

	[Token(Token = "0x6000184")]
	[Address(RVA = "0xBCB5B8", Offset = "0xBCB5B8", VA = "0xBCB5B8", Slot = "5")]
	public override void SetCursorStartDest(Vector3 start, Vector3 dest, Vector3 normal)
	{
	}

	[Token(Token = "0x6000185")]
	[Address(RVA = "0xBCB5D4", Offset = "0xBCB5D4", VA = "0xBCB5D4", Slot = "4")]
	public override void SetCursorRay(Transform t)
	{
	}

	[Token(Token = "0x6000186")]
	[Address(RVA = "0xBCB628", Offset = "0xBCB628", VA = "0xBCB628")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000187")]
	[Address(RVA = "0xBCB7E4", Offset = "0xBCB7E4", VA = "0xBCB7E4")]
	private void UpdateLaserBeam(Vector3 start, Vector3 end)
	{
	}

	[Token(Token = "0x6000188")]
	[Address(RVA = "0xBCB8F8", Offset = "0xBCB8F8", VA = "0xBCB8F8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000189")]
	[Address(RVA = "0xBCB988", Offset = "0xBCB988", VA = "0xBCB988")]
	public void OnInputFocusLost()
	{
	}

	[Token(Token = "0x600018A")]
	[Address(RVA = "0xBCBA54", Offset = "0xBCBA54", VA = "0xBCBA54")]
	public void OnInputFocusAcquired()
	{
	}

	[Token(Token = "0x600018B")]
	[Address(RVA = "0xBCBB08", Offset = "0xBCBB08", VA = "0xBCBB08")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600018C")]
	[Address(RVA = "0xBCBBF4", Offset = "0xBCBBF4", VA = "0xBCBBF4")]
	public LaserPointer()
	{
	}
}
[Token(Token = "0x2000089")]
public class CharacterCameraConstraint : MonoBehaviour
{
	[Token(Token = "0x4000304")]
	private const float FADE_RAY_LENGTH = 0.25f;

	[Token(Token = "0x4000305")]
	private const float FADE_OVERLAP_MAXIMUM = 0.1f;

	[Token(Token = "0x4000306")]
	private const float FADE_AMOUNT_MAXIMUM = 1f;

	[Token(Token = "0x4000307")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x770EDC", Offset = "0x770EDC")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x4000308")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x770F14", Offset = "0x770F14")]
	public LayerMask CollideLayers;

	[Token(Token = "0x4000309")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x770F4C", Offset = "0x770F4C")]
	public float HeightOffset;

	[Token(Token = "0x400030A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x770F84", Offset = "0x770F84")]
	public float MinimumHeight;

	[Token(Token = "0x400030B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x770FBC", Offset = "0x770FBC")]
	public float MaximumHeight;

	[Token(Token = "0x400030C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private CapsuleCollider _character;

	[Token(Token = "0x400030D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private SimpleCapsuleWithStickMovement _simplePlayerController;

	[Token(Token = "0x600018D")]
	[Address(RVA = "0x11E22D0", Offset = "0x11E22D0", VA = "0x11E22D0")]
	private CharacterCameraConstraint()
	{
	}

	[Token(Token = "0x600018E")]
	[Address(RVA = "0x11E22D8", Offset = "0x11E22D8", VA = "0x11E22D8")]
	private void Awake()
	{
	}

	[Token(Token = "0x600018F")]
	[Address(RVA = "0x11E2350", Offset = "0x11E2350", VA = "0x11E2350")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000190")]
	[Address(RVA = "0x11E23E4", Offset = "0x11E23E4", VA = "0x11E23E4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000191")]
	[Address(RVA = "0x11E2478", Offset = "0x11E2478", VA = "0x11E2478")]
	private void CameraUpdate()
	{
	}

	[Token(Token = "0x6000192")]
	[Address(RVA = "0x11E27A4", Offset = "0x11E27A4", VA = "0x11E27A4")]
	private bool CheckCameraOverlapped()
	{
		return default(bool);
	}

	[Token(Token = "0x6000193")]
	[Address(RVA = "0x11E29D4", Offset = "0x11E29D4", VA = "0x11E29D4")]
	private bool CheckCameraNearClipping(out float result)
	{
		return default(bool);
	}
}
[Token(Token = "0x200008A")]
public class LocomotionController : MonoBehaviour
{
	[Token(Token = "0x400030E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x400030F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CapsuleCollider CharacterController;

	[Token(Token = "0x4000310")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SimpleCapsuleWithStickMovement PlayerController;

	[Token(Token = "0x6000194")]
	[Address(RVA = "0xBD6044", Offset = "0xBD6044", VA = "0xBD6044")]
	private void Start()
	{
	}

	[Token(Token = "0x6000195")]
	[Address(RVA = "0xBD60F8", Offset = "0xBD60F8", VA = "0xBD60F8")]
	public LocomotionController()
	{
	}
}
[Token(Token = "0x200008B")]
public class LocomotionTeleport : MonoBehaviour
{
	[Token(Token = "0x200008C")]
	public enum States
	{
		[Token(Token = "0x4000334")]
		Ready,
		[Token(Token = "0x4000335")]
		Aim,
		[Token(Token = "0x4000336")]
		CancelAim,
		[Token(Token = "0x4000337")]
		PreTeleport,
		[Token(Token = "0x4000338")]
		CancelTeleport,
		[Token(Token = "0x4000339")]
		Teleporting,
		[Token(Token = "0x400033A")]
		PostTeleport
	}

	[Token(Token = "0x200008D")]
	public enum TeleportIntentions
	{
		[Token(Token = "0x400033C")]
		None,
		[Token(Token = "0x400033D")]
		Aim,
		[Token(Token = "0x400033E")]
		PreTeleport,
		[Token(Token = "0x400033F")]
		Teleport
	}

	[Token(Token = "0x200008E")]
	public enum AimCollisionTypes
	{
		[Token(Token = "0x4000341")]
		Point,
		[Token(Token = "0x4000342")]
		Sphere,
		[Token(Token = "0x4000343")]
		Capsule
	}

	[Token(Token = "0x200008F")]
	public class AimData
	{
		[Token(Token = "0x4000344")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public RaycastHit TargetHitInfo;

		[Token(Token = "0x4000345")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool TargetValid;

		[Token(Token = "0x4000346")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector3? Destination;

		[Token(Token = "0x4000347")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float Radius;

		[Token(Token = "0x4000348")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7713D4", Offset = "0x7713D4")]
		private List<Vector3> <Points>k__BackingField;

		[Token(Token = "0x17000015")]
		public List<Vector3> Points
		{
			[Token(Token = "0x60001CB")]
			[Address(RVA = "0xB2D434", Offset = "0xB2D434", VA = "0xB2D434")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x774608", Offset = "0x774608")]
			get
			{
				return null;
			}
			[Token(Token = "0x60001CC")]
			[Address(RVA = "0xB2D43C", Offset = "0xB2D43C", VA = "0xB2D43C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x774618", Offset = "0x774618")]
			private set
			{
			}
		}

		[Token(Token = "0x60001CA")]
		[Address(RVA = "0xB2D3B8", Offset = "0xB2D3B8", VA = "0xB2D3B8")]
		public AimData()
		{
		}

		[Token(Token = "0x60001CD")]
		[Address(RVA = "0xB2D444", Offset = "0xB2D444", VA = "0xB2D444")]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x2000090")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76F6FC", Offset = "0x76F6FC")]
	private sealed class <ReadyStateCoroutine>d__52 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000349")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400034A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400034B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000016")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60001D1")]
			[Address(RVA = "0xB2D210", Offset = "0xB2D210", VA = "0xB2D210", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000017")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60001D3")]
			[Address(RVA = "0xB2D258", Offset = "0xB2D258", VA = "0xB2D258", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60001CE")]
		[Address(RVA = "0xB2D0F4", Offset = "0xB2D0F4", VA = "0xB2D0F4")]
		[DebuggerHidden]
		public <ReadyStateCoroutine>d__52(int <>1__state)
		{
		}

		[Token(Token = "0x60001CF")]
		[Address(RVA = "0xB2D120", Offset = "0xB2D120", VA = "0xB2D120", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60001D0")]
		[Address(RVA = "0xB2D124", Offset = "0xB2D124", VA = "0xB2D124", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60001D2")]
		[Address(RVA = "0xB2D218", Offset = "0xB2D218", VA = "0xB2D218", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000091")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76F70C", Offset = "0x76F70C")]
	private sealed class <AimStateCoroutine>d__64 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400034C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400034D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400034E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000018")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60001D7")]
			[Address(RVA = "0xB2CB9C", Offset = "0xB2CB9C", VA = "0xB2CB9C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000019")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60001D9")]
			[Address(RVA = "0xB2CBE4", Offset = "0xB2CBE4", VA = "0xB2CBE4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60001D4")]
		[Address(RVA = "0xB2CA2C", Offset = "0xB2CA2C", VA = "0xB2CA2C")]
		[DebuggerHidden]
		public <AimStateCoroutine>d__64(int <>1__state)
		{
		}

		[Token(Token = "0x60001D5")]
		[Address(RVA = "0xB2CA58", Offset = "0xB2CA58", VA = "0xB2CA58", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60001D6")]
		[Address(RVA = "0xB2CA5C", Offset = "0xB2CA5C", VA = "0xB2CA5C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60001D8")]
		[Address(RVA = "0xB2CBA4", Offset = "0xB2CBA4", VA = "0xB2CBA4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000092")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76F71C", Offset = "0x76F71C")]
	private sealed class <CancelAimStateCoroutine>d__68 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400034F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000350")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000351")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x1700001A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60001DD")]
			[Address(RVA = "0xB2CCBC", Offset = "0xB2CCBC", VA = "0xB2CCBC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700001B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60001DF")]
			[Address(RVA = "0xB2CD04", Offset = "0xB2CD04", VA = "0xB2CD04", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60001DA")]
		[Address(RVA = "0xB2CBEC", Offset = "0xB2CBEC", VA = "0xB2CBEC")]
		[DebuggerHidden]
		public <CancelAimStateCoroutine>d__68(int <>1__state)
		{
		}

		[Token(Token = "0x60001DB")]
		[Address(RVA = "0xB2CC18", Offset = "0xB2CC18", VA = "0xB2CC18", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60001DC")]
		[Address(RVA = "0xB2CC1C", Offset = "0xB2CC1C", VA = "0xB2CC1C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60001DE")]
		[Address(RVA = "0xB2CCC4", Offset = "0xB2CCC4", VA = "0xB2CCC4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000093")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76F72C", Offset = "0x76F72C")]
	private sealed class <PreTeleportStateCoroutine>d__72 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000352")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000353")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000354")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x1700001C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60001E3")]
			[Address(RVA = "0xB2D0A4", Offset = "0xB2D0A4", VA = "0xB2D0A4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700001D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60001E5")]
			[Address(RVA = "0xB2D0EC", Offset = "0xB2D0EC", VA = "0xB2D0EC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60001E0")]
		[Address(RVA = "0xB2CF94", Offset = "0xB2CF94", VA = "0xB2CF94")]
		[DebuggerHidden]
		public <PreTeleportStateCoroutine>d__72(int <>1__state)
		{
		}

		[Token(Token = "0x60001E1")]
		[Address(RVA = "0xB2CFC0", Offset = "0xB2CFC0", VA = "0xB2CFC0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60001E2")]
		[Address(RVA = "0xB2CFC4", Offset = "0xB2CFC4", VA = "0xB2CFC4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60001E4")]
		[Address(RVA = "0xB2D0AC", Offset = "0xB2D0AC", VA = "0xB2D0AC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000094")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76F73C", Offset = "0x76F73C")]
	private sealed class <CancelTeleportStateCoroutine>d__76 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000355")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000356")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000357")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x1700001E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60001E9")]
			[Address(RVA = "0xB2CDDC", Offset = "0xB2CDDC", VA = "0xB2CDDC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700001F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60001EB")]
			[Address(RVA = "0xB2CE24", Offset = "0xB2CE24", VA = "0xB2CE24", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60001E6")]
		[Address(RVA = "0xB2CD0C", Offset = "0xB2CD0C", VA = "0xB2CD0C")]
		[DebuggerHidden]
		public <CancelTeleportStateCoroutine>d__76(int <>1__state)
		{
		}

		[Token(Token = "0x60001E7")]
		[Address(RVA = "0xB2CD38", Offset = "0xB2CD38", VA = "0xB2CD38", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60001E8")]
		[Address(RVA = "0xB2CD3C", Offset = "0xB2CD3C", VA = "0xB2CD3C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60001EA")]
		[Address(RVA = "0xB2CDE4", Offset = "0xB2CDE4", VA = "0xB2CDE4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000095")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76F74C", Offset = "0x76F74C")]
	private sealed class <TeleportingStateCoroutine>d__80 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000358")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000359")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400035A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000020")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60001EF")]
			[Address(RVA = "0xB2D368", Offset = "0xB2D368", VA = "0xB2D368", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000021")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60001F1")]
			[Address(RVA = "0xB2D3B0", Offset = "0xB2D3B0", VA = "0xB2D3B0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60001EC")]
		[Address(RVA = "0xB2D260", Offset = "0xB2D260", VA = "0xB2D260")]
		[DebuggerHidden]
		public <TeleportingStateCoroutine>d__80(int <>1__state)
		{
		}

		[Token(Token = "0x60001ED")]
		[Address(RVA = "0xB2D28C", Offset = "0xB2D28C", VA = "0xB2D28C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60001EE")]
		[Address(RVA = "0xB2D290", Offset = "0xB2D290", VA = "0xB2D290", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60001F0")]
		[Address(RVA = "0xB2D370", Offset = "0xB2D370", VA = "0xB2D370", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000096")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76F75C", Offset = "0x76F75C")]
	private sealed class <PostTeleportStateCoroutine>d__84 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400035B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400035C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400035D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000022")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60001F5")]
			[Address(RVA = "0xB2CF44", Offset = "0xB2CF44", VA = "0xB2CF44", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000023")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60001F7")]
			[Address(RVA = "0xB2CF8C", Offset = "0xB2CF8C", VA = "0xB2CF8C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60001F2")]
		[Address(RVA = "0xB2CE2C", Offset = "0xB2CE2C", VA = "0xB2CE2C")]
		[DebuggerHidden]
		public <PostTeleportStateCoroutine>d__84(int <>1__state)
		{
		}

		[Token(Token = "0x60001F3")]
		[Address(RVA = "0xB2CE58", Offset = "0xB2CE58", VA = "0xB2CE58", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60001F4")]
		[Address(RVA = "0xB2CE5C", Offset = "0xB2CE5C", VA = "0xB2CE5C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60001F6")]
		[Address(RVA = "0xB2CF4C", Offset = "0xB2CF4C", VA = "0xB2CF4C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000311")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x770FF4", Offset = "0x770FF4")]
	public bool EnableMovementDuringReady;

	[Token(Token = "0x4000312")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x77102C", Offset = "0x77102C")]
	public bool EnableMovementDuringAim;

	[Token(Token = "0x4000313")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x771064", Offset = "0x771064")]
	public bool EnableMovementDuringPreTeleport;

	[Token(Token = "0x4000314")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x77109C", Offset = "0x77109C")]
	public bool EnableMovementDuringPostTeleport;

	[Token(Token = "0x4000315")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7710D4", Offset = "0x7710D4")]
	public bool EnableRotationDuringReady;

	[Token(Token = "0x4000316")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x77110C", Offset = "0x77110C")]
	public bool EnableRotationDuringAim;

	[Token(Token = "0x4000317")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x771144", Offset = "0x771144")]
	public bool EnableRotationDuringPreTeleport;

	[Token(Token = "0x4000318")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x77117C", Offset = "0x77117C")]
	public bool EnableRotationDuringPostTeleport;

	[Token(Token = "0x4000319")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7711B4", Offset = "0x7711B4")]
	private States <CurrentState>k__BackingField;

	[NonSerialized]
	[Token(Token = "0x400031A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TeleportAimHandler AimHandler;

	[Token(Token = "0x400031B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7711C4", Offset = "0x7711C4")]
	public TeleportDestination TeleportDestinationPrefab;

	[Token(Token = "0x400031C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7711FC", Offset = "0x7711FC")]
	public int TeleportDestinationLayer;

	[NonSerialized]
	[Token(Token = "0x400031E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TeleportInputHandler InputHandler;

	[NonSerialized]
	[Token(Token = "0x400031F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TeleportIntentions CurrentIntention;

	[NonSerialized]
	[Token(Token = "0x4000320")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public bool IsPreTeleportRequested;

	[NonSerialized]
	[Token(Token = "0x4000321")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
	public bool IsTransitioning;

	[NonSerialized]
	[Token(Token = "0x4000322")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x56")]
	public bool IsPostTeleportRequested;

	[Token(Token = "0x4000323")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private TeleportDestination _teleportDestination;

	[Token(Token = "0x4000324")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x771244", Offset = "0x771244")]
	private LocomotionController <LocomotionController>k__BackingField;

	[Token(Token = "0x4000325")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x771254", Offset = "0x771254")]
	public AimCollisionTypes AimCollisionType;

	[Token(Token = "0x4000326")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x77128C", Offset = "0x77128C")]
	public bool UseCharacterCollisionData;

	[Token(Token = "0x4000327")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7712C4", Offset = "0x7712C4")]
	public float AimCollisionRadius;

	[Token(Token = "0x4000328")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7712FC", Offset = "0x7712FC")]
	public float AimCollisionHeight;

	[Token(Token = "0x17000012")]
	public States CurrentState
	{
		[Token(Token = "0x6000198")]
		[Address(RVA = "0xE47B78", Offset = "0xE47B78", VA = "0xE47B78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x774190", Offset = "0x774190")]
		get
		{
			return default(States);
		}
		[Token(Token = "0x6000199")]
		[Address(RVA = "0xE47B80", Offset = "0xE47B80", VA = "0xE47B80")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7741A0", Offset = "0x7741A0")]
		private set
		{
		}
	}

	[Token(Token = "0x17000013")]
	public Quaternion DestinationRotation
	{
		[Token(Token = "0x600019D")]
		[Address(RVA = "0xE47DA4", Offset = "0xE47DA4", VA = "0xE47DA4")]
		get
		{
			return default(Quaternion);
		}
	}

	[Token(Token = "0x17000014")]
	public LocomotionController LocomotionController
	{
		[Token(Token = "0x600019E")]
		[Address(RVA = "0xE47DCC", Offset = "0xE47DCC", VA = "0xE47DCC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7741D0", Offset = "0x7741D0")]
		get
		{
			return null;
		}
		[Token(Token = "0x600019F")]
		[Address(RVA = "0xE47DD4", Offset = "0xE47DD4", VA = "0xE47DD4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7741E0", Offset = "0x7741E0")]
		private set
		{
		}
	}

	[Token(Token = "0x14000001")]
	public event Action<bool, Vector3?, Quaternion?, Quaternion?> UpdateTeleportDestination
	{
		[Token(Token = "0x600019A")]
		[Address(RVA = "0xE47B88", Offset = "0xE47B88", VA = "0xE47B88")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7741B0", Offset = "0x7741B0")]
		add
		{
		}
		[Token(Token = "0x600019B")]
		[Address(RVA = "0xE47C28", Offset = "0xE47C28", VA = "0xE47C28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7741C0", Offset = "0x7741C0")]
		remove
		{
		}
	}

	[Token(Token = "0x14000002")]
	public event Action EnterStateReady
	{
		[Token(Token = "0x60001A9")]
		[Address(RVA = "0xE483CC", Offset = "0xE483CC", VA = "0xE483CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x774228", Offset = "0x774228")]
		add
		{
		}
		[Token(Token = "0x60001AA")]
		[Address(RVA = "0xE4846C", Offset = "0xE4846C", VA = "0xE4846C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x774238", Offset = "0x774238")]
		remove
		{
		}
	}

	[Token(Token = "0x14000003")]
	public event Action EnterStateAim
	{
		[Token(Token = "0x60001AC")]
		[Address(RVA = "0xE4850C", Offset = "0xE4850C", VA = "0xE4850C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7742A8", Offset = "0x7742A8")]
		add
		{
		}
		[Token(Token = "0x60001AD")]
		[Address(RVA = "0xE485AC", Offset = "0xE485AC", VA = "0xE485AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7742B8", Offset = "0x7742B8")]
		remove
		{
		}
	}

	[Token(Token = "0x14000004")]
	public event Action<AimData> UpdateAimData
	{
		[Token(Token = "0x60001AE")]
		[Address(RVA = "0xE4864C", Offset = "0xE4864C", VA = "0xE4864C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7742C8", Offset = "0x7742C8")]
		add
		{
		}
		[Token(Token = "0x60001AF")]
		[Address(RVA = "0xE486EC", Offset = "0xE486EC", VA = "0xE486EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7742D8", Offset = "0x7742D8")]
		remove
		{
		}
	}

	[Token(Token = "0x14000005")]
	public event Action ExitStateAim
	{
		[Token(Token = "0x60001B1")]
		[Address(RVA = "0xE487FC", Offset = "0xE487FC", VA = "0xE487FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7742E8", Offset = "0x7742E8")]
		add
		{
		}
		[Token(Token = "0x60001B2")]
		[Address(RVA = "0xE4889C", Offset = "0xE4889C", VA = "0xE4889C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7742F8", Offset = "0x7742F8")]
		remove
		{
		}
	}

	[Token(Token = "0x14000006")]
	public event Action EnterStateCancelAim
	{
		[Token(Token = "0x60001B4")]
		[Address(RVA = "0xE489A8", Offset = "0xE489A8", VA = "0xE489A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x774368", Offset = "0x774368")]
		add
		{
		}
		[Token(Token = "0x60001B5")]
		[Address(RVA = "0xE48A48", Offset = "0xE48A48", VA = "0xE48A48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x774378", Offset = "0x774378")]
		remove
		{
		}
	}

	[Token(Token = "0x14000007")]
	public event Action EnterStatePreTeleport
	{
		[Token(Token = "0x60001B7")]
		[Address(RVA = "0xE48B54", Offset = "0xE48B54", VA = "0xE48B54")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7743E8", Offset = "0x7743E8")]
		add
		{
		}
		[Token(Token = "0x60001B8")]
		[Address(RVA = "0xE48BF4", Offset = "0xE48BF4", VA = "0xE48BF4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7743F8", Offset = "0x7743F8")]
		remove
		{
		}
	}

	[Token(Token = "0x14000008")]
	public event Action EnterStateCancelTeleport
	{
		[Token(Token = "0x60001BA")]
		[Address(RVA = "0xE48D00", Offset = "0xE48D00", VA = "0xE48D00")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x774468", Offset = "0x774468")]
		add
		{
		}
		[Token(Token = "0x60001BB")]
		[Address(RVA = "0xE48DA0", Offset = "0xE48DA0", VA = "0xE48DA0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x774478", Offset = "0x774478")]
		remove
		{
		}
	}

	[Token(Token = "0x14000009")]
	public event Action EnterStateTeleporting
	{
		[Token(Token = "0x60001BD")]
		[Address(RVA = "0xE48EAC", Offset = "0xE48EAC", VA = "0xE48EAC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7744E8", Offset = "0x7744E8")]
		add
		{
		}
		[Token(Token = "0x60001BE")]
		[Address(RVA = "0xE48F4C", Offset = "0xE48F4C", VA = "0xE48F4C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7744F8", Offset = "0x7744F8")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000A")]
	public event Action EnterStatePostTeleport
	{
		[Token(Token = "0x60001C0")]
		[Address(RVA = "0xE49058", Offset = "0xE49058", VA = "0xE49058")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x774568", Offset = "0x774568")]
		add
		{
		}
		[Token(Token = "0x60001C1")]
		[Address(RVA = "0xE490F8", Offset = "0xE490F8", VA = "0xE490F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x774578", Offset = "0x774578")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000B")]
	public event Action<Transform, Vector3, Quaternion> Teleported
	{
		[Token(Token = "0x60001C3")]
		[Address(RVA = "0xE49204", Offset = "0xE49204", VA = "0xE49204")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7745E8", Offset = "0x7745E8")]
		add
		{
		}
		[Token(Token = "0x60001C4")]
		[Address(RVA = "0xE492A4", Offset = "0xE492A4", VA = "0xE492A4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7745F8", Offset = "0x7745F8")]
		remove
		{
		}
	}

	[Token(Token = "0x6000196")]
	[Address(RVA = "0xE47B30", Offset = "0xE47B30", VA = "0xE47B30")]
	public void EnableMovement(bool ready, bool aim, bool pre, bool post)
	{
	}

	[Token(Token = "0x6000197")]
	[Address(RVA = "0xE47B54", Offset = "0xE47B54", VA = "0xE47B54")]
	public void EnableRotation(bool ready, bool aim, bool pre, bool post)
	{
	}

	[Token(Token = "0x600019C")]
	[Address(RVA = "0xE47CC8", Offset = "0xE47CC8", VA = "0xE47CC8")]
	public void OnUpdateTeleportDestination(bool isValidDestination, Vector3? position, Quaternion? rotation, Quaternion? landingRotation)
	{
	}

	[Token(Token = "0x60001A0")]
	[Address(RVA = "0xE47DDC", Offset = "0xE47DDC", VA = "0xE47DDC")]
	public bool AimCollisionTest(Vector3 start, Vector3 end, LayerMask aimCollisionLayerMask, out RaycastHit hitInfo)
	{
		return default(bool);
	}

	[Token(Token = "0x60001A1")]
	[Address(RVA = "0xE48028", Offset = "0xE48028", VA = "0xE48028")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x7741F0", Offset = "0x7741F0")]
	protected void LogState(string msg)
	{
	}

	[Token(Token = "0x60001A2")]
	[Address(RVA = "0xE480DC", Offset = "0xE480DC", VA = "0xE480DC")]
	protected void CreateNewTeleportDestination()
	{
	}

	[Token(Token = "0x60001A3")]
	[Address(RVA = "0xE481AC", Offset = "0xE481AC", VA = "0xE481AC")]
	private void DeactivateDestination()
	{
	}

	[Token(Token = "0x60001A4")]
	[Address(RVA = "0xE481C8", Offset = "0xE481C8", VA = "0xE481C8")]
	public void RecycleTeleportDestination(TeleportDestination oldDestination)
	{
	}

	[Token(Token = "0x60001A5")]
	[Address(RVA = "0xE4828C", Offset = "0xE4828C", VA = "0xE4828C")]
	private void EnableMotion(bool enableLinear, bool enableRotation)
	{
	}

	[Token(Token = "0x60001A6")]
	[Address(RVA = "0xE482D0", Offset = "0xE482D0", VA = "0xE482D0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001A7")]
	[Address(RVA = "0xE48328", Offset = "0xE48328", VA = "0xE48328", Slot = "4")]
	public virtual void OnEnable()
	{
	}

	[Token(Token = "0x60001A8")]
	[Address(RVA = "0xE483C4", Offset = "0xE483C4", VA = "0xE483C4", Slot = "5")]
	public virtual void OnDisable()
	{
	}

	[Token(Token = "0x60001AB")]
	[Address(RVA = "0xE48358", Offset = "0xE48358", VA = "0xE48358")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x774248", Offset = "0x774248")]
	protected IEnumerator ReadyStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60001B0")]
	[Address(RVA = "0xE4878C", Offset = "0xE4878C", VA = "0xE4878C")]
	public void OnUpdateAimData(AimData aimData)
	{
	}

	[Token(Token = "0x60001B3")]
	[Address(RVA = "0xE4893C", Offset = "0xE4893C", VA = "0xE4893C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x774308", Offset = "0x774308")]
	protected IEnumerator AimStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60001B6")]
	[Address(RVA = "0xE48AE8", Offset = "0xE48AE8", VA = "0xE48AE8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x774388", Offset = "0x774388")]
	protected IEnumerator CancelAimStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60001B9")]
	[Address(RVA = "0xE48C94", Offset = "0xE48C94", VA = "0xE48C94")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x774408", Offset = "0x774408")]
	protected IEnumerator PreTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60001BC")]
	[Address(RVA = "0xE48E40", Offset = "0xE48E40", VA = "0xE48E40")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x774488", Offset = "0x774488")]
	protected IEnumerator CancelTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60001BF")]
	[Address(RVA = "0xE48FEC", Offset = "0xE48FEC", VA = "0xE48FEC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x774508", Offset = "0x774508")]
	protected IEnumerator TeleportingStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60001C2")]
	[Address(RVA = "0xE49198", Offset = "0xE49198", VA = "0xE49198")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x774588", Offset = "0x774588")]
	protected IEnumerator PostTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60001C5")]
	[Address(RVA = "0xE49344", Offset = "0xE49344", VA = "0xE49344")]
	public void DoTeleport()
	{
	}

	[Token(Token = "0x60001C6")]
	[Address(RVA = "0xE49484", Offset = "0xE49484", VA = "0xE49484")]
	public Vector3 GetCharacterPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60001C7")]
	[Address(RVA = "0xE494B8", Offset = "0xE494B8", VA = "0xE494B8")]
	public Quaternion GetHeadRotationY()
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60001C8")]
	[Address(RVA = "0xE49580", Offset = "0xE49580", VA = "0xE49580")]
	public void DoWarp(Vector3 startPos, float positionPercent)
	{
	}

	[Token(Token = "0x60001C9")]
	[Address(RVA = "0xE49678", Offset = "0xE49678", VA = "0xE49678")]
	public LocomotionTeleport()
	{
	}
}
[Token(Token = "0x2000097")]
public class SimpleCapsuleWithStickMovement : MonoBehaviour
{
	[Token(Token = "0x400035E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool EnableLinearMovement;

	[Token(Token = "0x400035F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool EnableRotation;

	[Token(Token = "0x4000360")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool HMDRotatesPlayer;

	[Token(Token = "0x4000361")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	public bool RotationEitherThumbstick;

	[Token(Token = "0x4000362")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float RotationAngle;

	[Token(Token = "0x4000363")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float Speed;

	[Token(Token = "0x4000364")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x4000365")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool ReadyToSnapTurn;

	[Token(Token = "0x4000366")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Rigidbody _rigidbody;

	[Token(Token = "0x1400000C")]
	public event Action CameraUpdated
	{
		[Token(Token = "0x60001F8")]
		[Address(RVA = "0xB7B970", Offset = "0xB7B970", VA = "0xB7B970")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x774858", Offset = "0x774858")]
		add
		{
		}
		[Token(Token = "0x60001F9")]
		[Address(RVA = "0xB7BA10", Offset = "0xB7BA10", VA = "0xB7BA10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x774868", Offset = "0x774868")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000D")]
	public event Action PreCharacterMove
	{
		[Token(Token = "0x60001FA")]
		[Address(RVA = "0xB7BAB0", Offset = "0xB7BAB0", VA = "0xB7BAB0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x774878", Offset = "0x774878")]
		add
		{
		}
		[Token(Token = "0x60001FB")]
		[Address(RVA = "0xB7BB50", Offset = "0xB7BB50", VA = "0xB7BB50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x774888", Offset = "0x774888")]
		remove
		{
		}
	}

	[Token(Token = "0x60001FC")]
	[Address(RVA = "0xB7BBF0", Offset = "0xB7BBF0", VA = "0xB7BBF0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001FD")]
	[Address(RVA = "0xB7BCAC", Offset = "0xB7BCAC", VA = "0xB7BCAC")]
	private void Start()
	{
	}

	[Token(Token = "0x60001FE")]
	[Address(RVA = "0xB7BCB0", Offset = "0xB7BCB0", VA = "0xB7BCB0")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60001FF")]
	[Address(RVA = "0xB7BD24", Offset = "0xB7BD24", VA = "0xB7BD24")]
	private void RotatePlayerToHMD()
	{
	}

	[Token(Token = "0x6000200")]
	[Address(RVA = "0xB7BE48", Offset = "0xB7BE48", VA = "0xB7BE48")]
	private void StickMovement()
	{
	}

	[Token(Token = "0x6000201")]
	[Address(RVA = "0xB7C030", Offset = "0xB7C030", VA = "0xB7C030")]
	private void SnapTurn()
	{
	}

	[Token(Token = "0x6000202")]
	[Address(RVA = "0xB7C238", Offset = "0xB7C238", VA = "0xB7C238")]
	public SimpleCapsuleWithStickMovement()
	{
	}
}
[Token(Token = "0x2000098")]
public abstract class TeleportAimHandler : TeleportSupport
{
	[Token(Token = "0x6000203")]
	[Address(RVA = "0xB88670", Offset = "0xB88670", VA = "0xB88670", Slot = "4")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x6000204")]
	[Address(RVA = "0xB88700", Offset = "0xB88700", VA = "0xB88700", Slot = "5")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x6000205")]
	public abstract void GetPoints(List<Vector3> points);

	[Token(Token = "0x6000206")]
	[Address(RVA = "0xB887CC", Offset = "0xB887CC", VA = "0xB887CC")]
	protected TeleportAimHandler()
	{
	}
}
[Token(Token = "0x2000099")]
public class TeleportAimHandlerLaser : TeleportAimHandler
{
	[Token(Token = "0x4000369")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x771404", Offset = "0x771404")]
	public float Range;

	[Token(Token = "0x6000207")]
	[Address(RVA = "0xB887DC", Offset = "0xB887DC", VA = "0xB887DC", Slot = "8")]
	public override void GetPoints(List<Vector3> points)
	{
	}

	[Token(Token = "0x6000208")]
	[Address(RVA = "0xB888D8", Offset = "0xB888D8", VA = "0xB888D8")]
	public TeleportAimHandlerLaser()
	{
	}
}
[Token(Token = "0x200009A")]
public class TeleportAimHandlerParabolic : TeleportAimHandler
{
	[Token(Token = "0x400036A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x77143C", Offset = "0x77143C")]
	public float Range;

	[Token(Token = "0x400036B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x771474", Offset = "0x771474")]
	public float MinimumElevation;

	[Token(Token = "0x400036C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7714AC", Offset = "0x7714AC")]
	public float Gravity;

	[Token(Token = "0x400036D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7714E4", Offset = "0x7714E4")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7714E4", Offset = "0x7714E4")]
	public float AimVelocity;

	[Token(Token = "0x400036E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x771540", Offset = "0x771540")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x771540", Offset = "0x771540")]
	public float AimStep;

	[Token(Token = "0x6000209")]
	[Address(RVA = "0xB888E8", Offset = "0xB888E8", VA = "0xB888E8", Slot = "8")]
	public override void GetPoints(List<Vector3> points)
	{
	}

	[Token(Token = "0x600020A")]
	[Address(RVA = "0xB88A78", Offset = "0xB88A78", VA = "0xB88A78")]
	public TeleportAimHandlerParabolic()
	{
	}
}
[Token(Token = "0x200009B")]
public class TeleportAimVisualLaser : TeleportSupport
{
	[Token(Token = "0x400036F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x771598", Offset = "0x771598")]
	public LineRenderer LaserPrefab;

	[Token(Token = "0x4000370")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _enterAimStateAction;

	[Token(Token = "0x4000371")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly Action _exitAimStateAction;

	[Token(Token = "0x4000372")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private readonly Action<LocomotionTeleport.AimData> _updateAimDataAction;

	[Token(Token = "0x4000373")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private LineRenderer _lineRenderer;

	[Token(Token = "0x4000374")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3[] _linePoints;

	[Token(Token = "0x600020B")]
	[Address(RVA = "0xB88A8C", Offset = "0xB88A8C", VA = "0xB88A8C")]
	public TeleportAimVisualLaser()
	{
	}

	[Token(Token = "0x600020C")]
	[Address(RVA = "0xB88BA8", Offset = "0xB88BA8", VA = "0xB88BA8")]
	private void EnterAimState()
	{
	}

	[Token(Token = "0x600020D")]
	[Address(RVA = "0xB88BD8", Offset = "0xB88BD8", VA = "0xB88BD8")]
	private void ExitAimState()
	{
	}

	[Token(Token = "0x600020E")]
	[Address(RVA = "0xB88C08", Offset = "0xB88C08", VA = "0xB88C08")]
	private void Awake()
	{
	}

	[Token(Token = "0x600020F")]
	[Address(RVA = "0xB88CB0", Offset = "0xB88CB0", VA = "0xB88CB0", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000210")]
	[Address(RVA = "0xB88D1C", Offset = "0xB88D1C", VA = "0xB88D1C", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000211")]
	[Address(RVA = "0xB88D84", Offset = "0xB88D84", VA = "0xB88D84")]
	private void UpdateAimData(LocomotionTeleport.AimData obj)
	{
	}
}
[Token(Token = "0x200009C")]
public class TeleportDestination : MonoBehaviour
{
	[Token(Token = "0x4000375")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7715D0", Offset = "0x7715D0")]
	private bool <IsValidDestination>k__BackingField;

	[Token(Token = "0x4000376")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7715E0", Offset = "0x7715E0")]
	public Transform PositionIndicator;

	[Token(Token = "0x4000377")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x771618", Offset = "0x771618")]
	public Transform OrientationIndicator;

	[Token(Token = "0x4000378")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x771650", Offset = "0x771650")]
	public Quaternion LandingRotation;

	[NonSerialized]
	[Token(Token = "0x4000379")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public LocomotionTeleport LocomotionTeleport;

	[NonSerialized]
	[Token(Token = "0x400037A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public LocomotionTeleport.States TeleportState;

	[Token(Token = "0x400037B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private readonly Action<bool, Vector3?, Quaternion?, Quaternion?> _updateTeleportDestinationAction;

	[Token(Token = "0x400037C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool _eventsActive;

	[Token(Token = "0x17000024")]
	public bool IsValidDestination
	{
		[Token(Token = "0x6000212")]
		[Address(RVA = "0xB88EA8", Offset = "0xB88EA8", VA = "0xB88EA8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x774898", Offset = "0x774898")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000213")]
		[Address(RVA = "0xB88EB0", Offset = "0xB88EB0", VA = "0xB88EB0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7748A8", Offset = "0x7748A8")]
		private set
		{
		}
	}

	[Token(Token = "0x1400000E")]
	public event Action<TeleportDestination> Deactivated
	{
		[Token(Token = "0x6000218")]
		[Address(RVA = "0xB89064", Offset = "0xB89064", VA = "0xB89064")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7748B8", Offset = "0x7748B8")]
		add
		{
		}
		[Token(Token = "0x6000219")]
		[Address(RVA = "0xB89104", Offset = "0xB89104", VA = "0xB89104")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7748C8", Offset = "0x7748C8")]
		remove
		{
		}
	}

	[Token(Token = "0x6000214")]
	[Address(RVA = "0xB88EBC", Offset = "0xB88EBC", VA = "0xB88EBC")]
	private TeleportDestination()
	{
	}

	[Token(Token = "0x6000215")]
	[Address(RVA = "0xB88F4C", Offset = "0xB88F4C", VA = "0xB88F4C")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x6000216")]
	[Address(RVA = "0xB89020", Offset = "0xB89020", VA = "0xB89020")]
	private void TryDisableEventHandlers()
	{
	}

	[Token(Token = "0x6000217")]
	[Address(RVA = "0xB89060", Offset = "0xB89060", VA = "0xB89060")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x600021A")]
	[Address(RVA = "0xB891A4", Offset = "0xB891A4", VA = "0xB891A4")]
	public void OnDeactivated()
	{
	}

	[Token(Token = "0x600021B")]
	[Address(RVA = "0xB89208", Offset = "0xB89208", VA = "0xB89208")]
	public void Recycle()
	{
	}

	[Token(Token = "0x600021C")]
	[Address(RVA = "0xB89228", Offset = "0xB89228", VA = "0xB89228", Slot = "4")]
	public virtual void UpdateTeleportDestination(bool isValidDestination, Vector3? position, Quaternion? rotation, Quaternion? landingRotation)
	{
	}
}
[Token(Token = "0x200009D")]
public abstract class TeleportInputHandler : TeleportSupport
{
	[Token(Token = "0x200009E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76F76C", Offset = "0x76F76C")]
	private sealed class <TeleportReadyCoroutine>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000380")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000381")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000382")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportInputHandler <>4__this;

		[Token(Token = "0x17000025")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000229")]
			[Address(RVA = "0xB31D08", Offset = "0xB31D08", VA = "0xB31D08", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000026")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600022B")]
			[Address(RVA = "0xB31D50", Offset = "0xB31D50", VA = "0xB31D50", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000226")]
		[Address(RVA = "0xB31C4C", Offset = "0xB31C4C", VA = "0xB31C4C")]
		[DebuggerHidden]
		public <TeleportReadyCoroutine>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6000227")]
		[Address(RVA = "0xB31C78", Offset = "0xB31C78", VA = "0xB31C78", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000228")]
		[Address(RVA = "0xB31C7C", Offset = "0xB31C7C", VA = "0xB31C7C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600022A")]
		[Address(RVA = "0xB31D10", Offset = "0xB31D10", VA = "0xB31D10", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200009F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76F77C", Offset = "0x76F77C")]
	private sealed class <TeleportAimCoroutine>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000383")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000384")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000385")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportInputHandler <>4__this;

		[Token(Token = "0x17000027")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600022F")]
			[Address(RVA = "0xB31BFC", Offset = "0xB31BFC", VA = "0xB31BFC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000028")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000231")]
			[Address(RVA = "0xB31C44", Offset = "0xB31C44", VA = "0xB31C44", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600022C")]
		[Address(RVA = "0xB31B3C", Offset = "0xB31B3C", VA = "0xB31B3C")]
		[DebuggerHidden]
		public <TeleportAimCoroutine>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x600022D")]
		[Address(RVA = "0xB31B68", Offset = "0xB31B68", VA = "0xB31B68", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600022E")]
		[Address(RVA = "0xB31B6C", Offset = "0xB31B6C", VA = "0xB31B6C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000230")]
		[Address(RVA = "0xB31C04", Offset = "0xB31C04", VA = "0xB31C04", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400037E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly Action _startReadyAction;

	[Token(Token = "0x400037F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _startAimAction;

	[Token(Token = "0x600021D")]
	[Address(RVA = "0xB89434", Offset = "0xB89434", VA = "0xB89434")]
	protected TeleportInputHandler()
	{
	}

	[Token(Token = "0x600021E")]
	[Address(RVA = "0xB894F4", Offset = "0xB894F4", VA = "0xB894F4", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x600021F")]
	[Address(RVA = "0xB8954C", Offset = "0xB8954C", VA = "0xB8954C", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000220")]
	[Address(RVA = "0xB89604", Offset = "0xB89604", VA = "0xB89604")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7748D8", Offset = "0x7748D8")]
	private IEnumerator TeleportReadyCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000221")]
	[Address(RVA = "0xB89670", Offset = "0xB89670", VA = "0xB89670")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x774938", Offset = "0x774938")]
	private IEnumerator TeleportAimCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000222")]
	public abstract LocomotionTeleport.TeleportIntentions GetIntention();

	[Token(Token = "0x6000223")]
	public abstract void GetAimData(out Ray aimRay);

	[Token(Token = "0x6000224")]
	[Address(RVA = "0xB896DC", Offset = "0xB896DC", VA = "0xB896DC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x774998", Offset = "0x774998")]
	private void <.ctor>b__2_0()
	{
	}

	[Token(Token = "0x6000225")]
	[Address(RVA = "0xB89708", Offset = "0xB89708", VA = "0xB89708")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7749A8", Offset = "0x7749A8")]
	private void <.ctor>b__2_1()
	{
	}
}
[Token(Token = "0x20000A0")]
public class TeleportInputHandlerHMD : TeleportInputHandler
{
	[Token(Token = "0x4000386")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x771698", Offset = "0x771698")]
	private Transform <Pointer>k__BackingField;

	[Token(Token = "0x4000387")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7716A8", Offset = "0x7716A8")]
	public OVRInput.RawButton AimButton;

	[Token(Token = "0x4000388")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7716E0", Offset = "0x7716E0")]
	public OVRInput.RawButton TeleportButton;

	[Token(Token = "0x4000389")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x771718", Offset = "0x771718")]
	public bool FastTeleport;

	[Token(Token = "0x17000029")]
	public Transform Pointer
	{
		[Token(Token = "0x6000232")]
		[Address(RVA = "0xB89734", Offset = "0xB89734", VA = "0xB89734")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x774A58", Offset = "0x774A58")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000233")]
		[Address(RVA = "0xB8973C", Offset = "0xB8973C", VA = "0xB8973C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x774A68", Offset = "0x774A68")]
		private set
		{
		}
	}

	[Token(Token = "0x6000234")]
	[Address(RVA = "0xB89744", Offset = "0xB89744", VA = "0xB89744", Slot = "8")]
	public override LocomotionTeleport.TeleportIntentions GetIntention()
	{
		return default(LocomotionTeleport.TeleportIntentions);
	}

	[Token(Token = "0x6000235")]
	[Address(RVA = "0xB8989C", Offset = "0xB8989C", VA = "0xB8989C", Slot = "9")]
	public override void GetAimData(out Ray aimRay)
	{
	}

	[Token(Token = "0x6000236")]
	[Address(RVA = "0xB89954", Offset = "0xB89954", VA = "0xB89954")]
	public TeleportInputHandlerHMD()
	{
	}
}
[Token(Token = "0x20000A1")]
public class TeleportInputHandlerTouch : TeleportInputHandlerHMD
{
	[Token(Token = "0x20000A2")]
	public enum InputModes
	{
		[Token(Token = "0x4000394")]
		CapacitiveButtonForAimAndTeleport,
		[Token(Token = "0x4000395")]
		SeparateButtonsForAimAndTeleport,
		[Token(Token = "0x4000396")]
		ThumbstickTeleport,
		[Token(Token = "0x4000397")]
		ThumbstickTeleportForwardBackOnly
	}

	[Token(Token = "0x20000A3")]
	public enum AimCapTouchButtons
	{
		[Token(Token = "0x4000399")]
		A,
		[Token(Token = "0x400039A")]
		B,
		[Token(Token = "0x400039B")]
		LeftTrigger,
		[Token(Token = "0x400039C")]
		LeftThumbstick,
		[Token(Token = "0x400039D")]
		RightTrigger,
		[Token(Token = "0x400039E")]
		RightThumbstick,
		[Token(Token = "0x400039F")]
		X,
		[Token(Token = "0x40003A0")]
		Y
	}

	[Token(Token = "0x400038A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform LeftHand;

	[Token(Token = "0x400038B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform RightHand;

	[Token(Token = "0x400038C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x771750", Offset = "0x771750")]
	public InputModes InputMode;

	[Token(Token = "0x400038D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private readonly OVRInput.RawButton[] _rawButtons;

	[Token(Token = "0x400038E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private readonly OVRInput.RawTouch[] _rawTouch;

	[Token(Token = "0x400038F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x771788", Offset = "0x771788")]
	public OVRInput.Controller AimingController;

	[Token(Token = "0x4000390")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private OVRInput.Controller InitiatingController;

	[Token(Token = "0x4000391")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7717C0", Offset = "0x7717C0")]
	public AimCapTouchButtons CapacitiveAimAndTeleportButton;

	[Token(Token = "0x4000392")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7717F8", Offset = "0x7717F8")]
	public float ThumbstickTeleportThreshold;

	[Token(Token = "0x6000237")]
	[Address(RVA = "0xB89958", Offset = "0xB89958", VA = "0xB89958")]
	private void Start()
	{
	}

	[Token(Token = "0x6000238")]
	[Address(RVA = "0xB8995C", Offset = "0xB8995C", VA = "0xB8995C", Slot = "8")]
	public override LocomotionTeleport.TeleportIntentions GetIntention()
	{
		return default(LocomotionTeleport.TeleportIntentions);
	}

	[Token(Token = "0x6000239")]
	[Address(RVA = "0xB89D44", Offset = "0xB89D44", VA = "0xB89D44", Slot = "9")]
	public override void GetAimData(out Ray aimRay)
	{
	}

	[Token(Token = "0x600023A")]
	[Address(RVA = "0xB89E04", Offset = "0xB89E04", VA = "0xB89E04")]
	public TeleportInputHandlerTouch()
	{
	}
}
[Token(Token = "0x20000A4")]
public abstract class TeleportOrientationHandler : TeleportSupport
{
	[Token(Token = "0x20000A5")]
	public enum OrientationModes
	{
		[Token(Token = "0x40003A5")]
		HeadRelative,
		[Token(Token = "0x40003A6")]
		ForwardFacing
	}

	[Token(Token = "0x20000A6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76F78C", Offset = "0x76F78C")]
	private sealed class <UpdateOrientationCoroutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40003A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40003A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40003A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportOrientationHandler <>4__this;

		[Token(Token = "0x1700002A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000247")]
			[Address(RVA = "0xB31E2C", Offset = "0xB31E2C", VA = "0xB31E2C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700002B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000249")]
			[Address(RVA = "0xB31E74", Offset = "0xB31E74", VA = "0xB31E74", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000244")]
		[Address(RVA = "0xB31D58", Offset = "0xB31D58", VA = "0xB31D58")]
		[DebuggerHidden]
		public <UpdateOrientationCoroutine>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6000245")]
		[Address(RVA = "0xB31D84", Offset = "0xB31D84", VA = "0xB31D84", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000246")]
		[Address(RVA = "0xB31D88", Offset = "0xB31D88", VA = "0xB31D88", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000248")]
		[Address(RVA = "0xB31E34", Offset = "0xB31E34", VA = "0xB31E34", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40003A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly Action _updateOrientationAction;

	[Token(Token = "0x40003A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action<LocomotionTeleport.AimData> _updateAimDataAction;

	[Token(Token = "0x40003A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected LocomotionTeleport.AimData AimData;

	[Token(Token = "0x600023B")]
	[Address(RVA = "0xB89ED0", Offset = "0xB89ED0", VA = "0xB89ED0")]
	protected TeleportOrientationHandler()
	{
	}

	[Token(Token = "0x600023C")]
	[Address(RVA = "0xB89FB0", Offset = "0xB89FB0", VA = "0xB89FB0")]
	private void UpdateAimData(LocomotionTeleport.AimData aimData)
	{
	}

	[Token(Token = "0x600023D")]
	[Address(RVA = "0xB89FB8", Offset = "0xB89FB8", VA = "0xB89FB8", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x600023E")]
	[Address(RVA = "0xB8A004", Offset = "0xB8A004", VA = "0xB8A004", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x600023F")]
	[Address(RVA = "0xB8A04C", Offset = "0xB8A04C", VA = "0xB8A04C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x774A78", Offset = "0x774A78")]
	private IEnumerator UpdateOrientationCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000240")]
	protected abstract void InitializeTeleportDestination();

	[Token(Token = "0x6000241")]
	protected abstract void UpdateTeleportDestination();

	[Token(Token = "0x6000242")]
	[Address(RVA = "0xB8A0B8", Offset = "0xB8A0B8", VA = "0xB8A0B8")]
	protected Quaternion GetLandingOrientation(OrientationModes mode, Quaternion rotation)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000243")]
	[Address(RVA = "0xB8A174", Offset = "0xB8A174", VA = "0xB8A174")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x774AD8", Offset = "0x774AD8")]
	private void <.ctor>b__3_0()
	{
	}
}
[Token(Token = "0x20000A7")]
public class TeleportOrientationHandler360 : TeleportOrientationHandler
{
	[Token(Token = "0x600024A")]
	[Address(RVA = "0xB8A1A0", Offset = "0xB8A1A0", VA = "0xB8A1A0", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x600024B")]
	[Address(RVA = "0xB8A1A4", Offset = "0xB8A1A4", VA = "0xB8A1A4", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x600024C")]
	[Address(RVA = "0xB8A220", Offset = "0xB8A220", VA = "0xB8A220")]
	public TeleportOrientationHandler360()
	{
	}
}
[Token(Token = "0x20000A8")]
public class TeleportOrientationHandlerHMD : TeleportOrientationHandler
{
	[Token(Token = "0x40003AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x771830", Offset = "0x771830")]
	public OrientationModes OrientationMode;

	[Token(Token = "0x40003AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x771868", Offset = "0x771868")]
	public bool UpdateOrientationDuringAim;

	[Token(Token = "0x40003AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7718A0", Offset = "0x7718A0")]
	public float AimDistanceThreshold;

	[Token(Token = "0x40003AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7718D8", Offset = "0x7718D8")]
	public float AimDistanceMaxRange;

	[Token(Token = "0x40003AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Quaternion _initialRotation;

	[Token(Token = "0x600024D")]
	[Address(RVA = "0xB8A224", Offset = "0xB8A224", VA = "0xB8A224", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x600024E")]
	[Address(RVA = "0xB8A250", Offset = "0xB8A250", VA = "0xB8A250", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x600024F")]
	[Address(RVA = "0xB8A600", Offset = "0xB8A600", VA = "0xB8A600")]
	public TeleportOrientationHandlerHMD()
	{
	}
}
[Token(Token = "0x20000A9")]
public class TeleportOrientationHandlerThumbstick : TeleportOrientationHandler
{
	[Token(Token = "0x40003AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x771910", Offset = "0x771910")]
	public OrientationModes OrientationMode;

	[Token(Token = "0x40003B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x771948", Offset = "0x771948")]
	public OVRInput.Controller Thumbstick;

	[Token(Token = "0x40003B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x771980", Offset = "0x771980")]
	public float RotateStickThreshold;

	[Token(Token = "0x40003B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Quaternion _initialRotation;

	[Token(Token = "0x40003B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Quaternion _currentRotation;

	[Token(Token = "0x40003B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Vector2 _lastValidDirection;

	[Token(Token = "0x6000250")]
	[Address(RVA = "0xB8A604", Offset = "0xB8A604", VA = "0xB8A604", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x6000251")]
	[Address(RVA = "0xB8A648", Offset = "0xB8A648", VA = "0xB8A648", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x6000252")]
	[Address(RVA = "0xB8A9F0", Offset = "0xB8A9F0", VA = "0xB8A9F0")]
	public TeleportOrientationHandlerThumbstick()
	{
	}
}
[Token(Token = "0x20000AA")]
public class TeleportPoint : MonoBehaviour
{
	[Token(Token = "0x40003B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float dimmingSpeed;

	[Token(Token = "0x40003B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float fullIntensity;

	[Token(Token = "0x40003B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float lowIntensity;

	[Token(Token = "0x40003B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform destTransform;

	[Token(Token = "0x40003B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float lastLookAtTime;

	[Token(Token = "0x6000253")]
	[Address(RVA = "0xB8AA00", Offset = "0xB8AA00", VA = "0xB8AA00")]
	private void Start()
	{
	}

	[Token(Token = "0x6000254")]
	[Address(RVA = "0xB8AA04", Offset = "0xB8AA04", VA = "0xB8AA04")]
	public Transform GetDestTransform()
	{
		return null;
	}

	[Token(Token = "0x6000255")]
	[Address(RVA = "0xB8AA0C", Offset = "0xB8AA0C", VA = "0xB8AA0C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000256")]
	[Address(RVA = "0xB8AAC8", Offset = "0xB8AAC8", VA = "0xB8AAC8")]
	public void OnLookAt()
	{
	}

	[Token(Token = "0x6000257")]
	[Address(RVA = "0xB8AAF0", Offset = "0xB8AAF0", VA = "0xB8AAF0")]
	public TeleportPoint()
	{
	}
}
[Token(Token = "0x20000AB")]
public abstract class TeleportSupport : MonoBehaviour
{
	[Token(Token = "0x40003BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7719B8", Offset = "0x7719B8")]
	private LocomotionTeleport <LocomotionTeleport>k__BackingField;

	[Token(Token = "0x40003BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool _eventsActive;

	[Token(Token = "0x1700002C")]
	protected LocomotionTeleport LocomotionTeleport
	{
		[Token(Token = "0x6000258")]
		[Address(RVA = "0xB8AB08", Offset = "0xB8AB08", VA = "0xB8AB08")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x774B38", Offset = "0x774B38")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000259")]
		[Address(RVA = "0xB8AB10", Offset = "0xB8AB10", VA = "0xB8AB10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x774B48", Offset = "0x774B48")]
		private set
		{
		}
	}

	[Token(Token = "0x600025A")]
	[Address(RVA = "0xB886A0", Offset = "0xB886A0", VA = "0xB886A0", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x600025B")]
	[Address(RVA = "0xB887A0", Offset = "0xB887A0", VA = "0xB887A0", Slot = "5")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x600025C")]
	[Address(RVA = "0xB8AB18", Offset = "0xB8AB18", VA = "0xB8AB18")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x774B58", Offset = "0x774B58")]
	private void LogEventHandler(string msg)
	{
	}

	[Token(Token = "0x600025D")]
	[Address(RVA = "0xB88D10", Offset = "0xB88D10", VA = "0xB88D10", Slot = "6")]
	protected virtual void AddEventHandlers()
	{
	}

	[Token(Token = "0x600025E")]
	[Address(RVA = "0xB88D7C", Offset = "0xB88D7C", VA = "0xB88D7C", Slot = "7")]
	protected virtual void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x600025F")]
	[Address(RVA = "0xB887D4", Offset = "0xB887D4", VA = "0xB887D4")]
	protected TeleportSupport()
	{
	}
}
[Token(Token = "0x20000AC")]
public abstract class TeleportTargetHandler : TeleportSupport
{
	[Token(Token = "0x20000AD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76F79C", Offset = "0x76F79C")]
	private sealed class <TargetAimCoroutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40003C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40003C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40003C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTargetHandler <>4__this;

		[Token(Token = "0x1700002D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600026B")]
			[Address(RVA = "0xB32140", Offset = "0xB32140", VA = "0xB32140", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700002E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600026D")]
			[Address(RVA = "0xB32188", Offset = "0xB32188", VA = "0xB32188", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000268")]
		[Address(RVA = "0xB31E7C", Offset = "0xB31E7C", VA = "0xB31E7C")]
		[DebuggerHidden]
		public <TargetAimCoroutine>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6000269")]
		[Address(RVA = "0xB31EA8", Offset = "0xB31EA8", VA = "0xB31EA8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600026A")]
		[Address(RVA = "0xB31EAC", Offset = "0xB31EAC", VA = "0xB31EAC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600026C")]
		[Address(RVA = "0xB32148", Offset = "0xB32148", VA = "0xB32148", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40003BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7719C8", Offset = "0x7719C8")]
	public LayerMask AimCollisionLayerMask;

	[Token(Token = "0x40003BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected readonly LocomotionTeleport.AimData AimData;

	[Token(Token = "0x40003BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _startAimAction;

	[Token(Token = "0x40003BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly List<Vector3> _aimPoints;

	[Token(Token = "0x40003C0")]
	private const float ERROR_MARGIN = 0.1f;

	[Token(Token = "0x6000260")]
	[Address(RVA = "0xB8ABF4", Offset = "0xB8ABF4", VA = "0xB8ABF4")]
	protected TeleportTargetHandler()
	{
	}

	[Token(Token = "0x6000261")]
	[Address(RVA = "0xB8ACE4", Offset = "0xB8ACE4", VA = "0xB8ACE4", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000262")]
	[Address(RVA = "0xB8AD10", Offset = "0xB8AD10", VA = "0xB8AD10", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000263")]
	[Address(RVA = "0xB8AD38", Offset = "0xB8AD38", VA = "0xB8AD38")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x774B90", Offset = "0x774B90")]
	private IEnumerator TargetAimCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000264")]
	[Address(RVA = "0xB8ADA4", Offset = "0xB8ADA4", VA = "0xB8ADA4", Slot = "8")]
	protected virtual void ResetAimData()
	{
	}

	[Token(Token = "0x6000265")]
	protected abstract bool ConsiderTeleport(Vector3 start, ref Vector3 end);

	[Token(Token = "0x6000266")]
	[Address(RVA = "0xB8ADC0", Offset = "0xB8ADC0", VA = "0xB8ADC0", Slot = "10")]
	public virtual Vector3? ConsiderDestination(Vector3 location)
	{
		return null;
	}

	[Token(Token = "0x6000267")]
	[Address(RVA = "0xB8AEE0", Offset = "0xB8AEE0", VA = "0xB8AEE0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x774BF0", Offset = "0x774BF0")]
	private void <.ctor>b__3_0()
	{
	}
}
[Token(Token = "0x20000AE")]
public class TeleportTargetHandlerNavMesh : TeleportTargetHandler
{
	[Token(Token = "0x40003C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int NavMeshAreaMask;

	[Token(Token = "0x40003C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private NavMeshPath _path;

	[Token(Token = "0x600026E")]
	[Address(RVA = "0xB8AF0C", Offset = "0xB8AF0C", VA = "0xB8AF0C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600026F")]
	[Address(RVA = "0xB8AF68", Offset = "0xB8AF68", VA = "0xB8AF68", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x6000270")]
	[Address(RVA = "0xB8B060", Offset = "0xB8B060", VA = "0xB8B060", Slot = "10")]
	public override Vector3? ConsiderDestination(Vector3 location)
	{
		return null;
	}

	[Token(Token = "0x6000271")]
	[Address(RVA = "0xB8B158", Offset = "0xB8B158", VA = "0xB8B158")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x774C50", Offset = "0x774C50")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000272")]
	[Address(RVA = "0xB8B15C", Offset = "0xB8B15C", VA = "0xB8B15C")]
	public TeleportTargetHandlerNavMesh()
	{
	}
}
[Token(Token = "0x20000AF")]
public class TeleportTargetHandlerNode : TeleportTargetHandler
{
	[Token(Token = "0x40003C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x771A00", Offset = "0x771A00")]
	public float LOSOffset;

	[Token(Token = "0x40003C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x771A38", Offset = "0x771A38")]
	public LayerMask TeleportLayerMask;

	[Token(Token = "0x6000273")]
	[Address(RVA = "0xB8B168", Offset = "0xB8B168", VA = "0xB8B168", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x6000274")]
	[Address(RVA = "0xB8B374", Offset = "0xB8B374", VA = "0xB8B374")]
	public TeleportTargetHandlerNode()
	{
	}
}
[Token(Token = "0x20000B0")]
public class TeleportTargetHandlerPhysical : TeleportTargetHandler
{
	[Token(Token = "0x6000275")]
	[Address(RVA = "0xB8B380", Offset = "0xB8B380", VA = "0xB8B380", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x6000276")]
	[Address(RVA = "0xB8B478", Offset = "0xB8B478", VA = "0xB8B478")]
	public TeleportTargetHandlerPhysical()
	{
	}
}
[Token(Token = "0x20000B1")]
public abstract class TeleportTransition : TeleportSupport
{
	[Token(Token = "0x6000277")]
	[Address(RVA = "0xB8B47C", Offset = "0xB8B47C", VA = "0xB8B47C", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000278")]
	[Address(RVA = "0xB8B510", Offset = "0xB8B510", VA = "0xB8B510", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000279")]
	protected abstract void LocomotionTeleportOnEnterStateTeleporting();

	[Token(Token = "0x600027A")]
	[Address(RVA = "0xB8B5A0", Offset = "0xB8B5A0", VA = "0xB8B5A0")]
	protected TeleportTransition()
	{
	}
}
[Token(Token = "0x20000B2")]
public class TeleportTransitionBlink : TeleportTransition
{
	[Token(Token = "0x20000B3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76F7AC", Offset = "0x76F7AC")]
	private sealed class <BlinkCoroutine>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40003CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40003CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40003CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTransitionBlink <>4__this;

		[Token(Token = "0x40003CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <elapsedTime>5__2;

		[Token(Token = "0x40003CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <teleportTime>5__3;

		[Token(Token = "0x40003D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool <teleported>5__4;

		[Token(Token = "0x1700002F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000281")]
			[Address(RVA = "0xB322BC", Offset = "0xB322BC", VA = "0xB322BC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000030")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000283")]
			[Address(RVA = "0xB32304", Offset = "0xB32304", VA = "0xB32304", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600027E")]
		[Address(RVA = "0xB32190", Offset = "0xB32190", VA = "0xB32190")]
		[DebuggerHidden]
		public <BlinkCoroutine>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x600027F")]
		[Address(RVA = "0xB321BC", Offset = "0xB321BC", VA = "0xB321BC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000280")]
		[Address(RVA = "0xB321C0", Offset = "0xB321C0", VA = "0xB321C0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000282")]
		[Address(RVA = "0xB322C4", Offset = "0xB322C4", VA = "0xB322C4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40003C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x771A70", Offset = "0x771A70")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x771A70", Offset = "0x771A70")]
	public float TransitionDuration;

	[Token(Token = "0x40003C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x771AC8", Offset = "0x771AC8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x771AC8", Offset = "0x771AC8")]
	public float TeleportDelay;

	[Token(Token = "0x40003CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x771B1C", Offset = "0x771B1C")]
	public AnimationCurve FadeLevels;

	[Token(Token = "0x600027B")]
	[Address(RVA = "0xB8B5A8", Offset = "0xB8B5A8", VA = "0xB8B5A8", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x600027C")]
	[Address(RVA = "0xB8B5D4", Offset = "0xB8B5D4", VA = "0xB8B5D4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x774C88", Offset = "0x774C88")]
	protected IEnumerator BlinkCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600027D")]
	[Address(RVA = "0xB8B640", Offset = "0xB8B640", VA = "0xB8B640")]
	public TeleportTransitionBlink()
	{
	}
}
[Token(Token = "0x20000B4")]
public class TeleportTransitionInstant : TeleportTransition
{
	[Token(Token = "0x6000284")]
	[Address(RVA = "0xB8B7E0", Offset = "0xB8B7E0", VA = "0xB8B7E0", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x6000285")]
	[Address(RVA = "0xB8B7FC", Offset = "0xB8B7FC", VA = "0xB8B7FC")]
	public TeleportTransitionInstant()
	{
	}
}
[Token(Token = "0x20000B5")]
public class TeleportTransitionWarp : TeleportTransition
{
	[Token(Token = "0x20000B6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76F7BC", Offset = "0x76F7BC")]
	private sealed class <DoWarp>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40003D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40003D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40003D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTransitionWarp <>4__this;

		[Token(Token = "0x40003D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 <startPosition>5__2;

		[Token(Token = "0x40003D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <elapsedTime>5__3;

		[Token(Token = "0x17000031")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600028C")]
			[Address(RVA = "0xB3246C", Offset = "0xB3246C", VA = "0xB3246C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000032")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600028E")]
			[Address(RVA = "0xB324B4", Offset = "0xB324B4", VA = "0xB324B4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000289")]
		[Address(RVA = "0xB3230C", Offset = "0xB3230C", VA = "0xB3230C")]
		[DebuggerHidden]
		public <DoWarp>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x600028A")]
		[Address(RVA = "0xB32338", Offset = "0xB32338", VA = "0xB32338", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600028B")]
		[Address(RVA = "0xB3233C", Offset = "0xB3233C", VA = "0xB3233C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600028D")]
		[Address(RVA = "0xB32474", Offset = "0xB32474", VA = "0xB32474", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40003D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x771B54", Offset = "0x771B54")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x771B54", Offset = "0x771B54")]
	public float TransitionDuration;

	[Token(Token = "0x40003D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public AnimationCurve PositionLerp;

	[Token(Token = "0x6000286")]
	[Address(RVA = "0xB8B804", Offset = "0xB8B804", VA = "0xB8B804", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x6000287")]
	[Address(RVA = "0xB8B830", Offset = "0xB8B830", VA = "0xB8B830")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x774D38", Offset = "0x774D38")]
	private IEnumerator DoWarp()
	{
		return null;
	}

	[Token(Token = "0x6000288")]
	[Address(RVA = "0xB8B89C", Offset = "0xB8B89C", VA = "0xB8B89C")]
	public TeleportTransitionWarp()
	{
	}
}
[Token(Token = "0x20000B7")]
public static class NativeVideoPlayer
{
	[Token(Token = "0x20000B8")]
	public enum PlabackState
	{
		[Token(Token = "0x40003F0")]
		Idle = 1,
		[Token(Token = "0x40003F1")]
		Preparing,
		[Token(Token = "0x40003F2")]
		Buffering,
		[Token(Token = "0x40003F3")]
		Ready,
		[Token(Token = "0x40003F4")]
		Ended
	}

	[Token(Token = "0x20000B9")]
	public enum StereoMode
	{
		[Token(Token = "0x40003F6")]
		Unknown = -1,
		[Token(Token = "0x40003F7")]
		Mono,
		[Token(Token = "0x40003F8")]
		TopBottom,
		[Token(Token = "0x40003F9")]
		LeftRight,
		[Token(Token = "0x40003FA")]
		Mesh
	}

	[Token(Token = "0x40003D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static IntPtr? _Activity;

	[Token(Token = "0x40003D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static IntPtr? _VideoPlayerClass;

	[Token(Token = "0x40003DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static readonly jvalue[] EmptyParams;

	[Token(Token = "0x40003DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static IntPtr getIsPlayingMethodId;

	[Token(Token = "0x40003DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static IntPtr getCurrentPlaybackStateMethodId;

	[Token(Token = "0x40003DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static IntPtr getDurationMethodId;

	[Token(Token = "0x40003DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static IntPtr getStereoModeMethodId;

	[Token(Token = "0x40003DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static IntPtr getWidthMethodId;

	[Token(Token = "0x40003E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static IntPtr getHeightMethodId;

	[Token(Token = "0x40003E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private static IntPtr getPlaybackPositionMethodId;

	[Token(Token = "0x40003E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static IntPtr setPlaybackPositionMethodId;

	[Token(Token = "0x40003E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static jvalue[] setPlaybackPositionParams;

	[Token(Token = "0x40003E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static IntPtr playVideoMethodId;

	[Token(Token = "0x40003E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private static jvalue[] playVideoParams;

	[Token(Token = "0x40003E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private static IntPtr stopMethodId;

	[Token(Token = "0x40003E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private static IntPtr resumeMethodId;

	[Token(Token = "0x40003E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private static IntPtr pauseMethodId;

	[Token(Token = "0x40003E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private static IntPtr setPlaybackSpeedMethodId;

	[Token(Token = "0x40003EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private static jvalue[] setPlaybackSpeedParams;

	[Token(Token = "0x40003EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private static IntPtr setLoopingMethodId;

	[Token(Token = "0x40003EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private static jvalue[] setLoopingParams;

	[Token(Token = "0x40003ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private static IntPtr setListenerRotationQuaternionMethodId;

	[Token(Token = "0x40003EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private static jvalue[] setListenerRotationQuaternionParams;

	[Token(Token = "0x17000033")]
	private static IntPtr VideoPlayerClass
	{
		[Token(Token = "0x600028F")]
		[Address(RVA = "0xB93BBC", Offset = "0xB93BBC", VA = "0xB93BBC")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x17000034")]
	private static IntPtr Activity
	{
		[Token(Token = "0x6000290")]
		[Address(RVA = "0xB93EEC", Offset = "0xB93EEC", VA = "0xB93EEC")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x17000035")]
	public static bool IsAvailable
	{
		[Token(Token = "0x6000291")]
		[Address(RVA = "0xB90E6C", Offset = "0xB90E6C", VA = "0xB90E6C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000036")]
	public static bool IsPlaying
	{
		[Token(Token = "0x6000292")]
		[Address(RVA = "0xB925FC", Offset = "0xB925FC", VA = "0xB925FC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000037")]
	public static PlabackState CurrentPlaybackState
	{
		[Token(Token = "0x6000293")]
		[Address(RVA = "0xB941BC", Offset = "0xB941BC", VA = "0xB941BC")]
		get
		{
			return default(PlabackState);
		}
	}

	[Token(Token = "0x17000038")]
	public static long Duration
	{
		[Token(Token = "0x6000294")]
		[Address(RVA = "0xB92820", Offset = "0xB92820", VA = "0xB92820")]
		get
		{
			return default(long);
		}
	}

	[Token(Token = "0x17000039")]
	public static StereoMode VideoStereoMode
	{
		[Token(Token = "0x6000295")]
		[Address(RVA = "0xB91494", Offset = "0xB91494", VA = "0xB91494")]
		get
		{
			return default(StereoMode);
		}
	}

	[Token(Token = "0x1700003A")]
	public static int VideoWidth
	{
		[Token(Token = "0x6000296")]
		[Address(RVA = "0xB9126C", Offset = "0xB9126C", VA = "0xB9126C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700003B")]
	public static int VideoHeight
	{
		[Token(Token = "0x6000297")]
		[Address(RVA = "0xB91380", Offset = "0xB91380", VA = "0xB91380")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700003C")]
	public static long PlaybackPosition
	{
		[Token(Token = "0x6000298")]
		[Address(RVA = "0xB9270C", Offset = "0xB9270C", VA = "0xB9270C")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x6000299")]
		[Address(RVA = "0xB91CFC", Offset = "0xB91CFC", VA = "0xB91CFC")]
		set
		{
		}
	}

	[Token(Token = "0x600029A")]
	[Address(RVA = "0xB942D0", Offset = "0xB942D0", VA = "0xB942D0")]
	public static void PlayVideo(string path, string drmLicenseUrl, IntPtr surfaceObj)
	{
	}

	[Token(Token = "0x600029B")]
	[Address(RVA = "0xB92BE8", Offset = "0xB92BE8", VA = "0xB92BE8")]
	public static void Stop()
	{
	}

	[Token(Token = "0x600029C")]
	[Address(RVA = "0xB91948", Offset = "0xB91948", VA = "0xB91948")]
	public static void Play()
	{
	}

	[Token(Token = "0x600029D")]
	[Address(RVA = "0xB91AE8", Offset = "0xB91AE8", VA = "0xB91AE8")]
	public static void Pause()
	{
	}

	[Token(Token = "0x600029E")]
	[Address(RVA = "0xB929E8", Offset = "0xB929E8", VA = "0xB929E8")]
	public static void SetPlaybackSpeed(float speed)
	{
	}

	[Token(Token = "0x600029F")]
	[Address(RVA = "0xB944F0", Offset = "0xB944F0", VA = "0xB944F0")]
	public static void SetLooping(bool looping)
	{
	}

	[Token(Token = "0x60002A0")]
	[Address(RVA = "0xB92414", Offset = "0xB92414", VA = "0xB92414")]
	public static void SetListenerRotation(Quaternion rotation)
	{
	}
}
[Token(Token = "0x20000BA")]
public class ButtonDownListener : MonoBehaviour, IPointerDownHandler, IEventSystemHandler
{
	[Token(Token = "0x1400000F")]
	public event Action onButtonDown
	{
		[Token(Token = "0x60002A2")]
		[Address(RVA = "0xB4DBC4", Offset = "0xB4DBC4", VA = "0xB4DBC4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x774DE8", Offset = "0x774DE8")]
		add
		{
		}
		[Token(Token = "0x60002A3")]
		[Address(RVA = "0xB4DC64", Offset = "0xB4DC64", VA = "0xB4DC64")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x774DF8", Offset = "0x774DF8")]
		remove
		{
		}
	}

	[Token(Token = "0x60002A4")]
	[Address(RVA = "0xB4DD04", Offset = "0xB4DD04", VA = "0xB4DD04", Slot = "4")]
	public void OnPointerDown(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60002A5")]
	[Address(RVA = "0xB4DD18", Offset = "0xB4DD18", VA = "0xB4DD18")]
	public ButtonDownListener()
	{
	}
}
[Token(Token = "0x20000BB")]
public class MediaPlayerImage : Image
{
	[Token(Token = "0x20000BC")]
	public enum ButtonType
	{
		[Token(Token = "0x40003FE")]
		Play,
		[Token(Token = "0x40003FF")]
		Pause,
		[Token(Token = "0x4000400")]
		FastForward,
		[Token(Token = "0x4000401")]
		Rewind,
		[Token(Token = "0x4000402")]
		SkipForward,
		[Token(Token = "0x4000403")]
		SkipBack,
		[Token(Token = "0x4000404")]
		Stop
	}

	[Token(Token = "0x40003FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[SerializeField]
	private ButtonType m_ButtonType;

	[Token(Token = "0x1700003D")]
	public ButtonType buttonType
	{
		[Token(Token = "0x60002A6")]
		[Address(RVA = "0xE59A80", Offset = "0xE59A80", VA = "0xE59A80")]
		get
		{
			return default(ButtonType);
		}
		[Token(Token = "0x60002A7")]
		[Address(RVA = "0xE59A88", Offset = "0xE59A88", VA = "0xE59A88")]
		set
		{
		}
	}

	[Token(Token = "0x60002A8")]
	[Address(RVA = "0xE59AAC", Offset = "0xE59AAC", VA = "0xE59AAC", Slot = "44")]
	protected override void OnPopulateMesh(VertexHelper toFill)
	{
	}

	[Token(Token = "0x60002A9")]
	[Address(RVA = "0xE5AF44", Offset = "0xE5AF44", VA = "0xE5AF44")]
	public MediaPlayerImage()
	{
	}
}
[Token(Token = "0x20000BD")]
public class MoviePlayerSample : MonoBehaviour
{
	[Token(Token = "0x20000BE")]
	public enum VideoShape
	{
		[Token(Token = "0x4000419")]
		_360,
		[Token(Token = "0x400041A")]
		_180,
		[Token(Token = "0x400041B")]
		Quad
	}

	[Token(Token = "0x20000BF")]
	public enum VideoStereo
	{
		[Token(Token = "0x400041D")]
		Mono,
		[Token(Token = "0x400041E")]
		TopBottom,
		[Token(Token = "0x400041F")]
		LeftRight,
		[Token(Token = "0x4000420")]
		BottomTop
	}

	[Token(Token = "0x20000C0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76F7CC", Offset = "0x76F7CC")]
	private sealed class <Start>d__33 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000421")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000422")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000423")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MoviePlayerSample <>4__this;

		[Token(Token = "0x17000041")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60002C0")]
			[Address(RVA = "0xB2E408", Offset = "0xB2E408", VA = "0xB2E408", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000042")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60002C2")]
			[Address(RVA = "0xB2E450", Offset = "0xB2E450", VA = "0xB2E450", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60002BD")]
		[Address(RVA = "0xB2E220", Offset = "0xB2E220", VA = "0xB2E220")]
		[DebuggerHidden]
		public <Start>d__33(int <>1__state)
		{
		}

		[Token(Token = "0x60002BE")]
		[Address(RVA = "0xB2E24C", Offset = "0xB2E24C", VA = "0xB2E24C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60002BF")]
		[Address(RVA = "0xB2E250", Offset = "0xB2E250", VA = "0xB2E250", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60002C1")]
		[Address(RVA = "0xB2E410", Offset = "0xB2E410", VA = "0xB2E410", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000C1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76F7DC", Offset = "0x76F7DC")]
	private sealed class <>c__DisplayClass34_0
	{
		[Token(Token = "0x4000424")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string moviePath;

		[Token(Token = "0x4000425")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string drmLicencesUrl;

		[Token(Token = "0x4000426")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MoviePlayerSample <>4__this;

		[Token(Token = "0x60002C3")]
		[Address(RVA = "0xB2E128", Offset = "0xB2E128", VA = "0xB2E128")]
		public <>c__DisplayClass34_0()
		{
		}

		[Token(Token = "0x60002C4")]
		[Address(RVA = "0xB2E130", Offset = "0xB2E130", VA = "0xB2E130")]
		internal void <Play>b__0()
		{
		}
	}

	[Token(Token = "0x4000405")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool videoPausedBeforeAppPause;

	[Token(Token = "0x4000406")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private VideoPlayer videoPlayer;

	[Token(Token = "0x4000407")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVROverlay overlay;

	[Token(Token = "0x4000408")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Renderer mediaRenderer;

	[Token(Token = "0x4000409")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x771BDC", Offset = "0x771BDC")]
	private bool <IsPlaying>k__BackingField;

	[Token(Token = "0x400040A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x771BEC", Offset = "0x771BEC")]
	private long <Duration>k__BackingField;

	[Token(Token = "0x400040B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x771BFC", Offset = "0x771BFC")]
	private long <PlaybackPosition>k__BackingField;

	[Token(Token = "0x400040C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private RenderTexture copyTexture;

	[Token(Token = "0x400040D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Material externalTex2DMaterial;

	[Token(Token = "0x400040E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string MovieName;

	[Token(Token = "0x400040F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public string DrmLicenseUrl;

	[Token(Token = "0x4000410")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool LoopVideo;

	[Token(Token = "0x4000411")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public VideoShape Shape;

	[Token(Token = "0x4000412")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public VideoStereo Stereo;

	[Token(Token = "0x4000413")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool AutoDetectStereoLayout;

	[Token(Token = "0x4000414")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7D")]
	public bool DisplayMono;

	[Token(Token = "0x4000415")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private VideoShape _LastShape;

	[Token(Token = "0x4000416")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private VideoStereo _LastStereo;

	[Token(Token = "0x4000417")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool _LastDisplayMono;

	[Token(Token = "0x1700003E")]
	public bool IsPlaying
	{
		[Token(Token = "0x60002AA")]
		[Address(RVA = "0xB90BC4", Offset = "0xB90BC4", VA = "0xB90BC4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x774E08", Offset = "0x774E08")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60002AB")]
		[Address(RVA = "0xB90BCC", Offset = "0xB90BCC", VA = "0xB90BCC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x774E18", Offset = "0x774E18")]
		private set
		{
		}
	}

	[Token(Token = "0x1700003F")]
	public long Duration
	{
		[Token(Token = "0x60002AC")]
		[Address(RVA = "0xB90BD8", Offset = "0xB90BD8", VA = "0xB90BD8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x774E28", Offset = "0x774E28")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x60002AD")]
		[Address(RVA = "0xB90BE0", Offset = "0xB90BE0", VA = "0xB90BE0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x774E38", Offset = "0x774E38")]
		private set
		{
		}
	}

	[Token(Token = "0x17000040")]
	public long PlaybackPosition
	{
		[Token(Token = "0x60002AE")]
		[Address(RVA = "0xB90BE8", Offset = "0xB90BE8", VA = "0xB90BE8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x774E48", Offset = "0x774E48")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x60002AF")]
		[Address(RVA = "0xB90BF0", Offset = "0xB90BF0", VA = "0xB90BF0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x774E58", Offset = "0x774E58")]
		private set
		{
		}
	}

	[Token(Token = "0x60002B0")]
	[Address(RVA = "0xB90BF8", Offset = "0xB90BF8", VA = "0xB90BF8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002B1")]
	[Address(RVA = "0xB90EDC", Offset = "0xB90EDC", VA = "0xB90EDC")]
	private bool IsLocalVideo(string movieName)
	{
		return default(bool);
	}

	[Token(Token = "0x60002B2")]
	[Address(RVA = "0xB90F40", Offset = "0xB90F40", VA = "0xB90F40")]
	private void UpdateShapeAndStereo()
	{
	}

	[Token(Token = "0x60002B3")]
	[Address(RVA = "0xB915A8", Offset = "0xB915A8", VA = "0xB915A8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x774E68", Offset = "0x774E68")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x60002B4")]
	[Address(RVA = "0xB91614", Offset = "0xB91614", VA = "0xB91614")]
	public void Play(string moviePath, string drmLicencesUrl)
	{
	}

	[Token(Token = "0x60002B5")]
	[Address(RVA = "0xB918B8", Offset = "0xB918B8", VA = "0xB918B8")]
	public void Play()
	{
	}

	[Token(Token = "0x60002B6")]
	[Address(RVA = "0xB91A5C", Offset = "0xB91A5C", VA = "0xB91A5C")]
	public void Pause()
	{
	}

	[Token(Token = "0x60002B7")]
	[Address(RVA = "0xB91BFC", Offset = "0xB91BFC", VA = "0xB91BFC")]
	public void SeekTo(long position)
	{
	}

	[Token(Token = "0x60002B8")]
	[Address(RVA = "0xB91E68", Offset = "0xB91E68", VA = "0xB91E68")]
	private void Update()
	{
	}

	[Token(Token = "0x60002B9")]
	[Address(RVA = "0xB92934", Offset = "0xB92934", VA = "0xB92934")]
	public void SetPlaybackSpeed(float speed)
	{
	}

	[Token(Token = "0x60002BA")]
	[Address(RVA = "0xB92B5C", Offset = "0xB92B5C", VA = "0xB92B5C")]
	public void Stop()
	{
	}

	[Token(Token = "0x60002BB")]
	[Address(RVA = "0xB92CFC", Offset = "0xB92CFC", VA = "0xB92CFC")]
	private void OnApplicationPause(bool appWasPaused)
	{
	}

	[Token(Token = "0x60002BC")]
	[Address(RVA = "0xB92DE8", Offset = "0xB92DE8", VA = "0xB92DE8")]
	public MoviePlayerSample()
	{
	}
}
[Token(Token = "0x20000C2")]
public class MoviePlayerSampleControls : MonoBehaviour
{
	[Token(Token = "0x20000C3")]
	private enum PlaybackState
	{
		[Token(Token = "0x400043D")]
		Playing,
		[Token(Token = "0x400043E")]
		Paused,
		[Token(Token = "0x400043F")]
		Rewinding,
		[Token(Token = "0x4000440")]
		FastForwarding
	}

	[Token(Token = "0x4000427")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MoviePlayerSample Player;

	[Token(Token = "0x4000428")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVRInputModule InputModule;

	[Token(Token = "0x4000429")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRGazePointer GazePointer;

	[Token(Token = "0x400042A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject LeftHand;

	[Token(Token = "0x400042B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject RightHand;

	[Token(Token = "0x400042C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Canvas Canvas;

	[Token(Token = "0x400042D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ButtonDownListener PlayPause;

	[Token(Token = "0x400042E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public MediaPlayerImage PlayPauseImage;

	[Token(Token = "0x400042F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Slider ProgressBar;

	[Token(Token = "0x4000430")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public ButtonDownListener FastForward;

	[Token(Token = "0x4000431")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public MediaPlayerImage FastForwardImage;

	[Token(Token = "0x4000432")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ButtonDownListener Rewind;

	[Token(Token = "0x4000433")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public MediaPlayerImage RewindImage;

	[Token(Token = "0x4000434")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float TimeoutTime;

	[Token(Token = "0x4000435")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private bool _isVisible;

	[Token(Token = "0x4000436")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float _lastButtonTime;

	[Token(Token = "0x4000437")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private bool _didSeek;

	[Token(Token = "0x4000438")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private long _seekPreviousPosition;

	[Token(Token = "0x4000439")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private long _rewindStartPosition;

	[Token(Token = "0x400043A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float _rewindStartTime;

	[Token(Token = "0x400043B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private PlaybackState _state;

	[Token(Token = "0x60002C5")]
	[Address(RVA = "0xB92DF8", Offset = "0xB92DF8", VA = "0xB92DF8")]
	private void Start()
	{
	}

	[Token(Token = "0x60002C6")]
	[Address(RVA = "0xB93104", Offset = "0xB93104", VA = "0xB93104")]
	private void OnPlayPauseClicked()
	{
	}

	[Token(Token = "0x60002C7")]
	[Address(RVA = "0xB93230", Offset = "0xB93230", VA = "0xB93230")]
	private void OnFastForwardClicked()
	{
	}

	[Token(Token = "0x60002C8")]
	[Address(RVA = "0xB9333C", Offset = "0xB9333C", VA = "0xB9333C")]
	private void OnRewindClicked()
	{
	}

	[Token(Token = "0x60002C9")]
	[Address(RVA = "0xB9341C", Offset = "0xB9341C", VA = "0xB9341C")]
	private void OnSeekBarMoved(float value)
	{
	}

	[Token(Token = "0x60002CA")]
	[Address(RVA = "0xB93310", Offset = "0xB93310", VA = "0xB93310")]
	private void Seek(long pos)
	{
	}

	[Token(Token = "0x60002CB")]
	[Address(RVA = "0xB9347C", Offset = "0xB9347C", VA = "0xB9347C")]
	private void Update()
	{
	}

	[Token(Token = "0x60002CC")]
	[Address(RVA = "0xB92FF0", Offset = "0xB92FF0", VA = "0xB92FF0")]
	private void SetVisible(bool visible)
	{
	}

	[Token(Token = "0x60002CD")]
	[Address(RVA = "0xB937BC", Offset = "0xB937BC", VA = "0xB937BC")]
	public MoviePlayerSampleControls()
	{
	}
}
[Token(Token = "0x20000C4")]
public static class VectorUtil
{
	[Token(Token = "0x60002CE")]
	[Address(RVA = "0xAF7CE8", Offset = "0xAF7CE8", VA = "0xAF7CE8")]
	public static Vector4 ToVector(this Rect rect)
	{
		return default(Vector4);
	}
}
[Token(Token = "0x20000C5")]
public class AppDeeplinkUI : MonoBehaviour
{
	[Token(Token = "0x4000441")]
	private const ulong UNITY_COMPANION_APP_ID = 3535750239844224uL;

	[Token(Token = "0x4000442")]
	private const ulong UNREAL_COMPANION_APP_ID = 4055411724486843uL;

	[Token(Token = "0x4000443")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private RectTransform deeplinkAppId;

	[Token(Token = "0x4000444")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private RectTransform deeplinkMessage;

	[Token(Token = "0x4000445")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RectTransform uiLaunchType;

	[Token(Token = "0x4000446")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private RectTransform uiLaunchSource;

	[Token(Token = "0x4000447")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private RectTransform uiDeepLinkMessage;

	[Token(Token = "0x4000448")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool inMenu;

	[Token(Token = "0x60002CF")]
	[Address(RVA = "0xB3F9A0", Offset = "0xB3F9A0", VA = "0xB3F9A0")]
	private void Start()
	{
	}

	[Token(Token = "0x60002D0")]
	[Address(RVA = "0xB3FD48", Offset = "0xB3FD48", VA = "0xB3FD48")]
	private void Update()
	{
	}

	[Token(Token = "0x60002D1")]
	[Address(RVA = "0xB3FFD4", Offset = "0xB3FFD4", VA = "0xB3FFD4")]
	private void LaunchUnrealDeeplinkSample()
	{
	}

	[Token(Token = "0x60002D2")]
	[Address(RVA = "0xB4013C", Offset = "0xB4013C", VA = "0xB4013C")]
	private void LaunchSelf()
	{
	}

	[Token(Token = "0x60002D3")]
	[Address(RVA = "0xB402A8", Offset = "0xB402A8", VA = "0xB402A8")]
	private void LaunchOtherApp()
	{
	}

	[Token(Token = "0x60002D4")]
	[Address(RVA = "0xB40438", Offset = "0xB40438", VA = "0xB40438")]
	public AppDeeplinkUI()
	{
	}
}
[Token(Token = "0x20000C6")]
public class CustomDebugUI : MonoBehaviour
{
	[Token(Token = "0x4000449")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private RectTransform textPrefab;

	[Token(Token = "0x400044A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static CustomDebugUI instance;

	[Token(Token = "0x400044B")]
	private const BindingFlags privateFlags = BindingFlags.Instance | BindingFlags.NonPublic;

	[Token(Token = "0x60002D5")]
	[Address(RVA = "0x11EB564", Offset = "0x11EB564", VA = "0x11EB564")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002D6")]
	[Address(RVA = "0x11EB5B4", Offset = "0x11EB5B4", VA = "0x11EB5B4")]
	private void Start()
	{
	}

	[Token(Token = "0x60002D7")]
	[Address(RVA = "0x11EB5B8", Offset = "0x11EB5B8", VA = "0x11EB5B8")]
	private void Update()
	{
	}

	[Token(Token = "0x60002D8")]
	[Address(RVA = "0x11EB5BC", Offset = "0x11EB5BC", VA = "0x11EB5BC")]
	public RectTransform AddTextField(string label, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x60002D9")]
	[Address(RVA = "0x11EB818", Offset = "0x11EB818", VA = "0x11EB818")]
	public void RemoveFromCanvas(RectTransform element, int targetCanvas = 0)
	{
	}

	[Token(Token = "0x60002DA")]
	[Address(RVA = "0x11EBA48", Offset = "0x11EBA48", VA = "0x11EBA48")]
	public CustomDebugUI()
	{
	}
}
[Token(Token = "0x20000C7")]
public class DebugUISample : MonoBehaviour
{
	[Token(Token = "0x400044C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool inMenu;

	[Token(Token = "0x400044D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Text sliderText;

	[Token(Token = "0x60002DB")]
	[Address(RVA = "0x11EEAA4", Offset = "0x11EEAA4", VA = "0x11EEAA4")]
	private void Start()
	{
	}

	[Token(Token = "0x60002DC")]
	[Address(RVA = "0x11EEFA8", Offset = "0x11EEFA8", VA = "0x11EEFA8")]
	public void TogglePressed(Toggle t)
	{
	}

	[Token(Token = "0x60002DD")]
	[Address(RVA = "0x11EF068", Offset = "0x11EF068", VA = "0x11EF068")]
	public void RadioPressed(string radioLabel, string group, Toggle t)
	{
	}

	[Token(Token = "0x60002DE")]
	[Address(RVA = "0x11EF294", Offset = "0x11EF294", VA = "0x11EF294")]
	public void SliderPressed(float f)
	{
	}

	[Token(Token = "0x60002DF")]
	[Address(RVA = "0x11EF374", Offset = "0x11EF374", VA = "0x11EF374")]
	private void Update()
	{
	}

	[Token(Token = "0x60002E0")]
	[Address(RVA = "0x11EF458", Offset = "0x11EF458", VA = "0x11EF458")]
	private void LogButtonPressed()
	{
	}

	[Token(Token = "0x60002E1")]
	[Address(RVA = "0x11EF4CC", Offset = "0x11EF4CC", VA = "0x11EF4CC")]
	public DebugUISample()
	{
	}

	[Token(Token = "0x60002E2")]
	[Address(RVA = "0x11EF4D4", Offset = "0x11EF4D4", VA = "0x11EF4D4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x774F28", Offset = "0x774F28")]
	private void <Start>b__2_0(Toggle t)
	{
	}

	[Token(Token = "0x60002E3")]
	[Address(RVA = "0x11EF538", Offset = "0x11EF538", VA = "0x11EF538")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x774F38", Offset = "0x774F38")]
	private void <Start>b__2_1(Toggle t)
	{
	}

	[Token(Token = "0x60002E4")]
	[Address(RVA = "0x11EF59C", Offset = "0x11EF59C", VA = "0x11EF59C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x774F48", Offset = "0x774F48")]
	private void <Start>b__2_2(Toggle t)
	{
	}

	[Token(Token = "0x60002E5")]
	[Address(RVA = "0x11EF600", Offset = "0x11EF600", VA = "0x11EF600")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x774F58", Offset = "0x774F58")]
	private void <Start>b__2_3(Toggle t)
	{
	}
}
[Token(Token = "0x20000C8")]
public class AnalyticsUI : MonoBehaviour
{
	[Token(Token = "0x60002E6")]
	[Address(RVA = "0xB3B060", Offset = "0xB3B060", VA = "0xB3B060")]
	public AnalyticsUI()
	{
	}
}
[Token(Token = "0x20000C9")]
public class SampleUI : MonoBehaviour
{
	[Token(Token = "0x400044E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private RectTransform collectionButton;

	[Token(Token = "0x400044F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private RectTransform inputText;

	[Token(Token = "0x4000450")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RectTransform valueText;

	[Token(Token = "0x4000451")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool inMenu;

	[Token(Token = "0x60002E7")]
	[Address(RVA = "0xCFD754", Offset = "0xCFD754", VA = "0xCFD754")]
	private void Start()
	{
	}

	[Token(Token = "0x60002E8")]
	[Address(RVA = "0xCFD7F8", Offset = "0xCFD7F8", VA = "0xCFD7F8")]
	private void Update()
	{
	}

	[Token(Token = "0x60002E9")]
	[Address(RVA = "0xCFD8E4", Offset = "0xCFD8E4", VA = "0xCFD8E4")]
	private string GetText()
	{
		return null;
	}

	[Token(Token = "0x60002EA")]
	[Address(RVA = "0xCFD944", Offset = "0xCFD944", VA = "0xCFD944")]
	public SampleUI()
	{
	}
}
[Token(Token = "0x20000CA")]
public class StartCrashlytics : MonoBehaviour
{
	[Token(Token = "0x60002EB")]
	[Address(RVA = "0xB81874", Offset = "0xB81874", VA = "0xB81874")]
	public StartCrashlytics()
	{
	}
}
[Token(Token = "0x20000CB")]
public class HandsActiveChecker : MonoBehaviour
{
	[Token(Token = "0x20000CC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76F7FC", Offset = "0x76F7FC")]
	private sealed class <GetCenterEye>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000456")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000457")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000458")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HandsActiveChecker <>4__this;

		[Token(Token = "0x17000043")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60002F3")]
			[Address(RVA = "0xB2BB7C", Offset = "0xB2BB7C", VA = "0xB2BB7C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000044")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60002F5")]
			[Address(RVA = "0xB2BBC4", Offset = "0xB2BBC4", VA = "0xB2BBC4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60002F0")]
		[Address(RVA = "0xB2BA2C", Offset = "0xB2BA2C", VA = "0xB2BA2C")]
		[DebuggerHidden]
		public <GetCenterEye>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x60002F1")]
		[Address(RVA = "0xB2BA58", Offset = "0xB2BA58", VA = "0xB2BA58", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60002F2")]
		[Address(RVA = "0xB2BA5C", Offset = "0xB2BA5C", VA = "0xB2BA5C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60002F4")]
		[Address(RVA = "0xB2BB84", Offset = "0xB2BB84", VA = "0xB2BB84", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000452")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject _notificationPrefab;

	[Token(Token = "0x4000453")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject _notification;

	[Token(Token = "0x4000454")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVRCameraRig _cameraRig;

	[Token(Token = "0x4000455")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform _centerEye;

	[Token(Token = "0x60002EC")]
	[Address(RVA = "0xC75DB8", Offset = "0xC75DB8", VA = "0xC75DB8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002ED")]
	[Address(RVA = "0xC75EBC", Offset = "0xC75EBC", VA = "0xC75EBC")]
	private void Update()
	{
	}

	[Token(Token = "0x60002EE")]
	[Address(RVA = "0xC75E50", Offset = "0xC75E50", VA = "0xC75E50")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x774F68", Offset = "0x774F68")]
	private IEnumerator GetCenterEye()
	{
		return null;
	}

	[Token(Token = "0x60002EF")]
	[Address(RVA = "0xC76068", Offset = "0xC76068", VA = "0xC76068")]
	public HandsActiveChecker()
	{
	}
}
[Token(Token = "0x20000CD")]
[ExecuteInEditMode]
public class CharacterCapsule : MonoBehaviour
{
	[Token(Token = "0x4000459")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private CharacterController _character;

	[Token(Token = "0x400045A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MeshFilter _meshFilter;

	[Token(Token = "0x400045B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float _height;

	[Token(Token = "0x400045C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float _radius;

	[Token(Token = "0x400045D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x771C2C", Offset = "0x771C2C")]
	public int SubdivisionsU;

	[Token(Token = "0x400045E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x771C48", Offset = "0x771C48")]
	public int SubdivisionsV;

	[Token(Token = "0x400045F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int _subdivisionU;

	[Token(Token = "0x4000460")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int _subdivisionV;

	[Token(Token = "0x4000461")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3[] _vertices;

	[Token(Token = "0x4000462")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int[] _triangles;

	[Token(Token = "0x60002F6")]
	[Address(RVA = "0x11E2EA0", Offset = "0x11E2EA0", VA = "0x11E2EA0")]
	private void Update()
	{
	}

	[Token(Token = "0x60002F7")]
	[Address(RVA = "0x11E38AC", Offset = "0x11E38AC", VA = "0x11E38AC")]
	public CharacterCapsule()
	{
	}
}
[Token(Token = "0x20000CE")]
public class LocomotionSampleSupport : MonoBehaviour
{
	[Token(Token = "0x4000463")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private LocomotionController lc;

	[Token(Token = "0x4000464")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool inMenu;

	[Token(Token = "0x17000045")]
	private LocomotionTeleport TeleportController
	{
		[Token(Token = "0x60002F8")]
		[Address(RVA = "0xBD6100", Offset = "0xBD6100", VA = "0xBD6100")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60002F9")]
	[Address(RVA = "0xBD6154", Offset = "0xBD6154", VA = "0xBD6154")]
	public void Start()
	{
	}

	[Token(Token = "0x60002FA")]
	[Address(RVA = "0xBD6570", Offset = "0xBD6570", VA = "0xBD6570")]
	public void Update()
	{
	}

	[Token(Token = "0x60002FB")]
	[Address(RVA = "0xBD665C", Offset = "0xBD665C", VA = "0xBD665C")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x775018", Offset = "0x775018")]
	private static void Log(string msg)
	{
	}

	[Token(Token = "0x60002FC")]
	public static TActivate ActivateCategory<TCategory, TActivate>(GameObject target) where TCategory : MonoBehaviour where TActivate : MonoBehaviour
	{
		return null;
	}

	[Token(Token = "0x60002FD")]
	protected void ActivateHandlers<TInput, TAim, TTarget, TOrientation, TTransition>() where TInput : TeleportInputHandler where TAim : TeleportAimHandler where TTarget : TeleportTargetHandler where TOrientation : TeleportOrientationHandler where TTransition : TeleportTransition
	{
	}

	[Token(Token = "0x60002FE")]
	protected void ActivateInput<TActivate>() where TActivate : TeleportInputHandler
	{
	}

	[Token(Token = "0x60002FF")]
	protected void ActivateAim<TActivate>() where TActivate : TeleportAimHandler
	{
	}

	[Token(Token = "0x6000300")]
	protected void ActivateTarget<TActivate>() where TActivate : TeleportTargetHandler
	{
	}

	[Token(Token = "0x6000301")]
	protected void ActivateOrientation<TActivate>() where TActivate : TeleportOrientationHandler
	{
	}

	[Token(Token = "0x6000302")]
	protected void ActivateTransition<TActivate>() where TActivate : TeleportTransition
	{
	}

	[Token(Token = "0x6000303")]
	protected TActivate ActivateCategory<TCategory, TActivate>() where TCategory : MonoBehaviour where TActivate : MonoBehaviour
	{
		return null;
	}

	[Token(Token = "0x6000304")]
	[Address(RVA = "0xBD66C0", Offset = "0xBD66C0", VA = "0xBD66C0")]
	protected void UpdateToggle(Toggle toggle, bool enabled)
	{
	}

	[Token(Token = "0x6000305")]
	[Address(RVA = "0xBD66FC", Offset = "0xBD66FC", VA = "0xBD66FC")]
	private void SetupNonCap()
	{
	}

	[Token(Token = "0x6000306")]
	[Address(RVA = "0xBD676C", Offset = "0xBD676C", VA = "0xBD676C")]
	private void SetupTeleportDefaults()
	{
	}

	[Token(Token = "0x6000307")]
	[Address(RVA = "0xBD68BC", Offset = "0xBD68BC", VA = "0xBD68BC")]
	protected GameObject AddInstance(GameObject template, string label)
	{
		return null;
	}

	[Token(Token = "0x6000308")]
	[Address(RVA = "0xBD6998", Offset = "0xBD6998", VA = "0xBD6998")]
	private void SetupNodeTeleport()
	{
	}

	[Token(Token = "0x6000309")]
	[Address(RVA = "0xBD6448", Offset = "0xBD6448", VA = "0xBD6448")]
	private void SetupTwoStickTeleport()
	{
	}

	[Token(Token = "0x600030A")]
	[Address(RVA = "0xBD6A6C", Offset = "0xBD6A6C", VA = "0xBD6A6C")]
	private void SetupWalkOnly()
	{
	}

	[Token(Token = "0x600030B")]
	[Address(RVA = "0xBD6AD4", Offset = "0xBD6AD4", VA = "0xBD6AD4")]
	private void SetupLeftStrafeRightTeleport()
	{
	}

	[Token(Token = "0x600030C")]
	[Address(RVA = "0xBD6BE8", Offset = "0xBD6BE8", VA = "0xBD6BE8")]
	public LocomotionSampleSupport()
	{
	}
}
[Token(Token = "0x20000CF")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x76F81C", Offset = "0x76F81C")]
public class OVROverlayCanvas : MonoBehaviour
{
	[Token(Token = "0x20000D0")]
	public enum DrawMode
	{
		[Token(Token = "0x400047A")]
		Opaque,
		[Token(Token = "0x400047B")]
		OpaqueWithClip,
		[Token(Token = "0x400047C")]
		TransparentDefaultAlpha,
		[Token(Token = "0x400047D")]
		TransparentCorrectAlpha
	}

	[Token(Token = "0x4000465")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	[SerializeField]
	private Shader _transparentShader;

	[Token(Token = "0x4000466")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	[SerializeField]
	private Shader _opaqueShader;

	[Token(Token = "0x4000467")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RectTransform _rectTransform;

	[Token(Token = "0x4000468")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Canvas _canvas;

	[Token(Token = "0x4000469")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Camera _camera;

	[Token(Token = "0x400046A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private OVROverlay _overlay;

	[Token(Token = "0x400046B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private RenderTexture _renderTexture;

	[Token(Token = "0x400046C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private MeshRenderer _meshRenderer;

	[Token(Token = "0x400046D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Mesh _quad;

	[Token(Token = "0x400046E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Material _defaultMat;

	[Token(Token = "0x400046F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int MaxTextureSize;

	[Token(Token = "0x4000470")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public int MinTextureSize;

	[Token(Token = "0x4000471")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float PixelsPerUnit;

	[Token(Token = "0x4000472")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public int DrawRate;

	[Token(Token = "0x4000473")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public int DrawFrameOffset;

	[Token(Token = "0x4000474")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool Expensive;

	[Token(Token = "0x4000475")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public int Layer;

	[Token(Token = "0x4000476")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public DrawMode Opacity;

	[Token(Token = "0x4000477")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool ScaleViewport;

	[Token(Token = "0x4000478")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Plane[] _FrustumPlanes;

	[Token(Token = "0x17000046")]
	public bool overlayEnabled
	{
		[Token(Token = "0x6000313")]
		[Address(RVA = "0xB97EEC", Offset = "0xB97EEC", VA = "0xB97EEC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000314")]
		[Address(RVA = "0xB97F7C", Offset = "0xB97F7C", VA = "0xB97F7C")]
		set
		{
		}
	}

	[Token(Token = "0x600030D")]
	[Address(RVA = "0xB96A24", Offset = "0xB96A24", VA = "0xB96A24")]
	private void Start()
	{
	}

	[Token(Token = "0x600030E")]
	[Address(RVA = "0xB97558", Offset = "0xB97558", VA = "0xB97558")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600030F")]
	[Address(RVA = "0xB975D8", Offset = "0xB975D8", VA = "0xB975D8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000310")]
	[Address(RVA = "0xB976C8", Offset = "0xB976C8", VA = "0xB976C8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000311")]
	[Address(RVA = "0xB977B8", Offset = "0xB977B8", VA = "0xB977B8", Slot = "4")]
	protected virtual bool ShouldRender()
	{
		return default(bool);
	}

	[Token(Token = "0x6000312")]
	[Address(RVA = "0xB979C4", Offset = "0xB979C4", VA = "0xB979C4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000315")]
	[Address(RVA = "0xB98048", Offset = "0xB98048", VA = "0xB98048")]
	public OVROverlayCanvas()
	{
	}
}
[Token(Token = "0x20000D1")]
public class AugmentedObject : MonoBehaviour
{
	[Token(Token = "0x400047E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRInput.Controller controllerHand;

	[Token(Token = "0x400047F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform shadow;

	[Token(Token = "0x4000480")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool groundShadow;

	[Token(Token = "0x6000317")]
	[Address(RVA = "0xB449C0", Offset = "0xB449C0", VA = "0xB449C0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000318")]
	[Address(RVA = "0xB44B74", Offset = "0xB44B74", VA = "0xB44B74")]
	private void Update()
	{
	}

	[Token(Token = "0x6000319")]
	[Address(RVA = "0xB44CFC", Offset = "0xB44CFC", VA = "0xB44CFC")]
	public void Grab(OVRInput.Controller grabHand)
	{
	}

	[Token(Token = "0x600031A")]
	[Address(RVA = "0xB44D04", Offset = "0xB44D04", VA = "0xB44D04")]
	public void Release()
	{
	}

	[Token(Token = "0x600031B")]
	[Address(RVA = "0xB44CEC", Offset = "0xB44CEC", VA = "0xB44CEC")]
	private void ToggleShadowType()
	{
	}

	[Token(Token = "0x600031C")]
	[Address(RVA = "0xB44D0C", Offset = "0xB44D0C", VA = "0xB44D0C")]
	public AugmentedObject()
	{
	}
}
[Token(Token = "0x20000D2")]
public class BrushController : MonoBehaviour
{
	[Token(Token = "0x20000D3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76F87C", Offset = "0x76F87C")]
	private sealed class <FadeCameraClearColor>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000485")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000486")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000487")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float fadeTime;

		[Token(Token = "0x4000488")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Color newColor;

		[Token(Token = "0x4000489")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <timer>5__2;

		[Token(Token = "0x400048A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Color <currentColor>5__3;

		[Token(Token = "0x17000047")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000327")]
			[Address(RVA = "0xB27C98", Offset = "0xB27C98", VA = "0xB27C98", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000048")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000329")]
			[Address(RVA = "0xB27CE0", Offset = "0xB27CE0", VA = "0xB27CE0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000324")]
		[Address(RVA = "0xB27B74", Offset = "0xB27B74", VA = "0xB27B74")]
		[DebuggerHidden]
		public <FadeCameraClearColor>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x6000325")]
		[Address(RVA = "0xB27BA0", Offset = "0xB27BA0", VA = "0xB27BA0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000326")]
		[Address(RVA = "0xB27BA4", Offset = "0xB27BA4", VA = "0xB27BA4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000328")]
		[Address(RVA = "0xB27CA0", Offset = "0xB27CA0", VA = "0xB27CA0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000D4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76F88C", Offset = "0x76F88C")]
	private sealed class <FadeSphere>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400048B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400048C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400048D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BrushController <>4__this;

		[Token(Token = "0x400048E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float fadeTime;

		[Token(Token = "0x400048F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Color newColor;

		[Token(Token = "0x4000490")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool disableOnFinish;

		[Token(Token = "0x4000491")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float <timer>5__2;

		[Token(Token = "0x4000492")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Color <currentColor>5__3;

		[Token(Token = "0x17000049")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600032D")]
			[Address(RVA = "0xB27E94", Offset = "0xB27E94", VA = "0xB27E94", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700004A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600032F")]
			[Address(RVA = "0xB27EDC", Offset = "0xB27EDC", VA = "0xB27EDC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600032A")]
		[Address(RVA = "0xB27CE8", Offset = "0xB27CE8", VA = "0xB27CE8")]
		[DebuggerHidden]
		public <FadeSphere>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x600032B")]
		[Address(RVA = "0xB27D14", Offset = "0xB27D14", VA = "0xB27D14", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600032C")]
		[Address(RVA = "0xB27D18", Offset = "0xB27D18", VA = "0xB27D18", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600032E")]
		[Address(RVA = "0xB27E9C", Offset = "0xB27E9C", VA = "0xB27E9C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000481")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PassthroughBrush brush;

	[Token(Token = "0x4000482")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshRenderer backgroundSphere;

	[Token(Token = "0x4000483")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private IEnumerator grabRoutine;

	[Token(Token = "0x4000484")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private IEnumerator releaseRoutine;

	[Token(Token = "0x600031D")]
	[Address(RVA = "0xB4C7DC", Offset = "0xB4C7DC", VA = "0xB4C7DC")]
	private void Start()
	{
	}

	[Token(Token = "0x600031E")]
	[Address(RVA = "0xB4CA70", Offset = "0xB4CA70", VA = "0xB4CA70")]
	private void Update()
	{
	}

	[Token(Token = "0x600031F")]
	[Address(RVA = "0xB4CACC", Offset = "0xB4CACC", VA = "0xB4CACC")]
	public void Grab(OVRInput.Controller grabHand)
	{
	}

	[Token(Token = "0x6000320")]
	[Address(RVA = "0xB4CC30", Offset = "0xB4CC30", VA = "0xB4CC30")]
	public void Release()
	{
	}

	[Token(Token = "0x6000321")]
	[Address(RVA = "0xB4CCF4", Offset = "0xB4CCF4", VA = "0xB4CCF4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x775050", Offset = "0x775050")]
	private IEnumerator FadeCameraClearColor(Color newColor, float fadeTime)
	{
		return null;
	}

	[Token(Token = "0x6000322")]
	[Address(RVA = "0xB4CB78", Offset = "0xB4CB78", VA = "0xB4CB78")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7750B0", Offset = "0x7750B0")]
	private IEnumerator FadeSphere(Color newColor, float fadeTime, bool disableOnFinish = false)
	{
		return null;
	}

	[Token(Token = "0x6000323")]
	[Address(RVA = "0xB4CD90", Offset = "0xB4CD90", VA = "0xB4CD90")]
	public BrushController()
	{
	}
}
[Token(Token = "0x20000D5")]
public class EnableUnpremultipliedAlpha : MonoBehaviour
{
	[Token(Token = "0x6000330")]
	[Address(RVA = "0xC67F78", Offset = "0xC67F78", VA = "0xC67F78")]
	private void Start()
	{
	}

	[Token(Token = "0x6000331")]
	[Address(RVA = "0xC67FD8", Offset = "0xC67FD8", VA = "0xC67FD8")]
	public EnableUnpremultipliedAlpha()
	{
	}
}
[Token(Token = "0x20000D6")]
public class Flashlight : MonoBehaviour
{
	[Token(Token = "0x4000493")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject lightVolume;

	[Token(Token = "0x4000494")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Light spotlight;

	[Token(Token = "0x4000495")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject bulbGlow;

	[Token(Token = "0x6000332")]
	[Address(RVA = "0xC69508", Offset = "0xC69508", VA = "0xC69508")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000333")]
	[Address(RVA = "0xC6963C", Offset = "0xC6963C", VA = "0xC6963C")]
	public void ToggleFlashlight()
	{
	}

	[Token(Token = "0x6000334")]
	[Address(RVA = "0xC696D0", Offset = "0xC696D0", VA = "0xC696D0")]
	public void EnableFlashlight(bool doEnable)
	{
	}

	[Token(Token = "0x6000335")]
	[Address(RVA = "0xC69738", Offset = "0xC69738", VA = "0xC69738")]
	public Flashlight()
	{
	}
}
[Token(Token = "0x20000D7")]
public class FlashlightController : MonoBehaviour
{
	[Token(Token = "0x20000D8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76F89C", Offset = "0x76F89C")]
	private sealed class <FadeLighting>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40004A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40004A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40004A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FlashlightController <>4__this;

		[Token(Token = "0x40004A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float fadeTime;

		[Token(Token = "0x40004A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Color newColor;

		[Token(Token = "0x40004A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float sceneLightIntensity;

		[Token(Token = "0x40004A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float <timer>5__2;

		[Token(Token = "0x40004A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Color <currentColor>5__3;

		[Token(Token = "0x40004A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float <currentLight>5__4;

		[Token(Token = "0x1700004B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000342")]
			[Address(RVA = "0xB2A800", Offset = "0xB2A800", VA = "0xB2A800", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700004C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000344")]
			[Address(RVA = "0xB2A848", Offset = "0xB2A848", VA = "0xB2A848", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600033F")]
		[Address(RVA = "0xB2A600", Offset = "0xB2A600", VA = "0xB2A600")]
		[DebuggerHidden]
		public <FadeLighting>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x6000340")]
		[Address(RVA = "0xB2A62C", Offset = "0xB2A62C", VA = "0xB2A62C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000341")]
		[Address(RVA = "0xB2A630", Offset = "0xB2A630", VA = "0xB2A630", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000343")]
		[Address(RVA = "0xB2A808", Offset = "0xB2A808", VA = "0xB2A808", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000496")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Light sceneLight;

	[Token(Token = "0x4000497")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform flashlightRoot;

	[Token(Token = "0x4000498")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 localPosition;

	[Token(Token = "0x4000499")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Quaternion localRotation;

	[Token(Token = "0x400049A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TextMesh infoText;

	[Token(Token = "0x400049B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private GrabObject externalController;

	[Token(Token = "0x400049C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private OVRSkeleton[] skeletons;

	[Token(Token = "0x400049D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private OVRHand[] hands;

	[Token(Token = "0x400049E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int handIndex;

	[Token(Token = "0x400049F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private bool pinching;

	[Token(Token = "0x6000336")]
	[Address(RVA = "0xC69740", Offset = "0xC69740", VA = "0xC69740")]
	private void Start()
	{
	}

	[Token(Token = "0x6000337")]
	[Address(RVA = "0xC699CC", Offset = "0xC699CC", VA = "0xC699CC")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000338")]
	[Address(RVA = "0xC69D1C", Offset = "0xC69D1C", VA = "0xC69D1C")]
	private void FindHands()
	{
	}

	[Token(Token = "0x6000339")]
	[Address(RVA = "0xC6A048", Offset = "0xC6A048", VA = "0xC6A048")]
	private void AlignWithHand(OVRHand hand, OVRSkeleton skeleton)
	{
	}

	[Token(Token = "0x600033A")]
	[Address(RVA = "0xC6A34C", Offset = "0xC6A34C", VA = "0xC6A34C")]
	private void AlignWithController(OVRInput.Controller controller)
	{
	}

	[Token(Token = "0x600033B")]
	[Address(RVA = "0xC6A440", Offset = "0xC6A440", VA = "0xC6A440")]
	public void Grab(OVRInput.Controller grabHand)
	{
	}

	[Token(Token = "0x600033C")]
	[Address(RVA = "0xC6A600", Offset = "0xC6A600", VA = "0xC6A600")]
	public void Release()
	{
	}

	[Token(Token = "0x600033D")]
	[Address(RVA = "0xC6A558", Offset = "0xC6A558", VA = "0xC6A558")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7751B0", Offset = "0x7751B0")]
	private IEnumerator FadeLighting(Color newColor, float sceneLightIntensity, float fadeTime)
	{
		return null;
	}

	[Token(Token = "0x600033E")]
	[Address(RVA = "0xC6A6E8", Offset = "0xC6A6E8", VA = "0xC6A6E8")]
	public FlashlightController()
	{
	}
}
[Token(Token = "0x20000D9")]
public class GrabObject : MonoBehaviour
{
	[Token(Token = "0x20000DA")]
	public enum ManipulationType
	{
		[Token(Token = "0x40004B2")]
		Default,
		[Token(Token = "0x40004B3")]
		ForcedHand,
		[Token(Token = "0x40004B4")]
		DollyHand,
		[Token(Token = "0x40004B5")]
		DollyAttached,
		[Token(Token = "0x40004B6")]
		HorizontalScaled,
		[Token(Token = "0x40004B7")]
		VerticalScaled,
		[Token(Token = "0x40004B8")]
		Menu
	}

	[Token(Token = "0x20000DB")]
	public delegate void GrabbedObject(OVRInput.Controller grabHand);

	[Token(Token = "0x20000DC")]
	public delegate void ReleasedObject();

	[Token(Token = "0x20000DD")]
	public delegate void SetCursorPosition(Vector3 cursorPosition);

	[Token(Token = "0x40004A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0x771CD4", Offset = "0x771CD4")]
	public string ObjectName;

	[Token(Token = "0x40004AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0x771CE4", Offset = "0x771CE4")]
	public string ObjectInstructions;

	[Token(Token = "0x40004AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ManipulationType objectManipulationType;

	[Token(Token = "0x40004AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool showLaserWhileGrabbed;

	[Token(Token = "0x40004AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public Quaternion grabbedRotation;

	[Token(Token = "0x40004AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GrabbedObject GrabbedObjectDelegate;

	[Token(Token = "0x40004AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ReleasedObject ReleasedObjectDelegate;

	[Token(Token = "0x40004B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public SetCursorPosition CursorPositionDelegate;

	[Token(Token = "0x6000345")]
	[Address(RVA = "0xC6FBFC", Offset = "0xC6FBFC", VA = "0xC6FBFC")]
	public void Grab(OVRInput.Controller grabHand)
	{
	}

	[Token(Token = "0x6000346")]
	[Address(RVA = "0xC6FC58", Offset = "0xC6FC58", VA = "0xC6FC58")]
	public void Release()
	{
	}

	[Token(Token = "0x6000347")]
	[Address(RVA = "0xC6FC6C", Offset = "0xC6FC6C", VA = "0xC6FC6C")]
	public void CursorPos(Vector3 cursorPos)
	{
	}

	[Token(Token = "0x6000348")]
	[Address(RVA = "0xC6FC80", Offset = "0xC6FC80", VA = "0xC6FC80")]
	public GrabObject()
	{
	}
}
[Token(Token = "0x20000DE")]
public class HandMeshMask : MonoBehaviour
{
	[Token(Token = "0x40004B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRSkeleton referenceHand;

	[Token(Token = "0x40004BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material maskMaterial;

	[Token(Token = "0x40004BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x771D04", Offset = "0x771D04")]
	public int radialDivisions;

	[Token(Token = "0x40004BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x771D3C", Offset = "0x771D3C")]
	public float borderSize;

	[Token(Token = "0x40004BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x771D74", Offset = "0x771D74")]
	public float fingerTaper;

	[Token(Token = "0x40004BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x771DAC", Offset = "0x771DAC")]
	public float fingerTipLength;

	[Token(Token = "0x40004BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x771DE4", Offset = "0x771DE4")]
	public float webOffset;

	[Token(Token = "0x40004C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float handScale;

	[Token(Token = "0x40004C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject maskMeshObject;

	[Token(Token = "0x40004C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Mesh maskMesh;

	[Token(Token = "0x40004C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3[] handVertices;

	[Token(Token = "0x40004C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector2[] handUVs;

	[Token(Token = "0x40004C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Color32[] handColors;

	[Token(Token = "0x40004C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int[] handTriangles;

	[Token(Token = "0x40004C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int vertCounter;

	[Token(Token = "0x40004C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private int triCounter;

	[Token(Token = "0x6000355")]
	[Address(RVA = "0xC71824", Offset = "0xC71824", VA = "0xC71824")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000356")]
	[Address(RVA = "0xC719FC", Offset = "0xC719FC", VA = "0xC719FC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000357")]
	[Address(RVA = "0xC71C08", Offset = "0xC71C08", VA = "0xC71C08")]
	private void CreateHandMesh()
	{
	}

	[Token(Token = "0x6000358")]
	[Address(RVA = "0xC72244", Offset = "0xC72244", VA = "0xC72244")]
	private void AddKnuckleMesh(int knuckleVerts, float point1scale, float point2scale, Vector3 point1, Vector3 point2)
	{
	}

	[Token(Token = "0x6000359")]
	[Address(RVA = "0xC72874", Offset = "0xC72874", VA = "0xC72874")]
	private void AddPalmMesh(int knuckleVerts)
	{
	}

	[Token(Token = "0x600035A")]
	[Address(RVA = "0xC74EF0", Offset = "0xC74EF0", VA = "0xC74EF0")]
	private void AddVertex(Vector3 position, Vector2 uv, Color color)
	{
	}

	[Token(Token = "0x600035B")]
	[Address(RVA = "0xC74FAC", Offset = "0xC74FAC", VA = "0xC74FAC")]
	public HandMeshMask()
	{
	}
}
[Token(Token = "0x20000DF")]
public class HandMeshUI : MonoBehaviour
{
	[Token(Token = "0x40004C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SphereCollider[] knobs;

	[Token(Token = "0x40004CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMesh[] readouts;

	[Token(Token = "0x40004CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int rightHeldKnob;

	[Token(Token = "0x40004CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int leftHeldKnob;

	[Token(Token = "0x40004CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public OVRSkeleton leftHand;

	[Token(Token = "0x40004CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public OVRSkeleton rightHand;

	[Token(Token = "0x40004CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public HandMeshMask leftMask;

	[Token(Token = "0x40004D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public HandMeshMask rightMask;

	[Token(Token = "0x600035C")]
	[Address(RVA = "0xC74FD0", Offset = "0xC74FD0", VA = "0xC74FD0")]
	private void Start()
	{
	}

	[Token(Token = "0x600035D")]
	[Address(RVA = "0xC75308", Offset = "0xC75308", VA = "0xC75308")]
	private void Update()
	{
	}

	[Token(Token = "0x600035E")]
	[Address(RVA = "0xC75078", Offset = "0xC75078", VA = "0xC75078")]
	private void SetSliderValue(int sliderID, float value, bool isNormalized)
	{
	}

	[Token(Token = "0x600035F")]
	[Address(RVA = "0xC756F8", Offset = "0xC756F8", VA = "0xC756F8")]
	private void CheckForHands()
	{
	}

	[Token(Token = "0x6000360")]
	[Address(RVA = "0xC75BE8", Offset = "0xC75BE8", VA = "0xC75BE8")]
	public HandMeshUI()
	{
	}
}
[Token(Token = "0x20000E0")]
public class ObjectManipulator : MonoBehaviour
{
	[Token(Token = "0x20000E1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76F8AC", Offset = "0x76F8AC")]
	private sealed class <StartDemo>d__23 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40004E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40004E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40004E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ObjectManipulator <>4__this;

		[Token(Token = "0x40004E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <timer>5__2;

		[Token(Token = "0x40004E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <fadeTime>5__3;

		[Token(Token = "0x1700004D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000370")]
			[Address(RVA = "0xB2EBEC", Offset = "0xB2EBEC", VA = "0xB2EBEC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700004E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000372")]
			[Address(RVA = "0xB2EC34", Offset = "0xB2EC34", VA = "0xB2EC34", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600036D")]
		[Address(RVA = "0xB2E928", Offset = "0xB2E928", VA = "0xB2E928")]
		[DebuggerHidden]
		public <StartDemo>d__23(int <>1__state)
		{
		}

		[Token(Token = "0x600036E")]
		[Address(RVA = "0xB2E954", Offset = "0xB2E954", VA = "0xB2E954", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600036F")]
		[Address(RVA = "0xB2E958", Offset = "0xB2E958", VA = "0xB2E958", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000371")]
		[Address(RVA = "0xB2EBF4", Offset = "0xB2EBF4", VA = "0xB2EBF4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40004D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRInput.Controller controller;

	[Token(Token = "0x40004D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject hoverObject;

	[Token(Token = "0x40004D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject grabObject;

	[Token(Token = "0x40004D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float grabTime;

	[Token(Token = "0x40004D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector3 localGrabOffset;

	[Token(Token = "0x40004D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Quaternion localGrabRotation;

	[Token(Token = "0x40004D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 camGrabPosition;

	[Token(Token = "0x40004D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Quaternion camGrabRotation;

	[Token(Token = "0x40004D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Vector3 handGrabPosition;

	[Token(Token = "0x40004DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Quaternion handGrabRotation;

	[Token(Token = "0x40004DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Vector3 cursorPosition;

	[Token(Token = "0x40004DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private float rotationOffset;

	[Token(Token = "0x40004DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public LineRenderer laser;

	[Token(Token = "0x40004DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Transform objectInfo;

	[Token(Token = "0x40004DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public TextMesh objectNameLabel;

	[Token(Token = "0x40004E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public TextMesh objectInstructionsLabel;

	[Token(Token = "0x40004E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Image objectInfoBG;

	[Token(Token = "0x40004E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public GameObject demoObjects;

	[Token(Token = "0x40004E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public OVRPassthroughLayer passthrough;

	[Token(Token = "0x6000361")]
	[Address(RVA = "0xB99D28", Offset = "0xB99D28", VA = "0xB99D28")]
	private void Start()
	{
	}

	[Token(Token = "0x6000362")]
	[Address(RVA = "0xB99F54", Offset = "0xB99F54", VA = "0xB99F54")]
	private void Update()
	{
	}

	[Token(Token = "0x6000363")]
	[Address(RVA = "0xB9AB6C", Offset = "0xB9AB6C", VA = "0xB9AB6C")]
	private void GrabHoverObject(GameObject grbObj, Vector3 controllerPos, Quaternion controllerRot)
	{
	}

	[Token(Token = "0x6000364")]
	[Address(RVA = "0xB9B774", Offset = "0xB9B774", VA = "0xB9B774")]
	private void ReleaseObject()
	{
	}

	[Token(Token = "0x6000365")]
	[Address(RVA = "0xB99EE8", Offset = "0xB99EE8", VA = "0xB99EE8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x775260", Offset = "0x775260")]
	private IEnumerator StartDemo()
	{
		return null;
	}

	[Token(Token = "0x6000366")]
	[Address(RVA = "0xB9A1B8", Offset = "0xB9A1B8", VA = "0xB9A1B8")]
	private void FindHoverObject(Vector3 controllerPos, Quaternion controllerRot)
	{
	}

	[Token(Token = "0x6000367")]
	[Address(RVA = "0xB9AE30", Offset = "0xB9AE30", VA = "0xB9AE30")]
	private void ManipulateObject(GameObject obj, Vector3 controllerPos, Quaternion controllerRot)
	{
	}

	[Token(Token = "0x6000368")]
	[Address(RVA = "0xB9BA2C", Offset = "0xB9BA2C", VA = "0xB9BA2C")]
	private void ClampGrabOffset(ref Vector3 localOffset, float thumbY)
	{
	}

	[Token(Token = "0x6000369")]
	[Address(RVA = "0xB9BAB8", Offset = "0xB9BAB8", VA = "0xB9BAB8")]
	private Vector3 ClampScale(Vector3 localScale, Vector2 thumb)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600036A")]
	[Address(RVA = "0xB9BAE8", Offset = "0xB9BAE8", VA = "0xB9BAE8")]
	private void CheckForDominantHand()
	{
	}

	[Token(Token = "0x600036B")]
	[Address(RVA = "0xB9B8F4", Offset = "0xB9B8F4", VA = "0xB9B8F4")]
	private void AssignInstructions(GrabObject targetObject)
	{
	}

	[Token(Token = "0x600036C")]
	[Address(RVA = "0xB9BC0C", Offset = "0xB9BC0C", VA = "0xB9BC0C")]
	public ObjectManipulator()
	{
	}
}
[Token(Token = "0x20000E2")]
public class OverlayPassthrough : MonoBehaviour
{
	[Token(Token = "0x40004E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRPassthroughLayer passthroughLayer;

	[Token(Token = "0x6000373")]
	[Address(RVA = "0xB9C93C", Offset = "0xB9C93C", VA = "0xB9C93C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000374")]
	[Address(RVA = "0xB9CAC8", Offset = "0xB9CAC8", VA = "0xB9CAC8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000375")]
	[Address(RVA = "0xB9CB90", Offset = "0xB9CB90", VA = "0xB9CB90")]
	public OverlayPassthrough()
	{
	}
}
[Token(Token = "0x20000E3")]
public class PassthroughBrush : MonoBehaviour
{
	[Token(Token = "0x20000E4")]
	public enum BrushState
	{
		[Token(Token = "0x40004F5")]
		Idle,
		[Token(Token = "0x40004F6")]
		Inking
	}

	[Token(Token = "0x40004EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRInput.Controller controllerHand;

	[Token(Token = "0x40004EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject lineSegmentPrefab;

	[Token(Token = "0x40004EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject lineContainer;

	[Token(Token = "0x40004ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool forceActive;

	[Token(Token = "0x40004EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private LineRenderer currentLineSegment;

	[Token(Token = "0x40004EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<Vector3> inkPositions;

	[Token(Token = "0x40004F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float minInkDist;

	[Token(Token = "0x40004F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float strokeWidth;

	[Token(Token = "0x40004F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float strokeLength;

	[Token(Token = "0x40004F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private BrushState brushStatus;

	[Token(Token = "0x6000376")]
	[Address(RVA = "0xC42D60", Offset = "0xC42D60", VA = "0xC42D60")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000377")]
	[Address(RVA = "0xC42D68", Offset = "0xC42D68", VA = "0xC42D68")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000378")]
	[Address(RVA = "0xC43050", Offset = "0xC43050", VA = "0xC43050")]
	private void StartLine(Vector3 inkPos)
	{
	}

	[Token(Token = "0x6000379")]
	[Address(RVA = "0xC4322C", Offset = "0xC4322C", VA = "0xC4322C")]
	private void UpdateLine(Vector3 inkPos)
	{
	}

	[Token(Token = "0x600037A")]
	[Address(RVA = "0xC433D4", Offset = "0xC433D4", VA = "0xC433D4")]
	public void ClearLines()
	{
	}

	[Token(Token = "0x600037B")]
	[Address(RVA = "0xC42F5C", Offset = "0xC42F5C", VA = "0xC42F5C")]
	public void UndoInkLine()
	{
	}

	[Token(Token = "0x600037C")]
	[Address(RVA = "0xC434B0", Offset = "0xC434B0", VA = "0xC434B0")]
	public PassthroughBrush()
	{
	}
}
[Token(Token = "0x20000E5")]
public class PassthroughController : MonoBehaviour
{
	[Token(Token = "0x40004F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRPassthroughLayer passthroughLayer;

	[Token(Token = "0x600037D")]
	[Address(RVA = "0xC4353C", Offset = "0xC4353C", VA = "0xC4353C")]
	private void Start()
	{
	}

	[Token(Token = "0x600037E")]
	[Address(RVA = "0xC436C8", Offset = "0xC436C8", VA = "0xC436C8")]
	private void Update()
	{
	}

	[Token(Token = "0x600037F")]
	[Address(RVA = "0xC4382C", Offset = "0xC4382C", VA = "0xC4382C")]
	public PassthroughController()
	{
	}
}
[Token(Token = "0x20000E6")]
public class PassthroughProjectionSurface : MonoBehaviour
{
	[Token(Token = "0x40004F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRPassthroughLayer passthroughLayer;

	[Token(Token = "0x40004F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshFilter projectionObject;

	[Token(Token = "0x40004FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private MeshRenderer quadOutline;

	[Token(Token = "0x6000380")]
	[Address(RVA = "0xC43834", Offset = "0xC43834", VA = "0xC43834")]
	private void Start()
	{
	}

	[Token(Token = "0x6000381")]
	[Address(RVA = "0xC43A28", Offset = "0xC43A28", VA = "0xC43A28")]
	private void Update()
	{
	}

	[Token(Token = "0x6000382")]
	[Address(RVA = "0xC43BF8", Offset = "0xC43BF8", VA = "0xC43BF8")]
	public PassthroughProjectionSurface()
	{
	}
}
[Token(Token = "0x20000E7")]
public class PassthroughStyler : MonoBehaviour
{
	[Token(Token = "0x20000E8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76F8BC", Offset = "0x76F8BC")]
	private sealed class <FadeToCurrentStyle>d__19 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400050A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400050B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400050C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PassthroughStyler <>4__this;

		[Token(Token = "0x400050D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float fadeTime;

		[Token(Token = "0x400050E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <timer>5__2;

		[Token(Token = "0x400050F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <brightness>5__3;

		[Token(Token = "0x4000510")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <contrast>5__4;

		[Token(Token = "0x4000511")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <posterize>5__5;

		[Token(Token = "0x4000512")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Color <edgeCol>5__6;

		[Token(Token = "0x1700004F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000395")]
			[Address(RVA = "0xB3046C", Offset = "0xB3046C", VA = "0xB3046C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000050")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000397")]
			[Address(RVA = "0xB304B4", Offset = "0xB304B4", VA = "0xB304B4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000392")]
		[Address(RVA = "0xB30294", Offset = "0xB30294", VA = "0xB30294")]
		[DebuggerHidden]
		public <FadeToCurrentStyle>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x6000393")]
		[Address(RVA = "0xB302C0", Offset = "0xB302C0", VA = "0xB302C0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000394")]
		[Address(RVA = "0xB302C4", Offset = "0xB302C4", VA = "0xB302C4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000396")]
		[Address(RVA = "0xB30474", Offset = "0xB30474", VA = "0xB30474", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000E9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76F8CC", Offset = "0x76F8CC")]
	private sealed class <FadeToDefaultPassthrough>d__20 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000513")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000514")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000515")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PassthroughStyler <>4__this;

		[Token(Token = "0x4000516")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float fadeTime;

		[Token(Token = "0x4000517")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <timer>5__2;

		[Token(Token = "0x4000518")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <brightness>5__3;

		[Token(Token = "0x4000519")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <contrast>5__4;

		[Token(Token = "0x400051A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <posterize>5__5;

		[Token(Token = "0x400051B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Color <edgeCol>5__6;

		[Token(Token = "0x17000051")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600039B")]
			[Address(RVA = "0xB306D4", Offset = "0xB306D4", VA = "0xB306D4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000052")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600039D")]
			[Address(RVA = "0xB3071C", Offset = "0xB3071C", VA = "0xB3071C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000398")]
		[Address(RVA = "0xB304BC", Offset = "0xB304BC", VA = "0xB304BC")]
		[DebuggerHidden]
		public <FadeToDefaultPassthrough>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x6000399")]
		[Address(RVA = "0xB304E8", Offset = "0xB304E8", VA = "0xB304E8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600039A")]
		[Address(RVA = "0xB304EC", Offset = "0xB304EC", VA = "0xB304EC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600039C")]
		[Address(RVA = "0xB306DC", Offset = "0xB306DC", VA = "0xB306DC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40004FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRInput.Controller controllerHand;

	[Token(Token = "0x40004FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVRPassthroughLayer passthroughLayer;

	[Token(Token = "0x40004FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private IEnumerator fadeIn;

	[Token(Token = "0x40004FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private IEnumerator fadeOut;

	[Token(Token = "0x40004FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public RectTransform[] menuOptions;

	[Token(Token = "0x4000500")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public RectTransform colorWheel;

	[Token(Token = "0x4000501")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Texture2D colorTexture;

	[Token(Token = "0x4000502")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 cursorPosition;

	[Token(Token = "0x4000503")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private bool settingColor;

	[Token(Token = "0x4000504")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Color savedColor;

	[Token(Token = "0x4000505")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float savedBrightness;

	[Token(Token = "0x4000506")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float savedContrast;

	[Token(Token = "0x4000507")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float savedPosterize;

	[Token(Token = "0x4000508")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public CanvasGroup mainCanvas;

	[Token(Token = "0x4000509")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject[] compactObjects;

	[Token(Token = "0x6000383")]
	[Address(RVA = "0xC43C00", Offset = "0xC43C00", VA = "0xC43C00")]
	private void Start()
	{
	}

	[Token(Token = "0x6000384")]
	[Address(RVA = "0xC43F04", Offset = "0xC43F04", VA = "0xC43F04")]
	private void Update()
	{
	}

	[Token(Token = "0x6000385")]
	[Address(RVA = "0xC4415C", Offset = "0xC4415C", VA = "0xC4415C")]
	public void Grab(OVRInput.Controller grabHand)
	{
	}

	[Token(Token = "0x6000386")]
	[Address(RVA = "0xC442C4", Offset = "0xC442C4", VA = "0xC442C4")]
	public void Release()
	{
	}

	[Token(Token = "0x6000387")]
	[Address(RVA = "0xC44248", Offset = "0xC44248", VA = "0xC44248")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x775310", Offset = "0x775310")]
	private IEnumerator FadeToCurrentStyle(float fadeTime)
	{
		return null;
	}

	[Token(Token = "0x6000388")]
	[Address(RVA = "0xC443A4", Offset = "0xC443A4", VA = "0xC443A4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x775370", Offset = "0x775370")]
	private IEnumerator FadeToDefaultPassthrough(float fadeTime)
	{
		return null;
	}

	[Token(Token = "0x6000389")]
	[Address(RVA = "0xC44420", Offset = "0xC44420", VA = "0xC44420")]
	public void OnBrightnessChanged(float newValue)
	{
	}

	[Token(Token = "0x600038A")]
	[Address(RVA = "0xC44440", Offset = "0xC44440", VA = "0xC44440")]
	public void OnContrastChanged(float newValue)
	{
	}

	[Token(Token = "0x600038B")]
	[Address(RVA = "0xC44460", Offset = "0xC44460", VA = "0xC44460")]
	public void OnPosterizeChanged(float newValue)
	{
	}

	[Token(Token = "0x600038C")]
	[Address(RVA = "0xC44480", Offset = "0xC44480", VA = "0xC44480")]
	public void OnAlphaChanged(float newValue)
	{
	}

	[Token(Token = "0x600038D")]
	[Address(RVA = "0xC43E88", Offset = "0xC43E88", VA = "0xC43E88")]
	private void ShowFullMenu(bool doShow)
	{
	}

	[Token(Token = "0x600038E")]
	[Address(RVA = "0xC444E4", Offset = "0xC444E4", VA = "0xC444E4")]
	public void Cursor(Vector3 cP)
	{
	}

	[Token(Token = "0x600038F")]
	[Address(RVA = "0xC444F0", Offset = "0xC444F0", VA = "0xC444F0")]
	public void DoColorDrag(bool doDrag)
	{
	}

	[Token(Token = "0x6000390")]
	[Address(RVA = "0xC43F1C", Offset = "0xC43F1C", VA = "0xC43F1C")]
	public void GetColorFromWheel()
	{
	}

	[Token(Token = "0x6000391")]
	[Address(RVA = "0xC444FC", Offset = "0xC444FC", VA = "0xC444FC")]
	public PassthroughStyler()
	{
	}
}
[Token(Token = "0x20000EA")]
public class PassthroughSurface : MonoBehaviour
{
	[Token(Token = "0x400051C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRPassthroughLayer passthroughLayer;

	[Token(Token = "0x400051D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshFilter projectionObject;

	[Token(Token = "0x600039E")]
	[Address(RVA = "0xC44540", Offset = "0xC44540", VA = "0xC44540")]
	private void Start()
	{
	}

	[Token(Token = "0x600039F")]
	[Address(RVA = "0xC44600", Offset = "0xC44600", VA = "0xC44600")]
	public PassthroughSurface()
	{
	}
}
[Token(Token = "0x20000EB")]
public class SPPquad : MonoBehaviour
{
	[Token(Token = "0x400051E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRPassthroughLayer passthroughLayer;

	[Token(Token = "0x400051F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshFilter projectionObject;

	[Token(Token = "0x4000520")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVRInput.Controller controllerHand;

	[Token(Token = "0x60003A0")]
	[Address(RVA = "0xCFD4A0", Offset = "0xCFD4A0", VA = "0xCFD4A0")]
	private void Start()
	{
	}

	[Token(Token = "0x60003A1")]
	[Address(RVA = "0xCFD6A8", Offset = "0xCFD6A8", VA = "0xCFD6A8")]
	public void Grab(OVRInput.Controller grabHand)
	{
	}

	[Token(Token = "0x60003A2")]
	[Address(RVA = "0xCFD700", Offset = "0xCFD700", VA = "0xCFD700")]
	public void Release()
	{
	}

	[Token(Token = "0x60003A3")]
	[Address(RVA = "0xCFD74C", Offset = "0xCFD74C", VA = "0xCFD74C")]
	public SPPquad()
	{
	}
}
[Token(Token = "0x20000EC")]
public class SceneSampler : MonoBehaviour
{
	[Token(Token = "0x4000521")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int currentSceneIndex;

	[Token(Token = "0x4000522")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject displayText;

	[Token(Token = "0x60003A4")]
	[Address(RVA = "0xCFD94C", Offset = "0xCFD94C", VA = "0xCFD94C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003A5")]
	[Address(RVA = "0xCFD9C4", Offset = "0xCFD9C4", VA = "0xCFD9C4")]
	private void Update()
	{
	}

	[Token(Token = "0x60003A6")]
	[Address(RVA = "0xCFDCE8", Offset = "0xCFDCE8", VA = "0xCFDCE8")]
	public SceneSampler()
	{
	}
}
[Token(Token = "0x20000ED")]
public class SelectivePassthroughExperience : MonoBehaviour
{
	[Token(Token = "0x4000523")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject leftMaskObject;

	[Token(Token = "0x4000524")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject rightMaskObject;

	[Token(Token = "0x60003A7")]
	[Address(RVA = "0xB7AC18", Offset = "0xB7AC18", VA = "0xB7AC18")]
	private void Update()
	{
	}

	[Token(Token = "0x60003A8")]
	[Address(RVA = "0xB7B0A0", Offset = "0xB7B0A0", VA = "0xB7B0A0")]
	public SelectivePassthroughExperience()
	{
	}
}
[Token(Token = "0x20000EE")]
public class StartMenu : MonoBehaviour
{
	[Token(Token = "0x20000EF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76F8DC", Offset = "0x76F8DC")]
	private sealed class <>c__DisplayClass3_0
	{
		[Token(Token = "0x4000528")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int sceneIndex;

		[Token(Token = "0x4000529")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public StartMenu <>4__this;

		[Token(Token = "0x60003AC")]
		[Address(RVA = "0xB316E4", Offset = "0xB316E4", VA = "0xB316E4")]
		public <>c__DisplayClass3_0()
		{
		}

		[Token(Token = "0x60003AD")]
		[Address(RVA = "0xB316EC", Offset = "0xB316EC", VA = "0xB316EC")]
		internal void <Start>b__0()
		{
		}
	}

	[Token(Token = "0x4000525")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVROverlay overlay;

	[Token(Token = "0x4000526")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVROverlay text;

	[Token(Token = "0x4000527")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig vrRig;

	[Token(Token = "0x60003A9")]
	[Address(RVA = "0xB8187C", Offset = "0xB8187C", VA = "0xB8187C")]
	private void Start()
	{
	}

	[Token(Token = "0x60003AA")]
	[Address(RVA = "0xB81A80", Offset = "0xB81A80", VA = "0xB81A80")]
	private void LoadScene(int idx)
	{
	}

	[Token(Token = "0x60003AB")]
	[Address(RVA = "0xB81B90", Offset = "0xB81B90", VA = "0xB81B90")]
	public StartMenu()
	{
	}
}
[Token(Token = "0x20000F0")]
public static class AppSettingsExtensions
{
	[Token(Token = "0x60003AE")]
	[Address(RVA = "0xB4073C", Offset = "0xB4073C", VA = "0xB4073C")]
	public static ChatAppSettings GetChatSettings(this AppSettings appSettings)
	{
		return null;
	}
}
[Token(Token = "0x20000F1")]
public class ChannelSelector : MonoBehaviour, IPointerClickHandler, IEventSystemHandler
{
	[Token(Token = "0x400052A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string Channel;

	[Token(Token = "0x60003AF")]
	[Address(RVA = "0x11E1F48", Offset = "0x11E1F48", VA = "0x11E1F48")]
	public void SetChannel(string channel)
	{
	}

	[Token(Token = "0x60003B0")]
	[Address(RVA = "0x11E1FC0", Offset = "0x11E1FC0", VA = "0x11E1FC0", Slot = "4")]
	public void OnPointerClick(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60003B1")]
	[Address(RVA = "0x11E22C8", Offset = "0x11E22C8", VA = "0x11E22C8")]
	public ChannelSelector()
	{
	}
}
[Token(Token = "0x20000F2")]
[ExecuteInEditMode]
public class ChatAppIdCheckerUI : MonoBehaviour
{
	[Token(Token = "0x400052B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text Description;

	[Token(Token = "0x60003B2")]
	[Address(RVA = "0x11E46E0", Offset = "0x11E46E0", VA = "0x11E46E0")]
	public void Update()
	{
	}

	[Token(Token = "0x60003B3")]
	[Address(RVA = "0x11E4844", Offset = "0x11E4844", VA = "0x11E4844")]
	public ChatAppIdCheckerUI()
	{
	}
}
[Token(Token = "0x20000F3")]
public class ChatGui : MonoBehaviour, IChatClientListener
{
	[Token(Token = "0x400052C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string[] ChannelsToJoinOnConnect;

	[Token(Token = "0x400052D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string[] FriendsList;

	[Token(Token = "0x400052E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int HistoryLengthToFetch;

	[Token(Token = "0x400052F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x771E1C", Offset = "0x771E1C")]
	private string <UserName>k__BackingField;

	[Token(Token = "0x4000530")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private string selectedChannelName;

	[Token(Token = "0x4000531")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ChatClient chatClient;

	[Token(Token = "0x4000532")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected internal ChatAppSettings chatAppSettings;

	[Token(Token = "0x4000533")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject missingAppIdErrorPanel;

	[Token(Token = "0x4000534")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject ConnectingLabel;

	[Token(Token = "0x4000535")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public RectTransform ChatPanel;

	[Token(Token = "0x4000536")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject UserIdFormPanel;

	[Token(Token = "0x4000537")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public InputField InputFieldChat;

	[Token(Token = "0x4000538")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Text CurrentChannelText;

	[Token(Token = "0x4000539")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Toggle ChannelToggleToInstantiate;

	[Token(Token = "0x400053A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject FriendListUiItemtoInstantiate;

	[Token(Token = "0x400053B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private readonly Dictionary<string, Toggle> channelToggles;

	[Token(Token = "0x400053C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private readonly Dictionary<string, FriendItem> friendListItemLUT;

	[Token(Token = "0x400053D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public bool ShowState;

	[Token(Token = "0x400053E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public GameObject Title;

	[Token(Token = "0x400053F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Text StateText;

	[Token(Token = "0x4000540")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Text UserIdText;

	[Token(Token = "0x4000541")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string HelpText;

	[Token(Token = "0x4000542")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public int TestLength;

	[Token(Token = "0x4000543")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private byte[] testBytes;

	[Token(Token = "0x17000053")]
	public string UserName
	{
		[Token(Token = "0x60003B4")]
		[Address(RVA = "0x11E4E08", Offset = "0x11E4E08", VA = "0x11E4E08")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x775480", Offset = "0x775480")]
		get
		{
			return null;
		}
		[Token(Token = "0x60003B5")]
		[Address(RVA = "0x11E4E10", Offset = "0x11E4E10", VA = "0x11E4E10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x775490", Offset = "0x775490")]
		set
		{
		}
	}

	[Token(Token = "0x60003B6")]
	[Address(RVA = "0x11E4E18", Offset = "0x11E4E18", VA = "0x11E4E18")]
	public void Start()
	{
	}

	[Token(Token = "0x60003B7")]
	[Address(RVA = "0x11E50D8", Offset = "0x11E50D8", VA = "0x11E50D8")]
	public void Connect()
	{
	}

	[Token(Token = "0x60003B8")]
	[Address(RVA = "0x11E5258", Offset = "0x11E5258", VA = "0x11E5258")]
	public void OnDestroy()
	{
	}

	[Token(Token = "0x60003B9")]
	[Address(RVA = "0x11E5270", Offset = "0x11E5270", VA = "0x11E5270")]
	public void OnApplicationQuit()
	{
	}

	[Token(Token = "0x60003BA")]
	[Address(RVA = "0x11E5288", Offset = "0x11E5288", VA = "0x11E5288")]
	public void Update()
	{
	}

	[Token(Token = "0x60003BB")]
	[Address(RVA = "0x11E5378", Offset = "0x11E5378", VA = "0x11E5378")]
	public void OnEnterSend()
	{
	}

	[Token(Token = "0x60003BC")]
	[Address(RVA = "0x11E5DF0", Offset = "0x11E5DF0", VA = "0x11E5DF0")]
	public void OnClickSend()
	{
	}

	[Token(Token = "0x60003BD")]
	[Address(RVA = "0x11E5410", Offset = "0x11E5410", VA = "0x11E5410")]
	private void SendChatMessage(string inputLine)
	{
	}

	[Token(Token = "0x60003BE")]
	[Address(RVA = "0x11E5EAC", Offset = "0x11E5EAC", VA = "0x11E5EAC")]
	public void PostHelpToCurrentChannel()
	{
	}

	[Token(Token = "0x60003BF")]
	[Address(RVA = "0x11E5F64", Offset = "0x11E5F64", VA = "0x11E5F64", Slot = "4")]
	public void DebugReturn(DebugLevel level, string message)
	{
	}

	[Token(Token = "0x60003C0")]
	[Address(RVA = "0x11E6048", Offset = "0x11E6048", VA = "0x11E6048", Slot = "6")]
	public void OnConnected()
	{
	}

	[Token(Token = "0x60003C1")]
	[Address(RVA = "0x11E63AC", Offset = "0x11E63AC", VA = "0x11E63AC", Slot = "5")]
	public void OnDisconnected()
	{
	}

	[Token(Token = "0x60003C2")]
	[Address(RVA = "0x11E63CC", Offset = "0x11E63CC", VA = "0x11E63CC", Slot = "7")]
	public void OnChatStateChange(ChatState state)
	{
	}

	[Token(Token = "0x60003C3")]
	[Address(RVA = "0x11E6474", Offset = "0x11E6474", VA = "0x11E6474", Slot = "10")]
	public void OnSubscribed(string[] channels, bool[] results)
	{
	}

	[Token(Token = "0x60003C4")]
	[Address(RVA = "0x11E67F4", Offset = "0x11E67F4", VA = "0x11E67F4")]
	public void OnSubscribed(string channel, string[] users, Dictionary<object, object> properties)
	{
	}

	[Token(Token = "0x60003C5")]
	[Address(RVA = "0x11E6624", Offset = "0x11E6624", VA = "0x11E6624")]
	private void InstantiateChannelButton(string channelName)
	{
	}

	[Token(Token = "0x60003C6")]
	[Address(RVA = "0x11E6258", Offset = "0x11E6258", VA = "0x11E6258")]
	private void InstantiateFriendButton(string friendId)
	{
	}

	[Token(Token = "0x60003C7")]
	[Address(RVA = "0x11E69B0", Offset = "0x11E69B0", VA = "0x11E69B0", Slot = "11")]
	public void OnUnsubscribed(string[] channels)
	{
	}

	[Token(Token = "0x60003C8")]
	[Address(RVA = "0x11E6E30", Offset = "0x11E6E30", VA = "0x11E6E30", Slot = "8")]
	public void OnGetMessages(string channelName, string[] senders, object[] messages)
	{
	}

	[Token(Token = "0x60003C9")]
	[Address(RVA = "0x11E6E80", Offset = "0x11E6E80", VA = "0x11E6E80", Slot = "9")]
	public void OnPrivateMessage(string sender, object message, string channelName)
	{
	}

	[Token(Token = "0x60003CA")]
	[Address(RVA = "0x11E6FA0", Offset = "0x11E6FA0", VA = "0x11E6FA0", Slot = "12")]
	public void OnStatusUpdate(string user, int status, bool gotMessage, object message)
	{
	}

	[Token(Token = "0x60003CB")]
	[Address(RVA = "0x11E7170", Offset = "0x11E7170", VA = "0x11E7170", Slot = "13")]
	public void OnUserSubscribed(string channel, string user)
	{
	}

	[Token(Token = "0x60003CC")]
	[Address(RVA = "0x11E7288", Offset = "0x11E7288", VA = "0x11E7288", Slot = "14")]
	public void OnUserUnsubscribed(string channel, string user)
	{
	}

	[Token(Token = "0x60003CD")]
	[Address(RVA = "0x11E73A0", Offset = "0x11E73A0", VA = "0x11E73A0")]
	public void OnChannelPropertiesChanged(string channel, string userId, Dictionary<object, object> properties)
	{
	}

	[Token(Token = "0x60003CE")]
	[Address(RVA = "0x11E7520", Offset = "0x11E7520", VA = "0x11E7520")]
	public void OnUserPropertiesChanged(string channel, string targetUserId, string senderUserId, Dictionary<object, object> properties)
	{
	}

	[Token(Token = "0x60003CF")]
	[Address(RVA = "0x11E76D4", Offset = "0x11E76D4", VA = "0x11E76D4")]
	public void OnErrorInfo(string channel, string error, object data)
	{
	}

	[Token(Token = "0x60003D0")]
	[Address(RVA = "0x11E7818", Offset = "0x11E7818", VA = "0x11E7818")]
	public void AddMessageToSelectedChannel(string msg)
	{
	}

	[Token(Token = "0x60003D1")]
	[Address(RVA = "0x11E2044", Offset = "0x11E2044", VA = "0x11E2044")]
	public void ShowChannel(string channelName)
	{
	}

	[Token(Token = "0x60003D2")]
	[Address(RVA = "0x11E7910", Offset = "0x11E7910", VA = "0x11E7910")]
	public void OpenDashboard()
	{
	}

	[Token(Token = "0x60003D3")]
	[Address(RVA = "0x11E7958", Offset = "0x11E7958", VA = "0x11E7958")]
	public ChatGui()
	{
	}
}
[Token(Token = "0x20000F4")]
public class FriendItem : MonoBehaviour
{
	[Token(Token = "0x4000544")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text NameLabel;

	[Token(Token = "0x4000545")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text StatusLabel;

	[Token(Token = "0x4000546")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text Health;

	[Token(Token = "0x17000054")]
	[HideInInspector]
	public string FriendId
	{
		[Token(Token = "0x60003D6")]
		[Address(RVA = "0xC6B324", Offset = "0xC6B324", VA = "0xC6B324")]
		get
		{
			return null;
		}
		[Token(Token = "0x60003D5")]
		[Address(RVA = "0xC6B300", Offset = "0xC6B300", VA = "0xC6B300")]
		set
		{
		}
	}

	[Token(Token = "0x60003D7")]
	[Address(RVA = "0xC6B348", Offset = "0xC6B348", VA = "0xC6B348")]
	public void Awake()
	{
	}

	[Token(Token = "0x60003D8")]
	[Address(RVA = "0xC6B3B0", Offset = "0xC6B3B0", VA = "0xC6B3B0")]
	public void OnFriendStatusUpdate(int status, bool gotMessage, object message)
	{
	}

	[Token(Token = "0x60003D9")]
	[Address(RVA = "0xC6B540", Offset = "0xC6B540", VA = "0xC6B540")]
	public FriendItem()
	{
	}
}
[Token(Token = "0x20000F5")]
public class IgnoreUiRaycastWhenInactive : MonoBehaviour, ICanvasRaycastFilter
{
	[Token(Token = "0x60003DA")]
	[Address(RVA = "0xBC55D4", Offset = "0xBC55D4", VA = "0xBC55D4", Slot = "4")]
	public bool IsRaycastLocationValid(Vector2 screenPoint, Camera eventCamera)
	{
		return default(bool);
	}

	[Token(Token = "0x60003DB")]
	[Address(RVA = "0xBC55F8", Offset = "0xBC55F8", VA = "0xBC55F8")]
	public IgnoreUiRaycastWhenInactive()
	{
	}
}
[Token(Token = "0x20000F6")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x76F90C", Offset = "0x76F90C")]
public class NamePickGui : MonoBehaviour
{
	[Token(Token = "0x4000547")]
	private const string UserNamePlayerPref = "NamePickUserName";

	[Token(Token = "0x4000548")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ChatGui chatNewComponent;

	[Token(Token = "0x4000549")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public InputField idInput;

	[Token(Token = "0x60003DC")]
	[Address(RVA = "0xB939C0", Offset = "0xB939C0", VA = "0xB939C0")]
	public void Start()
	{
	}

	[Token(Token = "0x60003DD")]
	[Address(RVA = "0xB93A8C", Offset = "0xB93A8C", VA = "0xB93A8C")]
	public void EndEditOnEnter()
	{
	}

	[Token(Token = "0x60003DE")]
	[Address(RVA = "0xB93AD8", Offset = "0xB93AD8", VA = "0xB93AD8")]
	public void StartChat()
	{
	}

	[Token(Token = "0x60003DF")]
	[Address(RVA = "0xB93BB4", Offset = "0xB93BB4", VA = "0xB93BB4")]
	public NamePickGui()
	{
	}
}
[Token(Token = "0x20000F7")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x76F96C", Offset = "0x76F96C")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x76F96C", Offset = "0x76F96C")]
public class ChangeColor : MonoBehaviour
{
	[Token(Token = "0x400054A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private PhotonView photonView;

	[Token(Token = "0x60003E0")]
	[Address(RVA = "0x11E1150", Offset = "0x11E1150", VA = "0x11E1150")]
	private void Start()
	{
	}

	[Token(Token = "0x60003E1")]
	[Address(RVA = "0x11E12AC", Offset = "0x11E12AC", VA = "0x11E12AC")]
	[PunRPC]
	private void ChangeColour(Vector3 randomColor)
	{
	}

	[Token(Token = "0x60003E2")]
	[Address(RVA = "0x11E1380", Offset = "0x11E1380", VA = "0x11E1380")]
	public ChangeColor()
	{
	}
}
[Token(Token = "0x20000F8")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x76FA00", Offset = "0x76FA00")]
public class ChangeName : MonoBehaviour
{
	[Token(Token = "0x60003E3")]
	[Address(RVA = "0x11E1388", Offset = "0x11E1388", VA = "0x11E1388")]
	private void Start()
	{
	}

	[Token(Token = "0x60003E4")]
	[Address(RVA = "0x11E1448", Offset = "0x11E1448", VA = "0x11E1448")]
	public ChangeName()
	{
	}
}
[Token(Token = "0x20000F9")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x76FA60", Offset = "0x76FA60")]
public class PointersController : MonoBehaviour
{
	[Token(Token = "0x400054B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject pointerDown;

	[Token(Token = "0x400054C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject pointerUp;

	[Token(Token = "0x400054D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private PhotonVoiceView photonVoiceView;

	[Token(Token = "0x60003E5")]
	[Address(RVA = "0xC49C80", Offset = "0xC49C80", VA = "0xC49C80")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003E6")]
	[Address(RVA = "0xC49D9C", Offset = "0xC49D9C", VA = "0xC49D9C")]
	private void Update()
	{
	}

	[Token(Token = "0x60003E7")]
	[Address(RVA = "0xC49CE8", Offset = "0xC49CE8", VA = "0xC49CE8")]
	private void SetActiveSafe(GameObject go, bool active)
	{
	}

	[Token(Token = "0x60003E8")]
	[Address(RVA = "0xC49DF8", Offset = "0xC49DF8", VA = "0xC49DF8")]
	public PointersController()
	{
	}
}
[Token(Token = "0x20000FA")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x76FAC0", Offset = "0x76FAC0")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x76FAC0", Offset = "0x76FAC0")]
public class ProximityVoiceTrigger : VoiceComponent
{
	[Token(Token = "0x400054E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<byte> groupsToAdd;

	[Token(Token = "0x400054F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<byte> groupsToRemove;

	[Token(Token = "0x4000550")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private byte[] subscribedGroups;

	[Token(Token = "0x4000551")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private PhotonVoiceView photonVoiceView;

	[Token(Token = "0x4000552")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private PhotonView photonView;

	[Token(Token = "0x17000055")]
	public byte TargetInterestGroup
	{
		[Token(Token = "0x60003E9")]
		[Address(RVA = "0xCEEF08", Offset = "0xCEEF08", VA = "0xCEEF08")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x60003EA")]
	[Address(RVA = "0xCEEF94", Offset = "0xCEEF94", VA = "0xCEEF94", Slot = "9")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x60003EB")]
	[Address(RVA = "0xCEF1CC", Offset = "0xCEF1CC", VA = "0xCEF1CC")]
	private void ToggleTransmission()
	{
	}

	[Token(Token = "0x60003EC")]
	[Address(RVA = "0xCEF4D0", Offset = "0xCEF4D0", VA = "0xCEF4D0")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60003ED")]
	[Address(RVA = "0xCEF6F8", Offset = "0xCEF6F8", VA = "0xCEF6F8")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x60003EE")]
	[Address(RVA = "0xCEF960", Offset = "0xCEF960", VA = "0xCEF960")]
	private void Update()
	{
	}

	[Token(Token = "0x60003EF")]
	[Address(RVA = "0xCEF044", Offset = "0xCEF044", VA = "0xCEF044")]
	private bool IsLocalCheck()
	{
		return default(bool);
	}

	[Token(Token = "0x60003F0")]
	[Address(RVA = "0xCEFFCC", Offset = "0xCEFFCC", VA = "0xCEFFCC")]
	public ProximityVoiceTrigger()
	{
	}
}
[Serializable]
[Token(Token = "0x20000FB")]
public class MouseLookHelper
{
	[Token(Token = "0x4000553")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float XSensitivity;

	[Token(Token = "0x4000554")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float YSensitivity;

	[Token(Token = "0x4000555")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool clampVerticalRotation;

	[Token(Token = "0x4000556")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float MinimumX;

	[Token(Token = "0x4000557")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float MaximumX;

	[Token(Token = "0x4000558")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool smooth;

	[Token(Token = "0x4000559")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float smoothTime;

	[Token(Token = "0x400055A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Quaternion m_CharacterTargetRot;

	[Token(Token = "0x400055B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Quaternion m_CameraTargetRot;

	[Token(Token = "0x60003F1")]
	[Address(RVA = "0xB90838", Offset = "0xB90838", VA = "0xB90838")]
	public void Init(Transform character, Transform camera)
	{
	}

	[Token(Token = "0x60003F2")]
	[Address(RVA = "0xB9088C", Offset = "0xB9088C", VA = "0xB9088C")]
	public void LookRotation(Transform character, Transform camera)
	{
	}

	[Token(Token = "0x60003F3")]
	[Address(RVA = "0xB90B30", Offset = "0xB90B30", VA = "0xB90B30")]
	private Quaternion ClampRotationAroundXAxis(Quaternion q)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60003F4")]
	[Address(RVA = "0xB90B98", Offset = "0xB90B98", VA = "0xB90B98")]
	public MouseLookHelper()
	{
	}
}
[Token(Token = "0x20000FC")]
public class SoundsForJoinAndLeave : MonoBehaviourPunCallbacks
{
	[Token(Token = "0x400055C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioClip JoinClip;

	[Token(Token = "0x400055D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioClip LeaveClip;

	[Token(Token = "0x400055E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private AudioSource source;

	[Token(Token = "0x60003F5")]
	[Address(RVA = "0xB805C4", Offset = "0xB805C4", VA = "0xB805C4", Slot = "42")]
	public override void OnPlayerEnteredRoom(Player newPlayer)
	{
	}

	[Token(Token = "0x60003F6")]
	[Address(RVA = "0xB806D4", Offset = "0xB806D4", VA = "0xB806D4", Slot = "43")]
	public override void OnPlayerLeftRoom(Player otherPlayer)
	{
	}

	[Token(Token = "0x60003F7")]
	[Address(RVA = "0xB807E4", Offset = "0xB807E4", VA = "0xB807E4")]
	public SoundsForJoinAndLeave()
	{
	}
}
[Token(Token = "0x20000FD")]
public class AbsoluteCollisionHaptics : AbsoluteHaptics
{
	[Token(Token = "0x60003F8")]
	[Address(RVA = "0xB3A84C", Offset = "0xB3A84C", VA = "0xB3A84C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60003F9")]
	[Address(RVA = "0xB3A8BC", Offset = "0xB3A8BC", VA = "0xB3A8BC")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x60003FA")]
	[Address(RVA = "0xB3A8DC", Offset = "0xB3A8DC", VA = "0xB3A8DC")]
	public AbsoluteCollisionHaptics()
	{
	}
}
[Token(Token = "0x20000FE")]
public class BallObject : MonoBehaviour
{
	[Token(Token = "0x400055F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float DeathTime;

	[Token(Token = "0x4000560")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float mStartTime;

	[Token(Token = "0x60003FB")]
	[Address(RVA = "0xB477C8", Offset = "0xB477C8", VA = "0xB477C8")]
	private void Start()
	{
	}

	[Token(Token = "0x60003FC")]
	[Address(RVA = "0xB477F0", Offset = "0xB477F0", VA = "0xB477F0")]
	private void Update()
	{
	}

	[Token(Token = "0x60003FD")]
	[Address(RVA = "0xB4788C", Offset = "0xB4788C", VA = "0xB4788C")]
	public BallObject()
	{
	}
}
[Token(Token = "0x20000FF")]
public class BallSpawner : MonoBehaviour
{
	[Token(Token = "0x4000561")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject BallPrefab;

	[Token(Token = "0x4000562")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float SpawnTime;

	[Token(Token = "0x4000563")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float mStartTime;

	[Token(Token = "0x60003FE")]
	[Address(RVA = "0xB4789C", Offset = "0xB4789C", VA = "0xB4789C")]
	private void Start()
	{
	}

	[Token(Token = "0x60003FF")]
	[Address(RVA = "0xB478C4", Offset = "0xB478C4", VA = "0xB478C4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000400")]
	[Address(RVA = "0xB479F4", Offset = "0xB479F4", VA = "0xB479F4")]
	public BallSpawner()
	{
	}
}
[Token(Token = "0x2000100")]
public class HapticClipSwitcher : MonoBehaviour
{
	[Token(Token = "0x4000564")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioClip AudioA;

	[Token(Token = "0x4000565")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioClip AudioB;

	[Token(Token = "0x4000566")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioSource Audio;

	[Token(Token = "0x4000567")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ContinuousHaptics AudioHaptic;

	[Token(Token = "0x4000568")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool mClipB;

	[Token(Token = "0x6000401")]
	[Address(RVA = "0xBC2C0C", Offset = "0xBC2C0C", VA = "0xBC2C0C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000402")]
	[Address(RVA = "0xBC2CE8", Offset = "0xBC2CE8", VA = "0xBC2CE8")]
	public HapticClipSwitcher()
	{
	}
}
[Token(Token = "0x2000101")]
public class XRComponentTracker : MonoBehaviour
{
	[Token(Token = "0x4000569")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Rigidbody LeftHand;

	[Token(Token = "0x400056A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Rigidbody RightHand;

	[Token(Token = "0x400056B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<XRNodeState> mNodeStates;

	[Token(Token = "0x400056C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 mLeftHandPos;

	[Token(Token = "0x400056D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Vector3 mRightHandPos;

	[Token(Token = "0x400056E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Quaternion mLeftHandRot;

	[Token(Token = "0x400056F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Quaternion mRightHandRot;

	[Token(Token = "0x6000403")]
	[Address(RVA = "0xAFF640", Offset = "0xAFF640", VA = "0xAFF640")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000404")]
	[Address(RVA = "0xAFF96C", Offset = "0xAFF96C", VA = "0xAFF96C")]
	public XRComponentTracker()
	{
	}
}
[Token(Token = "0x2000102")]
public class PlayerTank : MonoBehaviour
{
	[Token(Token = "0x4000570")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float Speed;

	[Token(Token = "0x4000571")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform TurretEnd;

	[Token(Token = "0x4000572")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject BulletPrefab;

	[Token(Token = "0x4000573")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public UnityEvent ShootEvent;

	[Token(Token = "0x6000405")]
	[Address(RVA = "0xC499BC", Offset = "0xC499BC", VA = "0xC499BC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000406")]
	[Address(RVA = "0xC49C70", Offset = "0xC49C70", VA = "0xC49C70")]
	public PlayerTank()
	{
	}
}
[Token(Token = "0x2000103")]
public class SimpleBullet : MonoBehaviour
{
	[Token(Token = "0x4000574")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float Speed;

	[Token(Token = "0x4000575")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float TimeToLive;

	[Token(Token = "0x4000576")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float mStartTime;

	[Token(Token = "0x6000407")]
	[Address(RVA = "0xB7B810", Offset = "0xB7B810", VA = "0xB7B810")]
	private void Start()
	{
	}

	[Token(Token = "0x6000408")]
	[Address(RVA = "0xB7B838", Offset = "0xB7B838", VA = "0xB7B838")]
	private void Update()
	{
	}

	[Token(Token = "0x6000409")]
	[Address(RVA = "0xB7B960", Offset = "0xB7B960", VA = "0xB7B960")]
	public SimpleBullet()
	{
	}
}
[Token(Token = "0x2000104")]
public class SimpleTarget : MonoBehaviour
{
	[Token(Token = "0x4000577")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int Health;

	[Token(Token = "0x4000578")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public LayerMask BulletLayer;

	[Token(Token = "0x4000579")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UnityEvent HitEvent;

	[Token(Token = "0x400057A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UnityEvent DestroyEvent;

	[Token(Token = "0x400057B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int mDamage;

	[Token(Token = "0x600040A")]
	[Address(RVA = "0xB7C3B0", Offset = "0xB7C3B0", VA = "0xB7C3B0")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x600040B")]
	[Address(RVA = "0xB7C51C", Offset = "0xB7C51C", VA = "0xB7C51C")]
	public SimpleTarget()
	{
	}
}
[Token(Token = "0x2000105")]
public class XRPlayer : MonoBehaviour
{
	[Token(Token = "0x400057C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject Head;

	[Token(Token = "0x400057D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Rigidbody LeftHand;

	[Token(Token = "0x400057E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Rigidbody RightHand;

	[Token(Token = "0x400057F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<XRNodeState> mNodeStates;

	[Token(Token = "0x4000580")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 mHeadPos;

	[Token(Token = "0x4000581")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 mLeftHandPos;

	[Token(Token = "0x4000582")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 mRightHandPos;

	[Token(Token = "0x4000583")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Quaternion mHeadRot;

	[Token(Token = "0x4000584")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Quaternion mLeftHandRot;

	[Token(Token = "0x4000585")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private Quaternion mRightHandRot;

	[Token(Token = "0x600040C")]
	[Address(RVA = "0xAFFBC8", Offset = "0xAFFBC8", VA = "0xAFFBC8")]
	private void Start()
	{
	}

	[Token(Token = "0x600040D")]
	[Address(RVA = "0xAFFCE8", Offset = "0xAFFCE8", VA = "0xAFFCE8")]
	private void Update()
	{
	}

	[Token(Token = "0x600040E")]
	[Address(RVA = "0xAFFF0C", Offset = "0xAFFF0C", VA = "0xAFFF0C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600040F")]
	[Address(RVA = "0xB00190", Offset = "0xB00190", VA = "0xB00190")]
	public XRPlayer()
	{
	}
}
[Token(Token = "0x2000106")]
public class MaterialParamFlip : MonoBehaviour
{
	[Token(Token = "0x4000586")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected Material originalMat;

	[Token(Token = "0x4000587")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected Material mat;

	[Token(Token = "0x4000588")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string prop;

	[Token(Token = "0x6000410")]
	[Address(RVA = "0xE59228", Offset = "0xE59228", VA = "0xE59228")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000411")]
	[Address(RVA = "0xE592D4", Offset = "0xE592D4", VA = "0xE592D4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000412")]
	[Address(RVA = "0xE5937C", Offset = "0xE5937C", VA = "0xE5937C")]
	public void SetParameter(float param)
	{
	}

	[Token(Token = "0x6000413")]
	[Address(RVA = "0xE59424", Offset = "0xE59424", VA = "0xE59424")]
	public MaterialParamFlip()
	{
	}
}
[Token(Token = "0x2000107")]
public class OnButton : MonoBehaviour
{
	[Token(Token = "0x4000589")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool gripButton;

	[Token(Token = "0x400058A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool triggerButton;

	[Token(Token = "0x400058B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool primaryButton;

	[Token(Token = "0x400058C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	public bool secondaryButton;

	[Token(Token = "0x400058D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool menuButton;

	[Token(Token = "0x400058E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public InputFeatureUsage<bool> button;

	[Token(Token = "0x400058F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UnityEvent OnPress;

	[Token(Token = "0x4000590")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public UnityEvent OnHold;

	[Token(Token = "0x4000591")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public UnityEvent OnRelease;

	[Token(Token = "0x4000592")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected bool wasDown;

	[Token(Token = "0x4000593")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	protected XRController controller;

	[Token(Token = "0x6000414")]
	[Address(RVA = "0xB9C058", Offset = "0xB9C058", VA = "0xB9C058")]
	private void Start()
	{
	}

	[Token(Token = "0x6000415")]
	[Address(RVA = "0xB9C154", Offset = "0xB9C154", VA = "0xB9C154")]
	private void Update()
	{
	}

	[Token(Token = "0x6000416")]
	[Address(RVA = "0xB9C1B8", Offset = "0xB9C1B8", VA = "0xB9C1B8")]
	protected bool AnyButtonDown()
	{
		return default(bool);
	}

	[Token(Token = "0x6000417")]
	[Address(RVA = "0xB9C340", Offset = "0xB9C340", VA = "0xB9C340")]
	protected bool IsButtonDown(InputFeatureUsage<bool> button)
	{
		return default(bool);
	}

	[Token(Token = "0x6000418")]
	[Address(RVA = "0xB9C3A8", Offset = "0xB9C3A8", VA = "0xB9C3A8")]
	public OnButton()
	{
	}
}
[Token(Token = "0x2000108")]
[DisallowMultipleComponent]
public class SteamManager : MonoBehaviour
{
	[Token(Token = "0x4000594")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool steamEnabled;

	[Token(Token = "0x4000595")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public uint steamAppID;

	[Token(Token = "0x17000056")]
	public static bool Initialized
	{
		[Token(Token = "0x6000419")]
		[Address(RVA = "0xB82578", Offset = "0xB82578", VA = "0xB82578")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600041A")]
	[Address(RVA = "0xB82580", Offset = "0xB82580", VA = "0xB82580")]
	public SteamManager()
	{
	}
}
[Token(Token = "0x2000109")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x76FB64", Offset = "0x76FB64")]
public class ToText : MonoBehaviour
{
	[Token(Token = "0x4000596")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected TextMeshPro textMeshPro;

	[Token(Token = "0x600041B")]
	[Address(RVA = "0xAF147C", Offset = "0xAF147C", VA = "0xAF147C")]
	private void Start()
	{
	}

	[Token(Token = "0x600041C")]
	[Address(RVA = "0xAF14D0", Offset = "0xAF14D0", VA = "0xAF14D0")]
	public void FromInt(int n)
	{
	}

	[Token(Token = "0x600041D")]
	[Address(RVA = "0xAF1580", Offset = "0xAF1580", VA = "0xAF1580")]
	public ToText()
	{
	}
}
[Token(Token = "0x200010A")]
public class ChatController : MonoBehaviour
{
	[Token(Token = "0x4000597")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TMP_InputField ChatInputField;

	[Token(Token = "0x4000598")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TMP_Text ChatDisplayOutput;

	[Token(Token = "0x4000599")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Scrollbar ChatScrollbar;

	[Token(Token = "0x600041E")]
	[Address(RVA = "0x11E484C", Offset = "0x11E484C", VA = "0x11E484C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600041F")]
	[Address(RVA = "0x11E4910", Offset = "0x11E4910", VA = "0x11E4910")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000420")]
	[Address(RVA = "0x11E49D4", Offset = "0x11E49D4", VA = "0x11E49D4")]
	private void AddToChatOutput(string newText)
	{
	}

	[Token(Token = "0x6000421")]
	[Address(RVA = "0x11E4E00", Offset = "0x11E4E00", VA = "0x11E4E00")]
	public ChatController()
	{
	}
}
[Token(Token = "0x200010B")]
public class DropdownSample : MonoBehaviour
{
	[Token(Token = "0x400059A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private TextMeshProUGUI text;

	[Token(Token = "0x400059B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private TMP_Dropdown dropdownWithoutPlaceholder;

	[Token(Token = "0x400059C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private TMP_Dropdown dropdownWithPlaceholder;

	[Token(Token = "0x6000422")]
	[Address(RVA = "0xC67E64", Offset = "0xC67E64", VA = "0xC67E64")]
	public void OnButtonClick()
	{
	}

	[Token(Token = "0x6000423")]
	[Address(RVA = "0xC67F70", Offset = "0xC67F70", VA = "0xC67F70")]
	public DropdownSample()
	{
	}
}
[Token(Token = "0x200010C")]
public class EnvMapAnimator : MonoBehaviour
{
	[Token(Token = "0x200010D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76FBC4", Offset = "0x76FBC4")]
	private sealed class <Start>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40005A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40005A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40005A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnvMapAnimator <>4__this;

		[Token(Token = "0x40005A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Matrix4x4 <matrix>5__2;

		[Token(Token = "0x17000057")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600042A")]
			[Address(RVA = "0xB2A14C", Offset = "0xB2A14C", VA = "0xB2A14C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000058")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600042C")]
			[Address(RVA = "0xB2A194", Offset = "0xB2A194", VA = "0xB2A194", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000427")]
		[Address(RVA = "0xB29F70", Offset = "0xB29F70", VA = "0xB29F70")]
		[DebuggerHidden]
		public <Start>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6000428")]
		[Address(RVA = "0xB29F9C", Offset = "0xB29F9C", VA = "0xB29F9C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000429")]
		[Address(RVA = "0xB29FA0", Offset = "0xB29FA0", VA = "0xB29FA0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600042B")]
		[Address(RVA = "0xB2A154", Offset = "0xB2A154", VA = "0xB2A154", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400059D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 RotationSpeeds;

	[Token(Token = "0x400059E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private TMP_Text m_textMeshPro;

	[Token(Token = "0x400059F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Material m_material;

	[Token(Token = "0x6000424")]
	[Address(RVA = "0xC68140", Offset = "0xC68140", VA = "0xC68140")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000425")]
	[Address(RVA = "0xC681B0", Offset = "0xC681B0", VA = "0xC681B0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7754B0", Offset = "0x7754B0")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000426")]
	[Address(RVA = "0xC6821C", Offset = "0xC6821C", VA = "0xC6821C")]
	public EnvMapAnimator()
	{
	}
}
namespace TMPro
{
	[Serializable]
	[Token(Token = "0x200010E")]
	public class TMP_DigitValidator : TMP_InputValidator
	{
		[Token(Token = "0x600042D")]
		[Address(RVA = "0xB82FE8", Offset = "0xB82FE8", VA = "0xB82FE8", Slot = "4")]
		public override char Validate(ref string text, ref int pos, char ch)
		{
			return default(char);
		}

		[Token(Token = "0x600042E")]
		[Address(RVA = "0xB83060", Offset = "0xB83060", VA = "0xB83060")]
		public TMP_DigitValidator()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200010F")]
	public class TMP_PhoneNumberValidator : TMP_InputValidator
	{
		[Token(Token = "0x600042F")]
		[Address(RVA = "0xB838CC", Offset = "0xB838CC", VA = "0xB838CC", Slot = "4")]
		public override char Validate(ref string text, ref int pos, char ch)
		{
			return default(char);
		}

		[Token(Token = "0x6000430")]
		[Address(RVA = "0xB83CD4", Offset = "0xB83CD4", VA = "0xB83CD4")]
		public TMP_PhoneNumberValidator()
		{
		}
	}
	[Token(Token = "0x2000110")]
	public class TMP_TextEventHandler : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
	{
		[Serializable]
		[Token(Token = "0x2000111")]
		public class CharacterSelectionEvent : UnityEvent<char, int>
		{
			[Token(Token = "0x6000445")]
			[Address(RVA = "0xB31710", Offset = "0xB31710", VA = "0xB31710")]
			public CharacterSelectionEvent()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000112")]
		public class SpriteSelectionEvent : UnityEvent<char, int>
		{
			[Token(Token = "0x6000446")]
			[Address(RVA = "0xB317F4", Offset = "0xB317F4", VA = "0xB317F4")]
			public SpriteSelectionEvent()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000113")]
		public class WordSelectionEvent : UnityEvent<string, int, int>
		{
			[Token(Token = "0x6000447")]
			[Address(RVA = "0xB31840", Offset = "0xB31840", VA = "0xB31840")]
			public WordSelectionEvent()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000114")]
		public class LineSelectionEvent : UnityEvent<string, int, int>
		{
			[Token(Token = "0x6000448")]
			[Address(RVA = "0xB3175C", Offset = "0xB3175C", VA = "0xB3175C")]
			public LineSelectionEvent()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000115")]
		public class LinkSelectionEvent : UnityEvent<string, string, int>
		{
			[Token(Token = "0x6000449")]
			[Address(RVA = "0xB317A8", Offset = "0xB317A8", VA = "0xB317A8")]
			public LinkSelectionEvent()
			{
			}
		}

		[Token(Token = "0x40005A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private CharacterSelectionEvent m_OnCharacterSelection;

		[Token(Token = "0x40005A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private SpriteSelectionEvent m_OnSpriteSelection;

		[Token(Token = "0x40005A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private WordSelectionEvent m_OnWordSelection;

		[Token(Token = "0x40005A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private LineSelectionEvent m_OnLineSelection;

		[Token(Token = "0x40005A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private LinkSelectionEvent m_OnLinkSelection;

		[Token(Token = "0x40005A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private TMP_Text m_TextComponent;

		[Token(Token = "0x40005AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Camera m_Camera;

		[Token(Token = "0x40005AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Canvas m_Canvas;

		[Token(Token = "0x40005AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int m_selectedLink;

		[Token(Token = "0x40005AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int m_lastCharIndex;

		[Token(Token = "0x40005AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private int m_lastWordIndex;

		[Token(Token = "0x40005AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private int m_lastLineIndex;

		[Token(Token = "0x17000059")]
		public CharacterSelectionEvent onCharacterSelection
		{
			[Token(Token = "0x6000431")]
			[Address(RVA = "0xB84E30", Offset = "0xB84E30", VA = "0xB84E30")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000432")]
			[Address(RVA = "0xB84E38", Offset = "0xB84E38", VA = "0xB84E38")]
			set
			{
			}
		}

		[Token(Token = "0x1700005A")]
		public SpriteSelectionEvent onSpriteSelection
		{
			[Token(Token = "0x6000433")]
			[Address(RVA = "0xB84E40", Offset = "0xB84E40", VA = "0xB84E40")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000434")]
			[Address(RVA = "0xB84E48", Offset = "0xB84E48", VA = "0xB84E48")]
			set
			{
			}
		}

		[Token(Token = "0x1700005B")]
		public WordSelectionEvent onWordSelection
		{
			[Token(Token = "0x6000435")]
			[Address(RVA = "0xB84E50", Offset = "0xB84E50", VA = "0xB84E50")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000436")]
			[Address(RVA = "0xB84E58", Offset = "0xB84E58", VA = "0xB84E58")]
			set
			{
			}
		}

		[Token(Token = "0x1700005C")]
		public LineSelectionEvent onLineSelection
		{
			[Token(Token = "0x6000437")]
			[Address(RVA = "0xB84E60", Offset = "0xB84E60", VA = "0xB84E60")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000438")]
			[Address(RVA = "0xB84E68", Offset = "0xB84E68", VA = "0xB84E68")]
			set
			{
			}
		}

		[Token(Token = "0x1700005D")]
		public LinkSelectionEvent onLinkSelection
		{
			[Token(Token = "0x6000439")]
			[Address(RVA = "0xB84E70", Offset = "0xB84E70", VA = "0xB84E70")]
			get
			{
				return null;
			}
			[Token(Token = "0x600043A")]
			[Address(RVA = "0xB84E78", Offset = "0xB84E78", VA = "0xB84E78")]
			set
			{
			}
		}

		[Token(Token = "0x600043B")]
		[Address(RVA = "0xB84E80", Offset = "0xB84E80", VA = "0xB84E80")]
		private void Awake()
		{
		}

		[Token(Token = "0x600043C")]
		[Address(RVA = "0xB85014", Offset = "0xB85014", VA = "0xB85014")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600043D")]
		[Address(RVA = "0xB85760", Offset = "0xB85760", VA = "0xB85760", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600043E")]
		[Address(RVA = "0xB85764", Offset = "0xB85764", VA = "0xB85764", Slot = "5")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600043F")]
		[Address(RVA = "0xB854CC", Offset = "0xB854CC", VA = "0xB854CC")]
		private void SendOnCharacterSelection(char character, int characterIndex)
		{
		}

		[Token(Token = "0x6000440")]
		[Address(RVA = "0xB85544", Offset = "0xB85544", VA = "0xB85544")]
		private void SendOnSpriteSelection(char character, int characterIndex)
		{
		}

		[Token(Token = "0x6000441")]
		[Address(RVA = "0xB855BC", Offset = "0xB855BC", VA = "0xB855BC")]
		private void SendOnWordSelection(string word, int charIndex, int length)
		{
		}

		[Token(Token = "0x6000442")]
		[Address(RVA = "0xB85648", Offset = "0xB85648", VA = "0xB85648")]
		private void SendOnLineSelection(string line, int charIndex, int length)
		{
		}

		[Token(Token = "0x6000443")]
		[Address(RVA = "0xB856D4", Offset = "0xB856D4", VA = "0xB856D4")]
		private void SendOnLinkSelection(string linkID, string linkText, int linkIndex)
		{
		}

		[Token(Token = "0x6000444")]
		[Address(RVA = "0xB85768", Offset = "0xB85768", VA = "0xB85768")]
		public TMP_TextEventHandler()
		{
		}
	}
}
namespace TMPro.Examples
{
	[Token(Token = "0x2000116")]
	public class Benchmark01 : MonoBehaviour
	{
		[Token(Token = "0x2000117")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76FBD4", Offset = "0x76FBD4")]
		private sealed class <Start>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40005BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40005BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40005BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Benchmark01 <>4__this;

			[Token(Token = "0x40005BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <i>5__2;

			[Token(Token = "0x1700005E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600044F")]
				[Address(RVA = "0xB03BC8", Offset = "0xB03BC8", VA = "0xB03BC8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700005F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000451")]
				[Address(RVA = "0xB03C10", Offset = "0xB03C10", VA = "0xB03C10", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600044C")]
			[Address(RVA = "0xB03620", Offset = "0xB03620", VA = "0xB03620")]
			[DebuggerHidden]
			public <Start>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x600044D")]
			[Address(RVA = "0xB0364C", Offset = "0xB0364C", VA = "0xB0364C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600044E")]
			[Address(RVA = "0xB03650", Offset = "0xB03650", VA = "0xB03650", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000450")]
			[Address(RVA = "0xB03BD0", Offset = "0xB03BD0", VA = "0xB03BD0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40005B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int BenchmarkType;

		[Token(Token = "0x40005B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TMP_FontAsset TMProFont;

		[Token(Token = "0x40005B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Font TextMeshFont;

		[Token(Token = "0x40005B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private TextMeshPro m_textMeshPro;

		[Token(Token = "0x40005B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TextContainer m_textContainer;

		[Token(Token = "0x40005B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private TextMesh m_textMesh;

		[Token(Token = "0x40005B6")]
		private const string label01 = "The <#0050FF>count is: </color>{0}";

		[Token(Token = "0x40005B7")]
		private const string label02 = "The <color=#0050FF>count is: </color>";

		[Token(Token = "0x40005B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Material m_material01;

		[Token(Token = "0x40005B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Material m_material02;

		[Token(Token = "0x600044A")]
		[Address(RVA = "0xB48280", Offset = "0xB48280", VA = "0xB48280")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x775560", Offset = "0x775560")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x600044B")]
		[Address(RVA = "0xB482EC", Offset = "0xB482EC", VA = "0xB482EC")]
		public Benchmark01()
		{
		}
	}
	[Token(Token = "0x2000118")]
	public class Benchmark01_UGUI : MonoBehaviour
	{
		[Token(Token = "0x2000119")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76FBE4", Offset = "0x76FBE4")]
		private sealed class <Start>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40005C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40005C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40005CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Benchmark01_UGUI <>4__this;

			[Token(Token = "0x40005CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <i>5__2;

			[Token(Token = "0x17000060")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000457")]
				[Address(RVA = "0xB040BC", Offset = "0xB040BC", VA = "0xB040BC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000061")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000459")]
				[Address(RVA = "0xB04104", Offset = "0xB04104", VA = "0xB04104", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000454")]
			[Address(RVA = "0xB03C18", Offset = "0xB03C18", VA = "0xB03C18")]
			[DebuggerHidden]
			public <Start>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x6000455")]
			[Address(RVA = "0xB03C44", Offset = "0xB03C44", VA = "0xB03C44", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000456")]
			[Address(RVA = "0xB03C48", Offset = "0xB03C48", VA = "0xB03C48", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000458")]
			[Address(RVA = "0xB040C4", Offset = "0xB040C4", VA = "0xB040C4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40005BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int BenchmarkType;

		[Token(Token = "0x40005BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Canvas canvas;

		[Token(Token = "0x40005C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TMP_FontAsset TMProFont;

		[Token(Token = "0x40005C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Font TextMeshFont;

		[Token(Token = "0x40005C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TextMeshProUGUI m_textMeshPro;

		[Token(Token = "0x40005C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Text m_textMesh;

		[Token(Token = "0x40005C4")]
		private const string label01 = "The <#0050FF>count is: </color>";

		[Token(Token = "0x40005C5")]
		private const string label02 = "The <color=#0050FF>count is: </color>";

		[Token(Token = "0x40005C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Material m_material01;

		[Token(Token = "0x40005C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Material m_material02;

		[Token(Token = "0x6000452")]
		[Address(RVA = "0xB482F4", Offset = "0xB482F4", VA = "0xB482F4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x775610", Offset = "0x775610")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x6000453")]
		[Address(RVA = "0xB48360", Offset = "0xB48360", VA = "0xB48360")]
		public Benchmark01_UGUI()
		{
		}
	}
	[Token(Token = "0x200011A")]
	public class Benchmark02 : MonoBehaviour
	{
		[Token(Token = "0x40005CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int SpawnType;

		[Token(Token = "0x40005CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int NumberOfNPC;

		[Token(Token = "0x40005CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool IsTextObjectScaleStatic;

		[Token(Token = "0x40005CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TextMeshProFloatingText floatingText_Script;

		[Token(Token = "0x600045A")]
		[Address(RVA = "0xB48368", Offset = "0xB48368", VA = "0xB48368")]
		private void Start()
		{
		}

		[Token(Token = "0x600045B")]
		[Address(RVA = "0xB48988", Offset = "0xB48988", VA = "0xB48988")]
		public Benchmark02()
		{
		}
	}
	[Token(Token = "0x200011B")]
	public class Benchmark03 : MonoBehaviour
	{
		[Token(Token = "0x200011C")]
		public enum BenchmarkType
		{
			[Token(Token = "0x40005D4")]
			TMP_SDF_MOBILE,
			[Token(Token = "0x40005D5")]
			TMP_SDF__MOBILE_SSD,
			[Token(Token = "0x40005D6")]
			TMP_SDF,
			[Token(Token = "0x40005D7")]
			TMP_BITMAP_MOBILE,
			[Token(Token = "0x40005D8")]
			TEXTMESH_BITMAP
		}

		[Token(Token = "0x40005D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int NumberOfSamples;

		[Token(Token = "0x40005D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public BenchmarkType Benchmark;

		[Token(Token = "0x40005D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Font SourceFont;

		[Token(Token = "0x600045C")]
		[Address(RVA = "0xB48998", Offset = "0xB48998", VA = "0xB48998")]
		private void Awake()
		{
		}

		[Token(Token = "0x600045D")]
		[Address(RVA = "0xB4899C", Offset = "0xB4899C", VA = "0xB4899C")]
		private void Start()
		{
		}

		[Token(Token = "0x600045E")]
		[Address(RVA = "0xB48E58", Offset = "0xB48E58", VA = "0xB48E58")]
		public Benchmark03()
		{
		}
	}
	[Token(Token = "0x200011D")]
	public class Benchmark04 : MonoBehaviour
	{
		[Token(Token = "0x40005D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int SpawnType;

		[Token(Token = "0x40005DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int MinPointSize;

		[Token(Token = "0x40005DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int MaxPointSize;

		[Token(Token = "0x40005DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int Steps;

		[Token(Token = "0x40005DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Transform m_Transform;

		[Token(Token = "0x600045F")]
		[Address(RVA = "0xB48E68", Offset = "0xB48E68", VA = "0xB48E68")]
		private void Start()
		{
		}

		[Token(Token = "0x6000460")]
		[Address(RVA = "0xB4917C", Offset = "0xB4917C", VA = "0xB4917C")]
		public Benchmark04()
		{
		}
	}
	[Token(Token = "0x200011E")]
	public class CameraController : MonoBehaviour
	{
		[Token(Token = "0x200011F")]
		public enum CameraModes
		{
			[Token(Token = "0x40005F8")]
			Follow,
			[Token(Token = "0x40005F9")]
			Isometric,
			[Token(Token = "0x40005FA")]
			Free
		}

		[Token(Token = "0x40005DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Transform cameraTransform;

		[Token(Token = "0x40005DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform dummyTarget;

		[Token(Token = "0x40005E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform CameraTarget;

		[Token(Token = "0x40005E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float FollowDistance;

		[Token(Token = "0x40005E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float MaxFollowDistance;

		[Token(Token = "0x40005E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float MinFollowDistance;

		[Token(Token = "0x40005E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float ElevationAngle;

		[Token(Token = "0x40005E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float MaxElevationAngle;

		[Token(Token = "0x40005E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float MinElevationAngle;

		[Token(Token = "0x40005E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float OrbitalAngle;

		[Token(Token = "0x40005E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public CameraModes CameraMode;

		[Token(Token = "0x40005E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool MovementSmoothing;

		[Token(Token = "0x40005EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		public bool RotationSmoothing;

		[Token(Token = "0x40005EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
		private bool previousSmoothing;

		[Token(Token = "0x40005EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float MovementSmoothingValue;

		[Token(Token = "0x40005ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float RotationSmoothingValue;

		[Token(Token = "0x40005EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float MoveSensitivity;

		[Token(Token = "0x40005EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Vector3 currentVelocity;

		[Token(Token = "0x40005F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private Vector3 desiredPosition;

		[Token(Token = "0x40005F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float mouseX;

		[Token(Token = "0x40005F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private float mouseY;

		[Token(Token = "0x40005F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Vector3 moveVector;

		[Token(Token = "0x40005F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private float mouseWheel;

		[Token(Token = "0x40005F5")]
		private const string event_SmoothingValue = "Slider - Smoothing Value";

		[Token(Token = "0x40005F6")]
		private const string event_FollowDistance = "Slider - Camera Zoom";

		[Token(Token = "0x6000461")]
		[Address(RVA = "0x11DF480", Offset = "0x11DF480", VA = "0x11DF480")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000462")]
		[Address(RVA = "0x11DF504", Offset = "0x11DF504", VA = "0x11DF504")]
		private void Start()
		{
		}

		[Token(Token = "0x6000463")]
		[Address(RVA = "0x11DF5D0", Offset = "0x11DF5D0", VA = "0x11DF5D0")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000464")]
		[Address(RVA = "0x11DF8E8", Offset = "0x11DF8E8", VA = "0x11DF8E8")]
		private void GetPlayerInput()
		{
		}

		[Token(Token = "0x6000465")]
		[Address(RVA = "0x11E0094", Offset = "0x11E0094", VA = "0x11E0094")]
		public CameraController()
		{
		}
	}
	[Token(Token = "0x2000120")]
	public class ObjectSpin : MonoBehaviour
	{
		[Token(Token = "0x2000121")]
		public enum MotionType
		{
			[Token(Token = "0x4000606")]
			Rotation,
			[Token(Token = "0x4000607")]
			BackAndForth,
			[Token(Token = "0x4000608")]
			Translation
		}

		[Token(Token = "0x40005FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float SpinSpeed;

		[Token(Token = "0x40005FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int RotationRange;

		[Token(Token = "0x40005FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform m_transform;

		[Token(Token = "0x40005FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float m_time;

		[Token(Token = "0x40005FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector3 m_prevPOS;

		[Token(Token = "0x4000600")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 m_initial_Rotation;

		[Token(Token = "0x4000601")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Vector3 m_initial_Position;

		[Token(Token = "0x4000602")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Color32 m_lightColor;

		[Token(Token = "0x4000603")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int frames;

		[Token(Token = "0x4000604")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public MotionType Motion;

		[Token(Token = "0x6000466")]
		[Address(RVA = "0xB9BCA8", Offset = "0xB9BCA8", VA = "0xB9BCA8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000467")]
		[Address(RVA = "0xB9BDC8", Offset = "0xB9BDC8", VA = "0xB9BDC8")]
		private void Update()
		{
		}

		[Token(Token = "0x6000468")]
		[Address(RVA = "0xB9BF04", Offset = "0xB9BF04", VA = "0xB9BF04")]
		public ObjectSpin()
		{
		}
	}
	[Token(Token = "0x2000122")]
	public class ShaderPropAnimator : MonoBehaviour
	{
		[Token(Token = "0x2000123")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76FBF4", Offset = "0x76FBF4")]
		private sealed class <AnimateProperties>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400060D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400060E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400060F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ShaderPropAnimator <>4__this;

			[Token(Token = "0x17000062")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000470")]
				[Address(RVA = "0xB30CF8", Offset = "0xB30CF8", VA = "0xB30CF8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000063")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000472")]
				[Address(RVA = "0xB30D40", Offset = "0xB30D40", VA = "0xB30D40", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600046D")]
			[Address(RVA = "0xB30B68", Offset = "0xB30B68", VA = "0xB30B68")]
			[DebuggerHidden]
			public <AnimateProperties>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x600046E")]
			[Address(RVA = "0xB30B94", Offset = "0xB30B94", VA = "0xB30B94", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600046F")]
			[Address(RVA = "0xB30B98", Offset = "0xB30B98", VA = "0xB30B98", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000471")]
			[Address(RVA = "0xB30D00", Offset = "0xB30D00", VA = "0xB30D00", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000609")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Renderer m_Renderer;

		[Token(Token = "0x400060A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Material m_Material;

		[Token(Token = "0x400060B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AnimationCurve GlowCurve;

		[Token(Token = "0x400060C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float m_frame;

		[Token(Token = "0x6000469")]
		[Address(RVA = "0xB7B5F4", Offset = "0xB7B5F4", VA = "0xB7B5F4")]
		private void Awake()
		{
		}

		[Token(Token = "0x600046A")]
		[Address(RVA = "0xB7B65C", Offset = "0xB7B65C", VA = "0xB7B65C")]
		private void Start()
		{
		}

		[Token(Token = "0x600046B")]
		[Address(RVA = "0xB7B688", Offset = "0xB7B688", VA = "0xB7B688")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7756C0", Offset = "0x7756C0")]
		private IEnumerator AnimateProperties()
		{
			return null;
		}

		[Token(Token = "0x600046C")]
		[Address(RVA = "0xB7B6F4", Offset = "0xB7B6F4", VA = "0xB7B6F4")]
		public ShaderPropAnimator()
		{
		}
	}
	[Token(Token = "0x2000124")]
	public class SimpleScript : MonoBehaviour
	{
		[Token(Token = "0x4000610")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TextMeshPro m_textMeshPro;

		[Token(Token = "0x4000611")]
		private const string label = "The <#0050FF>count is: </color>{0:2}";

		[Token(Token = "0x4000612")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float m_frame;

		[Token(Token = "0x6000473")]
		[Address(RVA = "0xB7C258", Offset = "0xB7C258", VA = "0xB7C258")]
		private void Start()
		{
		}

		[Token(Token = "0x6000474")]
		[Address(RVA = "0xB7C310", Offset = "0xB7C310", VA = "0xB7C310")]
		private void Update()
		{
		}

		[Token(Token = "0x6000475")]
		[Address(RVA = "0xB7C3A8", Offset = "0xB7C3A8", VA = "0xB7C3A8")]
		public SimpleScript()
		{
		}
	}
	[Token(Token = "0x2000125")]
	public class SkewTextExample : MonoBehaviour
	{
		[Token(Token = "0x2000126")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76FC04", Offset = "0x76FC04")]
		private sealed class <WarpText>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000617")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000618")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000619")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SkewTextExample <>4__this;

			[Token(Token = "0x400061A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <old_CurveScale>5__2;

			[Token(Token = "0x400061B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <old_ShearValue>5__3;

			[Token(Token = "0x400061C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private AnimationCurve <old_curve>5__4;

			[Token(Token = "0x17000064")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600047E")]
				[Address(RVA = "0xB315C4", Offset = "0xB315C4", VA = "0xB315C4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000065")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000480")]
				[Address(RVA = "0xB3160C", Offset = "0xB3160C", VA = "0xB3160C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600047B")]
			[Address(RVA = "0xB30D48", Offset = "0xB30D48", VA = "0xB30D48")]
			[DebuggerHidden]
			public <WarpText>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x600047C")]
			[Address(RVA = "0xB30D74", Offset = "0xB30D74", VA = "0xB30D74", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600047D")]
			[Address(RVA = "0xB30D78", Offset = "0xB30D78", VA = "0xB30D78", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600047F")]
			[Address(RVA = "0xB315CC", Offset = "0xB315CC", VA = "0xB315CC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000613")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TMP_Text m_TextComponent;

		[Token(Token = "0x4000614")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AnimationCurve VertexCurve;

		[Token(Token = "0x4000615")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float CurveScale;

		[Token(Token = "0x4000616")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float ShearAmount;

		[Token(Token = "0x6000476")]
		[Address(RVA = "0xB7CD54", Offset = "0xB7CD54", VA = "0xB7CD54")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000477")]
		[Address(RVA = "0xB7CDB8", Offset = "0xB7CDB8", VA = "0xB7CDB8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000478")]
		[Address(RVA = "0xB7CE50", Offset = "0xB7CE50", VA = "0xB7CE50")]
		private AnimationCurve CopyAnimationCurve(AnimationCurve curve)
		{
			return null;
		}

		[Token(Token = "0x6000479")]
		[Address(RVA = "0xB7CDE4", Offset = "0xB7CDE4", VA = "0xB7CDE4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x775770", Offset = "0x775770")]
		private IEnumerator WarpText()
		{
			return null;
		}

		[Token(Token = "0x600047A")]
		[Address(RVA = "0xB7CED4", Offset = "0xB7CED4", VA = "0xB7CED4")]
		public SkewTextExample()
		{
		}
	}
	[Token(Token = "0x2000127")]
	public class TMP_ExampleScript_01 : MonoBehaviour
	{
		[Token(Token = "0x2000128")]
		public enum objectType
		{
			[Token(Token = "0x4000623")]
			TextMeshPro,
			[Token(Token = "0x4000624")]
			TextMeshProUGUI
		}

		[Token(Token = "0x400061D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public objectType ObjectType;

		[Token(Token = "0x400061E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool isStatic;

		[Token(Token = "0x400061F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TMP_Text m_text;

		[Token(Token = "0x4000620")]
		private const string k_label = "The count is <#0080ff>{0}</color>";

		[Token(Token = "0x4000621")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int count;

		[Token(Token = "0x6000481")]
		[Address(RVA = "0xB83068", Offset = "0xB83068", VA = "0xB83068")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000482")]
		[Address(RVA = "0xB83280", Offset = "0xB83280", VA = "0xB83280")]
		private void Update()
		{
		}

		[Token(Token = "0x6000483")]
		[Address(RVA = "0xB83318", Offset = "0xB83318", VA = "0xB83318")]
		public TMP_ExampleScript_01()
		{
		}
	}
	[Token(Token = "0x2000129")]
	public class TMP_FrameRateCounter : MonoBehaviour
	{
		[Token(Token = "0x200012A")]
		public enum FpsCounterAnchorPositions
		{
			[Token(Token = "0x4000630")]
			TopLeft,
			[Token(Token = "0x4000631")]
			BottomLeft,
			[Token(Token = "0x4000632")]
			TopRight,
			[Token(Token = "0x4000633")]
			BottomRight
		}

		[Token(Token = "0x4000625")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float UpdateInterval;

		[Token(Token = "0x4000626")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float m_LastInterval;

		[Token(Token = "0x4000627")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int m_Frames;

		[Token(Token = "0x4000628")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public FpsCounterAnchorPositions AnchorPosition;

		[Token(Token = "0x4000629")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string htmlColorTag;

		[Token(Token = "0x400062A")]
		private const string fpsLabel = "{0:2}</color> <#8080ff>FPS \n<#FF8000>{1:2} <#8080ff>MS";

		[Token(Token = "0x400062B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private TextMeshPro m_TextMeshPro;

		[Token(Token = "0x400062C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Transform m_frameCounter_transform;

		[Token(Token = "0x400062D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Camera m_camera;

		[Token(Token = "0x400062E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private FpsCounterAnchorPositions last_AnchorPosition;

		[Token(Token = "0x6000484")]
		[Address(RVA = "0xB83320", Offset = "0xB83320", VA = "0xB83320")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000485")]
		[Address(RVA = "0xB83728", Offset = "0xB83728", VA = "0xB83728")]
		private void Start()
		{
		}

		[Token(Token = "0x6000486")]
		[Address(RVA = "0xB83754", Offset = "0xB83754", VA = "0xB83754")]
		private void Update()
		{
		}

		[Token(Token = "0x6000487")]
		[Address(RVA = "0xB83520", Offset = "0xB83520", VA = "0xB83520")]
		private void Set_FrameCounter_Position(FpsCounterAnchorPositions anchor_position)
		{
		}

		[Token(Token = "0x6000488")]
		[Address(RVA = "0xB838B4", Offset = "0xB838B4", VA = "0xB838B4")]
		public TMP_FrameRateCounter()
		{
		}
	}
	[Token(Token = "0x200012B")]
	public class TMP_TextEventCheck : MonoBehaviour
	{
		[Token(Token = "0x4000634")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TMP_TextEventHandler TextEventHandler;

		[Token(Token = "0x4000635")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TMP_Text m_TextComponent;

		[Token(Token = "0x6000489")]
		[Address(RVA = "0xB83CDC", Offset = "0xB83CDC", VA = "0xB83CDC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600048A")]
		[Address(RVA = "0xB83FE0", Offset = "0xB83FE0", VA = "0xB83FE0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600048B")]
		[Address(RVA = "0xB842BC", Offset = "0xB842BC", VA = "0xB842BC")]
		private void OnCharacterSelection(char c, int index)
		{
		}

		[Token(Token = "0x600048C")]
		[Address(RVA = "0xB844B4", Offset = "0xB844B4", VA = "0xB844B4")]
		private void OnSpriteSelection(char c, int index)
		{
		}

		[Token(Token = "0x600048D")]
		[Address(RVA = "0xB846AC", Offset = "0xB846AC", VA = "0xB846AC")]
		private void OnWordSelection(string word, int firstCharacterIndex, int length)
		{
		}

		[Token(Token = "0x600048E")]
		[Address(RVA = "0xB8490C", Offset = "0xB8490C", VA = "0xB8490C")]
		private void OnLineSelection(string lineText, int firstCharacterIndex, int length)
		{
		}

		[Token(Token = "0x600048F")]
		[Address(RVA = "0xB84B6C", Offset = "0xB84B6C", VA = "0xB84B6C")]
		private void OnLinkSelection(string linkID, string linkText, int linkIndex)
		{
		}

		[Token(Token = "0x6000490")]
		[Address(RVA = "0xB84E28", Offset = "0xB84E28", VA = "0xB84E28")]
		public TMP_TextEventCheck()
		{
		}
	}
	[Token(Token = "0x200012C")]
	public class TMP_TextInfoDebugTool : MonoBehaviour
	{
		[Token(Token = "0x6000491")]
		[Address(RVA = "0xB85884", Offset = "0xB85884", VA = "0xB85884")]
		public TMP_TextInfoDebugTool()
		{
		}
	}
	[Token(Token = "0x200012D")]
	public class TMP_TextSelector_A : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
	{
		[Token(Token = "0x4000636")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TextMeshPro m_TextMeshPro;

		[Token(Token = "0x4000637")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Camera m_Camera;

		[Token(Token = "0x4000638")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool m_isHoveringObject;

		[Token(Token = "0x4000639")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int m_selectedLink;

		[Token(Token = "0x400063A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int m_lastCharIndex;

		[Token(Token = "0x400063B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int m_lastWordIndex;

		[Token(Token = "0x6000492")]
		[Address(RVA = "0xB8588C", Offset = "0xB8588C", VA = "0xB8588C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000493")]
		[Address(RVA = "0xB8591C", Offset = "0xB8591C", VA = "0xB8591C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000494")]
		[Address(RVA = "0xB8603C", Offset = "0xB8603C", VA = "0xB8603C", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000495")]
		[Address(RVA = "0xB860C0", Offset = "0xB860C0", VA = "0xB860C0", Slot = "5")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000496")]
		[Address(RVA = "0xB86140", Offset = "0xB86140", VA = "0xB86140")]
		public TMP_TextSelector_A()
		{
		}
	}
	[Token(Token = "0x200012E")]
	public class TMP_TextSelector_B : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler, IPointerClickHandler, IPointerUpHandler
	{
		[Token(Token = "0x400063C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public RectTransform TextPopup_Prefab_01;

		[Token(Token = "0x400063D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private RectTransform m_TextPopup_RectTransform;

		[Token(Token = "0x400063E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TextMeshProUGUI m_TextPopup_TMPComponent;

		[Token(Token = "0x400063F")]
		private const string k_LinkText = "You have selected link <#ffff00>";

		[Token(Token = "0x4000640")]
		private const string k_WordText = "Word Index: <#ffff00>";

		[Token(Token = "0x4000641")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private TextMeshProUGUI m_TextMeshPro;

		[Token(Token = "0x4000642")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Canvas m_Canvas;

		[Token(Token = "0x4000643")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Camera m_Camera;

		[Token(Token = "0x4000644")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool isHoveringObject;

		[Token(Token = "0x4000645")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private int m_selectedWord;

		[Token(Token = "0x4000646")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int m_selectedLink;

		[Token(Token = "0x4000647")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int m_lastIndex;

		[Token(Token = "0x4000648")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Matrix4x4 m_matrix;

		[Token(Token = "0x4000649")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private TMP_MeshInfo[] m_cachedMeshInfoVertexData;

		[Token(Token = "0x6000497")]
		[Address(RVA = "0xB86158", Offset = "0xB86158", VA = "0xB86158")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000498")]
		[Address(RVA = "0xB862E4", Offset = "0xB862E4", VA = "0xB862E4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000499")]
		[Address(RVA = "0xB863D4", Offset = "0xB863D4", VA = "0xB863D4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600049A")]
		[Address(RVA = "0xB864C4", Offset = "0xB864C4", VA = "0xB864C4")]
		private void ON_TEXT_CHANGED(UnityEngine.Object obj)
		{
		}

		[Token(Token = "0x600049B")]
		[Address(RVA = "0xB86564", Offset = "0xB86564", VA = "0xB86564")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600049C")]
		[Address(RVA = "0xB87A5C", Offset = "0xB87A5C", VA = "0xB87A5C", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600049D")]
		[Address(RVA = "0xB87A68", Offset = "0xB87A68", VA = "0xB87A68", Slot = "5")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600049E")]
		[Address(RVA = "0xB87A70", Offset = "0xB87A70", VA = "0xB87A70", Slot = "6")]
		public void OnPointerClick(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600049F")]
		[Address(RVA = "0xB87A74", Offset = "0xB87A74", VA = "0xB87A74", Slot = "7")]
		public void OnPointerUp(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60004A0")]
		[Address(RVA = "0xB871CC", Offset = "0xB871CC", VA = "0xB871CC")]
		private void RestoreCachedVertexAttributes(int index)
		{
		}

		[Token(Token = "0x60004A1")]
		[Address(RVA = "0xB87A78", Offset = "0xB87A78", VA = "0xB87A78")]
		public TMP_TextSelector_B()
		{
		}
	}
	[Token(Token = "0x200012F")]
	public class TMP_UiFrameRateCounter : MonoBehaviour
	{
		[Token(Token = "0x2000130")]
		public enum FpsCounterAnchorPositions
		{
			[Token(Token = "0x4000654")]
			TopLeft,
			[Token(Token = "0x4000655")]
			BottomLeft,
			[Token(Token = "0x4000656")]
			TopRight,
			[Token(Token = "0x4000657")]
			BottomRight
		}

		[Token(Token = "0x400064A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float UpdateInterval;

		[Token(Token = "0x400064B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float m_LastInterval;

		[Token(Token = "0x400064C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int m_Frames;

		[Token(Token = "0x400064D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public FpsCounterAnchorPositions AnchorPosition;

		[Token(Token = "0x400064E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string htmlColorTag;

		[Token(Token = "0x400064F")]
		private const string fpsLabel = "{0:2}</color> <#8080ff>FPS \n<#FF8000>{1:2} <#8080ff>MS";

		[Token(Token = "0x4000650")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private TextMeshProUGUI m_TextMeshPro;

		[Token(Token = "0x4000651")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private RectTransform m_frameCounter_transform;

		[Token(Token = "0x4000652")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private FpsCounterAnchorPositions last_AnchorPosition;

		[Token(Token = "0x60004A2")]
		[Address(RVA = "0xB87A90", Offset = "0xB87A90", VA = "0xB87A90")]
		private void Awake()
		{
		}

		[Token(Token = "0x60004A3")]
		[Address(RVA = "0xB87ED4", Offset = "0xB87ED4", VA = "0xB87ED4")]
		private void Start()
		{
		}

		[Token(Token = "0x60004A4")]
		[Address(RVA = "0xB87F00", Offset = "0xB87F00", VA = "0xB87F00")]
		private void Update()
		{
		}

		[Token(Token = "0x60004A5")]
		[Address(RVA = "0xB87C90", Offset = "0xB87C90", VA = "0xB87C90")]
		private void Set_FrameCounter_Position(FpsCounterAnchorPositions anchor_position)
		{
		}

		[Token(Token = "0x60004A6")]
		[Address(RVA = "0xB88060", Offset = "0xB88060", VA = "0xB88060")]
		public TMP_UiFrameRateCounter()
		{
		}
	}
	[Token(Token = "0x2000131")]
	public class TMPro_InstructionOverlay : MonoBehaviour
	{
		[Token(Token = "0x2000132")]
		public enum FpsCounterAnchorPositions
		{
			[Token(Token = "0x400065F")]
			TopLeft,
			[Token(Token = "0x4000660")]
			BottomLeft,
			[Token(Token = "0x4000661")]
			TopRight,
			[Token(Token = "0x4000662")]
			BottomRight
		}

		[Token(Token = "0x4000658")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public FpsCounterAnchorPositions AnchorPosition;

		[Token(Token = "0x4000659")]
		private const string instructions = "Camera Control - <#ffff00>Shift + RMB\n</color>Zoom - <#ffff00>Mouse wheel.";

		[Token(Token = "0x400065A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TextMeshPro m_TextMeshPro;

		[Token(Token = "0x400065B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TextContainer m_textContainer;

		[Token(Token = "0x400065C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform m_frameCounter_transform;

		[Token(Token = "0x400065D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Camera m_camera;

		[Token(Token = "0x60004A7")]
		[Address(RVA = "0xB88078", Offset = "0xB88078", VA = "0xB88078")]
		private void Awake()
		{
		}

		[Token(Token = "0x60004A8")]
		[Address(RVA = "0xB882C4", Offset = "0xB882C4", VA = "0xB882C4")]
		private void Set_FrameCounter_Position(FpsCounterAnchorPositions anchor_position)
		{
		}

		[Token(Token = "0x60004A9")]
		[Address(RVA = "0xB883EC", Offset = "0xB883EC", VA = "0xB883EC")]
		public TMPro_InstructionOverlay()
		{
		}
	}
	[Token(Token = "0x2000133")]
	public class TeleType : MonoBehaviour
	{
		[Token(Token = "0x2000134")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76FC14", Offset = "0x76FC14")]
		private sealed class <Start>d__4 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000666")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000667")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000668")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TeleType <>4__this;

			[Token(Token = "0x4000669")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <totalVisibleCharacters>5__2;

			[Token(Token = "0x400066A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private int <counter>5__3;

			[Token(Token = "0x17000066")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60004B0")]
				[Address(RVA = "0xB31AEC", Offset = "0xB31AEC", VA = "0xB31AEC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000067")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60004B2")]
				[Address(RVA = "0xB31B34", Offset = "0xB31B34", VA = "0xB31B34", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60004AD")]
			[Address(RVA = "0xB3188C", Offset = "0xB3188C", VA = "0xB3188C")]
			[DebuggerHidden]
			public <Start>d__4(int <>1__state)
			{
			}

			[Token(Token = "0x60004AE")]
			[Address(RVA = "0xB318B8", Offset = "0xB318B8", VA = "0xB318B8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60004AF")]
			[Address(RVA = "0xB318BC", Offset = "0xB318BC", VA = "0xB318BC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60004B1")]
			[Address(RVA = "0xB31AF4", Offset = "0xB31AF4", VA = "0xB31AF4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000663")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string label01;

		[Token(Token = "0x4000664")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string label02;

		[Token(Token = "0x4000665")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TMP_Text m_textMeshPro;

		[Token(Token = "0x60004AA")]
		[Address(RVA = "0xB88500", Offset = "0xB88500", VA = "0xB88500")]
		private void Awake()
		{
		}

		[Token(Token = "0x60004AB")]
		[Address(RVA = "0xB88594", Offset = "0xB88594", VA = "0xB88594")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x775820", Offset = "0x775820")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x60004AC")]
		[Address(RVA = "0xB88600", Offset = "0xB88600", VA = "0xB88600")]
		public TeleType()
		{
		}
	}
	[Token(Token = "0x2000135")]
	public class TextConsoleSimulator : MonoBehaviour
	{
		[Token(Token = "0x2000136")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76FC24", Offset = "0x76FC24")]
		private sealed class <RevealCharacters>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400066D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400066E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400066F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TMP_Text textComponent;

			[Token(Token = "0x4000670")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public TextConsoleSimulator <>4__this;

			[Token(Token = "0x4000671")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TMP_TextInfo <textInfo>5__2;

			[Token(Token = "0x4000672")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private int <totalVisibleCharacters>5__3;

			[Token(Token = "0x4000673")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private int <visibleCount>5__4;

			[Token(Token = "0x17000068")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60004BE")]
				[Address(RVA = "0xB32650", Offset = "0xB32650", VA = "0xB32650", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000069")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60004C0")]
				[Address(RVA = "0xB32698", Offset = "0xB32698", VA = "0xB32698", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60004BB")]
			[Address(RVA = "0xB324BC", Offset = "0xB324BC", VA = "0xB324BC")]
			[DebuggerHidden]
			public <RevealCharacters>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x60004BC")]
			[Address(RVA = "0xB324E8", Offset = "0xB324E8", VA = "0xB324E8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60004BD")]
			[Address(RVA = "0xB324EC", Offset = "0xB324EC", VA = "0xB324EC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60004BF")]
			[Address(RVA = "0xB32658", Offset = "0xB32658", VA = "0xB32658", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000137")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76FC34", Offset = "0x76FC34")]
		private sealed class <RevealWords>d__8 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000674")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000675")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000676")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TMP_Text textComponent;

			[Token(Token = "0x4000677")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <totalWordCount>5__2;

			[Token(Token = "0x4000678")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private int <totalVisibleCharacters>5__3;

			[Token(Token = "0x4000679")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <counter>5__4;

			[Token(Token = "0x400067A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private int <visibleCount>5__5;

			[Token(Token = "0x1700006A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60004C4")]
				[Address(RVA = "0xB328B8", Offset = "0xB328B8", VA = "0xB328B8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700006B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60004C6")]
				[Address(RVA = "0xB32900", Offset = "0xB32900", VA = "0xB32900", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60004C1")]
			[Address(RVA = "0xB326A0", Offset = "0xB326A0", VA = "0xB326A0")]
			[DebuggerHidden]
			public <RevealWords>d__8(int <>1__state)
			{
			}

			[Token(Token = "0x60004C2")]
			[Address(RVA = "0xB326CC", Offset = "0xB326CC", VA = "0xB326CC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60004C3")]
			[Address(RVA = "0xB326D0", Offset = "0xB326D0", VA = "0xB326D0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60004C5")]
			[Address(RVA = "0xB328C0", Offset = "0xB328C0", VA = "0xB328C0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400066B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TMP_Text m_TextComponent;

		[Token(Token = "0x400066C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool hasTextChanged;

		[Token(Token = "0x60004B3")]
		[Address(RVA = "0xB8BB54", Offset = "0xB8BB54", VA = "0xB8BB54")]
		private void Awake()
		{
		}

		[Token(Token = "0x60004B4")]
		[Address(RVA = "0xB8BBB8", Offset = "0xB8BBB8", VA = "0xB8BBB8")]
		private void Start()
		{
		}

		[Token(Token = "0x60004B5")]
		[Address(RVA = "0xB8BC60", Offset = "0xB8BC60", VA = "0xB8BC60")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60004B6")]
		[Address(RVA = "0xB8BD50", Offset = "0xB8BD50", VA = "0xB8BD50")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60004B7")]
		[Address(RVA = "0xB8BE40", Offset = "0xB8BE40", VA = "0xB8BE40")]
		private void ON_TEXT_CHANGED(UnityEngine.Object obj)
		{
		}

		[Token(Token = "0x60004B8")]
		[Address(RVA = "0xB8BBE8", Offset = "0xB8BBE8", VA = "0xB8BBE8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7758D0", Offset = "0x7758D0")]
		private IEnumerator RevealCharacters(TMP_Text textComponent)
		{
			return null;
		}

		[Token(Token = "0x60004B9")]
		[Address(RVA = "0xB8BE4C", Offset = "0xB8BE4C", VA = "0xB8BE4C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x775930", Offset = "0x775930")]
		private IEnumerator RevealWords(TMP_Text textComponent)
		{
			return null;
		}

		[Token(Token = "0x60004BA")]
		[Address(RVA = "0xB8BEB8", Offset = "0xB8BEB8", VA = "0xB8BEB8")]
		public TextConsoleSimulator()
		{
		}
	}
	[Token(Token = "0x2000138")]
	public class TextMeshProFloatingText : MonoBehaviour
	{
		[Token(Token = "0x2000139")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76FC44", Offset = "0x76FC44")]
		private sealed class <DisplayTextMeshProFloatingText>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000688")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000689")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400068A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TextMeshProFloatingText <>4__this;

			[Token(Token = "0x400068B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <CountDuration>5__2;

			[Token(Token = "0x400068C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <starting_Count>5__3;

			[Token(Token = "0x400068D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <current_Count>5__4;

			[Token(Token = "0x400068E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private Vector3 <start_pos>5__5;

			[Token(Token = "0x400068F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Color32 <start_color>5__6;

			[Token(Token = "0x4000690")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private float <alpha>5__7;

			[Token(Token = "0x4000691")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private float <fadeDuration>5__8;

			[Token(Token = "0x1700006C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60004D0")]
				[Address(RVA = "0xB33250", Offset = "0xB33250", VA = "0xB33250", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700006D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60004D2")]
				[Address(RVA = "0xB33298", Offset = "0xB33298", VA = "0xB33298", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60004CD")]
			[Address(RVA = "0xB32DC8", Offset = "0xB32DC8", VA = "0xB32DC8")]
			[DebuggerHidden]
			public <DisplayTextMeshProFloatingText>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x60004CE")]
			[Address(RVA = "0xB32DF4", Offset = "0xB32DF4", VA = "0xB32DF4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60004CF")]
			[Address(RVA = "0xB32DF8", Offset = "0xB32DF8", VA = "0xB32DF8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60004D1")]
			[Address(RVA = "0xB33258", Offset = "0xB33258", VA = "0xB33258", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200013A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76FC54", Offset = "0x76FC54")]
		private sealed class <DisplayTextMeshFloatingText>d__16 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000692")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000693")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000694")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TextMeshProFloatingText <>4__this;

			[Token(Token = "0x4000695")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <CountDuration>5__2;

			[Token(Token = "0x4000696")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <starting_Count>5__3;

			[Token(Token = "0x4000697")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <current_Count>5__4;

			[Token(Token = "0x4000698")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private Vector3 <start_pos>5__5;

			[Token(Token = "0x4000699")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Color32 <start_color>5__6;

			[Token(Token = "0x400069A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private float <alpha>5__7;

			[Token(Token = "0x400069B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private float <fadeDuration>5__8;

			[Token(Token = "0x1700006E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60004D6")]
				[Address(RVA = "0xB32D78", Offset = "0xB32D78", VA = "0xB32D78", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700006F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60004D8")]
				[Address(RVA = "0xB32DC0", Offset = "0xB32DC0", VA = "0xB32DC0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60004D3")]
			[Address(RVA = "0xB32908", Offset = "0xB32908", VA = "0xB32908")]
			[DebuggerHidden]
			public <DisplayTextMeshFloatingText>d__16(int <>1__state)
			{
			}

			[Token(Token = "0x60004D4")]
			[Address(RVA = "0xB32934", Offset = "0xB32934", VA = "0xB32934", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60004D5")]
			[Address(RVA = "0xB32938", Offset = "0xB32938", VA = "0xB32938", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60004D7")]
			[Address(RVA = "0xB32D80", Offset = "0xB32D80", VA = "0xB32D80", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400067B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Font TheFont;

		[Token(Token = "0x400067C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GameObject m_floatingText;

		[Token(Token = "0x400067D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TextMeshPro m_textMeshPro;

		[Token(Token = "0x400067E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private TextMesh m_textMesh;

		[Token(Token = "0x400067F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Transform m_transform;

		[Token(Token = "0x4000680")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Transform m_floatingText_Transform;

		[Token(Token = "0x4000681")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Transform m_cameraTransform;

		[Token(Token = "0x4000682")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector3 lastPOS;

		[Token(Token = "0x4000683")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private Quaternion lastRotation;

		[Token(Token = "0x4000684")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public int SpawnType;

		[Token(Token = "0x4000685")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public bool IsTextObjectScaleStatic;

		[Token(Token = "0x4000686")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static WaitForEndOfFrame k_WaitForEndOfFrame;

		[Token(Token = "0x4000687")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static WaitForSeconds[] k_WaitForSecondsRandom;

		[Token(Token = "0x60004C7")]
		[Address(RVA = "0xB8BEC0", Offset = "0xB8BEC0", VA = "0xB8BEC0")]
		private void Awake()
		{
		}

		[Token(Token = "0x60004C8")]
		[Address(RVA = "0xB8BF88", Offset = "0xB8BF88", VA = "0xB8BF88")]
		private void Start()
		{
		}

		[Token(Token = "0x60004C9")]
		[Address(RVA = "0xB8C360", Offset = "0xB8C360", VA = "0xB8C360")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x775A30", Offset = "0x775A30")]
		public IEnumerator DisplayTextMeshProFloatingText()
		{
			return null;
		}

		[Token(Token = "0x60004CA")]
		[Address(RVA = "0xB8C3CC", Offset = "0xB8C3CC", VA = "0xB8C3CC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x775A90", Offset = "0x775A90")]
		public IEnumerator DisplayTextMeshFloatingText()
		{
			return null;
		}

		[Token(Token = "0x60004CB")]
		[Address(RVA = "0xB8C438", Offset = "0xB8C438", VA = "0xB8C438")]
		public TextMeshProFloatingText()
		{
		}
	}
	[Token(Token = "0x200013B")]
	public class TextMeshSpawner : MonoBehaviour
	{
		[Token(Token = "0x400069C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int SpawnType;

		[Token(Token = "0x400069D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int NumberOfNPC;

		[Token(Token = "0x400069E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Font TheFont;

		[Token(Token = "0x400069F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TextMeshProFloatingText floatingText_Script;

		[Token(Token = "0x60004D9")]
		[Address(RVA = "0xAEFB38", Offset = "0xAEFB38", VA = "0xAEFB38")]
		private void Awake()
		{
		}

		[Token(Token = "0x60004DA")]
		[Address(RVA = "0xAEFB3C", Offset = "0xAEFB3C", VA = "0xAEFB3C")]
		private void Start()
		{
		}

		[Token(Token = "0x60004DB")]
		[Address(RVA = "0xAEFE5C", Offset = "0xAEFE5C", VA = "0xAEFE5C")]
		public TextMeshSpawner()
		{
		}
	}
	[Token(Token = "0x200013C")]
	public class VertexColorCycler : MonoBehaviour
	{
		[Token(Token = "0x200013D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76FC64", Offset = "0x76FC64")]
		private sealed class <AnimateVertexColors>d__3 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40006A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40006A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40006A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VertexColorCycler <>4__this;

			[Token(Token = "0x40006A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private TMP_TextInfo <textInfo>5__2;

			[Token(Token = "0x40006A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <currentCharacter>5__3;

			[Token(Token = "0x17000070")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60004E3")]
				[Address(RVA = "0xB33E8C", Offset = "0xB33E8C", VA = "0xB33E8C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000071")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60004E5")]
				[Address(RVA = "0xB33ED4", Offset = "0xB33ED4", VA = "0xB33ED4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60004E0")]
			[Address(RVA = "0xB33BA4", Offset = "0xB33BA4", VA = "0xB33BA4")]
			[DebuggerHidden]
			public <AnimateVertexColors>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x60004E1")]
			[Address(RVA = "0xB33BD0", Offset = "0xB33BD0", VA = "0xB33BD0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60004E2")]
			[Address(RVA = "0xB33BD4", Offset = "0xB33BD4", VA = "0xB33BD4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60004E4")]
			[Address(RVA = "0xB33E94", Offset = "0xB33E94", VA = "0xB33E94", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40006A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TMP_Text m_TextComponent;

		[Token(Token = "0x60004DC")]
		[Address(RVA = "0xAF7D7C", Offset = "0xAF7D7C", VA = "0xAF7D7C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60004DD")]
		[Address(RVA = "0xAF7DD0", Offset = "0xAF7DD0", VA = "0xAF7DD0")]
		private void Start()
		{
		}

		[Token(Token = "0x60004DE")]
		[Address(RVA = "0xAF7DFC", Offset = "0xAF7DFC", VA = "0xAF7DFC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x775B90", Offset = "0x775B90")]
		private IEnumerator AnimateVertexColors()
		{
			return null;
		}

		[Token(Token = "0x60004DF")]
		[Address(RVA = "0xAF7E68", Offset = "0xAF7E68", VA = "0xAF7E68")]
		public VertexColorCycler()
		{
		}
	}
	[Token(Token = "0x200013E")]
	public class VertexJitter : MonoBehaviour
	{
		[Token(Token = "0x200013F")]
		private struct VertexAnim
		{
			[Token(Token = "0x40006AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float angleRange;

			[Token(Token = "0x40006AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public float angle;

			[Token(Token = "0x40006AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public float speed;
		}

		[Token(Token = "0x2000140")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76FC74", Offset = "0x76FC74")]
		private sealed class <AnimateVertexColors>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40006AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40006AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40006B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VertexJitter <>4__this;

			[Token(Token = "0x40006B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private TMP_TextInfo <textInfo>5__2;

			[Token(Token = "0x40006B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <loopCount>5__3;

			[Token(Token = "0x40006B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private VertexAnim[] <vertexAnim>5__4;

			[Token(Token = "0x40006B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private TMP_MeshInfo[] <cachedMeshInfo>5__5;

			[Token(Token = "0x17000072")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60004F0")]
				[Address(RVA = "0xB34744", Offset = "0xB34744", VA = "0xB34744", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000073")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60004F2")]
				[Address(RVA = "0xB3478C", Offset = "0xB3478C", VA = "0xB3478C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60004ED")]
			[Address(RVA = "0xB33EDC", Offset = "0xB33EDC", VA = "0xB33EDC")]
			[DebuggerHidden]
			public <AnimateVertexColors>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x60004EE")]
			[Address(RVA = "0xB33F08", Offset = "0xB33F08", VA = "0xB33F08", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60004EF")]
			[Address(RVA = "0xB33F0C", Offset = "0xB33F0C", VA = "0xB33F0C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60004F1")]
			[Address(RVA = "0xB3474C", Offset = "0xB3474C", VA = "0xB3474C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40006A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float AngleMultiplier;

		[Token(Token = "0x40006A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float SpeedMultiplier;

		[Token(Token = "0x40006A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float CurveScale;

		[Token(Token = "0x40006A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TMP_Text m_TextComponent;

		[Token(Token = "0x40006AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool hasTextChanged;

		[Token(Token = "0x60004E6")]
		[Address(RVA = "0xAF7E70", Offset = "0xAF7E70", VA = "0xAF7E70")]
		private void Awake()
		{
		}

		[Token(Token = "0x60004E7")]
		[Address(RVA = "0xAF7EC4", Offset = "0xAF7EC4", VA = "0xAF7EC4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60004E8")]
		[Address(RVA = "0xAF7FB4", Offset = "0xAF7FB4", VA = "0xAF7FB4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60004E9")]
		[Address(RVA = "0xAF80A4", Offset = "0xAF80A4", VA = "0xAF80A4")]
		private void Start()
		{
		}

		[Token(Token = "0x60004EA")]
		[Address(RVA = "0xAF813C", Offset = "0xAF813C", VA = "0xAF813C")]
		private void ON_TEXT_CHANGED(UnityEngine.Object obj)
		{
		}

		[Token(Token = "0x60004EB")]
		[Address(RVA = "0xAF80D0", Offset = "0xAF80D0", VA = "0xAF80D0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x775C40", Offset = "0x775C40")]
		private IEnumerator AnimateVertexColors()
		{
			return null;
		}

		[Token(Token = "0x60004EC")]
		[Address(RVA = "0xAF81C4", Offset = "0xAF81C4", VA = "0xAF81C4")]
		public VertexJitter()
		{
		}
	}
	[Token(Token = "0x2000141")]
	public class VertexShakeA : MonoBehaviour
	{
		[Token(Token = "0x2000142")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76FC84", Offset = "0x76FC84")]
		private sealed class <AnimateVertexColors>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40006BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40006BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40006BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VertexShakeA <>4__this;

			[Token(Token = "0x40006BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private TMP_TextInfo <textInfo>5__2;

			[Token(Token = "0x40006BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Vector3[][] <copyOfVertices>5__3;

			[Token(Token = "0x17000074")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60004FD")]
				[Address(RVA = "0xB35194", Offset = "0xB35194", VA = "0xB35194", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000075")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60004FF")]
				[Address(RVA = "0xB351DC", Offset = "0xB351DC", VA = "0xB351DC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60004FA")]
			[Address(RVA = "0xB34794", Offset = "0xB34794", VA = "0xB34794")]
			[DebuggerHidden]
			public <AnimateVertexColors>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x60004FB")]
			[Address(RVA = "0xB347C0", Offset = "0xB347C0", VA = "0xB347C0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60004FC")]
			[Address(RVA = "0xB347C4", Offset = "0xB347C4", VA = "0xB347C4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60004FE")]
			[Address(RVA = "0xB3519C", Offset = "0xB3519C", VA = "0xB3519C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40006B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float AngleMultiplier;

		[Token(Token = "0x40006B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float SpeedMultiplier;

		[Token(Token = "0x40006B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float ScaleMultiplier;

		[Token(Token = "0x40006B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float RotationMultiplier;

		[Token(Token = "0x40006B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TMP_Text m_TextComponent;

		[Token(Token = "0x40006BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool hasTextChanged;

		[Token(Token = "0x60004F3")]
		[Address(RVA = "0xAF81DC", Offset = "0xAF81DC", VA = "0xAF81DC")]
		private void Awake()
		{
		}

		[Token(Token = "0x60004F4")]
		[Address(RVA = "0xAF8230", Offset = "0xAF8230", VA = "0xAF8230")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60004F5")]
		[Address(RVA = "0xAF8320", Offset = "0xAF8320", VA = "0xAF8320")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60004F6")]
		[Address(RVA = "0xAF8410", Offset = "0xAF8410", VA = "0xAF8410")]
		private void Start()
		{
		}

		[Token(Token = "0x60004F7")]
		[Address(RVA = "0xAF84A8", Offset = "0xAF84A8", VA = "0xAF84A8")]
		private void ON_TEXT_CHANGED(UnityEngine.Object obj)
		{
		}

		[Token(Token = "0x60004F8")]
		[Address(RVA = "0xAF843C", Offset = "0xAF843C", VA = "0xAF843C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x775CF0", Offset = "0x775CF0")]
		private IEnumerator AnimateVertexColors()
		{
			return null;
		}

		[Token(Token = "0x60004F9")]
		[Address(RVA = "0xAF8520", Offset = "0xAF8520", VA = "0xAF8520")]
		public VertexShakeA()
		{
		}
	}
	[Token(Token = "0x2000143")]
	public class VertexShakeB : MonoBehaviour
	{
		[Token(Token = "0x2000144")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76FC94", Offset = "0x76FC94")]
		private sealed class <AnimateVertexColors>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40006C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40006C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40006C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VertexShakeB <>4__this;

			[Token(Token = "0x40006C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private TMP_TextInfo <textInfo>5__2;

			[Token(Token = "0x40006C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Vector3[][] <copyOfVertices>5__3;

			[Token(Token = "0x17000076")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600050A")]
				[Address(RVA = "0xB36078", Offset = "0xB36078", VA = "0xB36078", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000077")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600050C")]
				[Address(RVA = "0xB360C0", Offset = "0xB360C0", VA = "0xB360C0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000507")]
			[Address(RVA = "0xB351E4", Offset = "0xB351E4", VA = "0xB351E4")]
			[DebuggerHidden]
			public <AnimateVertexColors>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x6000508")]
			[Address(RVA = "0xB35210", Offset = "0xB35210", VA = "0xB35210", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000509")]
			[Address(RVA = "0xB35214", Offset = "0xB35214", VA = "0xB35214", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600050B")]
			[Address(RVA = "0xB36080", Offset = "0xB36080", VA = "0xB36080", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40006C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float AngleMultiplier;

		[Token(Token = "0x40006C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float SpeedMultiplier;

		[Token(Token = "0x40006C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float CurveScale;

		[Token(Token = "0x40006C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TMP_Text m_TextComponent;

		[Token(Token = "0x40006C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool hasTextChanged;

		[Token(Token = "0x6000500")]
		[Address(RVA = "0xAF8530", Offset = "0xAF8530", VA = "0xAF8530")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000501")]
		[Address(RVA = "0xAF8584", Offset = "0xAF8584", VA = "0xAF8584")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000502")]
		[Address(RVA = "0xAF8674", Offset = "0xAF8674", VA = "0xAF8674")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000503")]
		[Address(RVA = "0xAF8764", Offset = "0xAF8764", VA = "0xAF8764")]
		private void Start()
		{
		}

		[Token(Token = "0x6000504")]
		[Address(RVA = "0xAF87FC", Offset = "0xAF87FC", VA = "0xAF87FC")]
		private void ON_TEXT_CHANGED(UnityEngine.Object obj)
		{
		}

		[Token(Token = "0x6000505")]
		[Address(RVA = "0xAF8790", Offset = "0xAF8790", VA = "0xAF8790")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x775DA0", Offset = "0x775DA0")]
		private IEnumerator AnimateVertexColors()
		{
			return null;
		}

		[Token(Token = "0x6000506")]
		[Address(RVA = "0xAF8874", Offset = "0xAF8874", VA = "0xAF8874")]
		public VertexShakeB()
		{
		}
	}
	[Token(Token = "0x2000145")]
	public class VertexZoom : MonoBehaviour
	{
		[Token(Token = "0x2000146")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76FCA4", Offset = "0x76FCA4")]
		private sealed class <>c__DisplayClass10_0
		{
			[Token(Token = "0x40006CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<float> modifiedCharScale;

			[Token(Token = "0x40006D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Comparison<int> <>9__0;

			[Token(Token = "0x6000514")]
			[Address(RVA = "0xB360C8", Offset = "0xB360C8", VA = "0xB360C8")]
			public <>c__DisplayClass10_0()
			{
			}

			[Token(Token = "0x6000515")]
			[Address(RVA = "0xB360D0", Offset = "0xB360D0", VA = "0xB360D0")]
			internal int <AnimateVertexColors>b__0(int a, int b)
			{
				return default(int);
			}
		}

		[Token(Token = "0x2000147")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76FCB4", Offset = "0x76FCB4")]
		private sealed class <AnimateVertexColors>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40006D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40006D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40006D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VertexZoom <>4__this;

			[Token(Token = "0x40006D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private <>c__DisplayClass10_0 <>8__1;

			[Token(Token = "0x40006D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TMP_TextInfo <textInfo>5__2;

			[Token(Token = "0x40006D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private TMP_MeshInfo[] <cachedMeshInfoVertexData>5__3;

			[Token(Token = "0x40006D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private List<int> <scaleSortingOrder>5__4;

			[Token(Token = "0x17000078")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000519")]
				[Address(RVA = "0xB36D04", Offset = "0xB36D04", VA = "0xB36D04", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000079")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600051B")]
				[Address(RVA = "0xB36D4C", Offset = "0xB36D4C", VA = "0xB36D4C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000516")]
			[Address(RVA = "0xB36190", Offset = "0xB36190", VA = "0xB36190")]
			[DebuggerHidden]
			public <AnimateVertexColors>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x6000517")]
			[Address(RVA = "0xB361BC", Offset = "0xB361BC", VA = "0xB361BC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000518")]
			[Address(RVA = "0xB361C0", Offset = "0xB361C0", VA = "0xB361C0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600051A")]
			[Address(RVA = "0xB36D0C", Offset = "0xB36D0C", VA = "0xB36D0C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40006CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float AngleMultiplier;

		[Token(Token = "0x40006CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float SpeedMultiplier;

		[Token(Token = "0x40006CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float CurveScale;

		[Token(Token = "0x40006CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TMP_Text m_TextComponent;

		[Token(Token = "0x40006CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool hasTextChanged;

		[Token(Token = "0x600050D")]
		[Address(RVA = "0xAF888C", Offset = "0xAF888C", VA = "0xAF888C")]
		private void Awake()
		{
		}

		[Token(Token = "0x600050E")]
		[Address(RVA = "0xAF88E0", Offset = "0xAF88E0", VA = "0xAF88E0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600050F")]
		[Address(RVA = "0xAF89D0", Offset = "0xAF89D0", VA = "0xAF89D0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000510")]
		[Address(RVA = "0xAF8AC0", Offset = "0xAF8AC0", VA = "0xAF8AC0")]
		private void Start()
		{
		}

		[Token(Token = "0x6000511")]
		[Address(RVA = "0xAF8B58", Offset = "0xAF8B58", VA = "0xAF8B58")]
		private void ON_TEXT_CHANGED(UnityEngine.Object obj)
		{
		}

		[Token(Token = "0x6000512")]
		[Address(RVA = "0xAF8AEC", Offset = "0xAF8AEC", VA = "0xAF8AEC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x775E50", Offset = "0x775E50")]
		private IEnumerator AnimateVertexColors()
		{
			return null;
		}

		[Token(Token = "0x6000513")]
		[Address(RVA = "0xAF8BE0", Offset = "0xAF8BE0", VA = "0xAF8BE0")]
		public VertexZoom()
		{
		}
	}
	[Token(Token = "0x2000148")]
	public class WarpTextExample : MonoBehaviour
	{
		[Token(Token = "0x2000149")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76FCC4", Offset = "0x76FCC4")]
		private sealed class <WarpText>d__8 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40006DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40006DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40006DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WarpTextExample <>4__this;

			[Token(Token = "0x40006E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <old_CurveScale>5__2;

			[Token(Token = "0x40006E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private AnimationCurve <old_curve>5__3;

			[Token(Token = "0x1700007A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000524")]
				[Address(RVA = "0xB3780C", Offset = "0xB3780C", VA = "0xB3780C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700007B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000526")]
				[Address(RVA = "0xB37854", Offset = "0xB37854", VA = "0xB37854", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000521")]
			[Address(RVA = "0xB37028", Offset = "0xB37028", VA = "0xB37028")]
			[DebuggerHidden]
			public <WarpText>d__8(int <>1__state)
			{
			}

			[Token(Token = "0x6000522")]
			[Address(RVA = "0xB37054", Offset = "0xB37054", VA = "0xB37054", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000523")]
			[Address(RVA = "0xB37058", Offset = "0xB37058", VA = "0xB37058", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000525")]
			[Address(RVA = "0xB37814", Offset = "0xB37814", VA = "0xB37814", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40006D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TMP_Text m_TextComponent;

		[Token(Token = "0x40006D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AnimationCurve VertexCurve;

		[Token(Token = "0x40006DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float AngleMultiplier;

		[Token(Token = "0x40006DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float SpeedMultiplier;

		[Token(Token = "0x40006DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float CurveScale;

		[Token(Token = "0x600051C")]
		[Address(RVA = "0xAFB83C", Offset = "0xAFB83C", VA = "0xAFB83C")]
		private void Awake()
		{
		}

		[Token(Token = "0x600051D")]
		[Address(RVA = "0xAFB8A0", Offset = "0xAFB8A0", VA = "0xAFB8A0")]
		private void Start()
		{
		}

		[Token(Token = "0x600051E")]
		[Address(RVA = "0xAFB938", Offset = "0xAFB938", VA = "0xAFB938")]
		private AnimationCurve CopyAnimationCurve(AnimationCurve curve)
		{
			return null;
		}

		[Token(Token = "0x600051F")]
		[Address(RVA = "0xAFB8CC", Offset = "0xAFB8CC", VA = "0xAFB8CC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x775F00", Offset = "0x775F00")]
		private IEnumerator WarpText()
		{
			return null;
		}

		[Token(Token = "0x6000520")]
		[Address(RVA = "0xAFB9BC", Offset = "0xAFB9BC", VA = "0xAFB9BC")]
		public WarpTextExample()
		{
		}
	}
}
namespace Unity.XR.PXR
{
	[Token(Token = "0x200014A")]
	public class Callback : MonoBehaviour
	{
		[Token(Token = "0x6000527")]
		[Address(RVA = "0x11DEF24", Offset = "0x11DEF24", VA = "0x11DEF24")]
		public void LoginCallback(string LoginInfo)
		{
		}

		[Token(Token = "0x6000528")]
		[Address(RVA = "0x11DF1B0", Offset = "0x11DF1B0", VA = "0x11DF1B0")]
		public void QueryOrPayCallback(string queryOrPayInfo)
		{
		}

		[Token(Token = "0x6000529")]
		[Address(RVA = "0x11DF240", Offset = "0x11DF240", VA = "0x11DF240")]
		public void UserInfoCallback(string userInfo)
		{
		}

		[Token(Token = "0x600052A")]
		[Address(RVA = "0x11DF2DC", Offset = "0x11DF2DC", VA = "0x11DF2DC")]
		public void ActivityForResultCallback(string activity)
		{
		}

		[Token(Token = "0x600052B")]
		[Address(RVA = "0x11DF478", Offset = "0x11DF478", VA = "0x11DF478")]
		public Callback()
		{
		}
	}
}
namespace Glimpse
{
	[Token(Token = "0x200014B")]
	public class ApiInterface : MonoBehaviour
	{
		[Token(Token = "0x200014C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76FCD4", Offset = "0x76FCD4")]
		private sealed class <Post>d__8 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40006E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40006E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40006E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ApiInterface <>4__this;

			[Token(Token = "0x40006E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string url;

			[Token(Token = "0x40006EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Dictionary<string, string> data;

			[Token(Token = "0x40006EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Action<UnityWebRequest> errorCallback;

			[Token(Token = "0x40006EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public Action<JSONNode> callback;

			[Token(Token = "0x40006ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private UnityWebRequest <www>5__2;

			[Token(Token = "0x1700007D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000535")]
				[Address(RVA = "0xB0348C", Offset = "0xB0348C", VA = "0xB0348C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700007E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000537")]
				[Address(RVA = "0xB034D4", Offset = "0xB034D4", VA = "0xB034D4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000532")]
			[Address(RVA = "0xB02D88", Offset = "0xB02D88", VA = "0xB02D88")]
			[DebuggerHidden]
			public <Post>d__8(int <>1__state)
			{
			}

			[Token(Token = "0x6000533")]
			[Address(RVA = "0xB02DB4", Offset = "0xB02DB4", VA = "0xB02DB4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000534")]
			[Address(RVA = "0xB02DB8", Offset = "0xB02DB8", VA = "0xB02DB8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000536")]
			[Address(RVA = "0xB03494", Offset = "0xB03494", VA = "0xB03494", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200014D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76FCE4", Offset = "0x76FCE4")]
		private sealed class <Get>d__9 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40006EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40006EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40006F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ApiInterface <>4__this;

			[Token(Token = "0x40006F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string url;

			[Token(Token = "0x40006F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Action<UnityWebRequest> errorCallback;

			[Token(Token = "0x40006F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Action<JSONNode> callback;

			[Token(Token = "0x40006F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private UnityWebRequest <www>5__2;

			[Token(Token = "0x1700007F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600053B")]
				[Address(RVA = "0xB02D38", Offset = "0xB02D38", VA = "0xB02D38", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000080")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600053D")]
				[Address(RVA = "0xB02D80", Offset = "0xB02D80", VA = "0xB02D80", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000538")]
			[Address(RVA = "0xB0284C", Offset = "0xB0284C", VA = "0xB0284C")]
			[DebuggerHidden]
			public <Get>d__9(int <>1__state)
			{
			}

			[Token(Token = "0x6000539")]
			[Address(RVA = "0xB02878", Offset = "0xB02878", VA = "0xB02878", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600053A")]
			[Address(RVA = "0xB0287C", Offset = "0xB0287C", VA = "0xB0287C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600053C")]
			[Address(RVA = "0xB02D40", Offset = "0xB02D40", VA = "0xB02D40", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40006E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected static ApiInterface api;

		[Token(Token = "0x40006E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool debug;

		[Token(Token = "0x40006E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public StringVariable urlRoot;

		[Token(Token = "0x40006E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public StringVariable token;

		[Token(Token = "0x1700007C")]
		public static ApiInterface API
		{
			[Token(Token = "0x600052C")]
			[Address(RVA = "0xB3B6F0", Offset = "0xB3B6F0", VA = "0xB3B6F0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600052D")]
		[Address(RVA = "0xB3B73C", Offset = "0xB3B73C", VA = "0xB3B73C")]
		private void Awake()
		{
		}

		[Token(Token = "0x600052E")]
		[Address(RVA = "0xB3B858", Offset = "0xB3B858", VA = "0xB3B858")]
		protected string Hash(string input)
		{
			return null;
		}

		[Token(Token = "0x600052F")]
		[Address(RVA = "0xB3B9A4", Offset = "0xB3B9A4", VA = "0xB3B9A4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x775FB0", Offset = "0x775FB0")]
		protected IEnumerator Post(string url, Dictionary<string, string> data, [Optional] Action<JSONNode> callback, [Optional] Action<UnityWebRequest> errorCallback)
		{
			return null;
		}

		[Token(Token = "0x6000530")]
		[Address(RVA = "0xB3BA38", Offset = "0xB3BA38", VA = "0xB3BA38")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x776010", Offset = "0x776010")]
		protected IEnumerator Get(string url, [Optional] Action<JSONNode> callback, [Optional] Action<UnityWebRequest> errorCallback)
		{
			return null;
		}

		[Token(Token = "0x6000531")]
		[Address(RVA = "0xB3BAC4", Offset = "0xB3BAC4", VA = "0xB3BAC4")]
		public ApiInterface()
		{
		}
	}
	[Token(Token = "0x200014E")]
	public abstract class PersistentData : ScriptableObject
	{
		[Token(Token = "0x17000081")]
		public virtual JSONNode json
		{
			[Token(Token = "0x600053E")]
			[Address(RVA = "0xC44714", Offset = "0xC44714", VA = "0xC44714", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600053F")]
		[Address(RVA = "0xC44770", Offset = "0xC44770", VA = "0xC44770", Slot = "5")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6000540")]
		[Address(RVA = "0xC44774", Offset = "0xC44774", VA = "0xC44774", Slot = "6")]
		public virtual void Reset()
		{
		}

		[Token(Token = "0x6000541")]
		[Address(RVA = "0xC44778", Offset = "0xC44778", VA = "0xC44778", Slot = "7")]
		public virtual void Init(JSONNode j)
		{
		}

		[Token(Token = "0x6000542")]
		[Address(RVA = "0xC4477C", Offset = "0xC4477C", VA = "0xC4477C")]
		protected PersistentData()
		{
		}
	}
	[Token(Token = "0x200014F")]
	public class AppData : MonoBehaviour
	{
		[Token(Token = "0x40006F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string dataVersion;

		[Token(Token = "0x40006F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool wipeOnVersionMismatch;

		[Token(Token = "0x40006F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<PersistentData> data;

		[Token(Token = "0x40006F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0x771EEC", Offset = "0x771EEC")]
		public string defaultData;

		[Token(Token = "0x6000543")]
		[Address(RVA = "0xB3F264", Offset = "0xB3F264", VA = "0xB3F264")]
		public JSONNode ToJson()
		{
			return null;
		}

		[Token(Token = "0x6000544")]
		[Address(RVA = "0xB3F4F4", Offset = "0xB3F4F4", VA = "0xB3F4F4")]
		public void FromJson(string json)
		{
		}

		[Token(Token = "0x6000545")]
		[Address(RVA = "0xB3F69C", Offset = "0xB3F69C", VA = "0xB3F69C")]
		public void LoadDefault()
		{
		}

		[Token(Token = "0x6000546")]
		[Address(RVA = "0xB3F744", Offset = "0xB3F744", VA = "0xB3F744")]
		public void LoadData(JSONNode jdata)
		{
		}

		[Token(Token = "0x6000547")]
		[Address(RVA = "0xB3F928", Offset = "0xB3F928", VA = "0xB3F928")]
		public AppData()
		{
		}
	}
	[Token(Token = "0x2000150")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x76FCF4", Offset = "0x76FCF4")]
	public class AudioFloatVariable : FloatVariable
	{
		[Token(Token = "0x40006F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public AudioMixer audioMixer;

		[Token(Token = "0x40006FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public string parameter;

		[Token(Token = "0x6000548")]
		[Address(RVA = "0xB44888", Offset = "0xB44888", VA = "0xB44888", Slot = "5")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6000549")]
		[Address(RVA = "0xB44944", Offset = "0xB44944", VA = "0xB44944")]
		public void UpdateAudioMixer()
		{
		}

		[Token(Token = "0x600054A")]
		[Address(RVA = "0xB449B8", Offset = "0xB449B8", VA = "0xB449B8")]
		public AudioFloatVariable()
		{
		}
	}
	[Token(Token = "0x2000151")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x76FD04", Offset = "0x76FD04")]
	public class BoolVariable : Variable<bool>
	{
		[Token(Token = "0x17000082")]
		public override JSONNode json
		{
			[Token(Token = "0x600054C")]
			[Address(RVA = "0xB4C68C", Offset = "0xB4C68C", VA = "0xB4C68C", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600054B")]
		[Address(RVA = "0xB4C650", Offset = "0xB4C650", VA = "0xB4C650")]
		public void Toggle()
		{
		}

		[Token(Token = "0x600054D")]
		[Address(RVA = "0xB4C704", Offset = "0xB4C704", VA = "0xB4C704", Slot = "7")]
		public override void Init(JSONNode j)
		{
		}

		[Token(Token = "0x600054E")]
		[Address(RVA = "0xB4C790", Offset = "0xB4C790", VA = "0xB4C790")]
		public BoolVariable()
		{
		}
	}
	[Token(Token = "0x2000152")]
	public class DontDestroy : MonoBehaviour
	{
		[Token(Token = "0x600054F")]
		[Address(RVA = "0xC64BF4", Offset = "0xC64BF4", VA = "0xC64BF4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000550")]
		[Address(RVA = "0xC64C6C", Offset = "0xC64C6C", VA = "0xC64C6C")]
		public DontDestroy()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000153")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x76FD14", Offset = "0x76FD14")]
	public class EnumVariable : StringVariable
	{
		[Token(Token = "0x40006FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public List<string> Options;

		[Token(Token = "0x6000551")]
		[Address(RVA = "0xC67FE0", Offset = "0xC67FE0", VA = "0xC67FE0", Slot = "10")]
		protected override void setValue(string value)
		{
		}

		[Token(Token = "0x6000552")]
		[Address(RVA = "0xC68050", Offset = "0xC68050", VA = "0xC68050")]
		public void Next()
		{
		}

		[Token(Token = "0x6000553")]
		[Address(RVA = "0xC68138", Offset = "0xC68138", VA = "0xC68138")]
		public EnumVariable()
		{
		}
	}
	[Token(Token = "0x2000154")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x76FD24", Offset = "0x76FD24")]
	public class FloatVariable : Variable<float>
	{
		[Token(Token = "0x40006FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool HasMin;

		[Token(Token = "0x40006FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float Minimum;

		[Token(Token = "0x40006FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool HasMax;

		[Token(Token = "0x40006FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float Maximum;

		[Token(Token = "0x17000083")]
		public float AsPercentage
		{
			[Token(Token = "0x6000555")]
			[Address(RVA = "0xC6ACAC", Offset = "0xC6ACAC", VA = "0xC6ACAC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000084")]
		public override JSONNode json
		{
			[Token(Token = "0x6000556")]
			[Address(RVA = "0xC6ACDC", Offset = "0xC6ACDC", VA = "0xC6ACDC", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000554")]
		[Address(RVA = "0xC6AC70", Offset = "0xC6AC70", VA = "0xC6AC70", Slot = "10")]
		protected override void setValue(float value)
		{
		}

		[Token(Token = "0x6000557")]
		[Address(RVA = "0xC6AD58", Offset = "0xC6AD58", VA = "0xC6AD58", Slot = "7")]
		public override void Init(JSONNode j)
		{
		}

		[Token(Token = "0x6000558")]
		[Address(RVA = "0xC6ADE0", Offset = "0xC6ADE0", VA = "0xC6ADE0")]
		public void SetMinimum(float value)
		{
		}

		[Token(Token = "0x6000559")]
		[Address(RVA = "0xC6ADE8", Offset = "0xC6ADE8", VA = "0xC6ADE8")]
		public void SetMaximum(float value)
		{
		}

		[Token(Token = "0x600055A")]
		[Address(RVA = "0xC6ADF0", Offset = "0xC6ADF0", VA = "0xC6ADF0")]
		public FloatVariable()
		{
		}
	}
	[Token(Token = "0x2000155")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x76FD34", Offset = "0x76FD34")]
	public class IntVariable : Variable<int>
	{
		[Token(Token = "0x4000700")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool HasMin;

		[Token(Token = "0x4000701")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public int Minimum;

		[Token(Token = "0x4000702")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool HasMax;

		[Token(Token = "0x4000703")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public int Maximum;

		[Token(Token = "0x17000085")]
		public override JSONNode json
		{
			[Token(Token = "0x6000564")]
			[Address(RVA = "0xBC65AC", Offset = "0xBC65AC", VA = "0xBC65AC", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600055B")]
		[Address(RVA = "0xBC63AC", Offset = "0xBC63AC", VA = "0xBC63AC", Slot = "10")]
		protected override void setValue(int value)
		{
		}

		[Token(Token = "0x600055C")]
		[Address(RVA = "0xBC63E8", Offset = "0xBC63E8", VA = "0xBC63E8")]
		public void inc()
		{
		}

		[Token(Token = "0x600055D")]
		[Address(RVA = "0xBC6420", Offset = "0xBC6420", VA = "0xBC6420")]
		public void dec()
		{
		}

		[Token(Token = "0x600055E")]
		[Address(RVA = "0xBC6458", Offset = "0xBC6458", VA = "0xBC6458")]
		public void inc10()
		{
		}

		[Token(Token = "0x600055F")]
		[Address(RVA = "0xBC6490", Offset = "0xBC6490", VA = "0xBC6490")]
		public void dec10()
		{
		}

		[Token(Token = "0x6000560")]
		[Address(RVA = "0xBC64C8", Offset = "0xBC64C8", VA = "0xBC64C8")]
		public void inc100()
		{
		}

		[Token(Token = "0x6000561")]
		[Address(RVA = "0xBC6500", Offset = "0xBC6500", VA = "0xBC6500")]
		public void dec100()
		{
		}

		[Token(Token = "0x6000562")]
		[Address(RVA = "0xBC6538", Offset = "0xBC6538", VA = "0xBC6538")]
		public void inc1000()
		{
		}

		[Token(Token = "0x6000563")]
		[Address(RVA = "0xBC6570", Offset = "0xBC6570", VA = "0xBC6570")]
		public void inc10000()
		{
		}

		[Token(Token = "0x6000565")]
		[Address(RVA = "0xBC6624", Offset = "0xBC6624", VA = "0xBC6624", Slot = "7")]
		public override void Init(JSONNode j)
		{
		}

		[Token(Token = "0x6000566")]
		[Address(RVA = "0xBC66B0", Offset = "0xBC66B0", VA = "0xBC66B0")]
		public static IntVariable Create(int value = 0)
		{
			return null;
		}

		[Token(Token = "0x6000567")]
		[Address(RVA = "0xBC6744", Offset = "0xBC6744", VA = "0xBC6744")]
		public IntVariable()
		{
		}
	}
	[Token(Token = "0x2000156")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x76FD44", Offset = "0x76FD44")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x76FD44", Offset = "0x76FD44")]
	public class KeyValueList : PersistentData
	{
		[Token(Token = "0x4000704")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected Dictionary<string, int> dict;

		[Token(Token = "0x4000705")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameEvent onChangeEvent;

		[Token(Token = "0x17000086")]
		public int Count
		{
			[Token(Token = "0x6000568")]
			[Address(RVA = "0xBC9954", Offset = "0xBC9954", VA = "0xBC9954")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000087")]
		public Dictionary<string, int>.KeyCollection Keys
		{
			[Token(Token = "0x6000569")]
			[Address(RVA = "0xBC99A8", Offset = "0xBC99A8", VA = "0xBC99A8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000088")]
		public int Item
		{
			[Token(Token = "0x600056E")]
			[Address(RVA = "0xBC9124", Offset = "0xBC9124", VA = "0xBC9124")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000089")]
		public override JSONNode json
		{
			[Token(Token = "0x600056F")]
			[Address(RVA = "0xBC9BF0", Offset = "0xBC9BF0", VA = "0xBC9BF0", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700008A")]
		public string Greatest
		{
			[Token(Token = "0x6000571")]
			[Address(RVA = "0xBC9F28", Offset = "0xBC9F28", VA = "0xBC9F28")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600056A")]
		[Address(RVA = "0xBC99FC", Offset = "0xBC99FC", VA = "0xBC99FC", Slot = "6")]
		public override void Reset()
		{
		}

		[Token(Token = "0x600056B")]
		[Address(RVA = "0xBC9A6C", Offset = "0xBC9A6C", VA = "0xBC9A6C", Slot = "5")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x600056C")]
		[Address(RVA = "0xBC9AA0", Offset = "0xBC9AA0", VA = "0xBC9AA0")]
		public void Increment(string key, int step = 1)
		{
		}

		[Token(Token = "0x600056D")]
		[Address(RVA = "0xBC9388", Offset = "0xBC9388", VA = "0xBC9388")]
		public void Decrement(string key, int step = 1)
		{
		}

		[Token(Token = "0x6000570")]
		[Address(RVA = "0xBC9DB8", Offset = "0xBC9DB8", VA = "0xBC9DB8", Slot = "7")]
		public override void Init(JSONNode j)
		{
		}

		[Token(Token = "0x6000572")]
		[Address(RVA = "0xBCA080", Offset = "0xBCA080", VA = "0xBCA080")]
		public string GreatestExcept(string excludeKey)
		{
			return null;
		}

		[Token(Token = "0x6000573")]
		[Address(RVA = "0xBCA1F8", Offset = "0xBCA1F8", VA = "0xBCA1F8")]
		public void AddTo(KeyValueList other)
		{
		}

		[Token(Token = "0x6000574")]
		[Address(RVA = "0xBCA380", Offset = "0xBCA380", VA = "0xBCA380")]
		public KeyValueList()
		{
		}
	}
	[Token(Token = "0x2000157")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x76FD90", Offset = "0x76FD90")]
	public class RandFloatVariable : FloatVariable
	{
		[Token(Token = "0x1700008B")]
		public float Rand
		{
			[Token(Token = "0x6000576")]
			[Address(RVA = "0xCF00E0", Offset = "0xCF00E0", VA = "0xCF00E0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000575")]
		[Address(RVA = "0xCF0064", Offset = "0xCF0064", VA = "0xCF0064", Slot = "5")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6000577")]
		[Address(RVA = "0xCF00F0", Offset = "0xCF00F0", VA = "0xCF00F0")]
		public RandFloatVariable()
		{
		}
	}
	[Token(Token = "0x2000158")]
	public abstract class RuntimeSet<T> : ScriptableObject
	{
		[Token(Token = "0x4000706")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public List<T> Items;

		[Token(Token = "0x6000578")]
		public void Add(T t)
		{
		}

		[Token(Token = "0x6000579")]
		public void Remove(T t)
		{
		}

		[Token(Token = "0x600057A")]
		protected RuntimeSet()
		{
		}
	}
	[Token(Token = "0x2000159")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x76FDA0", Offset = "0x76FDA0")]
	public class StringVariable : Variable<string>
	{
		[Token(Token = "0x4000707")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public int maxLength;

		[Token(Token = "0x1700008C")]
		public override JSONNode json
		{
			[Token(Token = "0x600057C")]
			[Address(RVA = "0xB82AEC", Offset = "0xB82AEC", VA = "0xB82AEC", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600057B")]
		[Address(RVA = "0xB82A6C", Offset = "0xB82A6C", VA = "0xB82A6C", Slot = "10")]
		protected override void setValue(string value)
		{
		}

		[Token(Token = "0x600057D")]
		[Address(RVA = "0xB82B64", Offset = "0xB82B64", VA = "0xB82B64", Slot = "7")]
		public override void Init(JSONNode j)
		{
		}

		[Token(Token = "0x600057E")]
		[Address(RVA = "0xB82C2C", Offset = "0xB82C2C", VA = "0xB82C2C")]
		public void Append(string s)
		{
		}

		[Token(Token = "0x600057F")]
		[Address(RVA = "0xB82C78", Offset = "0xB82C78", VA = "0xB82C78")]
		public void Backspace()
		{
		}

		[Token(Token = "0x6000580")]
		[Address(RVA = "0xB82D10", Offset = "0xB82D10", VA = "0xB82D10")]
		public void Toggle(string value)
		{
		}

		[Token(Token = "0x6000581")]
		[Address(RVA = "0xB82DA4", Offset = "0xB82DA4", VA = "0xB82DA4")]
		public StringVariable()
		{
		}
	}
	[Token(Token = "0x200015A")]
	public class StringVariableEquate : MonoBehaviour
	{
		[Token(Token = "0x4000708")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public StringVariable setVariable;

		[Token(Token = "0x4000709")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public StringVariable readVariable;

		[Token(Token = "0x6000582")]
		[Address(RVA = "0xB82DF8", Offset = "0xB82DF8", VA = "0xB82DF8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000583")]
		[Address(RVA = "0xB82EF4", Offset = "0xB82EF4", VA = "0xB82EF4")]
		public void Set()
		{
		}

		[Token(Token = "0x6000584")]
		[Address(RVA = "0xB82FE0", Offset = "0xB82FE0", VA = "0xB82FE0")]
		public StringVariableEquate()
		{
		}
	}
	[Token(Token = "0x200015B")]
	public abstract class Variable<T> : PersistentData
	{
		[Token(Token = "0x400070A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public T currentValue;

		[Token(Token = "0x400070B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public T DefaultValue;

		[Token(Token = "0x400070C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		protected T ResetValue;

		[Token(Token = "0x400070D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected bool loaded;

		[Token(Token = "0x400070E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool overwriteDefaultOnLoad;

		[Token(Token = "0x400070F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public GameEvent onChangeEvent;

		[Token(Token = "0x4000710")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool IncludeAnalytics;

		[Token(Token = "0x4000711")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string AnalyticsEventName;

		[Token(Token = "0x4000712")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string AnalyticsParameter;

		[Token(Token = "0x1700008D")]
		public virtual T Value
		{
			[Token(Token = "0x6000585")]
			get
			{
				return (T)null;
			}
			[Token(Token = "0x6000586")]
			set
			{
			}
		}

		[Token(Token = "0x6000587")]
		public override void Init(JSONNode j)
		{
		}

		[Token(Token = "0x6000588")]
		protected virtual void setValue(T value)
		{
		}

		[Token(Token = "0x6000589")]
		public override void Reset()
		{
		}

		[Token(Token = "0x600058A")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x600058B")]
		public void OnChange(UnityAction ua)
		{
		}

		[Token(Token = "0x600058C")]
		public void RemoveOnChange(UnityAction ua)
		{
		}

		[Token(Token = "0x600058D")]
		public void TrackAnalytics()
		{
		}

		[Token(Token = "0x600058E")]
		protected Variable()
		{
		}
	}
	[Token(Token = "0x200015C")]
	public class VariableSet : MonoBehaviour
	{
		[Token(Token = "0x4000713")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<PersistentData> variables;

		[Token(Token = "0x4000714")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnityEvent OnReset;

		[Token(Token = "0x600058F")]
		[Address(RVA = "0xAF7B44", Offset = "0xAF7B44", VA = "0xAF7B44")]
		public void Reset()
		{
		}

		[Token(Token = "0x6000590")]
		[Address(RVA = "0xAF7C70", Offset = "0xAF7C70", VA = "0xAF7C70")]
		public VariableSet()
		{
		}
	}
	[Token(Token = "0x200015D")]
	public class AnimationEvent : StateMachineBehaviour
	{
		[Token(Token = "0x4000715")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public BoolVariable boolVar;

		[Token(Token = "0x6000591")]
		[Address(RVA = "0xB3B068", Offset = "0xB3B068", VA = "0xB3B068", Slot = "4")]
		public override void OnStateEnter(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
		{
		}

		[Token(Token = "0x6000592")]
		[Address(RVA = "0xB3B08C", Offset = "0xB3B08C", VA = "0xB3B08C")]
		public AnimationEvent()
		{
		}
	}
	[Token(Token = "0x200015E")]
	[ExecuteAlways]
	public class AnimationListener : GameEventListener
	{
		[Token(Token = "0x4000716")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected Animator anim;

		[Token(Token = "0x4000717")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public BoolVariable boolState;

		[Token(Token = "0x4000718")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string TrueTrigger;

		[Token(Token = "0x4000719")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string FalseTrigger;

		[Token(Token = "0x6000593")]
		[Address(RVA = "0xB3B094", Offset = "0xB3B094", VA = "0xB3B094")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000594")]
		[Address(RVA = "0xB3B140", Offset = "0xB3B140", VA = "0xB3B140", Slot = "4")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6000595")]
		[Address(RVA = "0xB3B2F4", Offset = "0xB3B2F4", VA = "0xB3B2F4", Slot = "6")]
		public override void OnEventRaised()
		{
		}

		[Token(Token = "0x6000596")]
		[Address(RVA = "0xB3B168", Offset = "0xB3B168", VA = "0xB3B168")]
		protected void CheckState()
		{
		}

		[Token(Token = "0x6000597")]
		[Address(RVA = "0xB3B31C", Offset = "0xB3B31C", VA = "0xB3B31C")]
		public AnimationListener()
		{
		}
	}
	[Token(Token = "0x200015F")]
	[ExecuteAlways]
	public class BoolListener : GameEventListener
	{
		[Token(Token = "0x400071A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public BoolVariable boolState;

		[Token(Token = "0x400071B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public UnityEvent OnTrue;

		[Token(Token = "0x400071C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public UnityEvent OnFalse;

		[Token(Token = "0x6000598")]
		[Address(RVA = "0xB4C354", Offset = "0xB4C354", VA = "0xB4C354")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000599")]
		[Address(RVA = "0xB4C3DC", Offset = "0xB4C3DC", VA = "0xB4C3DC", Slot = "4")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x600059A")]
		[Address(RVA = "0xB4C40C", Offset = "0xB4C40C", VA = "0xB4C40C", Slot = "6")]
		public override void OnEventRaised()
		{
		}

		[Token(Token = "0x600059B")]
		[Address(RVA = "0xB4C43C", Offset = "0xB4C43C", VA = "0xB4C43C", Slot = "7")]
		protected virtual void CheckState()
		{
		}

		[Token(Token = "0x600059C")]
		[Address(RVA = "0xB4C4EC", Offset = "0xB4C4EC", VA = "0xB4C4EC")]
		public BoolListener()
		{
		}
	}
	[Token(Token = "0x2000160")]
	public class BoolTrigger : MonoBehaviour
	{
		[Token(Token = "0x400071D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public BoolVariable boolState;

		[Token(Token = "0x400071E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool setOnEnter;

		[Token(Token = "0x400071F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool setOnExit;

		[Token(Token = "0x4000720")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
		public bool setTo;

		[Token(Token = "0x600059D")]
		[Address(RVA = "0xB4C4F4", Offset = "0xB4C4F4", VA = "0xB4C4F4")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x600059E")]
		[Address(RVA = "0xB4C598", Offset = "0xB4C598", VA = "0xB4C598")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x600059F")]
		[Address(RVA = "0xB4C63C", Offset = "0xB4C63C", VA = "0xB4C63C")]
		public BoolTrigger()
		{
		}
	}
	[Token(Token = "0x2000161")]
	public class DelayedAction : MonoBehaviour
	{
		[Token(Token = "0x4000721")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float delay;

		[Token(Token = "0x4000722")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnityEvent action;

		[Token(Token = "0x60005A0")]
		[Address(RVA = "0x11EF86C", Offset = "0x11EF86C", VA = "0x11EF86C")]
		public void Activate()
		{
		}

		[Token(Token = "0x60005A1")]
		[Address(RVA = "0x11EF8C0", Offset = "0x11EF8C0", VA = "0x11EF8C0")]
		private void DoAction()
		{
		}

		[Token(Token = "0x60005A2")]
		[Address(RVA = "0x11EF8DC", Offset = "0x11EF8DC", VA = "0x11EF8DC")]
		public DelayedAction()
		{
		}
	}
	[Token(Token = "0x2000162")]
	[ExecuteAlways]
	public class DelayedBoolListener : BoolListener
	{
		[Token(Token = "0x4000723")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float delay;

		[Token(Token = "0x4000724")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		protected float timer;

		[Token(Token = "0x4000725")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected bool paused;

		[Token(Token = "0x1700008E")]
		public bool Pause
		{
			[Token(Token = "0x60005A3")]
			[Address(RVA = "0x11EF8EC", Offset = "0x11EF8EC", VA = "0x11EF8EC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60005A4")]
			[Address(RVA = "0x11EF8F4", Offset = "0x11EF8F4", VA = "0x11EF8F4")]
			set
			{
			}
		}

		[Token(Token = "0x60005A5")]
		[Address(RVA = "0x11EF900", Offset = "0x11EF900", VA = "0x11EF900")]
		private void Update()
		{
		}

		[Token(Token = "0x60005A6")]
		[Address(RVA = "0x11EF968", Offset = "0x11EF968", VA = "0x11EF968", Slot = "7")]
		protected override void CheckState()
		{
		}

		[Token(Token = "0x60005A7")]
		[Address(RVA = "0x11EF974", Offset = "0x11EF974", VA = "0x11EF974")]
		public DelayedBoolListener()
		{
		}
	}
	[Token(Token = "0x2000163")]
	public class DelayedBoolTrigger : MonoBehaviour
	{
		[Token(Token = "0x4000726")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public BoolVariable boolState;

		[Token(Token = "0x4000727")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool setOnEnter;

		[Token(Token = "0x4000728")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool setOnExit;

		[Token(Token = "0x4000729")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
		public bool setTo;

		[Token(Token = "0x400072A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float delay;

		[Token(Token = "0x400072B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected float timer;

		[Token(Token = "0x400072C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		protected bool paused;

		[Token(Token = "0x1700008F")]
		public bool Pause
		{
			[Token(Token = "0x60005A8")]
			[Address(RVA = "0x11EF988", Offset = "0x11EF988", VA = "0x11EF988")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60005A9")]
			[Address(RVA = "0x11EF990", Offset = "0x11EF990", VA = "0x11EF990")]
			set
			{
			}
		}

		[Token(Token = "0x60005AA")]
		[Address(RVA = "0x11EF99C", Offset = "0x11EF99C", VA = "0x11EF99C")]
		private void Update()
		{
		}

		[Token(Token = "0x60005AB")]
		[Address(RVA = "0x11EFA14", Offset = "0x11EFA14", VA = "0x11EFA14")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x60005AC")]
		[Address(RVA = "0x11EFA9C", Offset = "0x11EFA9C", VA = "0x11EFA9C")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x60005AD")]
		[Address(RVA = "0x11EFB24", Offset = "0x11EFB24", VA = "0x11EFB24")]
		public DelayedBoolTrigger()
		{
		}
	}
	[Token(Token = "0x2000164")]
	[ExecuteAlways]
	public class EventTriggers : MonoBehaviour
	{
		[Token(Token = "0x400072D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UnityEvent OnStartEvent;

		[Token(Token = "0x400072E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnityEvent OnAwakeEvent;

		[Token(Token = "0x400072F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UnityEvent OnEnableEvent;

		[Token(Token = "0x4000730")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public UnityEvent OnDisableEvent;

		[Token(Token = "0x4000731")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public UnityEvent OnDestroyEvent;

		[Token(Token = "0x60005AE")]
		[Address(RVA = "0xC684E8", Offset = "0xC684E8", VA = "0xC684E8")]
		private void Start()
		{
		}

		[Token(Token = "0x60005AF")]
		[Address(RVA = "0xC684FC", Offset = "0xC684FC", VA = "0xC684FC")]
		private void Awake()
		{
		}

		[Token(Token = "0x60005B0")]
		[Address(RVA = "0xC68510", Offset = "0xC68510", VA = "0xC68510")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60005B1")]
		[Address(RVA = "0xC68524", Offset = "0xC68524", VA = "0xC68524")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60005B2")]
		[Address(RVA = "0xC68538", Offset = "0xC68538", VA = "0xC68538")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60005B3")]
		[Address(RVA = "0xC6854C", Offset = "0xC6854C", VA = "0xC6854C")]
		public EventTriggers()
		{
		}
	}
	[Token(Token = "0x2000165")]
	public class FloatStepListener : GameEventListener
	{
		[Token(Token = "0x4000732")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public FloatVariable value;

		[Token(Token = "0x4000733")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float trigger;

		[Token(Token = "0x4000734")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float triggerStep;

		[Token(Token = "0x4000735")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public UnityEvent OnTrigger;

		[Token(Token = "0x60005B4")]
		[Address(RVA = "0xC6A834", Offset = "0xC6A834", VA = "0xC6A834")]
		private void Awake()
		{
		}

		[Token(Token = "0x60005B5")]
		[Address(RVA = "0xC6A8BC", Offset = "0xC6A8BC", VA = "0xC6A8BC", Slot = "4")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x60005B6")]
		[Address(RVA = "0xC6A978", Offset = "0xC6A978", VA = "0xC6A978", Slot = "6")]
		public override void OnEventRaised()
		{
		}

		[Token(Token = "0x60005B7")]
		[Address(RVA = "0xC6A9C4", Offset = "0xC6A9C4", VA = "0xC6A9C4", Slot = "7")]
		protected virtual void CheckState()
		{
		}

		[Token(Token = "0x60005B8")]
		[Address(RVA = "0xC6AAB0", Offset = "0xC6AAB0", VA = "0xC6AAB0")]
		public FloatStepListener()
		{
		}
	}
	[Token(Token = "0x2000166")]
	public class FloatTrigger : MonoBehaviour
	{
		[Token(Token = "0x4000736")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public FloatVariable floatState;

		[Token(Token = "0x4000737")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool setOnEnter;

		[Token(Token = "0x4000738")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool setOnExit;

		[Token(Token = "0x4000739")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float setTo;

		[Token(Token = "0x60005B9")]
		[Address(RVA = "0xC6AB18", Offset = "0xC6AB18", VA = "0xC6AB18")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x60005BA")]
		[Address(RVA = "0xC6ABBC", Offset = "0xC6ABBC", VA = "0xC6ABBC")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x60005BB")]
		[Address(RVA = "0xC6AC60", Offset = "0xC6AC60", VA = "0xC6AC60")]
		public FloatTrigger()
		{
		}
	}
	[Token(Token = "0x2000167")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x76FDF0", Offset = "0x76FDF0")]
	public class GameEvent : ScriptableObject
	{
		[Token(Token = "0x400073A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly List<GameEventListener> listeners;

		[Token(Token = "0x400073B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly List<UnityAction> actions;

		[Token(Token = "0x60005BC")]
		[Address(RVA = "0xC6B548", Offset = "0xC6B548", VA = "0xC6B548")]
		public void Raise()
		{
		}

		[Token(Token = "0x60005BD")]
		[Address(RVA = "0xC6B66C", Offset = "0xC6B66C", VA = "0xC6B66C")]
		public void RegisterListener(GameEventListener listener)
		{
		}

		[Token(Token = "0x60005BE")]
		[Address(RVA = "0xC6B70C", Offset = "0xC6B70C", VA = "0xC6B70C")]
		public void UnregisterListener(GameEventListener listener)
		{
		}

		[Token(Token = "0x60005BF")]
		[Address(RVA = "0xC627A0", Offset = "0xC627A0", VA = "0xC627A0")]
		public void RegisterAction(UnityAction action)
		{
		}

		[Token(Token = "0x60005C0")]
		[Address(RVA = "0xC6292C", Offset = "0xC6292C", VA = "0xC6292C")]
		public void UnregisterAction(UnityAction action)
		{
		}

		[Token(Token = "0x60005C1")]
		[Address(RVA = "0xC6B7AC", Offset = "0xC6B7AC", VA = "0xC6B7AC")]
		public GameEvent()
		{
		}
	}
	[Token(Token = "0x2000168")]
	[ExecuteAlways]
	public class GameEventListener : MonoBehaviour
	{
		[Token(Token = "0x400073C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameEvent Event;

		[Token(Token = "0x400073D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnityEvent Response;

		[Token(Token = "0x60005C2")]
		[Address(RVA = "0xC6A8E8", Offset = "0xC6A8E8", VA = "0xC6A8E8", Slot = "4")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x60005C3")]
		[Address(RVA = "0xC6B864", Offset = "0xC6B864", VA = "0xC6B864", Slot = "5")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x60005C4")]
		[Address(RVA = "0xC6A9B0", Offset = "0xC6A9B0", VA = "0xC6A9B0", Slot = "6")]
		public virtual void OnEventRaised()
		{
		}

		[Token(Token = "0x60005C5")]
		[Address(RVA = "0xC6AAB4", Offset = "0xC6AAB4", VA = "0xC6AAB4")]
		public GameEventListener()
		{
		}
	}
	[Token(Token = "0x2000169")]
	[ExecuteAlways]
	public class IntListener : GameEventListener
	{
		[Token(Token = "0x400073E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public IntVariable value;

		[Token(Token = "0x400073F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int trigger;

		[Token(Token = "0x4000740")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public UnityEvent OnIsLessThan;

		[Token(Token = "0x4000741")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public UnityEvent OnIsEqual;

		[Token(Token = "0x4000742")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public UnityEvent OnIsGreaterThan;

		[Token(Token = "0x4000743")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public UnityEvent<int> PassValue;

		[Token(Token = "0x4000744")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public UnityEvent<float> PassPercentage;

		[Token(Token = "0x60005C6")]
		[Address(RVA = "0xBC5F74", Offset = "0xBC5F74", VA = "0xBC5F74")]
		private void Awake()
		{
		}

		[Token(Token = "0x60005C7")]
		[Address(RVA = "0xBC5FFC", Offset = "0xBC5FFC", VA = "0xBC5FFC", Slot = "4")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x60005C8")]
		[Address(RVA = "0xBC602C", Offset = "0xBC602C", VA = "0xBC602C", Slot = "6")]
		public override void OnEventRaised()
		{
		}

		[Token(Token = "0x60005C9")]
		[Address(RVA = "0xBC605C", Offset = "0xBC605C", VA = "0xBC605C", Slot = "7")]
		protected virtual void CheckState()
		{
		}

		[Token(Token = "0x60005CA")]
		[Address(RVA = "0xBC61CC", Offset = "0xBC61CC", VA = "0xBC61CC")]
		public IntListener()
		{
		}
	}
	[Token(Token = "0x200016A")]
	public class IntStepListener : GameEventListener
	{
		[Token(Token = "0x4000745")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public IntVariable value;

		[Token(Token = "0x4000746")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int trigger;

		[Token(Token = "0x4000747")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public int triggerStep;

		[Token(Token = "0x4000748")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public UnityEvent OnTrigger;

		[Token(Token = "0x60005CB")]
		[Address(RVA = "0xBC61D4", Offset = "0xBC61D4", VA = "0xBC61D4")]
		private void Awake()
		{
		}

		[Token(Token = "0x60005CC")]
		[Address(RVA = "0xBC625C", Offset = "0xBC625C", VA = "0xBC625C", Slot = "4")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x60005CD")]
		[Address(RVA = "0xBC628C", Offset = "0xBC628C", VA = "0xBC628C", Slot = "6")]
		public override void OnEventRaised()
		{
		}

		[Token(Token = "0x60005CE")]
		[Address(RVA = "0xBC62BC", Offset = "0xBC62BC", VA = "0xBC62BC", Slot = "7")]
		protected virtual void CheckState()
		{
		}

		[Token(Token = "0x60005CF")]
		[Address(RVA = "0xBC63A4", Offset = "0xBC63A4", VA = "0xBC63A4")]
		public IntStepListener()
		{
		}
	}
	[Token(Token = "0x200016B")]
	public class IntVolumeListener : GameEventListener
	{
		[Token(Token = "0x4000749")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public IntVariable value;

		[Token(Token = "0x400074A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AudioMixer audioMixer;

		[Token(Token = "0x400074B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string parameter;

		[Token(Token = "0x400074C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float zeroValue;

		[Token(Token = "0x400074D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float oneHunderdValue;

		[Token(Token = "0x60005D0")]
		[Address(RVA = "0xBC6790", Offset = "0xBC6790", VA = "0xBC6790")]
		private void Awake()
		{
		}

		[Token(Token = "0x60005D1")]
		[Address(RVA = "0xBC6830", Offset = "0xBC6830", VA = "0xBC6830")]
		private void Update()
		{
		}

		[Token(Token = "0x60005D2")]
		[Address(RVA = "0xBC683C", Offset = "0xBC683C", VA = "0xBC683C", Slot = "4")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x60005D3")]
		[Address(RVA = "0xBC686C", Offset = "0xBC686C", VA = "0xBC686C", Slot = "6")]
		public override void OnEventRaised()
		{
		}

		[Token(Token = "0x60005D4")]
		[Address(RVA = "0xBC689C", Offset = "0xBC689C", VA = "0xBC689C", Slot = "7")]
		protected virtual void CheckState()
		{
		}

		[Token(Token = "0x60005D5")]
		[Address(RVA = "0xBC6994", Offset = "0xBC6994", VA = "0xBC6994")]
		public IntVolumeListener()
		{
		}
	}
	[Token(Token = "0x200016C")]
	public class StringDelay : MonoBehaviour
	{
		[Token(Token = "0x400074E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public StringVariable var;

		[Token(Token = "0x400074F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected string setTo;

		[Token(Token = "0x4000750")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float afterDelay;

		[Token(Token = "0x4000751")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		protected float timer;

		[Token(Token = "0x60005D6")]
		[Address(RVA = "0xB82664", Offset = "0xB82664", VA = "0xB82664")]
		private void Update()
		{
		}

		[Token(Token = "0x60005D7")]
		[Address(RVA = "0xB826D4", Offset = "0xB826D4", VA = "0xB826D4")]
		public void StartTimer(string value)
		{
		}

		[Token(Token = "0x60005D8")]
		[Address(RVA = "0xB826E4", Offset = "0xB826E4", VA = "0xB826E4")]
		public StringDelay()
		{
		}
	}
	[Token(Token = "0x200016D")]
	[ExecuteAlways]
	public class StringListener : GameEventListener
	{
		[Token(Token = "0x4000752")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public StringVariable value;

		[Token(Token = "0x4000753")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string trigger;

		[Token(Token = "0x4000754")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public UnityEvent OnIsEqual;

		[Token(Token = "0x4000755")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public UnityEvent OnIsNotEqual;

		[Token(Token = "0x4000756")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public UnityEvent OnChange;

		[Token(Token = "0x60005D9")]
		[Address(RVA = "0xB826F4", Offset = "0xB826F4", VA = "0xB826F4")]
		private void Awake()
		{
		}

		[Token(Token = "0x60005DA")]
		[Address(RVA = "0xB8277C", Offset = "0xB8277C", VA = "0xB8277C", Slot = "4")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x60005DB")]
		[Address(RVA = "0xB827AC", Offset = "0xB827AC", VA = "0xB827AC")]
		private void Start()
		{
		}

		[Token(Token = "0x60005DC")]
		[Address(RVA = "0xB827B8", Offset = "0xB827B8", VA = "0xB827B8", Slot = "6")]
		public override void OnEventRaised()
		{
		}

		[Token(Token = "0x60005DD")]
		[Address(RVA = "0xB82804", Offset = "0xB82804", VA = "0xB82804", Slot = "7")]
		protected virtual void CheckState()
		{
		}

		[Token(Token = "0x60005DE")]
		[Address(RVA = "0xB828C0", Offset = "0xB828C0", VA = "0xB828C0")]
		public StringListener()
		{
		}
	}
	[Token(Token = "0x200016E")]
	public class StringTrigger : MonoBehaviour
	{
		[Token(Token = "0x4000757")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public StringVariable parameter;

		[Token(Token = "0x4000758")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool setOnEnter;

		[Token(Token = "0x4000759")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool setOnExit;

		[Token(Token = "0x400075A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string setTo;

		[Token(Token = "0x60005DF")]
		[Address(RVA = "0xB828C8", Offset = "0xB828C8", VA = "0xB828C8")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x60005E0")]
		[Address(RVA = "0xB8296C", Offset = "0xB8296C", VA = "0xB8296C")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x60005E1")]
		[Address(RVA = "0xB82A10", Offset = "0xB82A10", VA = "0xB82A10")]
		public StringTrigger()
		{
		}
	}
	[Token(Token = "0x200016F")]
	[ExecuteAlways]
	public class ToggleListener : GameEventListener
	{
		[Token(Token = "0x400075B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public BoolVariable boolState;

		[Token(Token = "0x400075C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool boolValue;

		[Token(Token = "0x400075D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public IntVariable intState;

		[Token(Token = "0x400075E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int intValue;

		[Token(Token = "0x400075F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public EnumVariable enumState;

		[Token(Token = "0x4000760")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public string enumValue;

		[Token(Token = "0x4000761")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public bool invert;

		[Token(Token = "0x4000762")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public List<GameObject> toggleObjects;

		[Token(Token = "0x60005E2")]
		[Address(RVA = "0xAF1588", Offset = "0xAF1588", VA = "0xAF1588")]
		private void Awake()
		{
		}

		[Token(Token = "0x60005E3")]
		[Address(RVA = "0xAF192C", Offset = "0xAF192C", VA = "0xAF192C", Slot = "4")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x60005E4")]
		[Address(RVA = "0xAF1954", Offset = "0xAF1954", VA = "0xAF1954", Slot = "6")]
		public override void OnEventRaised()
		{
		}

		[Token(Token = "0x60005E5")]
		[Address(RVA = "0xAF16A0", Offset = "0xAF16A0", VA = "0xAF16A0")]
		protected void CheckState()
		{
		}

		[Token(Token = "0x60005E6")]
		[Address(RVA = "0xAF197C", Offset = "0xAF197C", VA = "0xAF197C")]
		public ToggleListener()
		{
		}
	}
	[Token(Token = "0x2000170")]
	public class FollowTransform : MonoBehaviour
	{
		[Token(Token = "0x4000763")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform toFollow;

		[Token(Token = "0x4000764")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool followPosition;

		[Token(Token = "0x4000765")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool followRotation;

		[Token(Token = "0x4000766")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
		public bool followScale;

		[Token(Token = "0x60005E7")]
		[Address(RVA = "0xC6AEE4", Offset = "0xC6AEE4", VA = "0xC6AEE4")]
		private void Update()
		{
		}

		[Token(Token = "0x60005E8")]
		[Address(RVA = "0xC6B018", Offset = "0xC6B018", VA = "0xC6B018")]
		public FollowTransform()
		{
		}
	}
	[Token(Token = "0x2000171")]
	public class Haptics : MonoBehaviour
	{
		[Token(Token = "0x4000767")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public IntVariable intensity;

		[Token(Token = "0x4000768")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<float> amplitude;

		[Token(Token = "0x4000769")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<float> duration;

		[Token(Token = "0x60005E9")]
		[Address(RVA = "0xBC30C4", Offset = "0xBC30C4", VA = "0xBC30C4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60005EA")]
		[Address(RVA = "0xBC30C8", Offset = "0xBC30C8", VA = "0xBC30C8")]
		public void Play()
		{
		}

		[Token(Token = "0x60005EB")]
		[Address(RVA = "0xBC330C", Offset = "0xBC330C", VA = "0xBC330C")]
		public Haptics()
		{
		}
	}
	[Token(Token = "0x2000172")]
	public class HapticsFindNode : MonoBehaviour
	{
		[Token(Token = "0x60005EC")]
		[Address(RVA = "0xBC3454", Offset = "0xBC3454", VA = "0xBC3454")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60005ED")]
		[Address(RVA = "0xBC35A8", Offset = "0xBC35A8", VA = "0xBC35A8")]
		public HapticsFindNode()
		{
		}
	}
	[Token(Token = "0x2000173")]
	public class HapticsOnEnable : MonoBehaviour
	{
		[Token(Token = "0x60005EE")]
		[Address(RVA = "0xBC35B0", Offset = "0xBC35B0", VA = "0xBC35B0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60005EF")]
		[Address(RVA = "0xBC3660", Offset = "0xBC3660", VA = "0xBC3660")]
		public HapticsOnEnable()
		{
		}
	}
	[Token(Token = "0x2000174")]
	public class HapticsPulse : MonoBehaviour
	{
		[Token(Token = "0x400076A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public IntVariable intensity;

		[Token(Token = "0x400076B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<float> amplitude;

		[Token(Token = "0x400076C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<float> wavelength;

		[Token(Token = "0x400076D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool playing;

		[Token(Token = "0x400076E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected XRController controller;

		[Token(Token = "0x400076F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected float timer;

		[Token(Token = "0x60005F0")]
		[Address(RVA = "0xBC3668", Offset = "0xBC3668", VA = "0xBC3668")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60005F1")]
		[Address(RVA = "0xBC366C", Offset = "0xBC366C", VA = "0xBC366C")]
		private void Update()
		{
		}

		[Token(Token = "0x60005F2")]
		[Address(RVA = "0xBC3868", Offset = "0xBC3868", VA = "0xBC3868")]
		public void Play()
		{
		}

		[Token(Token = "0x60005F3")]
		[Address(RVA = "0xBC39A8", Offset = "0xBC39A8", VA = "0xBC39A8")]
		public void Stop()
		{
		}

		[Token(Token = "0x60005F4")]
		[Address(RVA = "0xBC39B0", Offset = "0xBC39B0", VA = "0xBC39B0")]
		public HapticsPulse()
		{
		}
	}
	[Token(Token = "0x2000175")]
	public class MaterialParameter : MonoBehaviour
	{
		[Token(Token = "0x4000770")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Renderer rend;

		[Token(Token = "0x4000771")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string parameter;

		[Token(Token = "0x4000772")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float slideTime;

		[Token(Token = "0x4000773")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected Material originalMat;

		[Token(Token = "0x4000774")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected Material mat;

		[Token(Token = "0x4000775")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected Interpolate slider;

		[Token(Token = "0x17000090")]
		public bool Done
		{
			[Token(Token = "0x60005F8")]
			[Address(RVA = "0xE596B4", Offset = "0xE596B4", VA = "0xE596B4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60005F5")]
		[Address(RVA = "0xE59478", Offset = "0xE59478", VA = "0xE59478")]
		private void Awake()
		{
		}

		[Token(Token = "0x60005F6")]
		[Address(RVA = "0xE594FC", Offset = "0xE594FC", VA = "0xE594FC", Slot = "4")]
		public virtual void OnEnable()
		{
		}

		[Token(Token = "0x60005F7")]
		[Address(RVA = "0xE595A4", Offset = "0xE595A4", VA = "0xE595A4")]
		private void Update()
		{
		}

		[Token(Token = "0x60005F9")]
		[Address(RVA = "0xE59604", Offset = "0xE59604", VA = "0xE59604")]
		public void Set(float f)
		{
		}

		[Token(Token = "0x60005FA")]
		[Address(RVA = "0xE596D0", Offset = "0xE596D0", VA = "0xE596D0")]
		public void Slide(float f)
		{
		}

		[Token(Token = "0x60005FB")]
		[Address(RVA = "0xE597F0", Offset = "0xE597F0", VA = "0xE597F0", Slot = "5")]
		protected virtual float TimeToSlide(float fromValue, float toValue)
		{
			return default(float);
		}

		[Token(Token = "0x60005FC")]
		[Address(RVA = "0xE597F8", Offset = "0xE597F8", VA = "0xE597F8")]
		public MaterialParameter()
		{
		}
	}
	[Token(Token = "0x2000176")]
	public class MaterialParameterColor : MaterialParameter
	{
		[Token(Token = "0x4000776")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Color startAt;

		[Token(Token = "0x60005FD")]
		[Address(RVA = "0xE59800", Offset = "0xE59800", VA = "0xE59800", Slot = "4")]
		public override void OnEnable()
		{
		}

		[Token(Token = "0x60005FE")]
		[Address(RVA = "0xE5982C", Offset = "0xE5982C", VA = "0xE5982C")]
		public void SetColor(Color c)
		{
		}

		[Token(Token = "0x60005FF")]
		[Address(RVA = "0xE59900", Offset = "0xE59900", VA = "0xE59900")]
		public MaterialParameterColor()
		{
		}
	}
	[Token(Token = "0x2000177")]
	public class MaterialParameterFloat : MaterialParameter
	{
		[Token(Token = "0x4000777")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		protected float level;

		[Token(Token = "0x4000778")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float lowPoint;

		[Token(Token = "0x4000779")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float highPoint;

		[Token(Token = "0x400077A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float zeroValue;

		[Token(Token = "0x400077B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float oneValue;

		[Token(Token = "0x17000091")]
		public float Level
		{
			[Token(Token = "0x6000601")]
			[Address(RVA = "0xE59964", Offset = "0xE59964", VA = "0xE59964")]
			set
			{
			}
		}

		[Token(Token = "0x6000600")]
		[Address(RVA = "0xE59908", Offset = "0xE59908", VA = "0xE59908")]
		private void Start()
		{
		}

		[Token(Token = "0x6000602")]
		[Address(RVA = "0xE5996C", Offset = "0xE5996C", VA = "0xE5996C")]
		public void SetLevel(float val)
		{
		}

		[Token(Token = "0x6000603")]
		[Address(RVA = "0xE59910", Offset = "0xE59910", VA = "0xE59910")]
		protected void UpdateFromValue()
		{
		}

		[Token(Token = "0x6000604")]
		[Address(RVA = "0xE599C0", Offset = "0xE599C0", VA = "0xE599C0", Slot = "5")]
		protected override float TimeToSlide(float fromValue, float toValue)
		{
			return default(float);
		}

		[Token(Token = "0x6000605")]
		[Address(RVA = "0xE599D0", Offset = "0xE599D0", VA = "0xE599D0")]
		public MaterialParameterFloat()
		{
		}
	}
	[Token(Token = "0x2000178")]
	public class RealtimeBool : RealtimeValue<bool>
	{
		[Token(Token = "0x6000606")]
		[Address(RVA = "0xCF1E1C", Offset = "0xCF1E1C", VA = "0xCF1E1C")]
		public RealtimeBool()
		{
		}
	}
	[Token(Token = "0x2000179")]
	public class RealtimeFloat : RealtimeValue<float>
	{
		[Token(Token = "0x6000607")]
		[Address(RVA = "0xCF1E68", Offset = "0xCF1E68", VA = "0xCF1E68")]
		public RealtimeFloat()
		{
		}
	}
	[Token(Token = "0x200017A")]
	public class RealtimeFloatComponent : MonoBehaviourPun, IPunObservable
	{
		[Token(Token = "0x400077C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float DefaultValue;

		[Token(Token = "0x400077D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UnityEvent onChange;

		[Token(Token = "0x400077E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public UnityEvent<float> onChangeValue;

		[Token(Token = "0x400077F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected float val;

		[Token(Token = "0x4000780")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		protected bool needsUpdate;

		[Token(Token = "0x17000092")]
		public float value
		{
			[Token(Token = "0x6000608")]
			[Address(RVA = "0xCF1EB4", Offset = "0xCF1EB4", VA = "0xCF1EB4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000609")]
			[Address(RVA = "0xCF1EBC", Offset = "0xCF1EBC", VA = "0xCF1EBC")]
			set
			{
			}
		}

		[Token(Token = "0x600060A")]
		[Address(RVA = "0xCF1EC4", Offset = "0xCF1EC4", VA = "0xCF1EC4")]
		public void Awake()
		{
		}

		[Token(Token = "0x600060B")]
		[Address(RVA = "0xCF1ED0", Offset = "0xCF1ED0", VA = "0xCF1ED0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600060C")]
		[Address(RVA = "0xCF1ED4", Offset = "0xCF1ED4", VA = "0xCF1ED4", Slot = "4")]
		public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
		{
		}

		[Token(Token = "0x600060D")]
		[Address(RVA = "0xCF1FE8", Offset = "0xCF1FE8", VA = "0xCF1FE8")]
		public RealtimeFloatComponent()
		{
		}
	}
	[Token(Token = "0x200017B")]
	public class RealtimeInt : RealtimeValue<int>
	{
		[Token(Token = "0x600060E")]
		[Address(RVA = "0xCF1FF0", Offset = "0xCF1FF0", VA = "0xCF1FF0")]
		public RealtimeInt()
		{
		}
	}
	[Token(Token = "0x200017C")]
	public class RealtimeString : RealtimeValue<string>
	{
		[Token(Token = "0x600060F")]
		[Address(RVA = "0xCF203C", Offset = "0xCF203C", VA = "0xCF203C")]
		public RealtimeString()
		{
		}
	}
	[Token(Token = "0x200017D")]
	public class RealtimeValue<T> : MonoBehaviourPun, IPunObservable where T : IEquatable<T>
	{
		[Token(Token = "0x4000781")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public T DefaultValue;

		[Token(Token = "0x4000782")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public UnityEvent onChange;

		[Token(Token = "0x4000783")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public UnityEvent<T> onChangeValue;

		[Token(Token = "0x4000784")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected T val;

		[Token(Token = "0x17000093")]
		public T value
		{
			[Token(Token = "0x6000610")]
			get
			{
				return (T)null;
			}
			[Token(Token = "0x6000611")]
			set
			{
			}
		}

		[Token(Token = "0x6000612")]
		public void Awake()
		{
		}

		[Token(Token = "0x6000613")]
		public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
		{
		}

		[Token(Token = "0x6000614")]
		public RealtimeValue()
		{
		}
	}
	[Token(Token = "0x200017E")]
	public class RealtimeVector
	{
		[Token(Token = "0x4000785")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Vector3 _value;

		[Token(Token = "0x17000094")]
		public Vector3 value
		{
			[Token(Token = "0x6000615")]
			[Address(RVA = "0xCF2088", Offset = "0xCF2088", VA = "0xCF2088")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000616")]
			[Address(RVA = "0xCF2094", Offset = "0xCF2094", VA = "0xCF2094")]
			set
			{
			}
		}

		[Token(Token = "0x6000617")]
		[Address(RVA = "0xCF20A0", Offset = "0xCF20A0", VA = "0xCF20A0")]
		public RealtimeVector()
		{
		}
	}
	[Token(Token = "0x200017F")]
	public class RealtimeVectorComponent : MonoBehaviour
	{
		[Token(Token = "0x4000786")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 DefaultValue;

		[Token(Token = "0x4000787")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UnityEvent onChange;

		[Token(Token = "0x4000788")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public UnityEvent<Vector3> onChangeValue;

		[Token(Token = "0x4000789")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected Vector3 val;

		[Token(Token = "0x400078A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		protected bool needsUpdate;

		[Token(Token = "0x17000095")]
		public Vector3 value
		{
			[Token(Token = "0x6000618")]
			[Address(RVA = "0xCF20A8", Offset = "0xCF20A8", VA = "0xCF20A8")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000619")]
			[Address(RVA = "0xCF20B4", Offset = "0xCF20B4", VA = "0xCF20B4")]
			set
			{
			}
		}

		[Token(Token = "0x600061A")]
		[Address(RVA = "0xCF20C0", Offset = "0xCF20C0", VA = "0xCF20C0")]
		public RealtimeVectorComponent()
		{
		}
	}
	[Token(Token = "0x2000180")]
	public class TakeOwnership : MonoBehaviour
	{
		[Token(Token = "0x600061B")]
		[Address(RVA = "0xB883FC", Offset = "0xB883FC", VA = "0xB883FC")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x600061C")]
		[Address(RVA = "0xB884F8", Offset = "0xB884F8", VA = "0xB884F8")]
		public TakeOwnership()
		{
		}
	}
	[Token(Token = "0x2000181")]
	public class WatchOwnership : MonoBehaviour
	{
		[Token(Token = "0x400078B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected PhotonView photonView;

		[Token(Token = "0x400078C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected int lastOwner;

		[Token(Token = "0x400078D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UnityEvent onOwn;

		[Token(Token = "0x400078E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public UnityEvent onOtherOwner;

		[Token(Token = "0x400078F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public UnityEvent onNobodyOwns;

		[Token(Token = "0x600061D")]
		[Address(RVA = "0xAFCBE0", Offset = "0xAFCBE0", VA = "0xAFCBE0")]
		private void Start()
		{
		}

		[Token(Token = "0x600061E")]
		[Address(RVA = "0xAFCD38", Offset = "0xAFCD38", VA = "0xAFCD38")]
		private void Update()
		{
		}

		[Token(Token = "0x600061F")]
		[Address(RVA = "0xAFCC38", Offset = "0xAFCC38", VA = "0xAFCC38")]
		protected void Check()
		{
		}

		[Token(Token = "0x6000620")]
		[Address(RVA = "0xAFCD3C", Offset = "0xAFCD3C", VA = "0xAFCD3C")]
		public WatchOwnership()
		{
		}
	}
	[Token(Token = "0x2000182")]
	public class SetRandomString : MonoBehaviour
	{
		[Token(Token = "0x4000790")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public StringVariable stringVar;

		[Token(Token = "0x4000791")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int minValue;

		[Token(Token = "0x4000792")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int maxValue;

		[Token(Token = "0x6000621")]
		[Address(RVA = "0xB7B374", Offset = "0xB7B374", VA = "0xB7B374")]
		private void Start()
		{
		}

		[Token(Token = "0x6000622")]
		[Address(RVA = "0xB7B3CC", Offset = "0xB7B3CC", VA = "0xB7B3CC")]
		public SetRandomString()
		{
		}
	}
	[Token(Token = "0x2000183")]
	public class AnimationSound : MonoBehaviour
	{
		[Token(Token = "0x4000793")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<AudioClip> sounds;

		[Token(Token = "0x4000794")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioSource audioSource;

		[Token(Token = "0x6000623")]
		[Address(RVA = "0xB3B324", Offset = "0xB3B324", VA = "0xB3B324")]
		public void PlayClip(AudioClip clip)
		{
		}

		[Token(Token = "0x6000624")]
		[Address(RVA = "0xB3B474", Offset = "0xB3B474", VA = "0xB3B474")]
		public void PlayRandomClip()
		{
		}

		[Token(Token = "0x6000625")]
		[Address(RVA = "0xB3B514", Offset = "0xB3B514", VA = "0xB3B514")]
		public AnimationSound()
		{
		}
	}
	[Token(Token = "0x2000184")]
	public class LooperSoundProducer : SoundProducer
	{
		[Token(Token = "0x4000795")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool randomOrder;

		[Token(Token = "0x4000796")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<AudioClip> clips;

		[Token(Token = "0x4000797")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected int lastClip;

		[Token(Token = "0x6000626")]
		[Address(RVA = "0xE49688", Offset = "0xE49688", VA = "0xE49688")]
		private void Update()
		{
		}

		[Token(Token = "0x6000627")]
		[Address(RVA = "0xE496C8", Offset = "0xE496C8", VA = "0xE496C8", Slot = "5")]
		public override void Play()
		{
		}

		[Token(Token = "0x6000628")]
		[Address(RVA = "0xE497B8", Offset = "0xE497B8", VA = "0xE497B8")]
		public LooperSoundProducer()
		{
		}
	}
	[Token(Token = "0x2000185")]
	public class RandomSoundProducer : SoundProducer
	{
		[Token(Token = "0x4000798")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<AudioClip> clips;

		[Token(Token = "0x4000799")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected int lastClip;

		[Token(Token = "0x400079A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool removeOnPlay;

		[Token(Token = "0x6000629")]
		[Address(RVA = "0xCF00F8", Offset = "0xCF00F8", VA = "0xCF00F8", Slot = "5")]
		public override void Play()
		{
		}

		[Token(Token = "0x600062A")]
		[Address(RVA = "0xCF02CC", Offset = "0xCF02CC", VA = "0xCF02CC")]
		public RandomSoundProducer()
		{
		}
	}
	[Token(Token = "0x2000186")]
	public class RandomSoundTimer : RandomSoundProducer
	{
		[Token(Token = "0x400079B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x771F24", Offset = "0x771F24")]
		public float minSoundTime;

		[Token(Token = "0x400079C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float maxSoundTime;

		[Token(Token = "0x400079D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected float soundTimer;

		[Token(Token = "0x600062B")]
		[Address(RVA = "0xCF02DC", Offset = "0xCF02DC", VA = "0xCF02DC", Slot = "4")]
		protected override void Start()
		{
		}

		[Token(Token = "0x600062C")]
		[Address(RVA = "0xCF0310", Offset = "0xCF0310", VA = "0xCF0310")]
		private void Update()
		{
		}

		[Token(Token = "0x600062D")]
		[Address(RVA = "0xCF037C", Offset = "0xCF037C", VA = "0xCF037C")]
		public RandomSoundTimer()
		{
		}
	}
	[Token(Token = "0x2000187")]
	public class SoundProducer : MonoBehaviour
	{
		[Token(Token = "0x400079E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected AudioSource source;

		[Token(Token = "0x17000096")]
		public bool isPlaying
		{
			[Token(Token = "0x6000631")]
			[Address(RVA = "0xB805A8", Offset = "0xB805A8", VA = "0xB805A8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600062E")]
		[Address(RVA = "0xB80494", Offset = "0xB80494", VA = "0xB80494", Slot = "4")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x600062F")]
		[Address(RVA = "0xB80530", Offset = "0xB80530", VA = "0xB80530", Slot = "5")]
		public virtual void Play()
		{
		}

		[Token(Token = "0x6000630")]
		[Address(RVA = "0xB80568", Offset = "0xB80568", VA = "0xB80568", Slot = "6")]
		public virtual void Play(AudioClip clip)
		{
		}

		[Token(Token = "0x6000632")]
		[Address(RVA = "0xB80498", Offset = "0xB80498", VA = "0xB80498")]
		protected void UpdateSource()
		{
		}

		[Token(Token = "0x6000633")]
		[Address(RVA = "0xB805BC", Offset = "0xB805BC", VA = "0xB805BC")]
		public SoundProducer()
		{
		}
	}
	[Token(Token = "0x2000188")]
	public class SteamUserData : UserData
	{
		[Token(Token = "0x400079F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected SteamManager steamManager;

		[Token(Token = "0x17000097")]
		public override string Type
		{
			[Token(Token = "0x6000634")]
			[Address(RVA = "0xB82590", Offset = "0xB82590", VA = "0xB82590", Slot = "6")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000098")]
		public override string UserID
		{
			[Token(Token = "0x6000635")]
			[Address(RVA = "0xB825D4", Offset = "0xB825D4", VA = "0xB825D4", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000099")]
		public override string Name
		{
			[Token(Token = "0x6000636")]
			[Address(RVA = "0xB82618", Offset = "0xB82618", VA = "0xB82618", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000637")]
		[Address(RVA = "0xB8265C", Offset = "0xB8265C", VA = "0xB8265C")]
		public SteamUserData()
		{
		}
	}
	[Token(Token = "0x2000189")]
	public class LocaleIdentifier : MonoBehaviour
	{
		[Token(Token = "0x40007A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected LocalizationManager.SupportedLocale identifier;

		[Token(Token = "0x1700009A")]
		public LocalizationManager.SupportedLocale Identifier
		{
			[Token(Token = "0x6000638")]
			[Address(RVA = "0xBD4EE0", Offset = "0xBD4EE0", VA = "0xBD4EE0")]
			get
			{
				return default(LocalizationManager.SupportedLocale);
			}
		}

		[Token(Token = "0x6000639")]
		[Address(RVA = "0xBD4EE8", Offset = "0xBD4EE8", VA = "0xBD4EE8")]
		public LocaleIdentifier()
		{
		}
	}
	[Token(Token = "0x200018A")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x76FE40", Offset = "0x76FE40")]
	public class LocalizationData : ScriptableObject
	{
		[Token(Token = "0x40007A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public StringTable strings;

		[Token(Token = "0x40007A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TMP_FontAsset font;

		[Token(Token = "0x40007A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TMP_FontAsset nameFont;

		[Token(Token = "0x600063A")]
		[Address(RVA = "0xBD4EF0", Offset = "0xBD4EF0", VA = "0xBD4EF0")]
		public LocalizationData()
		{
		}
	}
	[Token(Token = "0x200018B")]
	public class LocalizationManager : MonoBehaviour
	{
		[Token(Token = "0x200018C")]
		public enum SupportedLocale
		{
			[Token(Token = "0x40007AD")]
			None,
			[Token(Token = "0x40007AE")]
			English,
			[Token(Token = "0x40007AF")]
			Chinese,
			[Token(Token = "0x40007B0")]
			Japanese,
			[Token(Token = "0x40007B1")]
			Korean,
			[Token(Token = "0x40007B2")]
			German,
			[Token(Token = "0x40007B3")]
			Spanish,
			[Token(Token = "0x40007B4")]
			French,
			[Token(Token = "0x40007B5")]
			Italian,
			[Token(Token = "0x40007B6")]
			Portuguese,
			[Token(Token = "0x40007B7")]
			Thai
		}

		[Serializable]
		[Token(Token = "0x200018D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76FE84", Offset = "0x76FE84")]
		private sealed class <>c
		{
			[Token(Token = "0x40007B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40007B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<LocalizationData> <>9__18_0;

			[Token(Token = "0x6000647")]
			[Address(RVA = "0xB2C944", Offset = "0xB2C944", VA = "0xB2C944")]
			public <>c()
			{
			}

			[Token(Token = "0x6000648")]
			[Address(RVA = "0xB2C94C", Offset = "0xB2C94C", VA = "0xB2C94C")]
			internal bool <Awake>b__18_0(LocalizationData x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x200018E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76FE94", Offset = "0x76FE94")]
		private sealed class <>c__DisplayClass19_0
		{
			[Token(Token = "0x40007BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SupportedLocale loc;

			[Token(Token = "0x6000649")]
			[Address(RVA = "0xB2C994", Offset = "0xB2C994", VA = "0xB2C994")]
			public <>c__DisplayClass19_0()
			{
			}

			[Token(Token = "0x600064A")]
			[Address(RVA = "0xB2C99C", Offset = "0xB2C99C", VA = "0xB2C99C")]
			internal bool <GetStringTableFor>b__0(LocalizationData x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x200018F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76FEA4", Offset = "0x76FEA4")]
		private sealed class <>c__DisplayClass23_0
		{
			[Token(Token = "0x40007BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SupportedLocale locale;

			[Token(Token = "0x600064B")]
			[Address(RVA = "0xB2C9E0", Offset = "0xB2C9E0", VA = "0xB2C9E0")]
			public <>c__DisplayClass23_0()
			{
			}

			[Token(Token = "0x600064C")]
			[Address(RVA = "0xB2C9E8", Offset = "0xB2C9E8", VA = "0xB2C9E8")]
			internal bool <FontFor>b__0(LocalizationData x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40007A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected static LocalizationManager instance;

		[Token(Token = "0x40007A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected StringTable referenceStringTable;

		[Token(Token = "0x40007A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected List<LocalizationData> tables;

		[Token(Token = "0x40007A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected StringTable selectedStringTable;

		[Token(Token = "0x40007A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected TMP_FontAsset selectedFont;

		[Token(Token = "0x40007A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected TMP_FontAsset selectedNameFont;

		[Token(Token = "0x40007AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		protected SupportedLocale defaultLocale;

		[Token(Token = "0x40007AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		protected SupportedLocale selectedLocale;

		[Token(Token = "0x1700009B")]
		public static LocalizationManager Instance
		{
			[Token(Token = "0x600063B")]
			[Address(RVA = "0xBD4EF8", Offset = "0xBD4EF8", VA = "0xBD4EF8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700009C")]
		public static SupportedLocale Locale
		{
			[Token(Token = "0x600063C")]
			[Address(RVA = "0xBD4F44", Offset = "0xBD4F44", VA = "0xBD4F44")]
			get
			{
				return default(SupportedLocale);
			}
		}

		[Token(Token = "0x1700009D")]
		public static SupportedLocale DefaultLocale
		{
			[Token(Token = "0x600063E")]
			[Address(RVA = "0xBD5294", Offset = "0xBD5294", VA = "0xBD5294")]
			get
			{
				return default(SupportedLocale);
			}
		}

		[Token(Token = "0x1700009E")]
		public static SupportedLocale SelectedLocale
		{
			[Token(Token = "0x600063F")]
			[Address(RVA = "0xBD52EC", Offset = "0xBD52EC", VA = "0xBD52EC")]
			get
			{
				return default(SupportedLocale);
			}
		}

		[Token(Token = "0x1700009F")]
		public TMP_FontAsset Font
		{
			[Token(Token = "0x6000643")]
			[Address(RVA = "0xBD5C58", Offset = "0xBD5C58", VA = "0xBD5C58")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600063D")]
		[Address(RVA = "0xBD4F68", Offset = "0xBD4F68", VA = "0xBD4F68")]
		public static SupportedLocale GetLocaleFor(string key)
		{
			return default(SupportedLocale);
		}

		[Token(Token = "0x6000640")]
		[Address(RVA = "0xBD5344", Offset = "0xBD5344", VA = "0xBD5344")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000641")]
		[Address(RVA = "0xBD56E0", Offset = "0xBD56E0", VA = "0xBD56E0")]
		protected StringTable GetStringTableFor(SupportedLocale loc)
		{
			return null;
		}

		[Token(Token = "0x6000642")]
		[Address(RVA = "0xBD583C", Offset = "0xBD583C", VA = "0xBD583C")]
		public string GetLocalizedString(string str, SupportedLocale loc = SupportedLocale.None)
		{
			return null;
		}

		[Token(Token = "0x6000644")]
		[Address(RVA = "0xBD5C60", Offset = "0xBD5C60", VA = "0xBD5C60")]
		public TMP_FontAsset FontFor(SupportedLocale locale, bool forNames = false)
		{
			return null;
		}

		[Token(Token = "0x6000645")]
		[Address(RVA = "0xBD5DD8", Offset = "0xBD5DD8", VA = "0xBD5DD8")]
		public LocalizationManager()
		{
		}
	}
	[Token(Token = "0x2000190")]
	public class LocalizeIf : MonoBehaviour
	{
		[Token(Token = "0x600064D")]
		[Address(RVA = "0xBD5E58", Offset = "0xBD5E58", VA = "0xBD5E58")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600064E")]
		[Address(RVA = "0xBD5E84", Offset = "0xBD5E84", VA = "0xBD5E84")]
		protected void DisableAll()
		{
		}

		[Token(Token = "0x600064F")]
		[Address(RVA = "0xBD5F3C", Offset = "0xBD5F3C", VA = "0xBD5F3C")]
		protected void EnableByLocale(LocalizationManager.SupportedLocale locale)
		{
		}

		[Token(Token = "0x6000650")]
		[Address(RVA = "0xBD603C", Offset = "0xBD603C", VA = "0xBD603C")]
		public LocalizeIf()
		{
		}
	}
	[Token(Token = "0x2000191")]
	public abstract class UserData : MonoBehaviour
	{
		[Token(Token = "0x170000A0")]
		public virtual bool Ready
		{
			[Token(Token = "0x6000652")]
			[Address(RVA = "0xAF7AA0", Offset = "0xAF7AA0", VA = "0xAF7AA0", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000A1")]
		public abstract string Type
		{
			[Token(Token = "0x6000653")]
			get;
		}

		[Token(Token = "0x170000A2")]
		public abstract string UserID
		{
			[Token(Token = "0x6000654")]
			get;
		}

		[Token(Token = "0x170000A3")]
		public abstract string Name
		{
			[Token(Token = "0x6000655")]
			get;
		}

		[Token(Token = "0x170000A4")]
		public virtual string VerificationProof
		{
			[Token(Token = "0x6000656")]
			[Address(RVA = "0xAF7AA8", Offset = "0xAF7AA8", VA = "0xAF7AA8", Slot = "9")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000651")]
		[Address(RVA = "0xAF7A9C", Offset = "0xAF7A9C", VA = "0xAF7A9C", Slot = "4")]
		public virtual void Init()
		{
		}

		[Token(Token = "0x6000657")]
		[Address(RVA = "0xAF7AEC", Offset = "0xAF7AEC", VA = "0xAF7AEC")]
		protected UserData()
		{
		}
	}
	[Token(Token = "0x2000192")]
	public class DisplayTime : MonoBehaviour
	{
		[Token(Token = "0x40007BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public IntVariable secondsLeft;

		[Token(Token = "0x40007BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UIText clockDisplay;

		[Token(Token = "0x40007BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected float zeroTime;

		[Token(Token = "0x6000658")]
		[Address(RVA = "0xC626B4", Offset = "0xC626B4", VA = "0xC626B4")]
		private void Start()
		{
		}

		[Token(Token = "0x6000659")]
		[Address(RVA = "0xC62840", Offset = "0xC62840", VA = "0xC62840")]
		private void Destroy()
		{
		}

		[Token(Token = "0x600065A")]
		[Address(RVA = "0xC629CC", Offset = "0xC629CC", VA = "0xC629CC")]
		private void Update()
		{
		}

		[Token(Token = "0x600065B")]
		[Address(RVA = "0xC62C70", Offset = "0xC62C70", VA = "0xC62C70")]
		protected void UpdateTime()
		{
		}

		[Token(Token = "0x600065C")]
		[Address(RVA = "0xC62D1C", Offset = "0xC62D1C", VA = "0xC62D1C")]
		public DisplayTime()
		{
		}
	}
	[Token(Token = "0x2000193")]
	public class FluctuateFloat : MonoBehaviour
	{
		[Token(Token = "0x40007BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public FloatVariable theFloat;

		[Token(Token = "0x40007C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float Min;

		[Token(Token = "0x40007C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float Max;

		[Token(Token = "0x40007C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float MaxDelta;

		[Token(Token = "0x600065D")]
		[Address(RVA = "0xC6AE3C", Offset = "0xC6AE3C", VA = "0xC6AE3C")]
		private void Update()
		{
		}

		[Token(Token = "0x600065E")]
		[Address(RVA = "0xC6AEC8", Offset = "0xC6AEC8", VA = "0xC6AEC8")]
		public FluctuateFloat()
		{
		}
	}
	[Token(Token = "0x2000194")]
	public class HeadsetIf : MonoBehaviour
	{
		[Token(Token = "0x2000195")]
		public enum Headset
		{
			[Token(Token = "0x40007C9")]
			Unknown,
			[Token(Token = "0x40007CA")]
			Steam,
			[Token(Token = "0x40007CB")]
			Quest,
			[Token(Token = "0x40007CC")]
			Quest2,
			[Token(Token = "0x40007CD")]
			Pico
		}

		[Token(Token = "0x40007C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool IfSteam;

		[Token(Token = "0x40007C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool IfQuest;

		[Token(Token = "0x40007C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		public bool IfQuest2;

		[Token(Token = "0x40007C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
		public bool IfPico;

		[Token(Token = "0x40007C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool IfUnknown;

		[Token(Token = "0x170000A5")]
		protected Headset UsingHeadset
		{
			[Token(Token = "0x6000660")]
			[Address(RVA = "0xBC4408", Offset = "0xBC4408", VA = "0xBC4408")]
			get
			{
				return default(Headset);
			}
		}

		[Token(Token = "0x170000A6")]
		protected bool ShouldDisable
		{
			[Token(Token = "0x6000661")]
			[Address(RVA = "0xBC43F8", Offset = "0xBC43F8", VA = "0xBC43F8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600065F")]
		[Address(RVA = "0xBC43C0", Offset = "0xBC43C0", VA = "0xBC43C0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000662")]
		[Address(RVA = "0xBC4410", Offset = "0xBC4410", VA = "0xBC4410")]
		public HeadsetIf()
		{
		}
	}
	[Token(Token = "0x2000196")]
	public class Interpolate
	{
		[Token(Token = "0x2000197")]
		public enum Shape
		{
			[Token(Token = "0x40007D4")]
			Linear,
			[Token(Token = "0x40007D5")]
			EaseIn,
			[Token(Token = "0x40007D6")]
			EaseOut,
			[Token(Token = "0x40007D7")]
			EaseInOut
		}

		[Token(Token = "0x40007CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private float mStart;

		[Token(Token = "0x40007CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float mEnd;

		[Token(Token = "0x40007D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float mTotalTime;

		[Token(Token = "0x40007D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float mCurrentTime;

		[Token(Token = "0x40007D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Shape mShape;

		[Token(Token = "0x170000A7")]
		public bool Done
		{
			[Token(Token = "0x6000665")]
			[Address(RVA = "0xBC8CC4", Offset = "0xBC8CC4", VA = "0xBC8CC4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000663")]
		[Address(RVA = "0xBC8BB4", Offset = "0xBC8BB4", VA = "0xBC8BB4")]
		public Interpolate(float start, float end, float totalTime, Shape shape = Shape.Linear)
		{
		}

		[Token(Token = "0x6000664")]
		[Address(RVA = "0xBC8C04", Offset = "0xBC8C04", VA = "0xBC8C04")]
		public float calc(float deltaTime)
		{
			return default(float);
		}
	}
	[Token(Token = "0x2000198")]
	public class InterpolateRepeat
	{
		[Token(Token = "0x2000199")]
		public enum Shape
		{
			[Token(Token = "0x40007DE")]
			Linear,
			[Token(Token = "0x40007DF")]
			EaseIn,
			[Token(Token = "0x40007E0")]
			EaseOut,
			[Token(Token = "0x40007E1")]
			EaseInOut
		}

		[Token(Token = "0x40007D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private float mStart;

		[Token(Token = "0x40007D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float mEnd;

		[Token(Token = "0x40007DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float mTotalTime;

		[Token(Token = "0x40007DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float mCurrentTime;

		[Token(Token = "0x40007DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Shape mShape;

		[Token(Token = "0x6000666")]
		[Address(RVA = "0xBC8CD4", Offset = "0xBC8CD4", VA = "0xBC8CD4")]
		public InterpolateRepeat(float start, float end, float totalTime, Shape shape = Shape.Linear)
		{
		}

		[Token(Token = "0x6000667")]
		[Address(RVA = "0xBC8D24", Offset = "0xBC8D24", VA = "0xBC8D24")]
		public float calc(float deltaTime)
		{
			return default(float);
		}
	}
	[Token(Token = "0x200019A")]
	public class IsDebug : MonoBehaviour
	{
		[Token(Token = "0x6000668")]
		[Address(RVA = "0xBC9504", Offset = "0xBC9504", VA = "0xBC9504")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000669")]
		[Address(RVA = "0xBC952C", Offset = "0xBC952C", VA = "0xBC952C")]
		public IsDebug()
		{
		}
	}
	[Token(Token = "0x200019B")]
	public static class Math
	{
		[Token(Token = "0x170000A8")]
		public static bool RandomBool
		{
			[Token(Token = "0x600066A")]
			[Address(RVA = "0xE54FDC", Offset = "0xE54FDC", VA = "0xE54FDC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600066B")]
		[Address(RVA = "0xE53FC8", Offset = "0xE53FC8", VA = "0xE53FC8")]
		public static bool RandomThreshold(float threshold)
		{
			return default(bool);
		}

		[Token(Token = "0x600066C")]
		[Address(RVA = "0xE599E4", Offset = "0xE599E4", VA = "0xE599E4")]
		public static int RandomChoice(float a, float b)
		{
			return default(int);
		}

		[Token(Token = "0x600066D")]
		[Address(RVA = "0xE59A30", Offset = "0xE59A30", VA = "0xE59A30")]
		public static int RandomPoisson(float lambda)
		{
			return default(int);
		}
	}
	[Token(Token = "0x200019C")]
	public static class Math<T>
	{
		[Token(Token = "0x600066E")]
		public static T ChooseOne(T[] options)
		{
			return (T)null;
		}
	}
	[Token(Token = "0x200019D")]
	public class ObjectManipulation
	{
		[Token(Token = "0x600066F")]
		[Address(RVA = "0xB9950C", Offset = "0xB9950C", VA = "0xB9950C")]
		public static void ChangeLayer(GameObject obj, int layer, bool recurse = false, int onlyIfLayer = -1)
		{
		}

		[Token(Token = "0x6000670")]
		[Address(RVA = "0xB997FC", Offset = "0xB997FC", VA = "0xB997FC")]
		public static void SetAllRenderers(GameObject obj, bool active)
		{
		}

		[Token(Token = "0x6000671")]
		[Address(RVA = "0xB998F8", Offset = "0xB998F8", VA = "0xB998F8")]
		public static void SetChildrenActive(GameObject obj, bool active)
		{
		}

		[Token(Token = "0x6000672")]
		[Address(RVA = "0xB8DE98", Offset = "0xB8DE98", VA = "0xB8DE98")]
		public static void DestroyChildren(GameObject obj)
		{
		}

		[Token(Token = "0x6000673")]
		[Address(RVA = "0xB99BF8", Offset = "0xB99BF8", VA = "0xB99BF8")]
		public static void SetAllActive(List<GameObject> objects, bool active)
		{
		}

		[Token(Token = "0x6000674")]
		[Address(RVA = "0xB99D20", Offset = "0xB99D20", VA = "0xB99D20")]
		public ObjectManipulation()
		{
		}
	}
	[Token(Token = "0x200019E")]
	[DisallowMultipleComponent]
	public class OculusManager : MonoBehaviour
	{
		[Token(Token = "0x40007E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool oculusEnabled;

		[Token(Token = "0x40007E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string appId;

		[Token(Token = "0x40007E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float desiredRefreshRate;

		[Token(Token = "0x170000A9")]
		public static bool Initialized
		{
			[Token(Token = "0x6000675")]
			[Address(RVA = "0xB9BF18", Offset = "0xB9BF18", VA = "0xB9BF18")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000676")]
		[Address(RVA = "0xB9BF20", Offset = "0xB9BF20", VA = "0xB9BF20")]
		public OculusManager()
		{
		}
	}
	[Token(Token = "0x200019F")]
	public class OculusUserData : UserData
	{
		[Token(Token = "0x170000AA")]
		public override string Type
		{
			[Token(Token = "0x6000677")]
			[Address(RVA = "0xB9BF84", Offset = "0xB9BF84", VA = "0xB9BF84", Slot = "6")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000AB")]
		public override string UserID
		{
			[Token(Token = "0x6000678")]
			[Address(RVA = "0xB9BFC8", Offset = "0xB9BFC8", VA = "0xB9BFC8", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000AC")]
		public override string Name
		{
			[Token(Token = "0x6000679")]
			[Address(RVA = "0xB9C00C", Offset = "0xB9C00C", VA = "0xB9C00C", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600067A")]
		[Address(RVA = "0xB9C050", Offset = "0xB9C050", VA = "0xB9C050")]
		public OculusUserData()
		{
		}
	}
	[Token(Token = "0x20001A0")]
	public class PicoAPI
	{
		[Token(Token = "0x40007E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x771F9C", Offset = "0x771F9C")]
		private static bool <Ready>k__BackingField;

		[Token(Token = "0x40007E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x771FAC", Offset = "0x771FAC")]
		private static string <UserID>k__BackingField;

		[Token(Token = "0x40007E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x771FBC", Offset = "0x771FBC")]
		private static string <Name>k__BackingField;

		[Token(Token = "0x40007E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x771FCC", Offset = "0x771FCC")]
		private static string <Error>k__BackingField;

		[Token(Token = "0x170000AD")]
		public static bool Ready
		{
			[Token(Token = "0x600067B")]
			[Address(RVA = "0xC44A38", Offset = "0xC44A38", VA = "0xC44A38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x776110", Offset = "0x776110")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600067C")]
			[Address(RVA = "0xC44A84", Offset = "0xC44A84", VA = "0xC44A84")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x776120", Offset = "0x776120")]
			private set
			{
			}
		}

		[Token(Token = "0x170000AE")]
		public static string UserID
		{
			[Token(Token = "0x600067D")]
			[Address(RVA = "0xC44AD8", Offset = "0xC44AD8", VA = "0xC44AD8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x776130", Offset = "0x776130")]
			get
			{
				return null;
			}
			[Token(Token = "0x600067E")]
			[Address(RVA = "0xC44B24", Offset = "0xC44B24", VA = "0xC44B24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x776140", Offset = "0x776140")]
			private set
			{
			}
		}

		[Token(Token = "0x170000AF")]
		public static string Name
		{
			[Token(Token = "0x600067F")]
			[Address(RVA = "0xC44B74", Offset = "0xC44B74", VA = "0xC44B74")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x776150", Offset = "0x776150")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000680")]
			[Address(RVA = "0xC44BC0", Offset = "0xC44BC0", VA = "0xC44BC0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x776160", Offset = "0x776160")]
			private set
			{
			}
		}

		[Token(Token = "0x170000B0")]
		public static string Error
		{
			[Token(Token = "0x6000681")]
			[Address(RVA = "0xC44C10", Offset = "0xC44C10", VA = "0xC44C10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x776170", Offset = "0x776170")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000682")]
			[Address(RVA = "0xC44C5C", Offset = "0xC44C5C", VA = "0xC44C5C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x776180", Offset = "0x776180")]
			set
			{
			}
		}

		[Token(Token = "0x6000683")]
		[Address(RVA = "0xC44CAC", Offset = "0xC44CAC", VA = "0xC44CAC")]
		public static void Login()
		{
		}

		[Token(Token = "0x6000684")]
		[Address(RVA = "0xC44D54", Offset = "0xC44D54", VA = "0xC44D54")]
		public static void GetUserAPI()
		{
		}

		[Token(Token = "0x6000685")]
		[Address(RVA = "0xC44DB0", Offset = "0xC44DB0", VA = "0xC44DB0")]
		public static void ParseUserInfo(string userInfo)
		{
		}

		[Token(Token = "0x6000686")]
		[Address(RVA = "0xC45058", Offset = "0xC45058", VA = "0xC45058")]
		public PicoAPI()
		{
		}
	}
	[Token(Token = "0x20001A1")]
	public class PicoAudio : MonoBehaviour
	{
		[Token(Token = "0x40007E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool replaceAudioSource;

		[Token(Token = "0x40007EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float unitySpatialBlend;

		[Token(Token = "0x6000687")]
		[Address(RVA = "0xC45060", Offset = "0xC45060", VA = "0xC45060")]
		private void Update()
		{
		}

		[Token(Token = "0x6000688")]
		[Address(RVA = "0xC45240", Offset = "0xC45240", VA = "0xC45240")]
		public PicoAudio()
		{
		}
	}
	[Token(Token = "0x20001A2")]
	[DisallowMultipleComponent]
	public class PicoManager : MonoBehaviour
	{
		[Token(Token = "0x40007EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool picoEnabled;

		[Token(Token = "0x40007EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string appId;

		[Token(Token = "0x40007ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected static bool s_EverInitialized;

		[Token(Token = "0x40007EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		protected static PicoManager s_instance;

		[Token(Token = "0x40007EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected bool m_bInitialized;

		[Token(Token = "0x170000B1")]
		protected static PicoManager Instance
		{
			[Token(Token = "0x6000689")]
			[Address(RVA = "0xC45250", Offset = "0xC45250", VA = "0xC45250")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B2")]
		public static bool Initialized
		{
			[Token(Token = "0x600068A")]
			[Address(RVA = "0xC45388", Offset = "0xC45388", VA = "0xC45388")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600068B")]
		[Address(RVA = "0xC453F0", Offset = "0xC453F0", VA = "0xC453F0", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x600068C")]
		[Address(RVA = "0xC456E4", Offset = "0xC456E4", VA = "0xC456E4", Slot = "5")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x600068D")]
		[Address(RVA = "0xC457BC", Offset = "0xC457BC", VA = "0xC457BC", Slot = "6")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x600068E")]
		[Address(RVA = "0xC45894", Offset = "0xC45894", VA = "0xC45894", Slot = "7")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x600068F")]
		[Address(RVA = "0xC45898", Offset = "0xC45898", VA = "0xC45898")]
		public PicoManager()
		{
		}
	}
	[Token(Token = "0x20001A3")]
	public class PicoUserData : UserData
	{
		[Token(Token = "0x40007F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected PicoManager picoManager;

		[Token(Token = "0x40007F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected string userid;

		[Token(Token = "0x40007F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected string username;

		[Token(Token = "0x40007F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected bool ready;

		[Token(Token = "0x40007F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		protected bool loggingIn;

		[Token(Token = "0x170000B3")]
		public override bool Ready
		{
			[Token(Token = "0x6000693")]
			[Address(RVA = "0xC45C94", Offset = "0xC45C94", VA = "0xC45C94", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000B4")]
		public override string Type
		{
			[Token(Token = "0x6000694")]
			[Address(RVA = "0xC45D0C", Offset = "0xC45D0C", VA = "0xC45D0C", Slot = "6")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B5")]
		public override string UserID
		{
			[Token(Token = "0x6000695")]
			[Address(RVA = "0xC45D50", Offset = "0xC45D50", VA = "0xC45D50", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B6")]
		public override string Name
		{
			[Token(Token = "0x6000696")]
			[Address(RVA = "0xC45DA0", Offset = "0xC45DA0", VA = "0xC45DA0", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000691")]
		[Address(RVA = "0xC458F8", Offset = "0xC458F8", VA = "0xC458F8", Slot = "4")]
		public override void Init()
		{
		}

		[Token(Token = "0x6000692")]
		[Address(RVA = "0xC459FC", Offset = "0xC459FC", VA = "0xC459FC")]
		private void Update()
		{
		}

		[Token(Token = "0x6000697")]
		[Address(RVA = "0xC45DA8", Offset = "0xC45DA8", VA = "0xC45DA8")]
		public PicoUserData()
		{
		}
	}
	[Token(Token = "0x20001A4")]
	public class XRControllerPlatform : MonoBehaviour
	{
		[Token(Token = "0x40007F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform SteamModelParent;

		[Token(Token = "0x40007F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform OculusModelParent;

		[Token(Token = "0x40007F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform PicoModelParent;

		[Token(Token = "0x6000698")]
		[Address(RVA = "0xAFF9E4", Offset = "0xAFF9E4", VA = "0xAFF9E4")]
		private void Start()
		{
		}

		[Token(Token = "0x6000699")]
		[Address(RVA = "0xAFFA98", Offset = "0xAFFA98", VA = "0xAFFA98")]
		public XRControllerPlatform()
		{
		}
	}
}
namespace Glimpse.XR
{
	[Token(Token = "0x20001A5")]
	public class FeetTracker : MonoBehaviour
	{
		[Token(Token = "0x40007F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform head;

		[Token(Token = "0x40007F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CharacterController character;

		[Token(Token = "0x600069A")]
		[Address(RVA = "0xC68554", Offset = "0xC68554", VA = "0xC68554")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x600069B")]
		[Address(RVA = "0xC686CC", Offset = "0xC686CC", VA = "0xC686CC")]
		public FeetTracker()
		{
		}
	}
	[Token(Token = "0x20001A6")]
	public class HeightOffset : MonoBehaviour
	{
		[Token(Token = "0x40007FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform PlayerRoot;

		[Token(Token = "0x40007FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public IntVariable offset;

		[Token(Token = "0x40007FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float resolution;

		[Token(Token = "0x600069C")]
		[Address(RVA = "0xBC4420", Offset = "0xBC4420", VA = "0xBC4420")]
		private void Start()
		{
		}

		[Token(Token = "0x600069D")]
		[Address(RVA = "0xBC464C", Offset = "0xBC464C", VA = "0xBC464C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600069E")]
		[Address(RVA = "0xBC4508", Offset = "0xBC4508", VA = "0xBC4508")]
		public void UpdateOffset()
		{
		}

		[Token(Token = "0x600069F")]
		[Address(RVA = "0xBC473C", Offset = "0xBC473C", VA = "0xBC473C")]
		public HeightOffset()
		{
		}
	}
	[Token(Token = "0x20001A7")]
	public class HipTracker : MonoBehaviour
	{
		[Token(Token = "0x40007FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float offset;

		[Token(Token = "0x40007FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform head;

		[Token(Token = "0x40007FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform referenceUp;

		[Token(Token = "0x60006A0")]
		[Address(RVA = "0xBC4CD4", Offset = "0xBC4CD4", VA = "0xBC4CD4")]
		private void Update()
		{
		}

		[Token(Token = "0x60006A1")]
		[Address(RVA = "0xBC4FB8", Offset = "0xBC4FB8", VA = "0xBC4FB8")]
		public HipTracker()
		{
		}
	}
	[Token(Token = "0x20001A8")]
	public class OnButton : MonoBehaviour
	{
		[Token(Token = "0x4000800")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool gripButton;

		[Token(Token = "0x4000801")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool triggerButton;

		[Token(Token = "0x4000802")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		public bool primaryButton;

		[Token(Token = "0x4000803")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
		public bool secondaryButton;

		[Token(Token = "0x4000804")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool menuButton;

		[Token(Token = "0x4000805")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InputFeatureUsage<bool> button;

		[Token(Token = "0x4000806")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UnityEvent OnPress;

		[Token(Token = "0x4000807")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public UnityEvent OnHold;

		[Token(Token = "0x4000808")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public UnityEvent OnRelease;

		[Token(Token = "0x4000809")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected bool wasDown;

		[Token(Token = "0x400080A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		protected XRController controller;

		[Token(Token = "0x60006A2")]
		[Address(RVA = "0xB9C3B0", Offset = "0xB9C3B0", VA = "0xB9C3B0")]
		private void Start()
		{
		}

		[Token(Token = "0x60006A3")]
		[Address(RVA = "0xB9C4AC", Offset = "0xB9C4AC", VA = "0xB9C4AC")]
		private void Update()
		{
		}

		[Token(Token = "0x60006A4")]
		[Address(RVA = "0xB9C510", Offset = "0xB9C510", VA = "0xB9C510")]
		protected bool AnyButtonDown()
		{
			return default(bool);
		}

		[Token(Token = "0x60006A5")]
		[Address(RVA = "0xB9C698", Offset = "0xB9C698", VA = "0xB9C698")]
		protected bool IsButtonDown(InputFeatureUsage<bool> button)
		{
			return default(bool);
		}

		[Token(Token = "0x60006A6")]
		[Address(RVA = "0xB9C700", Offset = "0xB9C700", VA = "0xB9C700")]
		public OnButton()
		{
		}
	}
}
namespace Glimpse.Utils
{
	[Token(Token = "0x20001A9")]
	public class AnimatorStateListener : MonoBehaviour
	{
		[Token(Token = "0x400080B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Animator animator;

		[Token(Token = "0x400080C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string StateName;

		[Token(Token = "0x400080D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UnityEvent OnEnter;

		[Token(Token = "0x400080E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public UnityEvent OnExit;

		[Token(Token = "0x400080F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected bool inState;

		[Token(Token = "0x60006A7")]
		[Address(RVA = "0xB3B51C", Offset = "0xB3B51C", VA = "0xB3B51C")]
		private void Start()
		{
		}

		[Token(Token = "0x60006A8")]
		[Address(RVA = "0xB3B5B4", Offset = "0xB3B5B4", VA = "0xB3B5B4")]
		private void Update()
		{
		}

		[Token(Token = "0x60006A9")]
		[Address(RVA = "0xB3B6E8", Offset = "0xB3B6E8", VA = "0xB3B6E8")]
		public AnimatorStateListener()
		{
		}
	}
	[Token(Token = "0x20001AA")]
	public class DebugLogger : MonoBehaviour
	{
		[Token(Token = "0x60006AA")]
		[Address(RVA = "0x11EC9A0", Offset = "0x11EC9A0", VA = "0x11EC9A0")]
		private void Start()
		{
		}

		[Token(Token = "0x60006AB")]
		[Address(RVA = "0x11ECA68", Offset = "0x11ECA68", VA = "0x11ECA68")]
		private void Awake()
		{
		}

		[Token(Token = "0x60006AC")]
		[Address(RVA = "0x11ECB30", Offset = "0x11ECB30", VA = "0x11ECB30")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60006AD")]
		[Address(RVA = "0x11ECBF8", Offset = "0x11ECBF8", VA = "0x11ECBF8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60006AE")]
		[Address(RVA = "0x11ECCC0", Offset = "0x11ECCC0", VA = "0x11ECCC0")]
		public DebugLogger()
		{
		}
	}
}
namespace Glimpse.UI
{
	[Token(Token = "0x20001AB")]
	public class SetText : MonoBehaviour
	{
		[Token(Token = "0x4000810")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TextMeshPro textObject;

		[Token(Token = "0x4000811")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string format;

		[Token(Token = "0x60006AF")]
		[Address(RVA = "0xB7B3E0", Offset = "0xB7B3E0", VA = "0xB7B3E0")]
		private void Start()
		{
		}

		[Token(Token = "0x60006B0")]
		[Address(RVA = "0xB7B478", Offset = "0xB7B478", VA = "0xB7B478")]
		public void set(int i)
		{
		}

		[Token(Token = "0x60006B1")]
		[Address(RVA = "0xB7B528", Offset = "0xB7B528", VA = "0xB7B528")]
		public SetText()
		{
		}
	}
	[Token(Token = "0x20001AC")]
	public class TextReplace : MonoBehaviour
	{
		[Token(Token = "0x4000812")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public IntVariable value;

		[Token(Token = "0x4000813")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public IntVariable outOfValue;

		[Token(Token = "0x4000814")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string format;

		[Token(Token = "0x4000815")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string invalidValue;

		[Token(Token = "0x4000816")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		protected TextMeshPro textObject;

		[Token(Token = "0x60006B2")]
		[Address(RVA = "0xAEFE6C", Offset = "0xAEFE6C", VA = "0xAEFE6C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60006B3")]
		[Address(RVA = "0xAEFF04", Offset = "0xAEFF04", VA = "0xAEFF04")]
		private void Update()
		{
		}

		[Token(Token = "0x60006B4")]
		[Address(RVA = "0xAEFF08", Offset = "0xAEFF08", VA = "0xAEFF08")]
		protected void UpdateState()
		{
		}

		[Token(Token = "0x60006B5")]
		[Address(RVA = "0xAF015C", Offset = "0xAF015C", VA = "0xAF015C")]
		public TextReplace()
		{
		}
	}
	[Token(Token = "0x20001AD")]
	public class TextReplaceFloat : MonoBehaviour
	{
		[Token(Token = "0x4000817")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public FloatVariable value;

		[Token(Token = "0x4000818")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FloatVariable outOfValue;

		[Token(Token = "0x4000819")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string format;

		[Token(Token = "0x400081A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string invalidValue;

		[Token(Token = "0x400081B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected TextMeshPro textObject;

		[Token(Token = "0x60006B6")]
		[Address(RVA = "0xAF01CC", Offset = "0xAF01CC", VA = "0xAF01CC")]
		private void Start()
		{
		}

		[Token(Token = "0x60006B7")]
		[Address(RVA = "0xAF0394", Offset = "0xAF0394", VA = "0xAF0394")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60006B8")]
		[Address(RVA = "0xAF0438", Offset = "0xAF0438", VA = "0xAF0438")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60006B9")]
		[Address(RVA = "0xAF0224", Offset = "0xAF0224", VA = "0xAF0224")]
		protected void UpdateState()
		{
		}

		[Token(Token = "0x60006BA")]
		[Address(RVA = "0xAF04E4", Offset = "0xAF04E4", VA = "0xAF04E4")]
		public TextReplaceFloat()
		{
		}
	}
	[Token(Token = "0x20001AE")]
	public class TextReplaceMap : MonoBehaviour
	{
		[Token(Token = "0x400081C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public IntVariable index;

		[Token(Token = "0x400081D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string invalidValue;

		[Token(Token = "0x400081E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<string> map;

		[Token(Token = "0x400081F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected TextMeshPro textObject;

		[Token(Token = "0x60006BB")]
		[Address(RVA = "0xAF0554", Offset = "0xAF0554", VA = "0xAF0554")]
		private void Start()
		{
		}

		[Token(Token = "0x60006BC")]
		[Address(RVA = "0xAF071C", Offset = "0xAF071C", VA = "0xAF071C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60006BD")]
		[Address(RVA = "0xAF07C0", Offset = "0xAF07C0", VA = "0xAF07C0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60006BE")]
		[Address(RVA = "0xAF05AC", Offset = "0xAF05AC", VA = "0xAF05AC")]
		protected void UpdateState()
		{
		}

		[Token(Token = "0x60006BF")]
		[Address(RVA = "0xAF086C", Offset = "0xAF086C", VA = "0xAF086C")]
		public TextReplaceMap()
		{
		}
	}
	[Token(Token = "0x20001AF")]
	public class TextReplaceString : MonoBehaviour
	{
		[Token(Token = "0x4000820")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public StringVariable value;

		[Token(Token = "0x4000821")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected TextMeshPro textObject;

		[Token(Token = "0x60006C0")]
		[Address(RVA = "0xAF08C0", Offset = "0xAF08C0", VA = "0xAF08C0")]
		private void Start()
		{
		}

		[Token(Token = "0x60006C1")]
		[Address(RVA = "0xAF0A10", Offset = "0xAF0A10", VA = "0xAF0A10")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60006C2")]
		[Address(RVA = "0xAF0AB4", Offset = "0xAF0AB4", VA = "0xAF0AB4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60006C3")]
		[Address(RVA = "0xAF095C", Offset = "0xAF095C", VA = "0xAF095C")]
		protected void UpdateState()
		{
		}

		[Token(Token = "0x60006C4")]
		[Address(RVA = "0xAF0B60", Offset = "0xAF0B60", VA = "0xAF0B60")]
		public TextReplaceString()
		{
		}
	}
	[Token(Token = "0x20001B0")]
	public class TextReplaceTime : MonoBehaviour
	{
		[Token(Token = "0x4000822")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public FloatVariable seconds;

		[Token(Token = "0x4000823")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected TextMeshPro textObject;

		[Token(Token = "0x60006C5")]
		[Address(RVA = "0xAF0B68", Offset = "0xAF0B68", VA = "0xAF0B68")]
		private void Start()
		{
		}

		[Token(Token = "0x60006C6")]
		[Address(RVA = "0xAF0D84", Offset = "0xAF0D84", VA = "0xAF0D84")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60006C7")]
		[Address(RVA = "0xAF0E28", Offset = "0xAF0E28", VA = "0xAF0E28")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60006C8")]
		[Address(RVA = "0xAF0BC0", Offset = "0xAF0BC0", VA = "0xAF0BC0")]
		protected void UpdateState()
		{
		}

		[Token(Token = "0x60006C9")]
		[Address(RVA = "0xAF0ED4", Offset = "0xAF0ED4", VA = "0xAF0ED4")]
		public TextReplaceTime()
		{
		}
	}
	[Token(Token = "0x20001B1")]
	[ExecuteAlways]
	[SelectionBase]
	public class UIButton : MonoBehaviour
	{
		[Token(Token = "0x4000824")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x77200C", Offset = "0x77200C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x77200C", Offset = "0x77200C")]
		[SerializeField]
		protected string defaultLabel;

		[Token(Token = "0x4000825")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x772068", Offset = "0x772068")]
		public UnityEvent OnClick;

		[Token(Token = "0x4000826")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x772078", Offset = "0x772078")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x772078", Offset = "0x772078")]
		protected TextMeshPro textMeshProObject;

		[Token(Token = "0x4000827")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		protected Animator buttonAnimator;

		[Token(Token = "0x4000828")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		protected string animatorClickTrigger;

		[Token(Token = "0x4000829")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		protected bool canToggle;

		[Token(Token = "0x400082A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		protected float clickDelay;

		[Token(Token = "0x400082B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		protected float enableDelay;

		[Token(Token = "0x400082C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		protected bool canClick;

		[Token(Token = "0x400082D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
		protected bool toggleState;

		[Token(Token = "0x400082E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected float delayTimer;

		[Token(Token = "0x400082F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		protected float enableTimer;

		[Token(Token = "0x4000830")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public bool translate;

		[Token(Token = "0x4000831")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		public bool staticFont;

		[Token(Token = "0x170000B7")]
		public string DefaultLabel
		{
			[Token(Token = "0x60006CA")]
			[Address(RVA = "0xAF5A34", Offset = "0xAF5A34", VA = "0xAF5A34")]
			get
			{
				return null;
			}
			[Token(Token = "0x60006CB")]
			[Address(RVA = "0xAF5A3C", Offset = "0xAF5A3C", VA = "0xAF5A3C")]
			set
			{
			}
		}

		[Token(Token = "0x170000B8")]
		public string LocalizedLabel
		{
			[Token(Token = "0x60006D4")]
			[Address(RVA = "0xAF5EFC", Offset = "0xAF5EFC", VA = "0xAF5EFC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60006CC")]
		[Address(RVA = "0xAF5BB8", Offset = "0xAF5BB8", VA = "0xAF5BB8")]
		private void Start()
		{
		}

		[Token(Token = "0x60006CD")]
		[Address(RVA = "0xAF5CB0", Offset = "0xAF5CB0", VA = "0xAF5CB0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60006CE")]
		[Address(RVA = "0xAF5CC0", Offset = "0xAF5CC0", VA = "0xAF5CC0")]
		private void Update()
		{
		}

		[Token(Token = "0x60006CF")]
		[Address(RVA = "0xAF5D40", Offset = "0xAF5D40", VA = "0xAF5D40")]
		public void ForceActivate()
		{
		}

		[Token(Token = "0x60006D0")]
		[Address(RVA = "0xAF5E08", Offset = "0xAF5E08", VA = "0xAF5E08", Slot = "4")]
		public virtual void Activate()
		{
		}

		[Token(Token = "0x60006D1")]
		[Address(RVA = "0xAF5E18", Offset = "0xAF5E18", VA = "0xAF5E18", Slot = "5")]
		public virtual void Toggle()
		{
		}

		[Token(Token = "0x60006D2")]
		[Address(RVA = "0xAF5E30", Offset = "0xAF5E30", VA = "0xAF5E30", Slot = "6")]
		public virtual void SetToggle(bool state)
		{
		}

		[Token(Token = "0x60006D3")]
		[Address(RVA = "0xAF5A44", Offset = "0xAF5A44", VA = "0xAF5A44")]
		protected void SetButtonLabel()
		{
		}

		[Token(Token = "0x60006D5")]
		[Address(RVA = "0xAF6000", Offset = "0xAF6000", VA = "0xAF6000")]
		public UIButton()
		{
		}
	}
	[Token(Token = "0x20001B2")]
	public class UIMenu : MonoBehaviour
	{
		[Token(Token = "0x4000832")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected string label;

		[Token(Token = "0x4000833")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected Animator animator;

		[Token(Token = "0x4000834")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		protected string enableTrigger;

		[Token(Token = "0x4000835")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		protected string disableTrigger;

		[Token(Token = "0x4000836")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public UnityEvent OnDisplay;

		[Token(Token = "0x4000837")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public UnityEvent OnHide;

		[Token(Token = "0x170000B9")]
		public string Label
		{
			[Token(Token = "0x60006D6")]
			[Address(RVA = "0xAF606C", Offset = "0xAF606C", VA = "0xAF606C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60006D7")]
			[Address(RVA = "0xAF6074", Offset = "0xAF6074", VA = "0xAF6074")]
			set
			{
			}
		}

		[Token(Token = "0x60006D8")]
		[Address(RVA = "0xAF607C", Offset = "0xAF607C", VA = "0xAF607C")]
		private void Start()
		{
		}

		[Token(Token = "0x60006D9")]
		[Address(RVA = "0xAF60D0", Offset = "0xAF60D0", VA = "0xAF60D0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60006DA")]
		[Address(RVA = "0xAF6174", Offset = "0xAF6174", VA = "0xAF6174")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60006DB")]
		[Address(RVA = "0xAF6218", Offset = "0xAF6218", VA = "0xAF6218")]
		public UIMenu()
		{
		}
	}
	[Token(Token = "0x20001B3")]
	[ExecuteAlways]
	public class UIMenuState : MonoBehaviour
	{
		[Token(Token = "0x4000838")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected string currentMenu;

		[Token(Token = "0x4000839")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected StringVariable syncWith;

		[Token(Token = "0x400083A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected List<UIMenu> menus;

		[Token(Token = "0x170000BA")]
		public string Menu
		{
			[Token(Token = "0x60006DC")]
			[Address(RVA = "0xAF62A4", Offset = "0xAF62A4", VA = "0xAF62A4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60006DD")]
			[Address(RVA = "0xAF62AC", Offset = "0xAF62AC", VA = "0xAF62AC")]
			set
			{
			}
		}

		[Token(Token = "0x60006DE")]
		[Address(RVA = "0xAF6370", Offset = "0xAF6370", VA = "0xAF6370")]
		private void Awake()
		{
		}

		[Token(Token = "0x60006DF")]
		[Address(RVA = "0xAF669C", Offset = "0xAF669C", VA = "0xAF669C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60006E0")]
		[Address(RVA = "0xAF66C0", Offset = "0xAF66C0", VA = "0xAF66C0")]
		private void Update()
		{
		}

		[Token(Token = "0x60006E1")]
		[Address(RVA = "0xAF66C4", Offset = "0xAF66C4", VA = "0xAF66C4")]
		private void Destory()
		{
		}

		[Token(Token = "0x60006E2")]
		[Address(RVA = "0xAF651C", Offset = "0xAF651C", VA = "0xAF651C")]
		protected void UpdateMenuList()
		{
		}

		[Token(Token = "0x60006E3")]
		[Address(RVA = "0xAF647C", Offset = "0xAF647C", VA = "0xAF647C")]
		protected void SyncMenu()
		{
		}

		[Token(Token = "0x60006E4")]
		[Address(RVA = "0xAF62B4", Offset = "0xAF62B4", VA = "0xAF62B4")]
		protected void UpdateMenu()
		{
		}

		[Token(Token = "0x60006E5")]
		[Address(RVA = "0xAF67B4", Offset = "0xAF67B4", VA = "0xAF67B4")]
		public UIMenuState()
		{
		}

		[Token(Token = "0x60006E6")]
		[Address(RVA = "0xAF6848", Offset = "0xAF6848", VA = "0xAF6848")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x776190", Offset = "0x776190")]
		private void <UpdateMenu>b__12_0(UIMenu m)
		{
		}
	}
	[Token(Token = "0x20001B4")]
	[ExecuteAlways]
	[SelectionBase]
	public class UIText : MonoBehaviour
	{
		[Token(Token = "0x400083B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x772174", Offset = "0x772174")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x772174", Offset = "0x772174")]
		[SerializeField]
		protected string defaultText;

		[Token(Token = "0x400083C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected bool asInt;

		[Token(Token = "0x400083D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		protected string textFormat;

		[Token(Token = "0x400083E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool translate;

		[Token(Token = "0x400083F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		public bool staticFont;

		[Token(Token = "0x4000840")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		public bool isName;

		[Token(Token = "0x4000841")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		protected LocalizationManager.SupportedLocale language;

		[Token(Token = "0x4000842")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x7721F0", Offset = "0x7721F0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7721F0", Offset = "0x7721F0")]
		protected TextMeshPro textMeshProObject;

		[Token(Token = "0x170000BB")]
		public string DefaultText
		{
			[Token(Token = "0x60006E7")]
			[Address(RVA = "0xAF6910", Offset = "0xAF6910", VA = "0xAF6910")]
			get
			{
				return null;
			}
			[Token(Token = "0x60006E8")]
			[Address(RVA = "0xAF6918", Offset = "0xAF6918", VA = "0xAF6918")]
			set
			{
			}
		}

		[Token(Token = "0x170000BC")]
		public string Text
		{
			[Token(Token = "0x60006E9")]
			[Address(RVA = "0xAF6960", Offset = "0xAF6960", VA = "0xAF6960")]
			get
			{
				return null;
			}
			[Token(Token = "0x60006EA")]
			[Address(RVA = "0xAF691C", Offset = "0xAF691C", VA = "0xAF691C")]
			set
			{
			}
		}

		[Token(Token = "0x170000BD")]
		public bool TreatAsInt
		{
			[Token(Token = "0x60006EB")]
			[Address(RVA = "0xAF6A10", Offset = "0xAF6A10", VA = "0xAF6A10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60006EC")]
			[Address(RVA = "0xAF6A18", Offset = "0xAF6A18", VA = "0xAF6A18")]
			set
			{
			}
		}

		[Token(Token = "0x170000BE")]
		public int Value
		{
			[Token(Token = "0x60006ED")]
			[Address(RVA = "0xAF6A24", Offset = "0xAF6A24", VA = "0xAF6A24")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60006EE")]
			[Address(RVA = "0xAF6A30", Offset = "0xAF6A30", VA = "0xAF6A30")]
			set
			{
			}
		}

		[Token(Token = "0x170000BF")]
		public string TextFormat
		{
			[Token(Token = "0x60006EF")]
			[Address(RVA = "0xAF6A68", Offset = "0xAF6A68", VA = "0xAF6A68")]
			get
			{
				return null;
			}
			[Token(Token = "0x60006F0")]
			[Address(RVA = "0xAF6A70", Offset = "0xAF6A70", VA = "0xAF6A70")]
			set
			{
			}
		}

		[Token(Token = "0x170000C0")]
		public string FormattedText
		{
			[Token(Token = "0x60006F1")]
			[Address(RVA = "0xAF6AB4", Offset = "0xAF6AB4", VA = "0xAF6AB4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C1")]
		public LocalizationManager.SupportedLocale Language
		{
			[Token(Token = "0x60006F2")]
			[Address(RVA = "0xAF709C", Offset = "0xAF709C", VA = "0xAF709C")]
			get
			{
				return default(LocalizationManager.SupportedLocale);
			}
			[Token(Token = "0x60006F3")]
			[Address(RVA = "0xAF70A4", Offset = "0xAF70A4", VA = "0xAF70A4")]
			set
			{
			}
		}

		[Token(Token = "0x170000C2")]
		public string LocalizedText
		{
			[Token(Token = "0x60006F4")]
			[Address(RVA = "0xAF6F98", Offset = "0xAF6F98", VA = "0xAF6F98")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C3")]
		public string LocalizedTextFormat
		{
			[Token(Token = "0x60006F5")]
			[Address(RVA = "0xAF6E94", Offset = "0xAF6E94", VA = "0xAF6E94")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60006F6")]
		[Address(RVA = "0xAF70BC", Offset = "0xAF70BC", VA = "0xAF70BC")]
		private void Start()
		{
		}

		[Token(Token = "0x60006F7")]
		[Address(RVA = "0xAF71C0", Offset = "0xAF71C0", VA = "0xAF71C0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60006F8")]
		[Address(RVA = "0xAF71C4", Offset = "0xAF71C4", VA = "0xAF71C4")]
		private void Update()
		{
		}

		[Token(Token = "0x60006F9")]
		[Address(RVA = "0xAF71C8", Offset = "0xAF71C8", VA = "0xAF71C8")]
		public void SetLanguage(string lang)
		{
		}

		[Token(Token = "0x60006FA")]
		[Address(RVA = "0xAF6968", Offset = "0xAF6968", VA = "0xAF6968")]
		protected void SetText()
		{
		}

		[Token(Token = "0x60006FB")]
		[Address(RVA = "0xAF7210", Offset = "0xAF7210", VA = "0xAF7210")]
		public UIText()
		{
		}
	}
	[Token(Token = "0x20001B5")]
	public class UITextFromInt : UIText
	{
		[Token(Token = "0x4000843")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public IntVariable value;

		[Token(Token = "0x60006FC")]
		[Address(RVA = "0xAF726C", Offset = "0xAF726C", VA = "0xAF726C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60006FD")]
		[Address(RVA = "0xAF7414", Offset = "0xAF7414", VA = "0xAF7414")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60006FE")]
		[Address(RVA = "0xAF7364", Offset = "0xAF7364", VA = "0xAF7364")]
		protected void UpdateValue()
		{
		}

		[Token(Token = "0x60006FF")]
		[Address(RVA = "0xAF7504", Offset = "0xAF7504", VA = "0xAF7504")]
		public UITextFromInt()
		{
		}
	}
	[Token(Token = "0x20001B6")]
	public class ApplicationVersion : MonoBehaviour
	{
		[Token(Token = "0x6000700")]
		[Address(RVA = "0xB4080C", Offset = "0xB4080C", VA = "0xB4080C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000701")]
		[Address(RVA = "0xB408CC", Offset = "0xB408CC", VA = "0xB408CC")]
		public ApplicationVersion()
		{
		}
	}
	[Token(Token = "0x20001B7")]
	public class ListEntryDisplay : MonoBehaviour
	{
		[Token(Token = "0x4000844")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float Height;

		[Token(Token = "0x4000845")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		protected bool hasPositioned;

		[Token(Token = "0x4000846")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int ord;

		[Token(Token = "0x6000702")]
		[Address(RVA = "0xBD3210", Offset = "0xBD3210", VA = "0xBD3210")]
		public void TravelTo(float goal, float maxJump)
		{
		}

		[Token(Token = "0x6000703")]
		[Address(RVA = "0xBD32F0", Offset = "0xBD32F0", VA = "0xBD32F0")]
		public ListEntryDisplay()
		{
		}
	}
	[Token(Token = "0x20001B8")]
	public class ManageListDisplay : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20001B9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76FF54", Offset = "0x76FF54")]
		private sealed class <>c
		{
			[Token(Token = "0x400084E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400084F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Comparison<ListEntryDisplay> <>9__11_0;

			[Token(Token = "0x600070D")]
			[Address(RVA = "0xB2D504", Offset = "0xB2D504", VA = "0xB2D504")]
			public <>c()
			{
			}

			[Token(Token = "0x600070E")]
			[Address(RVA = "0xB2D50C", Offset = "0xB2D50C", VA = "0xB2D50C")]
			internal int <get_OrderedEntries>b__11_0(ListEntryDisplay a, ListEntryDisplay b)
			{
				return default(int);
			}
		}

		[Token(Token = "0x4000847")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float speed;

		[Token(Token = "0x4000848")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float spacing;

		[Token(Token = "0x4000849")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int pageSize;

		[Token(Token = "0x400084A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject pageUpButton;

		[Token(Token = "0x400084B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject pageDownButton;

		[Token(Token = "0x400084C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected int page;

		[Token(Token = "0x400084D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		protected int pageCount;

		[Token(Token = "0x170000C4")]
		public int Page
		{
			[Token(Token = "0x6000704")]
			[Address(RVA = "0xE497D0", Offset = "0xE497D0", VA = "0xE497D0")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000705")]
			[Address(RVA = "0xE497D8", Offset = "0xE497D8", VA = "0xE497D8")]
			set
			{
			}
		}

		[Token(Token = "0x170000C5")]
		public List<ListEntryDisplay> OrderedEntries
		{
			[Token(Token = "0x6000706")]
			[Address(RVA = "0xE49804", Offset = "0xE49804", VA = "0xE49804")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000707")]
		[Address(RVA = "0xE499F0", Offset = "0xE499F0", VA = "0xE499F0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000708")]
		[Address(RVA = "0xE499F4", Offset = "0xE499F4", VA = "0xE499F4")]
		public void UpdateDisplay()
		{
		}

		[Token(Token = "0x6000709")]
		[Address(RVA = "0xE49CE0", Offset = "0xE49CE0", VA = "0xE49CE0")]
		public void PageUp()
		{
		}

		[Token(Token = "0x600070A")]
		[Address(RVA = "0xE49D0C", Offset = "0xE49D0C", VA = "0xE49D0C")]
		public void PageDown()
		{
		}

		[Token(Token = "0x600070B")]
		[Address(RVA = "0xE49D38", Offset = "0xE49D38", VA = "0xE49D38")]
		public ManageListDisplay()
		{
		}
	}
}
namespace RGBSchemes
{
	[Token(Token = "0x20001BA")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x76FF64", Offset = "0x76FF64")]
	public class CollisionSound : MonoBehaviour
	{
		[Token(Token = "0x4000850")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool RequireTags;

		[Token(Token = "0x4000851")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<string> CollisionTags;

		[Token(Token = "0x4000852")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private AudioSource mAudioSource;

		[Token(Token = "0x600070F")]
		[Address(RVA = "0x11E8680", Offset = "0x11E8680", VA = "0x11E8680")]
		private void Start()
		{
		}

		[Token(Token = "0x6000710")]
		[Address(RVA = "0x11E86D4", Offset = "0x11E86D4", VA = "0x11E86D4")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x6000711")]
		[Address(RVA = "0x11E8784", Offset = "0x11E8784", VA = "0x11E8784")]
		public CollisionSound()
		{
		}
	}
	[Token(Token = "0x20001BB")]
	public class AbsoluteHaptics : MonoBehaviour
	{
		[Token(Token = "0x4000853")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<XRNode> XRNodes;

		[Token(Token = "0x4000854")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HapticClip Haptic;

		[Token(Token = "0x4000855")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool PlayOnAwake;

		[Token(Token = "0x4000856")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public bool Loop;

		[Token(Token = "0x4000857")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AudioSource SyncAudioSource;

		[Token(Token = "0x4000858")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected int mSampleCopyIndex;

		[Token(Token = "0x4000859")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		protected float mStartTime;

		[Token(Token = "0x400085A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected float mLastTime;

		[Token(Token = "0x400085B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		protected bool mPlaying;

		[Token(Token = "0x6000712")]
		[Address(RVA = "0xB3A850", Offset = "0xB3A850", VA = "0xB3A850")]
		public void Play()
		{
		}

		[Token(Token = "0x6000713")]
		[Address(RVA = "0xB3A990", Offset = "0xB3A990", VA = "0xB3A990")]
		public void Pause()
		{
		}

		[Token(Token = "0x6000714")]
		[Address(RVA = "0xB3A8CC", Offset = "0xB3A8CC", VA = "0xB3A8CC")]
		public void Stop()
		{
		}

		[Token(Token = "0x6000715")]
		[Address(RVA = "0xB3A998", Offset = "0xB3A998", VA = "0xB3A998")]
		private void SendHapticData(HapticSamples samples)
		{
		}

		[Token(Token = "0x6000716")]
		[Address(RVA = "0xB3AAE8", Offset = "0xB3AAE8", VA = "0xB3AAE8")]
		protected void PlayHapticPiece(HapticSamples hapticSamples, int sampleLength)
		{
		}

		[Token(Token = "0x6000717")]
		[Address(RVA = "0xB3AD40", Offset = "0xB3AD40", VA = "0xB3AD40")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000718")]
		[Address(RVA = "0xB3AD88", Offset = "0xB3AD88", VA = "0xB3AD88")]
		protected void Update()
		{
		}

		[Token(Token = "0x6000719")]
		[Address(RVA = "0xB3A8E0", Offset = "0xB3A8E0", VA = "0xB3A8E0")]
		public AbsoluteHaptics()
		{
		}
	}
	[Token(Token = "0x20001BC")]
	public class ButtonClickHaptics : InputHapticsBase
	{
		[Token(Token = "0x20001BD")]
		public enum ButtonType
		{
			[Token(Token = "0x400085F")]
			PrimaryButton,
			[Token(Token = "0x4000860")]
			PrimaryTouch,
			[Token(Token = "0x4000861")]
			SecondaryButton,
			[Token(Token = "0x4000862")]
			SecondaryTouch,
			[Token(Token = "0x4000863")]
			GripButton,
			[Token(Token = "0x4000864")]
			TriggerButton,
			[Token(Token = "0x4000865")]
			MenuButton,
			[Token(Token = "0x4000866")]
			Primary2DAxisClick,
			[Token(Token = "0x4000867")]
			Primary2DAxisTouch
		}

		[Token(Token = "0x400085C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly InputFeatureUsage<bool>[] BUTTON_MAPPINGS;

		[Token(Token = "0x400085D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public ButtonType Button;

		[Token(Token = "0x600071A")]
		[Address(RVA = "0xB4CD98", Offset = "0xB4CD98", VA = "0xB4CD98")]
		private void Update()
		{
		}

		[Token(Token = "0x600071B")]
		[Address(RVA = "0xB4CE5C", Offset = "0xB4CE5C", VA = "0xB4CE5C")]
		public ButtonClickHaptics()
		{
		}
	}
	[Token(Token = "0x20001BE")]
	public class SingleAxisClickHaptics : InputHapticsBase
	{
		[Token(Token = "0x20001BF")]
		public enum AxisType
		{
			[Token(Token = "0x400086C")]
			Trigger,
			[Token(Token = "0x400086D")]
			Grip
		}

		[Token(Token = "0x4000868")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly InputFeatureUsage<float>[] TRIGGER_MAPPINGS;

		[Token(Token = "0x4000869")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public AxisType Axis;

		[Token(Token = "0x400086A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x77224C", Offset = "0x77224C")]
		public float Threshold;

		[Token(Token = "0x600071D")]
		[Address(RVA = "0xB7C558", Offset = "0xB7C558", VA = "0xB7C558")]
		private void Update()
		{
		}

		[Token(Token = "0x600071E")]
		[Address(RVA = "0xB7C628", Offset = "0xB7C628", VA = "0xB7C628")]
		public SingleAxisClickHaptics()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001C0")]
	public class HapticClip
	{
		[Token(Token = "0x20001C1")]
		public enum Type
		{
			[Token(Token = "0x4000876")]
			Waveform,
			[Token(Token = "0x4000877")]
			Audio
		}

		[Token(Token = "0x400086E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Type ClipType;

		[Token(Token = "0x400086F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public bool LoadOnSeparateThread;

		[Token(Token = "0x4000870")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioClip HapticAudioClip;

		[Token(Token = "0x4000871")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private WaveformHapticCurve WaveformHapticCurve;

		[Token(Token = "0x4000872")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private byte[] mHapticData;

		[Token(Token = "0x4000873")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool mHaveCachedSamples;

		[Token(Token = "0x4000874")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private HapticSamples mHapticSamples;

		[Token(Token = "0x170000C6")]
		public HapticSamples Samples
		{
			[Token(Token = "0x6000724")]
			[Address(RVA = "0xBC268C", Offset = "0xBC268C", VA = "0xBC268C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000720")]
		[Address(RVA = "0xBC2554", Offset = "0xBC2554", VA = "0xBC2554")]
		public void SetHapticSource(AudioClip clip)
		{
		}

		[Token(Token = "0x6000721")]
		[Address(RVA = "0xBC2568", Offset = "0xBC2568", VA = "0xBC2568")]
		public void SetHapticSource(WaveformHapticCurve curve)
		{
		}

		[Token(Token = "0x6000722")]
		[Address(RVA = "0xBC2578", Offset = "0xBC2578", VA = "0xBC2578")]
		public HapticClip()
		{
		}

		[Token(Token = "0x6000723")]
		[Address(RVA = "0xBC25E4", Offset = "0xBC25E4", VA = "0xBC25E4")]
		public HapticClip(float defaultWaveformTime = 1f, float defaultWaveformValue = 0.25f)
		{
		}

		[Token(Token = "0x6000725")]
		[Address(RVA = "0xBC26BC", Offset = "0xBC26BC", VA = "0xBC26BC")]
		public void GenerateClip()
		{
		}
	}
	[Token(Token = "0x20001C2")]
	public class HapticSamples
	{
		[Token(Token = "0x20001C3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76FFC4", Offset = "0x76FFC4")]
		private sealed class <>c__DisplayClass11_0
		{
			[Token(Token = "0x400087B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public HapticSamples <>4__this;

			[Token(Token = "0x400087C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int channel;

			[Token(Token = "0x400087D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public int channelCount;

			[Token(Token = "0x400087E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float[] audioData;

			[Token(Token = "0x400087F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float frequency;

			[Token(Token = "0x4000880")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public uint controllerSampleRate;

			[Token(Token = "0x600072E")]
			[Address(RVA = "0xB2BE7C", Offset = "0xB2BE7C", VA = "0xB2BE7C")]
			public <>c__DisplayClass11_0()
			{
			}

			[Token(Token = "0x600072F")]
			[Address(RVA = "0xB2BE84", Offset = "0xB2BE84", VA = "0xB2BE84")]
			internal void <.ctor>b__0()
			{
			}
		}

		[Token(Token = "0x4000878")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly Thread mThread;

		[Token(Token = "0x4000879")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private byte[] mSamples;

		[Token(Token = "0x400087A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int mLength;

		[Token(Token = "0x170000C7")]
		public int Length
		{
			[Token(Token = "0x6000726")]
			[Address(RVA = "0xBC2CF0", Offset = "0xBC2CF0", VA = "0xBC2CF0")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000727")]
			[Address(RVA = "0xBC2D2C", Offset = "0xBC2D2C", VA = "0xBC2D2C")]
			private set
			{
			}
		}

		[Token(Token = "0x170000C8")]
		public byte[] Samples
		{
			[Token(Token = "0x6000728")]
			[Address(RVA = "0xBC2D34", Offset = "0xBC2D34", VA = "0xBC2D34")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000729")]
			[Address(RVA = "0xBC2DA0", Offset = "0xBC2DA0", VA = "0xBC2DA0")]
			private set
			{
			}
		}

		[Token(Token = "0x600072A")]
		[Address(RVA = "0xBC2B60", Offset = "0xBC2B60", VA = "0xBC2B60")]
		public HapticSamples()
		{
		}

		[Token(Token = "0x600072B")]
		[Address(RVA = "0xBC2BC4", Offset = "0xBC2BC4", VA = "0xBC2BC4")]
		public HapticSamples(byte[] samples, int samplesCount)
		{
		}

		[Token(Token = "0x600072C")]
		[Address(RVA = "0xBC2954", Offset = "0xBC2954", VA = "0xBC2954")]
		public HapticSamples(AudioClip audioClip, bool loadSeparateThread = false, int channel = 0)
		{
		}

		[Token(Token = "0x600072D")]
		[Address(RVA = "0xBC2E98", Offset = "0xBC2E98", VA = "0xBC2E98")]
		private void LoadAudio(int channelCount, float[] audioData, float frequency, int channel, uint controllerSampleRate)
		{
		}
	}
	[Token(Token = "0x20001C4")]
	public abstract class HapticsAbstractClass : MonoBehaviour
	{
		[Token(Token = "0x4000881")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected static readonly System.Random RANDOM;

		[Token(Token = "0x4000882")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected int eventID;

		[Token(Token = "0x6000730")]
		[Address(RVA = "0xBC33A4", Offset = "0xBC33A4", VA = "0xBC33A4", Slot = "4")]
		protected virtual void DoRumble(int id, HapticSamples hapticSamples, bool mix = false)
		{
		}

		[Token(Token = "0x6000731")]
		[Address(RVA = "0xBC33AC", Offset = "0xBC33AC", VA = "0xBC33AC")]
		public void transmitRumble(int id, HapticSamples hapticSamples, GameObject sendingObject, bool mix = false)
		{
		}

		[Token(Token = "0x6000732")]
		[Address(RVA = "0xBC33D0", Offset = "0xBC33D0", VA = "0xBC33D0")]
		protected HapticsAbstractClass()
		{
		}
	}
	[Token(Token = "0x20001C5")]
	public class InputHapticsBase : MonoBehaviour
	{
		[Token(Token = "0x4000883")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public XRNode DeviceNode;

		[Token(Token = "0x4000884")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HapticClip ClickDownHaptic;

		[Token(Token = "0x4000885")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public HapticClip ClickUpHaptic;

		[Token(Token = "0x4000886")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected InputDevice mInputDevice;

		[Token(Token = "0x4000887")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected bool mPreviousState;

		[Token(Token = "0x6000734")]
		[Address(RVA = "0xBC568C", Offset = "0xBC568C", VA = "0xBC568C")]
		protected void Awake()
		{
		}

		[Token(Token = "0x6000735")]
		[Address(RVA = "0xBC56C0", Offset = "0xBC56C0", VA = "0xBC56C0")]
		protected void Start()
		{
		}

		[Token(Token = "0x6000736")]
		[Address(RVA = "0xBC57D4", Offset = "0xBC57D4", VA = "0xBC57D4")]
		protected void TriggerInputHaptic(bool trigger)
		{
		}

		[Token(Token = "0x6000737")]
		[Address(RVA = "0xBC58E0", Offset = "0xBC58E0", VA = "0xBC58E0")]
		public InputHapticsBase()
		{
		}
	}
	[Token(Token = "0x20001C6")]
	public class StandardHapticsBase : HapticsAbstractClass
	{
		[Serializable]
		[Token(Token = "0x20001C7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76FFD4", Offset = "0x76FFD4")]
		private sealed class <>c
		{
			[Token(Token = "0x4000890")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000891")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<HapticsAbstractClass> <>9__10_0;

			[Token(Token = "0x6000744")]
			[Address(RVA = "0xB31674", Offset = "0xB31674", VA = "0xB31674")]
			public <>c()
			{
			}

			[Token(Token = "0x6000745")]
			[Address(RVA = "0xB3167C", Offset = "0xB3167C", VA = "0xB3167C")]
			internal bool <DoRumble>b__10_0(HapticsAbstractClass x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000888")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HapticClip Haptic;

		[Token(Token = "0x4000889")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool Loop;

		[Token(Token = "0x400088A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AudioSource SyncAudioSource;

		[Token(Token = "0x400088B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected int mSampleCopyIndex;

		[Token(Token = "0x400088C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		protected float mStartTime;

		[Token(Token = "0x400088D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected float mLastTime;

		[Token(Token = "0x400088E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		protected bool mPlaying;

		[Token(Token = "0x400088F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected HashSet<HapticsAbstractClass> mHapticNodes;

		[Token(Token = "0x6000738")]
		[Address(RVA = "0xB80A2C", Offset = "0xB80A2C", VA = "0xB80A2C")]
		protected void Play()
		{
		}

		[Token(Token = "0x6000739")]
		[Address(RVA = "0xB80A98", Offset = "0xB80A98", VA = "0xB80A98")]
		protected void Stop()
		{
		}

		[Token(Token = "0x600073A")]
		[Address(RVA = "0xB80AA8", Offset = "0xB80AA8", VA = "0xB80AA8", Slot = "4")]
		protected override void DoRumble(int id, HapticSamples hapticSamples, bool mix = false)
		{
		}

		[Token(Token = "0x600073B")]
		[Address(RVA = "0xB80D64", Offset = "0xB80D64", VA = "0xB80D64")]
		protected void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x600073C")]
		[Address(RVA = "0xB80E50", Offset = "0xB80E50", VA = "0xB80E50")]
		protected void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x600073D")]
		[Address(RVA = "0xB80F3C", Offset = "0xB80F3C", VA = "0xB80F3C")]
		protected void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x600073E")]
		[Address(RVA = "0xB8106C", Offset = "0xB8106C", VA = "0xB8106C")]
		protected void OnCollisionExit(Collision collision)
		{
		}

		[Token(Token = "0x600073F")]
		[Address(RVA = "0xB8119C", Offset = "0xB8119C", VA = "0xB8119C")]
		protected void playHapticPiece(HapticSamples hapticSamples, int sampleLength)
		{
		}

		[Token(Token = "0x6000740")]
		[Address(RVA = "0xB814A4", Offset = "0xB814A4", VA = "0xB814A4")]
		protected void Awake()
		{
		}

		[Token(Token = "0x6000741")]
		[Address(RVA = "0xB814C0", Offset = "0xB814C0", VA = "0xB814C0")]
		protected void Update()
		{
		}

		[Token(Token = "0x6000742")]
		[Address(RVA = "0xB81798", Offset = "0xB81798", VA = "0xB81798")]
		public StandardHapticsBase()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001C8")]
	public class WaveformHapticCurve
	{
		[Token(Token = "0x4000892")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float Time;

		[Token(Token = "0x4000893")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AnimationCurve HapticCurve;

		[Token(Token = "0x170000C9")]
		public int FrameCount
		{
			[Token(Token = "0x6000747")]
			[Address(RVA = "0xAFCDCC", Offset = "0xAFCDCC", VA = "0xAFCDCC")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6000746")]
		[Address(RVA = "0xAFCD4C", Offset = "0xAFCD4C", VA = "0xAFCD4C")]
		public WaveformHapticCurve(float time, float value)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001C9")]
	public class CollisionHaptics : StandardHapticsBase
	{
		[Token(Token = "0x4000894")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool TransferImmediate;

		[Token(Token = "0x6000748")]
		[Address(RVA = "0x11E84DC", Offset = "0x11E84DC", VA = "0x11E84DC")]
		private new void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x6000749")]
		[Address(RVA = "0x11E8678", Offset = "0x11E8678", VA = "0x11E8678")]
		public CollisionHaptics()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001CA")]
	public class ContinuousHaptics : StandardHapticsBase
	{
		[Token(Token = "0x4000895")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool PlayOnAwake;

		[Token(Token = "0x600074A")]
		[Address(RVA = "0x11E95F0", Offset = "0x11E95F0", VA = "0x11E95F0")]
		public new void Play()
		{
		}

		[Token(Token = "0x600074B")]
		[Address(RVA = "0x11E95F8", Offset = "0x11E95F8", VA = "0x11E95F8")]
		public void Pause()
		{
		}

		[Token(Token = "0x600074C")]
		[Address(RVA = "0x11E9600", Offset = "0x11E9600", VA = "0x11E9600")]
		public new void Stop()
		{
		}

		[Token(Token = "0x600074D")]
		[Address(RVA = "0x11E9608", Offset = "0x11E9608", VA = "0x11E9608")]
		private new void Awake()
		{
		}

		[Token(Token = "0x600074E")]
		[Address(RVA = "0x11E96B0", Offset = "0x11E96B0", VA = "0x11E96B0")]
		public ContinuousHaptics()
		{
		}
	}
	[Token(Token = "0x20001CB")]
	public class XRNodeHaptics : HapticsAbstractClass
	{
		[Token(Token = "0x4000896")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public XRNode deviceNode;

		[Token(Token = "0x4000897")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool DisableHaptics;

		[Token(Token = "0x600074F")]
		[Address(RVA = "0xAFFAA0", Offset = "0xAFFAA0", VA = "0xAFFAA0", Slot = "4")]
		protected override void DoRumble(int id, HapticSamples hapticSamples, bool mix = false)
		{
		}

		[Token(Token = "0x6000750")]
		[Address(RVA = "0xAFFB4C", Offset = "0xAFFB4C", VA = "0xAFFB4C")]
		public void SetHapticsEnabled(bool enabled)
		{
		}

		[Token(Token = "0x6000751")]
		[Address(RVA = "0xAFFB5C", Offset = "0xAFFB5C", VA = "0xAFFB5C")]
		public XRNodeHaptics()
		{
		}
	}
	[Token(Token = "0x20001CC")]
	public static class HapticWaveformFileUtils
	{
	}
	[Token(Token = "0x20001CD")]
	public static class HapticsUtils
	{
		[Token(Token = "0x4000898")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<InputDevice> sInputDevices;

		[Token(Token = "0x4000899")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static InputDevice sLastDeviceUsed;

		[Token(Token = "0x170000CA")]
		private static HapticCapabilities Capabilities
		{
			[Token(Token = "0x6000752")]
			[Address(RVA = "0xBC3A48", Offset = "0xBC3A48", VA = "0xBC3A48")]
			get
			{
				return default(HapticCapabilities);
			}
		}

		[Token(Token = "0x170000CB")]
		public static uint SampleRateHz
		{
			[Token(Token = "0x6000753")]
			[Address(RVA = "0xBC2DA8", Offset = "0xBC2DA8", VA = "0xBC2DA8")]
			get
			{
				return default(uint);
			}
		}

		[Token(Token = "0x170000CC")]
		public static uint MaxBufferSize
		{
			[Token(Token = "0x6000754")]
			[Address(RVA = "0xBC3D40", Offset = "0xBC3D40", VA = "0xBC3D40")]
			get
			{
				return default(uint);
			}
		}

		[Token(Token = "0x170000CD")]
		public static float DisplayFrequency
		{
			[Token(Token = "0x6000755")]
			[Address(RVA = "0xBC3CE4", Offset = "0xBC3CE4", VA = "0xBC3CE4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000756")]
		[Address(RVA = "0xBC3E40", Offset = "0xBC3E40", VA = "0xBC3E40")]
		public static void SendHapticData(XRNode node, HapticSamples hapticSamples, bool mix)
		{
		}

		[Token(Token = "0x6000757")]
		[Address(RVA = "0xBC4288", Offset = "0xBC4288", VA = "0xBC4288")]
		public static void StopAllHaptics(XRNode node)
		{
		}
	}
}
namespace UnityStandardAssets.CrossPlatformInput
{
	[Token(Token = "0x20001CE")]
	public class AxisTouchButton : MonoBehaviour, IPointerDownHandler, IEventSystemHandler, IPointerUpHandler
	{
		[Token(Token = "0x400089A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string axisName;

		[Token(Token = "0x400089B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float axisValue;

		[Token(Token = "0x400089C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float responseSpeed;

		[Token(Token = "0x400089D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float returnToCentreSpeed;

		[Token(Token = "0x400089E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private AxisTouchButton m_PairedWith;

		[Token(Token = "0x400089F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private CrossPlatformInputManager.VirtualAxis m_Axis;

		[Token(Token = "0x6000759")]
		[Address(RVA = "0xB471CC", Offset = "0xB471CC", VA = "0xB471CC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600075A")]
		[Address(RVA = "0xB472CC", Offset = "0xB472CC", VA = "0xB472CC")]
		private void FindPairedButton()
		{
		}

		[Token(Token = "0x600075B")]
		[Address(RVA = "0xB4746C", Offset = "0xB4746C", VA = "0xB4746C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600075C")]
		[Address(RVA = "0xB47488", Offset = "0xB47488", VA = "0xB47488", Slot = "4")]
		public void OnPointerDown(PointerEventData data)
		{
		}

		[Token(Token = "0x600075D")]
		[Address(RVA = "0xB47548", Offset = "0xB47548", VA = "0xB47548", Slot = "5")]
		public void OnPointerUp(PointerEventData data)
		{
		}

		[Token(Token = "0x600075E")]
		[Address(RVA = "0xB4759C", Offset = "0xB4759C", VA = "0xB4759C")]
		public AxisTouchButton()
		{
		}
	}
	[Token(Token = "0x20001CF")]
	public class ButtonHandler : MonoBehaviour
	{
		[Token(Token = "0x40008A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string Name;

		[Token(Token = "0x600075F")]
		[Address(RVA = "0x11D6B48", Offset = "0x11D6B48", VA = "0x11D6B48")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000760")]
		[Address(RVA = "0x11D6B4C", Offset = "0x11D6B4C", VA = "0x11D6B4C")]
		public void SetDownState()
		{
		}

		[Token(Token = "0x6000761")]
		[Address(RVA = "0x11D6C2C", Offset = "0x11D6C2C", VA = "0x11D6C2C")]
		public void SetUpState()
		{
		}

		[Token(Token = "0x6000762")]
		[Address(RVA = "0x11D6D0C", Offset = "0x11D6D0C", VA = "0x11D6D0C")]
		public void SetAxisPositiveState()
		{
		}

		[Token(Token = "0x6000763")]
		[Address(RVA = "0x11D6DEC", Offset = "0x11D6DEC", VA = "0x11D6DEC")]
		public void SetAxisNeutralState()
		{
		}

		[Token(Token = "0x6000764")]
		[Address(RVA = "0x11D6ECC", Offset = "0x11D6ECC", VA = "0x11D6ECC")]
		public void SetAxisNegativeState()
		{
		}

		[Token(Token = "0x6000765")]
		[Address(RVA = "0x11D6FAC", Offset = "0x11D6FAC", VA = "0x11D6FAC")]
		public void Update()
		{
		}

		[Token(Token = "0x6000766")]
		[Address(RVA = "0x11D6FB0", Offset = "0x11D6FB0", VA = "0x11D6FB0")]
		public ButtonHandler()
		{
		}
	}
	[Token(Token = "0x20001D0")]
	public static class CrossPlatformInputManager
	{
		[Token(Token = "0x20001D1")]
		public enum ActiveInputMethod
		{
			[Token(Token = "0x40008A5")]
			Hardware,
			[Token(Token = "0x40008A6")]
			Touch
		}

		[Token(Token = "0x20001D2")]
		public class VirtualAxis
		{
			[Token(Token = "0x40008A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x772284", Offset = "0x772284")]
			private string <name>k__BackingField;

			[Token(Token = "0x40008A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private float m_Value;

			[Token(Token = "0x40008A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x772294", Offset = "0x772294")]
			private bool <matchWithInputManager>k__BackingField;

			[Token(Token = "0x170000CF")]
			public string name
			{
				[Token(Token = "0x6000780")]
				[Address(RVA = "0xB28A78", Offset = "0xB28A78", VA = "0xB28A78")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7761A0", Offset = "0x7761A0")]
				get
				{
					return null;
				}
				[Token(Token = "0x6000781")]
				[Address(RVA = "0xB28A80", Offset = "0xB28A80", VA = "0xB28A80")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7761B0", Offset = "0x7761B0")]
				private set
				{
				}
			}

			[Token(Token = "0x170000D0")]
			public bool matchWithInputManager
			{
				[Token(Token = "0x6000782")]
				[Address(RVA = "0xB28A88", Offset = "0xB28A88", VA = "0xB28A88")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7761C0", Offset = "0x7761C0")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x6000783")]
				[Address(RVA = "0xB28A90", Offset = "0xB28A90", VA = "0xB28A90")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7761D0", Offset = "0x7761D0")]
				private set
				{
				}
			}

			[Token(Token = "0x170000D1")]
			public float GetValue
			{
				[Token(Token = "0x6000788")]
				[Address(RVA = "0xB28B80", Offset = "0xB28B80", VA = "0xB28B80")]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x170000D2")]
			public float GetValueRaw
			{
				[Token(Token = "0x6000789")]
				[Address(RVA = "0xB28B88", Offset = "0xB28B88", VA = "0xB28B88")]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x6000784")]
			[Address(RVA = "0xB28A9C", Offset = "0xB28A9C", VA = "0xB28A9C")]
			public VirtualAxis(string name)
			{
			}

			[Token(Token = "0x6000785")]
			[Address(RVA = "0xB28AD0", Offset = "0xB28AD0", VA = "0xB28AD0")]
			public VirtualAxis(string name, bool matchToInputSettings)
			{
			}

			[Token(Token = "0x6000786")]
			[Address(RVA = "0xB28B10", Offset = "0xB28B10", VA = "0xB28B10")]
			public void Remove()
			{
			}

			[Token(Token = "0x6000787")]
			[Address(RVA = "0xB28B78", Offset = "0xB28B78", VA = "0xB28B78")]
			public void Update(float value)
			{
			}
		}

		[Token(Token = "0x20001D3")]
		public class VirtualButton
		{
			[Token(Token = "0x40008AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7722A4", Offset = "0x7722A4")]
			private string <name>k__BackingField;

			[Token(Token = "0x40008AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7722B4", Offset = "0x7722B4")]
			private bool <matchWithInputManager>k__BackingField;

			[Token(Token = "0x40008AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			private int m_LastPressedFrame;

			[Token(Token = "0x40008AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int m_ReleasedFrame;

			[Token(Token = "0x40008AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			private bool m_Pressed;

			[Token(Token = "0x170000D3")]
			public string name
			{
				[Token(Token = "0x600078A")]
				[Address(RVA = "0xB28B90", Offset = "0xB28B90", VA = "0xB28B90")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7761E0", Offset = "0x7761E0")]
				get
				{
					return null;
				}
				[Token(Token = "0x600078B")]
				[Address(RVA = "0xB28B98", Offset = "0xB28B98", VA = "0xB28B98")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7761F0", Offset = "0x7761F0")]
				private set
				{
				}
			}

			[Token(Token = "0x170000D4")]
			public bool matchWithInputManager
			{
				[Token(Token = "0x600078C")]
				[Address(RVA = "0xB28BA0", Offset = "0xB28BA0", VA = "0xB28BA0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x776200", Offset = "0x776200")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x600078D")]
				[Address(RVA = "0xB28BA8", Offset = "0xB28BA8", VA = "0xB28BA8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x776210", Offset = "0x776210")]
				private set
				{
				}
			}

			[Token(Token = "0x170000D5")]
			public bool GetButton
			{
				[Token(Token = "0x6000793")]
				[Address(RVA = "0xB28D08", Offset = "0xB28D08", VA = "0xB28D08")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x170000D6")]
			public bool GetButtonDown
			{
				[Token(Token = "0x6000794")]
				[Address(RVA = "0xB28D10", Offset = "0xB28D10", VA = "0xB28D10")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x170000D7")]
			public bool GetButtonUp
			{
				[Token(Token = "0x6000795")]
				[Address(RVA = "0xB28D40", Offset = "0xB28D40", VA = "0xB28D40")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x600078E")]
			[Address(RVA = "0xB28BB4", Offset = "0xB28BB4", VA = "0xB28BB4")]
			public VirtualButton(string name)
			{
			}

			[Token(Token = "0x600078F")]
			[Address(RVA = "0xB28BF0", Offset = "0xB28BF0", VA = "0xB28BF0")]
			public VirtualButton(string name, bool matchToInputSettings)
			{
			}

			[Token(Token = "0x6000790")]
			[Address(RVA = "0xB28C38", Offset = "0xB28C38", VA = "0xB28C38")]
			public void Pressed()
			{
			}

			[Token(Token = "0x6000791")]
			[Address(RVA = "0xB28C74", Offset = "0xB28C74", VA = "0xB28C74")]
			public void Released()
			{
			}

			[Token(Token = "0x6000792")]
			[Address(RVA = "0xB28CA0", Offset = "0xB28CA0", VA = "0xB28CA0")]
			public void Remove()
			{
			}
		}

		[Token(Token = "0x40008A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static VirtualInput activeInput;

		[Token(Token = "0x40008A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static VirtualInput s_TouchInput;

		[Token(Token = "0x40008A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static VirtualInput s_HardwareInput;

		[Token(Token = "0x170000CE")]
		public static Vector3 mousePosition
		{
			[Token(Token = "0x600077C")]
			[Address(RVA = "0x11EA190", Offset = "0x11EA190", VA = "0x11EA190")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6000767")]
		[Address(RVA = "0x11E9944", Offset = "0x11E9944", VA = "0x11E9944")]
		static CrossPlatformInputManager()
		{
		}

		[Token(Token = "0x6000768")]
		[Address(RVA = "0x11E99F8", Offset = "0x11E99F8", VA = "0x11E99F8")]
		public static void SwitchActiveInputMethod(ActiveInputMethod activeInputMethod)
		{
		}

		[Token(Token = "0x6000769")]
		[Address(RVA = "0x11E9AA4", Offset = "0x11E9AA4", VA = "0x11E9AA4")]
		public static bool AxisExists(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x600076A")]
		[Address(RVA = "0x11E9B1C", Offset = "0x11E9B1C", VA = "0x11E9B1C")]
		public static bool ButtonExists(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x600076B")]
		[Address(RVA = "0x11E9B94", Offset = "0x11E9B94", VA = "0x11E9B94")]
		public static void RegisterVirtualAxis(VirtualAxis axis)
		{
		}

		[Token(Token = "0x600076C")]
		[Address(RVA = "0x11E9C0C", Offset = "0x11E9C0C", VA = "0x11E9C0C")]
		public static void RegisterVirtualButton(VirtualButton button)
		{
		}

		[Token(Token = "0x600076D")]
		[Address(RVA = "0x11E9C84", Offset = "0x11E9C84", VA = "0x11E9C84")]
		public static void UnRegisterVirtualAxis(string name)
		{
		}

		[Token(Token = "0x600076E")]
		[Address(RVA = "0x11E9D48", Offset = "0x11E9D48", VA = "0x11E9D48")]
		public static void UnRegisterVirtualButton(string name)
		{
		}

		[Token(Token = "0x600076F")]
		[Address(RVA = "0x11E9DC0", Offset = "0x11E9DC0", VA = "0x11E9DC0")]
		public static VirtualAxis VirtualAxisReference(string name)
		{
			return null;
		}

		[Token(Token = "0x6000770")]
		[Address(RVA = "0x11E9E38", Offset = "0x11E9E38", VA = "0x11E9E38")]
		public static float GetAxis(string name)
		{
			return default(float);
		}

		[Token(Token = "0x6000771")]
		[Address(RVA = "0x11E9F28", Offset = "0x11E9F28", VA = "0x11E9F28")]
		public static float GetAxisRaw(string name)
		{
			return default(float);
		}

		[Token(Token = "0x6000772")]
		[Address(RVA = "0x11E9E9C", Offset = "0x11E9E9C", VA = "0x11E9E9C")]
		private static float GetAxis(string name, bool raw)
		{
			return default(float);
		}

		[Token(Token = "0x6000773")]
		[Address(RVA = "0x11E9F8C", Offset = "0x11E9F8C", VA = "0x11E9F8C")]
		public static bool GetButton(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x6000774")]
		[Address(RVA = "0x11EA008", Offset = "0x11EA008", VA = "0x11EA008")]
		public static bool GetButtonDown(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x6000775")]
		[Address(RVA = "0x11EA084", Offset = "0x11EA084", VA = "0x11EA084")]
		public static bool GetButtonUp(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x6000776")]
		[Address(RVA = "0x11D6BB0", Offset = "0x11D6BB0", VA = "0x11D6BB0")]
		public static void SetButtonDown(string name)
		{
		}

		[Token(Token = "0x6000777")]
		[Address(RVA = "0x11D6C90", Offset = "0x11D6C90", VA = "0x11D6C90")]
		public static void SetButtonUp(string name)
		{
		}

		[Token(Token = "0x6000778")]
		[Address(RVA = "0x11D6D70", Offset = "0x11D6D70", VA = "0x11D6D70")]
		public static void SetAxisPositive(string name)
		{
		}

		[Token(Token = "0x6000779")]
		[Address(RVA = "0x11D6F30", Offset = "0x11D6F30", VA = "0x11D6F30")]
		public static void SetAxisNegative(string name)
		{
		}

		[Token(Token = "0x600077A")]
		[Address(RVA = "0x11D6E50", Offset = "0x11D6E50", VA = "0x11D6E50")]
		public static void SetAxisZero(string name)
		{
		}

		[Token(Token = "0x600077B")]
		[Address(RVA = "0x11EA100", Offset = "0x11EA100", VA = "0x11EA100")]
		public static void SetAxis(string name, float value)
		{
		}

		[Token(Token = "0x600077D")]
		[Address(RVA = "0x11EA208", Offset = "0x11EA208", VA = "0x11EA208")]
		public static void SetVirtualMousePositionX(float f)
		{
		}

		[Token(Token = "0x600077E")]
		[Address(RVA = "0x11EA288", Offset = "0x11EA288", VA = "0x11EA288")]
		public static void SetVirtualMousePositionY(float f)
		{
		}

		[Token(Token = "0x600077F")]
		[Address(RVA = "0x11EA308", Offset = "0x11EA308", VA = "0x11EA308")]
		public static void SetVirtualMousePositionZ(float f)
		{
		}
	}
	[Token(Token = "0x20001D4")]
	public class InputAxisScrollbar : MonoBehaviour
	{
		[Token(Token = "0x40008AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string axis;

		[Token(Token = "0x6000796")]
		[Address(RVA = "0xBC5600", Offset = "0xBC5600", VA = "0xBC5600")]
		private void Update()
		{
		}

		[Token(Token = "0x6000797")]
		[Address(RVA = "0xBC5604", Offset = "0xBC5604", VA = "0xBC5604")]
		public void HandleInput(float value)
		{
		}

		[Token(Token = "0x6000798")]
		[Address(RVA = "0xBC5684", Offset = "0xBC5684", VA = "0xBC5684")]
		public InputAxisScrollbar()
		{
		}
	}
	[Token(Token = "0x20001D5")]
	public class Joystick : MonoBehaviour, IPointerDownHandler, IEventSystemHandler, IPointerUpHandler, IDragHandler
	{
		[Token(Token = "0x20001D6")]
		public enum AxisOption
		{
			[Token(Token = "0x40008BA")]
			Both,
			[Token(Token = "0x40008BB")]
			OnlyHorizontal,
			[Token(Token = "0x40008BC")]
			OnlyVertical
		}

		[Token(Token = "0x40008B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int MovementRange;

		[Token(Token = "0x40008B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public AxisOption axesToUse;

		[Token(Token = "0x40008B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string horizontalAxisName;

		[Token(Token = "0x40008B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string verticalAxisName;

		[Token(Token = "0x40008B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 m_StartPos;

		[Token(Token = "0x40008B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private bool m_UseX;

		[Token(Token = "0x40008B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
		private bool m_UseY;

		[Token(Token = "0x40008B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private CrossPlatformInputManager.VirtualAxis m_HorizontalVirtualAxis;

		[Token(Token = "0x40008B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private CrossPlatformInputManager.VirtualAxis m_VerticalVirtualAxis;

		[Token(Token = "0x6000799")]
		[Address(RVA = "0xBC9534", Offset = "0xBC9534", VA = "0xBC9534")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600079A")]
		[Address(RVA = "0xBC9674", Offset = "0xBC9674", VA = "0xBC9674")]
		private void Start()
		{
		}

		[Token(Token = "0x600079B")]
		[Address(RVA = "0xBC96B0", Offset = "0xBC96B0", VA = "0xBC96B0")]
		private void UpdateVirtualAxes(Vector3 value)
		{
		}

		[Token(Token = "0x600079C")]
		[Address(RVA = "0xBC9538", Offset = "0xBC9538", VA = "0xBC9538")]
		private void CreateVirtualAxes()
		{
		}

		[Token(Token = "0x600079D")]
		[Address(RVA = "0xBC9714", Offset = "0xBC9714", VA = "0xBC9714", Slot = "6")]
		public void OnDrag(PointerEventData data)
		{
		}

		[Token(Token = "0x600079E")]
		[Address(RVA = "0xBC9838", Offset = "0xBC9838", VA = "0xBC9838", Slot = "5")]
		public void OnPointerUp(PointerEventData data)
		{
		}

		[Token(Token = "0x600079F")]
		[Address(RVA = "0xBC9880", Offset = "0xBC9880", VA = "0xBC9880", Slot = "4")]
		public void OnPointerDown(PointerEventData data)
		{
		}

		[Token(Token = "0x60007A0")]
		[Address(RVA = "0xBC9884", Offset = "0xBC9884", VA = "0xBC9884")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60007A1")]
		[Address(RVA = "0xBC98DC", Offset = "0xBC98DC", VA = "0xBC98DC")]
		public Joystick()
		{
		}
	}
	[Token(Token = "0x20001D7")]
	[ExecuteInEditMode]
	public class MobileControlRig : MonoBehaviour
	{
		[Token(Token = "0x60007A2")]
		[Address(RVA = "0xB8FC14", Offset = "0xB8FC14", VA = "0xB8FC14")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60007A3")]
		[Address(RVA = "0xB8FC24", Offset = "0xB8FC24", VA = "0xB8FC24")]
		private void Start()
		{
		}

		[Token(Token = "0x60007A4")]
		[Address(RVA = "0xB8FC1C", Offset = "0xB8FC1C", VA = "0xB8FC1C")]
		private void CheckEnableControlRig()
		{
		}

		[Token(Token = "0x60007A5")]
		[Address(RVA = "0xB8FD38", Offset = "0xB8FD38", VA = "0xB8FD38")]
		private void EnableControlRig(bool enabled)
		{
		}

		[Token(Token = "0x60007A6")]
		[Address(RVA = "0xB90080", Offset = "0xB90080", VA = "0xB90080")]
		public MobileControlRig()
		{
		}
	}
	[Token(Token = "0x20001D8")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x76FFF4", Offset = "0x76FFF4")]
	public class TouchPad : MonoBehaviour, IPointerDownHandler, IEventSystemHandler, IPointerUpHandler
	{
		[Token(Token = "0x20001D9")]
		public enum AxisOption
		{
			[Token(Token = "0x40008D0")]
			Both,
			[Token(Token = "0x40008D1")]
			OnlyHorizontal,
			[Token(Token = "0x40008D2")]
			OnlyVertical
		}

		[Token(Token = "0x20001DA")]
		public enum ControlStyle
		{
			[Token(Token = "0x40008D4")]
			Absolute,
			[Token(Token = "0x40008D5")]
			Relative,
			[Token(Token = "0x40008D6")]
			Swipe
		}

		[Token(Token = "0x40008BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AxisOption axesToUse;

		[Token(Token = "0x40008BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public ControlStyle controlStyle;

		[Token(Token = "0x40008BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string horizontalAxisName;

		[Token(Token = "0x40008C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string verticalAxisName;

		[Token(Token = "0x40008C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float Xsensitivity;

		[Token(Token = "0x40008C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float Ysensitivity;

		[Token(Token = "0x40008C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 m_StartPos;

		[Token(Token = "0x40008C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Vector2 m_PreviousDelta;

		[Token(Token = "0x40008C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Vector3 m_JoytickOutput;

		[Token(Token = "0x40008C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool m_UseX;

		[Token(Token = "0x40008C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		private bool m_UseY;

		[Token(Token = "0x40008C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private CrossPlatformInputManager.VirtualAxis m_HorizontalVirtualAxis;

		[Token(Token = "0x40008C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private CrossPlatformInputManager.VirtualAxis m_VerticalVirtualAxis;

		[Token(Token = "0x40008CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool m_Dragging;

		[Token(Token = "0x40008CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private int m_Id;

		[Token(Token = "0x40008CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector2 m_PreviousTouchPos;

		[Token(Token = "0x40008CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Vector3 m_Center;

		[Token(Token = "0x40008CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Image m_Image;

		[Token(Token = "0x60007A7")]
		[Address(RVA = "0xAF1D84", Offset = "0xAF1D84", VA = "0xAF1D84")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60007A8")]
		[Address(RVA = "0xAF1EC4", Offset = "0xAF1EC4", VA = "0xAF1EC4")]
		private void Start()
		{
		}

		[Token(Token = "0x60007A9")]
		[Address(RVA = "0xAF1D88", Offset = "0xAF1D88", VA = "0xAF1D88")]
		private void CreateVirtualAxes()
		{
		}

		[Token(Token = "0x60007AA")]
		[Address(RVA = "0xAF1F3C", Offset = "0xAF1F3C", VA = "0xAF1F3C")]
		private void UpdateVirtualAxes(Vector3 value)
		{
		}

		[Token(Token = "0x60007AB")]
		[Address(RVA = "0xAF1FA8", Offset = "0xAF1FA8", VA = "0xAF1FA8", Slot = "4")]
		public void OnPointerDown(PointerEventData data)
		{
		}

		[Token(Token = "0x60007AC")]
		[Address(RVA = "0xAF1FE0", Offset = "0xAF1FE0", VA = "0xAF1FE0")]
		private void Update()
		{
		}

		[Token(Token = "0x60007AD")]
		[Address(RVA = "0xAF2128", Offset = "0xAF2128", VA = "0xAF2128", Slot = "5")]
		public void OnPointerUp(PointerEventData data)
		{
		}

		[Token(Token = "0x60007AE")]
		[Address(RVA = "0xAF215C", Offset = "0xAF215C", VA = "0xAF215C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60007AF")]
		[Address(RVA = "0xAF225C", Offset = "0xAF225C", VA = "0xAF225C")]
		public TouchPad()
		{
		}
	}
	[Token(Token = "0x20001DB")]
	public abstract class VirtualInput
	{
		[Token(Token = "0x40008D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7722C4", Offset = "0x7722C4")]
		private Vector3 <virtualMousePosition>k__BackingField;

		[Token(Token = "0x40008D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected Dictionary<string, CrossPlatformInputManager.VirtualAxis> m_VirtualAxes;

		[Token(Token = "0x40008D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected Dictionary<string, CrossPlatformInputManager.VirtualButton> m_VirtualButtons;

		[Token(Token = "0x40008DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected List<string> m_AlwaysUseVirtual;

		[Token(Token = "0x170000D8")]
		public Vector3 virtualMousePosition
		{
			[Token(Token = "0x60007B0")]
			[Address(RVA = "0xAF8BF8", Offset = "0xAF8BF8", VA = "0xAF8BF8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x776220", Offset = "0x776220")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60007B1")]
			[Address(RVA = "0xAF8C04", Offset = "0xAF8C04", VA = "0xAF8C04")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x776230", Offset = "0x776230")]
			private set
			{
			}
		}

		[Token(Token = "0x60007B2")]
		[Address(RVA = "0xAF8C10", Offset = "0xAF8C10", VA = "0xAF8C10")]
		public bool AxisExists(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x60007B3")]
		[Address(RVA = "0xAF8C74", Offset = "0xAF8C74", VA = "0xAF8C74")]
		public bool ButtonExists(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x60007B4")]
		[Address(RVA = "0xAF8CD8", Offset = "0xAF8CD8", VA = "0xAF8CD8")]
		public void RegisterVirtualAxis(CrossPlatformInputManager.VirtualAxis axis)
		{
		}

		[Token(Token = "0x60007B5")]
		[Address(RVA = "0xAF8E38", Offset = "0xAF8E38", VA = "0xAF8E38")]
		public void RegisterVirtualButton(CrossPlatformInputManager.VirtualButton button)
		{
		}

		[Token(Token = "0x60007B6")]
		[Address(RVA = "0xAF8F98", Offset = "0xAF8F98", VA = "0xAF8F98")]
		public void UnRegisterVirtualAxis(string name)
		{
		}

		[Token(Token = "0x60007B7")]
		[Address(RVA = "0xAF9038", Offset = "0xAF9038", VA = "0xAF9038")]
		public void UnRegisterVirtualButton(string name)
		{
		}

		[Token(Token = "0x60007B8")]
		[Address(RVA = "0xAF90D8", Offset = "0xAF90D8", VA = "0xAF90D8")]
		public CrossPlatformInputManager.VirtualAxis VirtualAxisReference(string name)
		{
			return null;
		}

		[Token(Token = "0x60007B9")]
		[Address(RVA = "0xAF9174", Offset = "0xAF9174", VA = "0xAF9174")]
		public void SetVirtualMousePositionX(float f)
		{
		}

		[Token(Token = "0x60007BA")]
		[Address(RVA = "0xAF917C", Offset = "0xAF917C", VA = "0xAF917C")]
		public void SetVirtualMousePositionY(float f)
		{
		}

		[Token(Token = "0x60007BB")]
		[Address(RVA = "0xAF9184", Offset = "0xAF9184", VA = "0xAF9184")]
		public void SetVirtualMousePositionZ(float f)
		{
		}

		[Token(Token = "0x60007BC")]
		public abstract float GetAxis(string name, bool raw);

		[Token(Token = "0x60007BD")]
		public abstract bool GetButton(string name);

		[Token(Token = "0x60007BE")]
		public abstract bool GetButtonDown(string name);

		[Token(Token = "0x60007BF")]
		public abstract bool GetButtonUp(string name);

		[Token(Token = "0x60007C0")]
		public abstract void SetButtonDown(string name);

		[Token(Token = "0x60007C1")]
		public abstract void SetButtonUp(string name);

		[Token(Token = "0x60007C2")]
		public abstract void SetAxisPositive(string name);

		[Token(Token = "0x60007C3")]
		public abstract void SetAxisNegative(string name);

		[Token(Token = "0x60007C4")]
		public abstract void SetAxisZero(string name);

		[Token(Token = "0x60007C5")]
		public abstract void SetAxis(string name, float value);

		[Token(Token = "0x60007C6")]
		public abstract Vector3 MousePosition();

		[Token(Token = "0x60007C7")]
		[Address(RVA = "0xAF918C", Offset = "0xAF918C", VA = "0xAF918C")]
		protected VirtualInput()
		{
		}
	}
}
namespace UnityStandardAssets.CrossPlatformInput.PlatformSpecific
{
	[Token(Token = "0x20001DC")]
	public class MobileInput : VirtualInput
	{
		[Token(Token = "0x60007C8")]
		[Address(RVA = "0xB90088", Offset = "0xB90088", VA = "0xB90088")]
		private void AddButton(string name)
		{
		}

		[Token(Token = "0x60007C9")]
		[Address(RVA = "0xB90118", Offset = "0xB90118", VA = "0xB90118")]
		private void AddAxes(string name)
		{
		}

		[Token(Token = "0x60007CA")]
		[Address(RVA = "0xB901A8", Offset = "0xB901A8", VA = "0xB901A8", Slot = "4")]
		public override float GetAxis(string name, bool raw)
		{
			return default(float);
		}

		[Token(Token = "0x60007CB")]
		[Address(RVA = "0xB9024C", Offset = "0xB9024C", VA = "0xB9024C", Slot = "8")]
		public override void SetButtonDown(string name)
		{
		}

		[Token(Token = "0x60007CC")]
		[Address(RVA = "0xB902F0", Offset = "0xB902F0", VA = "0xB902F0", Slot = "9")]
		public override void SetButtonUp(string name)
		{
		}

		[Token(Token = "0x60007CD")]
		[Address(RVA = "0xB90394", Offset = "0xB90394", VA = "0xB90394", Slot = "10")]
		public override void SetAxisPositive(string name)
		{
		}

		[Token(Token = "0x60007CE")]
		[Address(RVA = "0xB9043C", Offset = "0xB9043C", VA = "0xB9043C", Slot = "11")]
		public override void SetAxisNegative(string name)
		{
		}

		[Token(Token = "0x60007CF")]
		[Address(RVA = "0xB904E4", Offset = "0xB904E4", VA = "0xB904E4", Slot = "12")]
		public override void SetAxisZero(string name)
		{
		}

		[Token(Token = "0x60007D0")]
		[Address(RVA = "0xB90588", Offset = "0xB90588", VA = "0xB90588", Slot = "13")]
		public override void SetAxis(string name, float value)
		{
		}

		[Token(Token = "0x60007D1")]
		[Address(RVA = "0xB90638", Offset = "0xB90638", VA = "0xB90638", Slot = "6")]
		public override bool GetButtonDown(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x60007D2")]
		[Address(RVA = "0xB906DC", Offset = "0xB906DC", VA = "0xB906DC", Slot = "7")]
		public override bool GetButtonUp(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x60007D3")]
		[Address(RVA = "0xB90780", Offset = "0xB90780", VA = "0xB90780", Slot = "5")]
		public override bool GetButton(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x60007D4")]
		[Address(RVA = "0xB90824", Offset = "0xB90824", VA = "0xB90824", Slot = "14")]
		public override Vector3 MousePosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60007D5")]
		[Address(RVA = "0xB90830", Offset = "0xB90830", VA = "0xB90830")]
		public MobileInput()
		{
		}
	}
	[Token(Token = "0x20001DD")]
	public class StandaloneInput : VirtualInput
	{
		[Token(Token = "0x60007D6")]
		[Address(RVA = "0xB807EC", Offset = "0xB807EC", VA = "0xB807EC", Slot = "4")]
		public override float GetAxis(string name, bool raw)
		{
			return default(float);
		}

		[Token(Token = "0x60007D7")]
		[Address(RVA = "0xB80800", Offset = "0xB80800", VA = "0xB80800", Slot = "5")]
		public override bool GetButton(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x60007D8")]
		[Address(RVA = "0xB8080C", Offset = "0xB8080C", VA = "0xB8080C", Slot = "6")]
		public override bool GetButtonDown(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x60007D9")]
		[Address(RVA = "0xB80818", Offset = "0xB80818", VA = "0xB80818", Slot = "7")]
		public override bool GetButtonUp(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x60007DA")]
		[Address(RVA = "0xB80824", Offset = "0xB80824", VA = "0xB80824", Slot = "8")]
		public override void SetButtonDown(string name)
		{
		}

		[Token(Token = "0x60007DB")]
		[Address(RVA = "0xB80878", Offset = "0xB80878", VA = "0xB80878", Slot = "9")]
		public override void SetButtonUp(string name)
		{
		}

		[Token(Token = "0x60007DC")]
		[Address(RVA = "0xB808CC", Offset = "0xB808CC", VA = "0xB808CC", Slot = "10")]
		public override void SetAxisPositive(string name)
		{
		}

		[Token(Token = "0x60007DD")]
		[Address(RVA = "0xB80920", Offset = "0xB80920", VA = "0xB80920", Slot = "11")]
		public override void SetAxisNegative(string name)
		{
		}

		[Token(Token = "0x60007DE")]
		[Address(RVA = "0xB80974", Offset = "0xB80974", VA = "0xB80974", Slot = "12")]
		public override void SetAxisZero(string name)
		{
		}

		[Token(Token = "0x60007DF")]
		[Address(RVA = "0xB809C8", Offset = "0xB809C8", VA = "0xB809C8", Slot = "13")]
		public override void SetAxis(string name, float value)
		{
		}

		[Token(Token = "0x60007E0")]
		[Address(RVA = "0xB80A1C", Offset = "0xB80A1C", VA = "0xB80A1C", Slot = "14")]
		public override Vector3 MousePosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60007E1")]
		[Address(RVA = "0xB80A24", Offset = "0xB80A24", VA = "0xB80A24")]
		public StandaloneInput()
		{
		}
	}
}
namespace ExitGames.Demos.DemoPunVoice
{
	[Token(Token = "0x20001DE")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x770054", Offset = "0x770054")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x770054", Offset = "0x770054")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x770054", Offset = "0x770054")]
	public abstract class BaseController : MonoBehaviour
	{
		[Token(Token = "0x40008DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Camera ControllerCamera;

		[Token(Token = "0x40008DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected Rigidbody rigidBody;

		[Token(Token = "0x40008DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected Animator animator;

		[Token(Token = "0x40008DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected Transform camTrans;

		[Token(Token = "0x40008DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float h;

		[Token(Token = "0x40008E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float v;

		[Token(Token = "0x40008E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		protected float speed;

		[Token(Token = "0x40008E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private float cameraDistance;

		[Token(Token = "0x60007E2")]
		[Address(RVA = "0xB47A04", Offset = "0xB47A04", VA = "0xB47A04", Slot = "4")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x60007E3")]
		[Address(RVA = "0xB47A78", Offset = "0xB47A78", VA = "0xB47A78", Slot = "5")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x60007E4")]
		[Address(RVA = "0xB47AEC", Offset = "0xB47AEC", VA = "0xB47AEC", Slot = "6")]
		protected virtual void ChangePOV_CameraChanged(Camera camera)
		{
		}

		[Token(Token = "0x60007E5")]
		[Address(RVA = "0xB47BA0", Offset = "0xB47BA0", VA = "0xB47BA0", Slot = "7")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x60007E6")]
		[Address(RVA = "0xB47C34", Offset = "0xB47C34", VA = "0xB47C34", Slot = "8")]
		protected virtual void Init()
		{
		}

		[Token(Token = "0x60007E7")]
		[Address(RVA = "0xB47CAC", Offset = "0xB47CAC", VA = "0xB47CAC", Slot = "9")]
		protected virtual void SetCamera()
		{
		}

		[Token(Token = "0x60007E8")]
		[Address(RVA = "0xB47D48", Offset = "0xB47D48", VA = "0xB47D48", Slot = "10")]
		protected virtual void UpdateAnimator(float h, float v)
		{
		}

		[Token(Token = "0x60007E9")]
		[Address(RVA = "0xB47DC4", Offset = "0xB47DC4", VA = "0xB47DC4", Slot = "11")]
		protected virtual void FixedUpdate()
		{
		}

		[Token(Token = "0x60007EA")]
		[Address(RVA = "0xB47EF4", Offset = "0xB47EF4", VA = "0xB47EF4", Slot = "12")]
		protected virtual void ShowCamera(Camera camera)
		{
		}

		[Token(Token = "0x60007EB")]
		[Address(RVA = "0xB47F90", Offset = "0xB47F90", VA = "0xB47F90", Slot = "13")]
		protected virtual void HideCamera(Camera camera)
		{
		}

		[Token(Token = "0x60007EC")]
		protected abstract void Move(float h, float v);

		[Token(Token = "0x60007ED")]
		[Address(RVA = "0xB4802C", Offset = "0xB4802C", VA = "0xB4802C")]
		protected BaseController()
		{
		}
	}
	[Token(Token = "0x20001DF")]
	[DisallowMultipleComponent]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x77011C", Offset = "0x77011C")]
	public class BetterToggle : MonoBehaviour
	{
		[Token(Token = "0x20001E0")]
		public delegate void OnToggle(Toggle toggle);

		[Token(Token = "0x40008E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Toggle toggle;

		[Token(Token = "0x14000010")]
		public static event OnToggle ToggleValueChanged
		{
			[Token(Token = "0x60007EE")]
			[Address(RVA = "0xB49198", Offset = "0xB49198", VA = "0xB49198")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x776240", Offset = "0x776240")]
			add
			{
			}
			[Token(Token = "0x60007EF")]
			[Address(RVA = "0xB49254", Offset = "0xB49254", VA = "0xB49254")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x776250", Offset = "0x776250")]
			remove
			{
			}
		}

		[Token(Token = "0x60007F0")]
		[Address(RVA = "0xB49310", Offset = "0xB49310", VA = "0xB49310")]
		private void Start()
		{
		}

		[Token(Token = "0x60007F1")]
		[Address(RVA = "0xB493F4", Offset = "0xB493F4", VA = "0xB493F4")]
		public void OnToggleValueChanged()
		{
		}

		[Token(Token = "0x60007F2")]
		[Address(RVA = "0xB4945C", Offset = "0xB4945C", VA = "0xB4945C")]
		public BetterToggle()
		{
		}

		[Token(Token = "0x60007F3")]
		[Address(RVA = "0xB49464", Offset = "0xB49464", VA = "0xB49464")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x776260", Offset = "0x776260")]
		private void <Start>b__5_0(bool <p0>)
		{
		}
	}
	[Token(Token = "0x20001E1")]
	public class ChangePOV : MonoBehaviour, IMatchmakingCallbacks
	{
		[Token(Token = "0x20001E2")]
		public delegate void OnCameraChanged(Camera newCamera);

		[Token(Token = "0x40008E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private FirstPersonController firstPersonController;

		[Token(Token = "0x40008E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ThirdPersonController thirdPersonController;

		[Token(Token = "0x40008E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private OrthographicController orthographicController;

		[Token(Token = "0x40008E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 initialCameraPosition;

		[Token(Token = "0x40008E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Quaternion initialCameraRotation;

		[Token(Token = "0x40008EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Camera defaultCamera;

		[Token(Token = "0x40008EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject ButtonsHolder;

		[Token(Token = "0x40008EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Button FirstPersonCamActivator;

		[Token(Token = "0x40008ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Button ThirdPersonCamActivator;

		[Token(Token = "0x40008EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Button OrthographicCamActivator;

		[Token(Token = "0x14000011")]
		public static event OnCameraChanged CameraChanged
		{
			[Token(Token = "0x60007F8")]
			[Address(RVA = "0x11E1450", Offset = "0x11E1450", VA = "0x11E1450")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x776270", Offset = "0x776270")]
			add
			{
			}
			[Token(Token = "0x60007F9")]
			[Address(RVA = "0x11E150C", Offset = "0x11E150C", VA = "0x11E150C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x776280", Offset = "0x776280")]
			remove
			{
			}
		}

		[Token(Token = "0x60007FA")]
		[Address(RVA = "0x11E15C8", Offset = "0x11E15C8", VA = "0x11E15C8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60007FB")]
		[Address(RVA = "0x11E1734", Offset = "0x11E1734", VA = "0x11E1734")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60007FC")]
		[Address(RVA = "0x11E18A0", Offset = "0x11E18A0", VA = "0x11E18A0")]
		private void Start()
		{
		}

		[Token(Token = "0x60007FD")]
		[Address(RVA = "0x11E1AD4", Offset = "0x11E1AD4", VA = "0x11E1AD4")]
		private void OnCharacterInstantiated(GameObject character)
		{
		}

		[Token(Token = "0x60007FE")]
		[Address(RVA = "0x11E1BB8", Offset = "0x11E1BB8", VA = "0x11E1BB8")]
		private void FirstPersonMode()
		{
		}

		[Token(Token = "0x60007FF")]
		[Address(RVA = "0x11E1D58", Offset = "0x11E1D58", VA = "0x11E1D58")]
		private void ThirdPersonMode()
		{
		}

		[Token(Token = "0x6000800")]
		[Address(RVA = "0x11E1D60", Offset = "0x11E1D60", VA = "0x11E1D60")]
		private void OrthographicMode()
		{
		}

		[Token(Token = "0x6000801")]
		[Address(RVA = "0x11E1BC0", Offset = "0x11E1BC0", VA = "0x11E1BC0")]
		private void ToggleMode(BaseController controller)
		{
		}

		[Token(Token = "0x6000802")]
		[Address(RVA = "0x11E1D68", Offset = "0x11E1D68", VA = "0x11E1D68")]
		private void BroadcastChange(Camera camera)
		{
		}

		[Token(Token = "0x6000803")]
		[Address(RVA = "0x11E1E10", Offset = "0x11E1E10", VA = "0x11E1E10", Slot = "4")]
		public void OnFriendListUpdate(List<FriendInfo> friendList)
		{
		}

		[Token(Token = "0x6000804")]
		[Address(RVA = "0x11E1E14", Offset = "0x11E1E14", VA = "0x11E1E14", Slot = "5")]
		public void OnCreatedRoom()
		{
		}

		[Token(Token = "0x6000805")]
		[Address(RVA = "0x11E1E18", Offset = "0x11E1E18", VA = "0x11E1E18", Slot = "6")]
		public void OnCreateRoomFailed(short returnCode, string message)
		{
		}

		[Token(Token = "0x6000806")]
		[Address(RVA = "0x11E1E1C", Offset = "0x11E1E1C", VA = "0x11E1E1C", Slot = "7")]
		public void OnJoinedRoom()
		{
		}

		[Token(Token = "0x6000807")]
		[Address(RVA = "0x11E1E20", Offset = "0x11E1E20", VA = "0x11E1E20", Slot = "8")]
		public void OnJoinRoomFailed(short returnCode, string message)
		{
		}

		[Token(Token = "0x6000808")]
		[Address(RVA = "0x11E1E24", Offset = "0x11E1E24", VA = "0x11E1E24", Slot = "9")]
		public void OnJoinRandomFailed(short returnCode, string message)
		{
		}

		[Token(Token = "0x6000809")]
		[Address(RVA = "0x11E1E28", Offset = "0x11E1E28", VA = "0x11E1E28", Slot = "10")]
		public void OnLeftRoom()
		{
		}

		[Token(Token = "0x600080A")]
		[Address(RVA = "0x11E1F40", Offset = "0x11E1F40", VA = "0x11E1F40")]
		public ChangePOV()
		{
		}
	}
	[Token(Token = "0x20001E3")]
	public class CharacterInstantiation : MonoBehaviourPunCallbacks, IOnEventCallback
	{
		[Token(Token = "0x20001E4")]
		public enum SpawnSequence
		{
			[Token(Token = "0x40008FF")]
			Connection,
			[Token(Token = "0x4000900")]
			Random,
			[Token(Token = "0x4000901")]
			RoundRobin
		}

		[Token(Token = "0x20001E5")]
		public delegate void OnCharacterInstantiated(GameObject character);

		[Token(Token = "0x40008F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform SpawnPosition;

		[Token(Token = "0x40008F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float PositionOffset;

		[Token(Token = "0x40008F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject[] PrefabsToInstantiate;

		[Token(Token = "0x40008F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public List<Transform> SpawnPoints;

		[Token(Token = "0x40008F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool AutoSpawn;

		[Token(Token = "0x40008F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		public bool UseRandomOffset;

		[Token(Token = "0x40008F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public SpawnSequence Sequence;

		[Token(Token = "0x40008F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private byte manualInstantiationEventCode;

		[Token(Token = "0x40008F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		protected int lastUsedSpawnPointIndex;

		[Token(Token = "0x40008FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private bool manualInstantiation;

		[Token(Token = "0x40008FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		[SerializeField]
		private bool differentPrefabs;

		[Token(Token = "0x40008FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private string localPrefabSuffix;

		[Token(Token = "0x40008FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private string remotePrefabSuffix;

		[Token(Token = "0x14000012")]
		public static event OnCharacterInstantiated CharacterInstantiated
		{
			[Token(Token = "0x600080F")]
			[Address(RVA = "0x11E1678", Offset = "0x11E1678", VA = "0x11E1678")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x776290", Offset = "0x776290")]
			add
			{
			}
			[Token(Token = "0x6000810")]
			[Address(RVA = "0x11E17E4", Offset = "0x11E17E4", VA = "0x11E17E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7762A0", Offset = "0x7762A0")]
			remove
			{
			}
		}

		[Token(Token = "0x6000811")]
		[Address(RVA = "0x11E38B4", Offset = "0x11E38B4", VA = "0x11E38B4", Slot = "41")]
		public override void OnJoinedRoom()
		{
		}

		[Token(Token = "0x6000812")]
		[Address(RVA = "0x11E3AE8", Offset = "0x11E3AE8", VA = "0x11E3AE8")]
		private void ManualInstantiation(int index, Vector3 position, Quaternion rotation)
		{
		}

		[Token(Token = "0x6000813")]
		[Address(RVA = "0x11E4044", Offset = "0x11E4044", VA = "0x11E4044", Slot = "54")]
		public void OnEvent(EventData photonEvent)
		{
		}

		[Token(Token = "0x6000814")]
		[Address(RVA = "0x11E43A4", Offset = "0x11E43A4", VA = "0x11E43A4", Slot = "55")]
		protected virtual void GetSpawnPoint(out Vector3 spawnPos, out Quaternion spawnRot)
		{
		}

		[Token(Token = "0x6000815")]
		[Address(RVA = "0x11E4544", Offset = "0x11E4544", VA = "0x11E4544", Slot = "56")]
		protected virtual Transform GetSpawnPoint()
		{
			return null;
		}

		[Token(Token = "0x6000816")]
		[Address(RVA = "0x11E46B8", Offset = "0x11E46B8", VA = "0x11E46B8")]
		public CharacterInstantiation()
		{
		}
	}
	[Token(Token = "0x20001E6")]
	public class FirstPersonController : BaseController
	{
		[Token(Token = "0x4000902")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private MouseLookHelper mouseLook;

		[Token(Token = "0x4000903")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float oldYRotation;

		[Token(Token = "0x4000904")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Quaternion velRotation;

		[Token(Token = "0x170000D9")]
		public Vector3 Velocity
		{
			[Token(Token = "0x600081B")]
			[Address(RVA = "0xC69290", Offset = "0xC69290", VA = "0xC69290")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x600081C")]
		[Address(RVA = "0xC692AC", Offset = "0xC692AC", VA = "0xC692AC", Slot = "9")]
		protected override void SetCamera()
		{
		}

		[Token(Token = "0x600081D")]
		[Address(RVA = "0xC692F8", Offset = "0xC692F8", VA = "0xC692F8", Slot = "14")]
		protected override void Move(float h, float v)
		{
		}

		[Token(Token = "0x600081E")]
		[Address(RVA = "0xC6938C", Offset = "0xC6938C", VA = "0xC6938C")]
		private void Update()
		{
		}

		[Token(Token = "0x600081F")]
		[Address(RVA = "0xC69390", Offset = "0xC69390", VA = "0xC69390")]
		private void RotateView()
		{
		}

		[Token(Token = "0x6000820")]
		[Address(RVA = "0xC694A4", Offset = "0xC694A4", VA = "0xC694A4")]
		public FirstPersonController()
		{
		}
	}
	[Token(Token = "0x20001E7")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x77018C", Offset = "0x77018C")]
	public class Highlighter : MonoBehaviour
	{
		[Token(Token = "0x4000905")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Canvas canvas;

		[Token(Token = "0x4000906")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private PhotonVoiceView photonVoiceView;

		[Token(Token = "0x4000907")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Image recorderSprite;

		[Token(Token = "0x4000908")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Image speakerSprite;

		[Token(Token = "0x4000909")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Text bufferLagText;

		[Token(Token = "0x400090A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool showSpeakerLag;

		[Token(Token = "0x6000821")]
		[Address(RVA = "0xBC4750", Offset = "0xBC4750", VA = "0xBC4750")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000822")]
		[Address(RVA = "0xBC481C", Offset = "0xBC481C", VA = "0xBC481C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000823")]
		[Address(RVA = "0xBC48E8", Offset = "0xBC48E8", VA = "0xBC48E8")]
		private void VoiceDemoUI_DebugToggled(bool debugMode)
		{
		}

		[Token(Token = "0x6000824")]
		[Address(RVA = "0xBC48F4", Offset = "0xBC48F4", VA = "0xBC48F4")]
		private void ChangePOV_CameraChanged(Camera camera)
		{
		}

		[Token(Token = "0x6000825")]
		[Address(RVA = "0xBC4910", Offset = "0xBC4910", VA = "0xBC4910")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000826")]
		[Address(RVA = "0xBC4A3C", Offset = "0xBC4A3C", VA = "0xBC4A3C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000827")]
		[Address(RVA = "0xBC4BA0", Offset = "0xBC4BA0", VA = "0xBC4BA0")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000828")]
		[Address(RVA = "0xBC4CCC", Offset = "0xBC4CCC", VA = "0xBC4CCC")]
		public Highlighter()
		{
		}
	}
	[Token(Token = "0x20001E8")]
	public class OrthographicController : ThirdPersonController
	{
		[Token(Token = "0x400090B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float smoothing;

		[Token(Token = "0x400090C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector3 offset;

		[Token(Token = "0x6000829")]
		[Address(RVA = "0xB9C788", Offset = "0xB9C788", VA = "0xB9C788", Slot = "8")]
		protected override void Init()
		{
		}

		[Token(Token = "0x600082A")]
		[Address(RVA = "0xB9C7B8", Offset = "0xB9C7B8", VA = "0xB9C7B8", Slot = "9")]
		protected override void SetCamera()
		{
		}

		[Token(Token = "0x600082B")]
		[Address(RVA = "0xB9C838", Offset = "0xB9C838", VA = "0xB9C838", Slot = "14")]
		protected override void Move(float h, float v)
		{
		}

		[Token(Token = "0x600082C")]
		[Address(RVA = "0xB9C860", Offset = "0xB9C860", VA = "0xB9C860")]
		private void CameraFollow()
		{
		}

		[Token(Token = "0x600082D")]
		[Address(RVA = "0xB9C92C", Offset = "0xB9C92C", VA = "0xB9C92C")]
		public OrthographicController()
		{
		}
	}
	[Token(Token = "0x20001E9")]
	public class ThirdPersonController : BaseController
	{
		[Token(Token = "0x400090D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private float movingTurnSpeed;

		[Token(Token = "0x600082E")]
		[Address(RVA = "0xAF1250", Offset = "0xAF1250", VA = "0xAF1250", Slot = "14")]
		protected override void Move(float h, float v)
		{
		}

		[Token(Token = "0x600082F")]
		[Address(RVA = "0xAF1370", Offset = "0xAF1370", VA = "0xAF1370")]
		public ThirdPersonController()
		{
		}
	}
	[Token(Token = "0x20001EA")]
	public class VoiceDemoUI : MonoBehaviour
	{
		[Token(Token = "0x20001EB")]
		public delegate void OnDebugToggle(bool debugMode);

		[Token(Token = "0x400090E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Text punState;

		[Token(Token = "0x400090F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Text voiceState;

		[Token(Token = "0x4000910")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private PhotonVoiceNetwork punVoiceNetwork;

		[Token(Token = "0x4000911")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Canvas canvas;

		[Token(Token = "0x4000912")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Button punSwitch;

		[Token(Token = "0x4000913")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Text punSwitchText;

		[Token(Token = "0x4000914")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Button voiceSwitch;

		[Token(Token = "0x4000915")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Text voiceSwitchText;

		[Token(Token = "0x4000916")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Button calibrateButton;

		[Token(Token = "0x4000917")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Text calibrateText;

		[Token(Token = "0x4000918")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Text voiceDebugText;

		[Token(Token = "0x4000919")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Recorder recorder;

		[Token(Token = "0x400091A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private GameObject inGameSettings;

		[Token(Token = "0x400091B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private GameObject globalSettings;

		[Token(Token = "0x400091C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private Text devicesInfoText;

		[Token(Token = "0x400091D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private GameObject debugGO;

		[Token(Token = "0x400091E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private bool debugMode;

		[Token(Token = "0x400091F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private float volumeBeforeMute;

		[Token(Token = "0x4000920")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private DebugLevel previousDebugLevel;

		[Token(Token = "0x4000922")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[SerializeField]
		private int calibrationMilliSeconds;

		[Token(Token = "0x170000DA")]
		public bool DebugMode
		{
			[Token(Token = "0x6000830")]
			[Address(RVA = "0xAF9284", Offset = "0xAF9284", VA = "0xAF9284")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000831")]
			[Address(RVA = "0xAF928C", Offset = "0xAF928C", VA = "0xAF928C")]
			set
			{
			}
		}

		[Token(Token = "0x14000013")]
		public static event OnDebugToggle DebugToggled
		{
			[Token(Token = "0x6000832")]
			[Address(RVA = "0xAF93B4", Offset = "0xAF93B4", VA = "0xAF93B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7762B0", Offset = "0x7762B0")]
			add
			{
			}
			[Token(Token = "0x6000833")]
			[Address(RVA = "0xAF9470", Offset = "0xAF9470", VA = "0xAF9470")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7762C0", Offset = "0x7762C0")]
			remove
			{
			}
		}

		[Token(Token = "0x6000834")]
		[Address(RVA = "0xAF952C", Offset = "0xAF952C", VA = "0xAF952C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000835")]
		[Address(RVA = "0xAF9594", Offset = "0xAF9594", VA = "0xAF9594")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000836")]
		[Address(RVA = "0xAF97C4", Offset = "0xAF97C4", VA = "0xAF97C4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000837")]
		[Address(RVA = "0xAF99F4", Offset = "0xAF99F4", VA = "0xAF99F4")]
		private void CharacterInstantiation_CharacterInstantiated(GameObject character)
		{
		}

		[Token(Token = "0x6000838")]
		[Address(RVA = "0xAF9AAC", Offset = "0xAF9AAC", VA = "0xAF9AAC")]
		private void InitToggles(Toggle[] toggles)
		{
		}

		[Token(Token = "0x6000839")]
		[Address(RVA = "0xAF9E54", Offset = "0xAF9E54", VA = "0xAF9E54")]
		private void BetterToggle_ToggleValueChanged(Toggle toggle)
		{
		}

		[Token(Token = "0x600083A")]
		[Address(RVA = "0xAFA1D8", Offset = "0xAFA1D8", VA = "0xAFA1D8")]
		private void OnCameraChanged(Camera newCamera)
		{
		}

		[Token(Token = "0x600083B")]
		[Address(RVA = "0xAFA1F4", Offset = "0xAFA1F4", VA = "0xAFA1F4")]
		private void Start()
		{
		}

		[Token(Token = "0x600083C")]
		[Address(RVA = "0xAFA7EC", Offset = "0xAFA7EC", VA = "0xAFA7EC")]
		private void PunSwitchOnClick()
		{
		}

		[Token(Token = "0x600083D")]
		[Address(RVA = "0xAFA8F0", Offset = "0xAFA8F0", VA = "0xAFA8F0")]
		private void VoiceSwitchOnClick()
		{
		}

		[Token(Token = "0x600083E")]
		[Address(RVA = "0xAFA984", Offset = "0xAFA984", VA = "0xAFA984")]
		private void CalibrateButtonOnClick()
		{
		}

		[Token(Token = "0x600083F")]
		[Address(RVA = "0xAFAA2C", Offset = "0xAFAA2C", VA = "0xAFAA2C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000840")]
		[Address(RVA = "0xAFAC58", Offset = "0xAFAC58", VA = "0xAFAC58")]
		private void PunClientStateChanged(ClientState fromState, ClientState toState)
		{
		}

		[Token(Token = "0x6000841")]
		[Address(RVA = "0xAFB230", Offset = "0xAFB230", VA = "0xAFB230")]
		private void VoiceClientStateChanged(ClientState fromState, ClientState toState)
		{
		}

		[Token(Token = "0x6000842")]
		[Address(RVA = "0xAFADE8", Offset = "0xAFADE8", VA = "0xAFADE8")]
		private void UpdateUiBasedOnVoiceState(ClientState voiceClientState)
		{
		}

		[Token(Token = "0x6000843")]
		[Address(RVA = "0xAFB238", Offset = "0xAFB238", VA = "0xAFB238")]
		public VoiceDemoUI()
		{
		}
	}
}
namespace Photon.Voice.Unity.Demos
{
	[Token(Token = "0x20001EC")]
	public class BackgroundMusicController : MonoBehaviour
	{
		[Token(Token = "0x4000923")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Text volumeText;

		[Token(Token = "0x4000924")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Slider volumeSlider;

		[Token(Token = "0x4000925")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AudioSource audioSource;

		[Token(Token = "0x4000926")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float initialVolume;

		[Token(Token = "0x6000848")]
		[Address(RVA = "0xB47604", Offset = "0xB47604", VA = "0xB47604")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000849")]
		[Address(RVA = "0xB476F8", Offset = "0xB476F8", VA = "0xB476F8")]
		private void OnVolumeChanged(float newValue)
		{
		}

		[Token(Token = "0x600084A")]
		[Address(RVA = "0xB477B8", Offset = "0xB477B8", VA = "0xB477B8")]
		public BackgroundMusicController()
		{
		}
	}
	[Token(Token = "0x20001ED")]
	public class SidebarToggle : MonoBehaviour
	{
		[Token(Token = "0x4000927")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Button sidebarButton;

		[Token(Token = "0x4000928")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private RectTransform panelsHolder;

		[Token(Token = "0x4000929")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float sidebarWidth;

		[Token(Token = "0x400092A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private bool sidebarOpen;

		[Token(Token = "0x600084B")]
		[Address(RVA = "0xB7B6FC", Offset = "0xB7B6FC", VA = "0xB7B6FC")]
		private void Awake()
		{
		}

		[Token(Token = "0x600084C")]
		[Address(RVA = "0xB7B7E0", Offset = "0xB7B7E0", VA = "0xB7B7E0")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x7762D0", Offset = "0x7762D0")]
		private void ToggleSidebar()
		{
		}

		[Token(Token = "0x600084D")]
		[Address(RVA = "0xB7B7BC", Offset = "0xB7B7BC", VA = "0xB7B7BC")]
		private void ToggleSidebar(bool open)
		{
		}

		[Token(Token = "0x600084E")]
		[Address(RVA = "0xB7B7F8", Offset = "0xB7B7F8", VA = "0xB7B7F8")]
		public SidebarToggle()
		{
		}
	}
	[Token(Token = "0x20001EE")]
	public static class UiExtensions
	{
		[Token(Token = "0x600084F")]
		[Address(RVA = "0xAF7508", Offset = "0xAF7508", VA = "0xAF7508")]
		public static void SetPosX(this RectTransform rectTransform, float x)
		{
		}

		[Token(Token = "0x6000850")]
		[Address(RVA = "0xAF7560", Offset = "0xAF7560", VA = "0xAF7560")]
		public static void SetHeight(this RectTransform rectTransform, float h)
		{
		}

		[Token(Token = "0x6000851")]
		[Address(RVA = "0xAF757C", Offset = "0xAF757C", VA = "0xAF757C")]
		public static void SetValue(this Toggle toggle, bool isOn)
		{
		}

		[Token(Token = "0x6000852")]
		[Address(RVA = "0xAF7598", Offset = "0xAF7598", VA = "0xAF7598")]
		public static void SetValue(this Slider slider, float v)
		{
		}

		[Token(Token = "0x6000853")]
		[Address(RVA = "0xAF75B8", Offset = "0xAF75B8", VA = "0xAF75B8")]
		public static void SetValue(this InputField inputField, string v)
		{
		}

		[Token(Token = "0x6000854")]
		[Address(RVA = "0xAF75D0", Offset = "0xAF75D0", VA = "0xAF75D0")]
		public static void DestroyChildren(this Transform transform)
		{
		}

		[Token(Token = "0x6000855")]
		[Address(RVA = "0xAF76F4", Offset = "0xAF76F4", VA = "0xAF76F4")]
		public static void Hide(this CanvasGroup canvasGroup, bool blockRaycasts = false, bool interactable = false)
		{
		}

		[Token(Token = "0x6000856")]
		[Address(RVA = "0xAF7750", Offset = "0xAF7750", VA = "0xAF7750")]
		public static void Show(this CanvasGroup canvasGroup, bool blockRaycasts = true, bool interactable = true)
		{
		}

		[Token(Token = "0x6000857")]
		[Address(RVA = "0xAF77AC", Offset = "0xAF77AC", VA = "0xAF77AC")]
		public static bool IsHidden(this CanvasGroup canvasGroup)
		{
			return default(bool);
		}

		[Token(Token = "0x6000858")]
		[Address(RVA = "0xAF77D4", Offset = "0xAF77D4", VA = "0xAF77D4")]
		public static bool IsShown(this CanvasGroup canvasGroup)
		{
			return default(bool);
		}

		[Token(Token = "0x6000859")]
		[Address(RVA = "0xAF77FC", Offset = "0xAF77FC", VA = "0xAF77FC")]
		public static void SetSingleOnClickCallback(this Button button, UnityAction action)
		{
		}

		[Token(Token = "0x600085A")]
		[Address(RVA = "0xAF7844", Offset = "0xAF7844", VA = "0xAF7844")]
		public static void SetSingleOnValueChangedCallback(this Toggle toggle, UnityAction<bool> action)
		{
		}

		[Token(Token = "0x600085B")]
		[Address(RVA = "0xAF78BC", Offset = "0xAF78BC", VA = "0xAF78BC")]
		public static void SetSingleOnValueChangedCallback(this InputField inputField, UnityAction<string> action)
		{
		}

		[Token(Token = "0x600085C")]
		[Address(RVA = "0xAF7934", Offset = "0xAF7934", VA = "0xAF7934")]
		public static void SetSingleOnEndEditCallback(this InputField inputField, UnityAction<string> action)
		{
		}

		[Token(Token = "0x600085D")]
		[Address(RVA = "0xAF79AC", Offset = "0xAF79AC", VA = "0xAF79AC")]
		public static void SetSingleOnValueChangedCallback(this Dropdown inputField, UnityAction<int> action)
		{
		}

		[Token(Token = "0x600085E")]
		[Address(RVA = "0xAF7A24", Offset = "0xAF7A24", VA = "0xAF7A24")]
		public static void SetSingleOnValueChangedCallback(this Slider slider, UnityAction<float> action)
		{
		}
	}
}
namespace Photon.Voice.Unity.Demos.DemoVoiceUI
{
	[Token(Token = "0x20001EF")]
	public class CodecSettingsUI : MonoBehaviour
	{
		[Token(Token = "0x400092B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Dropdown frameDurationDropdown;

		[Token(Token = "0x400092C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Dropdown samplingRateDropdown;

		[Token(Token = "0x400092D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private InputField bitrateInputField;

		[Token(Token = "0x400092E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Recorder recorder;

		[Token(Token = "0x400092F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly List<string> frameDurationOptions;

		[Token(Token = "0x4000930")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly List<string> samplingRateOptions;

		[Token(Token = "0x600085F")]
		[Address(RVA = "0x11E7D0C", Offset = "0x11E7D0C", VA = "0x11E7D0C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000860")]
		[Address(RVA = "0x11E8058", Offset = "0x11E8058", VA = "0x11E8058")]
		private void Update()
		{
		}

		[Token(Token = "0x6000861")]
		[Address(RVA = "0x11E8084", Offset = "0x11E8084", VA = "0x11E8084")]
		private void OnBitrateChanged(string newBitrateString)
		{
		}

		[Token(Token = "0x6000862")]
		[Address(RVA = "0x11E80F0", Offset = "0x11E80F0", VA = "0x11E80F0")]
		private void OnFrameDurationChanged(int index)
		{
		}

		[Token(Token = "0x6000863")]
		[Address(RVA = "0x11E8160", Offset = "0x11E8160", VA = "0x11E8160")]
		private void OnSamplingRateChanged(int index)
		{
		}

		[Token(Token = "0x6000864")]
		[Address(RVA = "0x11E7F08", Offset = "0x11E7F08", VA = "0x11E7F08")]
		private void InitFrameDuration()
		{
		}

		[Token(Token = "0x6000865")]
		[Address(RVA = "0x11E7F98", Offset = "0x11E7F98", VA = "0x11E7F98")]
		private void InitSamplingRate()
		{
		}

		[Token(Token = "0x6000866")]
		[Address(RVA = "0x11E8004", Offset = "0x11E8004", VA = "0x11E8004")]
		private void InitBitrate()
		{
		}

		[Token(Token = "0x6000867")]
		[Address(RVA = "0x11E81D0", Offset = "0x11E81D0", VA = "0x11E81D0")]
		public CodecSettingsUI()
		{
		}
	}
	[Token(Token = "0x20001F0")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x7701FC", Offset = "0x7701FC")]
	public class DemoVoiceUI : MonoBehaviour, IInRoomCallbacks, IMatchmakingCallbacks
	{
		[Serializable]
		[Token(Token = "0x20001F1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x770284", Offset = "0x770284")]
		private sealed class <>c
		{
			[Token(Token = "0x4000962")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000963")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<IAudioDesc> <>9__68_0;

			[Token(Token = "0x600089B")]
			[Address(RVA = "0xB29EE8", Offset = "0xB29EE8", VA = "0xB29EE8")]
			public <>c()
			{
			}

			[Token(Token = "0x600089C")]
			[Address(RVA = "0xB29EF0", Offset = "0xB29EF0", VA = "0xB29EF0")]
			internal IAudioDesc <ToggleAudioToneFactory>b__68_0()
			{
				return null;
			}
		}

		[Token(Token = "0x4000931")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Text connectionStatusText;

		[Token(Token = "0x4000932")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Text serverStatusText;

		[Token(Token = "0x4000933")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Text roomStatusText;

		[Token(Token = "0x4000934")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Text inputWarningText;

		[Token(Token = "0x4000935")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Text rttText;

		[Token(Token = "0x4000936")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Text rttVariationText;

		[Token(Token = "0x4000937")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Text packetLossWarningText;

		[Token(Token = "0x4000938")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private InputField localNicknameText;

		[Token(Token = "0x4000939")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Toggle debugEchoToggle;

		[Token(Token = "0x400093A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Toggle reliableTransmissionToggle;

		[Token(Token = "0x400093B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Toggle encryptionToggle;

		[Token(Token = "0x400093C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private GameObject webRtcDspGameObject;

		[Token(Token = "0x400093D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private Toggle aecToggle;

		[Token(Token = "0x400093E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private Toggle aecHighPassToggle;

		[Token(Token = "0x400093F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private InputField reverseStreamDelayInputField;

		[Token(Token = "0x4000940")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private Toggle noiseSuppressionToggle;

		[Token(Token = "0x4000941")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private Toggle agcToggle;

		[Token(Token = "0x4000942")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private Slider agcCompressionGainSlider;

		[Token(Token = "0x4000943")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private Toggle vadToggle;

		[Token(Token = "0x4000944")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private Toggle muteToggle;

		[Token(Token = "0x4000945")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private Toggle streamAudioClipToggle;

		[Token(Token = "0x4000946")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private Toggle audioToneToggle;

		[Token(Token = "0x4000947")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private Toggle dspToggle;

		[Token(Token = "0x4000948")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private Toggle highPassToggle;

		[Token(Token = "0x4000949")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private Toggle photonVadToggle;

		[Token(Token = "0x400094A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private GameObject microphoneSetupGameObject;

		[Token(Token = "0x400094B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		private bool defaultTransmitEnabled;

		[Token(Token = "0x400094C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		[SerializeField]
		private int screenWidth;

		[Token(Token = "0x400094D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		private int screenHeight;

		[Token(Token = "0x400094E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		[SerializeField]
		private bool fullScreen;

		[Token(Token = "0x400094F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		private InputField roomNameInputField;

		[Token(Token = "0x4000950")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		private InputField globalMinDelaySoftInputField;

		[Token(Token = "0x4000951")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[SerializeField]
		private InputField globalMaxDelaySoftInputField;

		[Token(Token = "0x4000952")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[SerializeField]
		private InputField globalMaxDelayHardInputField;

		[Token(Token = "0x4000953")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[SerializeField]
		private int rttYellowThreshold;

		[Token(Token = "0x4000954")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		[SerializeField]
		private int rttRedThreshold;

		[Token(Token = "0x4000955")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[SerializeField]
		private int rttVariationYellowThreshold;

		[Token(Token = "0x4000956")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		[SerializeField]
		private int rttVariationRedThreshold;

		[Token(Token = "0x4000957")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private GameObject compressionGainGameObject;

		[Token(Token = "0x4000958")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private Text compressionGainText;

		[Token(Token = "0x4000959")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private GameObject aecOptionsGameObject;

		[Token(Token = "0x400095A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public Transform RemoteVoicesPanel;

		[Token(Token = "0x400095B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		protected VoiceConnection voiceConnection;

		[Token(Token = "0x400095C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private WebRtcAudioDsp voiceAudioPreprocessor;

		[Token(Token = "0x400095D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private ConnectAndJoin connectAndJoin;

		[Token(Token = "0x400095E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private readonly Color warningColor;

		[Token(Token = "0x400095F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private readonly Color okColor;

		[Token(Token = "0x4000960")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private readonly Color redColor;

		[Token(Token = "0x4000961")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		private readonly Color defaultColor;

		[Token(Token = "0x6000869")]
		[Address(RVA = "0x11EFB44", Offset = "0x11EFB44", VA = "0x11EFB44")]
		private void Awake()
		{
		}

		[Token(Token = "0x600086A")]
		[Address(RVA = "0x11F082C", Offset = "0x11F082C", VA = "0x11F082C", Slot = "16")]
		protected virtual void SetDefaults()
		{
		}

		[Token(Token = "0x600086B")]
		[Address(RVA = "0x11F0858", Offset = "0x11F0858", VA = "0x11F0858")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600086C")]
		[Address(RVA = "0x11F0914", Offset = "0x11F0914", VA = "0x11F0914")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600086D")]
		[Address(RVA = "0x11F078C", Offset = "0x11F078C", VA = "0x11F078C")]
		private void GetSavedNickname()
		{
		}

		[Token(Token = "0x600086E")]
		[Address(RVA = "0x11F09D0", Offset = "0x11F09D0", VA = "0x11F09D0", Slot = "17")]
		protected virtual void OnSpeakerCreated(Speaker speaker)
		{
		}

		[Token(Token = "0x600086F")]
		[Address(RVA = "0x11F0B04", Offset = "0x11F0B04", VA = "0x11F0B04")]
		private void OnRemoteVoiceRemove(Speaker speaker)
		{
		}

		[Token(Token = "0x6000870")]
		[Address(RVA = "0x11F0BBC", Offset = "0x11F0BBC", VA = "0x11F0BBC")]
		private void ToggleMute(bool isOn)
		{
		}

		[Token(Token = "0x6000871")]
		[Address(RVA = "0x11F0C2C", Offset = "0x11F0C2C", VA = "0x11F0C2C", Slot = "18")]
		protected virtual void ToggleIsRecording(bool isRecording)
		{
		}

		[Token(Token = "0x6000872")]
		[Address(RVA = "0x11F0C68", Offset = "0x11F0C68", VA = "0x11F0C68")]
		private void ToggleDebugEcho(bool isOn)
		{
		}

		[Token(Token = "0x6000873")]
		[Address(RVA = "0x11F0CA4", Offset = "0x11F0CA4", VA = "0x11F0CA4")]
		private void ToggleReliable(bool isOn)
		{
		}

		[Token(Token = "0x6000874")]
		[Address(RVA = "0x11F0CE0", Offset = "0x11F0CE0", VA = "0x11F0CE0")]
		private void ToggleEncryption(bool isOn)
		{
		}

		[Token(Token = "0x6000875")]
		[Address(RVA = "0x11F0D1C", Offset = "0x11F0D1C", VA = "0x11F0D1C")]
		private void ToggleAEC(bool isOn)
		{
		}

		[Token(Token = "0x6000876")]
		[Address(RVA = "0x11F0D64", Offset = "0x11F0D64", VA = "0x11F0D64")]
		private void ToggleNoiseSuppression(bool isOn)
		{
		}

		[Token(Token = "0x6000877")]
		[Address(RVA = "0x11F0D84", Offset = "0x11F0D84", VA = "0x11F0D84")]
		private void ToggleAGC(bool isOn)
		{
		}

		[Token(Token = "0x6000878")]
		[Address(RVA = "0x11F0DCC", Offset = "0x11F0DCC", VA = "0x11F0DCC")]
		private void ToggleVAD(bool isOn)
		{
		}

		[Token(Token = "0x6000879")]
		[Address(RVA = "0x11F0DEC", Offset = "0x11F0DEC", VA = "0x11F0DEC")]
		private void ToggleHighPass(bool isOn)
		{
		}

		[Token(Token = "0x600087A")]
		[Address(RVA = "0x11F0E0C", Offset = "0x11F0E0C", VA = "0x11F0E0C")]
		private void ToggleDsp(bool isOn)
		{
		}

		[Token(Token = "0x600087B")]
		[Address(RVA = "0x11F0E70", Offset = "0x11F0E70", VA = "0x11F0E70")]
		private void ToggleAudioClipStreaming(bool isOn)
		{
		}

		[Token(Token = "0x600087C")]
		[Address(RVA = "0x11F0F70", Offset = "0x11F0F70", VA = "0x11F0F70")]
		private void ToggleAudioToneFactory(bool isOn)
		{
		}

		[Token(Token = "0x600087D")]
		[Address(RVA = "0x11F11A0", Offset = "0x11F11A0", VA = "0x11F11A0")]
		private void TogglePhotonVAD(bool isOn)
		{
		}

		[Token(Token = "0x600087E")]
		[Address(RVA = "0x11F11DC", Offset = "0x11F11DC", VA = "0x11F11DC")]
		private void ToggleAecHighPass(bool isOn)
		{
		}

		[Token(Token = "0x600087F")]
		[Address(RVA = "0x11F11FC", Offset = "0x11F11FC", VA = "0x11F11FC")]
		private void OnAgcCompressionGainChanged(float agcCompressionGain)
		{
		}

		[Token(Token = "0x6000880")]
		[Address(RVA = "0x11F12D4", Offset = "0x11F12D4", VA = "0x11F12D4")]
		private void OnGlobalPlaybackDelayMinSoftChanged(string newMinDelaySoftString)
		{
		}

		[Token(Token = "0x6000881")]
		[Address(RVA = "0x11F13B0", Offset = "0x11F13B0", VA = "0x11F13B0")]
		private void OnGlobalPlaybackDelayMaxSoftChanged(string newMaxDelaySoftString)
		{
		}

		[Token(Token = "0x6000882")]
		[Address(RVA = "0x11F1488", Offset = "0x11F1488", VA = "0x11F1488")]
		private void OnGlobalPlaybackDelayMaxHardChanged(string newMaxDelayHardString)
		{
		}

		[Token(Token = "0x6000883")]
		[Address(RVA = "0x11F1560", Offset = "0x11F1560", VA = "0x11F1560")]
		private void OnReverseStreamDelayChanged(string newReverseStreamString)
		{
		}

		[Token(Token = "0x6000884")]
		[Address(RVA = "0x11F15F4", Offset = "0x11F15F4", VA = "0x11F15F4")]
		private void UpdateSyncedNickname(string nickname)
		{
		}

		[Token(Token = "0x6000885")]
		[Address(RVA = "0x11F16AC", Offset = "0x11F16AC", VA = "0x11F16AC")]
		private void JoinOrCreateRoom(string roomName)
		{
		}

		[Token(Token = "0x6000886")]
		[Address(RVA = "0x11F17E4", Offset = "0x11F17E4", VA = "0x11F17E4", Slot = "19")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6000887")]
		[Address(RVA = "0x11F1DA0", Offset = "0x11F1DA0", VA = "0x11F1DA0")]
		private void SetTextColor(int textValue, Text text, int yellowThreshold, int redThreshold)
		{
		}

		[Token(Token = "0x6000888")]
		[Address(RVA = "0x11F1D68", Offset = "0x11F1D68", VA = "0x11F1D68")]
		private void ResetTextColor(Text text)
		{
		}

		[Token(Token = "0x6000889")]
		[Address(RVA = "0x11EFCAC", Offset = "0x11EFCAC", VA = "0x11EFCAC")]
		private void InitUiCallbacks()
		{
		}

		[Token(Token = "0x600088A")]
		[Address(RVA = "0x11F0324", Offset = "0x11F0324", VA = "0x11F0324")]
		private void InitUiValues()
		{
		}

		[Token(Token = "0x600088B")]
		[Address(RVA = "0x11F1E20", Offset = "0x11F1E20", VA = "0x11F1E20")]
		private void SetRoomDebugText()
		{
		}

		[Token(Token = "0x600088C")]
		[Address(RVA = "0x11F2104", Offset = "0x11F2104", VA = "0x11F2104", Slot = "20")]
		protected virtual void OnActorPropertiesChanged(Player targetPlayer, ExitGames.Client.Photon.Hashtable changedProps)
		{
		}

		[Token(Token = "0x600088D")]
		[Address(RVA = "0x11F217C", Offset = "0x11F217C", VA = "0x11F217C", Slot = "4")]
		private void Photon.Realtime.IInRoomCallbacks.OnPlayerEnteredRoom(Player newPlayer)
		{
		}

		[Token(Token = "0x600088E")]
		[Address(RVA = "0x11F2180", Offset = "0x11F2180", VA = "0x11F2180", Slot = "5")]
		private void Photon.Realtime.IInRoomCallbacks.OnPlayerLeftRoom(Player otherPlayer)
		{
		}

		[Token(Token = "0x600088F")]
		[Address(RVA = "0x11F2184", Offset = "0x11F2184", VA = "0x11F2184", Slot = "6")]
		private void Photon.Realtime.IInRoomCallbacks.OnRoomPropertiesUpdate(ExitGames.Client.Photon.Hashtable propertiesThatChanged)
		{
		}

		[Token(Token = "0x6000890")]
		[Address(RVA = "0x11F2188", Offset = "0x11F2188", VA = "0x11F2188", Slot = "7")]
		private void Photon.Realtime.IInRoomCallbacks.OnPlayerPropertiesUpdate(Player targetPlayer, ExitGames.Client.Photon.Hashtable changedProps)
		{
		}

		[Token(Token = "0x6000891")]
		[Address(RVA = "0x11F2198", Offset = "0x11F2198", VA = "0x11F2198", Slot = "8")]
		private void Photon.Realtime.IInRoomCallbacks.OnMasterClientSwitched(Player newMasterClient)
		{
		}

		[Token(Token = "0x6000892")]
		[Address(RVA = "0x11F219C", Offset = "0x11F219C", VA = "0x11F219C", Slot = "9")]
		private void Photon.Realtime.IMatchmakingCallbacks.OnFriendListUpdate(List<FriendInfo> friendList)
		{
		}

		[Token(Token = "0x6000893")]
		[Address(RVA = "0x11F21A0", Offset = "0x11F21A0", VA = "0x11F21A0", Slot = "10")]
		private void Photon.Realtime.IMatchmakingCallbacks.OnCreatedRoom()
		{
		}

		[Token(Token = "0x6000894")]
		[Address(RVA = "0x11F21A4", Offset = "0x11F21A4", VA = "0x11F21A4", Slot = "11")]
		private void Photon.Realtime.IMatchmakingCallbacks.OnCreateRoomFailed(short returnCode, string message)
		{
		}

		[Token(Token = "0x6000895")]
		[Address(RVA = "0x11F21A8", Offset = "0x11F21A8", VA = "0x11F21A8", Slot = "12")]
		private void Photon.Realtime.IMatchmakingCallbacks.OnJoinedRoom()
		{
		}

		[Token(Token = "0x6000896")]
		[Address(RVA = "0x11F21AC", Offset = "0x11F21AC", VA = "0x11F21AC", Slot = "13")]
		private void Photon.Realtime.IMatchmakingCallbacks.OnJoinRoomFailed(short returnCode, string message)
		{
		}

		[Token(Token = "0x6000897")]
		[Address(RVA = "0x11F21B0", Offset = "0x11F21B0", VA = "0x11F21B0", Slot = "14")]
		private void Photon.Realtime.IMatchmakingCallbacks.OnJoinRandomFailed(short returnCode, string message)
		{
		}

		[Token(Token = "0x6000898")]
		[Address(RVA = "0x11F21B4", Offset = "0x11F21B4", VA = "0x11F21B4", Slot = "15")]
		private void Photon.Realtime.IMatchmakingCallbacks.OnLeftRoom()
		{
		}

		[Token(Token = "0x6000899")]
		[Address(RVA = "0x11F222C", Offset = "0x11F222C", VA = "0x11F222C")]
		public DemoVoiceUI()
		{
		}
	}
	[Token(Token = "0x20001F2")]
	public struct MicRef
	{
		[Token(Token = "0x4000964")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Recorder.MicType MicType;

		[Token(Token = "0x4000965")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string Name;

		[Token(Token = "0x4000966")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int PhotonId;

		[Token(Token = "0x600089D")]
		[Address(RVA = "0xB8ED5C", Offset = "0xB8ED5C", VA = "0xB8ED5C")]
		public MicRef(string name, int id)
		{
		}

		[Token(Token = "0x600089E")]
		[Address(RVA = "0xB8ED70", Offset = "0xB8ED70", VA = "0xB8ED70")]
		public MicRef(string name)
		{
		}

		[Token(Token = "0x600089F")]
		[Address(RVA = "0xB8ED84", Offset = "0xB8ED84", VA = "0xB8ED84", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x20001F3")]
	public class MicrophoneDropdownFiller : MonoBehaviour
	{
		[Token(Token = "0x4000967")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<MicRef> micOptions;

		[Token(Token = "0x4000968")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Dropdown micDropdown;

		[Token(Token = "0x4000969")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Recorder recorder;

		[Token(Token = "0x400096A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x7727D4", Offset = "0x7727D4")]
		private GameObject refreshButton;

		[Token(Token = "0x400096B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x772820", Offset = "0x772820")]
		[SerializeField]
		private GameObject toggleButton;

		[Token(Token = "0x400096C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Toggle photonToggle;

		[Token(Token = "0x60008A0")]
		[Address(RVA = "0xB8EDD4", Offset = "0xB8EDD4", VA = "0xB8EDD4")]
		private void Awake()
		{
		}

		[Token(Token = "0x60008A1")]
		[Address(RVA = "0xB8EE60", Offset = "0xB8EE60", VA = "0xB8EE60")]
		private void SetupMicDropdown()
		{
		}

		[Token(Token = "0x60008A2")]
		[Address(RVA = "0xB8F0DC", Offset = "0xB8F0DC", VA = "0xB8F0DC")]
		private void MicDropdownValueChanged(MicRef mic)
		{
		}

		[Token(Token = "0x60008A3")]
		[Address(RVA = "0xB8F174", Offset = "0xB8F174", VA = "0xB8F174")]
		private void SetCurrentValue()
		{
		}

		[Token(Token = "0x60008A4")]
		[Address(RVA = "0xB8F574", Offset = "0xB8F574", VA = "0xB8F574")]
		public void PhotonMicToggled(bool on)
		{
		}

		[Token(Token = "0x60008A5")]
		[Address(RVA = "0xB8EE3C", Offset = "0xB8EE3C", VA = "0xB8EE3C")]
		public void RefreshMicrophones()
		{
		}

		[Token(Token = "0x60008A6")]
		[Address(RVA = "0xB8F624", Offset = "0xB8F624", VA = "0xB8F624")]
		private void PhotonVoiceCreated()
		{
		}

		[Token(Token = "0x60008A7")]
		[Address(RVA = "0xB8F648", Offset = "0xB8F648", VA = "0xB8F648")]
		public MicrophoneDropdownFiller()
		{
		}

		[Token(Token = "0x60008A8")]
		[Address(RVA = "0xB8F650", Offset = "0xB8F650", VA = "0xB8F650")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x776408", Offset = "0x776408")]
		private void <SetupMicDropdown>b__7_0(int <p0>)
		{
		}
	}
	[Token(Token = "0x20001F4")]
	public static class PhotonDemoExtensions
	{
		[Token(Token = "0x400096D")]
		internal const string IS_MUTED_PROPERTY_KEY = "mute";

		[Token(Token = "0x60008A9")]
		[Address(RVA = "0xC44784", Offset = "0xC44784", VA = "0xC44784")]
		public static bool Mute(this Player player)
		{
			return default(bool);
		}

		[Token(Token = "0x60008AA")]
		[Address(RVA = "0xC44874", Offset = "0xC44874", VA = "0xC44874")]
		public static bool Unmute(this Player player)
		{
			return default(bool);
		}

		[Token(Token = "0x60008AB")]
		[Address(RVA = "0xC44960", Offset = "0xC44960", VA = "0xC44960")]
		public static bool IsMuted(this Player player)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20001F5")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x7702A4", Offset = "0x7702A4")]
	public class RemoteSpeakerUI : MonoBehaviour, IInRoomCallbacks
	{
		[Token(Token = "0x400096E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Text nameText;

		[Token(Token = "0x400096F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected Image remoteIsMuting;

		[Token(Token = "0x4000970")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Image remoteIsTalking;

		[Token(Token = "0x4000971")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private InputField minDelaySoftInputField;

		[Token(Token = "0x4000972")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private InputField maxDelaySoftInputField;

		[Token(Token = "0x4000973")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private InputField maxDelayHardInputField;

		[Token(Token = "0x4000974")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Text bufferLagText;

		[Token(Token = "0x4000975")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected Speaker speaker;

		[Token(Token = "0x4000976")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected VoiceConnection voiceConnection;

		[Token(Token = "0x60008AC")]
		[Address(RVA = "0xCF2D7C", Offset = "0xCF2D7C", VA = "0xCF2D7C", Slot = "9")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x60008AD")]
		[Address(RVA = "0xCF30C4", Offset = "0xCF30C4", VA = "0xCF30C4")]
		private void OnMinDelaySoftChanged(string newMinDelaySoftString)
		{
		}

		[Token(Token = "0x60008AE")]
		[Address(RVA = "0xCF31A0", Offset = "0xCF31A0", VA = "0xCF31A0")]
		private void OnMaxDelaySoftChanged(string newMaxDelaySoftString)
		{
		}

		[Token(Token = "0x60008AF")]
		[Address(RVA = "0xCF3278", Offset = "0xCF3278", VA = "0xCF3278")]
		private void OnMaxDelayHardChanged(string newMaxDelayHardString)
		{
		}

		[Token(Token = "0x60008B0")]
		[Address(RVA = "0xCF3350", Offset = "0xCF3350", VA = "0xCF3350")]
		private void Update()
		{
		}

		[Token(Token = "0x60008B1")]
		[Address(RVA = "0xCF3434", Offset = "0xCF3434", VA = "0xCF3434")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60008B2")]
		[Address(RVA = "0xCF2F90", Offset = "0xCF2F90", VA = "0xCF2F90")]
		private void SetNickname()
		{
		}

		[Token(Token = "0x60008B3")]
		[Address(RVA = "0xCF3080", Offset = "0xCF3080", VA = "0xCF3080")]
		private void SetMutedState()
		{
		}

		[Token(Token = "0x60008B4")]
		[Address(RVA = "0xCF3470", Offset = "0xCF3470", VA = "0xCF3470", Slot = "10")]
		protected virtual void SetMutedState(bool isMuted)
		{
		}

		[Token(Token = "0x60008B5")]
		[Address(RVA = "0xCF3490", Offset = "0xCF3490", VA = "0xCF3490", Slot = "11")]
		protected virtual void OnActorPropertiesChanged(Player targetPlayer, ExitGames.Client.Photon.Hashtable changedProps)
		{
		}

		[Token(Token = "0x60008B6")]
		[Address(RVA = "0xCF34EC", Offset = "0xCF34EC", VA = "0xCF34EC", Slot = "12")]
		public virtual void Init(VoiceConnection vC)
		{
		}

		[Token(Token = "0x60008B7")]
		[Address(RVA = "0xCF352C", Offset = "0xCF352C", VA = "0xCF352C", Slot = "4")]
		private void Photon.Realtime.IInRoomCallbacks.OnPlayerEnteredRoom(Player newPlayer)
		{
		}

		[Token(Token = "0x60008B8")]
		[Address(RVA = "0xCF3530", Offset = "0xCF3530", VA = "0xCF3530", Slot = "5")]
		private void Photon.Realtime.IInRoomCallbacks.OnPlayerLeftRoom(Player otherPlayer)
		{
		}

		[Token(Token = "0x60008B9")]
		[Address(RVA = "0xCF3534", Offset = "0xCF3534", VA = "0xCF3534", Slot = "6")]
		private void Photon.Realtime.IInRoomCallbacks.OnRoomPropertiesUpdate(ExitGames.Client.Photon.Hashtable propertiesThatChanged)
		{
		}

		[Token(Token = "0x60008BA")]
		[Address(RVA = "0xCF3538", Offset = "0xCF3538", VA = "0xCF3538", Slot = "7")]
		private void Photon.Realtime.IInRoomCallbacks.OnPlayerPropertiesUpdate(Player targetPlayer, ExitGames.Client.Photon.Hashtable changedProps)
		{
		}

		[Token(Token = "0x60008BB")]
		[Address(RVA = "0xCF3544", Offset = "0xCF3544", VA = "0xCF3544", Slot = "8")]
		private void Photon.Realtime.IInRoomCallbacks.OnMasterClientSwitched(Player newMasterClient)
		{
		}

		[Token(Token = "0x60008BC")]
		[Address(RVA = "0xCF3548", Offset = "0xCF3548", VA = "0xCF3548")]
		public RemoteSpeakerUI()
		{
		}
	}
}
namespace Photon.Realtime.Demo
{
	[Token(Token = "0x20001F6")]
	public class ConnectAndJoinRandomLb : MonoBehaviour, IConnectionCallbacks, IMatchmakingCallbacks, ILobbyCallbacks
	{
		[Token(Token = "0x4000977")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AppSettings appSettings;

		[Token(Token = "0x4000978")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private LoadBalancingClient lbc;

		[Token(Token = "0x4000979")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ConnectionHandler ch;

		[Token(Token = "0x400097A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Text StateUiText;

		[Token(Token = "0x60008BD")]
		[Address(RVA = "0x11E8DA8", Offset = "0x11E8DA8", VA = "0x11E8DA8")]
		public void Start()
		{
		}

		[Token(Token = "0x60008BE")]
		[Address(RVA = "0x11E8F24", Offset = "0x11E8F24", VA = "0x11E8F24")]
		public void Update()
		{
		}

		[Token(Token = "0x60008BF")]
		[Address(RVA = "0x11E9074", Offset = "0x11E9074", VA = "0x11E9074", Slot = "4")]
		public void OnConnected()
		{
		}

		[Token(Token = "0x60008C0")]
		[Address(RVA = "0x11E9078", Offset = "0x11E9078", VA = "0x11E9078", Slot = "5")]
		public void OnConnectedToMaster()
		{
		}

		[Token(Token = "0x60008C1")]
		[Address(RVA = "0x11E9108", Offset = "0x11E9108", VA = "0x11E9108", Slot = "6")]
		public void OnDisconnected(DisconnectCause cause)
		{
		}

		[Token(Token = "0x60008C2")]
		[Address(RVA = "0x11E9208", Offset = "0x11E9208", VA = "0x11E9208", Slot = "8")]
		public void OnCustomAuthenticationResponse(Dictionary<string, object> data)
		{
		}

		[Token(Token = "0x60008C3")]
		[Address(RVA = "0x11E920C", Offset = "0x11E920C", VA = "0x11E920C", Slot = "9")]
		public void OnCustomAuthenticationFailed(string debugMessage)
		{
		}

		[Token(Token = "0x60008C4")]
		[Address(RVA = "0x11E9210", Offset = "0x11E9210", VA = "0x11E9210", Slot = "7")]
		public void OnRegionListReceived(RegionHandler regionHandler)
		{
		}

		[Token(Token = "0x60008C5")]
		[Address(RVA = "0x11E9308", Offset = "0x11E9308", VA = "0x11E9308", Slot = "19")]
		public void OnRoomListUpdate(List<RoomInfo> roomList)
		{
		}

		[Token(Token = "0x60008C6")]
		[Address(RVA = "0x11E930C", Offset = "0x11E930C", VA = "0x11E930C", Slot = "20")]
		public void OnLobbyStatisticsUpdate(List<TypedLobbyInfo> lobbyStatistics)
		{
		}

		[Token(Token = "0x60008C7")]
		[Address(RVA = "0x11E9310", Offset = "0x11E9310", VA = "0x11E9310", Slot = "17")]
		public void OnJoinedLobby()
		{
		}

		[Token(Token = "0x60008C8")]
		[Address(RVA = "0x11E9314", Offset = "0x11E9314", VA = "0x11E9314", Slot = "18")]
		public void OnLeftLobby()
		{
		}

		[Token(Token = "0x60008C9")]
		[Address(RVA = "0x11E9318", Offset = "0x11E9318", VA = "0x11E9318", Slot = "10")]
		public void OnFriendListUpdate(List<FriendInfo> friendList)
		{
		}

		[Token(Token = "0x60008CA")]
		[Address(RVA = "0x11E931C", Offset = "0x11E931C", VA = "0x11E931C", Slot = "11")]
		public void OnCreatedRoom()
		{
		}

		[Token(Token = "0x60008CB")]
		[Address(RVA = "0x11E9320", Offset = "0x11E9320", VA = "0x11E9320", Slot = "12")]
		public void OnCreateRoomFailed(short returnCode, string message)
		{
		}

		[Token(Token = "0x60008CC")]
		[Address(RVA = "0x11E9324", Offset = "0x11E9324", VA = "0x11E9324", Slot = "13")]
		public void OnJoinedRoom()
		{
		}

		[Token(Token = "0x60008CD")]
		[Address(RVA = "0x11E9398", Offset = "0x11E9398", VA = "0x11E9398", Slot = "14")]
		public void OnJoinRoomFailed(short returnCode, string message)
		{
		}

		[Token(Token = "0x60008CE")]
		[Address(RVA = "0x11E939C", Offset = "0x11E939C", VA = "0x11E939C", Slot = "15")]
		public void OnJoinRandomFailed(short returnCode, string message)
		{
		}

		[Token(Token = "0x60008CF")]
		[Address(RVA = "0x11E9458", Offset = "0x11E9458", VA = "0x11E9458", Slot = "16")]
		public void OnLeftRoom()
		{
		}

		[Token(Token = "0x60008D0")]
		[Address(RVA = "0x11E945C", Offset = "0x11E945C", VA = "0x11E945C")]
		private void OnRegionPingCompleted(RegionHandler regionHandler)
		{
		}

		[Token(Token = "0x60008D1")]
		[Address(RVA = "0x11E958C", Offset = "0x11E958C", VA = "0x11E958C")]
		public ConnectAndJoinRandomLb()
		{
		}
	}
}
namespace Photon.Chat.UtilityScripts
{
	[Token(Token = "0x20001F7")]
	public class EventSystemSpawner : MonoBehaviour
	{
		[Token(Token = "0x60008D2")]
		[Address(RVA = "0xC68464", Offset = "0xC68464", VA = "0xC68464")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60008D3")]
		[Address(RVA = "0xC684E0", Offset = "0xC684E0", VA = "0xC684E0")]
		public EventSystemSpawner()
		{
		}
	}
	[Token(Token = "0x20001F8")]
	public class OnStartDelete : MonoBehaviour
	{
		[Token(Token = "0x60008D4")]
		[Address(RVA = "0xB9C708", Offset = "0xB9C708", VA = "0xB9C708")]
		private void Start()
		{
		}

		[Token(Token = "0x60008D5")]
		[Address(RVA = "0xB9C780", Offset = "0xB9C780", VA = "0xB9C780")]
		public OnStartDelete()
		{
		}
	}
	[Token(Token = "0x20001F9")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x770304", Offset = "0x770304")]
	public class TextButtonTransition : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
	{
		[Token(Token = "0x400097B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Text _text;

		[Token(Token = "0x400097C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Selectable Selectable;

		[Token(Token = "0x400097D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Color NormalColor;

		[Token(Token = "0x400097E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Color HoverColor;

		[Token(Token = "0x60008D6")]
		[Address(RVA = "0xB8B8E4", Offset = "0xB8B8E4", VA = "0xB8B8E4")]
		public void Awake()
		{
		}

		[Token(Token = "0x60008D7")]
		[Address(RVA = "0xB8B938", Offset = "0xB8B938", VA = "0xB8B938")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x60008D8")]
		[Address(RVA = "0xB8B968", Offset = "0xB8B968", VA = "0xB8B968")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x60008D9")]
		[Address(RVA = "0xB8B998", Offset = "0xB8B998", VA = "0xB8B998", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60008DA")]
		[Address(RVA = "0xB8BA54", Offset = "0xB8BA54", VA = "0xB8BA54", Slot = "5")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60008DB")]
		[Address(RVA = "0xB8BB10", Offset = "0xB8BB10", VA = "0xB8BB10")]
		public TextButtonTransition()
		{
		}
	}
	[Token(Token = "0x20001FA")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x770364", Offset = "0x770364")]
	public class TextToggleIsOnTransition : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
	{
		[Token(Token = "0x400097F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle toggle;

		[Token(Token = "0x4000980")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Text _text;

		[Token(Token = "0x4000981")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Color NormalOnColor;

		[Token(Token = "0x4000982")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Color NormalOffColor;

		[Token(Token = "0x4000983")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Color HoverOnColor;

		[Token(Token = "0x4000984")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Color HoverOffColor;

		[Token(Token = "0x4000985")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool isHover;

		[Token(Token = "0x60008DC")]
		[Address(RVA = "0xAF0EDC", Offset = "0xAF0EDC", VA = "0xAF0EDC")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x60008DD")]
		[Address(RVA = "0xAF103C", Offset = "0xAF103C", VA = "0xAF103C")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x60008DE")]
		[Address(RVA = "0xAF0FD8", Offset = "0xAF0FD8", VA = "0xAF0FD8")]
		public void OnValueChanged(bool isOn)
		{
		}

		[Token(Token = "0x60008DF")]
		[Address(RVA = "0xAF1100", Offset = "0xAF1100", VA = "0xAF1100", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60008E0")]
		[Address(RVA = "0xAF1178", Offset = "0xAF1178", VA = "0xAF1178", Slot = "5")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60008E1")]
		[Address(RVA = "0xAF11EC", Offset = "0xAF11EC", VA = "0xAF11EC")]
		public TextToggleIsOnTransition()
		{
		}
	}
}
namespace OculusSampleFramework
{
	[Token(Token = "0x20001FB")]
	public class ColorGrabbable : OVRGrabbable
	{
		[Token(Token = "0x4000986")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Color COLOR_GRAB;

		[Token(Token = "0x4000987")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly Color COLOR_HIGHLIGHT;

		[Token(Token = "0x4000988")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Color m_color;

		[Token(Token = "0x4000989")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private MeshRenderer[] m_meshRenderers;

		[Token(Token = "0x400098A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_highlight;

		[Token(Token = "0x170000DB")]
		public bool Highlight
		{
			[Token(Token = "0x60008E2")]
			[Address(RVA = "0x11E87FC", Offset = "0x11E87FC", VA = "0x11E87FC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60008E3")]
			[Address(RVA = "0x11E8804", Offset = "0x11E8804", VA = "0x11E8804")]
			set
			{
			}
		}

		[Token(Token = "0x60008E4")]
		[Address(RVA = "0x11E8810", Offset = "0x11E8810", VA = "0x11E8810")]
		protected void UpdateColor()
		{
		}

		[Token(Token = "0x60008E5")]
		[Address(RVA = "0x11E89D8", Offset = "0x11E89D8", VA = "0x11E89D8", Slot = "4")]
		public override void GrabBegin(OVRGrabber hand, Collider grabPoint)
		{
		}

		[Token(Token = "0x60008E6")]
		[Address(RVA = "0x11E8A00", Offset = "0x11E8A00", VA = "0x11E8A00", Slot = "5")]
		public override void GrabEnd(Vector3 linearVelocity, Vector3 angularVelocity)
		{
		}

		[Token(Token = "0x60008E7")]
		[Address(RVA = "0x11E8A28", Offset = "0x11E8A28", VA = "0x11E8A28")]
		private void Awake()
		{
		}

		[Token(Token = "0x60008E8")]
		[Address(RVA = "0x11E88D8", Offset = "0x11E88D8", VA = "0x11E88D8")]
		private void SetColor(Color color)
		{
		}

		[Token(Token = "0x60008E9")]
		[Address(RVA = "0x11E8CC0", Offset = "0x11E8CC0", VA = "0x11E8CC0")]
		public ColorGrabbable()
		{
		}
	}
	[Token(Token = "0x20001FC")]
	public class DistanceGrabbable : OVRGrabbable
	{
		[Token(Token = "0x400098B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string m_materialColorField;

		[Token(Token = "0x400098C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private GrabbableCrosshair m_crosshair;

		[Token(Token = "0x400098D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private GrabManager m_crosshairManager;

		[Token(Token = "0x400098E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Renderer m_renderer;

		[Token(Token = "0x400098F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private MaterialPropertyBlock m_mpb;

		[Token(Token = "0x4000990")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool m_inRange;

		[Token(Token = "0x4000991")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		private bool m_targeted;

		[Token(Token = "0x170000DC")]
		public bool InRange
		{
			[Token(Token = "0x60008EB")]
			[Address(RVA = "0xC62D24", Offset = "0xC62D24", VA = "0xC62D24")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60008EC")]
			[Address(RVA = "0xC62D2C", Offset = "0xC62D2C", VA = "0xC62D2C")]
			set
			{
			}
		}

		[Token(Token = "0x170000DD")]
		public bool Targeted
		{
			[Token(Token = "0x60008ED")]
			[Address(RVA = "0xC62EA4", Offset = "0xC62EA4", VA = "0xC62EA4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60008EE")]
			[Address(RVA = "0xC62EAC", Offset = "0xC62EAC", VA = "0xC62EAC")]
			set
			{
			}
		}

		[Token(Token = "0x60008EF")]
		[Address(RVA = "0xC62EB8", Offset = "0xC62EB8", VA = "0xC62EB8", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x60008F0")]
		[Address(RVA = "0xC62D38", Offset = "0xC62D38", VA = "0xC62D38")]
		private void RefreshCrosshair()
		{
		}

		[Token(Token = "0x60008F1")]
		[Address(RVA = "0xC63084", Offset = "0xC63084", VA = "0xC63084")]
		public DistanceGrabbable()
		{
		}
	}
	[Token(Token = "0x20001FD")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x7703C4", Offset = "0x7703C4")]
	public class DistanceGrabber : OVRGrabber
	{
		[Token(Token = "0x4000992")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[SerializeField]
		private float m_spherecastRadius;

		[Token(Token = "0x4000993")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private float m_noSnapThreshhold;

		[Token(Token = "0x4000994")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[SerializeField]
		private bool m_useSpherecast;

		[Token(Token = "0x4000995")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCD")]
		[SerializeField]
		public bool m_preventGrabThroughWalls;

		[Token(Token = "0x4000996")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private float m_objectPullVelocity;

		[Token(Token = "0x4000997")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private float m_objectPullMaxRotationRate;

		[Token(Token = "0x4000998")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private bool m_movingObjectToHand;

		[Token(Token = "0x4000999")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[SerializeField]
		private float m_maxGrabDistance;

		[Token(Token = "0x400099A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private int m_grabObjectsInLayer;

		[Token(Token = "0x400099B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[SerializeField]
		private int m_obstructionLayer;

		[Token(Token = "0x400099C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private DistanceGrabber m_otherHand;

		[Token(Token = "0x400099D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		protected DistanceGrabbable m_target;

		[Token(Token = "0x400099E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		protected Collider m_targetCollider;

		[Token(Token = "0x170000DE")]
		public bool UseSpherecast
		{
			[Token(Token = "0x60008F2")]
			[Address(RVA = "0xC6308C", Offset = "0xC6308C", VA = "0xC6308C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60008F3")]
			[Address(RVA = "0xC63094", Offset = "0xC63094", VA = "0xC63094")]
			set
			{
			}
		}

		[Token(Token = "0x60008F4")]
		[Address(RVA = "0xC630B0", Offset = "0xC630B0", VA = "0xC630B0", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x60008F5")]
		[Address(RVA = "0xC632E0", Offset = "0xC632E0", VA = "0xC632E0", Slot = "6")]
		public override void Update()
		{
		}

		[Token(Token = "0x60008F6")]
		[Address(RVA = "0xC63BA0", Offset = "0xC63BA0", VA = "0xC63BA0", Slot = "7")]
		protected override void GrabBegin()
		{
		}

		[Token(Token = "0x60008F7")]
		[Address(RVA = "0xC64018", Offset = "0xC64018", VA = "0xC64018", Slot = "8")]
		protected override void MoveGrabbedObject(Vector3 pos, Quaternion rot, bool forceTeleport = false)
		{
		}

		[Token(Token = "0x60008F8")]
		[Address(RVA = "0xC642D8", Offset = "0xC642D8", VA = "0xC642D8")]
		private static DistanceGrabbable HitInfoToGrabbable(RaycastHit hitInfo)
		{
			return null;
		}

		[Token(Token = "0x60008F9")]
		[Address(RVA = "0xC63534", Offset = "0xC63534", VA = "0xC63534")]
		protected bool FindTarget(out DistanceGrabbable dgOut, out Collider collOut)
		{
			return default(bool);
		}

		[Token(Token = "0x60008FA")]
		[Address(RVA = "0xC643C8", Offset = "0xC643C8", VA = "0xC643C8")]
		protected bool FindTargetWithSpherecast(out DistanceGrabbable dgOut, out Collider collOut)
		{
			return default(bool);
		}

		[Token(Token = "0x60008FB")]
		[Address(RVA = "0xC647C4", Offset = "0xC647C4", VA = "0xC647C4", Slot = "9")]
		protected override void GrabVolumeEnable(bool enabled)
		{
		}

		[Token(Token = "0x60008FC")]
		[Address(RVA = "0xC647DC", Offset = "0xC647DC", VA = "0xC647DC", Slot = "10")]
		protected override void OffhandGrabbed(OVRGrabbable grabbable)
		{
		}

		[Token(Token = "0x60008FD")]
		[Address(RVA = "0xC647E4", Offset = "0xC647E4", VA = "0xC647E4")]
		public DistanceGrabber()
		{
		}
	}
	[Token(Token = "0x20001FE")]
	public class GrabManager : MonoBehaviour
	{
		[Token(Token = "0x400099F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Collider m_grabVolume;

		[Token(Token = "0x40009A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color OutlineColorInRange;

		[Token(Token = "0x40009A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Color OutlineColorHighlighted;

		[Token(Token = "0x40009A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Color OutlineColorOutOfRange;

		[Token(Token = "0x60008FE")]
		[Address(RVA = "0xC6FA88", Offset = "0xC6FA88", VA = "0xC6FA88")]
		private void OnTriggerEnter(Collider otherCollider)
		{
		}

		[Token(Token = "0x60008FF")]
		[Address(RVA = "0xC6FB40", Offset = "0xC6FB40", VA = "0xC6FB40")]
		private void OnTriggerExit(Collider otherCollider)
		{
		}

		[Token(Token = "0x6000900")]
		[Address(RVA = "0xC6FBF4", Offset = "0xC6FBF4", VA = "0xC6FBF4")]
		public GrabManager()
		{
		}
	}
	[Token(Token = "0x20001FF")]
	public class GrabbableCrosshair : MonoBehaviour
	{
		[Token(Token = "0x2000200")]
		public enum CrosshairState
		{
			[Token(Token = "0x40009A8")]
			Disabled,
			[Token(Token = "0x40009A9")]
			Enabled,
			[Token(Token = "0x40009AA")]
			Targeted
		}

		[Token(Token = "0x40009A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CrosshairState m_state;

		[Token(Token = "0x40009A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform m_centerEyeAnchor;

		[Token(Token = "0x40009A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject m_targetedCrosshair;

		[Token(Token = "0x40009A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject m_enabledCrosshair;

		[Token(Token = "0x6000901")]
		[Address(RVA = "0xC6FCB4", Offset = "0xC6FCB4", VA = "0xC6FCB4")]
		private void Start()
		{
		}

		[Token(Token = "0x6000902")]
		[Address(RVA = "0xC62FE8", Offset = "0xC62FE8", VA = "0xC62FE8")]
		public void SetState(CrosshairState cs)
		{
		}

		[Token(Token = "0x6000903")]
		[Address(RVA = "0xC6FD18", Offset = "0xC6FD18", VA = "0xC6FD18")]
		private void Update()
		{
		}

		[Token(Token = "0x6000904")]
		[Address(RVA = "0xC6FD60", Offset = "0xC6FD60", VA = "0xC6FD60")]
		public GrabbableCrosshair()
		{
		}
	}
	[Token(Token = "0x2000201")]
	public class PauseOnInputLoss : MonoBehaviour
	{
		[Token(Token = "0x6000905")]
		[Address(RVA = "0xC44608", Offset = "0xC44608", VA = "0xC44608")]
		private void Start()
		{
		}

		[Token(Token = "0x6000906")]
		[Address(RVA = "0xC446F4", Offset = "0xC446F4", VA = "0xC446F4")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x6000907")]
		[Address(RVA = "0xC44700", Offset = "0xC44700", VA = "0xC44700")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x6000908")]
		[Address(RVA = "0xC4470C", Offset = "0xC4470C", VA = "0xC4470C")]
		public PauseOnInputLoss()
		{
		}
	}
	[Token(Token = "0x2000202")]
	public class BoneCapsuleTriggerLogic : MonoBehaviour
	{
		[Token(Token = "0x40009AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InteractableToolTags ToolTags;

		[Token(Token = "0x40009AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HashSet<ColliderZone> CollidersTouchingUs;

		[Token(Token = "0x40009AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<ColliderZone> _elementsToCleanUp;

		[Token(Token = "0x6000909")]
		[Address(RVA = "0xB4BCD4", Offset = "0xB4BCD4", VA = "0xB4BCD4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600090A")]
		[Address(RVA = "0xB4BD28", Offset = "0xB4BD28", VA = "0xB4BD28")]
		private void Update()
		{
		}

		[Token(Token = "0x600090B")]
		[Address(RVA = "0xB4C094", Offset = "0xB4C094", VA = "0xB4C094")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x600090C")]
		[Address(RVA = "0xB4C198", Offset = "0xB4C198", VA = "0xB4C198")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x600090D")]
		[Address(RVA = "0xB4BD2C", Offset = "0xB4BD2C", VA = "0xB4BD2C")]
		private void CleanUpDeadColliders()
		{
		}

		[Token(Token = "0x600090E")]
		[Address(RVA = "0xB4C29C", Offset = "0xB4C29C", VA = "0xB4C29C")]
		public BoneCapsuleTriggerLogic()
		{
		}
	}
	[Token(Token = "0x2000203")]
	public class ButtonController : Interactable
	{
		[Token(Token = "0x2000204")]
		public enum ContactTest
		{
			[Token(Token = "0x40009BD")]
			PerpenTest,
			[Token(Token = "0x40009BE")]
			BackwardsPress
		}

		[Token(Token = "0x40009AE")]
		private const float ENTRY_DOT_THRESHOLD = 0.8f;

		[Token(Token = "0x40009AF")]
		private const float PERP_DOT_THRESHOLD = 0.5f;

		[Token(Token = "0x40009B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private GameObject _proximityZone;

		[Token(Token = "0x40009B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject _contactZone;

		[Token(Token = "0x40009B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject _actionZone;

		[Token(Token = "0x40009B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private ContactTest[] _contactTests;

		[Token(Token = "0x40009B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Transform _buttonPlaneCenter;

		[Token(Token = "0x40009B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private bool _makeSureToolIsOnPositiveSide;

		[Token(Token = "0x40009B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[SerializeField]
		private Vector3 _localButtonDirection;

		[Token(Token = "0x40009B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private InteractableToolTags[] _allValidToolsTags;

		[Token(Token = "0x40009B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private int _toolTagsMask;

		[Token(Token = "0x40009B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[SerializeField]
		private bool _allowMultipleNearFieldInteraction;

		[Token(Token = "0x40009BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x772A1C", Offset = "0x772A1C")]
		private InteractableState <CurrentButtonState>k__BackingField;

		[Token(Token = "0x40009BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Dictionary<InteractableTool, InteractableState> _toolToState;

		[Token(Token = "0x170000DF")]
		public override int ValidToolTagsMask
		{
			[Token(Token = "0x600090F")]
			[Address(RVA = "0xB4CFF0", Offset = "0xB4CFF0", VA = "0xB4CFF0", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000E0")]
		public Vector3 LocalButtonDirection
		{
			[Token(Token = "0x6000910")]
			[Address(RVA = "0xB4CFF8", Offset = "0xB4CFF8", VA = "0xB4CFF8")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170000E1")]
		public InteractableState CurrentButtonState
		{
			[Token(Token = "0x6000911")]
			[Address(RVA = "0xB4D004", Offset = "0xB4D004", VA = "0xB4D004")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x776448", Offset = "0x776448")]
			get
			{
				return default(InteractableState);
			}
			[Token(Token = "0x6000912")]
			[Address(RVA = "0xB4D00C", Offset = "0xB4D00C", VA = "0xB4D00C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x776458", Offset = "0x776458")]
			private set
			{
			}
		}

		[Token(Token = "0x6000913")]
		[Address(RVA = "0xB4D014", Offset = "0xB4D014", VA = "0xB4D014", Slot = "9")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6000914")]
		[Address(RVA = "0xB4D100", Offset = "0xB4D100", VA = "0xB4D100")]
		private void FireInteractionEventsOnDepth(InteractableCollisionDepth oldDepth, InteractableTool collidingTool, InteractionType interactionType)
		{
		}

		[Token(Token = "0x6000915")]
		[Address(RVA = "0xB4D26C", Offset = "0xB4D26C", VA = "0xB4D26C", Slot = "8")]
		public override void UpdateCollisionDepth(InteractableTool interactableTool, InteractableCollisionDepth oldCollisionDepth, InteractableCollisionDepth newCollisionDepth)
		{
		}

		[Token(Token = "0x6000916")]
		[Address(RVA = "0xB4D824", Offset = "0xB4D824", VA = "0xB4D824")]
		private InteractableState GetUpcomingStateNearField(InteractableState oldState, InteractableCollisionDepth newCollisionDepth, bool toolIsInActionZone, bool toolIsInContactZone, bool toolIsInProximity, bool validContact, bool onPositiveSideOfInteractable)
		{
			return default(InteractableState);
		}

		[Token(Token = "0x6000917")]
		[Address(RVA = "0xB4D8D0", Offset = "0xB4D8D0", VA = "0xB4D8D0")]
		public void ForceResetButton()
		{
		}

		[Token(Token = "0x6000918")]
		[Address(RVA = "0xB4D73C", Offset = "0xB4D73C", VA = "0xB4D73C")]
		private bool IsValidContact(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x6000919")]
		[Address(RVA = "0xB4D9DC", Offset = "0xB4D9DC", VA = "0xB4D9DC")]
		private bool PassEntryTest(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x600091A")]
		[Address(RVA = "0xB4DA60", Offset = "0xB4DA60", VA = "0xB4DA60")]
		private bool PassPerpTest(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x600091B")]
		[Address(RVA = "0xB4DAEC", Offset = "0xB4DAEC", VA = "0xB4DAEC")]
		public ButtonController()
		{
		}
	}
	[Token(Token = "0x2000205")]
	public class ButtonTriggerZone : MonoBehaviour, ColliderZone
	{
		[Token(Token = "0x40009BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _parentInteractableObj;

		[Token(Token = "0x40009C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x772A3C", Offset = "0x772A3C")]
		private Collider <Collider>k__BackingField;

		[Token(Token = "0x40009C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x772A4C", Offset = "0x772A4C")]
		private Interactable <ParentInteractable>k__BackingField;

		[Token(Token = "0x170000E2")]
		public Collider Collider
		{
			[Token(Token = "0x600091C")]
			[Address(RVA = "0x11D6FB8", Offset = "0x11D6FB8", VA = "0x11D6FB8", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x776468", Offset = "0x776468")]
			get
			{
				return null;
			}
			[Token(Token = "0x600091D")]
			[Address(RVA = "0x11D6FC0", Offset = "0x11D6FC0", VA = "0x11D6FC0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x776478", Offset = "0x776478")]
			private set
			{
			}
		}

		[Token(Token = "0x170000E3")]
		public Interactable ParentInteractable
		{
			[Token(Token = "0x600091E")]
			[Address(RVA = "0x11D6FC8", Offset = "0x11D6FC8", VA = "0x11D6FC8", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x776488", Offset = "0x776488")]
			get
			{
				return null;
			}
			[Token(Token = "0x600091F")]
			[Address(RVA = "0x11D6FD0", Offset = "0x11D6FD0", VA = "0x11D6FD0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x776498", Offset = "0x776498")]
			private set
			{
			}
		}

		[Token(Token = "0x170000E4")]
		public InteractableCollisionDepth CollisionDepth
		{
			[Token(Token = "0x6000920")]
			[Address(RVA = "0x11D6FD8", Offset = "0x11D6FD8", VA = "0x11D6FD8", Slot = "6")]
			get
			{
				return default(InteractableCollisionDepth);
			}
		}

		[Token(Token = "0x6000921")]
		[Address(RVA = "0x11D7028", Offset = "0x11D7028", VA = "0x11D7028")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000922")]
		[Address(RVA = "0x11D70AC", Offset = "0x11D70AC", VA = "0x11D70AC")]
		public ButtonTriggerZone()
		{
		}
	}
	[Token(Token = "0x2000206")]
	public interface ColliderZone
	{
		[Token(Token = "0x170000E5")]
		Collider Collider
		{
			[Token(Token = "0x6000923")]
			get;
		}

		[Token(Token = "0x170000E6")]
		Interactable ParentInteractable
		{
			[Token(Token = "0x6000924")]
			get;
		}

		[Token(Token = "0x170000E7")]
		InteractableCollisionDepth CollisionDepth
		{
			[Token(Token = "0x6000925")]
			get;
		}
	}
	[Token(Token = "0x2000207")]
	public class ColliderZoneArgs : EventArgs
	{
		[Token(Token = "0x40009C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ColliderZone Collider;

		[Token(Token = "0x40009C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly float FrameTime;

		[Token(Token = "0x40009C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly InteractableTool CollidingTool;

		[Token(Token = "0x40009C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly InteractionType InteractionT;

		[Token(Token = "0x6000926")]
		[Address(RVA = "0x11E843C", Offset = "0x11E843C", VA = "0x11E843C")]
		public ColliderZoneArgs(ColliderZone collider, float frameTime, InteractableTool collidingTool, InteractionType interactionType)
		{
		}
	}
	[Token(Token = "0x2000208")]
	public enum InteractionType
	{
		[Token(Token = "0x40009C7")]
		Enter,
		[Token(Token = "0x40009C8")]
		Stay,
		[Token(Token = "0x40009C9")]
		Exit
	}
	[Token(Token = "0x2000209")]
	public class HandsManager : MonoBehaviour
	{
		[Token(Token = "0x200020A")]
		public enum HandsVisualMode
		{
			[Token(Token = "0x40009DB")]
			Mesh,
			[Token(Token = "0x40009DC")]
			Skeleton,
			[Token(Token = "0x40009DD")]
			Both
		}

		[Token(Token = "0x200020B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x770424", Offset = "0x770424")]
		private sealed class <FindSkeletonVisualGameObjects>d__52 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40009DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40009DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40009E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public HandsManager <>4__this;

			[Token(Token = "0x170000F3")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000948")]
				[Address(RVA = "0xB2BE2C", Offset = "0xB2BE2C", VA = "0xB2BE2C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000F4")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600094A")]
				[Address(RVA = "0xB2BE74", Offset = "0xB2BE74", VA = "0xB2BE74", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000945")]
			[Address(RVA = "0xB2BBCC", Offset = "0xB2BBCC", VA = "0xB2BBCC")]
			[DebuggerHidden]
			public <FindSkeletonVisualGameObjects>d__52(int <>1__state)
			{
			}

			[Token(Token = "0x6000946")]
			[Address(RVA = "0xB2BBF8", Offset = "0xB2BBF8", VA = "0xB2BBF8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000947")]
			[Address(RVA = "0xB2BBFC", Offset = "0xB2BBFC", VA = "0xB2BBFC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000949")]
			[Address(RVA = "0xB2BE34", Offset = "0xB2BE34", VA = "0xB2BE34", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40009CA")]
		private const string SKELETON_VISUALIZER_NAME = "SkeletonRenderer";

		[Token(Token = "0x40009CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _leftHand;

		[Token(Token = "0x40009CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject _rightHand;

		[Token(Token = "0x40009CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public HandsVisualMode VisualMode;

		[Token(Token = "0x40009CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private OVRHand[] _hand;

		[Token(Token = "0x40009CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private OVRSkeleton[] _handSkeleton;

		[Token(Token = "0x40009D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private OVRSkeletonRenderer[] _handSkeletonRenderer;

		[Token(Token = "0x40009D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private OVRMesh[] _handMesh;

		[Token(Token = "0x40009D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private OVRMeshRenderer[] _handMeshRenderer;

		[Token(Token = "0x40009D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private SkinnedMeshRenderer _leftMeshRenderer;

		[Token(Token = "0x40009D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private SkinnedMeshRenderer _rightMeshRenderer;

		[Token(Token = "0x40009D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject _leftSkeletonVisual;

		[Token(Token = "0x40009D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private GameObject _rightSkeletonVisual;

		[Token(Token = "0x40009D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float _currentHandAlpha;

		[Token(Token = "0x40009D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private int HandAlphaId;

		[Token(Token = "0x40009D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x772A7C", Offset = "0x772A7C")]
		private static HandsManager <Instance>k__BackingField;

		[Token(Token = "0x170000E8")]
		public OVRHand RightHand
		{
			[Token(Token = "0x6000927")]
			[Address(RVA = "0xBC12CC", Offset = "0xBC12CC", VA = "0xBC12CC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000928")]
			[Address(RVA = "0xBC1304", Offset = "0xBC1304", VA = "0xBC1304")]
			private set
			{
			}
		}

		[Token(Token = "0x170000E9")]
		public OVRSkeleton RightHandSkeleton
		{
			[Token(Token = "0x6000929")]
			[Address(RVA = "0xBC136C", Offset = "0xBC136C", VA = "0xBC136C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600092A")]
			[Address(RVA = "0xBC13A4", Offset = "0xBC13A4", VA = "0xBC13A4")]
			private set
			{
			}
		}

		[Token(Token = "0x170000EA")]
		public OVRSkeletonRenderer RightHandSkeletonRenderer
		{
			[Token(Token = "0x600092B")]
			[Address(RVA = "0xBC140C", Offset = "0xBC140C", VA = "0xBC140C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600092C")]
			[Address(RVA = "0xBC1444", Offset = "0xBC1444", VA = "0xBC1444")]
			private set
			{
			}
		}

		[Token(Token = "0x170000EB")]
		public OVRMesh RightHandMesh
		{
			[Token(Token = "0x600092D")]
			[Address(RVA = "0xBC14AC", Offset = "0xBC14AC", VA = "0xBC14AC")]
			get
			{
				return null;
			}
			[Token(Token = "0x600092E")]
			[Address(RVA = "0xBC14E4", Offset = "0xBC14E4", VA = "0xBC14E4")]
			private set
			{
			}
		}

		[Token(Token = "0x170000EC")]
		public OVRMeshRenderer RightHandMeshRenderer
		{
			[Token(Token = "0x600092F")]
			[Address(RVA = "0xBC154C", Offset = "0xBC154C", VA = "0xBC154C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000930")]
			[Address(RVA = "0xBC1584", Offset = "0xBC1584", VA = "0xBC1584")]
			private set
			{
			}
		}

		[Token(Token = "0x170000ED")]
		public OVRHand LeftHand
		{
			[Token(Token = "0x6000931")]
			[Address(RVA = "0xBC15EC", Offset = "0xBC15EC", VA = "0xBC15EC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000932")]
			[Address(RVA = "0xBC1620", Offset = "0xBC1620", VA = "0xBC1620")]
			private set
			{
			}
		}

		[Token(Token = "0x170000EE")]
		public OVRSkeleton LeftHandSkeleton
		{
			[Token(Token = "0x6000933")]
			[Address(RVA = "0xBC1684", Offset = "0xBC1684", VA = "0xBC1684")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000934")]
			[Address(RVA = "0xBC16B8", Offset = "0xBC16B8", VA = "0xBC16B8")]
			private set
			{
			}
		}

		[Token(Token = "0x170000EF")]
		public OVRSkeletonRenderer LeftHandSkeletonRenderer
		{
			[Token(Token = "0x6000935")]
			[Address(RVA = "0xBC171C", Offset = "0xBC171C", VA = "0xBC171C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000936")]
			[Address(RVA = "0xBC1750", Offset = "0xBC1750", VA = "0xBC1750")]
			private set
			{
			}
		}

		[Token(Token = "0x170000F0")]
		public OVRMesh LeftHandMesh
		{
			[Token(Token = "0x6000937")]
			[Address(RVA = "0xBC17B4", Offset = "0xBC17B4", VA = "0xBC17B4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000938")]
			[Address(RVA = "0xBC17E8", Offset = "0xBC17E8", VA = "0xBC17E8")]
			private set
			{
			}
		}

		[Token(Token = "0x170000F1")]
		public OVRMeshRenderer LeftHandMeshRenderer
		{
			[Token(Token = "0x6000939")]
			[Address(RVA = "0xBC184C", Offset = "0xBC184C", VA = "0xBC184C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600093A")]
			[Address(RVA = "0xBC1880", Offset = "0xBC1880", VA = "0xBC1880")]
			private set
			{
			}
		}

		[Token(Token = "0x170000F2")]
		public static HandsManager Instance
		{
			[Token(Token = "0x600093B")]
			[Address(RVA = "0xBC18E4", Offset = "0xBC18E4", VA = "0xBC18E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7764A8", Offset = "0x7764A8")]
			get
			{
				return null;
			}
			[Token(Token = "0x600093C")]
			[Address(RVA = "0xBC1930", Offset = "0xBC1930", VA = "0xBC1930")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7764B8", Offset = "0x7764B8")]
			private set
			{
			}
		}

		[Token(Token = "0x600093D")]
		[Address(RVA = "0xBC1980", Offset = "0xBC1980", VA = "0xBC1980")]
		private void Awake()
		{
		}

		[Token(Token = "0x600093E")]
		[Address(RVA = "0xBC1D28", Offset = "0xBC1D28", VA = "0xBC1D28")]
		private void Update()
		{
		}

		[Token(Token = "0x600093F")]
		[Address(RVA = "0xBC1CBC", Offset = "0xBC1CBC", VA = "0xBC1CBC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7764C8", Offset = "0x7764C8")]
		private IEnumerator FindSkeletonVisualGameObjects()
		{
			return null;
		}

		[Token(Token = "0x6000940")]
		[Address(RVA = "0xBC1DB0", Offset = "0xBC1DB0", VA = "0xBC1DB0")]
		public void SwitchVisualization()
		{
		}

		[Token(Token = "0x6000941")]
		[Address(RVA = "0xBC1E94", Offset = "0xBC1E94", VA = "0xBC1E94")]
		private void SetToCurrentVisualMode()
		{
		}

		[Token(Token = "0x6000942")]
		[Address(RVA = "0xBC2074", Offset = "0xBC2074", VA = "0xBC2074")]
		public static List<OVRBoneCapsule> GetCapsulesPerBone(OVRSkeleton skeleton, OVRSkeleton.BoneId boneId)
		{
			return null;
		}

		[Token(Token = "0x6000943")]
		[Address(RVA = "0xBC22B0", Offset = "0xBC22B0", VA = "0xBC22B0")]
		public bool IsInitialized()
		{
			return default(bool);
		}

		[Token(Token = "0x6000944")]
		[Address(RVA = "0xBC243C", Offset = "0xBC243C", VA = "0xBC243C")]
		public HandsManager()
		{
		}
	}
	[Token(Token = "0x200020C")]
	public abstract class Interactable : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200020D")]
		public class InteractableStateArgsEvent : UnityEvent<InteractableStateArgs>
		{
			[Token(Token = "0x600095C")]
			[Address(RVA = "0xB2BEB4", Offset = "0xB2BEB4", VA = "0xB2BEB4")]
			public InteractableStateArgsEvent()
			{
			}
		}

		[Token(Token = "0x40009E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected ColliderZone _proximityZoneCollider;

		[Token(Token = "0x40009E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected ColliderZone _contactZoneCollider;

		[Token(Token = "0x40009E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected ColliderZone _actionZoneCollider;

		[Token(Token = "0x40009E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public InteractableStateArgsEvent InteractableStateChanged;

		[Token(Token = "0x170000F5")]
		public ColliderZone ProximityCollider
		{
			[Token(Token = "0x600094B")]
			[Address(RVA = "0xBC69A4", Offset = "0xBC69A4", VA = "0xBC69A4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F6")]
		public ColliderZone ContactCollider
		{
			[Token(Token = "0x600094C")]
			[Address(RVA = "0xBC69AC", Offset = "0xBC69AC", VA = "0xBC69AC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F7")]
		public ColliderZone ActionCollider
		{
			[Token(Token = "0x600094D")]
			[Address(RVA = "0xBC69B4", Offset = "0xBC69B4", VA = "0xBC69B4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F8")]
		public virtual int ValidToolTagsMask
		{
			[Token(Token = "0x600094E")]
			[Address(RVA = "0xBC69BC", Offset = "0xBC69BC", VA = "0xBC69BC", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x14000014")]
		public event Action<ColliderZoneArgs> ProximityZoneEvent
		{
			[Token(Token = "0x600094F")]
			[Address(RVA = "0xBC69C4", Offset = "0xBC69C4", VA = "0xBC69C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x776578", Offset = "0x776578")]
			add
			{
			}
			[Token(Token = "0x6000950")]
			[Address(RVA = "0xBC6A64", Offset = "0xBC6A64", VA = "0xBC6A64")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x776588", Offset = "0x776588")]
			remove
			{
			}
		}

		[Token(Token = "0x14000015")]
		public event Action<ColliderZoneArgs> ContactZoneEvent
		{
			[Token(Token = "0x6000952")]
			[Address(RVA = "0xBC6B74", Offset = "0xBC6B74", VA = "0xBC6B74")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x776598", Offset = "0x776598")]
			add
			{
			}
			[Token(Token = "0x6000953")]
			[Address(RVA = "0xBC6C14", Offset = "0xBC6C14", VA = "0xBC6C14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7765A8", Offset = "0x7765A8")]
			remove
			{
			}
		}

		[Token(Token = "0x14000016")]
		public event Action<ColliderZoneArgs> ActionZoneEvent
		{
			[Token(Token = "0x6000955")]
			[Address(RVA = "0xBC6D24", Offset = "0xBC6D24", VA = "0xBC6D24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7765B8", Offset = "0x7765B8")]
			add
			{
			}
			[Token(Token = "0x6000956")]
			[Address(RVA = "0xBC6DC4", Offset = "0xBC6DC4", VA = "0xBC6DC4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7765C8", Offset = "0x7765C8")]
			remove
			{
			}
		}

		[Token(Token = "0x6000951")]
		[Address(RVA = "0xBC6B04", Offset = "0xBC6B04", VA = "0xBC6B04", Slot = "5")]
		protected virtual void OnProximityZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x6000954")]
		[Address(RVA = "0xBC6CB4", Offset = "0xBC6CB4", VA = "0xBC6CB4", Slot = "6")]
		protected virtual void OnContactZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x6000957")]
		[Address(RVA = "0xBC6E64", Offset = "0xBC6E64", VA = "0xBC6E64", Slot = "7")]
		protected virtual void OnActionZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x6000958")]
		public abstract void UpdateCollisionDepth(InteractableTool interactableTool, InteractableCollisionDepth oldCollisionDepth, InteractableCollisionDepth newCollisionDepth);

		[Token(Token = "0x6000959")]
		[Address(RVA = "0xBC6ED4", Offset = "0xBC6ED4", VA = "0xBC6ED4", Slot = "9")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x600095A")]
		[Address(RVA = "0xBC7000", Offset = "0xBC7000", VA = "0xBC7000", Slot = "10")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x600095B")]
		[Address(RVA = "0xBC712C", Offset = "0xBC712C", VA = "0xBC712C")]
		protected Interactable()
		{
		}
	}
	[Token(Token = "0x200020E")]
	public enum InteractableCollisionDepth
	{
		[Token(Token = "0x40009E9")]
		None,
		[Token(Token = "0x40009EA")]
		Proximity,
		[Token(Token = "0x40009EB")]
		Contact,
		[Token(Token = "0x40009EC")]
		Action
	}
	[Token(Token = "0x200020F")]
	public enum InteractableState
	{
		[Token(Token = "0x40009EE")]
		Default,
		[Token(Token = "0x40009EF")]
		ProximityState,
		[Token(Token = "0x40009F0")]
		ContactState,
		[Token(Token = "0x40009F1")]
		ActionState
	}
	[Token(Token = "0x2000210")]
	public class InteractableStateArgs : EventArgs
	{
		[Token(Token = "0x40009F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly Interactable Interactable;

		[Token(Token = "0x40009F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly InteractableTool Tool;

		[Token(Token = "0x40009F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly InteractableState OldInteractableState;

		[Token(Token = "0x40009F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public readonly InteractableState NewInteractableState;

		[Token(Token = "0x40009F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly ColliderZoneArgs ColliderArgs;

		[Token(Token = "0x600095D")]
		[Address(RVA = "0xBC726C", Offset = "0xBC726C", VA = "0xBC726C")]
		public InteractableStateArgs(Interactable interactable, InteractableTool tool, InteractableState newInteractableState, InteractableState oldState, ColliderZoneArgs colliderArgs)
		{
		}
	}
	[Token(Token = "0x2000211")]
	public class InteractableRegistry : MonoBehaviour
	{
		[Token(Token = "0x40009F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static HashSet<Interactable> _interactables;

		[Token(Token = "0x170000F9")]
		public static HashSet<Interactable> Interactables
		{
			[Token(Token = "0x600095E")]
			[Address(RVA = "0xBC7178", Offset = "0xBC7178", VA = "0xBC7178")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600095F")]
		[Address(RVA = "0xBC6F34", Offset = "0xBC6F34", VA = "0xBC6F34")]
		public static void RegisterInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x6000960")]
		[Address(RVA = "0xBC7060", Offset = "0xBC7060", VA = "0xBC7060")]
		public static void UnregisterInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x6000961")]
		[Address(RVA = "0xBC71DC", Offset = "0xBC71DC", VA = "0xBC71DC")]
		public InteractableRegistry()
		{
		}
	}
	[Token(Token = "0x2000212")]
	public class InteractableToolsCreator : MonoBehaviour
	{
		[Token(Token = "0x2000213")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x770434", Offset = "0x770434")]
		private sealed class <AttachToolsToHands>d__3 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40009FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40009FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40009FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Transform[] toolObjects;

			[Token(Token = "0x40009FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool isRightHand;

			[Token(Token = "0x40009FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public InteractableToolsCreator <>4__this;

			[Token(Token = "0x40009FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private HandsManager <handsManagerObj>5__2;

			[Token(Token = "0x4000A00")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private HashSet<Transform>.Enumerator <>7__wrap2;

			[Token(Token = "0x4000A01")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private Transform <toolObject>5__4;

			[Token(Token = "0x4000A02")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private OVRSkeleton <handSkeletonToAttachTo>5__5;

			[Token(Token = "0x170000FA")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600096B")]
				[Address(RVA = "0xB2C39C", Offset = "0xB2C39C", VA = "0xB2C39C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000FB")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600096D")]
				[Address(RVA = "0xB2C3E4", Offset = "0xB2C3E4", VA = "0xB2C3E4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000967")]
			[Address(RVA = "0xB2BF00", Offset = "0xB2BF00", VA = "0xB2BF00")]
			[DebuggerHidden]
			public <AttachToolsToHands>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x6000968")]
			[Address(RVA = "0xB2BF2C", Offset = "0xB2BF2C", VA = "0xB2BF2C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000969")]
			[Address(RVA = "0xB2BF9C", Offset = "0xB2BF9C", VA = "0xB2BF9C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600096A")]
			[Address(RVA = "0xB2BF48", Offset = "0xB2BF48", VA = "0xB2BF48")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x600096C")]
			[Address(RVA = "0xB2C3A4", Offset = "0xB2C3A4", VA = "0xB2C3A4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40009F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform[] LeftHandTools;

		[Token(Token = "0x40009F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform[] RightHandTools;

		[Token(Token = "0x6000963")]
		[Address(RVA = "0xBC7F58", Offset = "0xBC7F58", VA = "0xBC7F58")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000964")]
		[Address(RVA = "0xBC7FD4", Offset = "0xBC7FD4", VA = "0xBC7FD4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7765D8", Offset = "0x7765D8")]
		private IEnumerator AttachToolsToHands(Transform[] toolObjects, bool isRightHand)
		{
			return null;
		}

		[Token(Token = "0x6000965")]
		[Address(RVA = "0xBC805C", Offset = "0xBC805C", VA = "0xBC805C")]
		private void AttachToolToHandTransform(Transform tool, bool isRightHanded)
		{
		}

		[Token(Token = "0x6000966")]
		[Address(RVA = "0xBC8144", Offset = "0xBC8144", VA = "0xBC8144")]
		public InteractableToolsCreator()
		{
		}
	}
	[Token(Token = "0x2000214")]
	public class InteractableToolsInputRouter : MonoBehaviour
	{
		[Token(Token = "0x4000A03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static InteractableToolsInputRouter _instance;

		[Token(Token = "0x4000A04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool _leftPinch;

		[Token(Token = "0x4000A05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool _rightPinch;

		[Token(Token = "0x4000A06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private HashSet<InteractableTool> _leftHandNearTools;

		[Token(Token = "0x4000A07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private HashSet<InteractableTool> _leftHandFarTools;

		[Token(Token = "0x4000A08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private HashSet<InteractableTool> _rightHandNearTools;

		[Token(Token = "0x4000A09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private HashSet<InteractableTool> _rightHandFarTools;

		[Token(Token = "0x170000FC")]
		public static InteractableToolsInputRouter Instance
		{
			[Token(Token = "0x600096E")]
			[Address(RVA = "0xBC814C", Offset = "0xBC814C", VA = "0xBC814C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600096F")]
		[Address(RVA = "0xBC82C8", Offset = "0xBC82C8", VA = "0xBC82C8")]
		public void RegisterInteractableTool(InteractableTool interactableTool)
		{
		}

		[Token(Token = "0x6000970")]
		[Address(RVA = "0xBC8370", Offset = "0xBC8370", VA = "0xBC8370")]
		public void UnregisterInteractableTool(InteractableTool interactableTool)
		{
		}

		[Token(Token = "0x6000971")]
		[Address(RVA = "0xBC8418", Offset = "0xBC8418", VA = "0xBC8418")]
		private void Update()
		{
		}

		[Token(Token = "0x6000972")]
		[Address(RVA = "0xBC86C4", Offset = "0xBC86C4", VA = "0xBC86C4")]
		private bool UpdateToolsAndEnableState(HashSet<InteractableTool> tools, bool toolsAreEnabledThisFrame)
		{
			return default(bool);
		}

		[Token(Token = "0x6000973")]
		[Address(RVA = "0xBC870C", Offset = "0xBC870C", VA = "0xBC870C")]
		private bool UpdateTools(HashSet<InteractableTool> tools, bool resetCollisionData = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6000974")]
		[Address(RVA = "0xBC89A0", Offset = "0xBC89A0", VA = "0xBC89A0")]
		private void ToggleToolsEnableState(HashSet<InteractableTool> tools, bool enableState)
		{
		}

		[Token(Token = "0x6000975")]
		[Address(RVA = "0xBC8AEC", Offset = "0xBC8AEC", VA = "0xBC8AEC")]
		public InteractableToolsInputRouter()
		{
		}
	}
	[Token(Token = "0x2000215")]
	public class FingerTipPokeTool : InteractableTool
	{
		[Token(Token = "0x2000216")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x770444", Offset = "0x770444")]
		private sealed class <AttachTriggerLogic>d__21 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000A15")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000A16")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000A17")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FingerTipPokeTool <>4__this;

			[Token(Token = "0x17000101")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000987")]
				[Address(RVA = "0xB2A5B0", Offset = "0xB2A5B0", VA = "0xB2A5B0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000102")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000989")]
				[Address(RVA = "0xB2A5F8", Offset = "0xB2A5F8", VA = "0xB2A5F8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000984")]
			[Address(RVA = "0xB2A19C", Offset = "0xB2A19C", VA = "0xB2A19C")]
			[DebuggerHidden]
			public <AttachTriggerLogic>d__21(int <>1__state)
			{
			}

			[Token(Token = "0x6000985")]
			[Address(RVA = "0xB2A1C8", Offset = "0xB2A1C8", VA = "0xB2A1C8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000986")]
			[Address(RVA = "0xB2A1CC", Offset = "0xB2A1CC", VA = "0xB2A1CC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000988")]
			[Address(RVA = "0xB2A5B8", Offset = "0xB2A5B8", VA = "0xB2A5B8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000A0A")]
		private const int NUM_VELOCITY_FRAMES = 10;

		[Token(Token = "0x4000A0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private FingerTipPokeToolView _fingerTipPokeToolView;

		[Token(Token = "0x4000A0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private OVRPlugin.HandFinger _fingerToFollow;

		[Token(Token = "0x4000A0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3[] _velocityFrames;

		[Token(Token = "0x4000A0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int _currVelocityFrame;

		[Token(Token = "0x4000A0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private bool _sampledMaxFramesAlready;

		[Token(Token = "0x4000A10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Vector3 _position;

		[Token(Token = "0x4000A11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private BoneCapsuleTriggerLogic[] _boneCapsuleTriggerLogic;

		[Token(Token = "0x4000A12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float _lastScale;

		[Token(Token = "0x4000A13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private bool _isInitialized;

		[Token(Token = "0x4000A14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private OVRBoneCapsule _capsuleToTrack;

		[Token(Token = "0x170000FD")]
		public override InteractableToolTags ToolTags
		{
			[Token(Token = "0x6000976")]
			[Address(RVA = "0xC68804", Offset = "0xC68804", VA = "0xC68804", Slot = "4")]
			get
			{
				return default(InteractableToolTags);
			}
		}

		[Token(Token = "0x170000FE")]
		public override ToolInputState ToolInputState
		{
			[Token(Token = "0x6000977")]
			[Address(RVA = "0xC6880C", Offset = "0xC6880C", VA = "0xC6880C", Slot = "5")]
			get
			{
				return default(ToolInputState);
			}
		}

		[Token(Token = "0x170000FF")]
		public override bool IsFarFieldTool
		{
			[Token(Token = "0x6000978")]
			[Address(RVA = "0xC68814", Offset = "0xC68814", VA = "0xC68814", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000100")]
		public override bool EnableState
		{
			[Token(Token = "0x6000979")]
			[Address(RVA = "0xC6881C", Offset = "0xC6881C", VA = "0xC6881C", Slot = "10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600097A")]
			[Address(RVA = "0xC68848", Offset = "0xC68848", VA = "0xC68848", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x600097B")]
		[Address(RVA = "0xC68884", Offset = "0xC68884", VA = "0xC68884", Slot = "12")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x600097C")]
		[Address(RVA = "0xC68924", Offset = "0xC68924", VA = "0xC68924")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x776688", Offset = "0x776688")]
		private IEnumerator AttachTriggerLogic()
		{
			return null;
		}

		[Token(Token = "0x600097D")]
		[Address(RVA = "0xC68990", Offset = "0xC68990", VA = "0xC68990")]
		private void Update()
		{
		}

		[Token(Token = "0x600097E")]
		[Address(RVA = "0xC68C30", Offset = "0xC68C30", VA = "0xC68C30")]
		private void UpdateAverageVelocity()
		{
		}

		[Token(Token = "0x600097F")]
		[Address(RVA = "0xC68DBC", Offset = "0xC68DBC", VA = "0xC68DBC")]
		private void CheckAndUpdateScale()
		{
		}

		[Token(Token = "0x6000980")]
		[Address(RVA = "0xC68EB4", Offset = "0xC68EB4", VA = "0xC68EB4", Slot = "7")]
		public override List<InteractableCollisionInfo> GetNextIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x6000981")]
		[Address(RVA = "0xC691AC", Offset = "0xC691AC", VA = "0xC691AC", Slot = "8")]
		public override void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone)
		{
		}

		[Token(Token = "0x6000982")]
		[Address(RVA = "0xC691B0", Offset = "0xC691B0", VA = "0xC691B0", Slot = "9")]
		public override void DeFocus()
		{
		}

		[Token(Token = "0x6000983")]
		[Address(RVA = "0xC691B4", Offset = "0xC691B4", VA = "0xC691B4")]
		public FingerTipPokeTool()
		{
		}
	}
	[Token(Token = "0x2000217")]
	public class FingerTipPokeToolView : MonoBehaviour, InteractableToolView
	{
		[Token(Token = "0x4000A18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _sphereMeshRenderer;

		[Token(Token = "0x4000A19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x772B0C", Offset = "0x772B0C")]
		private InteractableTool <InteractableTool>k__BackingField;

		[Token(Token = "0x4000A1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x772B1C", Offset = "0x772B1C")]
		private bool <ToolActivateState>k__BackingField;

		[Token(Token = "0x4000A1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x772B2C", Offset = "0x772B2C")]
		private float <SphereRadius>k__BackingField;

		[Token(Token = "0x17000103")]
		public InteractableTool InteractableTool
		{
			[Token(Token = "0x600098A")]
			[Address(RVA = "0xC691CC", Offset = "0xC691CC", VA = "0xC691CC", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x776738", Offset = "0x776738")]
			get
			{
				return null;
			}
			[Token(Token = "0x600098B")]
			[Address(RVA = "0xC691D4", Offset = "0xC691D4", VA = "0xC691D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x776748", Offset = "0x776748")]
			set
			{
			}
		}

		[Token(Token = "0x17000104")]
		public bool EnableState
		{
			[Token(Token = "0x600098C")]
			[Address(RVA = "0xC691DC", Offset = "0xC691DC", VA = "0xC691DC", Slot = "6")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600098D")]
			[Address(RVA = "0xC691F8", Offset = "0xC691F8", VA = "0xC691F8", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x17000105")]
		public bool ToolActivateState
		{
			[Token(Token = "0x600098E")]
			[Address(RVA = "0xC69218", Offset = "0xC69218", VA = "0xC69218", Slot = "8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x776758", Offset = "0x776758")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600098F")]
			[Address(RVA = "0xC69220", Offset = "0xC69220", VA = "0xC69220", Slot = "9")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x776768", Offset = "0x776768")]
			set
			{
			}
		}

		[Token(Token = "0x17000106")]
		public float SphereRadius
		{
			[Token(Token = "0x6000990")]
			[Address(RVA = "0xC6922C", Offset = "0xC6922C", VA = "0xC6922C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x776778", Offset = "0x776778")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000991")]
			[Address(RVA = "0xC69234", Offset = "0xC69234", VA = "0xC69234")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x776788", Offset = "0x776788")]
			private set
			{
			}
		}

		[Token(Token = "0x6000992")]
		[Address(RVA = "0xC6923C", Offset = "0xC6923C", VA = "0xC6923C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000993")]
		[Address(RVA = "0xC69284", Offset = "0xC69284", VA = "0xC69284", Slot = "5")]
		public void SetFocusedInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x6000994")]
		[Address(RVA = "0xC69288", Offset = "0xC69288", VA = "0xC69288")]
		public FingerTipPokeToolView()
		{
		}
	}
	[Token(Token = "0x2000218")]
	[Flags]
	public enum InteractableToolTags
	{
		[Token(Token = "0x4000A1D")]
		None = 0,
		[Token(Token = "0x4000A1E")]
		Ray = 1,
		[Token(Token = "0x4000A1F")]
		Poke = 4,
		[Token(Token = "0x4000A20")]
		All = -1
	}
	[Token(Token = "0x2000219")]
	public enum ToolInputState
	{
		[Token(Token = "0x4000A22")]
		Inactive,
		[Token(Token = "0x4000A23")]
		PrimaryInputDown,
		[Token(Token = "0x4000A24")]
		PrimaryInputDownStay,
		[Token(Token = "0x4000A25")]
		PrimaryInputUp
	}
	[Token(Token = "0x200021A")]
	public class InteractableCollisionInfo
	{
		[Token(Token = "0x4000A26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ColliderZone InteractableCollider;

		[Token(Token = "0x4000A27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InteractableCollisionDepth CollisionDepth;

		[Token(Token = "0x4000A28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InteractableTool CollidingTool;

		[Token(Token = "0x6000995")]
		[Address(RVA = "0xBC7134", Offset = "0xBC7134", VA = "0xBC7134")]
		public InteractableCollisionInfo(ColliderZone collider, InteractableCollisionDepth collisionDepth, InteractableTool collidingTool)
		{
		}
	}
	[Token(Token = "0x200021B")]
	public abstract class InteractableTool : MonoBehaviour
	{
		[Token(Token = "0x4000A29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x772B3C", Offset = "0x772B3C")]
		private bool <IsRightHandedTool>k__BackingField;

		[Token(Token = "0x4000A2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x772B4C", Offset = "0x772B4C")]
		private Vector3 <Velocity>k__BackingField;

		[Token(Token = "0x4000A2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x772B5C", Offset = "0x772B5C")]
		private Vector3 <InteractionPosition>k__BackingField;

		[Token(Token = "0x4000A2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected List<InteractableCollisionInfo> _currentIntersectingObjects;

		[Token(Token = "0x4000A2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<Interactable> _addedInteractables;

		[Token(Token = "0x4000A2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Interactable> _removedInteractables;

		[Token(Token = "0x4000A2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<Interactable> _remainingInteractables;

		[Token(Token = "0x4000A30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Dictionary<Interactable, InteractableCollisionInfo> _currInteractableToCollisionInfos;

		[Token(Token = "0x4000A31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Dictionary<Interactable, InteractableCollisionInfo> _prevInteractableToCollisionInfos;

		[Token(Token = "0x17000107")]
		public Transform ToolTransform
		{
			[Token(Token = "0x6000996")]
			[Address(RVA = "0xBC730C", Offset = "0xBC730C", VA = "0xBC730C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000108")]
		public bool IsRightHandedTool
		{
			[Token(Token = "0x6000997")]
			[Address(RVA = "0xBC7314", Offset = "0xBC7314", VA = "0xBC7314")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x776798", Offset = "0x776798")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000998")]
			[Address(RVA = "0xBC731C", Offset = "0xBC731C", VA = "0xBC731C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7767A8", Offset = "0x7767A8")]
			set
			{
			}
		}

		[Token(Token = "0x17000109")]
		public abstract InteractableToolTags ToolTags
		{
			[Token(Token = "0x6000999")]
			get;
		}

		[Token(Token = "0x1700010A")]
		public abstract ToolInputState ToolInputState
		{
			[Token(Token = "0x600099A")]
			get;
		}

		[Token(Token = "0x1700010B")]
		public abstract bool IsFarFieldTool
		{
			[Token(Token = "0x600099B")]
			get;
		}

		[Token(Token = "0x1700010C")]
		public Vector3 Velocity
		{
			[Token(Token = "0x600099C")]
			[Address(RVA = "0xBC7328", Offset = "0xBC7328", VA = "0xBC7328")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7767B8", Offset = "0x7767B8")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x600099D")]
			[Address(RVA = "0xBC7334", Offset = "0xBC7334", VA = "0xBC7334")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7767C8", Offset = "0x7767C8")]
			protected set
			{
			}
		}

		[Token(Token = "0x1700010D")]
		public Vector3 InteractionPosition
		{
			[Token(Token = "0x600099E")]
			[Address(RVA = "0xBC7340", Offset = "0xBC7340", VA = "0xBC7340")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7767D8", Offset = "0x7767D8")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x600099F")]
			[Address(RVA = "0xBC734C", Offset = "0xBC734C", VA = "0xBC734C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7767E8", Offset = "0x7767E8")]
			protected set
			{
			}
		}

		[Token(Token = "0x1700010E")]
		public abstract bool EnableState
		{
			[Token(Token = "0x60009A4")]
			get;
			[Token(Token = "0x60009A5")]
			set;
		}

		[Token(Token = "0x60009A0")]
		[Address(RVA = "0xBC7358", Offset = "0xBC7358", VA = "0xBC7358")]
		public List<InteractableCollisionInfo> GetCurrentIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x60009A1")]
		public abstract List<InteractableCollisionInfo> GetNextIntersectingObjects();

		[Token(Token = "0x60009A2")]
		public abstract void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone);

		[Token(Token = "0x60009A3")]
		public abstract void DeFocus();

		[Token(Token = "0x60009A6")]
		public abstract void Initialize();

		[Token(Token = "0x60009A7")]
		[Address(RVA = "0xBC7360", Offset = "0xBC7360", VA = "0xBC7360")]
		public KeyValuePair<Interactable, InteractableCollisionInfo> GetFirstCurrentCollisionInfo()
		{
			return default(KeyValuePair<Interactable, InteractableCollisionInfo>);
		}

		[Token(Token = "0x60009A8")]
		[Address(RVA = "0xBC73AC", Offset = "0xBC73AC", VA = "0xBC73AC")]
		public void ClearAllCurrentCollisionInfos()
		{
		}

		[Token(Token = "0x60009A9")]
		[Address(RVA = "0xBC7400", Offset = "0xBC7400", VA = "0xBC7400", Slot = "13")]
		public virtual void UpdateCurrentCollisionsBasedOnDepth()
		{
		}

		[Token(Token = "0x60009AA")]
		[Address(RVA = "0xBC7694", Offset = "0xBC7694", VA = "0xBC7694", Slot = "14")]
		public virtual void UpdateLatestCollisionData()
		{
		}

		[Token(Token = "0x60009AB")]
		[Address(RVA = "0xBC7E10", Offset = "0xBC7E10", VA = "0xBC7E10")]
		protected InteractableTool()
		{
		}
	}
	[Token(Token = "0x200021C")]
	public interface InteractableToolView
	{
		[Token(Token = "0x1700010F")]
		InteractableTool InteractableTool
		{
			[Token(Token = "0x60009AC")]
			get;
		}

		[Token(Token = "0x17000110")]
		bool EnableState
		{
			[Token(Token = "0x60009AE")]
			get;
			[Token(Token = "0x60009AF")]
			set;
		}

		[Token(Token = "0x17000111")]
		bool ToolActivateState
		{
			[Token(Token = "0x60009B0")]
			get;
			[Token(Token = "0x60009B1")]
			set;
		}

		[Token(Token = "0x60009AD")]
		void SetFocusedInteractable(Interactable interactable);
	}
	[Token(Token = "0x200021D")]
	public class PinchStateModule
	{
		[Token(Token = "0x200021E")]
		private enum PinchState
		{
			[Token(Token = "0x4000A36")]
			None,
			[Token(Token = "0x4000A37")]
			PinchDown,
			[Token(Token = "0x4000A38")]
			PinchStay,
			[Token(Token = "0x4000A39")]
			PinchUp
		}

		[Token(Token = "0x4000A32")]
		private const float PINCH_STRENGTH_THRESHOLD = 1f;

		[Token(Token = "0x4000A33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private PinchState _currPinchState;

		[Token(Token = "0x4000A34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Interactable _firstFocusedInteractable;

		[Token(Token = "0x17000112")]
		public bool PinchUpAndDownOnFocusedObject
		{
			[Token(Token = "0x60009B2")]
			[Address(RVA = "0xC45DB0", Offset = "0xC45DB0", VA = "0xC45DB0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000113")]
		public bool PinchSteadyOnFocusedObject
		{
			[Token(Token = "0x60009B3")]
			[Address(RVA = "0xC45E38", Offset = "0xC45E38", VA = "0xC45E38")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000114")]
		public bool PinchDownOnFocusedObject
		{
			[Token(Token = "0x60009B4")]
			[Address(RVA = "0xC45EC0", Offset = "0xC45EC0", VA = "0xC45EC0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60009B5")]
		[Address(RVA = "0xC45F48", Offset = "0xC45F48", VA = "0xC45F48")]
		public PinchStateModule()
		{
		}

		[Token(Token = "0x60009B6")]
		[Address(RVA = "0xC45F74", Offset = "0xC45F74", VA = "0xC45F74")]
		public void UpdateState(OVRHand hand, Interactable currFocusedInteractable)
		{
		}
	}
	[Token(Token = "0x200021F")]
	public class RayTool : InteractableTool
	{
		[Token(Token = "0x4000A3A")]
		private const float MINIMUM_RAY_CAST_DISTANCE = 0.8f;

		[Token(Token = "0x4000A3B")]
		private const float COLLIDER_RADIUS = 0.01f;

		[Token(Token = "0x4000A3C")]
		private const int NUM_MAX_PRIMARY_HITS = 10;

		[Token(Token = "0x4000A3D")]
		private const int NUM_MAX_SECONDARY_HITS = 25;

		[Token(Token = "0x4000A3E")]
		private const int NUM_COLLIDERS_TO_TEST = 20;

		[Token(Token = "0x4000A3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private RayToolView _rayToolView;

		[Token(Token = "0x4000A40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x772B7C", Offset = "0x772B7C")]
		private float _coneAngleDegrees;

		[Token(Token = "0x4000A41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[SerializeField]
		private float _farFieldMaxDistance;

		[Token(Token = "0x4000A42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private PinchStateModule _pinchStateModule;

		[Token(Token = "0x4000A43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Interactable _focusedInteractable;

		[Token(Token = "0x4000A44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Collider[] _collidersOverlapped;

		[Token(Token = "0x4000A45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Interactable _currInteractableCastedAgainst;

		[Token(Token = "0x4000A46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float _coneAngleReleaseDegrees;

		[Token(Token = "0x4000A47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private RaycastHit[] _primaryHits;

		[Token(Token = "0x4000A48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Collider[] _secondaryOverlapResults;

		[Token(Token = "0x4000A49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private bool _initialized;

		[Token(Token = "0x17000115")]
		public override InteractableToolTags ToolTags
		{
			[Token(Token = "0x60009B7")]
			[Address(RVA = "0xCF043C", Offset = "0xCF043C", VA = "0xCF043C", Slot = "4")]
			get
			{
				return default(InteractableToolTags);
			}
		}

		[Token(Token = "0x17000116")]
		public override ToolInputState ToolInputState
		{
			[Token(Token = "0x60009B8")]
			[Address(RVA = "0xCF0444", Offset = "0xCF0444", VA = "0xCF0444", Slot = "5")]
			get
			{
				return default(ToolInputState);
			}
		}

		[Token(Token = "0x17000117")]
		public override bool IsFarFieldTool
		{
			[Token(Token = "0x60009B9")]
			[Address(RVA = "0xCF04B8", Offset = "0xCF04B8", VA = "0xCF04B8", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000118")]
		public override bool EnableState
		{
			[Token(Token = "0x60009BA")]
			[Address(RVA = "0xCF04C0", Offset = "0xCF04C0", VA = "0xCF04C0", Slot = "10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60009BB")]
			[Address(RVA = "0xCF0504", Offset = "0xCF0504", VA = "0xCF0504", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x60009BC")]
		[Address(RVA = "0xCF0578", Offset = "0xCF0578", VA = "0xCF0578", Slot = "12")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x60009BD")]
		[Address(RVA = "0xCF05D8", Offset = "0xCF05D8", VA = "0xCF05D8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60009BE")]
		[Address(RVA = "0xCF067C", Offset = "0xCF067C", VA = "0xCF067C")]
		private void Update()
		{
		}

		[Token(Token = "0x60009BF")]
		[Address(RVA = "0xCF0940", Offset = "0xCF0940", VA = "0xCF0940")]
		private Vector3 GetRayCastOrigin()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60009C0")]
		[Address(RVA = "0xCF09C8", Offset = "0xCF09C8", VA = "0xCF09C8", Slot = "7")]
		public override List<InteractableCollisionInfo> GetNextIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x60009C1")]
		[Address(RVA = "0xCF0D70", Offset = "0xCF0D70", VA = "0xCF0D70")]
		private bool HasRayReleasedInteractable(Interactable focusedInteractable)
		{
			return default(bool);
		}

		[Token(Token = "0x60009C2")]
		[Address(RVA = "0xCF0E80", Offset = "0xCF0E80", VA = "0xCF0E80")]
		private Interactable FindTargetInteractable()
		{
			return null;
		}

		[Token(Token = "0x60009C3")]
		[Address(RVA = "0xCF0FA4", Offset = "0xCF0FA4", VA = "0xCF0FA4")]
		private Interactable FindPrimaryRaycastHit(Vector3 rayOrigin, Vector3 rayDirection)
		{
			return null;
		}

		[Token(Token = "0x60009C4")]
		[Address(RVA = "0xCF12A8", Offset = "0xCF12A8", VA = "0xCF12A8")]
		private Interactable FindInteractableViaConeTest(Vector3 rayOrigin, Vector3 rayDirection)
		{
			return null;
		}

		[Token(Token = "0x60009C5")]
		[Address(RVA = "0xCF163C", Offset = "0xCF163C", VA = "0xCF163C", Slot = "8")]
		public override void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone)
		{
		}

		[Token(Token = "0x60009C6")]
		[Address(RVA = "0xCF170C", Offset = "0xCF170C", VA = "0xCF170C", Slot = "9")]
		public override void DeFocus()
		{
		}

		[Token(Token = "0x60009C7")]
		[Address(RVA = "0xCF1740", Offset = "0xCF1740", VA = "0xCF1740")]
		public RayTool()
		{
		}
	}
	[Token(Token = "0x2000220")]
	public class RayToolView : MonoBehaviour, InteractableToolView
	{
		[Token(Token = "0x4000A4A")]
		private const int NUM_RAY_LINE_POSITIONS = 25;

		[Token(Token = "0x4000A4B")]
		private const float DEFAULT_RAY_CAST_DISTANCE = 3f;

		[Token(Token = "0x4000A4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform _targetTransform;

		[Token(Token = "0x4000A4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private LineRenderer _lineRenderer;

		[Token(Token = "0x4000A4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool _toolActivateState;

		[Token(Token = "0x4000A4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform _focusedTransform;

		[Token(Token = "0x4000A50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3[] linePositions;

		[Token(Token = "0x4000A51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Gradient _oldColorGradient;

		[Token(Token = "0x4000A52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Gradient _highLightColorGradient;

		[Token(Token = "0x4000A53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x772BF0", Offset = "0x772BF0")]
		private InteractableTool <InteractableTool>k__BackingField;

		[Token(Token = "0x17000119")]
		public bool EnableState
		{
			[Token(Token = "0x60009C8")]
			[Address(RVA = "0xCF04E8", Offset = "0xCF04E8", VA = "0xCF04E8", Slot = "6")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60009C9")]
			[Address(RVA = "0xCF0520", Offset = "0xCF0520", VA = "0xCF0520", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x1700011A")]
		public bool ToolActivateState
		{
			[Token(Token = "0x60009CA")]
			[Address(RVA = "0xCF1808", Offset = "0xCF1808", VA = "0xCF1808", Slot = "8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60009CB")]
			[Address(RVA = "0xCF0904", Offset = "0xCF0904", VA = "0xCF0904", Slot = "9")]
			set
			{
			}
		}

		[Token(Token = "0x1700011B")]
		public InteractableTool InteractableTool
		{
			[Token(Token = "0x60009CD")]
			[Address(RVA = "0xCF1A4C", Offset = "0xCF1A4C", VA = "0xCF1A4C", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7767F8", Offset = "0x7767F8")]
			get
			{
				return null;
			}
			[Token(Token = "0x60009CE")]
			[Address(RVA = "0xCF1A54", Offset = "0xCF1A54", VA = "0xCF1A54")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x776808", Offset = "0x776808")]
			set
			{
			}
		}

		[Token(Token = "0x60009CC")]
		[Address(RVA = "0xCF1810", Offset = "0xCF1810", VA = "0xCF1810")]
		private void Awake()
		{
		}

		[Token(Token = "0x60009CF")]
		[Address(RVA = "0xCF1670", Offset = "0xCF1670", VA = "0xCF1670", Slot = "5")]
		public void SetFocusedInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x60009D0")]
		[Address(RVA = "0xCF1A5C", Offset = "0xCF1A5C", VA = "0xCF1A5C")]
		private void Update()
		{
		}

		[Token(Token = "0x60009D1")]
		[Address(RVA = "0xCF1CD0", Offset = "0xCF1CD0", VA = "0xCF1CD0")]
		public static Vector3 GetPointOnBezierCurve(Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3, float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60009D2")]
		[Address(RVA = "0xCF1DC0", Offset = "0xCF1DC0", VA = "0xCF1DC0")]
		public RayToolView()
		{
		}
	}
	[Token(Token = "0x2000221")]
	public class DistanceGrabberSample : MonoBehaviour
	{
		[Token(Token = "0x4000A54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool useSpherecast;

		[Token(Token = "0x4000A55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool allowGrabThroughWalls;

		[Token(Token = "0x4000A56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private DistanceGrabber[] m_grabbers;

		[Token(Token = "0x1700011C")]
		public bool UseSpherecast
		{
			[Token(Token = "0x60009D3")]
			[Address(RVA = "0xC64804", Offset = "0xC64804", VA = "0xC64804")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60009D4")]
			[Address(RVA = "0xC6480C", Offset = "0xC6480C", VA = "0xC6480C")]
			set
			{
			}
		}

		[Token(Token = "0x1700011D")]
		public bool AllowGrabThroughWalls
		{
			[Token(Token = "0x60009D5")]
			[Address(RVA = "0xC64894", Offset = "0xC64894", VA = "0xC64894")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60009D6")]
			[Address(RVA = "0xC6489C", Offset = "0xC6489C", VA = "0xC6489C")]
			set
			{
			}
		}

		[Token(Token = "0x60009D7")]
		[Address(RVA = "0xC64908", Offset = "0xC64908", VA = "0xC64908")]
		private void Start()
		{
		}

		[Token(Token = "0x60009D8")]
		[Address(RVA = "0xC64BCC", Offset = "0xC64BCC", VA = "0xC64BCC")]
		public void ToggleSphereCasting(Toggle t)
		{
		}

		[Token(Token = "0x60009D9")]
		[Address(RVA = "0xC64BDC", Offset = "0xC64BDC", VA = "0xC64BDC")]
		public void ToggleGrabThroughWalls(Toggle t)
		{
		}

		[Token(Token = "0x60009DA")]
		[Address(RVA = "0xC64BEC", Offset = "0xC64BEC", VA = "0xC64BEC")]
		public DistanceGrabberSample()
		{
		}
	}
	[Token(Token = "0x2000222")]
	public class ControllerBoxController : MonoBehaviour
	{
		[Token(Token = "0x4000A57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TrainLocomotive _locomotive;

		[Token(Token = "0x4000A58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private CowController _cowController;

		[Token(Token = "0x60009DB")]
		[Address(RVA = "0x11E96B8", Offset = "0x11E96B8", VA = "0x11E96B8")]
		private void Awake()
		{
		}

		[Token(Token = "0x60009DC")]
		[Address(RVA = "0x11E96BC", Offset = "0x11E96BC", VA = "0x11E96BC")]
		public void StartStopStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60009DD")]
		[Address(RVA = "0x11E96F4", Offset = "0x11E96F4", VA = "0x11E96F4")]
		public void DecreaseSpeedStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60009DE")]
		[Address(RVA = "0x11E972C", Offset = "0x11E972C", VA = "0x11E972C")]
		public void IncreaseSpeedStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60009DF")]
		[Address(RVA = "0x11E9764", Offset = "0x11E9764", VA = "0x11E9764")]
		public void SmokeButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60009E0")]
		[Address(RVA = "0x11E979C", Offset = "0x11E979C", VA = "0x11E979C")]
		public void WhistleButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60009E1")]
		[Address(RVA = "0x11E97D4", Offset = "0x11E97D4", VA = "0x11E97D4")]
		public void ReverseButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60009E2")]
		[Address(RVA = "0x11E980C", Offset = "0x11E980C", VA = "0x11E980C")]
		public void SwitchVisualization(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60009E3")]
		[Address(RVA = "0x11E9880", Offset = "0x11E9880", VA = "0x11E9880")]
		public void GoMoo(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60009E4")]
		[Address(RVA = "0x11E98F0", Offset = "0x11E98F0", VA = "0x11E98F0")]
		public ControllerBoxController()
		{
		}
	}
	[Token(Token = "0x2000223")]
	public class CowController : MonoBehaviour
	{
		[Token(Token = "0x4000A59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Animation _cowAnimation;

		[Token(Token = "0x4000A5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioSource _mooCowAudioSource;

		[Token(Token = "0x60009E5")]
		[Address(RVA = "0x11E98F8", Offset = "0x11E98F8", VA = "0x11E98F8")]
		private void Start()
		{
		}

		[Token(Token = "0x60009E6")]
		[Address(RVA = "0x11E98FC", Offset = "0x11E98FC", VA = "0x11E98FC")]
		public void PlayMooSound()
		{
		}

		[Token(Token = "0x60009E7")]
		[Address(RVA = "0x11E98B4", Offset = "0x11E98B4", VA = "0x11E98B4")]
		public void GoMooCowGo()
		{
		}

		[Token(Token = "0x60009E8")]
		[Address(RVA = "0x11E993C", Offset = "0x11E993C", VA = "0x11E993C")]
		public CowController()
		{
		}
	}
	[Token(Token = "0x2000224")]
	public class PanelHMDFollower : MonoBehaviour
	{
		[Token(Token = "0x2000225")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x770464", Offset = "0x770464")]
		private sealed class <LerpToHMD>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000A65")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000A66")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000A67")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PanelHMDFollower <>4__this;

			[Token(Token = "0x4000A68")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Vector3 <newPanelPosition>5__2;

			[Token(Token = "0x4000A69")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <startTime>5__3;

			[Token(Token = "0x4000A6A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <endTime>5__4;

			[Token(Token = "0x1700011E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60009F1")]
				[Address(RVA = "0xB30244", Offset = "0xB30244", VA = "0xB30244", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700011F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60009F3")]
				[Address(RVA = "0xB3028C", Offset = "0xB3028C", VA = "0xB3028C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60009EE")]
			[Address(RVA = "0xB30068", Offset = "0xB30068", VA = "0xB30068")]
			[DebuggerHidden]
			public <LerpToHMD>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x60009EF")]
			[Address(RVA = "0xB30094", Offset = "0xB30094", VA = "0xB30094", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60009F0")]
			[Address(RVA = "0xB30098", Offset = "0xB30098", VA = "0xB30098", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60009F2")]
			[Address(RVA = "0xB3024C", Offset = "0xB3024C", VA = "0xB3024C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000A5B")]
		private const float TOTAL_DURATION = 3f;

		[Token(Token = "0x4000A5C")]
		private const float HMD_MOVEMENT_THRESHOLD = 0.3f;

		[Token(Token = "0x4000A5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _maxDistance;

		[Token(Token = "0x4000A5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float _minDistance;

		[Token(Token = "0x4000A5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _minZDistance;

		[Token(Token = "0x4000A60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private OVRCameraRig _cameraRig;

		[Token(Token = "0x4000A61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 _panelInitialPosition;

		[Token(Token = "0x4000A62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Coroutine _coroutine;

		[Token(Token = "0x4000A63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3 _prevPos;

		[Token(Token = "0x4000A64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Vector3 _lastMovedToPos;

		[Token(Token = "0x60009E9")]
		[Address(RVA = "0xC429D4", Offset = "0xC429D4", VA = "0xC429D4")]
		private void Awake()
		{
		}

		[Token(Token = "0x60009EA")]
		[Address(RVA = "0xC42A74", Offset = "0xC42A74", VA = "0xC42A74")]
		private void Update()
		{
		}

		[Token(Token = "0x60009EB")]
		[Address(RVA = "0xC42CA8", Offset = "0xC42CA8", VA = "0xC42CA8")]
		private Vector3 CalculateIdealAnchorPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60009EC")]
		[Address(RVA = "0xC42C3C", Offset = "0xC42C3C", VA = "0xC42C3C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x776818", Offset = "0x776818")]
		private IEnumerator LerpToHMD()
		{
			return null;
		}

		[Token(Token = "0x60009ED")]
		[Address(RVA = "0xC42CF4", Offset = "0xC42CF4", VA = "0xC42CF4")]
		public PanelHMDFollower()
		{
		}
	}
	[Token(Token = "0x2000226")]
	public class SelectionCylinder : MonoBehaviour
	{
		[Token(Token = "0x2000227")]
		public enum SelectionState
		{
			[Token(Token = "0x4000A72")]
			Off,
			[Token(Token = "0x4000A73")]
			Selected,
			[Token(Token = "0x4000A74")]
			Highlighted
		}

		[Token(Token = "0x4000A6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _selectionMeshRenderer;

		[Token(Token = "0x4000A6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int _colorId;

		[Token(Token = "0x4000A6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Material[] _selectionMaterials;

		[Token(Token = "0x4000A6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Color[] _defaultSelectionColors;

		[Token(Token = "0x4000A6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Color[] _highlightColors;

		[Token(Token = "0x4000A70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private SelectionState _currSelectionState;

		[Token(Token = "0x17000120")]
		public SelectionState CurrSelectionState
		{
			[Token(Token = "0x60009F4")]
			[Address(RVA = "0xB7A764", Offset = "0xB7A764", VA = "0xB7A764")]
			get
			{
				return default(SelectionState);
			}
			[Token(Token = "0x60009F5")]
			[Address(RVA = "0xB7A76C", Offset = "0xB7A76C", VA = "0xB7A76C")]
			set
			{
			}
		}

		[Token(Token = "0x60009F6")]
		[Address(RVA = "0xB7A8F0", Offset = "0xB7A8F0", VA = "0xB7A8F0")]
		private void Awake()
		{
		}

		[Token(Token = "0x60009F7")]
		[Address(RVA = "0xB7AAB8", Offset = "0xB7AAB8", VA = "0xB7AAB8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60009F8")]
		[Address(RVA = "0xB7A7F4", Offset = "0xB7A7F4", VA = "0xB7A7F4")]
		private void AffectSelectionColor(Color[] newColors)
		{
		}

		[Token(Token = "0x60009F9")]
		[Address(RVA = "0xB7ABA4", Offset = "0xB7ABA4", VA = "0xB7ABA4")]
		public SelectionCylinder()
		{
		}
	}
	[Token(Token = "0x2000228")]
	public class TrackSegment : MonoBehaviour
	{
		[Token(Token = "0x2000229")]
		public enum SegmentType
		{
			[Token(Token = "0x4000A83")]
			Straight,
			[Token(Token = "0x4000A84")]
			LeftTurn,
			[Token(Token = "0x4000A85")]
			RightTurn,
			[Token(Token = "0x4000A86")]
			Switch
		}

		[Token(Token = "0x4000A75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private SegmentType _segmentType;

		[Token(Token = "0x4000A76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MeshFilter _straight;

		[Token(Token = "0x4000A77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MeshFilter _leftTurn;

		[Token(Token = "0x4000A78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MeshFilter _rightTurn;

		[Token(Token = "0x4000A79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float _gridSize;

		[Token(Token = "0x4000A7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int _subDivCount;

		[Token(Token = "0x4000A7B")]
		private const float _originalGridSize = 0.8f;

		[Token(Token = "0x4000A7C")]
		private const float _trackWidth = 0.15f;

		[Token(Token = "0x4000A7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GameObject _mesh;

		[Token(Token = "0x4000A7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x772CD0", Offset = "0x772CD0")]
		private float <StartDistance>k__BackingField;

		[Token(Token = "0x4000A7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Pose _p1;

		[Token(Token = "0x4000A80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Pose _p2;

		[Token(Token = "0x4000A81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Pose _endPose;

		[Token(Token = "0x17000121")]
		public float StartDistance
		{
			[Token(Token = "0x60009FB")]
			[Address(RVA = "0xAF22DC", Offset = "0xAF22DC", VA = "0xAF22DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7768C8", Offset = "0x7768C8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60009FC")]
			[Address(RVA = "0xAF22E4", Offset = "0xAF22E4", VA = "0xAF22E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7768D8", Offset = "0x7768D8")]
			set
			{
			}
		}

		[Token(Token = "0x17000122")]
		public float GridSize
		{
			[Token(Token = "0x60009FD")]
			[Address(RVA = "0xAF22EC", Offset = "0xAF22EC", VA = "0xAF22EC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60009FE")]
			[Address(RVA = "0xAF22F4", Offset = "0xAF22F4", VA = "0xAF22F4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000123")]
		public int SubDivCount
		{
			[Token(Token = "0x60009FF")]
			[Address(RVA = "0xAF22FC", Offset = "0xAF22FC", VA = "0xAF22FC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000A00")]
			[Address(RVA = "0xAF2304", Offset = "0xAF2304", VA = "0xAF2304")]
			set
			{
			}
		}

		[Token(Token = "0x17000124")]
		public SegmentType Type
		{
			[Token(Token = "0x6000A01")]
			[Address(RVA = "0xAF230C", Offset = "0xAF230C", VA = "0xAF230C")]
			get
			{
				return default(SegmentType);
			}
		}

		[Token(Token = "0x17000125")]
		public Pose EndPose
		{
			[Token(Token = "0x6000A02")]
			[Address(RVA = "0xAF2314", Offset = "0xAF2314", VA = "0xAF2314")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000126")]
		public float Radius
		{
			[Token(Token = "0x6000A03")]
			[Address(RVA = "0xAF2670", Offset = "0xAF2670", VA = "0xAF2670")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000127")]
		public float SegmentLength
		{
			[Token(Token = "0x6000A05")]
			[Address(RVA = "0xAF237C", Offset = "0xAF237C", VA = "0xAF237C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000A04")]
		[Address(RVA = "0xAF2680", Offset = "0xAF2680", VA = "0xAF2680")]
		public float setGridSize(float size)
		{
			return default(float);
		}

		[Token(Token = "0x6000A06")]
		[Address(RVA = "0xAF2698", Offset = "0xAF2698", VA = "0xAF2698")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000A07")]
		[Address(RVA = "0xAF23BC", Offset = "0xAF23BC", VA = "0xAF23BC")]
		public void UpdatePose(float distanceIntoSegment, Pose pose)
		{
		}

		[Token(Token = "0x6000A08")]
		[Address(RVA = "0xAF269C", Offset = "0xAF269C", VA = "0xAF269C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000A09")]
		[Address(RVA = "0xAF26A0", Offset = "0xAF26A0", VA = "0xAF26A0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000A0A")]
		[Address(RVA = "0xAF2708", Offset = "0xAF2708", VA = "0xAF2708")]
		private void DrawDebugLines()
		{
		}

		[Token(Token = "0x6000A0B")]
		[Address(RVA = "0xAF2FD0", Offset = "0xAF2FD0", VA = "0xAF2FD0")]
		public void RegenerateTrackAndMesh()
		{
		}

		[Token(Token = "0x6000A0C")]
		[Address(RVA = "0xAF325C", Offset = "0xAF325C", VA = "0xAF325C")]
		public TrackSegment()
		{
		}
	}
	[Token(Token = "0x200022A")]
	public class TrainButtonVisualController : MonoBehaviour
	{
		[Token(Token = "0x200022B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x770474", Offset = "0x770474")]
		private sealed class <ResetPosition>d__26 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000A98")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000A99")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000A9A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TrainButtonVisualController <>4__this;

			[Token(Token = "0x4000A9B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <startTime>5__2;

			[Token(Token = "0x4000A9C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <endTime>5__3;

			[Token(Token = "0x17000128")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000A1B")]
				[Address(RVA = "0xB33604", Offset = "0xB33604", VA = "0xB33604", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000129")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000A1D")]
				[Address(RVA = "0xB3364C", Offset = "0xB3364C", VA = "0xB3364C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000A18")]
			[Address(RVA = "0xB33470", Offset = "0xB33470", VA = "0xB33470")]
			[DebuggerHidden]
			public <ResetPosition>d__26(int <>1__state)
			{
			}

			[Token(Token = "0x6000A19")]
			[Address(RVA = "0xB3349C", Offset = "0xB3349C", VA = "0xB3349C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000A1A")]
			[Address(RVA = "0xB334A0", Offset = "0xB334A0", VA = "0xB334A0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000A1C")]
			[Address(RVA = "0xB3360C", Offset = "0xB3360C", VA = "0xB3360C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000A87")]
		private const float LERP_TO_OLD_POS_DURATION = 1f;

		[Token(Token = "0x4000A88")]
		private const float LOCAL_SIZE_HALVED = 0.5f;

		[Token(Token = "0x4000A89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _meshRenderer;

		[Token(Token = "0x4000A8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MeshRenderer _glowRenderer;

		[Token(Token = "0x4000A8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ButtonController _buttonController;

		[Token(Token = "0x4000A8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Color _buttonContactColor;

		[Token(Token = "0x4000A8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Color _buttonActionColor;

		[Token(Token = "0x4000A8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x4000A8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private AudioClip _actionSoundEffect;

		[Token(Token = "0x4000A90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Transform _buttonContactTransform;

		[Token(Token = "0x4000A91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private float _contactMaxDisplacementDistance;

		[Token(Token = "0x4000A92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Material _buttonMaterial;

		[Token(Token = "0x4000A93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Color _buttonDefaultColor;

		[Token(Token = "0x4000A94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private int _materialColorId;

		[Token(Token = "0x4000A95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private bool _buttonInContactOrActionStates;

		[Token(Token = "0x4000A96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Coroutine _lerpToOldPositionCr;

		[Token(Token = "0x4000A97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Vector3 _oldPosition;

		[Token(Token = "0x6000A0D")]
		[Address(RVA = "0xAF3308", Offset = "0xAF3308", VA = "0xAF3308")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000A0E")]
		[Address(RVA = "0xAF33B0", Offset = "0xAF33B0", VA = "0xAF33B0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000A0F")]
		[Address(RVA = "0xAF3460", Offset = "0xAF3460", VA = "0xAF3460")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000A10")]
		[Address(RVA = "0xAF35D8", Offset = "0xAF35D8", VA = "0xAF35D8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000A11")]
		[Address(RVA = "0xAF37A0", Offset = "0xAF37A0", VA = "0xAF37A0")]
		private void ActionOrInContactZoneStayEvent(ColliderZoneArgs collisionArgs)
		{
		}

		[Token(Token = "0x6000A12")]
		[Address(RVA = "0xAF3888", Offset = "0xAF3888", VA = "0xAF3888")]
		private void InteractableStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000A13")]
		[Address(RVA = "0xAF3A8C", Offset = "0xAF3A8C", VA = "0xAF3A8C")]
		private void PlaySound(AudioClip clip)
		{
		}

		[Token(Token = "0x6000A14")]
		[Address(RVA = "0xAF399C", Offset = "0xAF399C", VA = "0xAF399C")]
		private void StopResetLerping()
		{
		}

		[Token(Token = "0x6000A15")]
		[Address(RVA = "0xAF39B0", Offset = "0xAF39B0", VA = "0xAF39B0")]
		private void LerpToOldPosition()
		{
		}

		[Token(Token = "0x6000A16")]
		[Address(RVA = "0xAF3AE4", Offset = "0xAF3AE4", VA = "0xAF3AE4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7768E8", Offset = "0x7768E8")]
		private IEnumerator ResetPosition()
		{
			return null;
		}

		[Token(Token = "0x6000A17")]
		[Address(RVA = "0xAF3B50", Offset = "0xAF3B50", VA = "0xAF3B50")]
		public TrainButtonVisualController()
		{
		}
	}
	[Token(Token = "0x200022C")]
	public class TrainCar : TrainCarBase
	{
		[Token(Token = "0x4000A9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private TrainCarBase _parentLocomotive;

		[Token(Token = "0x4000A9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		protected float _distanceBehindParent;

		[Token(Token = "0x1700012A")]
		public float DistanceBehindParentScaled
		{
			[Token(Token = "0x6000A1E")]
			[Address(RVA = "0xAF3C00", Offset = "0xAF3C00", VA = "0xAF3C00")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000A1F")]
		[Address(RVA = "0xAF3C10", Offset = "0xAF3C10", VA = "0xAF3C10", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6000A20")]
		[Address(RVA = "0xAF3C18", Offset = "0xAF3C18", VA = "0xAF3C18", Slot = "5")]
		public override void UpdatePosition()
		{
		}

		[Token(Token = "0x6000A21")]
		[Address(RVA = "0xAF3F5C", Offset = "0xAF3F5C", VA = "0xAF3F5C")]
		public TrainCar()
		{
		}
	}
	[Token(Token = "0x200022D")]
	public abstract class TrainCarBase : MonoBehaviour
	{
		[Token(Token = "0x4000A9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Vector3 OFFSET;

		[Token(Token = "0x4000AA0")]
		private const float WHEEL_RADIUS = 0.027f;

		[Token(Token = "0x4000AA1")]
		private const float TWO_PI = (float)System.Math.PI * 2f;

		[Token(Token = "0x4000AA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected Transform _frontWheels;

		[Token(Token = "0x4000AA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected Transform _rearWheels;

		[Token(Token = "0x4000AA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		protected TrainTrack _trainTrack;

		[Token(Token = "0x4000AA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		protected Transform[] _individualWheels;

		[Token(Token = "0x4000AA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x772DD0", Offset = "0x772DD0")]
		private float <Distance>k__BackingField;

		[Token(Token = "0x4000AA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		protected float scale;

		[Token(Token = "0x4000AA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Pose _frontPose;

		[Token(Token = "0x4000AA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Pose _rearPose;

		[Token(Token = "0x1700012B")]
		public float Distance
		{
			[Token(Token = "0x6000A22")]
			[Address(RVA = "0xAF4054", Offset = "0xAF4054", VA = "0xAF4054")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x776998", Offset = "0x776998")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000A23")]
			[Address(RVA = "0xAF405C", Offset = "0xAF405C", VA = "0xAF405C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7769A8", Offset = "0x7769A8")]
			protected set
			{
			}
		}

		[Token(Token = "0x1700012C")]
		public float Scale
		{
			[Token(Token = "0x6000A24")]
			[Address(RVA = "0xAF4064", Offset = "0xAF4064", VA = "0xAF4064")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000A25")]
			[Address(RVA = "0xAF406C", Offset = "0xAF406C", VA = "0xAF406C")]
			set
			{
			}
		}

		[Token(Token = "0x6000A26")]
		[Address(RVA = "0xAF3C14", Offset = "0xAF3C14", VA = "0xAF3C14", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6000A27")]
		[Address(RVA = "0xAF4074", Offset = "0xAF4074", VA = "0xAF4074")]
		public void UpdatePose(float distance, TrainCarBase train, Pose pose)
		{
		}

		[Token(Token = "0x6000A28")]
		[Address(RVA = "0xAF3C60", Offset = "0xAF3C60", VA = "0xAF3C60")]
		protected void UpdateCarPosition()
		{
		}

		[Token(Token = "0x6000A29")]
		[Address(RVA = "0xAF3E84", Offset = "0xAF3E84", VA = "0xAF3E84")]
		protected void RotateCarWheels()
		{
		}

		[Token(Token = "0x6000A2A")]
		public abstract void UpdatePosition();

		[Token(Token = "0x6000A2B")]
		[Address(RVA = "0xAF3FC8", Offset = "0xAF3FC8", VA = "0xAF3FC8")]
		protected TrainCarBase()
		{
		}
	}
	[Token(Token = "0x200022E")]
	public class TrainCrossingController : MonoBehaviour
	{
		[Token(Token = "0x200022F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x770484", Offset = "0x770484")]
		private sealed class <AnimateCrossing>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000AB4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000AB5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000AB6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TrainCrossingController <>4__this;

			[Token(Token = "0x4000AB7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float animationLength;

			[Token(Token = "0x4000AB8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <animationEndTime>5__2;

			[Token(Token = "0x4000AB9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <lightBlinkDuration>5__3;

			[Token(Token = "0x4000ABA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <lightBlinkStartTime>5__4;

			[Token(Token = "0x4000ABB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <lightBlinkEndTime>5__5;

			[Token(Token = "0x4000ABC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Material <lightToBlinkOn>5__6;

			[Token(Token = "0x4000ABD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private Material <lightToBlinkOff>5__7;

			[Token(Token = "0x4000ABE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private Color <onColor>5__8;

			[Token(Token = "0x4000ABF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private Color <offColor>5__9;

			[Token(Token = "0x1700012D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000A39")]
				[Address(RVA = "0xB338AC", Offset = "0xB338AC", VA = "0xB338AC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700012E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000A3B")]
				[Address(RVA = "0xB338F4", Offset = "0xB338F4", VA = "0xB338F4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000A36")]
			[Address(RVA = "0xB33654", Offset = "0xB33654", VA = "0xB33654")]
			[DebuggerHidden]
			public <AnimateCrossing>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x6000A37")]
			[Address(RVA = "0xB33680", Offset = "0xB33680", VA = "0xB33680", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000A38")]
			[Address(RVA = "0xB33684", Offset = "0xB33684", VA = "0xB33684", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000A3A")]
			[Address(RVA = "0xB338B4", Offset = "0xB338B4", VA = "0xB338B4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000AAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x4000AAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioClip[] _crossingSounds;

		[Token(Token = "0x4000AAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MeshRenderer _lightSide1Renderer;

		[Token(Token = "0x4000AAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MeshRenderer _lightSide2Renderer;

		[Token(Token = "0x4000AAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private SelectionCylinder _selectionCylinder;

		[Token(Token = "0x4000AAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Material _lightsSide1Mat;

		[Token(Token = "0x4000AB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Material _lightsSide2Mat;

		[Token(Token = "0x4000AB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int _colorId;

		[Token(Token = "0x4000AB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Coroutine _xingAnimationCr;

		[Token(Token = "0x4000AB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private InteractableTool _toolInteractingWithMe;

		[Token(Token = "0x6000A2D")]
		[Address(RVA = "0xAF4214", Offset = "0xAF4214", VA = "0xAF4214")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000A2E")]
		[Address(RVA = "0xAF4260", Offset = "0xAF4260", VA = "0xAF4260")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000A2F")]
		[Address(RVA = "0xAF4368", Offset = "0xAF4368", VA = "0xAF4368")]
		public void CrossingButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000A30")]
		[Address(RVA = "0xAF44C8", Offset = "0xAF44C8", VA = "0xAF44C8")]
		private void Update()
		{
		}

		[Token(Token = "0x6000A31")]
		[Address(RVA = "0xAF43C4", Offset = "0xAF43C4", VA = "0xAF43C4")]
		private void ActivateTrainCrossing()
		{
		}

		[Token(Token = "0x6000A32")]
		[Address(RVA = "0xAF45A4", Offset = "0xAF45A4", VA = "0xAF45A4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7769B8", Offset = "0x7769B8")]
		private IEnumerator AnimateCrossing(float animationLength)
		{
			return null;
		}

		[Token(Token = "0x6000A33")]
		[Address(RVA = "0xAF4620", Offset = "0xAF4620", VA = "0xAF4620")]
		private void AffectMaterials(Material[] materials, Color newColor)
		{
		}

		[Token(Token = "0x6000A34")]
		[Address(RVA = "0xAF46CC", Offset = "0xAF46CC", VA = "0xAF46CC")]
		private void ToggleLightObjects(bool enableState)
		{
		}

		[Token(Token = "0x6000A35")]
		[Address(RVA = "0xAF472C", Offset = "0xAF472C", VA = "0xAF472C")]
		public TrainCrossingController()
		{
		}
	}
	[Token(Token = "0x2000230")]
	public class TrainLocomotive : TrainCarBase
	{
		[Token(Token = "0x2000231")]
		private enum EngineSoundState
		{
			[Token(Token = "0x4000ADE")]
			Start,
			[Token(Token = "0x4000ADF")]
			AccelerateOrSetProperSpeed,
			[Token(Token = "0x4000AE0")]
			Stop
		}

		[Token(Token = "0x2000232")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x770494", Offset = "0x770494")]
		private sealed class <StartStopTrain>d__34 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000AE1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000AE2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000AE3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool startTrain;

			[Token(Token = "0x4000AE4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public TrainLocomotive <>4__this;

			[Token(Token = "0x4000AE5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <endSpeed>5__2;

			[Token(Token = "0x4000AE6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <timePeriodForSpeedChange>5__3;

			[Token(Token = "0x4000AE7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <startTime>5__4;

			[Token(Token = "0x4000AE8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <endTime>5__5;

			[Token(Token = "0x4000AE9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <startSpeed>5__6;

			[Token(Token = "0x1700012F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000A4E")]
				[Address(RVA = "0xB33B54", Offset = "0xB33B54", VA = "0xB33B54", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000130")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000A50")]
				[Address(RVA = "0xB33B9C", Offset = "0xB33B9C", VA = "0xB33B9C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000A4B")]
			[Address(RVA = "0xB338FC", Offset = "0xB338FC", VA = "0xB338FC")]
			[DebuggerHidden]
			public <StartStopTrain>d__34(int <>1__state)
			{
			}

			[Token(Token = "0x6000A4C")]
			[Address(RVA = "0xB33928", Offset = "0xB33928", VA = "0xB33928", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000A4D")]
			[Address(RVA = "0xB3392C", Offset = "0xB3392C", VA = "0xB3392C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000A4F")]
			[Address(RVA = "0xB33B5C", Offset = "0xB33B5C", VA = "0xB33B5C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000AC0")]
		private const float MIN_SPEED = 0.2f;

		[Token(Token = "0x4000AC1")]
		private const float MAX_SPEED = 2.7f;

		[Token(Token = "0x4000AC2")]
		private const float SMOKE_SPEED_MULTIPLIER = 8f;

		[Token(Token = "0x4000AC3")]
		private const int MAX_PARTICLES_MULTIPLIER = 3;

		[Token(Token = "0x4000AC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x772E30", Offset = "0x772E30")]
		[SerializeField]
		protected float _initialSpeed;

		[Token(Token = "0x4000AC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject _startStopButton;

		[Token(Token = "0x4000AC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject _decreaseSpeedButton;

		[Token(Token = "0x4000AC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private GameObject _increaseSpeedButton;

		[Token(Token = "0x4000AC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private GameObject _smokeButton;

		[Token(Token = "0x4000AC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private GameObject _whistleButton;

		[Token(Token = "0x4000ACA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private GameObject _reverseButton;

		[Token(Token = "0x4000ACB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private AudioSource _whistleAudioSource;

		[Token(Token = "0x4000ACC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private AudioClip _whistleSound;

		[Token(Token = "0x4000ACD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private AudioSource _engineAudioSource;

		[Token(Token = "0x4000ACE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private AudioClip[] _accelerationSounds;

		[Token(Token = "0x4000ACF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private AudioClip[] _decelerationSounds;

		[Token(Token = "0x4000AD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private AudioClip _startUpSound;

		[Token(Token = "0x4000AD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private AudioSource _smokeStackAudioSource;

		[Token(Token = "0x4000AD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private AudioClip _smokeSound;

		[Token(Token = "0x4000AD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private ParticleSystem _smoke1;

		[Token(Token = "0x4000AD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private ParticleSystem _smoke2;

		[Token(Token = "0x4000AD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private TrainCarBase[] _childCars;

		[Token(Token = "0x4000AD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private bool _isMoving;

		[Token(Token = "0x4000AD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE1")]
		private bool _reverse;

		[Token(Token = "0x4000AD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private float _currentSpeed;

		[Token(Token = "0x4000AD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private float _speedDiv;

		[Token(Token = "0x4000ADA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private float _standardRateOverTimeMultiplier;

		[Token(Token = "0x4000ADB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private int _standardMaxParticles;

		[Token(Token = "0x4000ADC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Coroutine _startStopTrainCr;

		[Token(Token = "0x6000A3C")]
		[Address(RVA = "0xAF4788", Offset = "0xAF4788", VA = "0xAF4788")]
		private void Start()
		{
		}

		[Token(Token = "0x6000A3D")]
		[Address(RVA = "0xAF48DC", Offset = "0xAF48DC", VA = "0xAF48DC")]
		private void Update()
		{
		}

		[Token(Token = "0x6000A3E")]
		[Address(RVA = "0xAF48E8", Offset = "0xAF48E8", VA = "0xAF48E8", Slot = "5")]
		public override void UpdatePosition()
		{
		}

		[Token(Token = "0x6000A3F")]
		[Address(RVA = "0xAF4A38", Offset = "0xAF4A38", VA = "0xAF4A38")]
		public void StartStopStateChanged()
		{
		}

		[Token(Token = "0x6000A40")]
		[Address(RVA = "0xAF485C", Offset = "0xAF485C", VA = "0xAF485C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x776A68", Offset = "0x776A68")]
		private IEnumerator StartStopTrain(bool startTrain)
		{
			return null;
		}

		[Token(Token = "0x6000A41")]
		[Address(RVA = "0xAF4A84", Offset = "0xAF4A84", VA = "0xAF4A84")]
		private float PlayEngineSound(EngineSoundState engineSoundState)
		{
			return default(float);
		}

		[Token(Token = "0x6000A42")]
		[Address(RVA = "0xAF49D4", Offset = "0xAF49D4", VA = "0xAF49D4")]
		private void UpdateDistance()
		{
		}

		[Token(Token = "0x6000A43")]
		[Address(RVA = "0xAF4CA0", Offset = "0xAF4CA0", VA = "0xAF4CA0")]
		public void DecreaseSpeedStateChanged()
		{
		}

		[Token(Token = "0x6000A44")]
		[Address(RVA = "0xAF4DDC", Offset = "0xAF4DDC", VA = "0xAF4DDC")]
		public void IncreaseSpeedStateChanged()
		{
		}

		[Token(Token = "0x6000A45")]
		[Address(RVA = "0xAF4D0C", Offset = "0xAF4D0C", VA = "0xAF4D0C")]
		private void UpdateSmokeEmissionBasedOnSpeed()
		{
		}

		[Token(Token = "0x6000A46")]
		[Address(RVA = "0xAF4E48", Offset = "0xAF4E48", VA = "0xAF4E48")]
		private float GetCurrentSmokeEmission()
		{
			return default(float);
		}

		[Token(Token = "0x6000A47")]
		[Address(RVA = "0xAF4E68", Offset = "0xAF4E68", VA = "0xAF4E68")]
		public void SmokeButtonStateChanged()
		{
		}

		[Token(Token = "0x6000A48")]
		[Address(RVA = "0xAF4EF4", Offset = "0xAF4EF4", VA = "0xAF4EF4")]
		public void WhistleButtonStateChanged()
		{
		}

		[Token(Token = "0x6000A49")]
		[Address(RVA = "0xAF4FAC", Offset = "0xAF4FAC", VA = "0xAF4FAC")]
		public void ReverseButtonStateChanged()
		{
		}

		[Token(Token = "0x6000A4A")]
		[Address(RVA = "0xAF4FBC", Offset = "0xAF4FBC", VA = "0xAF4FBC")]
		public TrainLocomotive()
		{
		}
	}
	[Token(Token = "0x2000233")]
	public class TrainTrack : MonoBehaviour
	{
		[Token(Token = "0x4000AEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _gridSize;

		[Token(Token = "0x4000AEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private int _subDivCount;

		[Token(Token = "0x4000AEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform _segmentParent;

		[Token(Token = "0x4000AED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform _trainParent;

		[Token(Token = "0x4000AEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private bool _regnerateTrackMeshOnAwake;

		[Token(Token = "0x4000AEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float _trainLength;

		[Token(Token = "0x4000AF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TrackSegment[] _trackSegments;

		[Token(Token = "0x17000131")]
		public float TrackLength
		{
			[Token(Token = "0x6000A51")]
			[Address(RVA = "0xAF5024", Offset = "0xAF5024", VA = "0xAF5024")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000A52")]
			[Address(RVA = "0xAF502C", Offset = "0xAF502C", VA = "0xAF502C")]
			private set
			{
			}
		}

		[Token(Token = "0x6000A53")]
		[Address(RVA = "0xAF5034", Offset = "0xAF5034", VA = "0xAF5034")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000A54")]
		[Address(RVA = "0xAF40F4", Offset = "0xAF40F4", VA = "0xAF40F4")]
		public TrackSegment GetSegment(float distance)
		{
			return null;
		}

		[Token(Token = "0x6000A55")]
		[Address(RVA = "0xAF5038", Offset = "0xAF5038", VA = "0xAF5038")]
		public void Regenerate()
		{
		}

		[Token(Token = "0x6000A56")]
		[Address(RVA = "0xAF5238", Offset = "0xAF5238", VA = "0xAF5238")]
		private void SetScale(float ratio)
		{
		}

		[Token(Token = "0x6000A57")]
		[Address(RVA = "0xAF5334", Offset = "0xAF5334", VA = "0xAF5334")]
		public TrainTrack()
		{
		}
	}
	[Token(Token = "0x2000234")]
	public class Pose
	{
		[Token(Token = "0x4000AF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 Position;

		[Token(Token = "0x4000AF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Quaternion Rotation;

		[Token(Token = "0x6000A58")]
		[Address(RVA = "0xC49E00", Offset = "0xC49E00", VA = "0xC49E00")]
		public Pose()
		{
		}

		[Token(Token = "0x6000A59")]
		[Address(RVA = "0xC49E44", Offset = "0xC49E44", VA = "0xC49E44")]
		public Pose(Vector3 position, Quaternion rotation)
		{
		}
	}
	[Token(Token = "0x2000235")]
	public class WindmillBladesController : MonoBehaviour
	{
		[Token(Token = "0x2000236")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7704A4", Offset = "0x7704A4")]
		private sealed class <LerpToSpeed>d__17 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000AFE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000AFF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000B00")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WindmillBladesController <>4__this;

			[Token(Token = "0x4000B01")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float goalSpeed;

			[Token(Token = "0x4000B02")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <totalTime>5__2;

			[Token(Token = "0x4000B03")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <startSpeed>5__3;

			[Token(Token = "0x17000133")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000A66")]
				[Address(RVA = "0xB37A04", Offset = "0xB37A04", VA = "0xB37A04", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000134")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000A68")]
				[Address(RVA = "0xB37A4C", Offset = "0xB37A4C", VA = "0xB37A4C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000A63")]
			[Address(RVA = "0xB3785C", Offset = "0xB3785C", VA = "0xB3785C")]
			[DebuggerHidden]
			public <LerpToSpeed>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x6000A64")]
			[Address(RVA = "0xB37888", Offset = "0xB37888", VA = "0xB37888", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000A65")]
			[Address(RVA = "0xB3788C", Offset = "0xB3788C", VA = "0xB3788C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000A67")]
			[Address(RVA = "0xB37A0C", Offset = "0xB37A0C", VA = "0xB37A0C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000237")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7704B4", Offset = "0x7704B4")]
		private sealed class <PlaySoundDelayed>d__18 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000B04")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000B05")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000B06")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WindmillBladesController <>4__this;

			[Token(Token = "0x4000B07")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public AudioClip initial;

			[Token(Token = "0x4000B08")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float timeDelayAfterInitial;

			[Token(Token = "0x4000B09")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public AudioClip clip;

			[Token(Token = "0x17000135")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000A6C")]
				[Address(RVA = "0xB37B50", Offset = "0xB37B50", VA = "0xB37B50", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000136")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000A6E")]
				[Address(RVA = "0xB37B98", Offset = "0xB37B98", VA = "0xB37B98", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000A69")]
			[Address(RVA = "0xB37A54", Offset = "0xB37A54", VA = "0xB37A54")]
			[DebuggerHidden]
			public <PlaySoundDelayed>d__18(int <>1__state)
			{
			}

			[Token(Token = "0x6000A6A")]
			[Address(RVA = "0xB37A80", Offset = "0xB37A80", VA = "0xB37A80", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000A6B")]
			[Address(RVA = "0xB37A84", Offset = "0xB37A84", VA = "0xB37A84", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000A6D")]
			[Address(RVA = "0xB37B58", Offset = "0xB37B58", VA = "0xB37B58", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000AF3")]
		private const float MAX_TIME = 1f;

		[Token(Token = "0x4000AF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x4000AF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioClip _windMillRotationSound;

		[Token(Token = "0x4000AF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AudioClip _windMillStartSound;

		[Token(Token = "0x4000AF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AudioClip _windMillStopSound;

		[Token(Token = "0x4000AF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x773018", Offset = "0x773018")]
		private bool <IsMoving>k__BackingField;

		[Token(Token = "0x4000AF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float _currentSpeed;

		[Token(Token = "0x4000AFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Coroutine _lerpSpeedCoroutine;

		[Token(Token = "0x4000AFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Coroutine _audioChangeCr;

		[Token(Token = "0x4000AFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Quaternion _originalRotation;

		[Token(Token = "0x4000AFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float _rotAngle;

		[Token(Token = "0x17000132")]
		public bool IsMoving
		{
			[Token(Token = "0x6000A5A")]
			[Address(RVA = "0xAFDAD0", Offset = "0xAFDAD0", VA = "0xAFDAD0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x776B18", Offset = "0x776B18")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000A5B")]
			[Address(RVA = "0xAFDAD8", Offset = "0xAFDAD8", VA = "0xAFDAD8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x776B28", Offset = "0x776B28")]
			private set
			{
			}
		}

		[Token(Token = "0x6000A5C")]
		[Address(RVA = "0xAFDAE4", Offset = "0xAFDAE4", VA = "0xAFDAE4")]
		private void Start()
		{
		}

		[Token(Token = "0x6000A5D")]
		[Address(RVA = "0xAFDB20", Offset = "0xAFDB20", VA = "0xAFDB20")]
		private void Update()
		{
		}

		[Token(Token = "0x6000A5E")]
		[Address(RVA = "0xAFDC04", Offset = "0xAFDC04", VA = "0xAFDC04")]
		public void SetMoveState(bool newMoveState, float goalSpeed)
		{
		}

		[Token(Token = "0x6000A5F")]
		[Address(RVA = "0xAFDC6C", Offset = "0xAFDC6C", VA = "0xAFDC6C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x776B38", Offset = "0x776B38")]
		private IEnumerator LerpToSpeed(float goalSpeed)
		{
			return null;
		}

		[Token(Token = "0x6000A60")]
		[Address(RVA = "0xAFDCE8", Offset = "0xAFDCE8", VA = "0xAFDCE8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x776B98", Offset = "0x776B98")]
		private IEnumerator PlaySoundDelayed(AudioClip initial, AudioClip clip, float timeDelayAfterInitial)
		{
			return null;
		}

		[Token(Token = "0x6000A61")]
		[Address(RVA = "0xAFDD78", Offset = "0xAFDD78", VA = "0xAFDD78")]
		private void PlaySound(AudioClip clip, bool loop = false)
		{
		}

		[Token(Token = "0x6000A62")]
		[Address(RVA = "0xAFDDE4", Offset = "0xAFDDE4", VA = "0xAFDDE4")]
		public WindmillBladesController()
		{
		}
	}
	[Token(Token = "0x2000238")]
	public class WindmillController : MonoBehaviour
	{
		[Token(Token = "0x4000B0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _startStopButton;

		[Token(Token = "0x4000B0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _maxSpeed;

		[Token(Token = "0x4000B0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private SelectionCylinder _selectionCylinder;

		[Token(Token = "0x4000B0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private WindmillBladesController _bladesRotation;

		[Token(Token = "0x4000B0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private InteractableTool _toolInteractingWithMe;

		[Token(Token = "0x6000A6F")]
		[Address(RVA = "0xAFDDEC", Offset = "0xAFDDEC", VA = "0xAFDDEC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000A70")]
		[Address(RVA = "0xAFDE50", Offset = "0xAFDE50", VA = "0xAFDE50")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000A71")]
		[Address(RVA = "0xAFDF34", Offset = "0xAFDF34", VA = "0xAFDF34")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000A72")]
		[Address(RVA = "0xAFE06C", Offset = "0xAFE06C", VA = "0xAFE06C")]
		private void StartStopStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000A73")]
		[Address(RVA = "0xAFE0E8", Offset = "0xAFE0E8", VA = "0xAFE0E8")]
		private void Update()
		{
		}

		[Token(Token = "0x6000A74")]
		[Address(RVA = "0xAFE1C4", Offset = "0xAFE1C4", VA = "0xAFE1C4")]
		public WindmillController()
		{
		}
	}
	[Token(Token = "0x2000239")]
	public enum EUiDisplayType
	{
		[Token(Token = "0x4000B10")]
		EUDT_WorldGeoQuad,
		[Token(Token = "0x4000B11")]
		EUDT_OverlayQuad,
		[Token(Token = "0x4000B12")]
		EUDT_None,
		[Token(Token = "0x4000B13")]
		EUDT_MaxDislayTypes
	}
	[Token(Token = "0x200023A")]
	public class OVROverlaySample : MonoBehaviour
	{
		[Token(Token = "0x200023B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7704C4", Offset = "0x7704C4")]
		private sealed class <WaitforOVROverlay>d__30 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000B2C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000B2D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000B2E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public OVROverlaySample <>4__this;

			[Token(Token = "0x17000137")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000A88")]
				[Address(RVA = "0xB2E8D8", Offset = "0xB2E8D8", VA = "0xB2E8D8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000138")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000A8A")]
				[Address(RVA = "0xB2E920", Offset = "0xB2E920", VA = "0xB2E920", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000A85")]
			[Address(RVA = "0xB2E6C4", Offset = "0xB2E6C4", VA = "0xB2E6C4")]
			[DebuggerHidden]
			public <WaitforOVROverlay>d__30(int <>1__state)
			{
			}

			[Token(Token = "0x6000A86")]
			[Address(RVA = "0xB2E6F0", Offset = "0xB2E6F0", VA = "0xB2E6F0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000A87")]
			[Address(RVA = "0xB2E6F4", Offset = "0xB2E6F4", VA = "0xB2E6F4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000A89")]
			[Address(RVA = "0xB2E8E0", Offset = "0xB2E8E0", VA = "0xB2E8E0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000B14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool inMenu;

		[Token(Token = "0x4000B15")]
		private const string ovrOverlayID = "OVROverlayID";

		[Token(Token = "0x4000B16")]
		private const string applicationID = "ApplicationID";

		[Token(Token = "0x4000B17")]
		private const string noneID = "NoneID";

		[Token(Token = "0x4000B18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Toggle applicationRadioButton;

		[Token(Token = "0x4000B19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Toggle noneRadioButton;

		[Token(Token = "0x4000B1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x773058", Offset = "0x773058")]
		public GameObject mainCamera;

		[Token(Token = "0x4000B1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject uiCamera;

		[Token(Token = "0x4000B1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject uiGeoParent;

		[Token(Token = "0x4000B1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject worldspaceGeoParent;

		[Token(Token = "0x4000B1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public OVROverlay cameraRenderOverlay;

		[Token(Token = "0x4000B1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public OVROverlay renderingLabelOverlay;

		[Token(Token = "0x4000B20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Texture applicationLabelTexture;

		[Token(Token = "0x4000B21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Texture compositorLabelTexture;

		[Token(Token = "0x4000B22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x773090", Offset = "0x773090")]
		public GameObject prefabForLevelLoadSim;

		[Token(Token = "0x4000B23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public OVROverlay cubemapOverlay;

		[Token(Token = "0x4000B24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public OVROverlay loadingTextQuadOverlay;

		[Token(Token = "0x4000B25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float distanceFromCamToLoadText;

		[Token(Token = "0x4000B26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public float cubeSpawnRadius;

		[Token(Token = "0x4000B27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float heightBetweenItems;

		[Token(Token = "0x4000B28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public int numObjectsPerLevel;

		[Token(Token = "0x4000B29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public int numLevels;

		[Token(Token = "0x4000B2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public int numLoopsTrigger;

		[Token(Token = "0x4000B2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private List<GameObject> spawnedCubes;

		[Token(Token = "0x6000A75")]
		[Address(RVA = "0xB98108", Offset = "0xB98108", VA = "0xB98108")]
		private void Start()
		{
		}

		[Token(Token = "0x6000A76")]
		[Address(RVA = "0xB98930", Offset = "0xB98930", VA = "0xB98930")]
		private void Update()
		{
		}

		[Token(Token = "0x6000A77")]
		[Address(RVA = "0xB98A78", Offset = "0xB98A78", VA = "0xB98A78")]
		private void ActivateWorldGeo()
		{
		}

		[Token(Token = "0x6000A78")]
		[Address(RVA = "0xB98BA8", Offset = "0xB98BA8", VA = "0xB98BA8")]
		private void ActivateOVROverlay()
		{
		}

		[Token(Token = "0x6000A79")]
		[Address(RVA = "0xB98CD8", Offset = "0xB98CD8", VA = "0xB98CD8")]
		private void ActivateNone()
		{
		}

		[Token(Token = "0x6000A7A")]
		[Address(RVA = "0xB98A4C", Offset = "0xB98A4C", VA = "0xB98A4C")]
		private void TriggerLoad()
		{
		}

		[Token(Token = "0x6000A7B")]
		[Address(RVA = "0xB98DB8", Offset = "0xB98DB8", VA = "0xB98DB8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x776C98", Offset = "0x776C98")]
		private IEnumerator WaitforOVROverlay()
		{
			return null;
		}

		[Token(Token = "0x6000A7C")]
		[Address(RVA = "0xB98E24", Offset = "0xB98E24", VA = "0xB98E24")]
		private void TriggerUnload()
		{
		}

		[Token(Token = "0x6000A7D")]
		[Address(RVA = "0xB98548", Offset = "0xB98548", VA = "0xB98548")]
		private void CameraAndRenderTargetSetup()
		{
		}

		[Token(Token = "0x6000A7E")]
		[Address(RVA = "0xB98F78", Offset = "0xB98F78", VA = "0xB98F78")]
		private void SimulateLevelLoad()
		{
		}

		[Token(Token = "0x6000A7F")]
		[Address(RVA = "0xB98E58", Offset = "0xB98E58", VA = "0xB98E58")]
		private void ClearObjects()
		{
		}

		[Token(Token = "0x6000A80")]
		[Address(RVA = "0xB99290", Offset = "0xB99290", VA = "0xB99290")]
		public void RadioPressed(string radioLabel, string group, Toggle t)
		{
		}

		[Token(Token = "0x6000A81")]
		[Address(RVA = "0xB99380", Offset = "0xB99380", VA = "0xB99380")]
		public OVROverlaySample()
		{
		}

		[Token(Token = "0x6000A82")]
		[Address(RVA = "0xB99404", Offset = "0xB99404", VA = "0xB99404")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x776CF8", Offset = "0x776CF8")]
		private void <Start>b__24_0(Toggle t)
		{
		}

		[Token(Token = "0x6000A83")]
		[Address(RVA = "0xB9945C", Offset = "0xB9945C", VA = "0xB9945C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x776D08", Offset = "0x776D08")]
		private void <Start>b__24_1(Toggle t)
		{
		}

		[Token(Token = "0x6000A84")]
		[Address(RVA = "0xB994B4", Offset = "0xB994B4", VA = "0xB994B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x776D18", Offset = "0x776D18")]
		private void <Start>b__24_2(Toggle t)
		{
		}
	}
}
namespace OVRTouchSample
{
	[Token(Token = "0x200023C")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x7704D4", Offset = "0x7704D4")]
	public class Hand : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200023D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x770534", Offset = "0x770534")]
		private sealed class <>c
		{
			[Token(Token = "0x4000B4B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000B4C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Collider, bool> <>9__28_0;

			[Token(Token = "0x6000A98")]
			[Address(RVA = "0xB2B9F8", Offset = "0xB2B9F8", VA = "0xB2B9F8")]
			public <>c()
			{
			}

			[Token(Token = "0x6000A99")]
			[Address(RVA = "0xB2BA00", Offset = "0xB2BA00", VA = "0xB2BA00")]
			internal bool <Start>b__28_0(Collider childCollider)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000B2F")]
		public const string ANIM_LAYER_NAME_POINT = "Point Layer";

		[Token(Token = "0x4000B30")]
		public const string ANIM_LAYER_NAME_THUMB = "Thumb Layer";

		[Token(Token = "0x4000B31")]
		public const string ANIM_PARAM_NAME_FLEX = "Flex";

		[Token(Token = "0x4000B32")]
		public const string ANIM_PARAM_NAME_POSE = "Pose";

		[Token(Token = "0x4000B33")]
		public const float THRESH_COLLISION_FLEX = 0.9f;

		[Token(Token = "0x4000B34")]
		public const float INPUT_RATE_CHANGE = 20f;

		[Token(Token = "0x4000B35")]
		public const float COLLIDER_SCALE_MIN = 0.01f;

		[Token(Token = "0x4000B36")]
		public const float COLLIDER_SCALE_MAX = 1f;

		[Token(Token = "0x4000B37")]
		public const float COLLIDER_SCALE_PER_SECOND = 1f;

		[Token(Token = "0x4000B38")]
		public const float TRIGGER_DEBOUNCE_TIME = 0.05f;

		[Token(Token = "0x4000B39")]
		public const float THUMB_DEBOUNCE_TIME = 0.15f;

		[Token(Token = "0x4000B3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private OVRInput.Controller m_controller;

		[Token(Token = "0x4000B3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x4000B3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private HandPose m_defaultGrabPose;

		[Token(Token = "0x4000B3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Collider[] m_colliders;

		[Token(Token = "0x4000B3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool m_collisionEnabled;

		[Token(Token = "0x4000B3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private OVRGrabber m_grabber;

		[Token(Token = "0x4000B40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Renderer> m_showAfterInputFocusAcquired;

		[Token(Token = "0x4000B41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int m_animLayerIndexThumb;

		[Token(Token = "0x4000B42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int m_animLayerIndexPoint;

		[Token(Token = "0x4000B43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int m_animParamIndexFlex;

		[Token(Token = "0x4000B44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int m_animParamIndexPose;

		[Token(Token = "0x4000B45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_isPointing;

		[Token(Token = "0x4000B46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private bool m_isGivingThumbsUp;

		[Token(Token = "0x4000B47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float m_pointBlend;

		[Token(Token = "0x4000B48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float m_thumbsUpBlend;

		[Token(Token = "0x4000B49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private bool m_restoreOnInputAcquired;

		[Token(Token = "0x4000B4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float m_collisionScaleCurrent;

		[Token(Token = "0x6000A8B")]
		[Address(RVA = "0xC7073C", Offset = "0xC7073C", VA = "0xC7073C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000A8C")]
		[Address(RVA = "0xC70790", Offset = "0xC70790", VA = "0xC70790")]
		private void Start()
		{
		}

		[Token(Token = "0x6000A8D")]
		[Address(RVA = "0xC70C04", Offset = "0xC70C04", VA = "0xC70C04")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000A8E")]
		[Address(RVA = "0xC70CF0", Offset = "0xC70CF0", VA = "0xC70CF0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000A8F")]
		[Address(RVA = "0xC70E54", Offset = "0xC70E54", VA = "0xC70E54")]
		private void UpdateCapTouchStates()
		{
		}

		[Token(Token = "0x6000A90")]
		[Address(RVA = "0xC7115C", Offset = "0xC7115C", VA = "0xC7115C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000A91")]
		[Address(RVA = "0xC71254", Offset = "0xC71254", VA = "0xC71254")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x6000A92")]
		[Address(RVA = "0xC713B4", Offset = "0xC713B4", VA = "0xC713B4")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x6000A93")]
		[Address(RVA = "0xC70EEC", Offset = "0xC70EEC", VA = "0xC70EEC")]
		private float InputValueRateChange(bool isDown, float value)
		{
			return default(float);
		}

		[Token(Token = "0x6000A94")]
		[Address(RVA = "0xC70F40", Offset = "0xC70F40", VA = "0xC70F40")]
		private void UpdateAnimStates()
		{
		}

		[Token(Token = "0x6000A95")]
		[Address(RVA = "0xC70AA8", Offset = "0xC70AA8", VA = "0xC70AA8")]
		private void CollisionEnable(bool enabled)
		{
		}

		[Token(Token = "0x6000A96")]
		[Address(RVA = "0xC714F0", Offset = "0xC714F0", VA = "0xC714F0")]
		public Hand()
		{
		}
	}
	[Token(Token = "0x200023E")]
	public enum HandPoseId
	{
		[Token(Token = "0x4000B4E")]
		Default,
		[Token(Token = "0x4000B4F")]
		Generic,
		[Token(Token = "0x4000B50")]
		PingPongBall,
		[Token(Token = "0x4000B51")]
		Controller
	}
	[Token(Token = "0x200023F")]
	public class HandPose : MonoBehaviour
	{
		[Token(Token = "0x4000B52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool m_allowPointing;

		[Token(Token = "0x4000B53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[SerializeField]
		private bool m_allowThumbsUp;

		[Token(Token = "0x4000B54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private HandPoseId m_poseId;

		[Token(Token = "0x17000139")]
		public bool AllowPointing
		{
			[Token(Token = "0x6000A9A")]
			[Address(RVA = "0xC75BF8", Offset = "0xC75BF8", VA = "0xC75BF8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700013A")]
		public bool AllowThumbsUp
		{
			[Token(Token = "0x6000A9B")]
			[Address(RVA = "0xC75C00", Offset = "0xC75C00", VA = "0xC75C00")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700013B")]
		public HandPoseId PoseId
		{
			[Token(Token = "0x6000A9C")]
			[Address(RVA = "0xC75C08", Offset = "0xC75C08", VA = "0xC75C08")]
			get
			{
				return default(HandPoseId);
			}
		}

		[Token(Token = "0x6000A9D")]
		[Address(RVA = "0xC75C10", Offset = "0xC75C10", VA = "0xC75C10")]
		public HandPose()
		{
		}
	}
	[Token(Token = "0x2000240")]
	public class TouchController : MonoBehaviour
	{
		[Token(Token = "0x4000B55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private OVRInput.Controller m_controller;

		[Token(Token = "0x4000B56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x4000B57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool m_restoreOnInputAcquired;

		[Token(Token = "0x6000A9E")]
		[Address(RVA = "0xAF19F4", Offset = "0xAF19F4", VA = "0xAF19F4")]
		private void Update()
		{
		}

		[Token(Token = "0x6000A9F")]
		[Address(RVA = "0xAF1CDC", Offset = "0xAF1CDC", VA = "0xAF1CDC")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x6000AA0")]
		[Address(RVA = "0xAF1D38", Offset = "0xAF1D38", VA = "0xAF1D38")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x6000AA1")]
		[Address(RVA = "0xAF1D7C", Offset = "0xAF1D7C", VA = "0xAF1D7C")]
		public TouchController()
		{
		}
	}
}
namespace Oculus.Avatar
{
	[Token(Token = "0x2000241")]
	public static class AvatarLogger
	{
		[Token(Token = "0x4000B58")]
		public const string LogAvatar = "[Avatars] - ";

		[Token(Token = "0x4000B59")]
		public const string Tab = "    ";

		[Token(Token = "0x6000AA2")]
		[Address(RVA = "0xB46890", Offset = "0xB46890", VA = "0xB46890")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x776D78", Offset = "0x776D78")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x776D78", Offset = "0x776D78")]
		public static void Log(string logMsg)
		{
		}

		[Token(Token = "0x6000AA3")]
		[Address(RVA = "0xB46920", Offset = "0xB46920", VA = "0xB46920")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x776DD8", Offset = "0x776DD8")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x776DD8", Offset = "0x776DD8")]
		public static void Log(string logMsg, UnityEngine.Object context)
		{
		}

		[Token(Token = "0x6000AA4")]
		[Address(RVA = "0xB469C0", Offset = "0xB469C0", VA = "0xB469C0")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x776E38", Offset = "0x776E38")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x776E38", Offset = "0x776E38")]
		public static void LogWarning(string logMsg)
		{
		}

		[Token(Token = "0x6000AA5")]
		[Address(RVA = "0xB46A50", Offset = "0xB46A50", VA = "0xB46A50")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x776E98", Offset = "0x776E98")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x776E98", Offset = "0x776E98")]
		public static void LogError(string logMsg)
		{
		}

		[Token(Token = "0x6000AA6")]
		[Address(RVA = "0xB46AE0", Offset = "0xB46AE0", VA = "0xB46AE0")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x776EF8", Offset = "0x776EF8")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x776EF8", Offset = "0x776EF8")]
		public static void LogError(string logMsg, UnityEngine.Object context)
		{
		}
	}
	[Token(Token = "0x2000242")]
	public class CAPI
	{
		[Token(Token = "0x2000243")]
		public delegate void LoggingDelegate(IntPtr str);

		[Token(Token = "0x2000244")]
		public enum Result
		{
			[Token(Token = "0x4000B65")]
			Success = 0,
			[Token(Token = "0x4000B66")]
			Failure = -1000,
			[Token(Token = "0x4000B67")]
			Failure_InvalidParameter = -1001,
			[Token(Token = "0x4000B68")]
			Failure_NotInitialized = -1002,
			[Token(Token = "0x4000B69")]
			Failure_InvalidOperation = -1003,
			[Token(Token = "0x4000B6A")]
			Failure_Unsupported = -1004,
			[Token(Token = "0x4000B6B")]
			Failure_NotYetImplemented = -1005,
			[Token(Token = "0x4000B6C")]
			Failure_OperationFailed = -1006,
			[Token(Token = "0x4000B6D")]
			Failure_InsufficientSize = -1007
		}

		[Token(Token = "0x2000245")]
		private static class OVRP_1_30_0
		{
			[Token(Token = "0x4000B6E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly Version version;

			[PreserveSig]
			[Token(Token = "0x6000B3B")]
			[Address(RVA = "0xB281B4", Offset = "0xB281B4", VA = "0xB281B4")]
			public static extern Result ovrp_SendEvent2(string name, string param, string source);
		}

		[Token(Token = "0x4000B5A")]
		private const string LibFile = "ovravatarloader";

		[Token(Token = "0x4000B5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static IntPtr nativeVisemeData;

		[Token(Token = "0x4000B5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static IntPtr nativeGazeTargetsData;

		[Token(Token = "0x4000B5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static IntPtr nativeAvatarLightsData;

		[Token(Token = "0x4000B5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static IntPtr DebugLineCountData;

		[Token(Token = "0x4000B5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static float[] scratchBufferFloat;

		[Token(Token = "0x4000B60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static GameObject debugLineGo;

		[Token(Token = "0x4000B61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static string SDKRuntimePrefix;

		[Token(Token = "0x4000B62")]
		private const string ovrPluginDLL = "OVRPlugin";

		[Token(Token = "0x4000B63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static Version ovrPluginVersion;

		[PreserveSig]
		[Token(Token = "0x6000AA7")]
		[Address(RVA = "0x11D7118", Offset = "0x11D7118", VA = "0x11D7118")]
		public static extern void ovrAvatar_InitializeAndroidUnity(string appID);

		[Token(Token = "0x6000AA8")]
		[Address(RVA = "0x11D71A8", Offset = "0x11D71A8", VA = "0x11D71A8")]
		public static void Initialize()
		{
		}

		[Token(Token = "0x6000AA9")]
		[Address(RVA = "0x11D73C0", Offset = "0x11D73C0", VA = "0x11D73C0")]
		public static void Shutdown()
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000AAA")]
		[Address(RVA = "0x11D74A8", Offset = "0x11D74A8", VA = "0x11D74A8")]
		public static extern void ovrAvatar_Shutdown();

		[PreserveSig]
		[Token(Token = "0x6000AAB")]
		[Address(RVA = "0x11D7518", Offset = "0x11D7518", VA = "0x11D7518")]
		public static extern IntPtr ovrAvatarMessage_Pop();

		[PreserveSig]
		[Token(Token = "0x6000AAC")]
		[Address(RVA = "0x11D758C", Offset = "0x11D758C", VA = "0x11D758C")]
		public static extern ovrAvatarMessageType ovrAvatarMessage_GetType(IntPtr msg);

		[Token(Token = "0x6000AAD")]
		[Address(RVA = "0x11D760C", Offset = "0x11D760C", VA = "0x11D760C")]
		public static ovrAvatarMessage_AvatarSpecification ovrAvatarMessage_GetAvatarSpecification(IntPtr msg)
		{
			return default(ovrAvatarMessage_AvatarSpecification);
		}

		[PreserveSig]
		[Token(Token = "0x6000AAE")]
		[Address(RVA = "0x11D7750", Offset = "0x11D7750", VA = "0x11D7750")]
		private static extern IntPtr ovrAvatarMessage_GetAvatarSpecification_Native(IntPtr msg);

		[Token(Token = "0x6000AAF")]
		[Address(RVA = "0x11D77D0", Offset = "0x11D77D0", VA = "0x11D77D0")]
		public static ovrAvatarMessage_AssetLoaded ovrAvatarMessage_GetAssetLoaded(IntPtr msg)
		{
			return default(ovrAvatarMessage_AssetLoaded);
		}

		[PreserveSig]
		[Token(Token = "0x6000AB0")]
		[Address(RVA = "0x11D7914", Offset = "0x11D7914", VA = "0x11D7914")]
		private static extern IntPtr ovrAvatarMessage_GetAssetLoaded_Native(IntPtr msg);

		[PreserveSig]
		[Token(Token = "0x6000AB1")]
		[Address(RVA = "0x11D7994", Offset = "0x11D7994", VA = "0x11D7994")]
		public static extern void ovrAvatarMessage_Free(IntPtr msg);

		[PreserveSig]
		[Token(Token = "0x6000AB2")]
		[Address(RVA = "0x11D7A14", Offset = "0x11D7A14", VA = "0x11D7A14")]
		public static extern IntPtr ovrAvatarSpecificationRequest_Create(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6000AB3")]
		[Address(RVA = "0x11D7A94", Offset = "0x11D7A94", VA = "0x11D7A94")]
		public static extern void ovrAvatarSpecificationRequest_Destroy(IntPtr specificationRequest);

		[PreserveSig]
		[Token(Token = "0x6000AB4")]
		[Address(RVA = "0x11D7B14", Offset = "0x11D7B14", VA = "0x11D7B14")]
		public static extern void ovrAvatarSpecificationRequest_SetCombineMeshes(IntPtr specificationRequest, bool useCombinedMesh);

		[PreserveSig]
		[Token(Token = "0x6000AB5")]
		[Address(RVA = "0x11D7BA4", Offset = "0x11D7BA4", VA = "0x11D7BA4")]
		public static extern void ovrAvatarSpecificationRequest_SetLookAndFeelVersion(IntPtr specificationRequest, ovrAvatarLookAndFeelVersion version);

		[PreserveSig]
		[Token(Token = "0x6000AB6")]
		[Address(RVA = "0x11D7C34", Offset = "0x11D7C34", VA = "0x11D7C34")]
		public static extern void ovrAvatarSpecificationRequest_SetLevelOfDetail(IntPtr specificationRequest, ovrAvatarAssetLevelOfDetail lod);

		[PreserveSig]
		[Token(Token = "0x6000AB7")]
		[Address(RVA = "0x11D7CC4", Offset = "0x11D7CC4", VA = "0x11D7CC4")]
		public static extern void ovrAvatar_RequestAvatarSpecification(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6000AB8")]
		[Address(RVA = "0x11D7D44", Offset = "0x11D7D44", VA = "0x11D7D44")]
		public static extern void ovrAvatar_RequestAvatarSpecificationFromSpecRequest(IntPtr specificationRequest);

		[PreserveSig]
		[Token(Token = "0x6000AB9")]
		[Address(RVA = "0x11D7DC4", Offset = "0x11D7DC4", VA = "0x11D7DC4")]
		public static extern void ovrAvatarSpecificationRequest_SetFallbackLookAndFeelVersion(IntPtr specificationRequest, ovrAvatarLookAndFeelVersion version);

		[PreserveSig]
		[Token(Token = "0x6000ABA")]
		[Address(RVA = "0x11D7E54", Offset = "0x11D7E54", VA = "0x11D7E54")]
		public static extern void ovrAvatarSpecificationRequest_SetExpressiveFlag(IntPtr specificationRequest, bool enable);

		[PreserveSig]
		[Token(Token = "0x6000ABB")]
		[Address(RVA = "0x11D7EE4", Offset = "0x11D7EE4", VA = "0x11D7EE4")]
		public static extern IntPtr ovrAvatar_Create(IntPtr avatarSpecification, ovrAvatarCapabilities capabilities);

		[PreserveSig]
		[Token(Token = "0x6000ABC")]
		[Address(RVA = "0x11D7F74", Offset = "0x11D7F74", VA = "0x11D7F74")]
		public static extern void ovrAvatar_Destroy(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6000ABD")]
		[Address(RVA = "0x11D7FF4", Offset = "0x11D7FF4", VA = "0x11D7FF4")]
		public static extern void ovrAvatarPose_UpdateBody(IntPtr avatar, ovrAvatarTransform headPose);

		[Token(Token = "0x6000ABE")]
		[Address(RVA = "0x11D8094", Offset = "0x11D8094", VA = "0x11D8094")]
		public static void ovrAvatarPose_UpdateVoiceVisualization(IntPtr avatar, float[] pcmData)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000ABF")]
		[Address(RVA = "0x11D8110", Offset = "0x11D8110", VA = "0x11D8110")]
		private static extern void ovrAvatarPose_UpdateVoiceVisualization_Native(IntPtr avatar, uint pcmDataSize, [In] float[] pcmData);

		[PreserveSig]
		[Token(Token = "0x6000AC0")]
		[Address(RVA = "0x11D81B0", Offset = "0x11D81B0", VA = "0x11D81B0")]
		public static extern void ovrAvatarPose_UpdateHands(IntPtr avatar, ovrAvatarHandInputState inputStateLeft, ovrAvatarHandInputState inputStateRight);

		[PreserveSig]
		[Token(Token = "0x6000AC1")]
		[Address(RVA = "0x11D8270", Offset = "0x11D8270", VA = "0x11D8270")]
		public static extern void ovrAvatarPose_UpdateHandsWithType(IntPtr avatar, ovrAvatarHandInputState inputStateLeft, ovrAvatarHandInputState inputStateRight, ovrAvatarControllerType type);

		[PreserveSig]
		[Token(Token = "0x6000AC2")]
		[Address(RVA = "0x11D8340", Offset = "0x11D8340", VA = "0x11D8340")]
		public static extern void ovrAvatarPose_Finalize(IntPtr avatar, float elapsedSeconds);

		[PreserveSig]
		[Token(Token = "0x6000AC3")]
		[Address(RVA = "0x11D83D0", Offset = "0x11D83D0", VA = "0x11D83D0")]
		public static extern void ovrAvatar_SetLeftControllerVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x6000AC4")]
		[Address(RVA = "0x11D8460", Offset = "0x11D8460", VA = "0x11D8460")]
		public static extern void ovrAvatar_SetRightControllerVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x6000AC5")]
		[Address(RVA = "0x11D84F0", Offset = "0x11D84F0", VA = "0x11D84F0")]
		public static extern void ovrAvatar_SetLeftHandVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x6000AC6")]
		[Address(RVA = "0x11D8580", Offset = "0x11D8580", VA = "0x11D8580")]
		public static extern void ovrAvatar_SetRightHandVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x6000AC7")]
		[Address(RVA = "0x11D8610", Offset = "0x11D8610", VA = "0x11D8610")]
		public static extern uint ovrAvatarComponent_Count(IntPtr avatar);

		[Token(Token = "0x6000AC8")]
		[Address(RVA = "0x11D8690", Offset = "0x11D8690", VA = "0x11D8690")]
		public static void ovrAvatarComponent_Get(IntPtr avatar, uint index, bool includeName, ref ovrAvatarComponent component)
		{
		}

		[Token(Token = "0x6000AC9")]
		[Address(RVA = "0x11D87AC", Offset = "0x11D87AC", VA = "0x11D87AC")]
		public static void ovrAvatarComponent_Get(IntPtr componentPtr, bool includeName, ref ovrAvatarComponent component)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000ACA")]
		[Address(RVA = "0x11D871C", Offset = "0x11D871C", VA = "0x11D871C")]
		public static extern IntPtr ovrAvatarComponent_Get_Native(IntPtr avatar, uint index);

		[Token(Token = "0x6000ACB")]
		[Address(RVA = "0x11D89C0", Offset = "0x11D89C0", VA = "0x11D89C0")]
		public static bool ovrAvatarPose_GetBaseComponent(IntPtr avatar, ref ovrAvatarBaseComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6000ACC")]
		[Address(RVA = "0x11D8B30", Offset = "0x11D8B30", VA = "0x11D8B30")]
		private static extern IntPtr ovrAvatarPose_GetBaseComponent_Native(IntPtr avatar);

		[Token(Token = "0x6000ACD")]
		public static IntPtr MarshalRenderComponent<T>(IntPtr ptr) where T : struct
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6000ACE")]
		[Address(RVA = "0x11D8BB0", Offset = "0x11D8BB0", VA = "0x11D8BB0")]
		public static bool ovrAvatarPose_GetBodyComponent(IntPtr avatar, ref ovrAvatarBodyComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6000ACF")]
		[Address(RVA = "0x11D8E58", Offset = "0x11D8E58", VA = "0x11D8E58")]
		private static extern IntPtr ovrAvatarPose_GetBodyComponent_Native(IntPtr avatar);

		[Token(Token = "0x6000AD0")]
		[Address(RVA = "0x11D8ED8", Offset = "0x11D8ED8", VA = "0x11D8ED8")]
		public static bool ovrAvatarPose_GetLeftControllerComponent(IntPtr avatar, ref ovrAvatarControllerComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6000AD1")]
		[Address(RVA = "0x11D9048", Offset = "0x11D9048", VA = "0x11D9048")]
		private static extern IntPtr ovrAvatarPose_GetLeftControllerComponent_Native(IntPtr avatar);

		[Token(Token = "0x6000AD2")]
		[Address(RVA = "0x11D90C8", Offset = "0x11D90C8", VA = "0x11D90C8")]
		public static bool ovrAvatarPose_GetRightControllerComponent(IntPtr avatar, ref ovrAvatarControllerComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6000AD3")]
		[Address(RVA = "0x11D9238", Offset = "0x11D9238", VA = "0x11D9238")]
		private static extern IntPtr ovrAvatarPose_GetRightControllerComponent_Native(IntPtr avatar);

		[Token(Token = "0x6000AD4")]
		[Address(RVA = "0x11D92B8", Offset = "0x11D92B8", VA = "0x11D92B8")]
		public static bool ovrAvatarPose_GetLeftHandComponent(IntPtr avatar, ref ovrAvatarHandComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6000AD5")]
		[Address(RVA = "0x11D9428", Offset = "0x11D9428", VA = "0x11D9428")]
		private static extern IntPtr ovrAvatarPose_GetLeftHandComponent_Native(IntPtr avatar);

		[Token(Token = "0x6000AD6")]
		[Address(RVA = "0x11D94A8", Offset = "0x11D94A8", VA = "0x11D94A8")]
		public static bool ovrAvatarPose_GetRightHandComponent(IntPtr avatar, ref ovrAvatarHandComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6000AD7")]
		[Address(RVA = "0x11D9618", Offset = "0x11D9618", VA = "0x11D9618")]
		private static extern IntPtr ovrAvatarPose_GetRightHandComponent_Native(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6000AD8")]
		[Address(RVA = "0x11D9698", Offset = "0x11D9698", VA = "0x11D9698")]
		public static extern void ovrAvatarAsset_BeginLoading(ulong assetID);

		[PreserveSig]
		[Token(Token = "0x6000AD9")]
		[Address(RVA = "0x11D9718", Offset = "0x11D9718", VA = "0x11D9718")]
		public static extern bool ovrAvatarAsset_BeginLoadingLOD(ulong assetId, ovrAvatarAssetLevelOfDetail lod);

		[PreserveSig]
		[Token(Token = "0x6000ADA")]
		[Address(RVA = "0x11D97B0", Offset = "0x11D97B0", VA = "0x11D97B0")]
		public static extern ovrAvatarAssetType ovrAvatarAsset_GetType(IntPtr assetHandle);

		[Token(Token = "0x6000ADB")]
		[Address(RVA = "0x11D9830", Offset = "0x11D9830", VA = "0x11D9830")]
		public static ovrAvatarMeshAssetData ovrAvatarAsset_GetMeshData(IntPtr assetPtr)
		{
			return default(ovrAvatarMeshAssetData);
		}

		[Token(Token = "0x6000ADC")]
		[Address(RVA = "0x11D9A08", Offset = "0x11D9A08", VA = "0x11D9A08")]
		public static ovrAvatarMeshAssetDataV2 ovrAvatarAsset_GetCombinedMeshData(IntPtr assetPtr)
		{
			return default(ovrAvatarMeshAssetDataV2);
		}

		[PreserveSig]
		[Token(Token = "0x6000ADD")]
		[Address(RVA = "0x11D9B60", Offset = "0x11D9B60", VA = "0x11D9B60")]
		private static extern IntPtr ovrAvatarAsset_GetCombinedMeshData_Native(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6000ADE")]
		[Address(RVA = "0x11D9988", Offset = "0x11D9988", VA = "0x11D9988")]
		private static extern IntPtr ovrAvatarAsset_GetMeshData_Native(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6000ADF")]
		[Address(RVA = "0x11D9BE0", Offset = "0x11D9BE0", VA = "0x11D9BE0")]
		public static extern uint ovrAvatarAsset_GetMeshBlendShapeCount(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6000AE0")]
		[Address(RVA = "0x11D9C60", Offset = "0x11D9C60", VA = "0x11D9C60")]
		public static extern IntPtr ovrAvatarAsset_GetMeshBlendShapeName(IntPtr assetPtr, uint index);

		[PreserveSig]
		[Token(Token = "0x6000AE1")]
		[Address(RVA = "0x11D9CF0", Offset = "0x11D9CF0", VA = "0x11D9CF0")]
		public static extern uint ovrAvatarAsset_GetSubmeshCount(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6000AE2")]
		[Address(RVA = "0x11D9D70", Offset = "0x11D9D70", VA = "0x11D9D70")]
		public static extern uint ovrAvatarAsset_GetSubmeshLastIndex(IntPtr assetPtr, uint index);

		[PreserveSig]
		[Token(Token = "0x6000AE3")]
		[Address(RVA = "0x11D9E00", Offset = "0x11D9E00", VA = "0x11D9E00")]
		public static extern IntPtr ovrAvatarAsset_GetMeshBlendShapeVertices(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6000AE4")]
		[Address(RVA = "0x11D9E80", Offset = "0x11D9E80", VA = "0x11D9E80")]
		public static extern IntPtr ovrAvatarAsset_GetAvatar(IntPtr assetHandle);

		[Token(Token = "0x6000AE5")]
		[Address(RVA = "0x11D9F00", Offset = "0x11D9F00", VA = "0x11D9F00")]
		public static ulong[] ovrAvatarAsset_GetCombinedMeshIDs(IntPtr assetHandle)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000AE6")]
		[Address(RVA = "0x11DA18C", Offset = "0x11DA18C", VA = "0x11DA18C")]
		public static extern IntPtr ovrAvatarAsset_GetCombinedMeshIDs_Native(IntPtr assetHandle, IntPtr count);

		[Token(Token = "0x6000AE7")]
		[Address(RVA = "0x11DA21C", Offset = "0x11DA21C", VA = "0x11DA21C")]
		public static void ovrAvatar_GetCombinedMeshAlphaData(IntPtr avatar, ref ulong textureID, ref Vector4 offset)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000AE8")]
		[Address(RVA = "0x11DA44C", Offset = "0x11DA44C", VA = "0x11DA44C")]
		public static extern IntPtr ovrAvatar_GetCombinedMeshAlphaData_Native(IntPtr avatar, IntPtr textureIDPtr, IntPtr offsetPtr);

		[Token(Token = "0x6000AE9")]
		[Address(RVA = "0x11DA4E4", Offset = "0x11DA4E4", VA = "0x11DA4E4")]
		public static ovrAvatarTextureAssetData ovrAvatarAsset_GetTextureData(IntPtr assetPtr)
		{
			return default(ovrAvatarTextureAssetData);
		}

		[PreserveSig]
		[Token(Token = "0x6000AEA")]
		[Address(RVA = "0x11DA634", Offset = "0x11DA634", VA = "0x11DA634")]
		private static extern IntPtr ovrAvatarAsset_GetTextureData_Native(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6000AEB")]
		[Address(RVA = "0x11DA6B4", Offset = "0x11DA6B4", VA = "0x11DA6B4")]
		private static extern IntPtr ovrAvatarAsset_GetMaterialData_Native(IntPtr assetPtr);

		[Token(Token = "0x6000AEC")]
		[Address(RVA = "0x11DA734", Offset = "0x11DA734", VA = "0x11DA734")]
		public static ovrAvatarMaterialState ovrAvatarAsset_GetMaterialState(IntPtr assetPtr)
		{
			return default(ovrAvatarMaterialState);
		}

		[PreserveSig]
		[Token(Token = "0x6000AED")]
		[Address(RVA = "0x11DA888", Offset = "0x11DA888", VA = "0x11DA888")]
		public static extern ovrAvatarRenderPartType ovrAvatarRenderPart_GetType(IntPtr renderPart);

		[Token(Token = "0x6000AEE")]
		[Address(RVA = "0x11DA908", Offset = "0x11DA908", VA = "0x11DA908")]
		public static ovrAvatarRenderPart_SkinnedMeshRender ovrAvatarRenderPart_GetSkinnedMeshRender(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_SkinnedMeshRender);
		}

		[PreserveSig]
		[Token(Token = "0x6000AEF")]
		[Address(RVA = "0x11DAA5C", Offset = "0x11DAA5C", VA = "0x11DAA5C")]
		private static extern IntPtr ovrAvatarRenderPart_GetSkinnedMeshRender_Native(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000AF0")]
		[Address(RVA = "0x11DAADC", Offset = "0x11DAADC", VA = "0x11DAADC")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRender_GetTransform(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000AF1")]
		[Address(RVA = "0x11DAB6C", Offset = "0x11DAB6C", VA = "0x11DAB6C")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBS_GetTransform(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000AF2")]
		[Address(RVA = "0x11DABFC", Offset = "0x11DABFC", VA = "0x11DABFC")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBSV2_GetTransform(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000AF3")]
		[Address(RVA = "0x11DAC8C", Offset = "0x11DAC8C", VA = "0x11DAC8C")]
		public static extern ovrAvatarVisibilityFlags ovrAvatarSkinnedMeshRender_GetVisibilityMask(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000AF4")]
		[Address(RVA = "0x11DAD0C", Offset = "0x11DAD0C", VA = "0x11DAD0C")]
		public static extern bool ovrAvatarSkinnedMeshRender_MaterialStateChanged(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000AF5")]
		[Address(RVA = "0x11DAD94", Offset = "0x11DAD94", VA = "0x11DAD94")]
		public static extern bool ovrAvatarSkinnedMeshRenderPBSV2_MaterialStateChanged(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000AF6")]
		[Address(RVA = "0x11DAE1C", Offset = "0x11DAE1C", VA = "0x11DAE1C")]
		public static extern ovrAvatarVisibilityFlags ovrAvatarSkinnedMeshRenderPBS_GetVisibilityMask(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000AF7")]
		[Address(RVA = "0x11DAE9C", Offset = "0x11DAE9C", VA = "0x11DAE9C")]
		public static extern ovrAvatarVisibilityFlags ovrAvatarSkinnedMeshRenderPBSV2_GetVisibilityMask(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000AF8")]
		[Address(RVA = "0x11DAF1C", Offset = "0x11DAF1C", VA = "0x11DAF1C")]
		public static extern ovrAvatarMaterialState ovrAvatarSkinnedMeshRender_GetMaterialState(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000AF9")]
		[Address(RVA = "0x11DAFD0", Offset = "0x11DAFD0", VA = "0x11DAFD0")]
		public static extern ovrAvatarPBSMaterialState ovrAvatarSkinnedMeshRenderPBSV2_GetPBSMaterialState(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000AFA")]
		[Address(RVA = "0x11DB060", Offset = "0x11DB060", VA = "0x11DB060")]
		public static extern ovrAvatarExpressiveParameters ovrAvatar_GetExpressiveParameters(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6000AFB")]
		[Address(RVA = "0x11DB0F0", Offset = "0x11DB0F0", VA = "0x11DB0F0")]
		public static extern ulong ovrAvatarSkinnedMeshRender_GetDirtyJoints(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000AFC")]
		[Address(RVA = "0x11DB170", Offset = "0x11DB170", VA = "0x11DB170")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBS_GetDirtyJoints(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000AFD")]
		[Address(RVA = "0x11DB1F0", Offset = "0x11DB1F0", VA = "0x11DB1F0")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBSV2_GetDirtyJoints(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000AFE")]
		[Address(RVA = "0x11DB270", Offset = "0x11DB270", VA = "0x11DB270")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRender_GetJointTransform(IntPtr renderPart, uint jointIndex);

		[PreserveSig]
		[Token(Token = "0x6000AFF")]
		[Address(RVA = "0x11DB308", Offset = "0x11DB308", VA = "0x11DB308")]
		public static extern void ovrAvatar_SetActionUnitOnsetSpeed(IntPtr avatar, float onsetSpeed);

		[PreserveSig]
		[Token(Token = "0x6000B00")]
		[Address(RVA = "0x11DB398", Offset = "0x11DB398", VA = "0x11DB398")]
		public static extern void ovrAvatar_SetActionUnitFalloffSpeed(IntPtr avatar, float falloffSpeed);

		[PreserveSig]
		[Token(Token = "0x6000B01")]
		[Address(RVA = "0x11DB428", Offset = "0x11DB428", VA = "0x11DB428")]
		public static extern void ovrAvatar_SetVisemeMultiplier(IntPtr avatar, float visemeMultiplier);

		[PreserveSig]
		[Token(Token = "0x6000B02")]
		[Address(RVA = "0x11DB4B8", Offset = "0x11DB4B8", VA = "0x11DB4B8")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBS_GetJointTransform(IntPtr renderPart, uint jointIndex);

		[PreserveSig]
		[Token(Token = "0x6000B03")]
		[Address(RVA = "0x11DB550", Offset = "0x11DB550", VA = "0x11DB550")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBSV2_GetJointTransform(IntPtr renderPart, uint jointIndex);

		[PreserveSig]
		[Token(Token = "0x6000B04")]
		[Address(RVA = "0x11DB5E8", Offset = "0x11DB5E8", VA = "0x11DB5E8")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBS_GetAlbedoTextureAssetID(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000B05")]
		[Address(RVA = "0x11DB668", Offset = "0x11DB668", VA = "0x11DB668")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBS_GetSurfaceTextureAssetID(IntPtr renderPart);

		[Token(Token = "0x6000B06")]
		[Address(RVA = "0x11DB6E8", Offset = "0x11DB6E8", VA = "0x11DB6E8")]
		public static ovrAvatarRenderPart_SkinnedMeshRenderPBS ovrAvatarRenderPart_GetSkinnedMeshRenderPBS(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_SkinnedMeshRenderPBS);
		}

		[PreserveSig]
		[Token(Token = "0x6000B07")]
		[Address(RVA = "0x11DB83C", Offset = "0x11DB83C", VA = "0x11DB83C")]
		private static extern IntPtr ovrAvatarRenderPart_GetSkinnedMeshRenderPBS_Native(IntPtr renderPart);

		[Token(Token = "0x6000B08")]
		[Address(RVA = "0x11DB8BC", Offset = "0x11DB8BC", VA = "0x11DB8BC")]
		public static ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2 ovrAvatarRenderPart_GetSkinnedMeshRenderPBSV2(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2);
		}

		[PreserveSig]
		[Token(Token = "0x6000B09")]
		[Address(RVA = "0x11DBA10", Offset = "0x11DBA10", VA = "0x11DBA10")]
		private static extern IntPtr ovrAvatarRenderPart_GetSkinnedMeshRenderPBSV2_Native(IntPtr renderPart);

		[Token(Token = "0x6000B0A")]
		[Address(RVA = "0x11DBA90", Offset = "0x11DBA90", VA = "0x11DBA90")]
		public static void ovrAvatarSkinnedMeshRender_GetBlendShapeParams(IntPtr renderPart, ref ovrAvatarBlendShapeParams blendParams)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000B0B")]
		[Address(RVA = "0x11DBBCC", Offset = "0x11DBBCC", VA = "0x11DBBCC")]
		private static extern IntPtr ovrAvatarSkinnedMeshRender_GetBlendShapeParams_Native(IntPtr renderPart);

		[Token(Token = "0x6000B0C")]
		[Address(RVA = "0x11DBC4C", Offset = "0x11DBC4C", VA = "0x11DBC4C")]
		public static ovrAvatarRenderPart_ProjectorRender ovrAvatarRenderPart_GetProjectorRender(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_ProjectorRender);
		}

		[Token(Token = "0x6000B0D")]
		[Address(RVA = "0x11DBE20", Offset = "0x11DBE20", VA = "0x11DBE20")]
		public static ovrAvatarPBSMaterialState[] ovrAvatar_GetBodyPBSMaterialStates(IntPtr renderPart)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000B0E")]
		[Address(RVA = "0x11DC100", Offset = "0x11DC100", VA = "0x11DC100")]
		private static extern IntPtr ovrAvatar_GetBodyPBSMaterialStates_Native(IntPtr avatar, IntPtr count);

		[PreserveSig]
		[Token(Token = "0x6000B0F")]
		[Address(RVA = "0x11DBDA0", Offset = "0x11DBDA0", VA = "0x11DBDA0")]
		private static extern IntPtr ovrAvatarRenderPart_GetProjectorRender_Native(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000B10")]
		[Address(RVA = "0x11DC190", Offset = "0x11DC190", VA = "0x11DC190")]
		public static extern uint ovrAvatar_GetReferencedAssetCount(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6000B11")]
		[Address(RVA = "0x11DC210", Offset = "0x11DC210", VA = "0x11DC210")]
		public static extern ulong ovrAvatar_GetReferencedAsset(IntPtr avatar, uint index);

		[PreserveSig]
		[Token(Token = "0x6000B12")]
		[Address(RVA = "0x11DC2A0", Offset = "0x11DC2A0", VA = "0x11DC2A0")]
		public static extern void ovrAvatar_SetLeftHandGesture(IntPtr avatar, ovrAvatarHandGesture gesture);

		[PreserveSig]
		[Token(Token = "0x6000B13")]
		[Address(RVA = "0x11DC330", Offset = "0x11DC330", VA = "0x11DC330")]
		public static extern void ovrAvatar_SetRightHandGesture(IntPtr avatar, ovrAvatarHandGesture gesture);

		[PreserveSig]
		[Token(Token = "0x6000B14")]
		[Address(RVA = "0x11DC3C0", Offset = "0x11DC3C0", VA = "0x11DC3C0")]
		public static extern void ovrAvatar_SetLeftHandCustomGesture(IntPtr avatar, uint jointCount, [In] ovrAvatarTransform[] customJointTransforms);

		[PreserveSig]
		[Token(Token = "0x6000B15")]
		[Address(RVA = "0x11DC460", Offset = "0x11DC460", VA = "0x11DC460")]
		public static extern void ovrAvatar_SetRightHandCustomGesture(IntPtr avatar, uint jointCount, [In] ovrAvatarTransform[] customJointTransforms);

		[PreserveSig]
		[Token(Token = "0x6000B16")]
		[Address(RVA = "0x11DC500", Offset = "0x11DC500", VA = "0x11DC500")]
		public static extern void ovrAvatar_UpdatePoseFromPacket(IntPtr avatar, IntPtr packet, float secondsFromStart);

		[PreserveSig]
		[Token(Token = "0x6000B17")]
		[Address(RVA = "0x11DC5A0", Offset = "0x11DC5A0", VA = "0x11DC5A0")]
		public static extern void ovrAvatarPacket_BeginRecording(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6000B18")]
		[Address(RVA = "0x11DC620", Offset = "0x11DC620", VA = "0x11DC620")]
		public static extern IntPtr ovrAvatarPacket_EndRecording(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6000B19")]
		[Address(RVA = "0x11DC6A0", Offset = "0x11DC6A0", VA = "0x11DC6A0")]
		public static extern uint ovrAvatarPacket_GetSize(IntPtr packet);

		[PreserveSig]
		[Token(Token = "0x6000B1A")]
		[Address(RVA = "0x11DC720", Offset = "0x11DC720", VA = "0x11DC720")]
		public static extern float ovrAvatarPacket_GetDurationSeconds(IntPtr packet);

		[PreserveSig]
		[Token(Token = "0x6000B1B")]
		[Address(RVA = "0x11DC7A0", Offset = "0x11DC7A0", VA = "0x11DC7A0")]
		public static extern void ovrAvatarPacket_Free(IntPtr packet);

		[PreserveSig]
		[Token(Token = "0x6000B1C")]
		[Address(RVA = "0x11DC820", Offset = "0x11DC820", VA = "0x11DC820")]
		public static extern bool ovrAvatarPacket_Write(IntPtr packet, uint bufferSize, [Out] byte[] buffer);

		[PreserveSig]
		[Token(Token = "0x6000B1D")]
		[Address(RVA = "0x11DC948", Offset = "0x11DC948", VA = "0x11DC948")]
		public static extern IntPtr ovrAvatarPacket_Read(uint bufferSize, [In] byte[] buffer);

		[PreserveSig]
		[Token(Token = "0x6000B1E")]
		[Address(RVA = "0x11DC9E0", Offset = "0x11DC9E0", VA = "0x11DC9E0")]
		private static extern void ovrAvatar_SetInternalForceASTCTextures(bool value);

		[Token(Token = "0x6000B1F")]
		[Address(RVA = "0x11DCA60", Offset = "0x11DCA60", VA = "0x11DCA60")]
		public static void ovrAvatar_SetForceASTCTextures(bool value)
		{
		}

		[Token(Token = "0x6000B20")]
		[Address(RVA = "0x11DCAC0", Offset = "0x11DCAC0", VA = "0x11DCAC0")]
		public static void ovrAvatar_OverrideExpressiveLogic(IntPtr avatar, ovrAvatarBlendShapeParams blendParams)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000B21")]
		[Address(RVA = "0x11DCC08", Offset = "0x11DCC08", VA = "0x11DCC08")]
		private static extern void ovrAvatar_OverrideExpressiveLogic_Native(IntPtr avatar, IntPtr state);

		[Token(Token = "0x6000B22")]
		[Address(RVA = "0x11DCC98", Offset = "0x11DCC98", VA = "0x11DCC98")]
		public static void ovrAvatar_SetVisemes(IntPtr avatar, ovrAvatarVisemes visemes)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000B23")]
		[Address(RVA = "0x11DCDF0", Offset = "0x11DCDF0", VA = "0x11DCDF0")]
		private static extern void ovrAvatar_SetVisemes_Native(IntPtr avatar, IntPtr visemes);

		[PreserveSig]
		[Token(Token = "0x6000B24")]
		[Address(RVA = "0x11DCE80", Offset = "0x11DCE80", VA = "0x11DCE80")]
		public static extern void ovrAvatar_UpdateWorldTransform(IntPtr avatar, ovrAvatarTransform transform);

		[Token(Token = "0x6000B25")]
		[Address(RVA = "0x11DCF20", Offset = "0x11DCF20", VA = "0x11DCF20")]
		public static void ovrAvatar_UpdateGazeTargets(ovrAvatarGazeTargets targets)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000B26")]
		[Address(RVA = "0x11DD2F0", Offset = "0x11DD2F0", VA = "0x11DD2F0")]
		private static extern void ovrAvatar_UpdateGazeTargets_Native(IntPtr targets);

		[PreserveSig]
		[Token(Token = "0x6000B27")]
		[Address(RVA = "0x11DD370", Offset = "0x11DD370", VA = "0x11DD370")]
		public static extern void ovrAvatar_RemoveGazeTargets(uint targetCount, uint[] ids);

		[Token(Token = "0x6000B28")]
		[Address(RVA = "0x11DD408", Offset = "0x11DD408", VA = "0x11DD408")]
		public static void ovrAvatar_UpdateLights(ovrAvatarLights lights)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000B29")]
		[Address(RVA = "0x11DDC68", Offset = "0x11DDC68", VA = "0x11DDC68")]
		private static extern void ovrAvatar_UpdateLights_Native(IntPtr lights);

		[PreserveSig]
		[Token(Token = "0x6000B2A")]
		[Address(RVA = "0x11DDCE8", Offset = "0x11DDCE8", VA = "0x11DDCE8")]
		public static extern void ovrAvatar_RemoveLights(uint lightCount, uint[] ids);

		[Token(Token = "0x6000B2B")]
		[Address(RVA = "0x11D70B4", Offset = "0x11D70B4", VA = "0x11D70B4")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x776F58", Offset = "0x776F58")]
		public static void LoggingCallback(IntPtr str)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000B2C")]
		[Address(RVA = "0x11DDD80", Offset = "0x11DDD80", VA = "0x11DDD80")]
		public static extern void ovrAvatar_RegisterLoggingCallback(LoggingDelegate callback);

		[PreserveSig]
		[Token(Token = "0x6000B2D")]
		[Address(RVA = "0x11DDE04", Offset = "0x11DDE04", VA = "0x11DDE04")]
		public static extern void ovrAvatar_SetLoggingLevel(ovrAvatarLogLevel level);

		[PreserveSig]
		[Token(Token = "0x6000B2E")]
		[Address(RVA = "0x11DDE84", Offset = "0x11DDE84", VA = "0x11DDE84")]
		public static extern IntPtr ovrAvatar_GetDebugTransforms_Native(IntPtr count);

		[PreserveSig]
		[Token(Token = "0x6000B2F")]
		[Address(RVA = "0x11DDF04", Offset = "0x11DDF04", VA = "0x11DDF04")]
		public static extern IntPtr ovrAvatar_GetDebugLines_Native(IntPtr count);

		[Token(Token = "0x6000B30")]
		[Address(RVA = "0x11DDF84", Offset = "0x11DDF84", VA = "0x11DDF84")]
		public static void ovrAvatar_DrawDebugLines()
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000B31")]
		[Address(RVA = "0x11DE948", Offset = "0x11DE948", VA = "0x11DE948")]
		public static extern void ovrAvatar_SetDebugDrawContext(uint context);

		[Token(Token = "0x6000B32")]
		[Address(RVA = "0x11DE9C8", Offset = "0x11DE9C8", VA = "0x11DE9C8")]
		public static bool SendEvent(string name, string param = "", string source = "")
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6000B33")]
		[Address(RVA = "0x11DEDE8", Offset = "0x11DEDE8", VA = "0x11DEDE8")]
		private static extern IntPtr _ovrp_GetVersion();

		[Token(Token = "0x6000B34")]
		[Address(RVA = "0x11DED50", Offset = "0x11DED50", VA = "0x11DED50")]
		public static string ovrp_GetVersion()
		{
			return null;
		}

		[Token(Token = "0x6000B35")]
		[Address(RVA = "0x11DEE5C", Offset = "0x11DEE5C", VA = "0x11DEE5C")]
		public CAPI()
		{
		}
	}
}
namespace SuckerPunch
{
	[Token(Token = "0x2000246")]
	public class MatchLoading : MonoBehaviour
	{
		[Token(Token = "0x4000B6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UIText statusText;

		[Token(Token = "0x6000B3D")]
		[Address(RVA = "0xE51EAC", Offset = "0xE51EAC", VA = "0xE51EAC")]
		private void Update()
		{
		}

		[Token(Token = "0x6000B3E")]
		[Address(RVA = "0xE52130", Offset = "0xE52130", VA = "0xE52130")]
		public MatchLoading()
		{
		}
	}
	[Token(Token = "0x2000247")]
	public class AITarget : ScriptableObject
	{
		[Token(Token = "0x4000B70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector2 position;

		[Token(Token = "0x4000B71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float velocity;

		[Token(Token = "0x4000B72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float value;

		[Token(Token = "0x4000B73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float timeToArrive;

		[Token(Token = "0x6000B3F")]
		[Address(RVA = "0xB3A844", Offset = "0xB3A844", VA = "0xB3A844")]
		public AITarget()
		{
		}
	}
	[Token(Token = "0x2000248")]
	public class AIPlayer : MonoBehaviour
	{
		[Token(Token = "0x2000249")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x770544", Offset = "0x770544")]
		private sealed class <>c__DisplayClass35_0
		{
			[Token(Token = "0x4000B8A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public AIPlayer <>4__this;

			[Token(Token = "0x4000B8B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Block b;

			[Token(Token = "0x6000B51")]
			[Address(RVA = "0xB027E4", Offset = "0xB027E4", VA = "0xB027E4")]
			public <>c__DisplayClass35_0()
			{
			}

			[Token(Token = "0x6000B52")]
			[Address(RVA = "0xB027EC", Offset = "0xB027EC", VA = "0xB027EC")]
			internal void <AddTarget>b__0()
			{
			}
		}

		[Token(Token = "0x4000B74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float maxSpeed;

		[Token(Token = "0x4000B75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float acceleration;

		[Token(Token = "0x4000B76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected float speed;

		[Token(Token = "0x4000B77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool useScore;

		[Token(Token = "0x4000B78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		public bool groupBlocks;

		[Token(Token = "0x4000B79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Paddle paddle;

		[Token(Token = "0x4000B7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform paddleRoot;

		[Token(Token = "0x4000B7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected Vector3 centerPosition;

		[Token(Token = "0x4000B7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected AITarget targetBlock;

		[Token(Token = "0x4000B7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected List<Block> potentialTargets;

		[Token(Token = "0x4000B7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected Vector3 goalPosition;

		[Token(Token = "0x4000B7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public bool isArm;

		[Token(Token = "0x4000B80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		protected List<AIPlayer> arms;

		[Token(Token = "0x4000B81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Transform parentBody;

		[Token(Token = "0x4000B82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public float maxDistanceFromBody;

		[Token(Token = "0x4000B83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Transform parkedPosition;

		[Token(Token = "0x4000B84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float buddyLongevity;

		[Token(Token = "0x4000B85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		protected bool parked;

		[Token(Token = "0x4000B86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		protected float buddyTimer;

		[Token(Token = "0x4000B87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public DroneIdleController buddyIdleController;

		[Token(Token = "0x4000B88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public Transform buddyParentOffset;

		[Token(Token = "0x4000B89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public LookAtConstraint LookAt;

		[Token(Token = "0x1700013C")]
		public AITarget Target
		{
			[Token(Token = "0x6000B40")]
			[Address(RVA = "0xB38DC4", Offset = "0xB38DC4", VA = "0xB38DC4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B41")]
			[Address(RVA = "0xB38DCC", Offset = "0xB38DCC", VA = "0xB38DCC")]
			set
			{
			}
		}

		[Token(Token = "0x1700013D")]
		public bool Parked
		{
			[Token(Token = "0x6000B42")]
			[Address(RVA = "0xB38DD4", Offset = "0xB38DD4", VA = "0xB38DD4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000B43")]
			[Address(RVA = "0xB38DDC", Offset = "0xB38DDC", VA = "0xB38DDC")]
			set
			{
			}
		}

		[Token(Token = "0x6000B44")]
		[Address(RVA = "0xB38EF4", Offset = "0xB38EF4", VA = "0xB38EF4")]
		private void Start()
		{
		}

		[Token(Token = "0x6000B45")]
		[Address(RVA = "0xB390F8", Offset = "0xB390F8", VA = "0xB390F8")]
		private void Update()
		{
		}

		[Token(Token = "0x6000B46")]
		[Address(RVA = "0xB399F8", Offset = "0xB399F8", VA = "0xB399F8")]
		protected bool NeedsNewTarget()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B47")]
		[Address(RVA = "0xB39454", Offset = "0xB39454", VA = "0xB39454")]
		protected void FindNextTarget()
		{
		}

		[Token(Token = "0x6000B48")]
		[Address(RVA = "0xB39A80", Offset = "0xB39A80", VA = "0xB39A80")]
		protected void CleanUpTargets(List<Block> blocks)
		{
		}

		[Token(Token = "0x6000B49")]
		[Address(RVA = "0xB39B88", Offset = "0xB39B88", VA = "0xB39B88")]
		protected List<AITarget> PrioritizeBlocks(Vector3 position, List<Block> blocks)
		{
			return null;
		}

		[Token(Token = "0x6000B4A")]
		[Address(RVA = "0xB39F74", Offset = "0xB39F74", VA = "0xB39F74")]
		protected List<AITarget> GroupTargets(List<AITarget> targets)
		{
			return null;
		}

		[Token(Token = "0x6000B4B")]
		[Address(RVA = "0xB3A354", Offset = "0xB3A354", VA = "0xB3A354")]
		public void AddTarget(Block b)
		{
		}

		[Token(Token = "0x6000B4C")]
		[Address(RVA = "0xB3A4C8", Offset = "0xB3A4C8", VA = "0xB3A4C8")]
		public void RemoveTarget(Block b)
		{
		}

		[Token(Token = "0x6000B4D")]
		[Address(RVA = "0xB3A660", Offset = "0xB3A660", VA = "0xB3A660")]
		public void InitiateBuddy()
		{
		}

		[Token(Token = "0x6000B4E")]
		[Address(RVA = "0xB3A694", Offset = "0xB3A694", VA = "0xB3A694")]
		public AIPlayer()
		{
		}

		[Token(Token = "0x6000B4F")]
		[Address(RVA = "0xB3A768", Offset = "0xB3A768", VA = "0xB3A768")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x776FB8", Offset = "0x776FB8")]
		private void <Start>b__28_0()
		{
		}

		[Token(Token = "0x6000B50")]
		[Address(RVA = "0xB3A784", Offset = "0xB3A784", VA = "0xB3A784")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x776FC8", Offset = "0x776FC8")]
		private float <PrioritizeBlocks>b__33_0(AITarget b)
		{
			return default(float);
		}
	}
	[Token(Token = "0x200024A")]
	public class ArcadeManager : DataManager<ArcadeManager>
	{
		[Token(Token = "0x4000B8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public ArenaList Arenas;

		[Token(Token = "0x4000B8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public DroneList EasyDrones;

		[Token(Token = "0x4000B8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public DroneList MediumDrones;

		[Token(Token = "0x4000B8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public DroneList HardDrones;

		[Token(Token = "0x4000B90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public DroneList ExpertDrones;

		[Token(Token = "0x4000B91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public DroneList ExpertPlusDrones;

		[Token(Token = "0x4000B92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public DroneList SuperDrones;

		[Token(Token = "0x4000B93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		protected ArcadeRuns runs;

		[Token(Token = "0x4000B94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		protected ArcadeRun currentRun;

		[Token(Token = "0x4000B95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		protected ArcadeMatch currentMatch;

		[Token(Token = "0x4000B96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		protected ArcadeManagerData arcadeData;

		[Token(Token = "0x4000B97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		protected bool done;

		[Token(Token = "0x4000B98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		protected List<string> availableDrones;

		[Token(Token = "0x4000B99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		protected List<string> availableArenas;

		[Token(Token = "0x1700013E")]
		public ArcadeRun CurrentRun
		{
			[Token(Token = "0x6000B53")]
			[Address(RVA = "0xB408D4", Offset = "0xB408D4", VA = "0xB408D4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700013F")]
		public ArcadeMatch CurrentMatch
		{
			[Token(Token = "0x6000B54")]
			[Address(RVA = "0xB408DC", Offset = "0xB408DC", VA = "0xB408DC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000140")]
		public int Level
		{
			[Token(Token = "0x6000B55")]
			[Address(RVA = "0xB3D928", Offset = "0xB3D928", VA = "0xB3D928")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000B56")]
			[Address(RVA = "0xB408E4", Offset = "0xB408E4", VA = "0xB408E4")]
			set
			{
			}
		}

		[Token(Token = "0x17000141")]
		public int Score
		{
			[Token(Token = "0x6000B57")]
			[Address(RVA = "0xB3D944", Offset = "0xB3D944", VA = "0xB3D944")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000B58")]
			[Address(RVA = "0xB40CC4", Offset = "0xB40CC4", VA = "0xB40CC4")]
			set
			{
			}
		}

		[Token(Token = "0x17000142")]
		public int MatchScore
		{
			[Token(Token = "0x6000B59")]
			[Address(RVA = "0xB3D960", Offset = "0xB3D960", VA = "0xB3D960")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000143")]
		public string UUID
		{
			[Token(Token = "0x6000B5A")]
			[Address(RVA = "0xB3D90C", Offset = "0xB3D90C", VA = "0xB3D90C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000144")]
		public bool Done
		{
			[Token(Token = "0x6000B5B")]
			[Address(RVA = "0xB40D10", Offset = "0xB40D10", VA = "0xB40D10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000B5C")]
			[Address(RVA = "0xB40D18", Offset = "0xB40D18", VA = "0xB40D18")]
			set
			{
			}
		}

		[Token(Token = "0x6000B5D")]
		[Address(RVA = "0xB41080", Offset = "0xB41080", VA = "0xB41080")]
		public void InitFromData()
		{
		}

		[Token(Token = "0x6000B5E")]
		[Address(RVA = "0xB41378", Offset = "0xB41378", VA = "0xB41378")]
		public void Begin()
		{
		}

		[Token(Token = "0x6000B5F")]
		[Address(RVA = "0xB41578", Offset = "0xB41578", VA = "0xB41578")]
		public void Continue()
		{
		}

		[Token(Token = "0x6000B60")]
		[Address(RVA = "0xB409AC", Offset = "0xB409AC", VA = "0xB409AC")]
		protected bool DoDronesChange(int a, int b)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B61")]
		[Address(RVA = "0xB40AF0", Offset = "0xB40AF0", VA = "0xB40AF0")]
		protected void FillAvailableDrones()
		{
		}

		[Token(Token = "0x6000B62")]
		[Address(RVA = "0xB41404", Offset = "0xB41404", VA = "0xB41404")]
		protected void FillAvailableArenas()
		{
		}

		[Token(Token = "0x6000B63")]
		[Address(RVA = "0xB41178", Offset = "0xB41178", VA = "0xB41178")]
		public ArcadeMatch NextMatch(string droneUID = "", string arenaUID = "")
		{
			return null;
		}

		[Token(Token = "0x6000B64")]
		[Address(RVA = "0xB416D8", Offset = "0xB416D8", VA = "0xB416D8")]
		protected string FindDrone()
		{
			return null;
		}

		[Token(Token = "0x6000B65")]
		[Address(RVA = "0xB41840", Offset = "0xB41840", VA = "0xB41840")]
		protected string FindArena()
		{
			return null;
		}

		[Token(Token = "0x6000B66")]
		[Address(RVA = "0xB4167C", Offset = "0xB4167C", VA = "0xB4167C")]
		protected DroneList DronesForLevel(int lev)
		{
			return null;
		}

		[Token(Token = "0x6000B67")]
		[Address(RVA = "0xB41D7C", Offset = "0xB41D7C", VA = "0xB41D7C")]
		public ArcadeManager()
		{
		}
	}
	[Token(Token = "0x200024B")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x770554", Offset = "0x770554")]
	public class ArcadeManagerData : PersistentData
	{
		[Token(Token = "0x4000B9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string uuid;

		[Token(Token = "0x4000B9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int level;

		[Token(Token = "0x4000B9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int score;

		[Token(Token = "0x4000B9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string startTime;

		[Token(Token = "0x4000B9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool done;

		[Token(Token = "0x4000B9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string nextDrone;

		[Token(Token = "0x4000BA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string nextArena;

		[Token(Token = "0x17000145")]
		public override JSONNode json
		{
			[Token(Token = "0x6000B68")]
			[Address(RVA = "0xB41E54", Offset = "0xB41E54", VA = "0xB41E54", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B69")]
		[Address(RVA = "0xB42078", Offset = "0xB42078", VA = "0xB42078", Slot = "7")]
		public override void Init(JSONNode j)
		{
		}

		[Token(Token = "0x6000B6A")]
		[Address(RVA = "0xB42334", Offset = "0xB42334", VA = "0xB42334")]
		public ArcadeManagerData()
		{
		}
	}
	[Token(Token = "0x200024C")]
	public class ArcadeManagerReference : MonoBehaviour
	{
		[Token(Token = "0x6000B6B")]
		[Address(RVA = "0xB42344", Offset = "0xB42344", VA = "0xB42344")]
		public void CheckArcadeRun()
		{
		}

		[Token(Token = "0x6000B6C")]
		[Address(RVA = "0xB423F8", Offset = "0xB423F8", VA = "0xB423F8")]
		public void BeginArcade()
		{
		}

		[Token(Token = "0x6000B6D")]
		[Address(RVA = "0xB42518", Offset = "0xB42518", VA = "0xB42518")]
		public void ContinueArcade()
		{
		}

		[Token(Token = "0x6000B6E")]
		[Address(RVA = "0xB42478", Offset = "0xB42478", VA = "0xB42478")]
		public void PlayNextMatch()
		{
		}

		[Token(Token = "0x6000B6F")]
		[Address(RVA = "0xB42638", Offset = "0xB42638", VA = "0xB42638")]
		public void PlayCurrentMatch()
		{
		}

		[Token(Token = "0x6000B70")]
		[Address(RVA = "0xB426BC", Offset = "0xB426BC", VA = "0xB426BC")]
		public void PlayNextLevel()
		{
		}

		[Token(Token = "0x6000B71")]
		[Address(RVA = "0xB4274C", Offset = "0xB4274C", VA = "0xB4274C")]
		public void AdvanceLevel()
		{
		}

		[Token(Token = "0x6000B72")]
		[Address(RVA = "0xB42804", Offset = "0xB42804", VA = "0xB42804")]
		public ArcadeManagerReference()
		{
		}
	}
	[Token(Token = "0x200024D")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x770564", Offset = "0x770564")]
	public class ArcadeMatch : ChallengeMatch
	{
		[Token(Token = "0x4000BA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public int ArcadeLevel;

		[Token(Token = "0x17000146")]
		public override MatchType Type
		{
			[Token(Token = "0x6000B73")]
			[Address(RVA = "0xB4280C", Offset = "0xB4280C", VA = "0xB4280C", Slot = "8")]
			get
			{
				return default(MatchType);
			}
		}

		[Token(Token = "0x17000147")]
		public int ArcadeScore
		{
			[Token(Token = "0x6000B76")]
			[Address(RVA = "0xB40CE0", Offset = "0xB40CE0", VA = "0xB40CE0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6000B74")]
		[Address(RVA = "0xB41958", Offset = "0xB41958", VA = "0xB41958")]
		public static ArcadeMatch create(int level, string drone, string arena)
		{
			return null;
		}

		[Token(Token = "0x6000B75")]
		[Address(RVA = "0xB42814", Offset = "0xB42814", VA = "0xB42814")]
		protected void SetupMatch(int award, int numblocks, int goal, bool move, bool split, bool gloves)
		{
		}

		[Token(Token = "0x6000B77")]
		[Address(RVA = "0xB42840", Offset = "0xB42840", VA = "0xB42840")]
		public ArcadeMatch()
		{
		}
	}
	[Token(Token = "0x200024E")]
	public class ArcadeMatchDisplay : MonoBehaviour
	{
		[Token(Token = "0x4000BA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UIText LevelText;

		[Token(Token = "0x6000B78")]
		[Address(RVA = "0xB42848", Offset = "0xB42848", VA = "0xB42848")]
		private void Start()
		{
		}

		[Token(Token = "0x6000B79")]
		[Address(RVA = "0xB42914", Offset = "0xB42914", VA = "0xB42914")]
		protected void UpdateDisplay()
		{
		}

		[Token(Token = "0x6000B7A")]
		[Address(RVA = "0xB42A00", Offset = "0xB42A00", VA = "0xB42A00")]
		public ArcadeMatchDisplay()
		{
		}
	}
	[Token(Token = "0x200024F")]
	public class ArcadeRecentDisplay : MonoBehaviour
	{
		[Token(Token = "0x4000BA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject recentList;

		[Token(Token = "0x4000BA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UIText BestScore;

		[Token(Token = "0x4000BA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UIText BestLevel;

		[Token(Token = "0x4000BA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<UIText> RecentScores;

		[Token(Token = "0x4000BA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public List<UIText> RecentLevels;

		[Token(Token = "0x4000BA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public ArcadeRuns ArcadeLog;

		[Token(Token = "0x6000B7B")]
		[Address(RVA = "0xB42A08", Offset = "0xB42A08", VA = "0xB42A08")]
		private void Start()
		{
		}

		[Token(Token = "0x6000B7C")]
		[Address(RVA = "0xB42A98", Offset = "0xB42A98", VA = "0xB42A98")]
		protected void UpdateDisplay()
		{
		}

		[Token(Token = "0x6000B7D")]
		[Address(RVA = "0xB43140", Offset = "0xB43140", VA = "0xB43140")]
		protected void FillArcadeRun(ArcadeRun run, UIText score, UIText level)
		{
		}

		[Token(Token = "0x6000B7E")]
		[Address(RVA = "0xB4337C", Offset = "0xB4337C", VA = "0xB4337C")]
		public ArcadeRecentDisplay()
		{
		}
	}
	[Token(Token = "0x2000250")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x770574", Offset = "0x770574")]
	public class ArcadeRun : PersistentData
	{
		[Token(Token = "0x4000BA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected string uuid;

		[Token(Token = "0x4000BAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected int level;

		[Token(Token = "0x4000BAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		protected int score;

		[Token(Token = "0x4000BAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected string startTime;

		[Token(Token = "0x17000148")]
		public string UUID
		{
			[Token(Token = "0x6000B7F")]
			[Address(RVA = "0xB43384", Offset = "0xB43384", VA = "0xB43384")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B80")]
			[Address(RVA = "0xB4338C", Offset = "0xB4338C", VA = "0xB4338C")]
			set
			{
			}
		}

		[Token(Token = "0x17000149")]
		public int Level
		{
			[Token(Token = "0x6000B81")]
			[Address(RVA = "0xB43394", Offset = "0xB43394", VA = "0xB43394")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000B82")]
			[Address(RVA = "0xB4339C", Offset = "0xB4339C", VA = "0xB4339C")]
			set
			{
			}
		}

		[Token(Token = "0x1700014A")]
		public int Score
		{
			[Token(Token = "0x6000B83")]
			[Address(RVA = "0xB433A4", Offset = "0xB433A4", VA = "0xB433A4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000B84")]
			[Address(RVA = "0xB433AC", Offset = "0xB433AC", VA = "0xB433AC")]
			set
			{
			}
		}

		[Token(Token = "0x1700014B")]
		public string StartTime
		{
			[Token(Token = "0x6000B85")]
			[Address(RVA = "0xB433B4", Offset = "0xB433B4", VA = "0xB433B4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B86")]
			[Address(RVA = "0xB433BC", Offset = "0xB433BC", VA = "0xB433BC")]
			set
			{
			}
		}

		[Token(Token = "0x1700014C")]
		public override JSONNode json
		{
			[Token(Token = "0x6000B87")]
			[Address(RVA = "0xB433C4", Offset = "0xB433C4", VA = "0xB433C4", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B88")]
		[Address(RVA = "0xB40F20", Offset = "0xB40F20", VA = "0xB40F20")]
		public static ArcadeRun create([Optional] JSONNode j)
		{
			return null;
		}

		[Token(Token = "0x6000B89")]
		[Address(RVA = "0xB43540", Offset = "0xB43540", VA = "0xB43540", Slot = "7")]
		public override void Init(JSONNode j)
		{
		}

		[Token(Token = "0x6000B8A")]
		[Address(RVA = "0xB436EC", Offset = "0xB436EC", VA = "0xB436EC")]
		public ArcadeRun()
		{
		}
	}
	[Token(Token = "0x2000251")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x770584", Offset = "0x770584")]
	public class ArcadeRuns : PersistentData
	{
		[Token(Token = "0x4000BAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SortedList<DateTime, ArcadeRun> runs;

		[Token(Token = "0x1700014D")]
		public int Count
		{
			[Token(Token = "0x6000B8B")]
			[Address(RVA = "0xB42DF8", Offset = "0xB42DF8", VA = "0xB42DF8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700014E")]
		public override JSONNode json
		{
			[Token(Token = "0x6000B8C")]
			[Address(RVA = "0xB436F4", Offset = "0xB436F4", VA = "0xB436F4", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700014F")]
		public ArcadeRun Best
		{
			[Token(Token = "0x6000B8D")]
			[Address(RVA = "0xB42E44", Offset = "0xB42E44", VA = "0xB42E44")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B8E")]
		[Address(RVA = "0xB43258", Offset = "0xB43258", VA = "0xB43258")]
		public ArcadeRun MostRecent(int i = 0)
		{
			return null;
		}

		[Token(Token = "0x6000B8F")]
		[Address(RVA = "0xB40E34", Offset = "0xB40E34", VA = "0xB40E34")]
		public void AddRun(ArcadeRun r)
		{
		}

		[Token(Token = "0x6000B90")]
		[Address(RVA = "0xB43A44", Offset = "0xB43A44", VA = "0xB43A44", Slot = "6")]
		public override void Reset()
		{
		}

		[Token(Token = "0x6000B91")]
		[Address(RVA = "0xB43A98", Offset = "0xB43A98", VA = "0xB43A98", Slot = "7")]
		public override void Init(JSONNode j)
		{
		}

		[Token(Token = "0x6000B92")]
		[Address(RVA = "0xB43C30", Offset = "0xB43C30", VA = "0xB43C30")]
		public ArcadeRuns()
		{
		}
	}
	[Token(Token = "0x2000252")]
	public class ArcadeStatusDisplay : MonoBehaviour
	{
		[Token(Token = "0x4000BAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UIText LevelText;

		[Token(Token = "0x4000BAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UIText MatchScoreText;

		[Token(Token = "0x4000BB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UIText TotalScoreText;

		[Token(Token = "0x4000BB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject ContinuePanel;

		[Token(Token = "0x4000BB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject DonePanel;

		[Token(Token = "0x4000BB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Animator LevelBars;

		[Token(Token = "0x4000BB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public UIText ArenaText;

		[Token(Token = "0x4000BB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public UIText DroneText;

		[Token(Token = "0x4000BB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public bool OnlyIfNotDone;

		[Token(Token = "0x6000B93")]
		[Address(RVA = "0xB43CA8", Offset = "0xB43CA8", VA = "0xB43CA8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000B94")]
		[Address(RVA = "0xB43E0C", Offset = "0xB43E0C", VA = "0xB43E0C")]
		protected void UpdateDisplay()
		{
		}

		[Token(Token = "0x6000B95")]
		[Address(RVA = "0xB442D8", Offset = "0xB442D8", VA = "0xB442D8")]
		public ArcadeStatusDisplay()
		{
		}
	}
	[Token(Token = "0x2000253")]
	public class IfArcade : MonoBehaviour
	{
		[Token(Token = "0x4000BB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UnityEvent OnIsArcade;

		[Token(Token = "0x4000BB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnityEvent OnIsNotArcade;

		[Token(Token = "0x6000B96")]
		[Address(RVA = "0xBC5508", Offset = "0xBC5508", VA = "0xBC5508")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000B97")]
		[Address(RVA = "0xBC55CC", Offset = "0xBC55CC", VA = "0xBC55CC")]
		public IfArcade()
		{
		}
	}
	[Token(Token = "0x2000254")]
	public class LoadArcadeLeaderboard : MonoBehaviour
	{
		[Token(Token = "0x4000BB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected int page;

		[Token(Token = "0x4000BBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LeaderboardEntry EntryPrefab;

		[Token(Token = "0x4000BBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LeaderboardEntry PlayerPrefab;

		[Token(Token = "0x4000BBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected bool loaded;

		[Token(Token = "0x4000BBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		protected float loadedTime;

		[Token(Token = "0x4000BBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected bool hasPlayer;

		[Token(Token = "0x4000BBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		protected int pages;

		[Token(Token = "0x4000BC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected int playerRank;

		[Token(Token = "0x4000BC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public UnityEvent OnLoaded;

		[Token(Token = "0x4000BC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public UnityEvent OnFirstPage;

		[Token(Token = "0x4000BC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public UnityEvent OnPlayerPage;

		[Token(Token = "0x4000BC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public UnityEvent OnLastPage;

		[Token(Token = "0x17000150")]
		public int Page
		{
			[Token(Token = "0x6000B98")]
			[Address(RVA = "0xBD3308", Offset = "0xBD3308", VA = "0xBD3308")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000B99")]
			[Address(RVA = "0xBD3310", Offset = "0xBD3310", VA = "0xBD3310")]
			set
			{
			}
		}

		[Token(Token = "0x17000151")]
		public bool IsTop10
		{
			[Token(Token = "0x6000B9C")]
			[Address(RVA = "0xBD3448", Offset = "0xBD3448", VA = "0xBD3448")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000152")]
		public bool IsPlayerPage
		{
			[Token(Token = "0x6000B9D")]
			[Address(RVA = "0xBD3458", Offset = "0xBD3458", VA = "0xBD3458")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000B9A")]
		[Address(RVA = "0xBD3400", Offset = "0xBD3400", VA = "0xBD3400")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000B9B")]
		[Address(RVA = "0xBD332C", Offset = "0xBD332C", VA = "0xBD332C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000B9E")]
		[Address(RVA = "0xBD3460", Offset = "0xBD3460", VA = "0xBD3460")]
		public void FirstPage()
		{
		}

		[Token(Token = "0x6000B9F")]
		[Address(RVA = "0xBD3478", Offset = "0xBD3478", VA = "0xBD3478")]
		public void PrevPage()
		{
		}

		[Token(Token = "0x6000BA0")]
		[Address(RVA = "0xBD3494", Offset = "0xBD3494", VA = "0xBD3494")]
		public void NextPage()
		{
		}

		[Token(Token = "0x6000BA1")]
		[Address(RVA = "0xBD34BC", Offset = "0xBD34BC", VA = "0xBD34BC")]
		public void PlayerPage()
		{
		}

		[Token(Token = "0x6000BA2")]
		[Address(RVA = "0xBD34DC", Offset = "0xBD34DC", VA = "0xBD34DC")]
		public void UpdateLeaderboard(JSONNode json)
		{
		}

		[Token(Token = "0x6000BA3")]
		[Address(RVA = "0xBD3910", Offset = "0xBD3910", VA = "0xBD3910")]
		public LoadArcadeLeaderboard()
		{
		}
	}
	[Token(Token = "0x2000255")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x770594", Offset = "0x770594")]
	public class Arena : ScriptableObject
	{
		[Token(Token = "0x4000BC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected string uid;

		[Token(Token = "0x4000BC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected string label;

		[Token(Token = "0x4000BC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		protected string scene;

		[Token(Token = "0x4000BC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		protected Texture2D thumbnail;

		[Token(Token = "0x17000153")]
		public string UID
		{
			[Token(Token = "0x6000BA4")]
			[Address(RVA = "0xB442E0", Offset = "0xB442E0", VA = "0xB442E0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000154")]
		public string Label
		{
			[Token(Token = "0x6000BA5")]
			[Address(RVA = "0xB442E8", Offset = "0xB442E8", VA = "0xB442E8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000BA6")]
			[Address(RVA = "0xB442F0", Offset = "0xB442F0", VA = "0xB442F0")]
			set
			{
			}
		}

		[Token(Token = "0x17000155")]
		public string Scene
		{
			[Token(Token = "0x6000BA7")]
			[Address(RVA = "0xB442F8", Offset = "0xB442F8", VA = "0xB442F8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000156")]
		public Texture2D Thumbnail
		{
			[Token(Token = "0x6000BA8")]
			[Address(RVA = "0xB44300", Offset = "0xB44300", VA = "0xB44300")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000BA9")]
		[Address(RVA = "0xB44308", Offset = "0xB44308", VA = "0xB44308")]
		public Arena()
		{
		}
	}
	[Token(Token = "0x2000256")]
	public class ArenaDisplay : MonoBehaviour
	{
		[Token(Token = "0x4000BC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected ArenaList arenas;

		[Token(Token = "0x4000BCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string current;

		[Token(Token = "0x4000BCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UIText label;

		[Token(Token = "0x4000BCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Renderer thumbnail;

		[Token(Token = "0x6000BAA")]
		[Address(RVA = "0xB44310", Offset = "0xB44310", VA = "0xB44310")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000BAB")]
		[Address(RVA = "0xB443EC", Offset = "0xB443EC", VA = "0xB443EC")]
		public void UpdateDisplay()
		{
		}

		[Token(Token = "0x6000BAC")]
		[Address(RVA = "0xB44780", Offset = "0xB44780", VA = "0xB44780")]
		public ArenaDisplay()
		{
		}
	}
	[Token(Token = "0x2000257")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x7705A4", Offset = "0x7705A4")]
	public class ArenaList : ScriptableObject
	{
		[Token(Token = "0x4000BCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public StringVariable currentArena;

		[Token(Token = "0x4000BCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<Arena> Arenas;

		[Token(Token = "0x17000157")]
		public Arena Current
		{
			[Token(Token = "0x6000BAD")]
			[Address(RVA = "0xB4456C", Offset = "0xB4456C", VA = "0xB4456C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000158")]
		public Arena Rand
		{
			[Token(Token = "0x6000BAE")]
			[Address(RVA = "0xB44788", Offset = "0xB44788", VA = "0xB44788")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000BAF")]
		[Address(RVA = "0xB445AC", Offset = "0xB445AC", VA = "0xB445AC")]
		public Arena Find(string uid, [Optional] Arena defaultArena)
		{
			return null;
		}

		[Token(Token = "0x6000BB0")]
		[Address(RVA = "0xB44810", Offset = "0xB44810", VA = "0xB44810")]
		public ArenaList()
		{
		}
	}
	[Token(Token = "0x2000258")]
	public class Avatar : MonoBehaviour, IPunInstantiateMagicCallback
	{
		[Token(Token = "0x4000BCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected PhotonView pview;

		[Token(Token = "0x4000BD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FollowTransform head;

		[Token(Token = "0x4000BD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public FollowTransform leftHand;

		[Token(Token = "0x4000BD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public FollowTransform rightHand;

		[Token(Token = "0x4000BD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GloveList gloveList;

		[Token(Token = "0x4000BD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Transform leftGloveAttachPoint;

		[Token(Token = "0x4000BD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Transform rightGloveAttachPoint;

		[Token(Token = "0x4000BD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected XRRig followRig;

		[Token(Token = "0x6000BB1")]
		[Address(RVA = "0xB4610C", Offset = "0xB4610C", VA = "0xB4610C")]
		public void Follow(XRRig rig)
		{
		}

		[Token(Token = "0x6000BB2")]
		[Address(RVA = "0xB46114", Offset = "0xB46114", VA = "0xB46114")]
		protected void UpdateRigFollowing()
		{
		}

		[Token(Token = "0x6000BB3")]
		[Address(RVA = "0xB46328", Offset = "0xB46328", VA = "0xB46328")]
		public void Hide()
		{
		}

		[Token(Token = "0x6000BB4")]
		[Address(RVA = "0xB46468", Offset = "0xB46468", VA = "0xB46468", Slot = "4")]
		public void OnPhotonInstantiate(PhotonMessageInfo info)
		{
		}

		[Token(Token = "0x6000BB5")]
		[Address(RVA = "0xB46658", Offset = "0xB46658", VA = "0xB46658")]
		public void EquipGlove(string gloveName, bool isRight)
		{
		}

		[Token(Token = "0x6000BB6")]
		[Address(RVA = "0xB46880", Offset = "0xB46880", VA = "0xB46880")]
		public Avatar()
		{
		}
	}
	[Token(Token = "0x2000259")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x7705B4", Offset = "0x7705B4")]
	public class Award : ScriptableObject
	{
		[Token(Token = "0x4000BD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected string uid;

		[Token(Token = "0x17000159")]
		public string UID
		{
			[Token(Token = "0x6000BB7")]
			[Address(RVA = "0xB46B80", Offset = "0xB46B80", VA = "0xB46B80")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000BB8")]
		[Address(RVA = "0xB46B88", Offset = "0xB46B88", VA = "0xB46B88")]
		public Award()
		{
		}
	}
	[Token(Token = "0x200025A")]
	public class AwardDisplayer : MonoBehaviour
	{
		[Token(Token = "0x4000BD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected Award award;

		[Token(Token = "0x4000BD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UIText numOwned;

		[Token(Token = "0x4000BDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected AwardsManager awardsManager;

		[Token(Token = "0x1700015A")]
		public Award Award
		{
			[Token(Token = "0x6000BB9")]
			[Address(RVA = "0xB46B98", Offset = "0xB46B98", VA = "0xB46B98")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000BBA")]
			[Address(RVA = "0xB46BA0", Offset = "0xB46BA0", VA = "0xB46BA0")]
			set
			{
			}
		}

		[Token(Token = "0x6000BBB")]
		[Address(RVA = "0xB46CFC", Offset = "0xB46CFC", VA = "0xB46CFC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000BBC")]
		[Address(RVA = "0xB46BA8", Offset = "0xB46BA8", VA = "0xB46BA8")]
		public void UpdateDisplay()
		{
		}

		[Token(Token = "0x6000BBD")]
		[Address(RVA = "0xB46D70", Offset = "0xB46D70", VA = "0xB46D70")]
		public AwardDisplayer()
		{
		}
	}
	[Token(Token = "0x200025B")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x7705C4", Offset = "0x7705C4")]
	public class AwardList : ScriptableObject
	{
		[Token(Token = "0x4000BDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<Award> Awards;

		[Token(Token = "0x6000BBE")]
		[Address(RVA = "0xB46D78", Offset = "0xB46D78", VA = "0xB46D78")]
		public Award Find(string uid)
		{
			return null;
		}

		[Token(Token = "0x6000BBF")]
		[Address(RVA = "0xB46ECC", Offset = "0xB46ECC", VA = "0xB46ECC")]
		public AwardList()
		{
		}
	}
	[Token(Token = "0x200025C")]
	public class AwardsManager : MonoBehaviour
	{
		[Token(Token = "0x4000BDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected KeyValueList ownedAwardsList;

		[Token(Token = "0x4000BDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected AwardList awards;

		[Token(Token = "0x6000BC0")]
		[Address(RVA = "0xB46F44", Offset = "0xB46F44", VA = "0xB46F44")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000BC1")]
		[Address(RVA = "0xB47034", Offset = "0xB47034", VA = "0xB47034")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000BC2")]
		[Address(RVA = "0xB46D54", Offset = "0xB46D54", VA = "0xB46D54")]
		public int NumberOwned(string awardUid)
		{
			return default(int);
		}

		[Token(Token = "0x6000BC3")]
		[Address(RVA = "0xB47124", Offset = "0xB47124", VA = "0xB47124")]
		public void UpdateDisplays()
		{
		}

		[Token(Token = "0x6000BC4")]
		[Address(RVA = "0xB471C4", Offset = "0xB471C4", VA = "0xB471C4")]
		public AwardsManager()
		{
		}
	}
	[Token(Token = "0x200025D")]
	public class BeltTrigger : MonoBehaviour
	{
		[Token(Token = "0x4000BDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int uses;

		[Token(Token = "0x4000BDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HoldSensor sensor;

		[Token(Token = "0x6000BC5")]
		[Address(RVA = "0xB4803C", Offset = "0xB4803C", VA = "0xB4803C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000BC6")]
		[Address(RVA = "0xB4812C", Offset = "0xB4812C", VA = "0xB4812C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000BC7")]
		[Address(RVA = "0xB48130", Offset = "0xB48130", VA = "0xB48130")]
		public void UpdateSensor()
		{
		}

		[Token(Token = "0x6000BC8")]
		[Address(RVA = "0xB48260", Offset = "0xB48260", VA = "0xB48260")]
		public BeltTrigger()
		{
		}

		[Token(Token = "0x6000BC9")]
		[Address(RVA = "0xB48270", Offset = "0xB48270", VA = "0xB48270")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x776FD8", Offset = "0x776FD8")]
		private void <Start>b__2_0()
		{
		}
	}
	[Token(Token = "0x200025E")]
	public class Block : MonoBehaviour
	{
		[Token(Token = "0x200025F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7705D4", Offset = "0x7705D4")]
		private sealed class <ChangeLanesDelayedAction>d__37 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000BF0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000BF1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000BF2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delay;

			[Token(Token = "0x4000BF3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Block <>4__this;

			[Token(Token = "0x4000BF4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Vector3 moveTo;

			[Token(Token = "0x4000BF5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public BlockLaneManager.SpeedRating speed;

			[Token(Token = "0x17000160")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000BE2")]
				[Address(RVA = "0xB27890", Offset = "0xB27890", VA = "0xB27890", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000161")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000BE4")]
				[Address(RVA = "0xB278D8", Offset = "0xB278D8", VA = "0xB278D8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000BDF")]
			[Address(RVA = "0xB277A4", Offset = "0xB277A4", VA = "0xB277A4")]
			[DebuggerHidden]
			public <ChangeLanesDelayedAction>d__37(int <>1__state)
			{
			}

			[Token(Token = "0x6000BE0")]
			[Address(RVA = "0xB277D0", Offset = "0xB277D0", VA = "0xB277D0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000BE1")]
			[Address(RVA = "0xB277D4", Offset = "0xB277D4", VA = "0xB277D4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000BE3")]
			[Address(RVA = "0xB27898", Offset = "0xB27898", VA = "0xB27898", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000BE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected PhotonView pview;

		[Token(Token = "0x4000BE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected bool active;

		[Token(Token = "0x4000BE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public RealtimeFloat velocity;

		[Token(Token = "0x4000BE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float minSpeed;

		[Token(Token = "0x4000BE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float maxSpeed;

		[Token(Token = "0x4000BE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public UnityEvent OnHit;

		[Token(Token = "0x4000BE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public UnityEvent OnHitWithPaddle;

		[Token(Token = "0x4000BE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		protected RealtimeInt scoreValue;

		[Token(Token = "0x4000BE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public UnityEvent OnScore;

		[Token(Token = "0x4000BE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public UnityEvent<int> OnScoreValue;

		[Token(Token = "0x4000BEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public UnityEvent OnDeath;

		[Token(Token = "0x4000BEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float removeAfter;

		[Token(Token = "0x4000BEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		protected float removeTimer;

		[Token(Token = "0x4000BED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected BlockLaneManager laneManager;

		[Token(Token = "0x4000BEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public HitEffect hitEffect;

		[Token(Token = "0x4000BEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		protected int age;

		[Token(Token = "0x1700015B")]
		public int ScoreValue
		{
			[Token(Token = "0x6000BCA")]
			[Address(RVA = "0xB39F28", Offset = "0xB39F28", VA = "0xB39F28")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000BCB")]
			[Address(RVA = "0xB49B7C", Offset = "0xB49B7C", VA = "0xB49B7C")]
			set
			{
			}
		}

		[Token(Token = "0x1700015C")]
		public RealtimeInt ScoreValueInt
		{
			[Token(Token = "0x6000BCC")]
			[Address(RVA = "0xB49BE0", Offset = "0xB49BE0", VA = "0xB49BE0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000BCD")]
			[Address(RVA = "0xB49BE8", Offset = "0xB49BE8", VA = "0xB49BE8")]
			set
			{
			}
		}

		[Token(Token = "0x1700015D")]
		public int Age
		{
			[Token(Token = "0x6000BCE")]
			[Address(RVA = "0xB49BF0", Offset = "0xB49BF0", VA = "0xB49BF0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700015E")]
		public bool IsActiveAndOwned
		{
			[Token(Token = "0x6000BCF")]
			[Address(RVA = "0xB49BF8", Offset = "0xB49BF8", VA = "0xB49BF8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700015F")]
		public Vector3 Direction
		{
			[Token(Token = "0x6000BDC")]
			[Address(RVA = "0xB4A774", Offset = "0xB4A774", VA = "0xB4A774")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6000BD0")]
		[Address(RVA = "0xB49C9C", Offset = "0xB49C9C", VA = "0xB49C9C")]
		public static Block create(Vector3 pos, float velocity = 0f)
		{
			return null;
		}

		[Token(Token = "0x6000BD1")]
		[Address(RVA = "0xB49E20", Offset = "0xB49E20", VA = "0xB49E20")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000BD2")]
		[Address(RVA = "0xB49F28", Offset = "0xB49F28", VA = "0xB49F28")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000BD3")]
		[Address(RVA = "0xB4A050", Offset = "0xB4A050", VA = "0xB4A050")]
		private void Update()
		{
		}

		[Token(Token = "0x6000BD4")]
		[Address(RVA = "0xB4A198", Offset = "0xB4A198", VA = "0xB4A198")]
		public void Scored(IntVariable score)
		{
		}

		[Token(Token = "0x6000BD5")]
		[Address(RVA = "0xB4A3B4", Offset = "0xB4A3B4", VA = "0xB4A3B4")]
		public void Stop()
		{
		}

		[Token(Token = "0x6000BD6")]
		[Address(RVA = "0xB4A40C", Offset = "0xB4A40C", VA = "0xB4A40C")]
		public void Destroy()
		{
		}

		[Token(Token = "0x6000BD7")]
		[Address(RVA = "0xB4A324", Offset = "0xB4A324", VA = "0xB4A324")]
		[PunRPC]
		public void DidScore()
		{
		}

		[Token(Token = "0x6000BD8")]
		[Address(RVA = "0xB4A448", Offset = "0xB4A448", VA = "0xB4A448")]
		public void HitAt(Vector3 point, Vector3 normal, [Optional] HitEffect effect)
		{
		}

		[Token(Token = "0x6000BD9")]
		[Address(RVA = "0xB4A5C0", Offset = "0xB4A5C0", VA = "0xB4A5C0")]
		public void ChangeLanes(Vector3 moveTo, BlockLaneManager.SpeedRating speed = BlockLaneManager.SpeedRating.Normal)
		{
		}

		[Token(Token = "0x6000BDA")]
		[Address(RVA = "0xB4A6A0", Offset = "0xB4A6A0", VA = "0xB4A6A0")]
		public void ChangeLanesDelayed(Vector3 moveTo, float delay, BlockLaneManager.SpeedRating speed = BlockLaneManager.SpeedRating.Normal)
		{
		}

		[Token(Token = "0x6000BDB")]
		[Address(RVA = "0xB4A6CC", Offset = "0xB4A6CC", VA = "0xB4A6CC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x776FF8", Offset = "0x776FF8")]
		public IEnumerator ChangeLanesDelayedAction(Vector3 moveTo, float delay, BlockLaneManager.SpeedRating speed = BlockLaneManager.SpeedRating.Normal)
		{
			return null;
		}

		[Token(Token = "0x6000BDD")]
		[Address(RVA = "0xB4A7D4", Offset = "0xB4A7D4", VA = "0xB4A7D4")]
		public Block()
		{
		}

		[Token(Token = "0x6000BDE")]
		[Address(RVA = "0xB4A7F8", Offset = "0xB4A7F8", VA = "0xB4A7F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x777058", Offset = "0x777058")]
		private void <Awake>b__27_0()
		{
		}
	}
	[Token(Token = "0x2000260")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x7705E4", Offset = "0x7705E4")]
	public class BlockLaneManager : MonoBehaviour
	{
		[Token(Token = "0x2000261")]
		public enum SpeedRating
		{
			[Token(Token = "0x4000BFE")]
			Slow,
			[Token(Token = "0x4000BFF")]
			Normal,
			[Token(Token = "0x4000C00")]
			Fast
		}

		[Token(Token = "0x4000BF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SpeedRating Speed;

		[Token(Token = "0x4000BF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected float[] speeds;

		[Token(Token = "0x4000BF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected Block block;

		[Token(Token = "0x4000BF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected Vector3 targetLocation;

		[Token(Token = "0x4000BFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		protected bool isMoving;

		[Token(Token = "0x4000BFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected Interpolate moveX;

		[Token(Token = "0x4000BFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected Interpolate moveY;

		[Token(Token = "0x17000162")]
		public Vector3 TargetLocation
		{
			[Token(Token = "0x6000BE5")]
			[Address(RVA = "0xB4A80C", Offset = "0xB4A80C", VA = "0xB4A80C")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000BE6")]
			[Address(RVA = "0xB4A694", Offset = "0xB4A694", VA = "0xB4A694")]
			set
			{
			}
		}

		[Token(Token = "0x6000BE7")]
		[Address(RVA = "0xB4A95C", Offset = "0xB4A95C", VA = "0xB4A95C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000BE8")]
		[Address(RVA = "0xB4A9EC", Offset = "0xB4A9EC", VA = "0xB4A9EC")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000BE9")]
		[Address(RVA = "0xB4A818", Offset = "0xB4A818", VA = "0xB4A818")]
		protected void ChangeLane()
		{
		}

		[Token(Token = "0x6000BEA")]
		[Address(RVA = "0xB4AACC", Offset = "0xB4AACC", VA = "0xB4AACC")]
		public BlockLaneManager()
		{
		}
	}
	[Token(Token = "0x2000262")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x770644", Offset = "0x770644")]
	public class BlockSensor : MonoBehaviour, IPunInstantiateMagicCallback
	{
		[Token(Token = "0x2000263")]
		public enum SensorType
		{
			[Token(Token = "0x4000C18")]
			VisualOnly,
			[Token(Token = "0x4000C19")]
			ValueIncreaser,
			[Token(Token = "0x4000C1A")]
			Reverser,
			[Token(Token = "0x4000C1B")]
			LaneSwitcher,
			[Token(Token = "0x4000C1C")]
			ApplyForce,
			[Token(Token = "0x4000C1D")]
			SpeedMultiplier,
			[Token(Token = "0x4000C1E")]
			Splitter
		}

		[Token(Token = "0x2000264")]
		public enum SplitScoreRule
		{
			[Token(Token = "0x4000C20")]
			AllToScore,
			[Token(Token = "0x4000C21")]
			NewToScore,
			[Token(Token = "0x4000C22")]
			AllReduced,
			[Token(Token = "0x4000C23")]
			AllToCurrentBlockScore
		}

		[Token(Token = "0x2000265")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7706A4", Offset = "0x7706A4")]
		private sealed class <>c__DisplayClass51_0
		{
			[Token(Token = "0x4000C24")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public BlockSensor <>4__this;

			[Token(Token = "0x4000C25")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public bool effectIncomingBlocks;

			[Token(Token = "0x4000C26")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
			public bool effectOutgoingBlocks;

			[Token(Token = "0x6000BFF")]
			[Address(RVA = "0xB278E0", Offset = "0xB278E0", VA = "0xB278E0")]
			public <>c__DisplayClass51_0()
			{
			}

			[Token(Token = "0x6000C00")]
			[Address(RVA = "0xB278E8", Offset = "0xB278E8", VA = "0xB278E8")]
			internal void <OnPhotonInstantiate>b__0(Block block, Vector3 point, Vector3 normal)
			{
			}
		}

		[Token(Token = "0x4000C01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SensorType sensorType;

		[Token(Token = "0x4000C02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		protected int minBlockAge;

		[Token(Token = "0x4000C03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected float lifetime;

		[Token(Token = "0x4000C04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		protected float timer;

		[Token(Token = "0x4000C05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float timeToDie;

		[Token(Token = "0x4000C06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		protected int maxBlocks;

		[Token(Token = "0x4000C07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected int blockCounter;

		[Token(Token = "0x4000C08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		protected bool onlyIfOwned;

		[Token(Token = "0x4000C09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		protected float speed;

		[Token(Token = "0x4000C0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		protected float force;

		[Token(Token = "0x4000C0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		protected int amount;

		[Token(Token = "0x4000C0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		protected float speedMultiplier;

		[Token(Token = "0x4000C0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		protected int splitInto;

		[Token(Token = "0x4000C0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public SplitScoreRule SplitType;

		[Token(Token = "0x4000C0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public int SplitScore;

		[Token(Token = "0x4000C10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		protected HitEffect hitEffect;

		[Token(Token = "0x4000C11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public UnityEvent OnSpawn;

		[Token(Token = "0x4000C12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public UnityEvent OnUpdate;

		[Token(Token = "0x4000C13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public UnityEvent OnDie;

		[Token(Token = "0x4000C14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public UnityEvent<Block, Vector3, Vector3> OnHit;

		[Token(Token = "0x4000C15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public string prefabName;

		[Token(Token = "0x4000C16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		protected bool dying;

		[Token(Token = "0x17000163")]
		public int MinBlockAge
		{
			[Token(Token = "0x6000BEB")]
			[Address(RVA = "0xB4AB54", Offset = "0xB4AB54", VA = "0xB4AB54")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000BEC")]
			[Address(RVA = "0xB4AB5C", Offset = "0xB4AB5C", VA = "0xB4AB5C")]
			set
			{
			}
		}

		[Token(Token = "0x17000164")]
		public float Lifetime
		{
			[Token(Token = "0x6000BED")]
			[Address(RVA = "0xB4AB64", Offset = "0xB4AB64", VA = "0xB4AB64")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000BEE")]
			[Address(RVA = "0xB4AB6C", Offset = "0xB4AB6C", VA = "0xB4AB6C")]
			set
			{
			}
		}

		[Token(Token = "0x17000165")]
		public int MaxBlocks
		{
			[Token(Token = "0x6000BEF")]
			[Address(RVA = "0xB4AB74", Offset = "0xB4AB74", VA = "0xB4AB74")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000BF0")]
			[Address(RVA = "0xB4AB7C", Offset = "0xB4AB7C", VA = "0xB4AB7C")]
			set
			{
			}
		}

		[Token(Token = "0x17000166")]
		public bool OnlyIfOwned
		{
			[Token(Token = "0x6000BF1")]
			[Address(RVA = "0xB4AB84", Offset = "0xB4AB84", VA = "0xB4AB84")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000BF2")]
			[Address(RVA = "0xB4AB8C", Offset = "0xB4AB8C", VA = "0xB4AB8C")]
			set
			{
			}
		}

		[Token(Token = "0x17000167")]
		public float Speed
		{
			[Token(Token = "0x6000BF3")]
			[Address(RVA = "0xB4AB98", Offset = "0xB4AB98", VA = "0xB4AB98")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000168")]
		public float Force
		{
			[Token(Token = "0x6000BF4")]
			[Address(RVA = "0xB4ABA0", Offset = "0xB4ABA0", VA = "0xB4ABA0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000169")]
		public int Amount
		{
			[Token(Token = "0x6000BF5")]
			[Address(RVA = "0xB4ABA8", Offset = "0xB4ABA8", VA = "0xB4ABA8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700016A")]
		public float SpeedMultiplier
		{
			[Token(Token = "0x6000BF6")]
			[Address(RVA = "0xB4ABB0", Offset = "0xB4ABB0", VA = "0xB4ABB0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700016B")]
		public int SplitInto
		{
			[Token(Token = "0x6000BF7")]
			[Address(RVA = "0xB4ABB8", Offset = "0xB4ABB8", VA = "0xB4ABB8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700016C")]
		public HitEffect HitEffect
		{
			[Token(Token = "0x6000BF8")]
			[Address(RVA = "0xB4ABC0", Offset = "0xB4ABC0", VA = "0xB4ABC0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000BF9")]
		[Address(RVA = "0xB4ABC8", Offset = "0xB4ABC8", VA = "0xB4ABC8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000BFA")]
		[Address(RVA = "0xB4ABEC", Offset = "0xB4ABEC", VA = "0xB4ABEC")]
		private void Update()
		{
		}

		[Token(Token = "0x6000BFB")]
		[Address(RVA = "0xB4ADC8", Offset = "0xB4ADC8", VA = "0xB4ADC8")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6000BFC")]
		[Address(RVA = "0xB4AF78", Offset = "0xB4AF78", VA = "0xB4AF78", Slot = "4")]
		public void OnPhotonInstantiate(PhotonMessageInfo info)
		{
		}

		[Token(Token = "0x6000BFD")]
		[Address(RVA = "0xB4B284", Offset = "0xB4B284", VA = "0xB4B284")]
		public bool ApplyToBlock(Block block, Vector3 collisionPoint, Vector3 collisionNormal)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BFE")]
		[Address(RVA = "0xB4B5EC", Offset = "0xB4B5EC", VA = "0xB4B5EC")]
		public BlockSensor()
		{
		}
	}
	[Token(Token = "0x2000266")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x7706B4", Offset = "0x7706B4")]
	public class BlockValueManager : MonoBehaviour
	{
		[Token(Token = "0x4000C27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected Block block;

		[Token(Token = "0x4000C28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected RealtimeInt scoreValue;

		[Token(Token = "0x4000C29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int HitsPerLevel;

		[Token(Token = "0x4000C2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int LevelIncreaseValue;

		[Token(Token = "0x4000C2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int MinValue;

		[Token(Token = "0x4000C2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public int MaxValue;

		[Token(Token = "0x4000C2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		protected RealtimeInt LevelUpHits;

		[Token(Token = "0x4000C2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public MaterialParameterFloat LevelFeedback;

		[Token(Token = "0x4000C2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Animator animator;

		[Token(Token = "0x1700016D")]
		public int Value
		{
			[Token(Token = "0x6000C01")]
			[Address(RVA = "0xB4B66C", Offset = "0xB4B66C", VA = "0xB4B66C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000C02")]
			[Address(RVA = "0xB4B6B8", Offset = "0xB4B6B8", VA = "0xB4B6B8")]
			set
			{
			}
		}

		[Token(Token = "0x6000C03")]
		[Address(RVA = "0xB4B71C", Offset = "0xB4B71C", VA = "0xB4B71C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000C04")]
		[Address(RVA = "0xB4B904", Offset = "0xB4B904", VA = "0xB4B904")]
		private void Update()
		{
		}

		[Token(Token = "0x6000C05")]
		[Address(RVA = "0xB4B908", Offset = "0xB4B908", VA = "0xB4B908")]
		protected void UpdateLook()
		{
		}

		[Token(Token = "0x6000C06")]
		[Address(RVA = "0xB4BA4C", Offset = "0xB4BA4C", VA = "0xB4BA4C")]
		public BlockValueManager()
		{
		}

		[Token(Token = "0x6000C07")]
		[Address(RVA = "0xB4BA60", Offset = "0xB4BA60", VA = "0xB4BA60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7770B8", Offset = "0x7770B8")]
		private void <Awake>b__12_0()
		{
		}
	}
	[Token(Token = "0x2000267")]
	public class CanPowerUp : MonoBehaviour
	{
		[Token(Token = "0x2000268")]
		public enum Handedness
		{
			[Token(Token = "0x4000C36")]
			Neither,
			[Token(Token = "0x4000C37")]
			Left,
			[Token(Token = "0x4000C38")]
			Right
		}

		[Token(Token = "0x4000C30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool isPoweredUp;

		[Token(Token = "0x4000C31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Handedness hand;

		[Token(Token = "0x4000C32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnityEvent OnPoweredUp;

		[Token(Token = "0x4000C33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UnityEvent OnPoweredDown;

		[Token(Token = "0x4000C34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public PowerUp currentPower;

		[Token(Token = "0x6000C08")]
		[Address(RVA = "0x11E00F8", Offset = "0x11E00F8", VA = "0x11E00F8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000C09")]
		[Address(RVA = "0x11E0138", Offset = "0x11E0138", VA = "0x11E0138")]
		public void PowerUp(PowerUp power)
		{
		}

		[Token(Token = "0x6000C0A")]
		[Address(RVA = "0x11E0118", Offset = "0x11E0118", VA = "0x11E0118")]
		public void PowerDown()
		{
		}

		[Token(Token = "0x6000C0B")]
		[Address(RVA = "0x11E015C", Offset = "0x11E015C", VA = "0x11E015C")]
		public CanPowerUp()
		{
		}
	}
	[Token(Token = "0x2000269")]
	public class ApiManager : ApiInterface
	{
		[Token(Token = "0x4000C39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public StringVariable salt;

		[Token(Token = "0x4000C3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public StringVariable HostCode;

		[Token(Token = "0x4000C3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected bool registered;

		[Token(Token = "0x4000C3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public UnityEvent OnReady;

		[Token(Token = "0x1700016E")]
		public new static ApiManager API
		{
			[Token(Token = "0x6000C0C")]
			[Address(RVA = "0xB3BACC", Offset = "0xB3BACC", VA = "0xB3BACC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C0D")]
		[Address(RVA = "0xB3BB64", Offset = "0xB3BB64", VA = "0xB3BB64")]
		private void Update()
		{
		}

		[Token(Token = "0x6000C0E")]
		[Address(RVA = "0xB3BCB0", Offset = "0xB3BCB0", VA = "0xB3BCB0")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x6000C0F")]
		[Address(RVA = "0xB3BCBC", Offset = "0xB3BCBC", VA = "0xB3BCBC")]
		public void RegisterPlayer([Optional] Action<JSONNode> callback, [Optional] Action<UnityWebRequest> errorCallback)
		{
		}

		[Token(Token = "0x6000C10")]
		[Address(RVA = "0xB3C430", Offset = "0xB3C430", VA = "0xB3C430")]
		public void PostScore(int score)
		{
		}

		[Token(Token = "0x6000C11")]
		[Address(RVA = "0xB3C6CC", Offset = "0xB3C6CC", VA = "0xB3C6CC")]
		public void RecordTransaction(int coins, string reason)
		{
		}

		[Token(Token = "0x6000C12")]
		[Address(RVA = "0xB3C96C", Offset = "0xB3C96C", VA = "0xB3C96C")]
		public void ClaimAchievements()
		{
		}

		[Token(Token = "0x6000C13")]
		[Address(RVA = "0xB3CAE4", Offset = "0xB3CAE4", VA = "0xB3CAE4")]
		public void RecordMatch(Match match, string leftGloveUID = "", string rightGloveUID = "")
		{
		}

		[Token(Token = "0x6000C14")]
		[Address(RVA = "0xB3DA28", Offset = "0xB3DA28", VA = "0xB3DA28")]
		public void GetChallenge(Action<JSONNode> callback, [Optional] Action<UnityWebRequest> errorCallback)
		{
		}

		[Token(Token = "0x6000C15")]
		[Address(RVA = "0xB3DA9C", Offset = "0xB3DA9C", VA = "0xB3DA9C")]
		public void GetLeaderboard(Action<JSONNode> callback, int daysAgo = 0, [Optional] Action<UnityWebRequest> errorCallback)
		{
		}

		[Token(Token = "0x6000C16")]
		[Address(RVA = "0xB3DB80", Offset = "0xB3DB80", VA = "0xB3DB80")]
		public void GetWeeklyLeaderboard(Action<JSONNode> callback, int weeksAgo = 0, [Optional] Action<UnityWebRequest> errorCallback)
		{
		}

		[Token(Token = "0x6000C17")]
		[Address(RVA = "0xB3DC64", Offset = "0xB3DC64", VA = "0xB3DC64")]
		public void GetNews(Action<JSONNode> callback, [Optional] Action<UnityWebRequest> errorCallback)
		{
		}

		[Token(Token = "0x6000C18")]
		[Address(RVA = "0xB3DCD8", Offset = "0xB3DCD8", VA = "0xB3DCD8")]
		public void GetTip(Action<JSONNode> callback, [Optional] Action<UnityWebRequest> errorCallback)
		{
		}

		[Token(Token = "0x6000C19")]
		[Address(RVA = "0xB3DD4C", Offset = "0xB3DD4C", VA = "0xB3DD4C")]
		public void GetGlovesForSale(Action<JSONNode> callback, [Optional] Action<UnityWebRequest> errorCallback)
		{
		}

		[Token(Token = "0x6000C1A")]
		[Address(RVA = "0xB3DDF8", Offset = "0xB3DDF8", VA = "0xB3DDF8")]
		public void GetDronesForSale(Action<JSONNode> callback, [Optional] Action<UnityWebRequest> errorCallback)
		{
		}

		[Token(Token = "0x6000C1B")]
		[Address(RVA = "0xB3DEA4", Offset = "0xB3DEA4", VA = "0xB3DEA4")]
		public void CreatePvPChallenge(Match match, [Optional] Action<JSONNode> callback, [Optional] Action<UnityWebRequest> errorCallback)
		{
		}

		[Token(Token = "0x6000C1C")]
		[Address(RVA = "0xB3E3D4", Offset = "0xB3E3D4", VA = "0xB3E3D4")]
		public void ViewPvPChallenges(Action<JSONNode> callback, [Optional] Action<UnityWebRequest> errorCallback)
		{
		}

		[Token(Token = "0x6000C1D")]
		[Address(RVA = "0xB3E4CC", Offset = "0xB3E4CC", VA = "0xB3E4CC")]
		public void ViewPvPChallengeStatus(string challengeID, Action<JSONNode> callback, [Optional] Action<UnityWebRequest> errorCallback)
		{
		}

		[Token(Token = "0x6000C1E")]
		[Address(RVA = "0xB3E614", Offset = "0xB3E614", VA = "0xB3E614")]
		public void AcceptPvPChallenge(string challengeID, [Optional] Action<JSONNode> callback, [Optional] Action<UnityWebRequest> errorCallback)
		{
		}

		[Token(Token = "0x6000C1F")]
		[Address(RVA = "0xB3E82C", Offset = "0xB3E82C", VA = "0xB3E82C")]
		public void RejectPvPChallenge(string challengeID, [Optional] Action<JSONNode> callback, [Optional] Action<UnityWebRequest> errorCallback)
		{
		}

		[Token(Token = "0x6000C20")]
		[Address(RVA = "0xB3EA44", Offset = "0xB3EA44", VA = "0xB3EA44")]
		public void CancelPvPChallenge(string challengeID, [Optional] Action<JSONNode> callback, [Optional] Action<UnityWebRequest> errorCallback)
		{
		}

		[Token(Token = "0x6000C21")]
		[Address(RVA = "0xB3EC5C", Offset = "0xB3EC5C", VA = "0xB3EC5C")]
		public void GetArcadeLeaderboard(int page, Action<JSONNode> callback, [Optional] Action<UnityWebRequest> errorCallback)
		{
		}

		[Token(Token = "0x6000C22")]
		[Address(RVA = "0xB3ED8C", Offset = "0xB3ED8C", VA = "0xB3ED8C")]
		public void LoadData(string filename, [Optional] Action<JSONNode> callback, [Optional] Action<UnityWebRequest> errorCallback)
		{
		}

		[Token(Token = "0x6000C23")]
		[Address(RVA = "0xB3EE70", Offset = "0xB3EE70", VA = "0xB3EE70")]
		public void SaveData(string filename, string jsonData, [Optional] Action<JSONNode> callback, [Optional] Action<UnityWebRequest> errorCallback)
		{
		}

		[Token(Token = "0x6000C24")]
		[Address(RVA = "0xB3F0D0", Offset = "0xB3F0D0", VA = "0xB3F0D0")]
		public void LogError(string error)
		{
		}

		[Token(Token = "0x6000C25")]
		[Address(RVA = "0xB3F25C", Offset = "0xB3F25C", VA = "0xB3F25C")]
		public ApiManager()
		{
		}
	}
	[Token(Token = "0x200026A")]
	public class AppManager : MonoBehaviour
	{
		[Token(Token = "0x200026B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x770714", Offset = "0x770714")]
		private sealed class <LoadSceneAsync>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000C40")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000C41")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000C42")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string scene;

			[Token(Token = "0x4000C43")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private AsyncOperation <asyncload>5__2;

			[Token(Token = "0x17000170")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000C32")]
				[Address(RVA = "0xB035D0", Offset = "0xB035D0", VA = "0xB035D0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000171")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000C34")]
				[Address(RVA = "0xB03618", Offset = "0xB03618", VA = "0xB03618", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000C2F")]
			[Address(RVA = "0xB034DC", Offset = "0xB034DC", VA = "0xB034DC")]
			[DebuggerHidden]
			public <LoadSceneAsync>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x6000C30")]
			[Address(RVA = "0xB03508", Offset = "0xB03508", VA = "0xB03508", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000C31")]
			[Address(RVA = "0xB0350C", Offset = "0xB0350C", VA = "0xB0350C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000C33")]
			[Address(RVA = "0xB035D8", Offset = "0xB035D8", VA = "0xB035D8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000C3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected static AppManager app;

		[Token(Token = "0x4000C3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float timeScale;

		[Token(Token = "0x4000C3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnityEvent OnReady;

		[Token(Token = "0x1700016F")]
		public static AppManager App
		{
			[Token(Token = "0x6000C2A")]
			[Address(RVA = "0xB40640", Offset = "0xB40640", VA = "0xB40640")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C26")]
		[Address(RVA = "0xB40448", Offset = "0xB40448", VA = "0xB40448", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6000C27")]
		[Address(RVA = "0xB405C4", Offset = "0xB405C4", VA = "0xB405C4")]
		private void Start()
		{
		}

		[Token(Token = "0x6000C28")]
		[Address(RVA = "0xB405FC", Offset = "0xB405FC", VA = "0xB405FC")]
		private void OnApplicationFocus(bool hasFocus)
		{
		}

		[Token(Token = "0x6000C29")]
		[Address(RVA = "0xB4062C", Offset = "0xB4062C", VA = "0xB4062C")]
		private void OnApplicationPause(bool pauseStatus)
		{
		}

		[Token(Token = "0x6000C2B")]
		[Address(RVA = "0xB4068C", Offset = "0xB4068C", VA = "0xB4068C")]
		public void LoadScene(string scene)
		{
		}

		[Token(Token = "0x6000C2C")]
		[Address(RVA = "0xB406B8", Offset = "0xB406B8", VA = "0xB406B8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7770C8", Offset = "0x7770C8")]
		private IEnumerator LoadSceneAsync(string scene)
		{
			return null;
		}

		[Token(Token = "0x6000C2D")]
		[Address(RVA = "0xB40724", Offset = "0xB40724", VA = "0xB40724")]
		public void Quit()
		{
		}

		[Token(Token = "0x6000C2E")]
		[Address(RVA = "0xB4072C", Offset = "0xB4072C", VA = "0xB4072C")]
		public AppManager()
		{
		}
	}
	[Token(Token = "0x200026C")]
	public abstract class DataManager<T> : MonoBehaviour
	{
		[Token(Token = "0x4000C44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool SaveOnServer;

		[Token(Token = "0x4000C45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected bool loaded;

		[Token(Token = "0x4000C46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected bool initialized;

		[Token(Token = "0x4000C47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<Type, object> managers;

		[Token(Token = "0x4000C48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public AppData data;

		[Token(Token = "0x4000C49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public StringVariable SaveFilenamePrefix;

		[Token(Token = "0x4000C4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string SaveFilename;

		[Token(Token = "0x4000C4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public UnityEvent OnReady;

		[Token(Token = "0x17000172")]
		public static T Manager
		{
			[Token(Token = "0x6000C35")]
			get
			{
				return (T)null;
			}
		}

		[Token(Token = "0x17000173")]
		public string FullFilename
		{
			[Token(Token = "0x6000C3C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C36")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6000C37")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6000C38")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6000C39")]
		protected virtual void Ready()
		{
		}

		[Token(Token = "0x6000C3A")]
		protected virtual void AfterReady()
		{
		}

		[Token(Token = "0x6000C3B")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x6000C3D")]
		public virtual void Load()
		{
		}

		[Token(Token = "0x6000C3E")]
		public virtual void LoadFromServer()
		{
		}

		[Token(Token = "0x6000C3F")]
		public virtual void LoadFromFile()
		{
		}

		[Token(Token = "0x6000C40")]
		public virtual void Save()
		{
		}

		[Token(Token = "0x6000C41")]
		public virtual void SaveToServer()
		{
		}

		[Token(Token = "0x6000C42")]
		public virtual void SaveToFile()
		{
		}

		[Token(Token = "0x6000C43")]
		protected DataManager()
		{
		}

		[Token(Token = "0x6000C45")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x777178", Offset = "0x777178")]
		private void <LoadFromServer>b__19_0(JSONNode json)
		{
		}

		[Token(Token = "0x6000C46")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x777188", Offset = "0x777188")]
		private void <LoadFromServer>b__19_1(UnityWebRequest r)
		{
		}
	}
	[Token(Token = "0x200026D")]
	public class CubeManager : MonoBehaviour
	{
		[Token(Token = "0x200026E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x770724", Offset = "0x770724")]
		private sealed class <>c__DisplayClass21_0
		{
			[Token(Token = "0x4000C5D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Block b;

			[Token(Token = "0x4000C5E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public CubeManager <>4__this;

			[Token(Token = "0x6000C51")]
			[Address(RVA = "0xB28E60", Offset = "0xB28E60", VA = "0xB28E60")]
			public <>c__DisplayClass21_0()
			{
			}

			[Token(Token = "0x6000C52")]
			[Address(RVA = "0xB28E68", Offset = "0xB28E68", VA = "0xB28E68")]
			internal void <CreateCubes>b__0()
			{
			}

			[Token(Token = "0x6000C53")]
			[Address(RVA = "0xB28EF8", Offset = "0xB28EF8", VA = "0xB28EF8")]
			internal void <CreateCubes>b__1()
			{
			}

			[Token(Token = "0x6000C54")]
			[Address(RVA = "0xB28FA0", Offset = "0xB28FA0", VA = "0xB28FA0")]
			internal void <CreateCubes>b__2()
			{
			}
		}

		[Token(Token = "0x200026F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x770734", Offset = "0x770734")]
		private sealed class <>c__DisplayClass23_0
		{
			[Token(Token = "0x4000C5F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public CubeManager <>4__this;

			[Token(Token = "0x4000C60")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Block b;

			[Token(Token = "0x6000C55")]
			[Address(RVA = "0xB29068", Offset = "0xB29068", VA = "0xB29068")]
			public <>c__DisplayClass23_0()
			{
			}

			[Token(Token = "0x6000C56")]
			[Address(RVA = "0xB29070", Offset = "0xB29070", VA = "0xB29070")]
			internal void <DuplicateBlock>b__0()
			{
			}

			[Token(Token = "0x6000C57")]
			[Address(RVA = "0xB29100", Offset = "0xB29100", VA = "0xB29100")]
			internal void <DuplicateBlock>b__1()
			{
			}

			[Token(Token = "0x6000C58")]
			[Address(RVA = "0xB291A8", Offset = "0xB291A8", VA = "0xB291A8")]
			internal void <DuplicateBlock>b__2()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000270")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x770744", Offset = "0x770744")]
		private sealed class <>c
		{
			[Token(Token = "0x4000C61")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000C62")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action<Block> <>9__25_0;

			[Token(Token = "0x6000C5A")]
			[Address(RVA = "0xB28DD0", Offset = "0xB28DD0", VA = "0xB28DD0")]
			public <>c()
			{
			}

			[Token(Token = "0x6000C5B")]
			[Address(RVA = "0xB28DD8", Offset = "0xB28DD8", VA = "0xB28DD8")]
			internal void <DestoryAllCubes>b__25_0(Block b)
			{
			}
		}

		[Token(Token = "0x4000C4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool active;

		[Token(Token = "0x4000C4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int minCubes;

		[Token(Token = "0x4000C4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int cubeInitValue;

		[Token(Token = "0x4000C4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		protected int minCubeInitValue;

		[Token(Token = "0x4000C50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected int maxCubeInitValue;

		[Token(Token = "0x4000C51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int HitsPerLevel;

		[Token(Token = "0x4000C52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int ValueChangePerLevel;

		[Token(Token = "0x4000C53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public bool SplitBlocks;

		[Token(Token = "0x4000C54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
		public bool MoveBlocks;

		[Token(Token = "0x4000C55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float creationRate;

		[Token(Token = "0x4000C56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		protected float creationTimer;

		[Token(Token = "0x4000C57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public CubeSpawner spawner;

		[Token(Token = "0x4000C58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected List<Block> blocks;

		[Token(Token = "0x4000C59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public UnityEvent OnInitialize;

		[Token(Token = "0x4000C5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public UnityEvent OnActivated;

		[Token(Token = "0x4000C5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public UnityEvent OnDeactivated;

		[Token(Token = "0x4000C5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public UnityEvent<Block> OnCreatedBlock;

		[Token(Token = "0x6000C47")]
		[Address(RVA = "0x11EA388", Offset = "0x11EA388", VA = "0x11EA388")]
		private void Update()
		{
		}

		[Token(Token = "0x6000C48")]
		[Address(RVA = "0x11EA7A4", Offset = "0x11EA7A4", VA = "0x11EA7A4")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6000C49")]
		[Address(RVA = "0x11EA7C0", Offset = "0x11EA7C0", VA = "0x11EA7C0")]
		public void Activate()
		{
		}

		[Token(Token = "0x6000C4A")]
		[Address(RVA = "0x11EA7F0", Offset = "0x11EA7F0", VA = "0x11EA7F0")]
		public void Deactivate()
		{
		}

		[Token(Token = "0x6000C4B")]
		[Address(RVA = "0x11EA3E8", Offset = "0x11EA3E8", VA = "0x11EA3E8")]
		public void CreateCubes()
		{
		}

		[Token(Token = "0x6000C4C")]
		[Address(RVA = "0x11EAA60", Offset = "0x11EAA60", VA = "0x11EAA60")]
		public int CalcCubeInitValue(int val, int step = 5)
		{
			return default(int);
		}

		[Token(Token = "0x6000C4D")]
		[Address(RVA = "0x11EAAAC", Offset = "0x11EAAAC", VA = "0x11EAAAC")]
		public void DuplicateBlock(Block block, int score = -1)
		{
		}

		[Token(Token = "0x6000C4E")]
		[Address(RVA = "0x11EB124", Offset = "0x11EB124", VA = "0x11EB124")]
		public void RemoveCube(Block b)
		{
		}

		[Token(Token = "0x6000C4F")]
		[Address(RVA = "0x11EA82C", Offset = "0x11EA82C", VA = "0x11EA82C")]
		public void DestoryAllCubes()
		{
		}

		[Token(Token = "0x6000C50")]
		[Address(RVA = "0x11EB190", Offset = "0x11EB190", VA = "0x11EB190")]
		public CubeManager()
		{
		}
	}
	[Token(Token = "0x2000271")]
	public class CubeSpawner : MonoBehaviour
	{
		[Token(Token = "0x4000C63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float direction;

		[Token(Token = "0x4000C64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float minInitSpeed;

		[Token(Token = "0x4000C65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float maxInitSpeed;

		[Token(Token = "0x4000C66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<Transform> lanes;

		[Token(Token = "0x4000C67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected System.Random rand;

		[Token(Token = "0x6000C5C")]
		[Address(RVA = "0x11EA9A8", Offset = "0x11EA9A8", VA = "0x11EA9A8")]
		public Block spawn(float velocity = 0f)
		{
			return null;
		}

		[Token(Token = "0x6000C5D")]
		[Address(RVA = "0x11EA950", Offset = "0x11EA950", VA = "0x11EA950")]
		public float RandomVelocity()
		{
			return default(float);
		}

		[Token(Token = "0x6000C5E")]
		[Address(RVA = "0x11EADF4", Offset = "0x11EADF4", VA = "0x11EADF4")]
		public Vector3 GetNeighboringLane(Vector3 pos)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000C5F")]
		[Address(RVA = "0x11EB228", Offset = "0x11EB228", VA = "0x11EB228")]
		public Vector3 GetLane(Vector3 pos, float minDistance = 0.01f)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000C60")]
		[Address(RVA = "0x11EB464", Offset = "0x11EB464", VA = "0x11EB464")]
		public CubeSpawner()
		{
		}

		[Token(Token = "0x6000C61")]
		[Address(RVA = "0x11EB514", Offset = "0x11EB514", VA = "0x11EB514")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x777198", Offset = "0x777198")]
		private int <GetNeighboringLane>b__7_0(Transform a, Transform b)
		{
			return default(int);
		}

		[Token(Token = "0x6000C62")]
		[Address(RVA = "0x11EB53C", Offset = "0x11EB53C", VA = "0x11EB53C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7771A8", Offset = "0x7771A8")]
		private int <GetLane>b__8_0(Transform a, Transform b)
		{
			return default(int);
		}
	}
	[Token(Token = "0x2000272")]
	public class DailyChallengeManager : DataManager<DailyChallengeManager>
	{
		[Token(Token = "0x6000C63")]
		[Address(RVA = "0x11EC3AC", Offset = "0x11EC3AC", VA = "0x11EC3AC")]
		public DailyChallengeManager()
		{
		}
	}
	[Token(Token = "0x2000273")]
	public class DecideOwnership : MonoBehaviour
	{
		[Token(Token = "0x4000C68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected MatchController matchController;

		[Token(Token = "0x4000C69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected PhotonView photonView;

		[Token(Token = "0x6000C64")]
		[Address(RVA = "0x11EF664", Offset = "0x11EF664", VA = "0x11EF664")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000C65")]
		[Address(RVA = "0x11EF710", Offset = "0x11EF710", VA = "0x11EF710")]
		private void Update()
		{
		}

		[Token(Token = "0x6000C66")]
		[Address(RVA = "0x11EF864", Offset = "0x11EF864", VA = "0x11EF864")]
		public DecideOwnership()
		{
		}
	}
	[Token(Token = "0x2000274")]
	public class DetectBlock : MonoBehaviour
	{
		[Token(Token = "0x4000C6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UnityEvent<Block> OnDetect;

		[Token(Token = "0x6000C67")]
		[Address(RVA = "0xC625C0", Offset = "0xC625C0", VA = "0xC625C0")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6000C68")]
		[Address(RVA = "0xC626AC", Offset = "0xC626AC", VA = "0xC626AC")]
		public DetectBlock()
		{
		}
	}
	[Token(Token = "0x2000275")]
	public class DroneManager : DataManager<DroneManager>
	{
		[Token(Token = "0x2000276")]
		public enum Strength
		{
			[Token(Token = "0x4000C74")]
			Unknown,
			[Token(Token = "0x4000C75")]
			Easy,
			[Token(Token = "0x4000C76")]
			Medium,
			[Token(Token = "0x4000C77")]
			Hard,
			[Token(Token = "0x4000C78")]
			Expert
		}

		[Token(Token = "0x4000C6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public DroneList droneList;

		[Token(Token = "0x4000C6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public DroneList droneListEasy;

		[Token(Token = "0x4000C6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public DroneList droneListMedium;

		[Token(Token = "0x4000C6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public DroneList droneListHard;

		[Token(Token = "0x4000C6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public DroneList droneListExpert;

		[Token(Token = "0x4000C70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		protected KeyValueList ownedDrones;

		[Token(Token = "0x4000C71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		protected StringVariable activeDrone;

		[Token(Token = "0x4000C72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public IntVariable TotalSlots;

		[Token(Token = "0x17000174")]
		public string ActiveDrone
		{
			[Token(Token = "0x6000C69")]
			[Address(RVA = "0xC65D80", Offset = "0xC65D80", VA = "0xC65D80")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000175")]
		public bool HasEmptySlot
		{
			[Token(Token = "0x6000C6D")]
			[Address(RVA = "0xC65D00", Offset = "0xC65D00", VA = "0xC65D00")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000C6A")]
		[Address(RVA = "0xC665D4", Offset = "0xC665D4", VA = "0xC665D4")]
		public static Drone Find(string uid)
		{
			return null;
		}

		[Token(Token = "0x6000C6B")]
		[Address(RVA = "0xC67760", Offset = "0xC67760", VA = "0xC67760")]
		public static string NameOf(string uid)
		{
			return null;
		}

		[Token(Token = "0x6000C6C")]
		[Address(RVA = "0xC678D8", Offset = "0xC678D8", VA = "0xC678D8")]
		public static Strength StrengthOf(string uid)
		{
			return default(Strength);
		}

		[Token(Token = "0x6000C6E")]
		[Address(RVA = "0xC65F10", Offset = "0xC65F10", VA = "0xC65F10")]
		public void ActivateDrone(string droneUid)
		{
		}

		[Token(Token = "0x6000C6F")]
		[Address(RVA = "0xC65D54", Offset = "0xC65D54", VA = "0xC65D54")]
		public bool Owned(string droneUid)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C70")]
		[Address(RVA = "0xC67048", Offset = "0xC67048", VA = "0xC67048")]
		public bool AddDrone(string droneUid)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C71")]
		[Address(RVA = "0xC67C10", Offset = "0xC67C10", VA = "0xC67C10")]
		public void TrashDrone(string droneUid)
		{
		}

		[Token(Token = "0x6000C72")]
		[Address(RVA = "0xC67D48", Offset = "0xC67D48", VA = "0xC67D48")]
		public DroneManager()
		{
		}
	}
	[Token(Token = "0x2000277")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x770754", Offset = "0x770754")]
	public class Drone : ScriptableObject
	{
		[Token(Token = "0x4000C79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected string uid;

		[Token(Token = "0x4000C7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected string label;

		[Token(Token = "0x4000C7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		protected AIPlayer playerPrefab;

		[Token(Token = "0x4000C7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		protected string prefabName;

		[Token(Token = "0x4000C7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		protected GameObject model;

		[Token(Token = "0x4000C7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public List<PowerUp> Powers;

		[Token(Token = "0x4000C7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		public string powersDescription;

		[Token(Token = "0x4000C80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		protected int cost;

		[Token(Token = "0x4000C81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		protected int minLevel;

		[Token(Token = "0x4000C82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		protected int duration;

		[Token(Token = "0x4000C83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		protected Texture2D storeThumbmnail;

		[Token(Token = "0x4000C84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		protected Texture2D storeLockedThumbmnail;

		[Token(Token = "0x17000176")]
		public string UID
		{
			[Token(Token = "0x6000C73")]
			[Address(RVA = "0xC64C74", Offset = "0xC64C74", VA = "0xC64C74")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000177")]
		public string Label
		{
			[Token(Token = "0x6000C74")]
			[Address(RVA = "0xC64C7C", Offset = "0xC64C7C", VA = "0xC64C7C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000178")]
		public AIPlayer PlayerPrefab
		{
			[Token(Token = "0x6000C75")]
			[Address(RVA = "0xC64C84", Offset = "0xC64C84", VA = "0xC64C84")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000179")]
		public string PrefabName
		{
			[Token(Token = "0x6000C76")]
			[Address(RVA = "0xC64C8C", Offset = "0xC64C8C", VA = "0xC64C8C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700017A")]
		public GameObject Model
		{
			[Token(Token = "0x6000C77")]
			[Address(RVA = "0xC64CDC", Offset = "0xC64CDC", VA = "0xC64CDC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700017B")]
		public string PowersDescription
		{
			[Token(Token = "0x6000C78")]
			[Address(RVA = "0xC64CE4", Offset = "0xC64CE4", VA = "0xC64CE4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700017C")]
		public int Cost
		{
			[Token(Token = "0x6000C79")]
			[Address(RVA = "0xC64EE8", Offset = "0xC64EE8", VA = "0xC64EE8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000C7A")]
			[Address(RVA = "0xC64EF0", Offset = "0xC64EF0", VA = "0xC64EF0")]
			set
			{
			}
		}

		[Token(Token = "0x1700017D")]
		public int MinLevel
		{
			[Token(Token = "0x6000C7B")]
			[Address(RVA = "0xC64EF8", Offset = "0xC64EF8", VA = "0xC64EF8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000C7C")]
			[Address(RVA = "0xC64F00", Offset = "0xC64F00", VA = "0xC64F00")]
			set
			{
			}
		}

		[Token(Token = "0x1700017E")]
		public int Duration
		{
			[Token(Token = "0x6000C7D")]
			[Address(RVA = "0xC64F08", Offset = "0xC64F08", VA = "0xC64F08")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000C7E")]
			[Address(RVA = "0xC64F10", Offset = "0xC64F10", VA = "0xC64F10")]
			set
			{
			}
		}

		[Token(Token = "0x1700017F")]
		public Texture2D StoreThumbnail
		{
			[Token(Token = "0x6000C7F")]
			[Address(RVA = "0xC64F18", Offset = "0xC64F18", VA = "0xC64F18")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000180")]
		public Texture2D StoreLockedThumbnail
		{
			[Token(Token = "0x6000C80")]
			[Address(RVA = "0xC64F20", Offset = "0xC64F20", VA = "0xC64F20")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C81")]
		[Address(RVA = "0xC64F28", Offset = "0xC64F28", VA = "0xC64F28")]
		public Drone()
		{
		}
	}
	[Token(Token = "0x2000278")]
	public class DroneDisplay : MonoBehaviour
	{
		[Token(Token = "0x4000C85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected Drone drone;

		[Token(Token = "0x4000C86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UIText label;

		[Token(Token = "0x4000C87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UIText capabilities;

		[Token(Token = "0x4000C88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public UIText cost;

		[Token(Token = "0x4000C89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public UIText minLevel;

		[Token(Token = "0x4000C8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject buyButton;

		[Token(Token = "0x4000C8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject cantBuy;

		[Token(Token = "0x4000C8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public GameObject locked;

		[Token(Token = "0x4000C8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public GameObject noSlots;

		[Token(Token = "0x4000C8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public GameObject alreadyOwned;

		[Token(Token = "0x4000C8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public GameObject isActive;

		[Token(Token = "0x4000C90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Renderer thumbnail;

		[Token(Token = "0x4000C91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected Material thumbnailMaterial;

		[Token(Token = "0x4000C92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Renderer powerIcon1;

		[Token(Token = "0x4000C93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		protected Material powerIcon1Material;

		[Token(Token = "0x4000C94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Renderer powerIcon2;

		[Token(Token = "0x4000C95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		protected Material powerIcon2Material;

		[Token(Token = "0x4000C96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public UIText powerDescription;

		[Token(Token = "0x4000C97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		protected DroneInventoryManager inventoryManager;

		[Token(Token = "0x4000C98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public UIText duration;

		[Token(Token = "0x4000C99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public bool hideAllOnEmpty;

		[Token(Token = "0x17000181")]
		public Drone Drone
		{
			[Token(Token = "0x6000C82")]
			[Address(RVA = "0xC64FBC", Offset = "0xC64FBC", VA = "0xC64FBC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C83")]
			[Address(RVA = "0xC64FC4", Offset = "0xC64FC4", VA = "0xC64FC4")]
			set
			{
			}
		}

		[Token(Token = "0x6000C84")]
		[Address(RVA = "0xC65AFC", Offset = "0xC65AFC", VA = "0xC65AFC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000C85")]
		[Address(RVA = "0xC64FCC", Offset = "0xC64FCC", VA = "0xC64FCC")]
		public void UpdateDisplay()
		{
		}

		[Token(Token = "0x6000C86")]
		[Address(RVA = "0xC65E2C", Offset = "0xC65E2C", VA = "0xC65E2C")]
		public void ActivateCurrent()
		{
		}

		[Token(Token = "0x6000C87")]
		[Address(RVA = "0xC65F5C", Offset = "0xC65F5C", VA = "0xC65F5C")]
		public void ViewCurrent()
		{
		}

		[Token(Token = "0x6000C88")]
		[Address(RVA = "0xC660DC", Offset = "0xC660DC", VA = "0xC660DC")]
		public void PurchaseCurrent()
		{
		}

		[Token(Token = "0x6000C89")]
		[Address(RVA = "0xC664A0", Offset = "0xC664A0", VA = "0xC664A0")]
		public DroneDisplay()
		{
		}
	}
	[Token(Token = "0x2000279")]
	[ExecuteAlways]
	public class DroneGrid : GridDisplay
	{
		[Token(Token = "0x4000C9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		protected DroneDisplay droneDisplayPrefab;

		[Token(Token = "0x4000C9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		protected DroneDisplay emptyDisplayPrefab;

		[Token(Token = "0x6000C8A")]
		[Address(RVA = "0xC664A8", Offset = "0xC664A8", VA = "0xC664A8", Slot = "5")]
		protected override void AddToGrid(string uid, Vector3 pos, Quaternion rot, int idx)
		{
		}

		[Token(Token = "0x6000C8B")]
		[Address(RVA = "0xC66748", Offset = "0xC66748", VA = "0xC66748")]
		protected DroneDisplay AddDroneToGrid(Drone drone, Vector3 pos, Quaternion rot, DroneDisplay prefab)
		{
			return null;
		}

		[Token(Token = "0x6000C8C")]
		[Address(RVA = "0xC66B54", Offset = "0xC66B54", VA = "0xC66B54")]
		public DroneGrid()
		{
		}
	}
	[Token(Token = "0x200027A")]
	[ExecuteAlways]
	public class DroneGridOwned : DroneGrid
	{
		[Token(Token = "0x4000C9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		protected DroneDisplay lockedDisplayPrefab;

		[Token(Token = "0x4000C9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public IntVariable slots;

		[Token(Token = "0x6000C8D")]
		[Address(RVA = "0xC66B74", Offset = "0xC66B74", VA = "0xC66B74", Slot = "5")]
		protected override void AddToGrid(string uid, Vector3 pos, Quaternion rot, int idx)
		{
		}

		[Token(Token = "0x6000C8E")]
		[Address(RVA = "0xC66D38", Offset = "0xC66D38", VA = "0xC66D38")]
		public DroneGridOwned()
		{
		}
	}
	[Token(Token = "0x200027B")]
	public class DroneIdleController : MonoBehaviour
	{
		[Token(Token = "0x4000C9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Animator animator;

		[Token(Token = "0x4000C9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string stateParameter;

		[Token(Token = "0x4000CA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector2Int stateRange;

		[Token(Token = "0x4000CA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float newStateEvery;

		[Token(Token = "0x4000CA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		protected float timer;

		[Token(Token = "0x6000C8F")]
		[Address(RVA = "0xC66D48", Offset = "0xC66D48", VA = "0xC66D48")]
		private void Start()
		{
		}

		[Token(Token = "0x6000C90")]
		[Address(RVA = "0xC66E28", Offset = "0xC66E28", VA = "0xC66E28")]
		private void Update()
		{
		}

		[Token(Token = "0x6000C91")]
		[Address(RVA = "0xC66D4C", Offset = "0xC66D4C", VA = "0xC66D4C")]
		protected void SetRandomState()
		{
		}

		[Token(Token = "0x6000C92")]
		[Address(RVA = "0xC66E84", Offset = "0xC66E84", VA = "0xC66E84")]
		public DroneIdleController()
		{
		}
	}
	[Token(Token = "0x200027C")]
	public class DroneInventoryManager : MonoBehaviour
	{
		[Token(Token = "0x4000CA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected IntVariable bank;

		[Token(Token = "0x4000CA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected Drone currentDrone;

		[Token(Token = "0x4000CA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		protected KeyValueList inventoryList;

		[Token(Token = "0x4000CA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		protected DroneDisplay display;

		[Token(Token = "0x17000182")]
		public int BankBalance
		{
			[Token(Token = "0x6000C93")]
			[Address(RVA = "0xC66E98", Offset = "0xC66E98", VA = "0xC66E98")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6000C94")]
		[Address(RVA = "0xC66F30", Offset = "0xC66F30", VA = "0xC66F30")]
		private void Start()
		{
		}

		[Token(Token = "0x6000C95")]
		[Address(RVA = "0xC67044", Offset = "0xC67044", VA = "0xC67044")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000C96")]
		[Address(RVA = "0xC66038", Offset = "0xC66038", VA = "0xC66038")]
		public void View(string droneUid)
		{
		}

		[Token(Token = "0x6000C97")]
		[Address(RVA = "0xC661C8", Offset = "0xC661C8", VA = "0xC661C8")]
		public void Purchase(string droneUid)
		{
		}

		[Token(Token = "0x6000C98")]
		[Address(RVA = "0xC66498", Offset = "0xC66498", VA = "0xC66498")]
		public void RemoveDrone()
		{
		}

		[Token(Token = "0x6000C99")]
		[Address(RVA = "0xC66F34", Offset = "0xC66F34", VA = "0xC66F34")]
		public void UpdateDisplay()
		{
		}

		[Token(Token = "0x6000C9A")]
		[Address(RVA = "0xC673B8", Offset = "0xC673B8", VA = "0xC673B8")]
		public DroneInventoryManager()
		{
		}
	}
	[Token(Token = "0x200027D")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x770784", Offset = "0x770784")]
	public class DroneList : ScriptableObject
	{
		[Token(Token = "0x4000CA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Drone defaultDrone;

		[Token(Token = "0x4000CA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<Drone> Drones;

		[Token(Token = "0x17000183")]
		public Drone Rand
		{
			[Token(Token = "0x6000C9D")]
			[Address(RVA = "0xC67660", Offset = "0xC67660", VA = "0xC67660")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C9B")]
		[Address(RVA = "0xC673C0", Offset = "0xC673C0", VA = "0xC673C0")]
		public bool Contains(string uid)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C9C")]
		[Address(RVA = "0xC67514", Offset = "0xC67514", VA = "0xC67514")]
		public Drone Find(string uid)
		{
			return null;
		}

		[Token(Token = "0x6000C9E")]
		[Address(RVA = "0xC676E8", Offset = "0xC676E8", VA = "0xC676E8")]
		public DroneList()
		{
		}
	}
	[Token(Token = "0x200027E")]
	public class DroneManagerRef : MonoBehaviour
	{
		[Token(Token = "0x6000C9F")]
		[Address(RVA = "0xC67DC0", Offset = "0xC67DC0", VA = "0xC67DC0")]
		public void TrashActiveDrone()
		{
		}

		[Token(Token = "0x6000CA0")]
		[Address(RVA = "0xC67E5C", Offset = "0xC67E5C", VA = "0xC67E5C")]
		public DroneManagerRef()
		{
		}
	}
	[Token(Token = "0x200027F")]
	public class HandEffect : MonoBehaviour
	{
		[Token(Token = "0x4000CA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected Paddle paddle;

		[Token(Token = "0x4000CAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float lifeAfterRemove;

		[Token(Token = "0x4000CAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UnityEvent OnHit;

		[Token(Token = "0x17000184")]
		public Paddle Paddle
		{
			[Token(Token = "0x6000CA1")]
			[Address(RVA = "0xC71508", Offset = "0xC71508", VA = "0xC71508")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000CA2")]
			[Address(RVA = "0xC71510", Offset = "0xC71510", VA = "0xC71510")]
			set
			{
			}
		}

		[Token(Token = "0x6000CA3")]
		[Address(RVA = "0xC7168C", Offset = "0xC7168C", VA = "0xC7168C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000CA4")]
		[Address(RVA = "0xC7177C", Offset = "0xC7177C", VA = "0xC7177C")]
		protected void Remove()
		{
		}

		[Token(Token = "0x6000CA5")]
		[Address(RVA = "0xC71814", Offset = "0xC71814", VA = "0xC71814")]
		public HandEffect()
		{
		}
	}
	[Token(Token = "0x2000280")]
	public class HitEffect : MonoBehaviour
	{
		[Token(Token = "0x4000CAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float lifespan;

		[Token(Token = "0x6000CA6")]
		[Address(RVA = "0xBC4FCC", Offset = "0xBC4FCC", VA = "0xBC4FCC")]
		private void Start()
		{
		}

		[Token(Token = "0x6000CA7")]
		[Address(RVA = "0xBC5070", Offset = "0xBC5070", VA = "0xBC5070")]
		public HitEffect()
		{
		}
	}
	[Token(Token = "0x2000281")]
	public class FlipIfPastPoint : MonoBehaviour
	{
		[Token(Token = "0x4000CAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform trans;

		[Token(Token = "0x4000CAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float zValue;

		[Token(Token = "0x6000CA8")]
		[Address(RVA = "0xC6A734", Offset = "0xC6A734", VA = "0xC6A734")]
		private void Start()
		{
		}

		[Token(Token = "0x6000CA9")]
		[Address(RVA = "0xC6A7B8", Offset = "0xC6A7B8", VA = "0xC6A7B8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000CAA")]
		[Address(RVA = "0xC6A824", Offset = "0xC6A824", VA = "0xC6A824")]
		public FlipIfPastPoint()
		{
		}
	}
	[Token(Token = "0x2000282")]
	public class GameManager : AppManager
	{
		[Token(Token = "0x2000283")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x770794", Offset = "0x770794")]
		private sealed class <SaveAction>d__21 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000CB5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000CB6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000CB7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GameManager <>4__this;

			[Token(Token = "0x4000CB8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool all;

			[Token(Token = "0x1700018A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000CBB")]
				[Address(RVA = "0xB2B0D8", Offset = "0xB2B0D8", VA = "0xB2B0D8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700018B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000CBD")]
				[Address(RVA = "0xB2B120", Offset = "0xB2B120", VA = "0xB2B120", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000CB8")]
			[Address(RVA = "0xB2A850", Offset = "0xB2A850", VA = "0xB2A850")]
			[DebuggerHidden]
			public <SaveAction>d__21(int <>1__state)
			{
			}

			[Token(Token = "0x6000CB9")]
			[Address(RVA = "0xB2A87C", Offset = "0xB2A87C", VA = "0xB2A87C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000CBA")]
			[Address(RVA = "0xB2A880", Offset = "0xB2A880", VA = "0xB2A880", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000CBC")]
			[Address(RVA = "0xB2B0E0", Offset = "0xB2B0E0", VA = "0xB2B0E0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000CAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public StringVariable error;

		[Token(Token = "0x4000CB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public XRRig playerRig;

		[Token(Token = "0x4000CB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected Transform playerRoot;

		[Token(Token = "0x4000CB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected NetworkManager networkManager;

		[Token(Token = "0x4000CB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected MatchManager matchManager;

		[Token(Token = "0x4000CB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected float lastSaveTime;

		[Token(Token = "0x17000185")]
		public Transform PlayerRoot
		{
			[Token(Token = "0x6000CAB")]
			[Address(RVA = "0xC6B8F4", Offset = "0xC6B8F4", VA = "0xC6B8F4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000186")]
		public static GameManager Game
		{
			[Token(Token = "0x6000CAC")]
			[Address(RVA = "0xC6B8FC", Offset = "0xC6B8FC", VA = "0xC6B8FC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000187")]
		public static NetworkManager Network
		{
			[Token(Token = "0x6000CAD")]
			[Address(RVA = "0xC6B994", Offset = "0xC6B994", VA = "0xC6B994")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000188")]
		public static MatchManager MatchManager
		{
			[Token(Token = "0x6000CAE")]
			[Address(RVA = "0xC6B9B4", Offset = "0xC6B9B4", VA = "0xC6B9B4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000189")]
		public static Match Match
		{
			[Token(Token = "0x6000CAF")]
			[Address(RVA = "0xC687D4", Offset = "0xC687D4", VA = "0xC687D4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CB0")]
		[Address(RVA = "0xC6B9D4", Offset = "0xC6B9D4", VA = "0xC6B9D4", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6000CB1")]
		[Address(RVA = "0xC6BAE4", Offset = "0xC6BAE4", VA = "0xC6BAE4")]
		public void SetPlayerRig(Transform t, bool forwardFacing = true)
		{
		}

		[Token(Token = "0x6000CB2")]
		[Address(RVA = "0xC6BC24", Offset = "0xC6BC24", VA = "0xC6BC24")]
		public static void PlayMatch(Match m)
		{
		}

		[Token(Token = "0x6000CB3")]
		[Address(RVA = "0xC6BC5C", Offset = "0xC6BC5C", VA = "0xC6BC5C")]
		public static void Save()
		{
		}

		[Token(Token = "0x6000CB4")]
		[Address(RVA = "0xC6BD8C", Offset = "0xC6BD8C", VA = "0xC6BD8C")]
		public static void SaveAll()
		{
		}

		[Token(Token = "0x6000CB5")]
		[Address(RVA = "0xC6BD0C", Offset = "0xC6BD0C", VA = "0xC6BD0C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7771B8", Offset = "0x7771B8")]
		public IEnumerator SaveAction(bool all)
		{
			return null;
		}

		[Token(Token = "0x6000CB6")]
		[Address(RVA = "0xC6BE3C", Offset = "0xC6BE3C", VA = "0xC6BE3C")]
		public static void MatchComplete(Match m)
		{
		}

		[Token(Token = "0x6000CB7")]
		[Address(RVA = "0xC6BFF8", Offset = "0xC6BFF8", VA = "0xC6BFF8")]
		public GameManager()
		{
		}
	}
	[Token(Token = "0x2000284")]
	public class GloveManager : DataManager<GloveManager>
	{
		[Token(Token = "0x4000CB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		protected KeyValueList ownedGloves;

		[Token(Token = "0x4000CBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		protected GloveList gloves;

		[Token(Token = "0x4000CBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		protected StringVariable leftGlove;

		[Token(Token = "0x4000CBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		protected StringVariable rightGlove;

		[Token(Token = "0x1700018C")]
		public static Glove Left
		{
			[Token(Token = "0x6000CC0")]
			[Address(RVA = "0xC6F16C", Offset = "0xC6F16C", VA = "0xC6F16C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700018D")]
		public static Glove Right
		{
			[Token(Token = "0x6000CC1")]
			[Address(RVA = "0xC6F284", Offset = "0xC6F284", VA = "0xC6F284")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CBE")]
		[Address(RVA = "0xC6EFD0", Offset = "0xC6EFD0", VA = "0xC6EFD0", Slot = "7")]
		protected override void AfterReady()
		{
		}

		[Token(Token = "0x6000CBF")]
		[Address(RVA = "0xC6E7F0", Offset = "0xC6E7F0", VA = "0xC6E7F0")]
		public static Glove Find(string uid)
		{
			return null;
		}

		[Token(Token = "0x6000CC2")]
		[Address(RVA = "0xC6F39C", Offset = "0xC6F39C", VA = "0xC6F39C")]
		public void EnsureHands()
		{
		}

		[Token(Token = "0x6000CC3")]
		[Address(RVA = "0xC6F15C", Offset = "0xC6F15C", VA = "0xC6F15C")]
		protected void CheckLeftGlove()
		{
		}

		[Token(Token = "0x6000CC4")]
		[Address(RVA = "0xC6F164", Offset = "0xC6F164", VA = "0xC6F164")]
		protected void CheckRightGlove()
		{
		}

		[Token(Token = "0x6000CC5")]
		[Address(RVA = "0xC6F508", Offset = "0xC6F508", VA = "0xC6F508")]
		protected void CheckGlove(StringVariable glove)
		{
		}

		[Token(Token = "0x6000CC6")]
		[Address(RVA = "0xC6F6C8", Offset = "0xC6F6C8", VA = "0xC6F6C8")]
		public void TrashGlove(string gloveUid)
		{
		}

		[Token(Token = "0x6000CC7")]
		[Address(RVA = "0xC6F8B0", Offset = "0xC6F8B0", VA = "0xC6F8B0")]
		public void AwardGlove(string gloveUid, string reason)
		{
		}

		[Token(Token = "0x6000CC8")]
		[Address(RVA = "0xC6FA10", Offset = "0xC6FA10", VA = "0xC6FA10")]
		public GloveManager()
		{
		}
	}
	[Token(Token = "0x2000285")]
	public class EquippedGloveDisplayer : MonoBehaviour
	{
		[Token(Token = "0x4000CBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected Glove glove;

		[Token(Token = "0x4000CBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected GloveDisplay ownedDisplay;

		[Token(Token = "0x4000CBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		protected GloveDisplay unownedDisplay;

		[Token(Token = "0x4000CC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool isOwned;

		[Token(Token = "0x1700018E")]
		public Glove Glove
		{
			[Token(Token = "0x6000CC9")]
			[Address(RVA = "0xC68224", Offset = "0xC68224", VA = "0xC68224")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000CCA")]
			[Address(RVA = "0xC6822C", Offset = "0xC6822C", VA = "0xC6822C")]
			set
			{
			}
		}

		[Token(Token = "0x6000CCB")]
		[Address(RVA = "0xC68438", Offset = "0xC68438", VA = "0xC68438")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000CCC")]
		[Address(RVA = "0xC6843C", Offset = "0xC6843C", VA = "0xC6843C")]
		public void ShowGlove(Glove g, bool owned)
		{
		}

		[Token(Token = "0x6000CCD")]
		[Address(RVA = "0xC68234", Offset = "0xC68234", VA = "0xC68234")]
		public void UpdateDisplay()
		{
		}

		[Token(Token = "0x6000CCE")]
		[Address(RVA = "0xC68454", Offset = "0xC68454", VA = "0xC68454")]
		public EquippedGloveDisplayer()
		{
		}
	}
	[Token(Token = "0x2000286")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x7707A4", Offset = "0x7707A4")]
	public class Glove : ScriptableObject
	{
		[Token(Token = "0x4000CC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected string uid;

		[Token(Token = "0x4000CC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected string label;

		[Token(Token = "0x4000CC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		protected int cost;

		[Token(Token = "0x4000CC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		protected int maxQty;

		[Token(Token = "0x4000CC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		protected string description;

		[Token(Token = "0x4000CC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		protected string longDescription;

		[Token(Token = "0x4000CC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		protected GameObject leftHandPrefab;

		[Token(Token = "0x4000CC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		protected GameObject rightHandPrefab;

		[Token(Token = "0x4000CC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		protected Texture2D thumbnail;

		[Token(Token = "0x4000CCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		protected PowerUp power;

		[Token(Token = "0x1700018F")]
		public string UID
		{
			[Token(Token = "0x6000CCF")]
			[Address(RVA = "0xC6C65C", Offset = "0xC6C65C", VA = "0xC6C65C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000190")]
		public string Label
		{
			[Token(Token = "0x6000CD0")]
			[Address(RVA = "0xC6C664", Offset = "0xC6C664", VA = "0xC6C664")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000191")]
		public int Cost
		{
			[Token(Token = "0x6000CD1")]
			[Address(RVA = "0xC6C66C", Offset = "0xC6C66C", VA = "0xC6C66C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000CD2")]
			[Address(RVA = "0xC6C674", Offset = "0xC6C674", VA = "0xC6C674")]
			set
			{
			}
		}

		[Token(Token = "0x17000192")]
		public int MaxQty
		{
			[Token(Token = "0x6000CD3")]
			[Address(RVA = "0xC6C67C", Offset = "0xC6C67C", VA = "0xC6C67C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000193")]
		public string Description
		{
			[Token(Token = "0x6000CD4")]
			[Address(RVA = "0xC6C684", Offset = "0xC6C684", VA = "0xC6C684")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000194")]
		public string LongDescription
		{
			[Token(Token = "0x6000CD5")]
			[Address(RVA = "0xC6C68C", Offset = "0xC6C68C", VA = "0xC6C68C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000195")]
		public GameObject LeftHandPrefab
		{
			[Token(Token = "0x6000CD6")]
			[Address(RVA = "0xC6C694", Offset = "0xC6C694", VA = "0xC6C694")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000196")]
		public GameObject RightHandPrefab
		{
			[Token(Token = "0x6000CD7")]
			[Address(RVA = "0xC6C69C", Offset = "0xC6C69C", VA = "0xC6C69C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000197")]
		public Texture2D Thumbnail
		{
			[Token(Token = "0x6000CD8")]
			[Address(RVA = "0xC6C6A4", Offset = "0xC6C6A4", VA = "0xC6C6A4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000198")]
		public PowerUp Power
		{
			[Token(Token = "0x6000CD9")]
			[Address(RVA = "0xC6C6AC", Offset = "0xC6C6AC", VA = "0xC6C6AC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000CDA")]
			[Address(RVA = "0xC6C6B4", Offset = "0xC6C6B4", VA = "0xC6C6B4")]
			set
			{
			}
		}

		[Token(Token = "0x6000CDB")]
		[Address(RVA = "0xC6C6BC", Offset = "0xC6C6BC", VA = "0xC6C6BC")]
		public Glove()
		{
		}
	}
	[Token(Token = "0x2000287")]
	public class GloveController : MonoBehaviour
	{
		[Token(Token = "0x4000CCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected StringVariable currentGlove;

		[Token(Token = "0x4000CCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected GloveList gloveList;

		[Token(Token = "0x4000CCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected Glove glove;

		[Token(Token = "0x4000CCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		protected bool isRight;

		[Token(Token = "0x4000CCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform attachPoint;

		[Token(Token = "0x4000CD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected PowerUpController powerUp;

		[Token(Token = "0x4000CD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected GameObject model;

		[Token(Token = "0x17000199")]
		public Glove Glove
		{
			[Token(Token = "0x6000CDC")]
			[Address(RVA = "0xC6C6CC", Offset = "0xC6C6CC", VA = "0xC6C6CC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000CDD")]
			[Address(RVA = "0xC6C6D4", Offset = "0xC6C6D4", VA = "0xC6C6D4")]
			set
			{
			}
		}

		[Token(Token = "0x1700019A")]
		public bool IsRight
		{
			[Token(Token = "0x6000CDE")]
			[Address(RVA = "0xC6C9A4", Offset = "0xC6C9A4", VA = "0xC6C9A4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000CDF")]
			[Address(RVA = "0xC6C9AC", Offset = "0xC6C9AC", VA = "0xC6C9AC")]
			set
			{
			}
		}

		[Token(Token = "0x1700019B")]
		public bool IsLeft
		{
			[Token(Token = "0x6000CE0")]
			[Address(RVA = "0xC6C9B8", Offset = "0xC6C9B8", VA = "0xC6C9B8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000CE1")]
			[Address(RVA = "0xC6C9C8", Offset = "0xC6C9C8", VA = "0xC6C9C8")]
			set
			{
			}
		}

		[Token(Token = "0x6000CE2")]
		[Address(RVA = "0xC6C9D8", Offset = "0xC6C9D8", VA = "0xC6C9D8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000CE3")]
		[Address(RVA = "0xC6CA9C", Offset = "0xC6CA9C", VA = "0xC6CA9C")]
		private void Destroy()
		{
		}

		[Token(Token = "0x6000CE4")]
		[Address(RVA = "0xC6C714", Offset = "0xC6C714", VA = "0xC6C714")]
		protected void UpdateModel()
		{
		}

		[Token(Token = "0x6000CE5")]
		[Address(RVA = "0xC6CCB8", Offset = "0xC6CCB8", VA = "0xC6CCB8")]
		public GloveController()
		{
		}
	}
	[Token(Token = "0x2000288")]
	public class GloveDisplay : MonoBehaviour
	{
		[Token(Token = "0x4000CD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected Glove glove;

		[Token(Token = "0x4000CD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UIText label;

		[Token(Token = "0x4000CD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UIText description;

		[Token(Token = "0x4000CD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public UIText longDescription;

		[Token(Token = "0x4000CD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public UIText cost;

		[Token(Token = "0x4000CD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public UIText numOwned;

		[Token(Token = "0x4000CD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject buyButton;

		[Token(Token = "0x4000CD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public GameObject cantBuy;

		[Token(Token = "0x4000CDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Renderer thumbnail;

		[Token(Token = "0x4000CDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected Material thumbnailMaterial;

		[Token(Token = "0x4000CDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Renderer powerIcon;

		[Token(Token = "0x4000CDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected Material powerIconMaterial;

		[Token(Token = "0x4000CDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public UIText powerName;

		[Token(Token = "0x4000CDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public UIText powerDescription;

		[Token(Token = "0x4000CE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public UIText powerLine1Label;

		[Token(Token = "0x4000CE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public UIText powerLine1Value;

		[Token(Token = "0x4000CE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public UIText powerLine2Label;

		[Token(Token = "0x4000CE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public UIText powerLine2Value;

		[Token(Token = "0x4000CE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public UIText powerLine3Label;

		[Token(Token = "0x4000CE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public UIText powerLine3Value;

		[Token(Token = "0x4000CE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		protected GloveInventoryManager inventoryManager;

		[Token(Token = "0x1700019C")]
		public Glove Glove
		{
			[Token(Token = "0x6000CE6")]
			[Address(RVA = "0xC6CCC8", Offset = "0xC6CCC8", VA = "0xC6CCC8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000CE7")]
			[Address(RVA = "0xC6844C", Offset = "0xC6844C", VA = "0xC6844C")]
			set
			{
			}
		}

		[Token(Token = "0x6000CE8")]
		[Address(RVA = "0xC6DC48", Offset = "0xC6DC48", VA = "0xC6DC48")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000CE9")]
		[Address(RVA = "0xC6CCD0", Offset = "0xC6CCD0", VA = "0xC6CCD0")]
		public void UpdateDisplay()
		{
		}

		[Token(Token = "0x6000CEA")]
		[Address(RVA = "0xC6DDE8", Offset = "0xC6DDE8", VA = "0xC6DDE8")]
		public void EquipToHand(GameObject handObject)
		{
		}

		[Token(Token = "0x6000CEB")]
		[Address(RVA = "0xC6E028", Offset = "0xC6E028", VA = "0xC6E028")]
		public void AssignToHand(GameObject handObject)
		{
		}

		[Token(Token = "0x6000CEC")]
		[Address(RVA = "0xC6E230", Offset = "0xC6E230", VA = "0xC6E230")]
		public void PurchaseCurrent()
		{
		}

		[Token(Token = "0x6000CED")]
		[Address(RVA = "0xC6E5B8", Offset = "0xC6E5B8", VA = "0xC6E5B8")]
		public GloveDisplay()
		{
		}
	}
	[Token(Token = "0x2000289")]
	[ExecuteAlways]
	public class GloveGrid : GridDisplay
	{
		[Token(Token = "0x4000CE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		protected GloveDisplay gloveDisplayPrefab;

		[Token(Token = "0x4000CE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		protected GloveDisplay emptyDisplayPrefab;

		[Token(Token = "0x6000CEE")]
		[Address(RVA = "0xC6E5C0", Offset = "0xC6E5C0", VA = "0xC6E5C0", Slot = "5")]
		protected override void AddToGrid(string uid, Vector3 pos, Quaternion rot, int idx)
		{
		}

		[Token(Token = "0x6000CEF")]
		[Address(RVA = "0xC6E964", Offset = "0xC6E964", VA = "0xC6E964")]
		public GloveGrid()
		{
		}
	}
	[Token(Token = "0x200028A")]
	public class GloveInventoryManager : MonoBehaviour
	{
		[Token(Token = "0x4000CE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected StringVariable leftGlove;

		[Token(Token = "0x4000CEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected StringVariable rightGlove;

		[Token(Token = "0x4000CEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		protected StringVariable leftEquippedGlove;

		[Token(Token = "0x4000CEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		protected StringVariable rightEquippedGlove;

		[Token(Token = "0x4000CED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		protected KeyValueList inventoryList;

		[Token(Token = "0x4000CEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		protected GloveList gloves;

		[Token(Token = "0x4000CEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		protected EquippedGloveDisplayer leftDisplay;

		[Token(Token = "0x4000CF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		protected EquippedGloveDisplayer rightDisplay;

		[Token(Token = "0x4000CF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		protected bool isShopping;

		[Token(Token = "0x4000CF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		protected bool tryingOnLeft;

		[Token(Token = "0x4000CF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
		protected bool tryingOnRight;

		[Token(Token = "0x1700019D")]
		public bool IsShopping
		{
			[Token(Token = "0x6000CF0")]
			[Address(RVA = "0xC6E974", Offset = "0xC6E974", VA = "0xC6E974")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000CF1")]
			[Address(RVA = "0xC6E97C", Offset = "0xC6E97C", VA = "0xC6E97C")]
			set
			{
			}
		}

		[Token(Token = "0x6000CF2")]
		[Address(RVA = "0xC6EB40", Offset = "0xC6EB40", VA = "0xC6EB40")]
		private void Start()
		{
		}

		[Token(Token = "0x6000CF3")]
		[Address(RVA = "0xC6EDEC", Offset = "0xC6EDEC", VA = "0xC6EDEC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000CF4")]
		[Address(RVA = "0xC6E9C4", Offset = "0xC6E9C4", VA = "0xC6E9C4")]
		protected void SetCurrentGlovesToEquipped()
		{
		}

		[Token(Token = "0x6000CF5")]
		[Address(RVA = "0xC6DEF0", Offset = "0xC6DEF0", VA = "0xC6DEF0")]
		public void Equip(string gloveUid, bool right)
		{
		}

		[Token(Token = "0x6000CF6")]
		[Address(RVA = "0xC6E130", Offset = "0xC6E130", VA = "0xC6E130")]
		public void TryOn(string gloveUid, bool right)
		{
		}

		[Token(Token = "0x6000CF7")]
		[Address(RVA = "0xC6DDCC", Offset = "0xC6DDCC", VA = "0xC6DDCC")]
		public int NumberOwned(string gloveUid)
		{
			return default(int);
		}

		[Token(Token = "0x6000CF8")]
		[Address(RVA = "0xC6E3BC", Offset = "0xC6E3BC", VA = "0xC6E3BC")]
		public void Purchase(string gloveUid)
		{
		}

		[Token(Token = "0x6000CF9")]
		[Address(RVA = "0xC6EE10", Offset = "0xC6EE10", VA = "0xC6EE10")]
		public void RemoveGlove(bool right)
		{
		}

		[Token(Token = "0x6000CFA")]
		[Address(RVA = "0xC6EB64", Offset = "0xC6EB64", VA = "0xC6EB64")]
		public void UpdatePurchaseDisplay()
		{
		}

		[Token(Token = "0x6000CFB")]
		[Address(RVA = "0xC6EEC8", Offset = "0xC6EEC8", VA = "0xC6EEC8")]
		public GloveInventoryManager()
		{
		}
	}
	[Token(Token = "0x200028B")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x7707C4", Offset = "0x7707C4")]
	public class GloveList : ScriptableObject
	{
		[Token(Token = "0x4000CF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Glove noGlove;

		[Token(Token = "0x4000CF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<Glove> Gloves;

		[Token(Token = "0x1700019E")]
		public Glove Rand
		{
			[Token(Token = "0x6000CFD")]
			[Address(RVA = "0xC6EED0", Offset = "0xC6EED0", VA = "0xC6EED0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CFC")]
		[Address(RVA = "0xC6CB34", Offset = "0xC6CB34", VA = "0xC6CB34")]
		public Glove Find(string uid)
		{
			return null;
		}

		[Token(Token = "0x6000CFE")]
		[Address(RVA = "0xC6EF58", Offset = "0xC6EF58", VA = "0xC6EF58")]
		public GloveList()
		{
		}
	}
	[Token(Token = "0x200028C")]
	[ExecuteAlways]
	public abstract class GridDisplay : MonoBehaviour
	{
		[Token(Token = "0x4000CF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected KeyValueList inventoryList;

		[Token(Token = "0x4000CF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected int rows;

		[Token(Token = "0x4000CF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		protected int cols;

		[Token(Token = "0x4000CF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		protected GameObject nextButton;

		[Token(Token = "0x4000CFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		protected GameObject prevButton;

		[Token(Token = "0x4000CFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected int page;

		[Token(Token = "0x1700019F")]
		public int Page
		{
			[Token(Token = "0x6000CFF")]
			[Address(RVA = "0xC6FD68", Offset = "0xC6FD68", VA = "0xC6FD68")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000D00")]
			[Address(RVA = "0xC6FD70", Offset = "0xC6FD70", VA = "0xC6FD70")]
			set
			{
			}
		}

		[Token(Token = "0x170001A0")]
		public bool HasNextPage
		{
			[Token(Token = "0x6000D03")]
			[Address(RVA = "0xC6FE54", Offset = "0xC6FE54", VA = "0xC6FE54")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001A1")]
		public bool HasPrevPage
		{
			[Token(Token = "0x6000D04")]
			[Address(RVA = "0xC6FEA8", Offset = "0xC6FEA8", VA = "0xC6FEA8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000D01")]
		[Address(RVA = "0xC6FE3C", Offset = "0xC6FE3C", VA = "0xC6FE3C")]
		public void NextPage()
		{
		}

		[Token(Token = "0x6000D02")]
		[Address(RVA = "0xC6FE48", Offset = "0xC6FE48", VA = "0xC6FE48")]
		public void PrevPage()
		{
		}

		[Token(Token = "0x6000D05")]
		[Address(RVA = "0xC6FEB8", Offset = "0xC6FEB8", VA = "0xC6FEB8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000D06")]
		[Address(RVA = "0xC6FFC4", Offset = "0xC6FFC4", VA = "0xC6FFC4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000D07")]
		[Address(RVA = "0xC6FE08", Offset = "0xC6FE08", VA = "0xC6FE08")]
		public void UpdateGrid()
		{
		}

		[Token(Token = "0x6000D08")]
		[Address(RVA = "0xC70424", Offset = "0xC70424", VA = "0xC70424", Slot = "4")]
		protected virtual void ClearGrid()
		{
		}

		[Token(Token = "0x6000D09")]
		[Address(RVA = "0xC700B0", Offset = "0xC700B0", VA = "0xC700B0")]
		protected void CreateGrid()
		{
		}

		[Token(Token = "0x6000D0A")]
		protected abstract void AddToGrid(string uid, Vector3 pos, Quaternion rot, int idx);

		[Token(Token = "0x6000D0B")]
		[Address(RVA = "0xC70704", Offset = "0xC70704", VA = "0xC70704")]
		protected Vector3 GridPosition(int i)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000D0C")]
		[Address(RVA = "0xC70734", Offset = "0xC70734", VA = "0xC70734")]
		protected Quaternion GridRotation(int i)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000D0D")]
		[Address(RVA = "0xC7032C", Offset = "0xC7032C", VA = "0xC7032C")]
		protected void UpdateButtons()
		{
		}

		[Token(Token = "0x6000D0E")]
		[Address(RVA = "0xC66B64", Offset = "0xC66B64", VA = "0xC66B64")]
		protected GridDisplay()
		{
		}
	}
	[Token(Token = "0x200028D")]
	public class HoldSensor : MonoBehaviour
	{
		[Token(Token = "0x200028E")]
		public enum State
		{
			[Token(Token = "0x4000D06")]
			Init,
			[Token(Token = "0x4000D07")]
			Inactive,
			[Token(Token = "0x4000D08")]
			Ready,
			[Token(Token = "0x4000D09")]
			Holding,
			[Token(Token = "0x4000D0A")]
			InProgress
		}

		[Token(Token = "0x4000CFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected State state;

		[Token(Token = "0x4000CFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float timeToHold;

		[Token(Token = "0x4000CFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float timeToComplete;

		[Token(Token = "0x4000CFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		protected float timer;

		[Token(Token = "0x4000D00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UnityEvent OnReset;

		[Token(Token = "0x4000D01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public UnityEvent OnActive;

		[Token(Token = "0x4000D02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public UnityEvent OnHolding;

		[Token(Token = "0x4000D03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public UnityEvent OnTrigger;

		[Token(Token = "0x4000D04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public UnityEvent OnComplete;

		[Token(Token = "0x6000D0F")]
		[Address(RVA = "0xBC5080", Offset = "0xBC5080", VA = "0xBC5080")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000D10")]
		[Address(RVA = "0xBC5134", Offset = "0xBC5134", VA = "0xBC5134")]
		private void Update()
		{
		}

		[Token(Token = "0x6000D11")]
		[Address(RVA = "0xBC5088", Offset = "0xBC5088", VA = "0xBC5088")]
		public void Reset()
		{
		}

		[Token(Token = "0x6000D12")]
		[Address(RVA = "0xBC52EC", Offset = "0xBC52EC", VA = "0xBC52EC")]
		public void Activate()
		{
		}

		[Token(Token = "0x6000D13")]
		[Address(RVA = "0xBC5398", Offset = "0xBC5398", VA = "0xBC5398")]
		public void Hold()
		{
		}

		[Token(Token = "0x6000D14")]
		[Address(RVA = "0xBC5448", Offset = "0xBC5448", VA = "0xBC5448")]
		public void UnHold()
		{
		}

		[Token(Token = "0x6000D15")]
		[Address(RVA = "0xBC523C", Offset = "0xBC523C", VA = "0xBC523C")]
		public void PowerUp()
		{
		}

		[Token(Token = "0x6000D16")]
		[Address(RVA = "0xBC51AC", Offset = "0xBC51AC", VA = "0xBC51AC")]
		public void Complete()
		{
		}

		[Token(Token = "0x6000D17")]
		[Address(RVA = "0xBC54F4", Offset = "0xBC54F4", VA = "0xBC54F4")]
		public HoldSensor()
		{
		}
	}
	[Token(Token = "0x200028F")]
	public class InventoryManager : MonoBehaviourPunCallbacks
	{
		[Token(Token = "0x4000D0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected KeyValueList inventoryList;

		[Token(Token = "0x4000D0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		protected GloveList gloves;

		[Token(Token = "0x4000D0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		protected StringVariable leftGlove;

		[Token(Token = "0x4000D0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		protected StringVariable rightGlove;

		[Token(Token = "0x6000D18")]
		[Address(RVA = "0xBC8DFC", Offset = "0xBC8DFC", VA = "0xBC8DFC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000D19")]
		[Address(RVA = "0xBC8F88", Offset = "0xBC8F88", VA = "0xBC8F88")]
		protected void CheckLeftGlove()
		{
		}

		[Token(Token = "0x6000D1A")]
		[Address(RVA = "0xBC8F90", Offset = "0xBC8F90", VA = "0xBC8F90")]
		protected void CheckRightGlove()
		{
		}

		[Token(Token = "0x6000D1B")]
		[Address(RVA = "0xBC8F98", Offset = "0xBC8F98", VA = "0xBC8F98")]
		protected void CheckGlove(StringVariable glove)
		{
		}

		[Token(Token = "0x6000D1C")]
		[Address(RVA = "0xBC91C8", Offset = "0xBC91C8", VA = "0xBC91C8")]
		public void TrashGlove(string gloveUid)
		{
		}

		[Token(Token = "0x6000D1D")]
		[Address(RVA = "0xBC94FC", Offset = "0xBC94FC", VA = "0xBC94FC")]
		public InventoryManager()
		{
		}
	}
	[Token(Token = "0x2000290")]
	public class LeaderboardEntry : MonoBehaviour
	{
		[Token(Token = "0x4000D0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UIText rank;

		[Token(Token = "0x4000D10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UIText player;

		[Token(Token = "0x4000D11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UIText score;

		[Token(Token = "0x6000D1E")]
		[Address(RVA = "0xBCC894", Offset = "0xBCC894", VA = "0xBCC894")]
		public void UpdateDisplay(JSONNode json)
		{
		}

		[Token(Token = "0x6000D1F")]
		[Address(RVA = "0xBCCBF8", Offset = "0xBCCBF8", VA = "0xBCCBF8")]
		public LeaderboardEntry()
		{
		}
	}
	[Token(Token = "0x2000291")]
	public class AwardDisplay : MonoBehaviour
	{
		[Token(Token = "0x4000D12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public League league;

		[Token(Token = "0x4000D13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool ForWinner;

		[Token(Token = "0x4000D14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool ForPromoted;

		[Token(Token = "0x6000D20")]
		[Address(RVA = "0xB46B90", Offset = "0xB46B90", VA = "0xB46B90")]
		public AwardDisplay()
		{
		}
	}
	[Token(Token = "0x2000292")]
	public class ChallengeMatchDisplay : PlayerMatchDisplay
	{
		[Token(Token = "0x4000D15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public UIText challengeScore;

		[Token(Token = "0x4000D16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public MatchStatsDisplay statsDisplay;

		[Token(Token = "0x4000D17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public GameObject BonusShutout;

		[Token(Token = "0x4000D18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public GameObject BonusOneHanded;

		[Token(Token = "0x4000D19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public GameObject BonusEvenHanded;

		[Token(Token = "0x4000D1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public GameObject BonusPowerless;

		[Token(Token = "0x4000D1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public GameObject BonusSuperClose;

		[Token(Token = "0x4000D1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public GameObject BonusPowerful;

		[Token(Token = "0x4000D1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public GameObject BonusVeryPowerful;

		[Token(Token = "0x6000D21")]
		[Address(RVA = "0x11E0CCC", Offset = "0x11E0CCC", VA = "0x11E0CCC", Slot = "4")]
		public override void UpdateDisplay()
		{
		}

		[Token(Token = "0x6000D22")]
		[Address(RVA = "0x11E1148", Offset = "0x11E1148", VA = "0x11E1148")]
		public ChallengeMatchDisplay()
		{
		}
	}
	[Token(Token = "0x2000293")]
	public class CheckForMatch : MonoBehaviour
	{
		[Token(Token = "0x4000D1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public StringVariable CurrentMenu;

		[Token(Token = "0x4000D1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public StringVariable LeagueMenu;

		[Token(Token = "0x4000D20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public StringVariable ChallengeMenu;

		[Token(Token = "0x6000D23")]
		[Address(RVA = "0x11E7AA8", Offset = "0x11E7AA8", VA = "0x11E7AA8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000D24")]
		[Address(RVA = "0x11E7D04", Offset = "0x11E7D04", VA = "0x11E7D04")]
		public CheckForMatch()
		{
		}
	}
	[Token(Token = "0x2000294")]
	public class ForLeague : MonoBehaviour
	{
		[Token(Token = "0x4000D21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public League league;

		[Token(Token = "0x6000D25")]
		[Address(RVA = "0xC6B030", Offset = "0xC6B030", VA = "0xC6B030")]
		public ForLeague()
		{
		}
	}
	[Token(Token = "0x2000295")]
	public class ForLeagueDisplay : MonoBehaviour
	{
		[Token(Token = "0x4000D22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected List<ForLeague> forLeagues;

		[Token(Token = "0x6000D26")]
		[Address(RVA = "0xC6B038", Offset = "0xC6B038", VA = "0xC6B038")]
		private void Start()
		{
		}

		[Token(Token = "0x6000D27")]
		[Address(RVA = "0xC6B284", Offset = "0xC6B284", VA = "0xC6B284")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000D28")]
		[Address(RVA = "0xC6B0C0", Offset = "0xC6B0C0", VA = "0xC6B0C0")]
		public void UpdateDisplay()
		{
		}

		[Token(Token = "0x6000D29")]
		[Address(RVA = "0xC6B288", Offset = "0xC6B288", VA = "0xC6B288")]
		public ForLeagueDisplay()
		{
		}
	}
	[Token(Token = "0x2000296")]
	public class LeaderboardDisplay : MonoBehaviour
	{
		[Token(Token = "0x4000D23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected League league;

		[Token(Token = "0x4000D24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool UsePlayerLeague;

		[Token(Token = "0x4000D25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PlayerDisplayer DronePrefab;

		[Token(Token = "0x4000D26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public PlayerDisplayer PlayerPrefab;

		[Token(Token = "0x170001A2")]
		public League League
		{
			[Token(Token = "0x6000D2A")]
			[Address(RVA = "0xBCBC04", Offset = "0xBCBC04", VA = "0xBCBC04")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D2B")]
			[Address(RVA = "0xBCBC0C", Offset = "0xBCBC0C", VA = "0xBCBC0C")]
			set
			{
			}
		}

		[Token(Token = "0x6000D2C")]
		[Address(RVA = "0xBCC09C", Offset = "0xBCC09C", VA = "0xBCC09C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000D2D")]
		[Address(RVA = "0xBCC100", Offset = "0xBCC100", VA = "0xBCC100")]
		private void Update()
		{
		}

		[Token(Token = "0x6000D2E")]
		[Address(RVA = "0xBCC1E4", Offset = "0xBCC1E4", VA = "0xBCC1E4")]
		protected void Clear()
		{
		}

		[Token(Token = "0x6000D2F")]
		[Address(RVA = "0xBCBE54", Offset = "0xBCBE54", VA = "0xBCBE54")]
		protected void FillPlayerList()
		{
		}

		[Token(Token = "0x6000D30")]
		[Address(RVA = "0xBCC320", Offset = "0xBCC320", VA = "0xBCC320")]
		protected void UpdateDisplay()
		{
		}

		[Token(Token = "0x6000D31")]
		[Address(RVA = "0xBCC88C", Offset = "0xBCC88C", VA = "0xBCC88C")]
		public LeaderboardDisplay()
		{
		}
	}
	[Token(Token = "0x2000297")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x7707E4", Offset = "0x7707E4")]
	public class League : PersistentData
	{
		[Serializable]
		[Token(Token = "0x2000298")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7707F4", Offset = "0x7707F4")]
		private sealed class <>c
		{
			[Token(Token = "0x4000D3C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000D3D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Comparison<LeaguePlayer> <>9__49_0;

			[Token(Token = "0x4000D3E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Predicate<LeagueMatch> <>9__55_0;

			[Token(Token = "0x4000D3F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Predicate<LeagueMatch> <>9__57_0;

			[Token(Token = "0x4000D40")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Predicate<LeagueMatch> <>9__59_0;

			[Token(Token = "0x4000D41")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public static Predicate<LeagueMatch> <>9__61_0;

			[Token(Token = "0x6000D4E")]
			[Address(RVA = "0xB2C5A0", Offset = "0xB2C5A0", VA = "0xB2C5A0")]
			public <>c()
			{
			}

			[Token(Token = "0x6000D4F")]
			[Address(RVA = "0xB2C5A8", Offset = "0xB2C5A8", VA = "0xB2C5A8")]
			internal int <get_BestPlayers>b__49_0(LeaguePlayer a, LeaguePlayer b)
			{
				return default(int);
			}

			[Token(Token = "0x6000D50")]
			[Address(RVA = "0xB2C618", Offset = "0xB2C618", VA = "0xB2C618")]
			internal bool <ForfeitSeason>b__55_0(LeagueMatch m)
			{
				return default(bool);
			}

			[Token(Token = "0x6000D51")]
			[Address(RVA = "0xB2C634", Offset = "0xB2C634", VA = "0xB2C634")]
			internal bool <get_NumPlayerMatches>b__57_0(LeagueMatch m)
			{
				return default(bool);
			}

			[Token(Token = "0x6000D52")]
			[Address(RVA = "0xB2C650", Offset = "0xB2C650", VA = "0xB2C650")]
			internal bool <get_PlayedMatches>b__59_0(LeagueMatch m)
			{
				return default(bool);
			}

			[Token(Token = "0x6000D53")]
			[Address(RVA = "0xB2C668", Offset = "0xB2C668", VA = "0xB2C668")]
			internal bool <get_UnPlayedMatches>b__61_0(LeagueMatch m)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000299")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x770804", Offset = "0x770804")]
		private sealed class <>c__DisplayClass52_0
		{
			[Token(Token = "0x4000D42")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool withPlayer;

			[Token(Token = "0x6000D54")]
			[Address(RVA = "0xB2C688", Offset = "0xB2C688", VA = "0xB2C688")]
			public <>c__DisplayClass52_0()
			{
			}

			[Token(Token = "0x6000D55")]
			[Address(RVA = "0xB2C690", Offset = "0xB2C690", VA = "0xB2C690")]
			internal bool <SelectUnplayedMatch>b__0(LeagueMatch m)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x200029A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x770814", Offset = "0x770814")]
		private sealed class <CompleteMatches>d__54 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000D43")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000D44")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000D45")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public League <>4__this;

			[Token(Token = "0x4000D46")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int untilPlayed;

			[Token(Token = "0x4000D47")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public bool withPlayer;

			[Token(Token = "0x170001B3")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000D59")]
				[Address(RVA = "0xB2C810", Offset = "0xB2C810", VA = "0xB2C810", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001B4")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000D5B")]
				[Address(RVA = "0xB2C858", Offset = "0xB2C858", VA = "0xB2C858", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000D56")]
			[Address(RVA = "0xB2C6E4", Offset = "0xB2C6E4", VA = "0xB2C6E4")]
			[DebuggerHidden]
			public <CompleteMatches>d__54(int <>1__state)
			{
			}

			[Token(Token = "0x6000D57")]
			[Address(RVA = "0xB2C710", Offset = "0xB2C710", VA = "0xB2C710", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000D58")]
			[Address(RVA = "0xB2C714", Offset = "0xB2C714", VA = "0xB2C714", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000D5A")]
			[Address(RVA = "0xB2C818", Offset = "0xB2C818", VA = "0xB2C818", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000D27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected string leagueName;

		[Token(Token = "0x4000D28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected int rounds;

		[Token(Token = "0x4000D29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		protected int blocks;

		[Token(Token = "0x4000D2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		protected int score;

		[Token(Token = "0x4000D2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		protected int awardPerWin;

		[Token(Token = "0x4000D2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		protected int awardForChampion;

		[Token(Token = "0x4000D2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		protected int xpForChampion;

		[Token(Token = "0x4000D2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		protected int awardForPromoted;

		[Token(Token = "0x4000D2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		protected int xpForPromoted;

		[Token(Token = "0x4000D30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		protected bool done;

		[Token(Token = "0x4000D31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Dictionary<string, LeaguePlayer> players;

		[Token(Token = "0x4000D32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public List<LeagueMatch> matches;

		[Token(Token = "0x4000D33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public UnityEvent<LeagueMatch> OnStartMatch;

		[Token(Token = "0x4000D34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public bool AllowSimulations;

		[Token(Token = "0x4000D35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		protected bool IsSimulating;

		[Token(Token = "0x4000D36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Award winnerAward;

		[Token(Token = "0x4000D37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Award promotionAward;

		[Token(Token = "0x4000D38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public ArenaList arenas;

		[Token(Token = "0x4000D39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public UnityEvent OnStartSeason;

		[Token(Token = "0x4000D3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public UnityEvent OnUpdate;

		[Token(Token = "0x4000D3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public UnityEvent OnDone;

		[Token(Token = "0x170001A3")]
		public string LeagueName
		{
			[Token(Token = "0x6000D32")]
			[Address(RVA = "0xBCCC00", Offset = "0xBCCC00", VA = "0xBCCC00")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A4")]
		public int Rounds
		{
			[Token(Token = "0x6000D33")]
			[Address(RVA = "0xBCCC08", Offset = "0xBCCC08", VA = "0xBCCC08")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001A5")]
		public int Blocks
		{
			[Token(Token = "0x6000D34")]
			[Address(RVA = "0xBCCC10", Offset = "0xBCCC10", VA = "0xBCCC10")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001A6")]
		public int Score
		{
			[Token(Token = "0x6000D35")]
			[Address(RVA = "0xBCCC18", Offset = "0xBCCC18", VA = "0xBCCC18")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001A7")]
		public int AwardPerWin
		{
			[Token(Token = "0x6000D36")]
			[Address(RVA = "0xBCCC20", Offset = "0xBCCC20", VA = "0xBCCC20")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001A8")]
		public int AwardForChampion
		{
			[Token(Token = "0x6000D37")]
			[Address(RVA = "0xBCCC28", Offset = "0xBCCC28", VA = "0xBCCC28")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001A9")]
		public int XPForChampion
		{
			[Token(Token = "0x6000D38")]
			[Address(RVA = "0xBCCC30", Offset = "0xBCCC30", VA = "0xBCCC30")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001AA")]
		public int AwardForPromoted
		{
			[Token(Token = "0x6000D39")]
			[Address(RVA = "0xBCCC38", Offset = "0xBCCC38", VA = "0xBCCC38")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001AB")]
		public int XPForPromoted
		{
			[Token(Token = "0x6000D3A")]
			[Address(RVA = "0xBCCC40", Offset = "0xBCCC40", VA = "0xBCCC40")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001AC")]
		public bool Done
		{
			[Token(Token = "0x6000D3B")]
			[Address(RVA = "0xBCCC48", Offset = "0xBCCC48", VA = "0xBCCC48")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001AD")]
		public override JSONNode json
		{
			[Token(Token = "0x6000D3C")]
			[Address(RVA = "0xBCCC50", Offset = "0xBCCC50", VA = "0xBCCC50", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001AE")]
		public List<LeaguePlayer> BestPlayers
		{
			[Token(Token = "0x6000D42")]
			[Address(RVA = "0xBCE228", Offset = "0xBCE228", VA = "0xBCE228")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001AF")]
		public Dictionary<string, int> Leaderboard
		{
			[Token(Token = "0x6000D43")]
			[Address(RVA = "0xBCC6E8", Offset = "0xBCC6E8", VA = "0xBCC6E8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B0")]
		public int NumPlayerMatches
		{
			[Token(Token = "0x6000D48")]
			[Address(RVA = "0xBCEA38", Offset = "0xBCEA38", VA = "0xBCEA38")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001B1")]
		public int PlayedMatches
		{
			[Token(Token = "0x6000D49")]
			[Address(RVA = "0xBCEB74", Offset = "0xBCEB74", VA = "0xBCEB74")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001B2")]
		public int UnPlayedMatches
		{
			[Token(Token = "0x6000D4A")]
			[Address(RVA = "0xBCDC7C", Offset = "0xBCDC7C", VA = "0xBCDC7C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6000D3D")]
		[Address(RVA = "0xBCD118", Offset = "0xBCD118", VA = "0xBCD118", Slot = "5")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6000D3E")]
		[Address(RVA = "0xBCD120", Offset = "0xBCD120", VA = "0xBCD120", Slot = "6")]
		public override void Reset()
		{
		}

		[Token(Token = "0x6000D3F")]
		[Address(RVA = "0xBCD1C0", Offset = "0xBCD1C0", VA = "0xBCD1C0")]
		public void ResetFrom(string newName, int newRounds, List<LeaguePlayer> newPlayers)
		{
		}

		[Token(Token = "0x6000D40")]
		[Address(RVA = "0xBCD840", Offset = "0xBCD840", VA = "0xBCD840", Slot = "7")]
		public override void Init(JSONNode j)
		{
		}

		[Token(Token = "0x6000D41")]
		[Address(RVA = "0xBCD3E0", Offset = "0xBCD3E0", VA = "0xBCD3E0")]
		public void StartNewSeason()
		{
		}

		[Token(Token = "0x6000D44")]
		[Address(RVA = "0xBCE3BC", Offset = "0xBCE3BC", VA = "0xBCE3BC")]
		public LeagueMatch SelectUnplayedMatch(bool withPlayer)
		{
			return null;
		}

		[Token(Token = "0x6000D45")]
		[Address(RVA = "0xBCE514", Offset = "0xBCE514", VA = "0xBCE514")]
		public void SimulateMatches(int num, bool withPlayer = false)
		{
		}

		[Token(Token = "0x6000D46")]
		[Address(RVA = "0xBCE750", Offset = "0xBCE750", VA = "0xBCE750")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x777268", Offset = "0x777268")]
		public IEnumerator CompleteMatches(int untilPlayed = -1, bool withPlayer = false)
		{
			return null;
		}

		[Token(Token = "0x6000D47")]
		[Address(RVA = "0xBCE7D8", Offset = "0xBCE7D8", VA = "0xBCE7D8")]
		public void ForfeitSeason()
		{
		}

		[Token(Token = "0x6000D4B")]
		[Address(RVA = "0xBCDDB8", Offset = "0xBCDDB8", VA = "0xBCDDB8")]
		public void UpdateLeague()
		{
		}

		[Token(Token = "0x6000D4C")]
		[Address(RVA = "0xBCEDA4", Offset = "0xBCEDA4", VA = "0xBCEDA4")]
		public League()
		{
		}
	}
	[Token(Token = "0x200029B")]
	public class LeagueDisplay : MonoBehaviour
	{
		[Token(Token = "0x4000D48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected League league;

		[Token(Token = "0x4000D49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool UsePlayerLeague;

		[Token(Token = "0x4000D4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UIText leagueName;

		[Token(Token = "0x4000D4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public LeaderboardDisplay leaderboard;

		[Token(Token = "0x4000D4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public LeaguePlayerMatchDisplay nextMatch;

		[Token(Token = "0x4000D4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public LeagueMatchDescriber nextMatchDescriber;

		[Token(Token = "0x4000D4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public MatchSimulator simulator;

		[Token(Token = "0x4000D4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public GameObject seasonOver;

		[Token(Token = "0x4000D50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public List<GameObject> hideOnSeasonOver;

		[Token(Token = "0x170001B5")]
		public League League
		{
			[Token(Token = "0x6000D5C")]
			[Address(RVA = "0xBCEE84", Offset = "0xBCEE84", VA = "0xBCEE84")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D5D")]
			[Address(RVA = "0xBCEE8C", Offset = "0xBCEE8C", VA = "0xBCEE8C")]
			set
			{
			}
		}

		[Token(Token = "0x6000D5E")]
		[Address(RVA = "0xBCF750", Offset = "0xBCF750", VA = "0xBCF750")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000D5F")]
		[Address(RVA = "0xBCF87C", Offset = "0xBCF87C", VA = "0xBCF87C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000D60")]
		[Address(RVA = "0xBCF970", Offset = "0xBCF970", VA = "0xBCF970")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000D61")]
		[Address(RVA = "0xBCF07C", Offset = "0xBCF07C", VA = "0xBCF07C")]
		public void UpdateDisplay()
		{
		}

		[Token(Token = "0x6000D62")]
		[Address(RVA = "0xBCFAA8", Offset = "0xBCFAA8", VA = "0xBCFAA8")]
		public LeagueDisplay()
		{
		}
	}
	[Token(Token = "0x200029C")]
	public class LeagueManager : DataManager<LeagueManager>
	{
		[Serializable]
		[Token(Token = "0x200029D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x770824", Offset = "0x770824")]
		private sealed class <>c
		{
			[Token(Token = "0x4000D58")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000D59")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action<League> <>9__19_0;

			[Token(Token = "0x6000D76")]
			[Address(RVA = "0xB2C8C0", Offset = "0xB2C8C0", VA = "0xB2C8C0")]
			public <>c()
			{
			}

			[Token(Token = "0x6000D77")]
			[Address(RVA = "0xB2C8C8", Offset = "0xB2C8C8", VA = "0xB2C8C8")]
			internal void <StartSeason>b__19_0(League league)
			{
			}
		}

		[Token(Token = "0x4000D51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		protected int teamsToRelegate;

		[Token(Token = "0x4000D52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public List<League> leagues;

		[Token(Token = "0x4000D53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected static League playerLeague;

		[Token(Token = "0x4000D54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		protected static LeagueMatch playerMatch;

		[Token(Token = "0x4000D55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public DroneList droneList;

		[Token(Token = "0x4000D56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public KeyValueList ownedAwardsList;

		[Token(Token = "0x4000D57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public IntVariable playerCoins;

		[Token(Token = "0x170001B6")]
		public int TeamsToRelegate
		{
			[Token(Token = "0x6000D63")]
			[Address(RVA = "0xBCFAB0", Offset = "0xBCFAB0", VA = "0xBCFAB0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001B7")]
		public static League PlayerLeague
		{
			[Token(Token = "0x6000D64")]
			[Address(RVA = "0xBCFAB8", Offset = "0xBCFAB8", VA = "0xBCFAB8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B8")]
		public static LeagueMatch PlayerMatch
		{
			[Token(Token = "0x6000D65")]
			[Address(RVA = "0xBCFB04", Offset = "0xBCFB04", VA = "0xBCFB04")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D66")]
		[Address(RVA = "0xBCFB50", Offset = "0xBCFB50", VA = "0xBCFB50", Slot = "6")]
		protected override void Ready()
		{
		}

		[Token(Token = "0x6000D67")]
		[Address(RVA = "0xBD01C8", Offset = "0xBD01C8", VA = "0xBD01C8", Slot = "5")]
		protected override void Update()
		{
		}

		[Token(Token = "0x6000D68")]
		[Address(RVA = "0xBD07B8", Offset = "0xBD07B8", VA = "0xBD07B8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000D69")]
		[Address(RVA = "0xBD0060", Offset = "0xBD0060", VA = "0xBD0060")]
		public LeagueMatch NextMatch()
		{
			return null;
		}

		[Token(Token = "0x6000D6A")]
		[Address(RVA = "0xBCFC40", Offset = "0xBCFC40", VA = "0xBCFC40")]
		protected void EnsureLeagues()
		{
		}

		[Token(Token = "0x6000D6B")]
		[Address(RVA = "0xBCFCE4", Offset = "0xBCFCE4", VA = "0xBCFCE4")]
		protected void FindPlayerLeague()
		{
		}

		[Token(Token = "0x6000D6C")]
		[Address(RVA = "0xBD08CC", Offset = "0xBD08CC", VA = "0xBD08CC")]
		public void StartSeason()
		{
		}

		[Token(Token = "0x6000D6D")]
		[Address(RVA = "0xBD0320", Offset = "0xBD0320", VA = "0xBD0320")]
		public void CatchUpToPlayer()
		{
		}

		[Token(Token = "0x6000D6E")]
		[Address(RVA = "0xBD0A18", Offset = "0xBD0A18", VA = "0xBD0A18")]
		public void CompleteSeason()
		{
		}

		[Token(Token = "0x6000D6F")]
		[Address(RVA = "0xBD0B54", Offset = "0xBD0B54", VA = "0xBD0B54")]
		public void ForfeitSeason()
		{
		}

		[Token(Token = "0x6000D70")]
		[Address(RVA = "0xBD0BB4", Offset = "0xBD0BB4", VA = "0xBD0BB4")]
		public void MovePlayers()
		{
		}

		[Token(Token = "0x6000D71")]
		[Address(RVA = "0xBD10F0", Offset = "0xBD10F0", VA = "0xBD10F0")]
		protected void AwardTrophies()
		{
		}

		[Token(Token = "0x6000D72")]
		[Address(RVA = "0xBD1530", Offset = "0xBD1530", VA = "0xBD1530")]
		public League nextLeague(League league)
		{
			return null;
		}

		[Token(Token = "0x6000D73")]
		[Address(RVA = "0xBD15F0", Offset = "0xBD15F0", VA = "0xBD15F0")]
		public League prevLeague(League league)
		{
			return null;
		}

		[Token(Token = "0x6000D74")]
		[Address(RVA = "0xBD1698", Offset = "0xBD1698", VA = "0xBD1698")]
		public LeagueManager()
		{
		}
	}
	[Token(Token = "0x200029E")]
	public class LeagueManagerReference : MonoBehaviour
	{
		[Token(Token = "0x6000D78")]
		[Address(RVA = "0xBD1758", Offset = "0xBD1758", VA = "0xBD1758")]
		public void NextMatch()
		{
		}

		[Token(Token = "0x6000D79")]
		[Address(RVA = "0xBD17D4", Offset = "0xBD17D4", VA = "0xBD17D4")]
		public void StartSeason()
		{
		}

		[Token(Token = "0x6000D7A")]
		[Address(RVA = "0xBD1860", Offset = "0xBD1860", VA = "0xBD1860")]
		public void CatchUpToPlayer()
		{
		}

		[Token(Token = "0x6000D7B")]
		[Address(RVA = "0xBD18DC", Offset = "0xBD18DC", VA = "0xBD18DC")]
		public void CompleteSeason()
		{
		}

		[Token(Token = "0x6000D7C")]
		[Address(RVA = "0xBD1958", Offset = "0xBD1958", VA = "0xBD1958")]
		public void WinNextMatch()
		{
		}

		[Token(Token = "0x6000D7D")]
		[Address(RVA = "0xBD1AA4", Offset = "0xBD1AA4", VA = "0xBD1AA4")]
		public void LoseNextMatch()
		{
		}

		[Token(Token = "0x6000D7E")]
		[Address(RVA = "0xBD1BF0", Offset = "0xBD1BF0", VA = "0xBD1BF0")]
		public void ForfeitSeason()
		{
		}

		[Token(Token = "0x6000D7F")]
		[Address(RVA = "0xBD1C6C", Offset = "0xBD1C6C", VA = "0xBD1C6C")]
		public LeagueManagerReference()
		{
		}
	}
	[Token(Token = "0x200029F")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x770834", Offset = "0x770834")]
	public class LeagueMatch : Match
	{
		[Token(Token = "0x4000D5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		protected League league;

		[Token(Token = "0x170001B9")]
		public League League
		{
			[Token(Token = "0x6000D80")]
			[Address(RVA = "0xBD1C74", Offset = "0xBD1C74", VA = "0xBD1C74")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D81")]
			[Address(RVA = "0xBD1C7C", Offset = "0xBD1C7C", VA = "0xBD1C7C")]
			set
			{
			}
		}

		[Token(Token = "0x170001BA")]
		public override MatchType Type
		{
			[Token(Token = "0x6000D82")]
			[Address(RVA = "0xBD1C84", Offset = "0xBD1C84", VA = "0xBD1C84", Slot = "8")]
			get
			{
				return default(MatchType);
			}
		}

		[Token(Token = "0x6000D83")]
		[Address(RVA = "0xBCDBF0", Offset = "0xBCDBF0", VA = "0xBCDBF0")]
		public static LeagueMatch create(League l, JSONNode j)
		{
			return null;
		}

		[Token(Token = "0x6000D84")]
		[Address(RVA = "0xBCE17C", Offset = "0xBCE17C", VA = "0xBCE17C")]
		public static LeagueMatch create(League l, string a, string b, string arena)
		{
			return null;
		}

		[Token(Token = "0x6000D85")]
		[Address(RVA = "0xBD1C8C", Offset = "0xBD1C8C", VA = "0xBD1C8C", Slot = "6")]
		public override void Reset()
		{
		}

		[Token(Token = "0x6000D86")]
		[Address(RVA = "0xBCE614", Offset = "0xBCE614", VA = "0xBCE614")]
		public void SimulateStep(League league)
		{
		}

		[Token(Token = "0x6000D87")]
		[Address(RVA = "0xBD1D68", Offset = "0xBD1D68", VA = "0xBD1D68")]
		public LeagueMatch()
		{
		}
	}
	[Token(Token = "0x20002A0")]
	public class LeagueMatchDisplay : MatchDisplay
	{
		[Token(Token = "0x4000D5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public UIText playerARecord;

		[Token(Token = "0x4000D5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public UIText playerBRecord;

		[Token(Token = "0x4000D5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected League league;

		[Token(Token = "0x170001BB")]
		public League League
		{
			[Token(Token = "0x6000D88")]
			[Address(RVA = "0xBD22CC", Offset = "0xBD22CC", VA = "0xBD22CC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D89")]
			[Address(RVA = "0xBD22D4", Offset = "0xBD22D4", VA = "0xBD22D4")]
			set
			{
			}
		}

		[Token(Token = "0x6000D8A")]
		[Address(RVA = "0xBD22DC", Offset = "0xBD22DC", VA = "0xBD22DC", Slot = "4")]
		public override void UpdateDisplay()
		{
		}

		[Token(Token = "0x6000D8B")]
		[Address(RVA = "0xBD2834", Offset = "0xBD2834", VA = "0xBD2834")]
		public LeagueMatchDisplay()
		{
		}
	}
	[Token(Token = "0x20002A1")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x770844", Offset = "0x770844")]
	public class LeaguePlayer : PersistentData
	{
		[Token(Token = "0x4000D5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected string uid;

		[Token(Token = "0x4000D5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected int wins;

		[Token(Token = "0x4000D60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		protected int loses;

		[Token(Token = "0x4000D61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected int pointsFor;

		[Token(Token = "0x4000D62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		protected int pointsAgainst;

		[Token(Token = "0x4000D63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float simStrength;

		[Token(Token = "0x170001BC")]
		public string UID
		{
			[Token(Token = "0x6000D8C")]
			[Address(RVA = "0xBD283C", Offset = "0xBD283C", VA = "0xBD283C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001BD")]
		public int Wins
		{
			[Token(Token = "0x6000D8D")]
			[Address(RVA = "0xBD2844", Offset = "0xBD2844", VA = "0xBD2844")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001BE")]
		public int Loses
		{
			[Token(Token = "0x6000D8E")]
			[Address(RVA = "0xBD284C", Offset = "0xBD284C", VA = "0xBD284C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001BF")]
		public int PointsFor
		{
			[Token(Token = "0x6000D8F")]
			[Address(RVA = "0xBD2854", Offset = "0xBD2854", VA = "0xBD2854")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001C0")]
		public int PointsAgainst
		{
			[Token(Token = "0x6000D90")]
			[Address(RVA = "0xBD285C", Offset = "0xBD285C", VA = "0xBD285C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001C1")]
		public float SimStrength
		{
			[Token(Token = "0x6000D91")]
			[Address(RVA = "0xBD2864", Offset = "0xBD2864", VA = "0xBD2864")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001C2")]
		public bool IsPlayer
		{
			[Token(Token = "0x6000D92")]
			[Address(RVA = "0xBCC2D0", Offset = "0xBCC2D0", VA = "0xBCC2D0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001C3")]
		public override JSONNode json
		{
			[Token(Token = "0x6000D93")]
			[Address(RVA = "0xBD286C", Offset = "0xBD286C", VA = "0xBD286C", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D94")]
		[Address(RVA = "0xBCD374", Offset = "0xBCD374", VA = "0xBCD374")]
		public static LeaguePlayer create(JSONNode j)
		{
			return null;
		}

		[Token(Token = "0x6000D95")]
		[Address(RVA = "0xBD2A58", Offset = "0xBD2A58", VA = "0xBD2A58", Slot = "5")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6000D96")]
		[Address(RVA = "0xBD2A5C", Offset = "0xBD2A5C", VA = "0xBD2A5C", Slot = "6")]
		public override void Reset()
		{
		}

		[Token(Token = "0x6000D97")]
		[Address(RVA = "0xBD2A64", Offset = "0xBD2A64", VA = "0xBD2A64", Slot = "7")]
		public override void Init(JSONNode j)
		{
		}

		[Token(Token = "0x6000D98")]
		[Address(RVA = "0xBCECB0", Offset = "0xBCECB0", VA = "0xBCECB0")]
		public void UpdateFromMatch(LeagueMatch m)
		{
		}

		[Token(Token = "0x6000D99")]
		[Address(RVA = "0xBD2C24", Offset = "0xBD2C24", VA = "0xBD2C24")]
		public LeaguePlayer()
		{
		}
	}
	[Token(Token = "0x20002A2")]
	public class LeaguePlayerMatchDisplay : PlayerMatchDisplay
	{
		[Token(Token = "0x4000D64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public UIText playerRecord;

		[Token(Token = "0x4000D65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public UIText droneRecord;

		[Token(Token = "0x4000D66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		protected League league;

		[Token(Token = "0x170001C4")]
		public League League
		{
			[Token(Token = "0x6000D9A")]
			[Address(RVA = "0xBD2C34", Offset = "0xBD2C34", VA = "0xBD2C34")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D9B")]
			[Address(RVA = "0xBD2C3C", Offset = "0xBD2C3C", VA = "0xBD2C3C")]
			set
			{
			}
		}

		[Token(Token = "0x6000D9C")]
		[Address(RVA = "0xBD2C44", Offset = "0xBD2C44", VA = "0xBD2C44", Slot = "4")]
		public override void UpdateDisplay()
		{
		}

		[Token(Token = "0x6000D9D")]
		[Address(RVA = "0xBD3208", Offset = "0xBD3208", VA = "0xBD3208")]
		public LeaguePlayerMatchDisplay()
		{
		}
	}
	[Token(Token = "0x20002A3")]
	public class MatchListDisplay : MonoBehaviour
	{
		[Token(Token = "0x4000D67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected League league;

		[Token(Token = "0x4000D68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool UsePlayerLeague;

		[Token(Token = "0x4000D69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LeagueMatchDisplay MatchResultsPrefab;

		[Token(Token = "0x4000D6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool AutoSimulate;

		[Token(Token = "0x4000D6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected List<Match> currentMatches;

		[Token(Token = "0x170001C5")]
		public League League
		{
			[Token(Token = "0x6000D9E")]
			[Address(RVA = "0xE518F4", Offset = "0xE518F4", VA = "0xE518F4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D9F")]
			[Address(RVA = "0xE518FC", Offset = "0xE518FC", VA = "0xE518FC")]
			set
			{
			}
		}

		[Token(Token = "0x6000DA0")]
		[Address(RVA = "0xE51BC0", Offset = "0xE51BC0", VA = "0xE51BC0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000DA1")]
		[Address(RVA = "0xE51AD4", Offset = "0xE51AD4", VA = "0xE51AD4")]
		protected void Clear()
		{
		}

		[Token(Token = "0x6000DA2")]
		[Address(RVA = "0xE51C24", Offset = "0xE51C24", VA = "0xE51C24")]
		protected void AddMatch(LeagueMatch m)
		{
		}

		[Token(Token = "0x6000DA3")]
		[Address(RVA = "0xE51E2C", Offset = "0xE51E2C", VA = "0xE51E2C")]
		public MatchListDisplay()
		{
		}
	}
	[Token(Token = "0x20002A4")]
	public class MatchStatsDisplay : MonoBehaviour
	{
		[Token(Token = "0x4000D6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MatchStats stats;

		[Token(Token = "0x4000D6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UIText Seconds;

		[Token(Token = "0x4000D6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UIText TotalHits;

		[Token(Token = "0x4000D6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public UIText LeftHits;

		[Token(Token = "0x4000D70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public UIText RightHits;

		[Token(Token = "0x4000D71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public UIText PowerUpsUsed;

		[Token(Token = "0x4000D72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public List<UIText> BlocksHit;

		[Token(Token = "0x4000D73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public List<UIText> BlocksScored;

		[Token(Token = "0x4000D74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public List<UIText> BlocksOpponentScored;

		[Token(Token = "0x6000DA4")]
		[Address(RVA = "0xE57D94", Offset = "0xE57D94", VA = "0xE57D94")]
		private void Update()
		{
		}

		[Token(Token = "0x6000DA5")]
		[Address(RVA = "0xE57DA0", Offset = "0xE57DA0", VA = "0xE57DA0", Slot = "4")]
		public virtual void UpdateDisplay()
		{
		}

		[Token(Token = "0x6000DA6")]
		[Address(RVA = "0xE5841C", Offset = "0xE5841C", VA = "0xE5841C")]
		public MatchStatsDisplay()
		{
		}
	}
	[Token(Token = "0x20002A5")]
	public class PlayerDisplayer : MonoBehaviour
	{
		[Token(Token = "0x4000D75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected LeaguePlayer player;

		[Token(Token = "0x4000D76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UIText playerName;

		[Token(Token = "0x4000D77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UIText playerWins;

		[Token(Token = "0x4000D78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public UIText playerLoses;

		[Token(Token = "0x4000D79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public UIText playerRecord;

		[Token(Token = "0x4000D7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public UIText playerPointsFor;

		[Token(Token = "0x4000D7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public UIText playerPointsAgainst;

		[Token(Token = "0x4000D7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public UIText playerPointDifference;

		[Token(Token = "0x4000D7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public UIText playerGamesRemaining;

		[Token(Token = "0x4000D7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public GameObject WillPromoteObject;

		[Token(Token = "0x4000D7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public GameObject WillRelegateObject;

		[Token(Token = "0x4000D80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected int rank;

		[Token(Token = "0x4000D81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public bool WillPromote;

		[Token(Token = "0x4000D82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x75")]
		public bool WillRelegate;

		[Token(Token = "0x170001C6")]
		public LeaguePlayer Player
		{
			[Token(Token = "0x6000DA7")]
			[Address(RVA = "0xC46EFC", Offset = "0xC46EFC", VA = "0xC46EFC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000DA8")]
			[Address(RVA = "0xC46F04", Offset = "0xC46F04", VA = "0xC46F04")]
			set
			{
			}
		}

		[Token(Token = "0x170001C7")]
		public int Rank
		{
			[Token(Token = "0x6000DA9")]
			[Address(RVA = "0xC4734C", Offset = "0xC4734C", VA = "0xC4734C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000DAA")]
			[Address(RVA = "0xC47354", Offset = "0xC47354", VA = "0xC47354")]
			set
			{
			}
		}

		[Token(Token = "0x6000DAB")]
		[Address(RVA = "0xC4740C", Offset = "0xC4740C", VA = "0xC4740C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000DAC")]
		[Address(RVA = "0xC46F0C", Offset = "0xC46F0C", VA = "0xC46F0C")]
		public void UpdateDisplay()
		{
		}

		[Token(Token = "0x6000DAD")]
		[Address(RVA = "0xC47410", Offset = "0xC47410", VA = "0xC47410")]
		public PlayerDisplayer()
		{
		}
	}
	[Token(Token = "0x20002A6")]
	public class SeasonOverDisplay : MonoBehaviour
	{
		[Token(Token = "0x4000D83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UIText NextSeasonStatus;

		[Token(Token = "0x4000D84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject Relegated;

		[Token(Token = "0x4000D85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject NoMovement;

		[Token(Token = "0x4000D86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<GameObject> CoinDisplay;

		[Token(Token = "0x4000D87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public UIText CoinAmount;

		[Token(Token = "0x4000D88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public List<GameObject> XPDisplay;

		[Token(Token = "0x4000D89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public UIText XPAmount;

		[Token(Token = "0x6000DAE")]
		[Address(RVA = "0xB797E0", Offset = "0xB797E0", VA = "0xB797E0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000DAF")]
		[Address(RVA = "0xB797E4", Offset = "0xB797E4", VA = "0xB797E4")]
		public void UpdateDisplay()
		{
		}

		[Token(Token = "0x6000DB0")]
		[Address(RVA = "0xB7A06C", Offset = "0xB7A06C", VA = "0xB7A06C")]
		protected void DisplayWinner(League league)
		{
		}

		[Token(Token = "0x6000DB1")]
		[Address(RVA = "0xB7A264", Offset = "0xB7A264", VA = "0xB7A264")]
		protected void DisplayPromoted(League league)
		{
		}

		[Token(Token = "0x6000DB2")]
		[Address(RVA = "0xB7A45C", Offset = "0xB7A45C", VA = "0xB7A45C")]
		protected void ShowCoins(int amount)
		{
		}

		[Token(Token = "0x6000DB3")]
		[Address(RVA = "0xB7A5DC", Offset = "0xB7A5DC", VA = "0xB7A5DC")]
		protected void ShowXP(int amount)
		{
		}

		[Token(Token = "0x6000DB4")]
		[Address(RVA = "0xB7A75C", Offset = "0xB7A75C", VA = "0xB7A75C")]
		public SeasonOverDisplay()
		{
		}
	}
	[Token(Token = "0x20002A7")]
	public class SetPlayerMatch : MonoBehaviour
	{
		[Token(Token = "0x4000D8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool NextMatch;

		[Token(Token = "0x4000D8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool AutoSimulate;

		[Token(Token = "0x4000D8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		public bool CatchUpToPlayer;

		[Token(Token = "0x6000DB5")]
		[Address(RVA = "0xB7B0A8", Offset = "0xB7B0A8", VA = "0xB7B0A8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000DB6")]
		[Address(RVA = "0xB7B0B0", Offset = "0xB7B0B0", VA = "0xB7B0B0")]
		public void UpdateMatch(bool next = false)
		{
		}

		[Token(Token = "0x6000DB7")]
		[Address(RVA = "0xB7B36C", Offset = "0xB7B36C", VA = "0xB7B36C")]
		public SetPlayerMatch()
		{
		}
	}
	[Token(Token = "0x20002A8")]
	public class LoadForDroneStore : MonoBehaviour
	{
		[Token(Token = "0x4000D8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public KeyValueList availableDrones;

		[Token(Token = "0x4000D8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected bool tryToLoad;

		[Token(Token = "0x4000D8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		protected bool didLoad;

		[Token(Token = "0x6000DB8")]
		[Address(RVA = "0xBD3ED8", Offset = "0xBD3ED8", VA = "0xBD3ED8")]
		public void LoadDrones()
		{
		}

		[Token(Token = "0x6000DB9")]
		[Address(RVA = "0xBD3F14", Offset = "0xBD3F14", VA = "0xBD3F14")]
		private void Update()
		{
		}

		[Token(Token = "0x6000DBA")]
		[Address(RVA = "0xBD3FF0", Offset = "0xBD3FF0", VA = "0xBD3FF0")]
		public LoadForDroneStore()
		{
		}

		[Token(Token = "0x6000DBB")]
		[Address(RVA = "0xBD3FF8", Offset = "0xBD3FF8", VA = "0xBD3FF8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x777318", Offset = "0x777318")]
		private void <Update>b__4_0(JSONNode json)
		{
		}
	}
	[Token(Token = "0x20002A9")]
	public class LoadForGloveStore : MonoBehaviour
	{
		[Token(Token = "0x4000D90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public KeyValueList availableGloves;

		[Token(Token = "0x4000D91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected bool tryToLoad;

		[Token(Token = "0x4000D92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		protected bool didLoad;

		[Token(Token = "0x6000DBC")]
		[Address(RVA = "0xBD4350", Offset = "0xBD4350", VA = "0xBD4350")]
		public void LoadGloves()
		{
		}

		[Token(Token = "0x6000DBD")]
		[Address(RVA = "0xBD438C", Offset = "0xBD438C", VA = "0xBD438C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000DBE")]
		[Address(RVA = "0xBD4464", Offset = "0xBD4464", VA = "0xBD4464")]
		public LoadForGloveStore()
		{
		}

		[Token(Token = "0x6000DBF")]
		[Address(RVA = "0xBD446C", Offset = "0xBD446C", VA = "0xBD446C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x777328", Offset = "0x777328")]
		private void <Update>b__4_0(JSONNode json)
		{
		}
	}
	[Token(Token = "0x20002AA")]
	public class LoadLeaderboard : MonoBehaviour
	{
		[Token(Token = "0x4000D93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int daysAgo;

		[Token(Token = "0x4000D94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LeaderboardEntry EntryPrefab;

		[Token(Token = "0x4000D95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LeaderboardEntry PlayerPrefab;

		[Token(Token = "0x4000D96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected bool loaded;

		[Token(Token = "0x4000D97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		protected float loadedTime;

		[Token(Token = "0x6000DC0")]
		[Address(RVA = "0xBD46FC", Offset = "0xBD46FC", VA = "0xBD46FC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000DC1")]
		[Address(RVA = "0xBD4744", Offset = "0xBD4744", VA = "0xBD4744")]
		private void Update()
		{
		}

		[Token(Token = "0x6000DC2")]
		[Address(RVA = "0xBD4814", Offset = "0xBD4814", VA = "0xBD4814")]
		public void UpdateLeaderboard(JSONNode json)
		{
		}

		[Token(Token = "0x6000DC3")]
		[Address(RVA = "0xBD4A1C", Offset = "0xBD4A1C", VA = "0xBD4A1C")]
		public LoadLeaderboard()
		{
		}
	}
	[Token(Token = "0x20002AB")]
	public class LoadManager : MonoBehaviour
	{
		[Token(Token = "0x4000D98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string scene;

		[Token(Token = "0x4000D99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float minTime;

		[Token(Token = "0x4000D9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		protected float timer;

		[Token(Token = "0x4000D9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected bool loading;

		[Token(Token = "0x6000DC4")]
		[Address(RVA = "0xBD4A24", Offset = "0xBD4A24", VA = "0xBD4A24")]
		private void Start()
		{
		}

		[Token(Token = "0x6000DC5")]
		[Address(RVA = "0xBD4A2C", Offset = "0xBD4A2C", VA = "0xBD4A2C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000DC6")]
		[Address(RVA = "0xBD4AA8", Offset = "0xBD4AA8", VA = "0xBD4AA8")]
		public LoadManager()
		{
		}
	}
	[Token(Token = "0x20002AC")]
	public class LoadWeeklyLeaderboard : MonoBehaviour
	{
		[Token(Token = "0x4000D9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int weeksAgo;

		[Token(Token = "0x4000D9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LeaderboardEntry EntryPrefab;

		[Token(Token = "0x4000D9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LeaderboardEntry PlayerPrefab;

		[Token(Token = "0x4000D9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public UIText winnerName;

		[Token(Token = "0x4000DA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected bool loaded;

		[Token(Token = "0x4000DA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		protected float loadedTime;

		[Token(Token = "0x6000DC7")]
		[Address(RVA = "0xBD4AB0", Offset = "0xBD4AB0", VA = "0xBD4AB0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000DC8")]
		[Address(RVA = "0xBD4AF8", Offset = "0xBD4AF8", VA = "0xBD4AF8")]
		private void Update()
		{
		}

		[Token(Token = "0x6000DC9")]
		[Address(RVA = "0xBD4BC8", Offset = "0xBD4BC8", VA = "0xBD4BC8")]
		public void UpdateLeaderboard(JSONNode json)
		{
		}

		[Token(Token = "0x6000DCA")]
		[Address(RVA = "0xBD4ED8", Offset = "0xBD4ED8", VA = "0xBD4ED8")]
		public LoadWeeklyLeaderboard()
		{
		}
	}
	[Token(Token = "0x20002AD")]
	public class MatchController : MonoBehaviour
	{
		[Token(Token = "0x20002AE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x770854", Offset = "0x770854")]
		private sealed class <SetupMatch>d__30 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000DBD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000DBE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000DBF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MatchController <>4__this;

			[Token(Token = "0x170001CB")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000DE7")]
				[Address(RVA = "0xB2DE54", Offset = "0xB2DE54", VA = "0xB2DE54", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001CC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000DE9")]
				[Address(RVA = "0xB2DE9C", Offset = "0xB2DE9C", VA = "0xB2DE9C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000DE4")]
			[Address(RVA = "0xB2D554", Offset = "0xB2D554", VA = "0xB2D554")]
			[DebuggerHidden]
			public <SetupMatch>d__30(int <>1__state)
			{
			}

			[Token(Token = "0x6000DE5")]
			[Address(RVA = "0xB2D580", Offset = "0xB2D580", VA = "0xB2D580", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000DE6")]
			[Address(RVA = "0xB2D584", Offset = "0xB2D584", VA = "0xB2D584", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000DE8")]
			[Address(RVA = "0xB2DE5C", Offset = "0xB2DE5C", VA = "0xB2DE5C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000DA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7737A8", Offset = "0x7737A8")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x7737A8", Offset = "0x7737A8")]
		public Match match;

		[Token(Token = "0x4000DA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float playerDistance;

		[Token(Token = "0x4000DA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x7737F4", Offset = "0x7737F4")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7737F4", Offset = "0x7737F4")]
		public List<PlayerPositionManager> positions;

		[Token(Token = "0x4000DA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public DroneList aiList;

		[Token(Token = "0x4000DA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public StringVariable aiDrone;

		[Token(Token = "0x4000DA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public AIPlayer buddyDrone;

		[Token(Token = "0x4000DA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public IntVariable Player1Score;

		[Token(Token = "0x4000DA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public IntVariable Player2Score;

		[Token(Token = "0x4000DAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public EnumVariable Player1State;

		[Token(Token = "0x4000DAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public EnumVariable Player2State;

		[Token(Token = "0x4000DAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public IntVariable GoalScore;

		[Token(Token = "0x4000DAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public IntVariable GoalTime;

		[Token(Token = "0x4000DAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public IntVariable PlayerCoins;

		[Token(Token = "0x4000DAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public StringVariable LeftGlove;

		[Token(Token = "0x4000DB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		protected string OldLeftGlove;

		[Token(Token = "0x4000DB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public StringVariable RightGlove;

		[Token(Token = "0x4000DB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		protected string OldRightGlove;

		[Token(Token = "0x4000DB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public IntVariable AwardAmount;

		[Token(Token = "0x4000DB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public BoolVariable DidLoseGloves;

		[Token(Token = "0x4000DB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public BoolVariable IsShutout;

		[Token(Token = "0x4000DB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public UnityEvent onReady;

		[Token(Token = "0x4000DB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public UnityEvent onActivate;

		[Token(Token = "0x4000DB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public UnityEvent onPlayer1Win;

		[Token(Token = "0x4000DB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public UnityEvent onPlayer2Win;

		[Token(Token = "0x4000DBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		protected bool gameOver;

		[Token(Token = "0x4000DBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		protected int playerNum;

		[Token(Token = "0x4000DBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		protected bool didResetGloves;

		[Token(Token = "0x170001C8")]
		public int PlayerNum
		{
			[Token(Token = "0x6000DCB")]
			[Address(RVA = "0xE4D9C4", Offset = "0xE4D9C4", VA = "0xE4D9C4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001C9")]
		public int TimeLeft
		{
			[Token(Token = "0x6000DE1")]
			[Address(RVA = "0xE4FB24", Offset = "0xE4FB24", VA = "0xE4FB24")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001CA")]
		public bool InSuddenDeath
		{
			[Token(Token = "0x6000DE2")]
			[Address(RVA = "0xE4FB6C", Offset = "0xE4FB6C", VA = "0xE4FB6C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000DCC")]
		[Address(RVA = "0xE4D9CC", Offset = "0xE4D9CC", VA = "0xE4D9CC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000DCD")]
		[Address(RVA = "0xE4DB44", Offset = "0xE4DB44", VA = "0xE4DB44")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x777338", Offset = "0x777338")]
		public IEnumerator SetupMatch()
		{
			return null;
		}

		[Token(Token = "0x6000DCE")]
		[Address(RVA = "0xE4DBB0", Offset = "0xE4DBB0", VA = "0xE4DBB0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000DCF")]
		[Address(RVA = "0xE4E2B0", Offset = "0xE4E2B0", VA = "0xE4E2B0")]
		public void Activate()
		{
		}

		[Token(Token = "0x6000DD0")]
		[Address(RVA = "0xE4DA14", Offset = "0xE4DA14", VA = "0xE4DA14")]
		protected void InitializePositions()
		{
		}

		[Token(Token = "0x6000DD1")]
		[Address(RVA = "0xE4E380", Offset = "0xE4E380", VA = "0xE4E380")]
		protected void InitializeMatch(Match m)
		{
		}

		[Token(Token = "0x6000DD2")]
		[Address(RVA = "0xE4E5CC", Offset = "0xE4E5CC", VA = "0xE4E5CC")]
		protected void InitializeCubes()
		{
		}

		[Token(Token = "0x6000DD3")]
		[Address(RVA = "0xE4E728", Offset = "0xE4E728", VA = "0xE4E728")]
		protected void SetupPlayer(Transform pos, bool forwardFacing)
		{
		}

		[Token(Token = "0x6000DD4")]
		[Address(RVA = "0xE4E764", Offset = "0xE4E764", VA = "0xE4E764")]
		protected void SetupBuddyDrone(Transform pos, Transform park, string uid, bool forwardFacing)
		{
		}

		[Token(Token = "0x6000DD5")]
		[Address(RVA = "0xE4EC2C", Offset = "0xE4EC2C", VA = "0xE4EC2C")]
		public void ActivateBuddyDrone()
		{
		}

		[Token(Token = "0x6000DD6")]
		[Address(RVA = "0xE4ECBC", Offset = "0xE4ECBC", VA = "0xE4ECBC")]
		protected void SetGloves()
		{
		}

		[Token(Token = "0x6000DD7")]
		[Address(RVA = "0xE4EFF0", Offset = "0xE4EFF0", VA = "0xE4EFF0")]
		protected void ResetGloves()
		{
		}

		[Token(Token = "0x6000DD8")]
		[Address(RVA = "0xE4E7B8", Offset = "0xE4E7B8", VA = "0xE4E7B8")]
		protected AIPlayer InitializeDrone(string droneUID, Transform pos, bool forwardFacing)
		{
			return null;
		}

		[Token(Token = "0x6000DD9")]
		[Address(RVA = "0xE4F128", Offset = "0xE4F128", VA = "0xE4F128")]
		public void Exit()
		{
		}

		[Token(Token = "0x6000DDA")]
		[Address(RVA = "0xE4F2C4", Offset = "0xE4F2C4", VA = "0xE4F2C4")]
		public void Rematch()
		{
		}

		[Token(Token = "0x6000DDB")]
		[Address(RVA = "0xE4F474", Offset = "0xE4F474", VA = "0xE4F474")]
		public IntVariable ScoreFor(int player)
		{
			return null;
		}

		[Token(Token = "0x6000DDC")]
		[Address(RVA = "0xE4F49C", Offset = "0xE4F49C", VA = "0xE4F49C")]
		public EnumVariable StateFor(int player)
		{
			return null;
		}

		[Token(Token = "0x6000DDD")]
		[Address(RVA = "0xE4F4C4", Offset = "0xE4F4C4", VA = "0xE4F4C4")]
		public bool HasPlayerWon(int playerScore, int opponentScore)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DDE")]
		[Address(RVA = "0xE4F584", Offset = "0xE4F584", VA = "0xE4F584")]
		public void CheckScores()
		{
		}

		[Token(Token = "0x6000DDF")]
		[Address(RVA = "0xE4DD58", Offset = "0xE4DD58", VA = "0xE4DD58")]
		protected void shutdownMatch(bool playerWon)
		{
		}

		[Token(Token = "0x6000DE0")]
		[Address(RVA = "0xE4F920", Offset = "0xE4F920", VA = "0xE4F920")]
		public bool IsPlayerClosest(Vector3 pos)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DE3")]
		[Address(RVA = "0xE4FBD4", Offset = "0xE4FBD4", VA = "0xE4FBD4")]
		public MatchController()
		{
		}
	}
	[Token(Token = "0x20002AF")]
	public class MatchControlsController : MonoBehaviour
	{
		[Token(Token = "0x4000DC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public EnumVariable playerState;

		[Token(Token = "0x4000DC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnumVariable opponentState;

		[Token(Token = "0x4000DC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject StartMatch;

		[Token(Token = "0x4000DC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject WaitingToStart;

		[Token(Token = "0x4000DC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject PlayingMatch;

		[Token(Token = "0x4000DC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject PostMatch;

		[Token(Token = "0x4000DC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject RematchButton;

		[Token(Token = "0x4000DC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public GameObject WaitingToRematch;

		[Token(Token = "0x4000DC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public UnityEvent onBeginMatch;

		[Token(Token = "0x4000DC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public UnityEvent onRematch;

		[Token(Token = "0x4000DCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public UnityEvent onExit;

		[Token(Token = "0x170001CD")]
		public bool CanRematch
		{
			[Token(Token = "0x6000DF0")]
			[Address(RVA = "0xE507F4", Offset = "0xE507F4", VA = "0xE507F4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000DEA")]
		[Address(RVA = "0xE4FBE8", Offset = "0xE4FBE8", VA = "0xE4FBE8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000DEB")]
		[Address(RVA = "0xE503C8", Offset = "0xE503C8", VA = "0xE503C8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000DEC")]
		[Address(RVA = "0xE50534", Offset = "0xE50534", VA = "0xE50534")]
		public void BeginGame()
		{
		}

		[Token(Token = "0x6000DED")]
		[Address(RVA = "0xE505E0", Offset = "0xE505E0", VA = "0xE505E0")]
		public void EndGame()
		{
		}

		[Token(Token = "0x6000DEE")]
		[Address(RVA = "0xE5068C", Offset = "0xE5068C", VA = "0xE5068C")]
		public void Rematch()
		{
		}

		[Token(Token = "0x6000DEF")]
		[Address(RVA = "0xE50738", Offset = "0xE50738", VA = "0xE50738")]
		public void Exit()
		{
		}

		[Token(Token = "0x6000DF1")]
		[Address(RVA = "0xE4FD5C", Offset = "0xE4FD5C", VA = "0xE4FD5C")]
		protected void UpdateControls()
		{
		}

		[Token(Token = "0x6000DF2")]
		[Address(RVA = "0xE507FC", Offset = "0xE507FC", VA = "0xE507FC")]
		public MatchControlsController()
		{
		}
	}
	[Token(Token = "0x20002B0")]
	public class MatchStatsRecorder : MonoBehaviour
	{
		[Token(Token = "0x20002B1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x770864", Offset = "0x770864")]
		private sealed class <>c__DisplayClass4_0
		{
			[Token(Token = "0x4000DCD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GloveController glove;

			[Token(Token = "0x4000DCE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public MatchStatsRecorder <>4__this;

			[Token(Token = "0x6000DFC")]
			[Address(RVA = "0xB2E0B4", Offset = "0xB2E0B4", VA = "0xB2E0B4")]
			public <>c__DisplayClass4_0()
			{
			}

			[Token(Token = "0x6000DFD")]
			[Address(RVA = "0xB2E0BC", Offset = "0xB2E0BC", VA = "0xB2E0BC")]
			internal void <AddHooks>b__5(Block block)
			{
			}

			[Token(Token = "0x6000DFE")]
			[Address(RVA = "0xB2E0F4", Offset = "0xB2E0F4", VA = "0xB2E0F4")]
			internal void <AddHooks>b__6()
			{
			}
		}

		[Token(Token = "0x4000DCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected MatchController matchController;

		[Token(Token = "0x4000DCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected MatchStats stats;

		[Token(Token = "0x6000DF3")]
		[Address(RVA = "0xE584CC", Offset = "0xE584CC", VA = "0xE584CC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000DF4")]
		[Address(RVA = "0xE584D4", Offset = "0xE584D4", VA = "0xE584D4")]
		private void Update()
		{
		}

		[Token(Token = "0x6000DF5")]
		[Address(RVA = "0xE586A4", Offset = "0xE586A4", VA = "0xE586A4")]
		protected void AddHooks()
		{
		}

		[Token(Token = "0x6000DF6")]
		[Address(RVA = "0xE58C7C", Offset = "0xE58C7C", VA = "0xE58C7C")]
		public MatchStatsRecorder()
		{
		}

		[Token(Token = "0x6000DF7")]
		[Address(RVA = "0xE58C84", Offset = "0xE58C84", VA = "0xE58C84")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7773E8", Offset = "0x7773E8")]
		private void <AddHooks>b__4_0()
		{
		}

		[Token(Token = "0x6000DF8")]
		[Address(RVA = "0xE58CB4", Offset = "0xE58CB4", VA = "0xE58CB4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7773F8", Offset = "0x7773F8")]
		private void <AddHooks>b__4_1()
		{
		}

		[Token(Token = "0x6000DF9")]
		[Address(RVA = "0xE58CCC", Offset = "0xE58CCC", VA = "0xE58CCC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x777408", Offset = "0x777408")]
		private void <AddHooks>b__4_2()
		{
		}

		[Token(Token = "0x6000DFA")]
		[Address(RVA = "0xE58CE4", Offset = "0xE58CE4", VA = "0xE58CE4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x777418", Offset = "0x777418")]
		private void <AddHooks>b__4_3(Block block)
		{
		}

		[Token(Token = "0x6000DFB")]
		[Address(RVA = "0xE58CFC", Offset = "0xE58CFC", VA = "0xE58CFC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x777428", Offset = "0x777428")]
		private void <AddHooks>b__4_4(Block block)
		{
		}
	}
	[Token(Token = "0x20002B2")]
	public class MatchTimerDisplay : MonoBehaviour
	{
		[Token(Token = "0x4000DCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected MatchController matchController;

		[Token(Token = "0x4000DD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected Animator animator;

		[Token(Token = "0x4000DD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UIText timeDisplay;

		[Token(Token = "0x4000DD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject suddenDeath;

		[Token(Token = "0x4000DD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int closeThreshold;

		[Token(Token = "0x6000DFF")]
		[Address(RVA = "0xE58D14", Offset = "0xE58D14", VA = "0xE58D14")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000E00")]
		[Address(RVA = "0xE58D68", Offset = "0xE58D68", VA = "0xE58D68")]
		private void Update()
		{
		}

		[Token(Token = "0x6000E01")]
		[Address(RVA = "0xE58ED0", Offset = "0xE58ED0", VA = "0xE58ED0")]
		public void showTime(int time)
		{
		}

		[Token(Token = "0x6000E02")]
		[Address(RVA = "0xE59130", Offset = "0xE59130", VA = "0xE59130")]
		public void hideTime()
		{
		}

		[Token(Token = "0x6000E03")]
		[Address(RVA = "0xE59220", Offset = "0xE59220", VA = "0xE59220")]
		public MatchTimerDisplay()
		{
		}
	}
	[Token(Token = "0x20002B3")]
	public class ChallengeMatch : Match
	{
		[Token(Token = "0x4000DD4")]
		private const float WIN_WEIGHT = 4000f;

		[Token(Token = "0x4000DD5")]
		private const float POINTS_WEIGHT = 40f;

		[Token(Token = "0x4000DD6")]
		private const float TIME_WEIGHT = 16.354f;

		[Token(Token = "0x4000DD7")]
		private const float BLOCKS_WEIGHT = 1.365f;

		[Token(Token = "0x4000DD8")]
		private const float BONUS_WEIGHT = 14.246f;

		[Token(Token = "0x170001CE")]
		public override MatchType Type
		{
			[Token(Token = "0x6000E04")]
			[Address(RVA = "0x11E0164", Offset = "0x11E0164", VA = "0x11E0164", Slot = "8")]
			get
			{
				return default(MatchType);
			}
		}

		[Token(Token = "0x170001CF")]
		public int ChallengeScore
		{
			[Token(Token = "0x6000E07")]
			[Address(RVA = "0x11E0218", Offset = "0x11E0218", VA = "0x11E0218")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6000E05")]
		[Address(RVA = "0x11E016C", Offset = "0x11E016C", VA = "0x11E016C", Slot = "6")]
		public override void Reset()
		{
		}

		[Token(Token = "0x6000E06")]
		[Address(RVA = "0x11E019C", Offset = "0x11E019C", VA = "0x11E019C")]
		public new static ChallengeMatch create(JSONNode j)
		{
			return null;
		}

		[Token(Token = "0x6000E08")]
		[Address(RVA = "0x11E0698", Offset = "0x11E0698", VA = "0x11E0698")]
		public ChallengeMatch()
		{
		}
	}
	[Token(Token = "0x20002B4")]
	public class ChallengeMatchDescriber : MatchDisplayer
	{
		[Token(Token = "0x4000DD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UIText droneName;

		[Token(Token = "0x4000DDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ArenaDisplay arena;

		[Token(Token = "0x4000DDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public UIText pointsToWin;

		[Token(Token = "0x4000DDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public UIText timeToPlay;

		[Token(Token = "0x4000DDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public UIText coinsAwarded;

		[Token(Token = "0x4000DDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public UIText modifiers;

		[Token(Token = "0x6000E09")]
		[Address(RVA = "0x11E06A0", Offset = "0x11E06A0", VA = "0x11E06A0", Slot = "4")]
		public override void UpdateDisplay()
		{
		}

		[Token(Token = "0x6000E0A")]
		[Address(RVA = "0x11E09D8", Offset = "0x11E09D8", VA = "0x11E09D8")]
		public string ModifiersText()
		{
			return null;
		}

		[Token(Token = "0x6000E0B")]
		[Address(RVA = "0x11E0CC4", Offset = "0x11E0CC4", VA = "0x11E0CC4")]
		public ChallengeMatchDescriber()
		{
		}
	}
	[Token(Token = "0x20002B5")]
	public class DailyChallengeController : MonoBehaviour
	{
		[Token(Token = "0x4000DDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public DailyChallenges Challenges;

		[Token(Token = "0x4000DE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<GameObject> HasNotPlayed;

		[Token(Token = "0x4000DE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<GameObject> HasPlayed;

		[Token(Token = "0x4000DE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public UIText Score;

		[Token(Token = "0x4000DE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public IntVariable NewChallengeSecondsLeft;

		[Token(Token = "0x4000DE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public IntVariable WeeklyChallengeSecondsLeft;

		[Token(Token = "0x4000DE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected bool loaded;

		[Token(Token = "0x6000E0C")]
		[Address(RVA = "0x11EBA50", Offset = "0x11EBA50", VA = "0x11EBA50")]
		private void Update()
		{
		}

		[Token(Token = "0x6000E0D")]
		[Address(RVA = "0x11EBD30", Offset = "0x11EBD30", VA = "0x11EBD30")]
		public void UpdateMatch()
		{
		}

		[Token(Token = "0x6000E0E")]
		[Address(RVA = "0x11EC314", Offset = "0x11EC314", VA = "0x11EC314")]
		public DailyChallengeController()
		{
		}
	}
	[Token(Token = "0x20002B6")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x770874", Offset = "0x770874")]
	public class DailyChallenges : PersistentData
	{
		[Token(Token = "0x4000DE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Dictionary<string, Match> matches;

		[Token(Token = "0x170001D0")]
		public override JSONNode json
		{
			[Token(Token = "0x6000E0F")]
			[Address(RVA = "0x11EC424", Offset = "0x11EC424", VA = "0x11EC424", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D1")]
		public static string Today
		{
			[Token(Token = "0x6000E10")]
			[Address(RVA = "0x11EC61C", Offset = "0x11EC61C", VA = "0x11EC61C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D2")]
		public Match CurrentMatch
		{
			[Token(Token = "0x6000E11")]
			[Address(RVA = "0x11EC274", Offset = "0x11EC274", VA = "0x11EC274")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E12")]
		[Address(RVA = "0x11EC6D0", Offset = "0x11EC6D0", VA = "0x11EC6D0")]
		public void AddMatch(Match m)
		{
		}

		[Token(Token = "0x6000E13")]
		[Address(RVA = "0x11EC784", Offset = "0x11EC784", VA = "0x11EC784", Slot = "6")]
		public override void Reset()
		{
		}

		[Token(Token = "0x6000E14")]
		[Address(RVA = "0x11EC7D8", Offset = "0x11EC7D8", VA = "0x11EC7D8", Slot = "7")]
		public override void Init(JSONNode j)
		{
		}

		[Token(Token = "0x6000E15")]
		[Address(RVA = "0x11EC928", Offset = "0x11EC928", VA = "0x11EC928")]
		public DailyChallenges()
		{
		}
	}
	[Token(Token = "0x20002B7")]
	public class FindMatch : MonoBehaviour
	{
		[Token(Token = "0x6000E16")]
		[Address(RVA = "0xC686D4", Offset = "0xC686D4", VA = "0xC686D4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000E17")]
		[Address(RVA = "0xC687FC", Offset = "0xC687FC", VA = "0xC687FC")]
		public FindMatch()
		{
		}
	}
	[Token(Token = "0x20002B8")]
	public abstract class MatchIcon : MonoBehaviour
	{
		[Token(Token = "0x6000E18")]
		public abstract bool AppliesTo(Match match);

		[Token(Token = "0x6000E19")]
		[Address(RVA = "0xE51184", Offset = "0xE51184", VA = "0xE51184")]
		protected MatchIcon()
		{
		}
	}
	[Token(Token = "0x20002B9")]
	public class MatchIconAward : MatchIcon
	{
		[Token(Token = "0x4000DE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int value;

		[Token(Token = "0x6000E1A")]
		[Address(RVA = "0xE5118C", Offset = "0xE5118C", VA = "0xE5118C", Slot = "4")]
		public override bool AppliesTo(Match match)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E1B")]
		[Address(RVA = "0xE511B0", Offset = "0xE511B0", VA = "0xE511B0")]
		public MatchIconAward()
		{
		}
	}
	[Token(Token = "0x20002BA")]
	public class MatchIconCubes : MatchIcon
	{
		[Token(Token = "0x4000DE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int value;

		[Token(Token = "0x6000E1C")]
		[Address(RVA = "0xE511B8", Offset = "0xE511B8", VA = "0xE511B8", Slot = "4")]
		public override bool AppliesTo(Match match)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E1D")]
		[Address(RVA = "0xE511DC", Offset = "0xE511DC", VA = "0xE511DC")]
		public MatchIconCubes()
		{
		}
	}
	[Token(Token = "0x20002BB")]
	public class MatchIconHasRisk : MatchIcon
	{
		[Token(Token = "0x6000E1E")]
		[Address(RVA = "0xE516EC", Offset = "0xE516EC", VA = "0xE516EC", Slot = "4")]
		public override bool AppliesTo(Match match)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E1F")]
		[Address(RVA = "0xE51704", Offset = "0xE51704", VA = "0xE51704")]
		public MatchIconHasRisk()
		{
		}
	}
	[Token(Token = "0x20002BC")]
	public class MatchIconLeftGlove : MatchIcon
	{
		[Token(Token = "0x6000E20")]
		[Address(RVA = "0xE5170C", Offset = "0xE5170C", VA = "0xE5170C", Slot = "4")]
		public override bool AppliesTo(Match match)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E21")]
		[Address(RVA = "0xE5173C", Offset = "0xE5173C", VA = "0xE5173C")]
		public MatchIconLeftGlove()
		{
		}
	}
	[Token(Token = "0x20002BD")]
	public class MatchIconMoveOnHit : MatchIcon
	{
		[Token(Token = "0x6000E22")]
		[Address(RVA = "0xE51744", Offset = "0xE51744", VA = "0xE51744", Slot = "4")]
		public override bool AppliesTo(Match match)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E23")]
		[Address(RVA = "0xE5175C", Offset = "0xE5175C", VA = "0xE5175C")]
		public MatchIconMoveOnHit()
		{
		}
	}
	[Token(Token = "0x20002BE")]
	public class MatchIconNoGloves : MatchIcon
	{
		[Token(Token = "0x6000E24")]
		[Address(RVA = "0xE51764", Offset = "0xE51764", VA = "0xE51764", Slot = "4")]
		public override bool AppliesTo(Match match)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E25")]
		[Address(RVA = "0xE51794", Offset = "0xE51794", VA = "0xE51794")]
		public MatchIconNoGloves()
		{
		}
	}
	[Token(Token = "0x20002BF")]
	public class MatchIconNoHand : MatchIcon
	{
		[Token(Token = "0x4000DE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool testRight;

		[Token(Token = "0x6000E26")]
		[Address(RVA = "0xE5179C", Offset = "0xE5179C", VA = "0xE5179C", Slot = "4")]
		public override bool AppliesTo(Match match)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E27")]
		[Address(RVA = "0xE517CC", Offset = "0xE517CC", VA = "0xE517CC")]
		public MatchIconNoHand()
		{
		}
	}
	[Token(Token = "0x20002C0")]
	public class MatchIconPlayTo : MatchIcon
	{
		[Token(Token = "0x4000DEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int value;

		[Token(Token = "0x6000E28")]
		[Address(RVA = "0xE517DC", Offset = "0xE517DC", VA = "0xE517DC", Slot = "4")]
		public override bool AppliesTo(Match match)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E29")]
		[Address(RVA = "0xE51800", Offset = "0xE51800", VA = "0xE51800")]
		public MatchIconPlayTo()
		{
		}
	}
	[Token(Token = "0x20002C1")]
	public class MatchIconRightGlove : MatchIcon
	{
		[Token(Token = "0x6000E2A")]
		[Address(RVA = "0xE51808", Offset = "0xE51808", VA = "0xE51808", Slot = "4")]
		public override bool AppliesTo(Match match)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E2B")]
		[Address(RVA = "0xE51838", Offset = "0xE51838", VA = "0xE51838")]
		public MatchIconRightGlove()
		{
		}
	}
	[Token(Token = "0x20002C2")]
	public class MatchIconSplitOnHit : MatchIcon
	{
		[Token(Token = "0x6000E2C")]
		[Address(RVA = "0xE51840", Offset = "0xE51840", VA = "0xE51840", Slot = "4")]
		public override bool AppliesTo(Match match)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E2D")]
		[Address(RVA = "0xE51858", Offset = "0xE51858", VA = "0xE51858")]
		public MatchIconSplitOnHit()
		{
		}
	}
	[Token(Token = "0x20002C3")]
	public class MatchIconTime : MatchIcon
	{
		[Token(Token = "0x4000DEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int value;

		[Token(Token = "0x6000E2E")]
		[Address(RVA = "0xE51860", Offset = "0xE51860", VA = "0xE51860", Slot = "4")]
		public override bool AppliesTo(Match match)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E2F")]
		[Address(RVA = "0xE51884", Offset = "0xE51884", VA = "0xE51884")]
		public MatchIconTime()
		{
		}
	}
	[Token(Token = "0x20002C4")]
	public class MatchIconValueChange : MatchIcon
	{
		[Token(Token = "0x20002C5")]
		public enum Behaviour
		{
			[Token(Token = "0x4000DEE")]
			Inc,
			[Token(Token = "0x4000DEF")]
			Dec,
			[Token(Token = "0x4000DF0")]
			Random
		}

		[Token(Token = "0x4000DEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Behaviour behavior;

		[Token(Token = "0x6000E30")]
		[Address(RVA = "0xE5188C", Offset = "0xE5188C", VA = "0xE5188C", Slot = "4")]
		public override bool AppliesTo(Match match)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E31")]
		[Address(RVA = "0xE518EC", Offset = "0xE518EC", VA = "0xE518EC")]
		public MatchIconValueChange()
		{
		}
	}
	[Token(Token = "0x20002C6")]
	public class InsuranceOffer : MatchDisplayer
	{
		[Token(Token = "0x4000DF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float insuranceRate;

		[Token(Token = "0x4000DF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UIText cost;

		[Token(Token = "0x4000DF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<GameObject> noInsuranceObjects;

		[Token(Token = "0x4000DF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public List<GameObject> hasInsuranceObjects;

		[Token(Token = "0x4000DF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool hasInsurance;

		[Token(Token = "0x170001D3")]
		public bool CanOfferInsurance
		{
			[Token(Token = "0x6000E34")]
			[Address(RVA = "0xBC5C68", Offset = "0xBC5C68", VA = "0xBC5C68")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001D4")]
		public int InsuranceCost
		{
			[Token(Token = "0x6000E35")]
			[Address(RVA = "0xBC5D80", Offset = "0xBC5D80", VA = "0xBC5D80")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6000E32")]
		[Address(RVA = "0xBC5984", Offset = "0xBC5984", VA = "0xBC5984", Slot = "4")]
		public override void UpdateDisplay()
		{
		}

		[Token(Token = "0x6000E33")]
		[Address(RVA = "0xBC5EF0", Offset = "0xBC5EF0", VA = "0xBC5EF0")]
		public void PurchaseInsurance()
		{
		}

		[Token(Token = "0x6000E36")]
		[Address(RVA = "0xBC5F60", Offset = "0xBC5F60", VA = "0xBC5F60")]
		public InsuranceOffer()
		{
		}
	}
	[Token(Token = "0x20002C7")]
	public class LeagueMatchDescriber : MatchDisplayer
	{
		[Token(Token = "0x4000DF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UIText droneName;

		[Token(Token = "0x4000DF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ArenaDisplay arena;

		[Token(Token = "0x4000DF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public UIText pointsToWin;

		[Token(Token = "0x4000DF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public UIText coinsAwarded;

		[Token(Token = "0x4000DFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public UIText modifiers;

		[Token(Token = "0x6000E37")]
		[Address(RVA = "0xBD1D70", Offset = "0xBD1D70", VA = "0xBD1D70", Slot = "4")]
		public override void UpdateDisplay()
		{
		}

		[Token(Token = "0x6000E38")]
		[Address(RVA = "0xBD1FD8", Offset = "0xBD1FD8", VA = "0xBD1FD8")]
		public string ModifiersText()
		{
			return null;
		}

		[Token(Token = "0x6000E39")]
		[Address(RVA = "0xBD22C4", Offset = "0xBD22C4", VA = "0xBD22C4")]
		public LeagueMatchDescriber()
		{
		}
	}
	[Token(Token = "0x20002C8")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x770884", Offset = "0x770884")]
	public class Match : PersistentData
	{
		[Token(Token = "0x20002C9")]
		public enum MatchType
		{
			[Token(Token = "0x4000E1B")]
			SinglePlayer,
			[Token(Token = "0x4000E1C")]
			MultiPlayer,
			[Token(Token = "0x4000E1D")]
			League,
			[Token(Token = "0x4000E1E")]
			Challenge,
			[Token(Token = "0x4000E1F")]
			Tutorial,
			[Token(Token = "0x4000E20")]
			Arcade
		}

		[Token(Token = "0x4000DFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected string uuid;

		[Token(Token = "0x4000DFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected MatchPlayer playerA;

		[Token(Token = "0x4000DFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected MatchPlayer playerB;

		[Token(Token = "0x4000DFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected bool played;

		[Token(Token = "0x4000DFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected string arena;

		[Token(Token = "0x4000E00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected int award;

		[Token(Token = "0x4000E01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		protected int playToScore;

		[Token(Token = "0x4000E02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected int playToTime;

		[Token(Token = "0x4000E03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		protected bool allowBuddy;

		[Token(Token = "0x4000E04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
		protected bool allowLeftGlove;

		[Token(Token = "0x4000E05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4E")]
		protected bool allowRightGlove;

		[Token(Token = "0x4000E06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4F")]
		protected bool dronePowers;

		[Token(Token = "0x4000E07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected bool allowLeftHand;

		[Token(Token = "0x4000E08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		protected bool allowRightHand;

		[Token(Token = "0x4000E09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
		protected bool moveOnHit;

		[Token(Token = "0x4000E0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x53")]
		protected bool splitOnHit;

		[Token(Token = "0x4000E0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		protected int valueStart;

		[Token(Token = "0x4000E0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected int valueChange;

		[Token(Token = "0x4000E0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		protected int hitsToChange;

		[Token(Token = "0x4000E0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected int numBlocks;

		[Token(Token = "0x4000E0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		protected bool loseGloves;

		[Token(Token = "0x4000E10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
		protected bool hasInsurance;

		[Token(Token = "0x4000E11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		protected string version;

		[Token(Token = "0x4000E12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected string region;

		[Token(Token = "0x4000E13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected string opponentName;

		[Token(Token = "0x4000E14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		protected string opponentID;

		[Token(Token = "0x4000E15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		protected string opponentLeftGlove;

		[Token(Token = "0x4000E16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		protected string opponentRightGlove;

		[Token(Token = "0x4000E17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		protected string opponentBuddyDrone;

		[Token(Token = "0x4000E18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		protected bool rematch;

		[Token(Token = "0x4000E19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public MatchStats stats;

		[Token(Token = "0x170001D5")]
		public string UUID
		{
			[Token(Token = "0x6000E3A")]
			[Address(RVA = "0xE49D50", Offset = "0xE49D50", VA = "0xE49D50")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E3B")]
			[Address(RVA = "0xE49D58", Offset = "0xE49D58", VA = "0xE49D58")]
			set
			{
			}
		}

		[Token(Token = "0x170001D6")]
		public MatchPlayer PlayerA
		{
			[Token(Token = "0x6000E3C")]
			[Address(RVA = "0xE49D60", Offset = "0xE49D60", VA = "0xE49D60")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E3D")]
			[Address(RVA = "0xE49D68", Offset = "0xE49D68", VA = "0xE49D68")]
			set
			{
			}
		}

		[Token(Token = "0x170001D7")]
		public MatchPlayer PlayerB
		{
			[Token(Token = "0x6000E3E")]
			[Address(RVA = "0xE49D70", Offset = "0xE49D70", VA = "0xE49D70")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E3F")]
			[Address(RVA = "0xE49D78", Offset = "0xE49D78", VA = "0xE49D78")]
			set
			{
			}
		}

		[Token(Token = "0x170001D8")]
		public bool Played
		{
			[Token(Token = "0x6000E40")]
			[Address(RVA = "0xE49D80", Offset = "0xE49D80", VA = "0xE49D80")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001D9")]
		public string Arena
		{
			[Token(Token = "0x6000E41")]
			[Address(RVA = "0xE49D88", Offset = "0xE49D88", VA = "0xE49D88")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E42")]
			[Address(RVA = "0xE49D90", Offset = "0xE49D90", VA = "0xE49D90")]
			set
			{
			}
		}

		[Token(Token = "0x170001DA")]
		public int Award
		{
			[Token(Token = "0x6000E43")]
			[Address(RVA = "0xE49D98", Offset = "0xE49D98", VA = "0xE49D98")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000E44")]
			[Address(RVA = "0xE49DA0", Offset = "0xE49DA0", VA = "0xE49DA0")]
			set
			{
			}
		}

		[Token(Token = "0x170001DB")]
		public int PlayToScore
		{
			[Token(Token = "0x6000E45")]
			[Address(RVA = "0xE49DA8", Offset = "0xE49DA8", VA = "0xE49DA8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000E46")]
			[Address(RVA = "0xE49DB0", Offset = "0xE49DB0", VA = "0xE49DB0")]
			set
			{
			}
		}

		[Token(Token = "0x170001DC")]
		public int PlayToTime
		{
			[Token(Token = "0x6000E47")]
			[Address(RVA = "0xE49DB8", Offset = "0xE49DB8", VA = "0xE49DB8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000E48")]
			[Address(RVA = "0xE49DC0", Offset = "0xE49DC0", VA = "0xE49DC0")]
			set
			{
			}
		}

		[Token(Token = "0x170001DD")]
		public bool AllowBuddy
		{
			[Token(Token = "0x6000E49")]
			[Address(RVA = "0xE49DC8", Offset = "0xE49DC8", VA = "0xE49DC8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000E4A")]
			[Address(RVA = "0xE49DD0", Offset = "0xE49DD0", VA = "0xE49DD0")]
			set
			{
			}
		}

		[Token(Token = "0x170001DE")]
		public bool AllowLeftGlove
		{
			[Token(Token = "0x6000E4B")]
			[Address(RVA = "0xE49DDC", Offset = "0xE49DDC", VA = "0xE49DDC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000E4C")]
			[Address(RVA = "0xE49DE4", Offset = "0xE49DE4", VA = "0xE49DE4")]
			set
			{
			}
		}

		[Token(Token = "0x170001DF")]
		public bool AllowRightGlove
		{
			[Token(Token = "0x6000E4D")]
			[Address(RVA = "0xE49DF0", Offset = "0xE49DF0", VA = "0xE49DF0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000E4E")]
			[Address(RVA = "0xE49DF8", Offset = "0xE49DF8", VA = "0xE49DF8")]
			set
			{
			}
		}

		[Token(Token = "0x170001E0")]
		public bool DronePowers
		{
			[Token(Token = "0x6000E4F")]
			[Address(RVA = "0xE49E04", Offset = "0xE49E04", VA = "0xE49E04")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000E50")]
			[Address(RVA = "0xE49E0C", Offset = "0xE49E0C", VA = "0xE49E0C")]
			set
			{
			}
		}

		[Token(Token = "0x170001E1")]
		public bool AllowLeftHand
		{
			[Token(Token = "0x6000E51")]
			[Address(RVA = "0xE49E18", Offset = "0xE49E18", VA = "0xE49E18")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000E52")]
			[Address(RVA = "0xE49E20", Offset = "0xE49E20", VA = "0xE49E20")]
			set
			{
			}
		}

		[Token(Token = "0x170001E2")]
		public bool AllowRightHand
		{
			[Token(Token = "0x6000E53")]
			[Address(RVA = "0xE49E2C", Offset = "0xE49E2C", VA = "0xE49E2C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000E54")]
			[Address(RVA = "0xE49E34", Offset = "0xE49E34", VA = "0xE49E34")]
			set
			{
			}
		}

		[Token(Token = "0x170001E3")]
		public bool MoveOnHit
		{
			[Token(Token = "0x6000E55")]
			[Address(RVA = "0xE49E40", Offset = "0xE49E40", VA = "0xE49E40")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000E56")]
			[Address(RVA = "0xE49E48", Offset = "0xE49E48", VA = "0xE49E48")]
			set
			{
			}
		}

		[Token(Token = "0x170001E4")]
		public bool SplitOnHit
		{
			[Token(Token = "0x6000E57")]
			[Address(RVA = "0xE49E54", Offset = "0xE49E54", VA = "0xE49E54")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000E58")]
			[Address(RVA = "0xE49E5C", Offset = "0xE49E5C", VA = "0xE49E5C")]
			set
			{
			}
		}

		[Token(Token = "0x170001E5")]
		public int ValueStart
		{
			[Token(Token = "0x6000E59")]
			[Address(RVA = "0xE49E68", Offset = "0xE49E68", VA = "0xE49E68")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000E5A")]
			[Address(RVA = "0xE49E70", Offset = "0xE49E70", VA = "0xE49E70")]
			set
			{
			}
		}

		[Token(Token = "0x170001E6")]
		public int ValueChange
		{
			[Token(Token = "0x6000E5B")]
			[Address(RVA = "0xE49E78", Offset = "0xE49E78", VA = "0xE49E78")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000E5C")]
			[Address(RVA = "0xE49E80", Offset = "0xE49E80", VA = "0xE49E80")]
			set
			{
			}
		}

		[Token(Token = "0x170001E7")]
		public int HitsToChange
		{
			[Token(Token = "0x6000E5D")]
			[Address(RVA = "0xE49E88", Offset = "0xE49E88", VA = "0xE49E88")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000E5E")]
			[Address(RVA = "0xE49E90", Offset = "0xE49E90", VA = "0xE49E90")]
			set
			{
			}
		}

		[Token(Token = "0x170001E8")]
		public int NumBlocks
		{
			[Token(Token = "0x6000E5F")]
			[Address(RVA = "0xE49E98", Offset = "0xE49E98", VA = "0xE49E98")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000E60")]
			[Address(RVA = "0xE49EA0", Offset = "0xE49EA0", VA = "0xE49EA0")]
			set
			{
			}
		}

		[Token(Token = "0x170001E9")]
		public bool LoseGloves
		{
			[Token(Token = "0x6000E61")]
			[Address(RVA = "0xE49EA8", Offset = "0xE49EA8", VA = "0xE49EA8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000E62")]
			[Address(RVA = "0xE49EB0", Offset = "0xE49EB0", VA = "0xE49EB0")]
			set
			{
			}
		}

		[Token(Token = "0x170001EA")]
		public bool HasInsurance
		{
			[Token(Token = "0x6000E63")]
			[Address(RVA = "0xE49EBC", Offset = "0xE49EBC", VA = "0xE49EBC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000E64")]
			[Address(RVA = "0xE49EC4", Offset = "0xE49EC4", VA = "0xE49EC4")]
			set
			{
			}
		}

		[Token(Token = "0x170001EB")]
		public string Version
		{
			[Token(Token = "0x6000E65")]
			[Address(RVA = "0xE49ED0", Offset = "0xE49ED0", VA = "0xE49ED0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E66")]
			[Address(RVA = "0xE49ED8", Offset = "0xE49ED8", VA = "0xE49ED8")]
			set
			{
			}
		}

		[Token(Token = "0x170001EC")]
		public string Region
		{
			[Token(Token = "0x6000E67")]
			[Address(RVA = "0xE49EE0", Offset = "0xE49EE0", VA = "0xE49EE0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E68")]
			[Address(RVA = "0xE49EE8", Offset = "0xE49EE8", VA = "0xE49EE8")]
			set
			{
			}
		}

		[Token(Token = "0x170001ED")]
		public string OpponentName
		{
			[Token(Token = "0x6000E69")]
			[Address(RVA = "0xE49EF0", Offset = "0xE49EF0", VA = "0xE49EF0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E6A")]
			[Address(RVA = "0xE49EF8", Offset = "0xE49EF8", VA = "0xE49EF8")]
			set
			{
			}
		}

		[Token(Token = "0x170001EE")]
		public string OpponentID
		{
			[Token(Token = "0x6000E6B")]
			[Address(RVA = "0xE49F00", Offset = "0xE49F00", VA = "0xE49F00")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E6C")]
			[Address(RVA = "0xE49F08", Offset = "0xE49F08", VA = "0xE49F08")]
			set
			{
			}
		}

		[Token(Token = "0x170001EF")]
		public string OpponentLeftGlove
		{
			[Token(Token = "0x6000E6D")]
			[Address(RVA = "0xE49F10", Offset = "0xE49F10", VA = "0xE49F10")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E6E")]
			[Address(RVA = "0xE49F18", Offset = "0xE49F18", VA = "0xE49F18")]
			set
			{
			}
		}

		[Token(Token = "0x170001F0")]
		public string OpponentRightGlove
		{
			[Token(Token = "0x6000E6F")]
			[Address(RVA = "0xE49F20", Offset = "0xE49F20", VA = "0xE49F20")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E70")]
			[Address(RVA = "0xE49F28", Offset = "0xE49F28", VA = "0xE49F28")]
			set
			{
			}
		}

		[Token(Token = "0x170001F1")]
		public string OpponentBuddyDrone
		{
			[Token(Token = "0x6000E71")]
			[Address(RVA = "0xE49F30", Offset = "0xE49F30", VA = "0xE49F30")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E72")]
			[Address(RVA = "0xE49F38", Offset = "0xE49F38", VA = "0xE49F38")]
			set
			{
			}
		}

		[Token(Token = "0x170001F2")]
		public bool Rematch
		{
			[Token(Token = "0x6000E73")]
			[Address(RVA = "0xE49F40", Offset = "0xE49F40", VA = "0xE49F40")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000E74")]
			[Address(RVA = "0xE49F48", Offset = "0xE49F48", VA = "0xE49F48")]
			set
			{
			}
		}

		[Token(Token = "0x170001F3")]
		public MatchPlayer Winner
		{
			[Token(Token = "0x6000E75")]
			[Address(RVA = "0xE49F54", Offset = "0xE49F54", VA = "0xE49F54")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F4")]
		public bool HasPlayer
		{
			[Token(Token = "0x6000E76")]
			[Address(RVA = "0xE4A038", Offset = "0xE4A038", VA = "0xE4A038")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001F5")]
		public MatchPlayer ThePlayer
		{
			[Token(Token = "0x6000E77")]
			[Address(RVA = "0xE4A164", Offset = "0xE4A164", VA = "0xE4A164")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F6")]
		public MatchPlayer Opponent
		{
			[Token(Token = "0x6000E78")]
			[Address(RVA = "0xE4A248", Offset = "0xE4A248", VA = "0xE4A248")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F7")]
		public virtual MatchType Type
		{
			[Token(Token = "0x6000E79")]
			[Address(RVA = "0xE4A32C", Offset = "0xE4A32C", VA = "0xE4A32C", Slot = "8")]
			get
			{
				return default(MatchType);
			}
		}

		[Token(Token = "0x170001F8")]
		public override JSONNode json
		{
			[Token(Token = "0x6000E7A")]
			[Address(RVA = "0xE4A334", Offset = "0xE4A334", VA = "0xE4A334", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F9")]
		public virtual JSONNode parametersJson
		{
			[Token(Token = "0x6000E7B")]
			[Address(RVA = "0xE4AA44", Offset = "0xE4AA44", VA = "0xE4AA44", Slot = "9")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001FA")]
		public ExitGames.Client.Photon.Hashtable ToHashtable
		{
			[Token(Token = "0x6000E81")]
			[Address(RVA = "0xE4BBB4", Offset = "0xE4BBB4", VA = "0xE4BBB4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001FB")]
		public int XP
		{
			[Token(Token = "0x6000E83")]
			[Address(RVA = "0xE4C950", Offset = "0xE4C950", VA = "0xE4C950")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001FC")]
		public int BonusXP
		{
			[Token(Token = "0x6000E84")]
			[Address(RVA = "0xE4CA60", Offset = "0xE4CA60", VA = "0xE4CA60")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001FD")]
		public int BaseXP
		{
			[Token(Token = "0x6000E85")]
			[Address(RVA = "0xE4C9B8", Offset = "0xE4C9B8", VA = "0xE4C9B8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001FE")]
		public virtual JSONNode bonusesJson
		{
			[Token(Token = "0x6000E87")]
			[Address(RVA = "0xE4D5FC", Offset = "0xE4D5FC", VA = "0xE4D5FC", Slot = "10")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001FF")]
		public bool WasShutout
		{
			[Token(Token = "0x6000E89")]
			[Address(RVA = "0xE4CB84", Offset = "0xE4CB84", VA = "0xE4CB84")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000200")]
		public bool WasOneHanded
		{
			[Token(Token = "0x6000E8A")]
			[Address(RVA = "0xE4D288", Offset = "0xE4D288", VA = "0xE4D288")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000201")]
		public bool WasEvenHanded
		{
			[Token(Token = "0x6000E8B")]
			[Address(RVA = "0xE4D358", Offset = "0xE4D358", VA = "0xE4D358")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000202")]
		public bool WasPowerless
		{
			[Token(Token = "0x6000E8C")]
			[Address(RVA = "0xE4D400", Offset = "0xE4D400", VA = "0xE4D400")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000203")]
		public bool WasPowerful
		{
			[Token(Token = "0x6000E8D")]
			[Address(RVA = "0xE4D4D4", Offset = "0xE4D4D4", VA = "0xE4D4D4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000204")]
		public bool WasVeryPowerful
		{
			[Token(Token = "0x6000E8E")]
			[Address(RVA = "0xE4D568", Offset = "0xE4D568", VA = "0xE4D568")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000205")]
		public bool WasSuperClose
		{
			[Token(Token = "0x6000E8F")]
			[Address(RVA = "0xE4D494", Offset = "0xE4D494", VA = "0xE4D494")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000E7C")]
		[Address(RVA = "0xE4AE98", Offset = "0xE4AE98", VA = "0xE4AE98")]
		public static Match create(JSONNode j)
		{
			return null;
		}

		[Token(Token = "0x6000E7D")]
		[Address(RVA = "0xE4AF14", Offset = "0xE4AF14", VA = "0xE4AF14")]
		public static Match create(string a, string b, string arena)
		{
			return null;
		}

		[Token(Token = "0x6000E7E")]
		[Address(RVA = "0xE4B014", Offset = "0xE4B014", VA = "0xE4B014", Slot = "6")]
		public override void Reset()
		{
		}

		[Token(Token = "0x6000E7F")]
		[Address(RVA = "0xE4B108", Offset = "0xE4B108", VA = "0xE4B108", Slot = "7")]
		public override void Init(JSONNode j)
		{
		}

		[Token(Token = "0x6000E80")]
		[Address(RVA = "0xE4BAE4", Offset = "0xE4BAE4", VA = "0xE4BAE4")]
		public void RecordResult(int aScore, int bScore)
		{
		}

		[Token(Token = "0x6000E82")]
		[Address(RVA = "0xE4C0E0", Offset = "0xE4C0E0", VA = "0xE4C0E0")]
		public void UpdateFrom(ExitGames.Client.Photon.Hashtable h)
		{
		}

		[Token(Token = "0x6000E86")]
		[Address(RVA = "0xE4CC64", Offset = "0xE4CC64", VA = "0xE4CC64")]
		public Dictionary<string, int> XPBonus()
		{
			return null;
		}

		[Token(Token = "0x6000E88")]
		[Address(RVA = "0xE4CBF8", Offset = "0xE4CBF8", VA = "0xE4CBF8")]
		public float OpponentMultiplier()
		{
			return default(float);
		}

		[Token(Token = "0x6000E90")]
		[Address(RVA = "0xE4D9BC", Offset = "0xE4D9BC", VA = "0xE4D9BC")]
		public Match()
		{
		}
	}
	[Token(Token = "0x20002CA")]
	public class MatchDisplay : MatchDisplayer
	{
		[Token(Token = "0x4000E21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UIText playerAName;

		[Token(Token = "0x4000E22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UIText playerAScore;

		[Token(Token = "0x4000E23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject playerAModelAttachPoint;

		[Token(Token = "0x4000E24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject playerAOptions;

		[Token(Token = "0x4000E25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public UIText playerBName;

		[Token(Token = "0x4000E26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public UIText playerBScore;

		[Token(Token = "0x4000E27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public GameObject playerBModelAttachPoint;

		[Token(Token = "0x4000E28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public GameObject playerBOptions;

		[Token(Token = "0x6000E91")]
		[Address(RVA = "0xE50804", Offset = "0xE50804", VA = "0xE50804", Slot = "4")]
		public override void UpdateDisplay()
		{
		}

		[Token(Token = "0x6000E92")]
		[Address(RVA = "0xE50C10", Offset = "0xE50C10", VA = "0xE50C10")]
		public MatchDisplay()
		{
		}
	}
	[Token(Token = "0x20002CB")]
	public abstract class MatchDisplayer : MonoBehaviour
	{
		[Token(Token = "0x4000E29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected Match match;

		[Token(Token = "0x17000206")]
		public Match Match
		{
			[Token(Token = "0x6000E93")]
			[Address(RVA = "0xE50C20", Offset = "0xE50C20", VA = "0xE50C20")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E94")]
			[Address(RVA = "0xE50C28", Offset = "0xE50C28", VA = "0xE50C28")]
			set
			{
			}
		}

		[Token(Token = "0x6000E95")]
		[Address(RVA = "0xE50C38", Offset = "0xE50C38", VA = "0xE50C38")]
		private void Update()
		{
		}

		[Token(Token = "0x6000E96")]
		[Address(RVA = "0xE50CEC", Offset = "0xE50CEC", VA = "0xE50CEC")]
		public void PlayMatch()
		{
		}

		[Token(Token = "0x6000E97")]
		public abstract void UpdateDisplay();

		[Token(Token = "0x6000E98")]
		[Address(RVA = "0xE50E34", Offset = "0xE50E34", VA = "0xE50E34")]
		protected bool InitDisplay()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E99")]
		[Address(RVA = "0xE50C18", Offset = "0xE50C18", VA = "0xE50C18")]
		protected MatchDisplayer()
		{
		}
	}
	[Token(Token = "0x20002CC")]
	public class MatchFinder : MonoBehaviour
	{
		[Token(Token = "0x6000E9A")]
		[Address(RVA = "0xE51024", Offset = "0xE51024", VA = "0xE51024")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000E9B")]
		[Address(RVA = "0xE5117C", Offset = "0xE5117C", VA = "0xE5117C")]
		public MatchFinder()
		{
		}
	}
	[Token(Token = "0x20002CD")]
	public class MatchIconDisplay : MonoBehaviour
	{
		[Token(Token = "0x4000E2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float iconWidth;

		[Token(Token = "0x4000E2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected List<MatchIcon> icons;

		[Token(Token = "0x4000E2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool moveIcons;

		[Token(Token = "0x6000E9C")]
		[Address(RVA = "0xE511E4", Offset = "0xE511E4", VA = "0xE511E4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000E9D")]
		[Address(RVA = "0xE51298", Offset = "0xE51298", VA = "0xE51298")]
		public void UpdateDisplay(Match match)
		{
		}

		[Token(Token = "0x6000E9E")]
		[Address(RVA = "0xE51664", Offset = "0xE51664", VA = "0xE51664")]
		public MatchIconDisplay()
		{
		}
	}
	[Token(Token = "0x20002CE")]
	public abstract class MatchMaker : MonoBehaviour
	{
		[Token(Token = "0x4000E2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public StringVariable ArenaName;

		[Token(Token = "0x4000E2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public IntVariable GoalScore;

		[Token(Token = "0x4000E2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public IntVariable GoalTime;

		[Token(Token = "0x4000E30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public EnumVariable GlovesAllowed;

		[Token(Token = "0x4000E31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public EnumVariable Hands;

		[Token(Token = "0x4000E32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public BoolVariable MoveOnHit;

		[Token(Token = "0x4000E33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public IntVariable NumBlocks;

		[Token(Token = "0x4000E34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public BoolVariable SplitOnHit;

		[Token(Token = "0x4000E35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public EnumVariable ValueOnHit;

		[Token(Token = "0x4000E36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public EnumVariable ValueOnStart;

		[Token(Token = "0x4000E37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public BoolVariable CanLoseGloves;

		[Token(Token = "0x4000E38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public MatchDisplayer DisplayMatch;

		[Token(Token = "0x6000E9F")]
		[Address(RVA = "0xE52138", Offset = "0xE52138", VA = "0xE52138", Slot = "4")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x6000EA0")]
		[Address(RVA = "0xE526C8", Offset = "0xE526C8", VA = "0xE526C8", Slot = "5")]
		protected virtual void Destroy()
		{
		}

		[Token(Token = "0x6000EA1")]
		public abstract Match BuildMatch();

		[Token(Token = "0x6000EA2")]
		[Address(RVA = "0xE52C58", Offset = "0xE52C58", VA = "0xE52C58", Slot = "7")]
		protected virtual void AppendMatch(Match m)
		{
		}

		[Token(Token = "0x6000EA3")]
		[Address(RVA = "0xE532BC", Offset = "0xE532BC", VA = "0xE532BC", Slot = "8")]
		protected virtual void UpdateMatch()
		{
		}

		[Token(Token = "0x6000EA4")]
		[Address(RVA = "0xE533A4", Offset = "0xE533A4", VA = "0xE533A4", Slot = "9")]
		public virtual void ResetParameters()
		{
		}

		[Token(Token = "0x6000EA5")]
		[Address(RVA = "0xE536A8", Offset = "0xE536A8", VA = "0xE536A8", Slot = "10")]
		public virtual void RandomizeParameters()
		{
		}

		[Token(Token = "0x6000EA6")]
		[Address(RVA = "0xE53FF4", Offset = "0xE53FF4", VA = "0xE53FF4")]
		public Match BuildMatchFrom(Match match)
		{
			return null;
		}

		[Token(Token = "0x6000EA7")]
		[Address(RVA = "0xE54234", Offset = "0xE54234", VA = "0xE54234")]
		protected MatchMaker()
		{
		}
	}
	[Token(Token = "0x20002CF")]
	public class MatchMakerChallenge : MatchMakerSingle
	{
		[Token(Token = "0x20002D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x770894", Offset = "0x770894")]
		private sealed class <>c__DisplayClass3_0
		{
			[Token(Token = "0x4000E3A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public MatchMakerChallenge <>4__this;

			[Token(Token = "0x4000E3B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public IntVariable secondsLeft;

			[Token(Token = "0x4000E3C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public IntVariable secondsLeftWeekly;

			[Token(Token = "0x4000E3D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Action callback;

			[Token(Token = "0x6000EAC")]
			[Address(RVA = "0xB2DEA4", Offset = "0xB2DEA4", VA = "0xB2DEA4")]
			public <>c__DisplayClass3_0()
			{
			}

			[Token(Token = "0x6000EAD")]
			[Address(RVA = "0xB2DEAC", Offset = "0xB2DEAC", VA = "0xB2DEAC")]
			internal void <LoadDailyChallenge>b__0(JSONNode json)
			{
			}
		}

		[Token(Token = "0x4000E39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public DailyChallenges Challenges;

		[Token(Token = "0x6000EA8")]
		[Address(RVA = "0xE5423C", Offset = "0xE5423C", VA = "0xE5423C", Slot = "6")]
		public override Match BuildMatch()
		{
			return null;
		}

		[Token(Token = "0x6000EA9")]
		[Address(RVA = "0xE542F8", Offset = "0xE542F8", VA = "0xE542F8", Slot = "10")]
		public override void RandomizeParameters()
		{
		}

		[Token(Token = "0x6000EAA")]
		[Address(RVA = "0xE54668", Offset = "0xE54668", VA = "0xE54668")]
		public void LoadDailyChallenge(Action callback, IntVariable secondsLeft, IntVariable secondsLeftWeekly)
		{
		}

		[Token(Token = "0x6000EAB")]
		[Address(RVA = "0xE54768", Offset = "0xE54768", VA = "0xE54768")]
		public MatchMakerChallenge()
		{
		}
	}
	[Token(Token = "0x20002D1")]
	public class MatchMakerDisplay : MatchDisplayer
	{
		[Token(Token = "0x4000E3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ArenaDisplay arena;

		[Token(Token = "0x4000E3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<MatchIconDisplay> iconDisplays;

		[Token(Token = "0x6000EAE")]
		[Address(RVA = "0xE54778", Offset = "0xE54778", VA = "0xE54778", Slot = "4")]
		public override void UpdateDisplay()
		{
		}

		[Token(Token = "0x6000EAF")]
		[Address(RVA = "0xE54934", Offset = "0xE54934", VA = "0xE54934")]
		public MatchMakerDisplay()
		{
		}
	}
	[Token(Token = "0x20002D2")]
	public class MatchMakerLeague : MatchMakerSingle
	{
		[Token(Token = "0x6000EB0")]
		[Address(RVA = "0xE549AC", Offset = "0xE549AC", VA = "0xE549AC", Slot = "6")]
		public override Match BuildMatch()
		{
			return null;
		}

		[Token(Token = "0x6000EB1")]
		[Address(RVA = "0xE54A28", Offset = "0xE54A28", VA = "0xE54A28")]
		public MatchMakerLeague()
		{
		}
	}
	[Token(Token = "0x20002D3")]
	public class MatchMakerMultiplayer : MatchMaker
	{
		[Token(Token = "0x6000EB2")]
		[Address(RVA = "0xE54A30", Offset = "0xE54A30", VA = "0xE54A30", Slot = "6")]
		public override Match BuildMatch()
		{
			return null;
		}

		[Token(Token = "0x6000EB3")]
		[Address(RVA = "0xE54AB8", Offset = "0xE54AB8", VA = "0xE54AB8")]
		public MatchMakerMultiplayer()
		{
		}
	}
	[Token(Token = "0x20002D4")]
	public class MatchMakerSingle : MatchMaker
	{
		[Token(Token = "0x4000E40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public EnumVariable AIDifficulty;

		[Token(Token = "0x4000E41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public DroneList EasyDrones;

		[Token(Token = "0x4000E42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public DroneList MediumDrones;

		[Token(Token = "0x4000E43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public DroneList HardDrones;

		[Token(Token = "0x4000E44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public DroneList ExpertDrones;

		[Token(Token = "0x4000E45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public DroneList SpecialDrones;

		[Token(Token = "0x6000EB4")]
		[Address(RVA = "0xE54AC0", Offset = "0xE54AC0", VA = "0xE54AC0", Slot = "4")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000EB5")]
		[Address(RVA = "0xE54B98", Offset = "0xE54B98", VA = "0xE54B98", Slot = "5")]
		protected override void Destroy()
		{
		}

		[Token(Token = "0x6000EB6")]
		[Address(RVA = "0xE54C70", Offset = "0xE54C70", VA = "0xE54C70", Slot = "6")]
		public override Match BuildMatch()
		{
			return null;
		}

		[Token(Token = "0x6000EB7")]
		[Address(RVA = "0xE54CEC", Offset = "0xE54CEC", VA = "0xE54CEC", Slot = "7")]
		protected override void AppendMatch(Match m)
		{
		}

		[Token(Token = "0x6000EB8")]
		[Address(RVA = "0xE544B0", Offset = "0xE544B0", VA = "0xE544B0", Slot = "10")]
		public override void RandomizeParameters()
		{
		}

		[Token(Token = "0x6000EB9")]
		[Address(RVA = "0xE54770", Offset = "0xE54770", VA = "0xE54770")]
		public MatchMakerSingle()
		{
		}
	}
	[Token(Token = "0x20002D5")]
	public class MatchMakerTutorial : MatchMaker
	{
		[Token(Token = "0x4000E46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public DroneList EasyDrones;

		[Token(Token = "0x6000EBA")]
		[Address(RVA = "0xE55000", Offset = "0xE55000", VA = "0xE55000", Slot = "6")]
		public override Match BuildMatch()
		{
			return null;
		}

		[Token(Token = "0x6000EBB")]
		[Address(RVA = "0xE5507C", Offset = "0xE5507C", VA = "0xE5507C", Slot = "7")]
		protected override void AppendMatch(Match m)
		{
		}

		[Token(Token = "0x6000EBC")]
		[Address(RVA = "0xE55188", Offset = "0xE55188", VA = "0xE55188")]
		public MatchMakerTutorial()
		{
		}
	}
	[Token(Token = "0x20002D6")]
	public class MatchManager : MonoBehaviour
	{
		[Token(Token = "0x4000E47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected bool waitingForMatchData;

		[Token(Token = "0x4000E48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ArenaList arenas;

		[Token(Token = "0x4000E49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UnityEvent OnNewGame;

		[Token(Token = "0x4000E4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected Match match;

		[Token(Token = "0x17000207")]
		public Match Match
		{
			[Token(Token = "0x6000EBD")]
			[Address(RVA = "0xE55190", Offset = "0xE55190", VA = "0xE55190")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000208")]
		public string ArenaName
		{
			[Token(Token = "0x6000EBE")]
			[Address(RVA = "0xE520F4", Offset = "0xE520F4", VA = "0xE520F4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000EBF")]
		[Address(RVA = "0xE55198", Offset = "0xE55198", VA = "0xE55198")]
		private void Update()
		{
		}

		[Token(Token = "0x6000EC0")]
		[Address(RVA = "0xE553C8", Offset = "0xE553C8", VA = "0xE553C8")]
		public void Play(Match m)
		{
		}

		[Token(Token = "0x6000EC1")]
		[Address(RVA = "0xE556B8", Offset = "0xE556B8", VA = "0xE556B8")]
		public void PlayRematch(Match m)
		{
		}

		[Token(Token = "0x6000EC2")]
		[Address(RVA = "0xE55B78", Offset = "0xE55B78", VA = "0xE55B78")]
		public void Quit()
		{
		}

		[Token(Token = "0x6000EC3")]
		[Address(RVA = "0xE55D28", Offset = "0xE55D28", VA = "0xE55D28")]
		public void Join()
		{
		}

		[Token(Token = "0x6000EC4")]
		[Address(RVA = "0xE55A58", Offset = "0xE55A58", VA = "0xE55A58")]
		protected void BeginSinglePlayerMatch()
		{
		}

		[Token(Token = "0x6000EC5")]
		[Address(RVA = "0xE557B8", Offset = "0xE557B8", VA = "0xE557B8")]
		protected void BeginMultiPlayerMatch()
		{
		}

		[Token(Token = "0x6000EC6")]
		[Address(RVA = "0xE558EC", Offset = "0xE558EC", VA = "0xE558EC")]
		protected void JoinMultiPlayerMatch()
		{
		}

		[Token(Token = "0x6000EC7")]
		[Address(RVA = "0xE55360", Offset = "0xE55360", VA = "0xE55360")]
		protected void CheckMatch(Match m)
		{
		}

		[Token(Token = "0x6000EC8")]
		[Address(RVA = "0xE55DE0", Offset = "0xE55DE0", VA = "0xE55DE0")]
		public MatchManager()
		{
		}
	}
	[Token(Token = "0x20002D7")]
	public class MatchManagerReference : MonoBehaviour
	{
		[Token(Token = "0x4000E4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MatchMaker matchMaker;

		[Token(Token = "0x6000EC9")]
		[Address(RVA = "0xE55DE8", Offset = "0xE55DE8", VA = "0xE55DE8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000ECA")]
		[Address(RVA = "0xE55E80", Offset = "0xE55E80", VA = "0xE55E80")]
		public void Play(Match m)
		{
		}

		[Token(Token = "0x6000ECB")]
		[Address(RVA = "0xE55EB0", Offset = "0xE55EB0", VA = "0xE55EB0")]
		public void Join()
		{
		}

		[Token(Token = "0x6000ECC")]
		[Address(RVA = "0xE55ED0", Offset = "0xE55ED0", VA = "0xE55ED0")]
		public void Quit()
		{
		}

		[Token(Token = "0x6000ECD")]
		[Address(RVA = "0xE55EF0", Offset = "0xE55EF0", VA = "0xE55EF0")]
		public void BuildAndPlay()
		{
		}

		[Token(Token = "0x6000ECE")]
		[Address(RVA = "0xE5600C", Offset = "0xE5600C", VA = "0xE5600C")]
		public MatchManagerReference()
		{
		}
	}
	[Token(Token = "0x20002D8")]
	public class MatchMultiDisplayer : MatchDisplayer
	{
		[Token(Token = "0x4000E4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<MatchDisplayer> displayers;

		[Token(Token = "0x6000ECF")]
		[Address(RVA = "0xE56014", Offset = "0xE56014", VA = "0xE56014", Slot = "4")]
		public override void UpdateDisplay()
		{
		}

		[Token(Token = "0x6000ED0")]
		[Address(RVA = "0xE56154", Offset = "0xE56154", VA = "0xE56154")]
		public MatchMultiDisplayer()
		{
		}
	}
	[Token(Token = "0x20002D9")]
	public class MatchPlayer : PersistentData
	{
		[Token(Token = "0x4000E4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected string uid;

		[Token(Token = "0x4000E4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected int score;

		[Token(Token = "0x4000E4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string leftGloveUID;

		[Token(Token = "0x4000E50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string rightGloveUID;

		[Token(Token = "0x17000209")]
		public string UID
		{
			[Token(Token = "0x6000ED1")]
			[Address(RVA = "0xE561CC", Offset = "0xE561CC", VA = "0xE561CC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000ED2")]
			[Address(RVA = "0xE561D4", Offset = "0xE561D4", VA = "0xE561D4")]
			set
			{
			}
		}

		[Token(Token = "0x1700020A")]
		public int Score
		{
			[Token(Token = "0x6000ED3")]
			[Address(RVA = "0xE561DC", Offset = "0xE561DC", VA = "0xE561DC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000ED4")]
			[Address(RVA = "0xE561E4", Offset = "0xE561E4", VA = "0xE561E4")]
			set
			{
			}
		}

		[Token(Token = "0x1700020B")]
		public bool IsPlayer
		{
			[Token(Token = "0x6000ED5")]
			[Address(RVA = "0xE4A114", Offset = "0xE4A114", VA = "0xE4A114")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700020C")]
		public override JSONNode json
		{
			[Token(Token = "0x6000ED6")]
			[Address(RVA = "0xE561EC", Offset = "0xE561EC", VA = "0xE561EC", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000ED7")]
		[Address(RVA = "0xE4BA68", Offset = "0xE4BA68", VA = "0xE4BA68")]
		public static MatchPlayer create(JSONNode j)
		{
			return null;
		}

		[Token(Token = "0x6000ED8")]
		[Address(RVA = "0xE4AFA8", Offset = "0xE4AFA8", VA = "0xE4AFA8")]
		public static MatchPlayer create(string u)
		{
			return null;
		}

		[Token(Token = "0x6000ED9")]
		[Address(RVA = "0xE562F8", Offset = "0xE562F8", VA = "0xE562F8", Slot = "6")]
		public override void Reset()
		{
		}

		[Token(Token = "0x6000EDA")]
		[Address(RVA = "0xE56348", Offset = "0xE56348", VA = "0xE56348", Slot = "7")]
		public override void Init(JSONNode j)
		{
		}

		[Token(Token = "0x6000EDB")]
		[Address(RVA = "0xE56478", Offset = "0xE56478", VA = "0xE56478")]
		public MatchPlayer()
		{
		}
	}
	[Token(Token = "0x20002DA")]
	public class MatchSimulator : MonoBehaviour
	{
		[Token(Token = "0x4000E51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public LeagueMatch match;

		[Token(Token = "0x4000E52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public League league;

		[Token(Token = "0x4000E53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool simulating;

		[Token(Token = "0x4000E54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float stepSpeed;

		[Token(Token = "0x4000E55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected float stepTimer;

		[Token(Token = "0x4000E56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public UnityEvent OnStart;

		[Token(Token = "0x4000E57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public UnityEvent OnUpdate;

		[Token(Token = "0x4000E58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public UnityEvent OnComplete;

		[Token(Token = "0x6000EDC")]
		[Address(RVA = "0xE564CC", Offset = "0xE564CC", VA = "0xE564CC")]
		private void Update()
		{
		}

		[Token(Token = "0x6000EDD")]
		[Address(RVA = "0xE51E04", Offset = "0xE51E04", VA = "0xE51E04")]
		public void Go()
		{
		}

		[Token(Token = "0x6000EDE")]
		[Address(RVA = "0xE56640", Offset = "0xE56640", VA = "0xE56640")]
		public MatchSimulator()
		{
		}
	}
	[Token(Token = "0x20002DB")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x7708A4", Offset = "0x7708A4")]
	public class MatchStats : PersistentData
	{
		[Token(Token = "0x4000E59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected Dictionary<string, int> stats;

		[Token(Token = "0x4000E5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Dictionary<int, int> blocksHit;

		[Token(Token = "0x4000E5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Dictionary<int, int> blocksScored;

		[Token(Token = "0x4000E5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Dictionary<int, int> blocksScoredOn;

		[Token(Token = "0x4000E5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected float startTime;

		[Token(Token = "0x1700020D")]
		public int Seconds
		{
			[Token(Token = "0x6000EDF")]
			[Address(RVA = "0xE4D138", Offset = "0xE4D138", VA = "0xE4D138")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700020E")]
		public int TotalHits
		{
			[Token(Token = "0x6000EE0")]
			[Address(RVA = "0xE4D1E0", Offset = "0xE4D1E0", VA = "0xE4D1E0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700020F")]
		public int LeftHits
		{
			[Token(Token = "0x6000EE1")]
			[Address(RVA = "0xE4D7C4", Offset = "0xE4D7C4", VA = "0xE4D7C4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000210")]
		public int RightHits
		{
			[Token(Token = "0x6000EE2")]
			[Address(RVA = "0xE4D86C", Offset = "0xE4D86C", VA = "0xE4D86C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000211")]
		public int PowerUpsUsed
		{
			[Token(Token = "0x6000EE3")]
			[Address(RVA = "0xE4D914", Offset = "0xE4D914", VA = "0xE4D914")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000212")]
		public int Timer
		{
			[Token(Token = "0x6000EE9")]
			[Address(RVA = "0xE4F540", Offset = "0xE4F540", VA = "0xE4F540")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000213")]
		public override JSONNode json
		{
			[Token(Token = "0x6000EEB")]
			[Address(RVA = "0xE56D3C", Offset = "0xE56D3C", VA = "0xE56D3C", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000EE4")]
		[Address(RVA = "0xE56650", Offset = "0xE56650", VA = "0xE56650")]
		public void Hit(bool IsRight, Block block)
		{
		}

		[Token(Token = "0x6000EE5")]
		[Address(RVA = "0xE56910", Offset = "0xE56910", VA = "0xE56910")]
		public void PowerUp(bool IsRight)
		{
		}

		[Token(Token = "0x6000EE6")]
		[Address(RVA = "0xE56A00", Offset = "0xE56A00", VA = "0xE56A00")]
		public void Score(Block block)
		{
		}

		[Token(Token = "0x6000EE7")]
		[Address(RVA = "0xE56B1C", Offset = "0xE56B1C", VA = "0xE56B1C")]
		public void OpScore(Block block)
		{
		}

		[Token(Token = "0x6000EE8")]
		[Address(RVA = "0xE56C38", Offset = "0xE56C38", VA = "0xE56C38")]
		public void StartTimer()
		{
		}

		[Token(Token = "0x6000EEA")]
		[Address(RVA = "0xE56C60", Offset = "0xE56C60", VA = "0xE56C60")]
		public void StopTimer()
		{
		}

		[Token(Token = "0x6000EEC")]
		[Address(RVA = "0xE573F8", Offset = "0xE573F8", VA = "0xE573F8", Slot = "6")]
		public override void Reset()
		{
		}

		[Token(Token = "0x6000EED")]
		[Address(RVA = "0xE57570", Offset = "0xE57570", VA = "0xE57570", Slot = "7")]
		public override void Init(JSONNode j)
		{
		}

		[Token(Token = "0x6000EEE")]
		[Address(RVA = "0xE57CA4", Offset = "0xE57CA4", VA = "0xE57CA4")]
		public MatchStats()
		{
		}
	}
	[Token(Token = "0x20002DC")]
	public class MultiplayerMatch : Match
	{
		[Token(Token = "0x17000214")]
		public override MatchType Type
		{
			[Token(Token = "0x6000EEF")]
			[Address(RVA = "0xB93838", Offset = "0xB93838", VA = "0xB93838", Slot = "8")]
			get
			{
				return default(MatchType);
			}
		}

		[Token(Token = "0x6000EF0")]
		[Address(RVA = "0xB93840", Offset = "0xB93840", VA = "0xB93840")]
		public new static MultiplayerMatch create(string a, string b, string arena)
		{
			return null;
		}

		[Token(Token = "0x6000EF1")]
		[Address(RVA = "0xB938DC", Offset = "0xB938DC", VA = "0xB938DC", Slot = "6")]
		public override void Reset()
		{
		}

		[Token(Token = "0x6000EF2")]
		[Address(RVA = "0xB939B8", Offset = "0xB939B8", VA = "0xB939B8")]
		public MultiplayerMatch()
		{
		}
	}
	[Token(Token = "0x20002DD")]
	public class PlayerMatchDisplay : MatchDisplayer
	{
		[Token(Token = "0x4000E5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UIText playerName;

		[Token(Token = "0x4000E5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UIText playerScore;

		[Token(Token = "0x4000E60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject gloves;

		[Token(Token = "0x4000E61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GloveDisplay leftGlove;

		[Token(Token = "0x4000E62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GloveDisplay rightGlove;

		[Token(Token = "0x4000E63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public DroneDisplay buddyDrone;

		[Token(Token = "0x4000E64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public GameObject dronePanel;

		[Token(Token = "0x4000E65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public UIText droneName;

		[Token(Token = "0x4000E66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public GameObject dronePowerPanel;

		[Token(Token = "0x4000E67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public UIText dronePowers;

		[Token(Token = "0x4000E68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public UIText droneScore;

		[Token(Token = "0x4000E69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public GameObject droneModelAttachPoint;

		[Token(Token = "0x4000E6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		protected string currentDroneModel;

		[Token(Token = "0x4000E6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public UIText droneRecordVs;

		[Token(Token = "0x4000E6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public GameObject opponentPanel;

		[Token(Token = "0x4000E6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public UIText opponentName;

		[Token(Token = "0x4000E6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public GloveDisplay opponentLeftGlove;

		[Token(Token = "0x4000E6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public GloveDisplay opponentRightGlove;

		[Token(Token = "0x4000E70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public DroneDisplay opponentBuddyDrone;

		[Token(Token = "0x4000E71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public ArenaDisplay arena;

		[Token(Token = "0x4000E72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public MatchIconDisplay iconDisplay;

		[Token(Token = "0x6000EF3")]
		[Address(RVA = "0xC4802C", Offset = "0xC4802C", VA = "0xC4802C", Slot = "4")]
		public override void UpdateDisplay()
		{
		}

		[Token(Token = "0x6000EF4")]
		[Address(RVA = "0xC48F58", Offset = "0xC48F58", VA = "0xC48F58")]
		public PlayerMatchDisplay()
		{
		}
	}
	[Token(Token = "0x20002DE")]
	public class PostMatchDisplay : MatchDisplay
	{
		[Token(Token = "0x4000E73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public GameObject ifWon;

		[Token(Token = "0x4000E74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public GameObject ifLost;

		[Token(Token = "0x4000E75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public UIText coinsWon;

		[Token(Token = "0x4000E76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public UIText xpGained;

		[Token(Token = "0x4000E77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public UIText xpDetails;

		[Token(Token = "0x4000E78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public UIText xpBonusesCol1;

		[Token(Token = "0x4000E79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public UIText xpBonusesCol2;

		[Token(Token = "0x4000E7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public GameObject ifShutout;

		[Token(Token = "0x6000EF5")]
		[Address(RVA = "0xC4A0B8", Offset = "0xC4A0B8", VA = "0xC4A0B8", Slot = "4")]
		public override void UpdateDisplay()
		{
		}

		[Token(Token = "0x6000EF6")]
		[Address(RVA = "0xC4A540", Offset = "0xC4A540", VA = "0xC4A540")]
		protected string XPDetailsText()
		{
			return null;
		}

		[Token(Token = "0x6000EF7")]
		[Address(RVA = "0xC4A804", Offset = "0xC4A804", VA = "0xC4A804")]
		protected List<string> XPBonusText(int cols = 2)
		{
			return null;
		}

		[Token(Token = "0x6000EF8")]
		[Address(RVA = "0xC4AB3C", Offset = "0xC4AB3C", VA = "0xC4AB3C")]
		public PostMatchDisplay()
		{
		}
	}
	[Token(Token = "0x20002DF")]
	public class SingleMatchDescriber : MatchDisplayer
	{
		[Token(Token = "0x4000E7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UIText droneName;

		[Token(Token = "0x4000E7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ArenaDisplay arena;

		[Token(Token = "0x4000E7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public UIText pointsToWin;

		[Token(Token = "0x4000E7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public UIText timeToPlay;

		[Token(Token = "0x4000E7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public UIText coinsAwarded;

		[Token(Token = "0x4000E80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public UIText modifiers;

		[Token(Token = "0x6000EF9")]
		[Address(RVA = "0xB7C71C", Offset = "0xB7C71C", VA = "0xB7C71C", Slot = "4")]
		public override void UpdateDisplay()
		{
		}

		[Token(Token = "0x6000EFA")]
		[Address(RVA = "0xB7CA84", Offset = "0xB7CA84", VA = "0xB7CA84")]
		public string ModifiersText()
		{
			return null;
		}

		[Token(Token = "0x6000EFB")]
		[Address(RVA = "0xB7CD4C", Offset = "0xB7CD4C", VA = "0xB7CD4C")]
		public SingleMatchDescriber()
		{
		}
	}
	[Token(Token = "0x20002E0")]
	public class TutorialMatch : Match
	{
		[Token(Token = "0x17000215")]
		public override MatchType Type
		{
			[Token(Token = "0x6000EFC")]
			[Address(RVA = "0xAF596C", Offset = "0xAF596C", VA = "0xAF596C", Slot = "8")]
			get
			{
				return default(MatchType);
			}
		}

		[Token(Token = "0x6000EFD")]
		[Address(RVA = "0xAF5974", Offset = "0xAF5974", VA = "0xAF5974", Slot = "6")]
		public override void Reset()
		{
		}

		[Token(Token = "0x6000EFE")]
		[Address(RVA = "0xAF59B0", Offset = "0xAF59B0", VA = "0xAF59B0")]
		public new static TutorialMatch create(JSONNode j)
		{
			return null;
		}

		[Token(Token = "0x6000EFF")]
		[Address(RVA = "0xAF5A2C", Offset = "0xAF5A2C", VA = "0xAF5A2C")]
		public TutorialMatch()
		{
		}
	}
	[Token(Token = "0x20002E1")]
	public class MenuDroneController : MonoBehaviour
	{
		[Token(Token = "0x4000E81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject droneObject;

		[Token(Token = "0x4000E82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject attachPoint;

		[Token(Token = "0x4000E83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public StringVariable activeDrone;

		[Token(Token = "0x6000F00")]
		[Address(RVA = "0xB8DA9C", Offset = "0xB8DA9C", VA = "0xB8DA9C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000F01")]
		[Address(RVA = "0xB8DDA8", Offset = "0xB8DDA8", VA = "0xB8DDA8")]
		private void Destroy()
		{
		}

		[Token(Token = "0x6000F02")]
		[Address(RVA = "0xB8DB84", Offset = "0xB8DB84", VA = "0xB8DB84")]
		protected void UpdateDrone()
		{
		}

		[Token(Token = "0x6000F03")]
		[Address(RVA = "0xB8E19C", Offset = "0xB8E19C", VA = "0xB8E19C")]
		public MenuDroneController()
		{
		}
	}
	[Token(Token = "0x20002E2")]
	public class MenuManager : MonoBehaviour
	{
		[Token(Token = "0x4000E84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform startingPoint;

		[Token(Token = "0x4000E85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject Menu;

		[Token(Token = "0x4000E86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public BoolVariable SeenTutorial;

		[Token(Token = "0x4000E87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public BoolVariable SeenDroneTutorial;

		[Token(Token = "0x4000E88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public TutorialController Tutorial;

		[Token(Token = "0x4000E89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public StringVariable LastPlayed;

		[Token(Token = "0x4000E8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public KeyValueList newAwardsList;

		[Token(Token = "0x4000E8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public WelcomeBackController WelcomeBack;

		[Token(Token = "0x4000E8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public StringVariable CurrentMenu;

		[Token(Token = "0x17000216")]
		public bool InTutorial
		{
			[Token(Token = "0x6000F05")]
			[Address(RVA = "0xB8E5D4", Offset = "0xB8E5D4", VA = "0xB8E5D4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000217")]
		public bool InDroneTutorial
		{
			[Token(Token = "0x6000F06")]
			[Address(RVA = "0xB8EA64", Offset = "0xB8EA64", VA = "0xB8EA64")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000218")]
		public bool IsReturning
		{
			[Token(Token = "0x6000F07")]
			[Address(RVA = "0xB8E8B0", Offset = "0xB8E8B0", VA = "0xB8E8B0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000219")]
		public bool HasAwards
		{
			[Token(Token = "0x6000F08")]
			[Address(RVA = "0xB8E9CC", Offset = "0xB8E9CC", VA = "0xB8E9CC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000F04")]
		[Address(RVA = "0xB8E1A4", Offset = "0xB8E1A4", VA = "0xB8E1A4")]
		private void Start()
		{
		}

		[Token(Token = "0x6000F09")]
		[Address(RVA = "0xB8E80C", Offset = "0xB8E80C", VA = "0xB8E80C")]
		public void ShowMenu(bool show = true)
		{
		}

		[Token(Token = "0x6000F0A")]
		[Address(RVA = "0xB8E74C", Offset = "0xB8E74C", VA = "0xB8E74C")]
		public void ShowWelcomeBack(bool show = true)
		{
		}

		[Token(Token = "0x6000F0B")]
		[Address(RVA = "0xB8E670", Offset = "0xB8E670", VA = "0xB8E670")]
		public void ShowTutorial(bool show = true, bool drone = false)
		{
		}

		[Token(Token = "0x6000F0C")]
		[Address(RVA = "0xB8EB18", Offset = "0xB8EB18", VA = "0xB8EB18")]
		public void Quit()
		{
		}

		[Token(Token = "0x6000F0D")]
		[Address(RVA = "0xB8EB3C", Offset = "0xB8EB3C", VA = "0xB8EB3C")]
		public MenuManager()
		{
		}

		[Token(Token = "0x6000F0E")]
		[Address(RVA = "0xB8EB44", Offset = "0xB8EB44", VA = "0xB8EB44")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x777438", Offset = "0x777438")]
		private void <Start>b__9_0()
		{
		}

		[Token(Token = "0x6000F0F")]
		[Address(RVA = "0xB8EC50", Offset = "0xB8EC50", VA = "0xB8EC50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x777448", Offset = "0x777448")]
		private void <Start>b__9_1()
		{
		}
	}
	[Token(Token = "0x20002E3")]
	public class MinimalEquipment : MonoBehaviour
	{
		[Token(Token = "0x4000E8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Glove bareHand;

		[Token(Token = "0x4000E8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public KeyValueList inventoryList;

		[Token(Token = "0x6000F10")]
		[Address(RVA = "0xB8F6F0", Offset = "0xB8F6F0", VA = "0xB8F6F0")]
		public void EnsureInventory()
		{
		}

		[Token(Token = "0x6000F11")]
		[Address(RVA = "0xB8F80C", Offset = "0xB8F80C", VA = "0xB8F80C")]
		public MinimalEquipment()
		{
		}
	}
	[Token(Token = "0x20002E4")]
	public class MinimalLeague : MonoBehaviour
	{
		[Token(Token = "0x4000E8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public League league;

		[Token(Token = "0x4000E90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string leagueName;

		[Token(Token = "0x4000E91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int rounds;

		[Token(Token = "0x4000E92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<LeaguePlayer> players;

		[Token(Token = "0x6000F12")]
		[Address(RVA = "0xB8F814", Offset = "0xB8F814", VA = "0xB8F814")]
		public void EnsureLeague()
		{
		}

		[Token(Token = "0x6000F13")]
		[Address(RVA = "0xB8F9BC", Offset = "0xB8F9BC", VA = "0xB8F9BC")]
		public MinimalLeague()
		{
		}
	}
	[Token(Token = "0x20002E5")]
	public class AvailableMatchEntry : MatchDisplayer
	{
		[Token(Token = "0x4000E93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected int opponentLevel;

		[Token(Token = "0x4000E94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected string opponentName;

		[Token(Token = "0x4000E95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected string opponentLanguage;

		[Token(Token = "0x4000E96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public UIText OpponentLevel;

		[Token(Token = "0x4000E97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public UIText OpponentName;

		[Token(Token = "0x4000E98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public UIText ArenaName;

		[Token(Token = "0x4000E99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public UIText RegionName;

		[Token(Token = "0x4000E9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public MatchIconDisplay IconDisplay;

		[Token(Token = "0x4000E9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public StringVariable multiplayerRoomName;

		[Token(Token = "0x4000E9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public UnityEvent<string> OnJoin;

		[Token(Token = "0x6000F14")]
		[Address(RVA = "0xB45938", Offset = "0xB45938", VA = "0xB45938")]
		public void AddData(JSONNode json, string hostCode)
		{
		}

		[Token(Token = "0x6000F15")]
		[Address(RVA = "0xB45D54", Offset = "0xB45D54", VA = "0xB45D54", Slot = "4")]
		public override void UpdateDisplay()
		{
		}

		[Token(Token = "0x6000F16")]
		[Address(RVA = "0xB45F68", Offset = "0xB45F68", VA = "0xB45F68")]
		public void JoinMatch()
		{
		}

		[Token(Token = "0x6000F17")]
		[Address(RVA = "0xB46098", Offset = "0xB46098", VA = "0xB46098")]
		protected void OnMatchJoined(JSONNode json)
		{
		}

		[Token(Token = "0x6000F18")]
		[Address(RVA = "0xB46104", Offset = "0xB46104", VA = "0xB46104")]
		public AvailableMatchEntry()
		{
		}
	}
	[Token(Token = "0x20002E6")]
	public class LoadAvailableMatches : MonoBehaviour
	{
		[Token(Token = "0x4000E9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public StringVariable HostCode;

		[Token(Token = "0x4000E9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AvailableMatchEntry EntryPrefab;

		[Token(Token = "0x4000E9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject ShowIfEmpty;

		[Token(Token = "0x4000EA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float refreshInterval;

		[Token(Token = "0x4000EA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		protected float loadTime;

		[Token(Token = "0x4000EA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected List<string> rejectedMatches;

		[Token(Token = "0x4000EA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public UnityEvent OnJoin;

		[Token(Token = "0x4000EA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public UnityEvent<string> OnJoinWithUUID;

		[Token(Token = "0x6000F19")]
		[Address(RVA = "0xBD3920", Offset = "0xBD3920", VA = "0xBD3920")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000F1A")]
		[Address(RVA = "0xBD3948", Offset = "0xBD3948", VA = "0xBD3948")]
		private void Update()
		{
		}

		[Token(Token = "0x6000F1B")]
		[Address(RVA = "0xBD3988", Offset = "0xBD3988", VA = "0xBD3988")]
		public void RefreshList()
		{
		}

		[Token(Token = "0x6000F1C")]
		[Address(RVA = "0xBD3A58", Offset = "0xBD3A58", VA = "0xBD3A58")]
		public void UpdateList(JSONNode json)
		{
		}

		[Token(Token = "0x6000F1D")]
		[Address(RVA = "0xBD3D80", Offset = "0xBD3D80", VA = "0xBD3D80")]
		public void Rejected(string uuid)
		{
		}

		[Token(Token = "0x6000F1E")]
		[Address(RVA = "0xBD3DE4", Offset = "0xBD3DE4", VA = "0xBD3DE4")]
		public LoadAvailableMatches()
		{
		}

		[Token(Token = "0x6000F1F")]
		[Address(RVA = "0xBD3E64", Offset = "0xBD3E64", VA = "0xBD3E64")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x777458", Offset = "0x777458")]
		private void <UpdateList>b__11_0(string uuid)
		{
		}
	}
	[Token(Token = "0x20002E7")]
	public class WatchMatch : MonoBehaviour
	{
		[Token(Token = "0x4000EA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected Match match;

		[Token(Token = "0x4000EA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected bool watchMatch;

		[Token(Token = "0x4000EA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		protected float refreshInterval;

		[Token(Token = "0x4000EA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float minRefreshTime;

		[Token(Token = "0x4000EA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float maxRefreshTime;

		[Token(Token = "0x4000EAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected float loadTime;

		[Token(Token = "0x4000EAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public StringVariable multiplayerRoomName;

		[Token(Token = "0x4000EAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public MatchMakerMultiplayer matchMaker;

		[Token(Token = "0x4000EAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected bool hosting;

		[Token(Token = "0x4000EAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		protected int opponentLevel;

		[Token(Token = "0x4000EAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected string opponentName;

		[Token(Token = "0x4000EB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public List<UIText> OpponentNameText;

		[Token(Token = "0x4000EB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected string previousStatus;

		[Token(Token = "0x4000EB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public UnityEvent OnNone;

		[Token(Token = "0x4000EB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public UnityEvent OnHostWaitingForOpponent;

		[Token(Token = "0x4000EB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public UnityEvent OnHostApproval;

		[Token(Token = "0x4000EB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public UnityEvent OnOpponentWaitingForApproval;

		[Token(Token = "0x4000EB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public UnityEvent OnAccepted;

		[Token(Token = "0x1700021A")]
		public string UUID
		{
			[Token(Token = "0x6000F20")]
			[Address(RVA = "0xAFBBFC", Offset = "0xAFBBFC", VA = "0xAFBBFC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F21")]
			[Address(RVA = "0xAFBC18", Offset = "0xAFBC18", VA = "0xAFBC18")]
			set
			{
			}
		}

		[Token(Token = "0x1700021B")]
		public bool IsWatching
		{
			[Token(Token = "0x6000F22")]
			[Address(RVA = "0xAFBDAC", Offset = "0xAFBDAC", VA = "0xAFBDAC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000F23")]
		[Address(RVA = "0xAFBDB4", Offset = "0xAFBDB4", VA = "0xAFBDB4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000F24")]
		[Address(RVA = "0xAFBE1C", Offset = "0xAFBE1C", VA = "0xAFBE1C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000F25")]
		[Address(RVA = "0xAFBFF0", Offset = "0xAFBFF0", VA = "0xAFBFF0")]
		public void ProposeMatch()
		{
		}

		[Token(Token = "0x6000F26")]
		[Address(RVA = "0xAFC188", Offset = "0xAFC188", VA = "0xAFC188")]
		protected void StopWatching()
		{
		}

		[Token(Token = "0x6000F27")]
		[Address(RVA = "0xAFBCC8", Offset = "0xAFBCC8", VA = "0xAFBCC8")]
		public void CancelMatch()
		{
		}

		[Token(Token = "0x6000F28")]
		[Address(RVA = "0xAFC1E8", Offset = "0xAFC1E8", VA = "0xAFC1E8")]
		public void AcceptMatch()
		{
		}

		[Token(Token = "0x6000F29")]
		[Address(RVA = "0xAFC31C", Offset = "0xAFC31C", VA = "0xAFC31C")]
		public void RejectMatch()
		{
		}

		[Token(Token = "0x6000F2A")]
		[Address(RVA = "0xAFC430", Offset = "0xAFC430", VA = "0xAFC430")]
		protected void CheckMatchStatus(JSONNode json)
		{
		}

		[Token(Token = "0x6000F2B")]
		[Address(RVA = "0xAFC884", Offset = "0xAFC884", VA = "0xAFC884")]
		protected void SetOpponentInfo(JSONNode json, string key)
		{
		}

		[Token(Token = "0x6000F2C")]
		[Address(RVA = "0xAFCB38", Offset = "0xAFCB38", VA = "0xAFCB38")]
		public WatchMatch()
		{
		}
	}
	[Token(Token = "0x20002E8")]
	public class MultiplayerManager : MonoBehaviour
	{
		[Token(Token = "0x6000F2D")]
		[Address(RVA = "0xB937CC", Offset = "0xB937CC", VA = "0xB937CC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000F2E")]
		[Address(RVA = "0xB93830", Offset = "0xB93830", VA = "0xB93830")]
		public MultiplayerManager()
		{
		}
	}
	[Token(Token = "0x20002E9")]
	public class NetworkManager : MonoBehaviourPunCallbacks
	{
		[Token(Token = "0x4000EB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected string gameVersion;

		[Token(Token = "0x4000EB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected byte maxPlayersPerRoom;

		[Token(Token = "0x4000EB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public BoolVariable isConnected;

		[Token(Token = "0x4000EBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public UnityEvent OnReady;

		[Token(Token = "0x4000EBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public UnityEvent<string> OnError;

		[Token(Token = "0x4000EBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public UnityEvent OnEnteredRoom;

		[Token(Token = "0x4000EBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public UnityEvent OnRoomReady;

		[Token(Token = "0x4000EBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public UnityEvent OnExitedRoom;

		[Token(Token = "0x4000EBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public bool TryingToPlay;

		[Token(Token = "0x4000EC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		protected bool waitingForPlayers;

		[Token(Token = "0x4000EC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
		protected bool waitingForRoom;

		[Token(Token = "0x4000EC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x63")]
		protected bool startedRoom;

		[Token(Token = "0x4000EC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public StringVariable roomName;

		[Token(Token = "0x4000EC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected bool shouldConnect;

		[Token(Token = "0x4000EC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		protected bool shouldReconnect;

		[Token(Token = "0x4000EC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public StringVariable bestRegion;

		[Token(Token = "0x4000EC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		protected string desiredRegion;

		[Token(Token = "0x4000EC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		protected float ShouldConnectTimer;

		[Token(Token = "0x1700021C")]
		public bool ShouldConnect
		{
			[Token(Token = "0x6000F2F")]
			[Address(RVA = "0xB946CC", Offset = "0xB946CC", VA = "0xB946CC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000F30")]
			[Address(RVA = "0xB946D4", Offset = "0xB946D4", VA = "0xB946D4")]
			set
			{
			}
		}

		[Token(Token = "0x1700021D")]
		public static ExitGames.Client.Photon.Hashtable Properties
		{
			[Token(Token = "0x6000F42")]
			[Address(RVA = "0xB96220", Offset = "0xB96220", VA = "0xB96220")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F43")]
			[Address(RVA = "0xB962B0", Offset = "0xB962B0", VA = "0xB962B0")]
			set
			{
			}
		}

		[Token(Token = "0x1700021E")]
		public static int NumCurrentPlayers
		{
			[Token(Token = "0x6000F44")]
			[Address(RVA = "0xB96360", Offset = "0xB96360", VA = "0xB96360")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6000F31")]
		[Address(RVA = "0xB949BC", Offset = "0xB949BC", VA = "0xB949BC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000F32")]
		[Address(RVA = "0xB94A38", Offset = "0xB94A38", VA = "0xB94A38")]
		private void Start()
		{
		}

		[Token(Token = "0x6000F33")]
		[Address(RVA = "0xB94A40", Offset = "0xB94A40", VA = "0xB94A40")]
		private void Update()
		{
		}

		[Token(Token = "0x6000F34")]
		[Address(RVA = "0xB94FC8", Offset = "0xB94FC8", VA = "0xB94FC8")]
		public void ConnectToRegion(string region)
		{
		}

		[Token(Token = "0x6000F35")]
		[Address(RVA = "0xB9524C", Offset = "0xB9524C", VA = "0xB9524C")]
		public void CreateRoom(bool multiplayer = true)
		{
		}

		[Token(Token = "0x6000F36")]
		[Address(RVA = "0xB954C8", Offset = "0xB954C8", VA = "0xB954C8")]
		public void JoinRoom()
		{
		}

		[Token(Token = "0x6000F37")]
		[Address(RVA = "0xB8E514", Offset = "0xB8E514", VA = "0xB8E514")]
		public void LeaveRoom()
		{
		}

		[Token(Token = "0x6000F38")]
		[Address(RVA = "0xB946FC", Offset = "0xB946FC", VA = "0xB946FC")]
		public void Connect()
		{
		}

		[Token(Token = "0x6000F39")]
		[Address(RVA = "0xB95190", Offset = "0xB95190", VA = "0xB95190")]
		public void Disconnect()
		{
		}

		[Token(Token = "0x6000F3A")]
		[Address(RVA = "0xB955D8", Offset = "0xB955D8", VA = "0xB955D8", Slot = "30")]
		public override void OnConnected()
		{
		}

		[Token(Token = "0x6000F3B")]
		[Address(RVA = "0xB95928", Offset = "0xB95928", VA = "0xB95928", Slot = "45")]
		public override void OnConnectedToMaster()
		{
		}

		[Token(Token = "0x6000F3C")]
		[Address(RVA = "0xB95AB8", Offset = "0xB95AB8", VA = "0xB95AB8", Slot = "38")]
		public override void OnDisconnected(DisconnectCause cause)
		{
		}

		[Token(Token = "0x6000F3D")]
		[Address(RVA = "0xB95CA4", Offset = "0xB95CA4", VA = "0xB95CA4", Slot = "33")]
		public override void OnCreateRoomFailed(short returnCode, string message)
		{
		}

		[Token(Token = "0x6000F3E")]
		[Address(RVA = "0xB95D8C", Offset = "0xB95D8C", VA = "0xB95D8C", Slot = "34")]
		public override void OnJoinRoomFailed(short returnCode, string message)
		{
		}

		[Token(Token = "0x6000F3F")]
		[Address(RVA = "0xB95E7C", Offset = "0xB95E7C", VA = "0xB95E7C", Slot = "35")]
		public override void OnCreatedRoom()
		{
		}

		[Token(Token = "0x6000F40")]
		[Address(RVA = "0xB95FF0", Offset = "0xB95FF0", VA = "0xB95FF0", Slot = "41")]
		public override void OnJoinedRoom()
		{
		}

		[Token(Token = "0x6000F41")]
		[Address(RVA = "0xB9618C", Offset = "0xB9618C", VA = "0xB9618C", Slot = "31")]
		public override void OnLeftRoom()
		{
		}

		[Token(Token = "0x6000F45")]
		[Address(RVA = "0xB96420", Offset = "0xB96420", VA = "0xB96420")]
		public NetworkManager()
		{
		}
	}
	[Token(Token = "0x20002EA")]
	public class NetworkManagerReference : MonoBehaviour
	{
		[Token(Token = "0x6000F46")]
		[Address(RVA = "0xB96498", Offset = "0xB96498", VA = "0xB96498")]
		public void ShouldConnect()
		{
		}

		[Token(Token = "0x6000F47")]
		[Address(RVA = "0xB964D0", Offset = "0xB964D0", VA = "0xB964D0")]
		public void DoesntNeedToConnect()
		{
		}

		[Token(Token = "0x6000F48")]
		[Address(RVA = "0xB964FC", Offset = "0xB964FC", VA = "0xB964FC")]
		public void Connect()
		{
		}

		[Token(Token = "0x6000F49")]
		[Address(RVA = "0xB9651C", Offset = "0xB9651C", VA = "0xB9651C")]
		public void Disconnect()
		{
		}

		[Token(Token = "0x6000F4A")]
		[Address(RVA = "0xB9653C", Offset = "0xB9653C", VA = "0xB9653C")]
		public NetworkManagerReference()
		{
		}
	}
	[Token(Token = "0x20002EB")]
	public class NewsController : MonoBehaviour
	{
		[Token(Token = "0x20002EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7708B4", Offset = "0x7708B4")]
		private sealed class <>c__DisplayClass3_0
		{
			[Token(Token = "0x4000ECB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public NewsController <>4__this;

			[Token(Token = "0x4000ECC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Action callback;

			[Token(Token = "0x6000F50")]
			[Address(RVA = "0xB2E458", Offset = "0xB2E458", VA = "0xB2E458")]
			public <>c__DisplayClass3_0()
			{
			}

			[Token(Token = "0x6000F51")]
			[Address(RVA = "0xB2E460", Offset = "0xB2E460", VA = "0xB2E460")]
			internal void <LoadNews>b__0(JSONNode json)
			{
			}
		}

		[Token(Token = "0x4000EC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ManageListDisplay listManager;

		[Token(Token = "0x4000ECA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public NewsItem newsItemPrefab;

		[Token(Token = "0x6000F4B")]
		[Address(RVA = "0xB96544", Offset = "0xB96544", VA = "0xB96544")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000F4C")]
		[Address(RVA = "0xB965C0", Offset = "0xB965C0", VA = "0xB965C0")]
		public void LoadNews(Action callback)
		{
		}

		[Token(Token = "0x6000F4D")]
		[Address(RVA = "0xB966AC", Offset = "0xB966AC", VA = "0xB966AC")]
		protected void ClearEntries()
		{
		}

		[Token(Token = "0x6000F4E")]
		[Address(RVA = "0xB96990", Offset = "0xB96990", VA = "0xB96990")]
		public void UpdateDisplay()
		{
		}

		[Token(Token = "0x6000F4F")]
		[Address(RVA = "0xB969AC", Offset = "0xB969AC", VA = "0xB969AC")]
		public NewsController()
		{
		}
	}
	[Token(Token = "0x20002ED")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x7708C4", Offset = "0x7708C4")]
	public class NewsItem : MonoBehaviour
	{
		[Token(Token = "0x4000ECD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UIText title;

		[Token(Token = "0x4000ECE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UIText text;

		[Token(Token = "0x1700021F")]
		public int Ord
		{
			[Token(Token = "0x6000F52")]
			[Address(RVA = "0xB969B4", Offset = "0xB969B4", VA = "0xB969B4")]
			set
			{
			}
		}

		[Token(Token = "0x6000F53")]
		[Address(RVA = "0xB96A1C", Offset = "0xB96A1C", VA = "0xB96A1C")]
		public NewsItem()
		{
		}
	}
	[Token(Token = "0x20002EE")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x770924", Offset = "0x770924")]
	public class Paddle : MonoBehaviour
	{
		[Token(Token = "0x4000ECF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected Rigidbody rb;

		[Token(Token = "0x4000ED0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float impulseAmount;

		[Token(Token = "0x4000ED1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float minForce;

		[Token(Token = "0x4000ED2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected float zvelocity;

		[Token(Token = "0x4000ED3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		public bool facingForward;

		[Token(Token = "0x4000ED4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected float lastZPos;

		[Token(Token = "0x4000ED5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public UnityEvent OnHit;

		[Token(Token = "0x4000ED6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public UnityEvent<Block> OnHitBlock;

		[Token(Token = "0x4000ED7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public UnityEvent OnRemovePowerUp;

		[Token(Token = "0x4000ED8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Block lastBlockHit;

		[Token(Token = "0x4000ED9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected PowerUpBlock nextHit;

		[Token(Token = "0x4000EDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected int nextHitCounter;

		[Token(Token = "0x17000220")]
		public PowerUpBlock NextHit
		{
			[Token(Token = "0x6000F54")]
			[Address(RVA = "0xC42490", Offset = "0xC42490", VA = "0xC42490")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F55")]
			[Address(RVA = "0xC42498", Offset = "0xC42498", VA = "0xC42498")]
			set
			{
			}
		}

		[Token(Token = "0x6000F56")]
		[Address(RVA = "0xC424A4", Offset = "0xC424A4", VA = "0xC424A4", Slot = "4")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x6000F57")]
		[Address(RVA = "0xC4250C", Offset = "0xC4250C", VA = "0xC4250C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000F58")]
		[Address(RVA = "0xC425CC", Offset = "0xC425CC", VA = "0xC425CC")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6000F59")]
		[Address(RVA = "0xC42768", Offset = "0xC42768", VA = "0xC42768", Slot = "5")]
		public virtual float calcVelocity()
		{
			return default(float);
		}

		[Token(Token = "0x6000F5A")]
		[Address(RVA = "0xC42778", Offset = "0xC42778", VA = "0xC42778", Slot = "6")]
		protected virtual void Hit(Block block, Vector3 collisionPoint, Vector3 collisionNormal)
		{
		}

		[Token(Token = "0x6000F5B")]
		[Address(RVA = "0xC42500", Offset = "0xC42500", VA = "0xC42500")]
		public void Reset()
		{
		}

		[Token(Token = "0x6000F5C")]
		[Address(RVA = "0xC429C4", Offset = "0xC429C4", VA = "0xC429C4")]
		public Paddle()
		{
		}
	}
	[Token(Token = "0x20002EF")]
	public class PlayStreakDisplay : MonoBehaviour
	{
		[Token(Token = "0x4000EDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public IntVariable PlayStreak;

		[Token(Token = "0x4000EDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnityEvent OnDay1;

		[Token(Token = "0x4000EDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UnityEvent OnDay2;

		[Token(Token = "0x4000EDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public UnityEvent OnDay3;

		[Token(Token = "0x4000EDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public UnityEvent OnDay4;

		[Token(Token = "0x4000EE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public UnityEvent OnDay5;

		[Token(Token = "0x17000221")]
		public int RewardDay
		{
			[Token(Token = "0x6000F5E")]
			[Address(RVA = "0xC46164", Offset = "0xC46164", VA = "0xC46164")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6000F5D")]
		[Address(RVA = "0xC460DC", Offset = "0xC460DC", VA = "0xC460DC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000F5F")]
		[Address(RVA = "0xC460E0", Offset = "0xC460E0", VA = "0xC460E0")]
		public void Show()
		{
		}

		[Token(Token = "0x6000F60")]
		[Address(RVA = "0xC46220", Offset = "0xC46220", VA = "0xC46220")]
		public PlayStreakDisplay()
		{
		}
	}
	[Token(Token = "0x20002F0")]
	public class PlayerController : MonoBehaviourPunCallbacks, IPunObservable
	{
		[Token(Token = "0x4000EE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected MatchController matchController;

		[Token(Token = "0x4000EE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected int playerNum;

		[Token(Token = "0x4000EE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		protected int score;

		[Token(Token = "0x4000EE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected string state;

		[Token(Token = "0x4000EE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected IntVariable scoreVariable;

		[Token(Token = "0x4000EE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected EnumVariable playerState;

		[Token(Token = "0x4000EE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected Avatar avatar;

		[Token(Token = "0x6000F61")]
		[Address(RVA = "0xC465A0", Offset = "0xC465A0", VA = "0xC465A0", Slot = "28")]
		public override void OnEnable()
		{
		}

		[Token(Token = "0x6000F62")]
		[Address(RVA = "0xC46628", Offset = "0xC46628", VA = "0xC46628")]
		public void Init(XRRig rig)
		{
		}

		[Token(Token = "0x6000F63")]
		[Address(RVA = "0xC46B40", Offset = "0xC46B40", VA = "0xC46B40", Slot = "54")]
		public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
		{
		}

		[Token(Token = "0x6000F64")]
		[Address(RVA = "0xC46794", Offset = "0xC46794", VA = "0xC46794")]
		protected void ResetReferences()
		{
		}

		[Token(Token = "0x6000F65")]
		[Address(RVA = "0xC46908", Offset = "0xC46908", VA = "0xC46908")]
		protected void UpdateReferences()
		{
		}

		[Token(Token = "0x6000F66")]
		[Address(RVA = "0xC46CD8", Offset = "0xC46CD8", VA = "0xC46CD8")]
		protected void UpdatePlayer()
		{
		}

		[Token(Token = "0x6000F67")]
		[Address(RVA = "0xC46DCC", Offset = "0xC46DCC", VA = "0xC46DCC")]
		protected void WriteScore()
		{
		}

		[Token(Token = "0x6000F68")]
		[Address(RVA = "0xC46E5C", Offset = "0xC46E5C", VA = "0xC46E5C")]
		protected void WriteState()
		{
		}

		[Token(Token = "0x6000F69")]
		[Address(RVA = "0xC46EEC", Offset = "0xC46EEC", VA = "0xC46EEC")]
		public PlayerController()
		{
		}
	}
	[Token(Token = "0x20002F1")]
	public class PlayerInformation : MonoBehaviour
	{
		[Token(Token = "0x4000EE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UIText playerName;

		[Token(Token = "0x4000EE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UIText xp;

		[Token(Token = "0x4000EEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UIText levelNum;

		[Token(Token = "0x4000EEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public UIText levelName;

		[Token(Token = "0x4000EEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject playerStats;

		[Token(Token = "0x6000F6A")]
		[Address(RVA = "0xC47418", Offset = "0xC47418", VA = "0xC47418")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000F6B")]
		[Address(RVA = "0xC4741C", Offset = "0xC4741C", VA = "0xC4741C")]
		public void UpdateDisplay()
		{
		}

		[Token(Token = "0x6000F6C")]
		[Address(RVA = "0xC477BC", Offset = "0xC477BC", VA = "0xC477BC")]
		public PlayerInformation()
		{
		}
	}
	[Token(Token = "0x20002F2")]
	public class PlayerManager : DataManager<PlayerManager>
	{
		[Token(Token = "0x4000EED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		protected UserData steamUserData;

		[Token(Token = "0x4000EEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		protected UserData oculusUserData;

		[Token(Token = "0x4000EEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		protected UserData picoUserData;

		[Token(Token = "0x4000EF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected UserData userData;

		[Token(Token = "0x4000EF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		protected StatsManager stats;

		[Token(Token = "0x4000EF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		protected KeyValueList newAwardsList;

		[Token(Token = "0x4000EF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public IntVariable XP;

		[Token(Token = "0x4000EF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public IntVariable Level;

		[Token(Token = "0x4000EF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public IntVariable Coins;

		[Token(Token = "0x17000222")]
		public static UserData User
		{
			[Token(Token = "0x6000F6D")]
			[Address(RVA = "0xC476A8", Offset = "0xC476A8", VA = "0xC476A8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000223")]
		public static StatsManager Stats
		{
			[Token(Token = "0x6000F6E")]
			[Address(RVA = "0xC477C4", Offset = "0xC477C4", VA = "0xC477C4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000224")]
		public bool HasStats
		{
			[Token(Token = "0x6000F71")]
			[Address(RVA = "0xC47728", Offset = "0xC47728", VA = "0xC47728")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000F6F")]
		[Address(RVA = "0xC47844", Offset = "0xC47844", VA = "0xC47844", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6000F70")]
		[Address(RVA = "0xC4789C", Offset = "0xC4789C", VA = "0xC4789C", Slot = "6")]
		protected override void Ready()
		{
		}

		[Token(Token = "0x6000F72")]
		[Address(RVA = "0xC47A88", Offset = "0xC47A88", VA = "0xC47A88")]
		public string Stat(PlayerStatistic stat)
		{
			return null;
		}

		[Token(Token = "0x6000F73")]
		[Address(RVA = "0xC47B84", Offset = "0xC47B84", VA = "0xC47B84")]
		public static void AwardCoins(int amount, string reason)
		{
		}

		[Token(Token = "0x6000F74")]
		[Address(RVA = "0xC47C54", Offset = "0xC47C54", VA = "0xC47C54")]
		public static void SpendCoins(int amount, string reason)
		{
		}

		[Token(Token = "0x6000F75")]
		[Address(RVA = "0xC47D24", Offset = "0xC47D24", VA = "0xC47D24", Slot = "11")]
		public override void Save()
		{
		}

		[Token(Token = "0x6000F76")]
		[Address(RVA = "0xC47DEC", Offset = "0xC47DEC", VA = "0xC47DEC")]
		public void UpdatePlayer(JSONNode json)
		{
		}

		[Token(Token = "0x6000F77")]
		[Address(RVA = "0xC47FB4", Offset = "0xC47FB4", VA = "0xC47FB4")]
		public PlayerManager()
		{
		}
	}
	[Token(Token = "0x20002F3")]
	public class PlayerPositionManager : MonoBehaviour
	{
		[Token(Token = "0x4000EF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform startingPoint;

		[Token(Token = "0x4000EF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform buddyParkingPoint;

		[Token(Token = "0x4000EF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform buddyActivePoint;

		[Token(Token = "0x4000EF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject buddyButton;

		[Token(Token = "0x4000EFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public UnityEvent OnInitialize;

		[Token(Token = "0x4000EFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public UnityEvent OnReady;

		[Token(Token = "0x4000EFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public UnityEvent OnActivated;

		[Token(Token = "0x4000EFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected PlayerController playerController;

		[Token(Token = "0x4000EFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public List<Transform> moveWithOffset;

		[Token(Token = "0x4000EFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public List<Transform> moveOppositeOffset;

		[Token(Token = "0x6000F78")]
		[Address(RVA = "0xC48F60", Offset = "0xC48F60", VA = "0xC48F60")]
		public void Initialize(float deltaZ)
		{
		}

		[Token(Token = "0x6000F79")]
		[Address(RVA = "0xC49298", Offset = "0xC49298", VA = "0xC49298")]
		public void Ready()
		{
		}

		[Token(Token = "0x6000F7A")]
		[Address(RVA = "0xC492AC", Offset = "0xC492AC", VA = "0xC492AC")]
		public void Activate()
		{
		}

		[Token(Token = "0x6000F7B")]
		[Address(RVA = "0xC49378", Offset = "0xC49378", VA = "0xC49378")]
		public void TakeOwnership(PhotonView pv)
		{
		}

		[Token(Token = "0x6000F7C")]
		[Address(RVA = "0xC4943C", Offset = "0xC4943C", VA = "0xC4943C")]
		public void SetupPlayer(string leftGlove, string rightGlove, string buddyDrone)
		{
		}

		[Token(Token = "0x6000F7D")]
		[Address(RVA = "0xC49788", Offset = "0xC49788", VA = "0xC49788")]
		public PlayerPositionManager()
		{
		}
	}
	[Token(Token = "0x20002F4")]
	public class PlayerStats : MonoBehaviour
	{
		[Token(Token = "0x4000F00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PlayerStatistic stat;

		[Token(Token = "0x4000F01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UIText valueField;

		[Token(Token = "0x6000F7E")]
		[Address(RVA = "0xC49820", Offset = "0xC49820", VA = "0xC49820")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000F7F")]
		[Address(RVA = "0xC49824", Offset = "0xC49824", VA = "0xC49824")]
		public void UpdateDisplay()
		{
		}

		[Token(Token = "0x6000F80")]
		[Address(RVA = "0xC499B4", Offset = "0xC499B4", VA = "0xC499B4")]
		public PlayerStats()
		{
		}
	}
	[Token(Token = "0x20002F5")]
	public class PowerMeter : MonoBehaviour
	{
		[Token(Token = "0x4000F02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int capacity;

		[Token(Token = "0x4000F03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		protected int level;

		[Token(Token = "0x4000F04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected int prevValue;

		[Token(Token = "0x4000F05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected IntVariable listenTo;

		[Token(Token = "0x4000F06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public MaterialParameterFloat materialParam;

		[Token(Token = "0x4000F07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public PowerUpSensor sensor;

		[Token(Token = "0x4000F08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Renderer powerIcon;

		[Token(Token = "0x4000F09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected Material powerIconMaterial;

		[Token(Token = "0x17000225")]
		public IntVariable ListenTo
		{
			[Token(Token = "0x6000F81")]
			[Address(RVA = "0xC4AB44", Offset = "0xC4AB44", VA = "0xC4AB44")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F82")]
			[Address(RVA = "0xC4AB4C", Offset = "0xC4AB4C", VA = "0xC4AB4C")]
			set
			{
			}
		}

		[Token(Token = "0x17000226")]
		public int Level
		{
			[Token(Token = "0x6000F83")]
			[Address(RVA = "0xC4ACE8", Offset = "0xC4ACE8", VA = "0xC4ACE8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000F84")]
			[Address(RVA = "0xC4ACF0", Offset = "0xC4ACF0", VA = "0xC4ACF0")]
			set
			{
			}
		}

		[Token(Token = "0x17000227")]
		public Texture2D Icon
		{
			[Token(Token = "0x6000F89")]
			[Address(RVA = "0xC4AF74", Offset = "0xC4AF74", VA = "0xC4AF74")]
			set
			{
			}
		}

		[Token(Token = "0x6000F85")]
		[Address(RVA = "0xC4AD24", Offset = "0xC4AD24", VA = "0xC4AD24")]
		private void Update()
		{
		}

		[Token(Token = "0x6000F86")]
		[Address(RVA = "0xC4ADF0", Offset = "0xC4ADF0", VA = "0xC4ADF0")]
		public void Setup(int hits, Texture2D icon, IntVariable counter)
		{
		}

		[Token(Token = "0x6000F87")]
		[Address(RVA = "0xC4AB50", Offset = "0xC4AB50", VA = "0xC4AB50")]
		protected void SetListenTo(IntVariable newListenTo)
		{
		}

		[Token(Token = "0x6000F88")]
		[Address(RVA = "0xC4B228", Offset = "0xC4B228", VA = "0xC4B228")]
		protected void SetLevels()
		{
		}

		[Token(Token = "0x6000F8A")]
		[Address(RVA = "0xC4B2F4", Offset = "0xC4B2F4", VA = "0xC4B2F4")]
		public PowerMeter()
		{
		}

		[Token(Token = "0x6000F8B")]
		[Address(RVA = "0xC4B2FC", Offset = "0xC4B2FC", VA = "0xC4B2FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x777468", Offset = "0x777468")]
		private void <Setup>b__15_0()
		{
		}
	}
	[Token(Token = "0x20002F6")]
	public class PowerOrb : MonoBehaviour
	{
		[Token(Token = "0x20002F7")]
		public enum State
		{
			[Token(Token = "0x4000F19")]
			Init,
			[Token(Token = "0x4000F1A")]
			Inactive,
			[Token(Token = "0x4000F1B")]
			Ready,
			[Token(Token = "0x4000F1C")]
			InProgress,
			[Token(Token = "0x4000F1D")]
			Complete
		}

		[Token(Token = "0x20002F8")]
		public enum TargetType
		{
			[Token(Token = "0x4000F1F")]
			None,
			[Token(Token = "0x4000F20")]
			LeftHand,
			[Token(Token = "0x4000F21")]
			RightHand,
			[Token(Token = "0x4000F22")]
			BothHands
		}

		[Token(Token = "0x4000F0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PowerUp Power;

		[Token(Token = "0x4000F0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject InactiveObject;

		[Token(Token = "0x4000F0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject ReadyObject;

		[Token(Token = "0x4000F0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject InProgressObject;

		[Token(Token = "0x4000F0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject CompleteObject;

		[Token(Token = "0x4000F0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public TargetType targetType;

		[Token(Token = "0x4000F10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected CanPowerUp powerUpTarget;

		[Token(Token = "0x4000F11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected State state;

		[Token(Token = "0x4000F12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float timeToComplete;

		[Token(Token = "0x4000F13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected float timer;

		[Token(Token = "0x4000F14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public UnityEvent OnReset;

		[Token(Token = "0x4000F15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public UnityEvent<float> OnActivating;

		[Token(Token = "0x4000F16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public UnityEvent<float> OnProgress;

		[Token(Token = "0x4000F17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public UnityEvent OnComplete;

		[Token(Token = "0x6000F8C")]
		[Address(RVA = "0xCEC198", Offset = "0xCEC198", VA = "0xCEC198")]
		private void Start()
		{
		}

		[Token(Token = "0x6000F8D")]
		[Address(RVA = "0xCEC338", Offset = "0xCEC338", VA = "0xCEC338")]
		private void Update()
		{
		}

		[Token(Token = "0x6000F8E")]
		[Address(RVA = "0xCEC1A0", Offset = "0xCEC1A0", VA = "0xCEC1A0")]
		public void Reset()
		{
		}

		[Token(Token = "0x6000F8F")]
		[Address(RVA = "0xCEC578", Offset = "0xCEC578", VA = "0xCEC578")]
		public void SetActivationLevel(float level)
		{
		}

		[Token(Token = "0x6000F90")]
		[Address(RVA = "0xCEC5E8", Offset = "0xCEC5E8", VA = "0xCEC5E8")]
		public void Activate()
		{
		}

		[Token(Token = "0x6000F91")]
		[Address(RVA = "0xCEC764", Offset = "0xCEC764", VA = "0xCEC764")]
		public void PoweringUp(GameObject target)
		{
		}

		[Token(Token = "0x6000F92")]
		[Address(RVA = "0xCEC3E0", Offset = "0xCEC3E0", VA = "0xCEC3E0")]
		public void Complete()
		{
		}

		[Token(Token = "0x6000F93")]
		[Address(RVA = "0xCEC9C4", Offset = "0xCEC9C4", VA = "0xCEC9C4")]
		public PowerOrb()
		{
		}
	}
	[Token(Token = "0x20002F9")]
	public class PowerPaddle : Paddle
	{
		[Token(Token = "0x6000F94")]
		[Address(RVA = "0xCEC9DC", Offset = "0xCEC9DC", VA = "0xCEC9DC", Slot = "4")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000F95")]
		[Address(RVA = "0xCEC9E4", Offset = "0xCEC9E4", VA = "0xCEC9E4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000F96")]
		[Address(RVA = "0xCEC9E8", Offset = "0xCEC9E8", VA = "0xCEC9E8", Slot = "6")]
		protected override void Hit(Block block, Vector3 collisionPoint, Vector3 collisionNormal)
		{
		}

		[Token(Token = "0x6000F97")]
		[Address(RVA = "0xCEC9EC", Offset = "0xCEC9EC", VA = "0xCEC9EC")]
		public PowerPaddle()
		{
		}
	}
	[Token(Token = "0x20002FA")]
	public class PowerUpSensor : MonoBehaviour
	{
		[Token(Token = "0x20002FB")]
		public enum State
		{
			[Token(Token = "0x4000F2B")]
			Init,
			[Token(Token = "0x4000F2C")]
			Inactive,
			[Token(Token = "0x4000F2D")]
			Ready,
			[Token(Token = "0x4000F2E")]
			InProgress
		}

		[Token(Token = "0x4000F23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected State state;

		[Token(Token = "0x4000F24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float timeToComplete;

		[Token(Token = "0x4000F25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected float timer;

		[Token(Token = "0x4000F26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UnityEvent OnReset;

		[Token(Token = "0x4000F27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public UnityEvent OnActive;

		[Token(Token = "0x4000F28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public UnityEvent OnTrigger;

		[Token(Token = "0x4000F29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public UnityEvent OnComplete;

		[Token(Token = "0x6000F98")]
		[Address(RVA = "0xCEECA8", Offset = "0xCEECA8", VA = "0xCEECA8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000F99")]
		[Address(RVA = "0xCEECB0", Offset = "0xCEECB0", VA = "0xCEECB0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000F9A")]
		[Address(RVA = "0xCEEB44", Offset = "0xCEEB44", VA = "0xCEEB44")]
		public void Reset()
		{
		}

		[Token(Token = "0x6000F9B")]
		[Address(RVA = "0xCEED9C", Offset = "0xCEED9C", VA = "0xCEED9C")]
		public void Activate()
		{
		}

		[Token(Token = "0x6000F9C")]
		[Address(RVA = "0xCEEE48", Offset = "0xCEEE48", VA = "0xCEEE48")]
		public void PowerUp()
		{
		}

		[Token(Token = "0x6000F9D")]
		[Address(RVA = "0xCEED0C", Offset = "0xCEED0C", VA = "0xCEED0C")]
		public void Complete()
		{
		}

		[Token(Token = "0x6000F9E")]
		[Address(RVA = "0xCEEEF8", Offset = "0xCEEEF8", VA = "0xCEEEF8")]
		public PowerUpSensor()
		{
		}
	}
	[Token(Token = "0x20002FC")]
	public class AutoPowerUpController : MonoBehaviour
	{
		[Token(Token = "0x4000F2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected IntVariable hitCounter;

		[Token(Token = "0x4000F30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected float hitDiscount;

		[Token(Token = "0x4000F31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<PowerUp> powerUps;

		[Token(Token = "0x4000F32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected PowerUp powerUp;

		[Token(Token = "0x4000F33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform handEffectAttachPoint;

		[Token(Token = "0x4000F34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Transform handObjectAttachPoint;

		[Token(Token = "0x4000F35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Transform playerRoot;

		[Token(Token = "0x4000F36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		protected Paddle paddle;

		[Token(Token = "0x4000F37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected HandEffect handEffectModel;

		[Token(Token = "0x4000F38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected GameObject attachmentObject;

		[Token(Token = "0x4000F39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public UnityEvent OnTrigger;

		[Token(Token = "0x17000228")]
		public float HitDiscount
		{
			[Token(Token = "0x6000F9F")]
			[Address(RVA = "0xB44D14", Offset = "0xB44D14", VA = "0xB44D14")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000FA0")]
			[Address(RVA = "0xB44D1C", Offset = "0xB44D1C", VA = "0xB44D1C")]
			set
			{
			}
		}

		[Token(Token = "0x6000FA1")]
		[Address(RVA = "0xB44D24", Offset = "0xB44D24", VA = "0xB44D24")]
		private void Start()
		{
		}

		[Token(Token = "0x6000FA2")]
		[Address(RVA = "0xB45038", Offset = "0xB45038", VA = "0xB45038")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000FA3")]
		[Address(RVA = "0xB45128", Offset = "0xB45128", VA = "0xB45128")]
		public void RecordHit()
		{
		}

		[Token(Token = "0x6000FA4")]
		[Address(RVA = "0xB451D4", Offset = "0xB451D4", VA = "0xB451D4")]
		protected void TryToTrigger()
		{
		}

		[Token(Token = "0x6000FA5")]
		[Address(RVA = "0xB452F8", Offset = "0xB452F8", VA = "0xB452F8")]
		protected void Trigger()
		{
		}

		[Token(Token = "0x6000FA6")]
		[Address(RVA = "0xB44E3C", Offset = "0xB44E3C", VA = "0xB44E3C")]
		public void Reset()
		{
		}

		[Token(Token = "0x6000FA7")]
		[Address(RVA = "0xB45818", Offset = "0xB45818", VA = "0xB45818")]
		protected void SelectPowerup()
		{
		}

		[Token(Token = "0x6000FA8")]
		[Address(RVA = "0xB458B8", Offset = "0xB458B8", VA = "0xB458B8")]
		public AutoPowerUpController()
		{
		}
	}
	[Token(Token = "0x20002FD")]
	public abstract class PowerUp : ScriptableObject
	{
		[Token(Token = "0x20002FE")]
		public enum AppliesTo
		{
			[Token(Token = "0x4000F41")]
			Block,
			[Token(Token = "0x4000F42")]
			Hand,
			[Token(Token = "0x4000F43")]
			Field
		}

		[Token(Token = "0x4000F3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected string uid;

		[Token(Token = "0x4000F3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected string label;

		[Token(Token = "0x4000F3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		protected string description;

		[Token(Token = "0x4000F3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		protected int hits;

		[Token(Token = "0x4000F3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		protected Texture2D indicatorIcon;

		[Token(Token = "0x4000F3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		protected HandEffect handEffect;

		[Token(Token = "0x17000229")]
		public abstract AppliesTo Type
		{
			[Token(Token = "0x6000FA9")]
			get;
		}

		[Token(Token = "0x1700022A")]
		public string UID
		{
			[Token(Token = "0x6000FAA")]
			[Address(RVA = "0xCEC9F4", Offset = "0xCEC9F4", VA = "0xCEC9F4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700022B")]
		public string Label
		{
			[Token(Token = "0x6000FAB")]
			[Address(RVA = "0xCEC9FC", Offset = "0xCEC9FC", VA = "0xCEC9FC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000FAC")]
			[Address(RVA = "0xCECA04", Offset = "0xCECA04", VA = "0xCECA04")]
			set
			{
			}
		}

		[Token(Token = "0x1700022C")]
		public string Description
		{
			[Token(Token = "0x6000FAD")]
			[Address(RVA = "0xCECA0C", Offset = "0xCECA0C", VA = "0xCECA0C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000FAE")]
			[Address(RVA = "0xCECA14", Offset = "0xCECA14", VA = "0xCECA14")]
			set
			{
			}
		}

		[Token(Token = "0x1700022D")]
		public int Hits
		{
			[Token(Token = "0x6000FAF")]
			[Address(RVA = "0xCECA1C", Offset = "0xCECA1C", VA = "0xCECA1C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700022E")]
		public Texture2D IndicatorIcon
		{
			[Token(Token = "0x6000FB0")]
			[Address(RVA = "0xCECA24", Offset = "0xCECA24", VA = "0xCECA24")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700022F")]
		public HandEffect HandEffect
		{
			[Token(Token = "0x6000FB1")]
			[Address(RVA = "0xCECA2C", Offset = "0xCECA2C", VA = "0xCECA2C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000FB2")]
		[Address(RVA = "0xCECA34", Offset = "0xCECA34", VA = "0xCECA34")]
		protected PowerUp()
		{
		}
	}
	[Token(Token = "0x20002FF")]
	public abstract class PowerUpAttachment : PowerUp
	{
		[Token(Token = "0x2000300")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x770984", Offset = "0x770984")]
		private sealed class <>c__DisplayClass17_0
		{
			[Token(Token = "0x4000F49")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public BlockSensor attachment;

			[Token(Token = "0x4000F4A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public PowerUpAttachment <>4__this;

			[Token(Token = "0x6000FBD")]
			[Address(RVA = "0xB30724", Offset = "0xB30724", VA = "0xB30724")]
			public <>c__DisplayClass17_0()
			{
			}

			[Token(Token = "0x6000FBE")]
			[Address(RVA = "0xB3072C", Offset = "0xB3072C", VA = "0xB3072C")]
			internal void <Apply>b__0(Block block, Vector3 point, Vector3 normal)
			{
			}
		}

		[Token(Token = "0x4000F44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		protected BlockSensor attachmentObject;

		[Token(Token = "0x4000F45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		protected float lifetime;

		[Token(Token = "0x4000F46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		protected bool effectIncomingBlocks;

		[Token(Token = "0x4000F47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
		[SerializeField]
		protected bool effectOutgoingBlocks;

		[Token(Token = "0x4000F48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		protected HitEffect hitEffect;

		[Token(Token = "0x17000230")]
		public override AppliesTo Type
		{
			[Token(Token = "0x6000FB3")]
			[Address(RVA = "0xCECA3C", Offset = "0xCECA3C", VA = "0xCECA3C", Slot = "4")]
			get
			{
				return default(AppliesTo);
			}
		}

		[Token(Token = "0x17000231")]
		public BlockSensor AttachmentObject
		{
			[Token(Token = "0x6000FB4")]
			[Address(RVA = "0xCECA44", Offset = "0xCECA44", VA = "0xCECA44")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000232")]
		public float Lifetime
		{
			[Token(Token = "0x6000FB5")]
			[Address(RVA = "0xCECA4C", Offset = "0xCECA4C", VA = "0xCECA4C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000233")]
		public bool EffectIncomingBlocks
		{
			[Token(Token = "0x6000FB6")]
			[Address(RVA = "0xCECA54", Offset = "0xCECA54", VA = "0xCECA54")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000234")]
		public bool EffectOutgoingBlocks
		{
			[Token(Token = "0x6000FB7")]
			[Address(RVA = "0xCECA5C", Offset = "0xCECA5C", VA = "0xCECA5C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000235")]
		public HitEffect HitEffect
		{
			[Token(Token = "0x6000FB8")]
			[Address(RVA = "0xCECA64", Offset = "0xCECA64", VA = "0xCECA64")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000FB9")]
		[Address(RVA = "0xCECA6C", Offset = "0xCECA6C", VA = "0xCECA6C")]
		public GameObject Apply(Transform handAttachPoint)
		{
			return null;
		}

		[Token(Token = "0x6000FBA")]
		[Address(RVA = "0xCECED8", Offset = "0xCECED8", VA = "0xCECED8", Slot = "5")]
		public virtual void AttachmentCreated(BlockSensor attachment)
		{
		}

		[Token(Token = "0x6000FBB")]
		public abstract void ApplyToBlock(Block block, Vector3 collisionPoint, Vector3 collisionNormal, BlockSensor attachment);

		[Token(Token = "0x6000FBC")]
		[Address(RVA = "0xCECEDC", Offset = "0xCECEDC", VA = "0xCECEDC")]
		protected PowerUpAttachment()
		{
		}
	}
	[Token(Token = "0x2000301")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x770994", Offset = "0x770994")]
	public class PowerUpAttachmentShield : PowerUpAttachment
	{
		[Token(Token = "0x2000302")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7709A4", Offset = "0x7709A4")]
		private sealed class <>c__DisplayClass7_0
		{
			[Token(Token = "0x4000F4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Block block;

			[Token(Token = "0x4000F4F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector3 collisionPoint;

			[Token(Token = "0x4000F50")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public Vector3 collisionNormal;

			[Token(Token = "0x6000FC3")]
			[Address(RVA = "0xB3095C", Offset = "0xB3095C", VA = "0xB3095C")]
			public <>c__DisplayClass7_0()
			{
			}

			[Token(Token = "0x6000FC4")]
			[Address(RVA = "0xB30964", Offset = "0xB30964", VA = "0xB30964")]
			internal void <ApplyToBlock>b__0(PowerUpBlock effect)
			{
			}
		}

		[Token(Token = "0x4000F4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		protected float power;

		[Token(Token = "0x4000F4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[SerializeField]
		protected bool useVelocity;

		[Token(Token = "0x4000F4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public List<PowerUpBlock> blockEffects;

		[Token(Token = "0x17000236")]
		public float Power
		{
			[Token(Token = "0x6000FBF")]
			[Address(RVA = "0xCECEEC", Offset = "0xCECEEC", VA = "0xCECEEC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000237")]
		public bool UseVelocity
		{
			[Token(Token = "0x6000FC0")]
			[Address(RVA = "0xCECEF4", Offset = "0xCECEF4", VA = "0xCECEF4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000FC1")]
		[Address(RVA = "0xCECEFC", Offset = "0xCECEFC", VA = "0xCECEFC", Slot = "6")]
		public override void ApplyToBlock(Block block, Vector3 collisionPoint, Vector3 collisionNormal, BlockSensor field)
		{
		}

		[Token(Token = "0x6000FC2")]
		[Address(RVA = "0xCED17C", Offset = "0xCED17C", VA = "0xCED17C")]
		public PowerUpAttachmentShield()
		{
		}
	}
	[Token(Token = "0x2000303")]
	public abstract class PowerUpBlock : PowerUp
	{
		[Token(Token = "0x4000F51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		protected int activeHits;

		[Token(Token = "0x4000F52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		protected HitEffect hitEffect;

		[Token(Token = "0x17000238")]
		public override AppliesTo Type
		{
			[Token(Token = "0x6000FC5")]
			[Address(RVA = "0xCED204", Offset = "0xCED204", VA = "0xCED204", Slot = "4")]
			get
			{
				return default(AppliesTo);
			}
		}

		[Token(Token = "0x17000239")]
		public int ActiveHits
		{
			[Token(Token = "0x6000FC6")]
			[Address(RVA = "0xCED20C", Offset = "0xCED20C", VA = "0xCED20C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700023A")]
		public HitEffect HitEffect
		{
			[Token(Token = "0x6000FC7")]
			[Address(RVA = "0xCED214", Offset = "0xCED214", VA = "0xCED214")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000FC8")]
		public abstract void ApplyToBlock(Block block, Vector3 collisionPoint, Vector3 collisionNormal);

		[Token(Token = "0x6000FC9")]
		[Address(RVA = "0xCED21C", Offset = "0xCED21C", VA = "0xCED21C")]
		protected PowerUpBlock()
		{
		}
	}
	[Token(Token = "0x2000304")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x7709B4", Offset = "0x7709B4")]
	public class PowerUpBlockIncreaser : PowerUpBlock
	{
		[Token(Token = "0x4000F53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public int IncreaseAmount;

		[Token(Token = "0x6000FCA")]
		[Address(RVA = "0xCED224", Offset = "0xCED224", VA = "0xCED224", Slot = "5")]
		public override void ApplyToBlock(Block block, Vector3 collisionPoint, Vector3 collisionNormal)
		{
		}

		[Token(Token = "0x6000FCB")]
		[Address(RVA = "0xCED268", Offset = "0xCED268", VA = "0xCED268")]
		public PowerUpBlockIncreaser()
		{
		}
	}
	[Token(Token = "0x2000305")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x7709C4", Offset = "0x7709C4")]
	public class PowerUpBlockLeap : PowerUpBlock
	{
		[Token(Token = "0x4000F54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float distance;

		[Token(Token = "0x6000FCC")]
		[Address(RVA = "0xCED278", Offset = "0xCED278", VA = "0xCED278", Slot = "5")]
		public override void ApplyToBlock(Block block, Vector3 collisionPoint, Vector3 collisionNormal)
		{
		}

		[Token(Token = "0x6000FCD")]
		[Address(RVA = "0xCED494", Offset = "0xCED494", VA = "0xCED494")]
		public PowerUpBlockLeap()
		{
		}
	}
	[Token(Token = "0x2000306")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x7709D4", Offset = "0x7709D4")]
	public class PowerUpBlockSplitter : PowerUpBlock
	{
		[Token(Token = "0x2000307")]
		public enum SplitScoreRule
		{
			[Token(Token = "0x4000F59")]
			AllToScore,
			[Token(Token = "0x4000F5A")]
			NewToScore,
			[Token(Token = "0x4000F5B")]
			AllReduced,
			[Token(Token = "0x4000F5C")]
			AllToCurrentBlockScore
		}

		[Token(Token = "0x4000F55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public int SplitInto;

		[Token(Token = "0x4000F56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public SplitScoreRule SplitType;

		[Token(Token = "0x4000F57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public int Score;

		[Token(Token = "0x6000FCE")]
		[Address(RVA = "0xCED4A4", Offset = "0xCED4A4", VA = "0xCED4A4", Slot = "5")]
		public override void ApplyToBlock(Block block, Vector3 collisionPoint, Vector3 collisionNormal)
		{
		}

		[Token(Token = "0x6000FCF")]
		[Address(RVA = "0xCED754", Offset = "0xCED754", VA = "0xCED754")]
		public PowerUpBlockSplitter()
		{
		}
	}
	[Token(Token = "0x2000308")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x7709E4", Offset = "0x7709E4")]
	public class PowerUpBlockSwitchLanes : PowerUpBlock
	{
		[Token(Token = "0x4000F5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public List<float> splitTimes;

		[Token(Token = "0x6000FD0")]
		[Address(RVA = "0xCED770", Offset = "0xCED770", VA = "0xCED770", Slot = "5")]
		public override void ApplyToBlock(Block block, Vector3 collisionPoint, Vector3 collisionNormal)
		{
		}

		[Token(Token = "0x6000FD1")]
		[Address(RVA = "0xCED9E4", Offset = "0xCED9E4", VA = "0xCED9E4")]
		public PowerUpBlockSwitchLanes()
		{
		}
	}
	[Token(Token = "0x2000309")]
	public class PowerUpController : MonoBehaviour
	{
		[Token(Token = "0x4000F5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public IntVariable hitCounter;

		[Token(Token = "0x4000F5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected PowerMeter powerMeter;

		[Token(Token = "0x4000F60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected PowerUpSensor sensor;

		[Token(Token = "0x4000F61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected PowerUp powerUp;

		[Token(Token = "0x4000F62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform handEffectAttachPoint;

		[Token(Token = "0x4000F63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Transform handObjectAttachPoint;

		[Token(Token = "0x4000F64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public UnityEvent OnTrigger;

		[Token(Token = "0x4000F65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		protected Paddle paddle;

		[Token(Token = "0x4000F66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected HandEffect handEffectModel;

		[Token(Token = "0x4000F67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected GameObject attachmentObject;

		[Token(Token = "0x1700023B")]
		public PowerMeter PowerMeter
		{
			[Token(Token = "0x6000FD2")]
			[Address(RVA = "0xCEDA5C", Offset = "0xCEDA5C", VA = "0xCEDA5C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000FD3")]
			[Address(RVA = "0xCEDA64", Offset = "0xCEDA64", VA = "0xCEDA64")]
			set
			{
			}
		}

		[Token(Token = "0x6000FD4")]
		[Address(RVA = "0xCEDA6C", Offset = "0xCEDA6C", VA = "0xCEDA6C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000FD5")]
		[Address(RVA = "0xCEDD88", Offset = "0xCEDD88", VA = "0xCEDD88")]
		private void Update()
		{
		}

		[Token(Token = "0x6000FD6")]
		[Address(RVA = "0xCEDFF0", Offset = "0xCEDFF0", VA = "0xCEDFF0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000FD7")]
		[Address(RVA = "0xCEE0E0", Offset = "0xCEE0E0", VA = "0xCEE0E0")]
		public void Setup(PowerMeter meter, PowerUp power)
		{
		}

		[Token(Token = "0x6000FD8")]
		[Address(RVA = "0xCEDE48", Offset = "0xCEDE48", VA = "0xCEDE48")]
		protected void FindSensor()
		{
		}

		[Token(Token = "0x6000FD9")]
		[Address(RVA = "0xCEE290", Offset = "0xCEE290", VA = "0xCEE290")]
		protected void Trigger()
		{
		}

		[Token(Token = "0x6000FDA")]
		[Address(RVA = "0xCEDB08", Offset = "0xCEDB08", VA = "0xCEDB08")]
		public void Reset()
		{
		}

		[Token(Token = "0x6000FDB")]
		[Address(RVA = "0xCEEBF0", Offset = "0xCEEBF0", VA = "0xCEEBF0")]
		public PowerUpController()
		{
		}
	}
	[Token(Token = "0x200030A")]
	public abstract class PowerUpField : PowerUp
	{
		[Token(Token = "0x4000F68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		protected BlockSensor shieldObject;

		[Token(Token = "0x4000F69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		protected float distance;

		[Token(Token = "0x4000F6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		protected float lifetime;

		[Token(Token = "0x4000F6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		protected int maxBlocks;

		[Token(Token = "0x4000F6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[SerializeField]
		protected bool onlyIfOwned;

		[Token(Token = "0x4000F6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
		[SerializeField]
		protected bool effectIncomingBlocks;

		[Token(Token = "0x4000F6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5E")]
		[SerializeField]
		protected bool effectOutgoingBlocks;

		[Token(Token = "0x1700023C")]
		public override AppliesTo Type
		{
			[Token(Token = "0x6000FDC")]
			[Address(RVA = "0xCEEBF8", Offset = "0xCEEBF8", VA = "0xCEEBF8", Slot = "4")]
			get
			{
				return default(AppliesTo);
			}
		}

		[Token(Token = "0x1700023D")]
		public BlockSensor ShieldObject
		{
			[Token(Token = "0x6000FDD")]
			[Address(RVA = "0xCEEC00", Offset = "0xCEEC00", VA = "0xCEEC00")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700023E")]
		public float Distance
		{
			[Token(Token = "0x6000FDE")]
			[Address(RVA = "0xCEEC08", Offset = "0xCEEC08", VA = "0xCEEC08")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700023F")]
		public float Lifetime
		{
			[Token(Token = "0x6000FDF")]
			[Address(RVA = "0xCEEC10", Offset = "0xCEEC10", VA = "0xCEEC10")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000240")]
		public int MaxBlocks
		{
			[Token(Token = "0x6000FE0")]
			[Address(RVA = "0xCEEC18", Offset = "0xCEEC18", VA = "0xCEEC18")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000241")]
		public bool OnlyIfOwned
		{
			[Token(Token = "0x6000FE1")]
			[Address(RVA = "0xCEEC20", Offset = "0xCEEC20", VA = "0xCEEC20")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000242")]
		public bool EffectIncomingBlocks
		{
			[Token(Token = "0x6000FE2")]
			[Address(RVA = "0xCEEC28", Offset = "0xCEEC28", VA = "0xCEEC28")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000243")]
		public bool EffectOutgoingBlocks
		{
			[Token(Token = "0x6000FE3")]
			[Address(RVA = "0xCEEC30", Offset = "0xCEEC30", VA = "0xCEEC30")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000FE4")]
		[Address(RVA = "0xCEE7C0", Offset = "0xCEE7C0", VA = "0xCEE7C0")]
		public void Apply(Transform playerPosition)
		{
		}

		[Token(Token = "0x6000FE5")]
		[Address(RVA = "0xCEEC38", Offset = "0xCEEC38", VA = "0xCEEC38")]
		protected PowerUpField()
		{
		}
	}
	[Token(Token = "0x200030B")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x7709F4", Offset = "0x7709F4")]
	public class PowerUpFieldIncreaser : PowerUpField
	{
		[Token(Token = "0x6000FE6")]
		[Address(RVA = "0xCEEC48", Offset = "0xCEEC48", VA = "0xCEEC48")]
		public PowerUpFieldIncreaser()
		{
		}
	}
	[Token(Token = "0x200030C")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x770A04", Offset = "0x770A04")]
	public class PowerUpFieldReverse : PowerUpField
	{
		[Token(Token = "0x6000FE7")]
		[Address(RVA = "0xCEEC58", Offset = "0xCEEC58", VA = "0xCEEC58")]
		public PowerUpFieldReverse()
		{
		}
	}
	[Token(Token = "0x200030D")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x770A14", Offset = "0x770A14")]
	public class PowerUpFieldScreen : PowerUpField
	{
		[Token(Token = "0x6000FE8")]
		[Address(RVA = "0xCEEC68", Offset = "0xCEEC68", VA = "0xCEEC68")]
		public PowerUpFieldScreen()
		{
		}
	}
	[Token(Token = "0x200030E")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x770A24", Offset = "0x770A24")]
	public class PowerUpFieldSplit : PowerUpField
	{
		[Token(Token = "0x6000FE9")]
		[Address(RVA = "0xCEEC78", Offset = "0xCEEC78", VA = "0xCEEC78")]
		public PowerUpFieldSplit()
		{
		}
	}
	[Token(Token = "0x200030F")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x770A34", Offset = "0x770A34")]
	public class PowerUpFieldSwitch : PowerUpField
	{
		[Token(Token = "0x6000FEA")]
		[Address(RVA = "0xCEEC88", Offset = "0xCEEC88", VA = "0xCEEC88")]
		public PowerUpFieldSwitch()
		{
		}
	}
	[Token(Token = "0x2000310")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x770A44", Offset = "0x770A44")]
	public class PowerUpFieldWave : PowerUpField
	{
		[Token(Token = "0x6000FEB")]
		[Address(RVA = "0xCEEC98", Offset = "0xCEEC98", VA = "0xCEEC98")]
		public PowerUpFieldWave()
		{
		}
	}
	[Token(Token = "0x2000311")]
	public class RandomStartRotation : MonoBehaviour
	{
		[Token(Token = "0x6000FEC")]
		[Address(RVA = "0xCF0398", Offset = "0xCF0398", VA = "0xCF0398")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000FED")]
		[Address(RVA = "0xCF0434", Offset = "0xCF0434", VA = "0xCF0434")]
		public RandomStartRotation()
		{
		}
	}
	[Token(Token = "0x2000312")]
	public class RematchController : MonoBehaviour
	{
		[Token(Token = "0x4000F6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MatchMaker ChallengeMaker;

		[Token(Token = "0x4000F70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MatchMaker MultiplayerMaker;

		[Token(Token = "0x6000FEE")]
		[Address(RVA = "0xCF20F4", Offset = "0xCF20F4", VA = "0xCF20F4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000FEF")]
		[Address(RVA = "0xCF2194", Offset = "0xCF2194", VA = "0xCF2194")]
		public RematchController()
		{
		}
	}
	[Token(Token = "0x2000313")]
	public class ScoreController : MonoBehaviour
	{
		[Token(Token = "0x4000F71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public IntVariable Score;

		[Token(Token = "0x4000F72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Animator ScoreAnimator;

		[Token(Token = "0x4000F73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Animator WinAnimator;

		[Token(Token = "0x4000F74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public IntVariable WinningScore;

		[Token(Token = "0x4000F75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float closePercentage;

		[Token(Token = "0x4000F76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		protected int prevScore;

		[Token(Token = "0x6000FF0")]
		[Address(RVA = "0xCFDCF0", Offset = "0xCFDCF0", VA = "0xCFDCF0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000FF1")]
		[Address(RVA = "0xCFDDF8", Offset = "0xCFDDF8", VA = "0xCFDDF8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000FF2")]
		[Address(RVA = "0xCFDEE8", Offset = "0xCFDEE8", VA = "0xCFDEE8")]
		protected void UpdateDisplay()
		{
		}

		[Token(Token = "0x6000FF3")]
		[Address(RVA = "0xCFE154", Offset = "0xCFE154", VA = "0xCFE154")]
		public ScoreController()
		{
		}
	}
	[Token(Token = "0x2000314")]
	public class ScorePanel : MonoBehaviour
	{
		[Token(Token = "0x4000F77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public IntVariable score;

		[Token(Token = "0x4000F78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnityEvent OnScore;

		[Token(Token = "0x4000F79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UnityEvent<Block> OnScoreBlock;

		[Token(Token = "0x6000FF4")]
		[Address(RVA = "0xCFE164", Offset = "0xCFE164", VA = "0xCFE164")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6000FF5")]
		[Address(RVA = "0xCFE32C", Offset = "0xCFE32C", VA = "0xCFE32C")]
		public ScorePanel()
		{
		}
	}
	[Token(Token = "0x2000315")]
	public class ScoreWatcher : MonoBehaviour
	{
		[Token(Token = "0x4000F7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int winningScore;

		[Token(Token = "0x4000F7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public IntVariable playerScore;

		[Token(Token = "0x4000F7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UnityEvent onWin;

		[Token(Token = "0x6000FF6")]
		[Address(RVA = "0xB79598", Offset = "0xB79598", VA = "0xB79598")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000FF7")]
		[Address(RVA = "0xB79688", Offset = "0xB79688", VA = "0xB79688")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000FF8")]
		[Address(RVA = "0xB79778", Offset = "0xB79778", VA = "0xB79778")]
		protected void CheckScore()
		{
		}

		[Token(Token = "0x6000FF9")]
		[Address(RVA = "0xB797D0", Offset = "0xB797D0", VA = "0xB797D0")]
		public ScoreWatcher()
		{
		}
	}
	[Token(Token = "0x2000316")]
	public class SettingsManager : DataManager<SettingsManager>
	{
		[Token(Token = "0x6000FFA")]
		[Address(RVA = "0xB7B57C", Offset = "0xB7B57C", VA = "0xB7B57C")]
		public SettingsManager()
		{
		}
	}
	[Token(Token = "0x2000317")]
	public class SmoothJitter : MonoBehaviour
	{
		[Token(Token = "0x4000F7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float speed;

		[Token(Token = "0x4000F7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float maxDistance;

		[Token(Token = "0x4000F7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected float closeEnough;

		[Token(Token = "0x4000F80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		protected Vector3 goal;

		[Token(Token = "0x6000FFB")]
		[Address(RVA = "0xB7D10C", Offset = "0xB7D10C", VA = "0xB7D10C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000FFC")]
		[Address(RVA = "0xB7D184", Offset = "0xB7D184", VA = "0xB7D184")]
		private void Update()
		{
		}

		[Token(Token = "0x6000FFD")]
		[Address(RVA = "0xB7D148", Offset = "0xB7D148", VA = "0xB7D148")]
		protected void SetGoal()
		{
		}

		[Token(Token = "0x6000FFE")]
		[Address(RVA = "0xB7D2B0", Offset = "0xB7D2B0", VA = "0xB7D2B0")]
		public SmoothJitter()
		{
		}
	}
	[Token(Token = "0x2000318")]
	public enum PlayerStatistic
	{
		[Token(Token = "0x4000F82")]
		GamesPlayed,
		[Token(Token = "0x4000F83")]
		Wins,
		[Token(Token = "0x4000F84")]
		Loses,
		[Token(Token = "0x4000F85")]
		WinPercentage,
		[Token(Token = "0x4000F86")]
		Shutouts,
		[Token(Token = "0x4000F87")]
		MostWinsVs,
		[Token(Token = "0x4000F88")]
		MostLosesVs,
		[Token(Token = "0x4000F89")]
		GloveWithMostHits
	}
	[Serializable]
	[Token(Token = "0x2000319")]
	public class MissingStatException : Exception
	{
		[Token(Token = "0x6000FFF")]
		[Address(RVA = "0xB8FA34", Offset = "0xB8FA34", VA = "0xB8FA34")]
		public MissingStatException()
		{
		}

		[Token(Token = "0x6001000")]
		[Address(RVA = "0xB8FA98", Offset = "0xB8FA98", VA = "0xB8FA98")]
		public MissingStatException(string message)
		{
		}

		[Token(Token = "0x6001001")]
		[Address(RVA = "0xB8FB0C", Offset = "0xB8FB0C", VA = "0xB8FB0C")]
		public MissingStatException(string message, Exception inner)
		{
		}

		[Token(Token = "0x6001002")]
		[Address(RVA = "0xB8FB88", Offset = "0xB8FB88", VA = "0xB8FB88")]
		protected MissingStatException(SerializationInfo info, StreamingContext context)
		{
		}
	}
	[Token(Token = "0x200031A")]
	public class StatsManager : MonoBehaviour
	{
		[Token(Token = "0x4000F8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected IntVariable gamesPlayed;

		[Token(Token = "0x4000F8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected IntVariable gamesWon;

		[Token(Token = "0x4000F8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		protected IntVariable gamesLost;

		[Token(Token = "0x4000F8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		protected IntVariable shutoutsWon;

		[Token(Token = "0x4000F8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		protected KeyValueList glovesUsed;

		[Token(Token = "0x4000F8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		protected KeyValueList opponentsDefeated;

		[Token(Token = "0x4000F90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		protected KeyValueList opponentsLostTo;

		[Token(Token = "0x17000244")]
		public bool HasEnoughToDisplay
		{
			[Token(Token = "0x6001003")]
			[Address(RVA = "0xB81B98", Offset = "0xB81B98", VA = "0xB81B98")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001004")]
		[Address(RVA = "0xB81C34", Offset = "0xB81C34", VA = "0xB81C34")]
		public string Stat(PlayerStatistic stat, string format = "{0}")
		{
			return null;
		}

		[Token(Token = "0x6001005")]
		[Address(RVA = "0xB8216C", Offset = "0xB8216C", VA = "0xB8216C")]
		public void AddMatchResult(Match match)
		{
		}

		[Token(Token = "0x6001006")]
		[Address(RVA = "0xB82404", Offset = "0xB82404", VA = "0xB82404")]
		public string RecordVs(string opponentUID)
		{
			return null;
		}

		[Token(Token = "0x6001007")]
		[Address(RVA = "0xB82570", Offset = "0xB82570", VA = "0xB82570")]
		public StatsManager()
		{
		}
	}
	[Token(Token = "0x200031B")]
	public class TipController : MonoBehaviour
	{
		[Token(Token = "0x200031C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x770A54", Offset = "0x770A54")]
		private sealed class <>c__DisplayClass2_0
		{
			[Token(Token = "0x4000F92")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public TipController <>4__this;

			[Token(Token = "0x4000F93")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Action callback;

			[Token(Token = "0x600100B")]
			[Address(RVA = "0xB332A0", Offset = "0xB332A0", VA = "0xB332A0")]
			public <>c__DisplayClass2_0()
			{
			}

			[Token(Token = "0x600100C")]
			[Address(RVA = "0xB332A8", Offset = "0xB332A8", VA = "0xB332A8")]
			internal void <LoadTip>b__0(JSONNode json)
			{
			}
		}

		[Token(Token = "0x4000F91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UIText tipText;

		[Token(Token = "0x6001008")]
		[Address(RVA = "0xAF1380", Offset = "0xAF1380", VA = "0xAF1380")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001009")]
		[Address(RVA = "0xAF1388", Offset = "0xAF1388", VA = "0xAF1388")]
		public void LoadTip(Action callback)
		{
		}

		[Token(Token = "0x600100A")]
		[Address(RVA = "0xAF1474", Offset = "0xAF1474", VA = "0xAF1474")]
		public TipController()
		{
		}
	}
	[Token(Token = "0x200031D")]
	public class TriggerWatcher : MonoBehaviour
	{
		[Token(Token = "0x4000F94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UnityEvent OnEnter;

		[Token(Token = "0x4000F95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnityEvent<GameObject> OnEnterWithTarget;

		[Token(Token = "0x4000F96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UnityEvent OnExit;

		[Token(Token = "0x4000F97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public UnityEvent<GameObject> OnExitWithTarget;

		[Token(Token = "0x600100D")]
		[Address(RVA = "0xAF5350", Offset = "0xAF5350", VA = "0xAF5350")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x600100E")]
		[Address(RVA = "0xAF53E8", Offset = "0xAF53E8", VA = "0xAF53E8")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x600100F")]
		[Address(RVA = "0xAF5480", Offset = "0xAF5480", VA = "0xAF5480")]
		public TriggerWatcher()
		{
		}
	}
	[Token(Token = "0x200031E")]
	public class TutorialController : MonoBehaviour
	{
		[Token(Token = "0x4000F98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Animator animator;

		[Token(Token = "0x6001010")]
		[Address(RVA = "0xAF5488", Offset = "0xAF5488", VA = "0xAF5488")]
		private void Start()
		{
		}

		[Token(Token = "0x6001011")]
		[Address(RVA = "0xAF5520", Offset = "0xAF5520", VA = "0xAF5520")]
		public void Go()
		{
		}

		[Token(Token = "0x6001012")]
		[Address(RVA = "0xAF5688", Offset = "0xAF5688", VA = "0xAF5688")]
		public void ShowDroneTutorial()
		{
		}

		[Token(Token = "0x6001013")]
		[Address(RVA = "0xAF575C", Offset = "0xAF575C", VA = "0xAF575C")]
		public void Next()
		{
		}

		[Token(Token = "0x6001014")]
		[Address(RVA = "0xAF5804", Offset = "0xAF5804", VA = "0xAF5804")]
		public TutorialController()
		{
		}
	}
	[Token(Token = "0x200031F")]
	public class TutorialDronesController : MonoBehaviour
	{
		[Token(Token = "0x4000F99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public BoolVariable SeenTutorial;

		[Token(Token = "0x4000F9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int minLevel;

		[Token(Token = "0x4000F9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<GameObject> TutorialObjects;

		[Token(Token = "0x6001015")]
		[Address(RVA = "0xAF580C", Offset = "0xAF580C", VA = "0xAF580C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001016")]
		[Address(RVA = "0xAF5920", Offset = "0xAF5920", VA = "0xAF5920")]
		public void Seen()
		{
		}

		[Token(Token = "0x6001017")]
		[Address(RVA = "0xAF5964", Offset = "0xAF5964", VA = "0xAF5964")]
		public TutorialDronesController()
		{
		}
	}
	[Token(Token = "0x2000320")]
	public class VariablePaddle : Paddle
	{
		[Token(Token = "0x4000F9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public float ForceVariance;

		[Token(Token = "0x6001018")]
		[Address(RVA = "0xAF7AF4", Offset = "0xAF7AF4", VA = "0xAF7AF4", Slot = "5")]
		public override float calcVelocity()
		{
			return default(float);
		}

		[Token(Token = "0x6001019")]
		[Address(RVA = "0xAF7B34", Offset = "0xAF7B34", VA = "0xAF7B34")]
		public VariablePaddle()
		{
		}
	}
	[Token(Token = "0x2000321")]
	public class WelcomeBackController : MonoBehaviour
	{
		[Token(Token = "0x4000F9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public StringVariable LastPlayed;

		[Token(Token = "0x4000F9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public IntVariable PlayStreak;

		[Token(Token = "0x4000F9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject DailyStreak;

		[Token(Token = "0x4000FA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GloveList RewardGloves;

		[Token(Token = "0x4000FA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public KeyValueList ownedAwardsList;

		[Token(Token = "0x4000FA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public KeyValueList newAwardsList;

		[Token(Token = "0x4000FA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject DailyAward;

		[Token(Token = "0x4000FA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public GameObject WeeklyAward;

		[Token(Token = "0x17000245")]
		public int RewardDay
		{
			[Token(Token = "0x600101B")]
			[Address(RVA = "0xAFCE68", Offset = "0xAFCE68", VA = "0xAFCE68")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000246")]
		public bool PlayedToday
		{
			[Token(Token = "0x600101C")]
			[Address(RVA = "0xAFCF24", Offset = "0xAFCF24", VA = "0xAFCF24")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000247")]
		public bool PlayedYesterday
		{
			[Token(Token = "0x600101D")]
			[Address(RVA = "0xAFD03C", Offset = "0xAFD03C", VA = "0xAFD03C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000248")]
		public bool HasDailyAward
		{
			[Token(Token = "0x600101E")]
			[Address(RVA = "0xAFD168", Offset = "0xAFD168", VA = "0xAFD168")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000249")]
		public bool HasWeeklyAward
		{
			[Token(Token = "0x600101F")]
			[Address(RVA = "0xAFD218", Offset = "0xAFD218", VA = "0xAFD218")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600101A")]
		[Address(RVA = "0xAFCE64", Offset = "0xAFCE64", VA = "0xAFCE64")]
		private void Start()
		{
		}

		[Token(Token = "0x6001020")]
		[Address(RVA = "0xAFD330", Offset = "0xAFD330", VA = "0xAFD330")]
		public void Go()
		{
		}

		[Token(Token = "0x6001021")]
		[Address(RVA = "0xAFD674", Offset = "0xAFD674", VA = "0xAFD674")]
		protected bool ExtendStreak()
		{
			return default(bool);
		}

		[Token(Token = "0x6001022")]
		[Address(RVA = "0xAFD7D0", Offset = "0xAFD7D0", VA = "0xAFD7D0")]
		public void PresentReward()
		{
		}

		[Token(Token = "0x6001023")]
		[Address(RVA = "0xAFD9CC", Offset = "0xAFD9CC", VA = "0xAFD9CC")]
		public void Claim()
		{
		}

		[Token(Token = "0x6001024")]
		[Address(RVA = "0xAFDAC8", Offset = "0xAFDAC8", VA = "0xAFDAC8")]
		public WelcomeBackController()
		{
		}
	}
	[Token(Token = "0x2000322")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x770A64", Offset = "0x770A64")]
	public class XPLevel : ScriptableObject
	{
		[Token(Token = "0x4000FA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected int level;

		[Token(Token = "0x4000FA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected string label;

		[Token(Token = "0x4000FA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		protected int minXP;

		[Token(Token = "0x4000FA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		protected Texture2D icon;

		[Token(Token = "0x1700024A")]
		public int Level
		{
			[Token(Token = "0x6001025")]
			[Address(RVA = "0xAFE1D4", Offset = "0xAFE1D4", VA = "0xAFE1D4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700024B")]
		public string Label
		{
			[Token(Token = "0x6001026")]
			[Address(RVA = "0xAFE1DC", Offset = "0xAFE1DC", VA = "0xAFE1DC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700024C")]
		public int MinXP
		{
			[Token(Token = "0x6001027")]
			[Address(RVA = "0xAFE1E4", Offset = "0xAFE1E4", VA = "0xAFE1E4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700024D")]
		public Texture2D Icon
		{
			[Token(Token = "0x6001028")]
			[Address(RVA = "0xAFE1EC", Offset = "0xAFE1EC", VA = "0xAFE1EC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001029")]
		[Address(RVA = "0xAFE1F4", Offset = "0xAFE1F4", VA = "0xAFE1F4")]
		public XPLevel()
		{
		}
	}
	[Token(Token = "0x2000323")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x770A74", Offset = "0x770A74")]
	public class XPList : ScriptableObject
	{
		[Token(Token = "0x4000FA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<XPLevel> levels;

		[Token(Token = "0x600102A")]
		[Address(RVA = "0xAFE1FC", Offset = "0xAFE1FC", VA = "0xAFE1FC")]
		public XPLevel Find(int level)
		{
			return null;
		}

		[Token(Token = "0x600102B")]
		[Address(RVA = "0xAFE378", Offset = "0xAFE378", VA = "0xAFE378")]
		public XPList()
		{
		}
	}
	[Token(Token = "0x2000324")]
	public class XPManager : DataManager<XPManager>
	{
		[Token(Token = "0x2000325")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x770A84", Offset = "0x770A84")]
		private sealed class <AwardXPAction>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000FAE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000FAF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000FB0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delay;

			[Token(Token = "0x4000FB1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public XPManager <>4__this;

			[Token(Token = "0x4000FB2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public int xp;

			[Token(Token = "0x1700024F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001036")]
				[Address(RVA = "0xB37CF4", Offset = "0xB37CF4", VA = "0xB37CF4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000250")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001038")]
				[Address(RVA = "0xB37D3C", Offset = "0xB37D3C", VA = "0xB37D3C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001033")]
			[Address(RVA = "0xB37BA0", Offset = "0xB37BA0", VA = "0xB37BA0")]
			[DebuggerHidden]
			public <AwardXPAction>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x6001034")]
			[Address(RVA = "0xB37BCC", Offset = "0xB37BCC", VA = "0xB37BCC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001035")]
			[Address(RVA = "0xB37BD0", Offset = "0xB37BD0", VA = "0xB37BD0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001037")]
			[Address(RVA = "0xB37CFC", Offset = "0xB37CFC", VA = "0xB37CFC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000FAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public IntVariable XP;

		[Token(Token = "0x4000FAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public IntVariable XPLevel;

		[Token(Token = "0x4000FAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public XPList xpList;

		[Token(Token = "0x4000FAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public XPTracker Tracker;

		[Token(Token = "0x1700024E")]
		public static XPLevel Level
		{
			[Token(Token = "0x600102C")]
			[Address(RVA = "0xAF5874", Offset = "0xAF5874", VA = "0xAF5874")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600102D")]
		[Address(RVA = "0xAFE3F0", Offset = "0xAFE3F0", VA = "0xAFE3F0", Slot = "6")]
		protected override void Ready()
		{
		}

		[Token(Token = "0x600102E")]
		[Address(RVA = "0xAFE628", Offset = "0xAFE628", VA = "0xAFE628")]
		private void Destroy()
		{
		}

		[Token(Token = "0x600102F")]
		[Address(RVA = "0xAFE4D8", Offset = "0xAFE4D8", VA = "0xAFE4D8")]
		protected void UpdateXP()
		{
		}

		[Token(Token = "0x6001030")]
		[Address(RVA = "0xAFE718", Offset = "0xAFE718", VA = "0xAFE718")]
		public static void AwardXP(int xp, float delay = 0f)
		{
		}

		[Token(Token = "0x6001031")]
		[Address(RVA = "0xAFE854", Offset = "0xAFE854", VA = "0xAFE854")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x777478", Offset = "0x777478")]
		public IEnumerator AwardXPAction(int xp, float delay)
		{
			return null;
		}

		[Token(Token = "0x6001032")]
		[Address(RVA = "0xAFE8E0", Offset = "0xAFE8E0", VA = "0xAFE8E0")]
		public XPManager()
		{
		}
	}
	[Token(Token = "0x2000326")]
	public class XPMeterController : MonoBehaviour
	{
		[Token(Token = "0x4000FB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MaterialParameterFloat valueSlide;

		[Token(Token = "0x4000FB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MaterialParameterFloat growthSlide;

		[Token(Token = "0x4000FB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UIText currentLevelNum;

		[Token(Token = "0x4000FB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public UIText currentLevelLabel;

		[Token(Token = "0x4000FB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public UIText nextLevelNum;

		[Token(Token = "0x4000FB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public UIText nextLevelLabel;

		[Token(Token = "0x4000FB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public UIText currentLevelXPText;

		[Token(Token = "0x4000FBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public UIText nextLevelXPText;

		[Token(Token = "0x4000FBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public UIText currentXPText;

		[Token(Token = "0x6001039")]
		[Address(RVA = "0xAFE958", Offset = "0xAFE958", VA = "0xAFE958")]
		private void Start()
		{
		}

		[Token(Token = "0x600103A")]
		[Address(RVA = "0xAFEA40", Offset = "0xAFEA40", VA = "0xAFEA40")]
		private void Destroy()
		{
		}

		[Token(Token = "0x600103B")]
		[Address(RVA = "0xAFEB28", Offset = "0xAFEB28", VA = "0xAFEB28")]
		private void Update()
		{
		}

		[Token(Token = "0x600103C")]
		[Address(RVA = "0xAFF21C", Offset = "0xAFF21C", VA = "0xAFF21C")]
		protected void OnLevelUp()
		{
		}

		[Token(Token = "0x600103D")]
		[Address(RVA = "0xAFEF10", Offset = "0xAFEF10", VA = "0xAFEF10")]
		protected void UpdateElements(XPLevel currLevel, XPLevel nextLevel)
		{
		}

		[Token(Token = "0x600103E")]
		[Address(RVA = "0xAFED18", Offset = "0xAFED18", VA = "0xAFED18")]
		protected void UpdateSlide(XPLevel currLevel, XPLevel nextLevel)
		{
		}

		[Token(Token = "0x600103F")]
		[Address(RVA = "0xAFF374", Offset = "0xAFF374", VA = "0xAFF374")]
		public XPMeterController()
		{
		}
	}
	[Token(Token = "0x2000327")]
	public class XPTracker : MonoBehaviour
	{
		[Token(Token = "0x4000FBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected int currentXP;

		[Token(Token = "0x4000FBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		protected int currentLevel;

		[Token(Token = "0x4000FBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float timeToUpdateFullBar;

		[Token(Token = "0x4000FBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected Interpolate movement;

		[Token(Token = "0x4000FC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public UnityEvent OnDoneMoving;

		[Token(Token = "0x4000FC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public UnityEvent OnLevelUp;

		[Token(Token = "0x17000251")]
		public XPLevel Level
		{
			[Token(Token = "0x6001040")]
			[Address(RVA = "0xAFEBFC", Offset = "0xAFEBFC", VA = "0xAFEBFC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000252")]
		public XPLevel NextLevel
		{
			[Token(Token = "0x6001041")]
			[Address(RVA = "0xAFEC88", Offset = "0xAFEC88", VA = "0xAFEC88")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000253")]
		public int TargetXP
		{
			[Token(Token = "0x6001042")]
			[Address(RVA = "0xAFF2E8", Offset = "0xAFF2E8", VA = "0xAFF2E8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000254")]
		public int CurrentXP
		{
			[Token(Token = "0x6001043")]
			[Address(RVA = "0xAFF37C", Offset = "0xAFF37C", VA = "0xAFF37C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6001044")]
		[Address(RVA = "0xAFF384", Offset = "0xAFF384", VA = "0xAFF384")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6001045")]
		[Address(RVA = "0xAFF57C", Offset = "0xAFF57C", VA = "0xAFF57C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001046")]
		[Address(RVA = "0xAFF4A0", Offset = "0xAFF4A0", VA = "0xAFF4A0")]
		protected void UpdateXP()
		{
		}

		[Token(Token = "0x6001047")]
		[Address(RVA = "0xAFF630", Offset = "0xAFF630", VA = "0xAFF630")]
		public XPTracker()
		{
		}
	}
}
namespace LIV.SDK.Unity
{
	[Token(Token = "0x2000328")]
	[Flags]
	public enum INVALIDATION_FLAGS : uint
	{
		[Token(Token = "0x4000FC3")]
		NONE = 0u,
		[Token(Token = "0x4000FC4")]
		HMD_CAMERA = 1u,
		[Token(Token = "0x4000FC5")]
		STAGE = 2u,
		[Token(Token = "0x4000FC6")]
		MR_CAMERA_PREFAB = 4u,
		[Token(Token = "0x4000FC7")]
		EXCLUDE_BEHAVIOURS = 8u
	}
	[Token(Token = "0x2000329")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x770AA4", Offset = "0x770AA4")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x770AA4", Offset = "0x770AA4")]
	public class LIV : MonoBehaviour
	{
		[Token(Token = "0x200032A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x770B04", Offset = "0x770B04")]
		private sealed class <WaitForUnityEndOfFrame>d__68 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000FE2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000FE3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000FE4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LIV <>4__this;

			[Token(Token = "0x17000264")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001072")]
				[Address(RVA = "0xB2C4F0", Offset = "0xB2C4F0", VA = "0xB2C4F0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000265")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001074")]
				[Address(RVA = "0xB2C538", Offset = "0xB2C538", VA = "0xB2C538", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600106F")]
			[Address(RVA = "0xB2C3EC", Offset = "0xB2C3EC", VA = "0xB2C3EC")]
			[DebuggerHidden]
			public <WaitForUnityEndOfFrame>d__68(int <>1__state)
			{
			}

			[Token(Token = "0x6001070")]
			[Address(RVA = "0xB2C418", Offset = "0xB2C418", VA = "0xB2C418", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001071")]
			[Address(RVA = "0xB2C41C", Offset = "0xB2C41C", VA = "0xB2C41C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001073")]
			[Address(RVA = "0xB2C4F8", Offset = "0xB2C4F8", VA = "0xB2C4F8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000FC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Action onActivate;

		[Token(Token = "0x4000FC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Action<SDKRender> onPreRender;

		[Token(Token = "0x4000FCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action<SDKRender> onPreRenderBackground;

		[Token(Token = "0x4000FCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Action<SDKRender> onPostRenderBackground;

		[Token(Token = "0x4000FCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Action<SDKRender> onPreRenderForeground;

		[Token(Token = "0x4000FCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Action<SDKRender> onPostRenderForeground;

		[Token(Token = "0x4000FCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Action<SDKRender> onPostRender;

		[Token(Token = "0x4000FCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Action onDeactivate;

		[Token(Token = "0x4000FD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x773B00", Offset = "0x773B00")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x773B00", Offset = "0x773B00")]
		private Transform _stage;

		[Token(Token = "0x4000FD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x773B70", Offset = "0x773B70")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x773B70", Offset = "0x773B70")]
		[SerializeField]
		private Transform _stageTransform;

		[Token(Token = "0x4000FD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x773BE0", Offset = "0x773BE0")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x773BE0", Offset = "0x773BE0")]
		private Camera _HMDCamera;

		[Token(Token = "0x4000FD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x773C50", Offset = "0x773C50")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x773C50", Offset = "0x773C50")]
		[SerializeField]
		private Camera _MRCameraPrefab;

		[Token(Token = "0x4000FD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x773CC0", Offset = "0x773CC0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x773CC0", Offset = "0x773CC0")]
		[SerializeField]
		private bool _disableStandardAssets;

		[Token(Token = "0x4000FD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[SerializeField]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x773D30", Offset = "0x773D30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x773D30", Offset = "0x773D30")]
		private LayerMask _spectatorLayerMask;

		[Token(Token = "0x4000FD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x773DA0", Offset = "0x773DA0")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x773DA0", Offset = "0x773DA0")]
		[SerializeField]
		private string[] _excludeBehaviours;

		[Token(Token = "0x4000FD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x773E10", Offset = "0x773E10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x773E10", Offset = "0x773E10")]
		private bool _fixPostEffectsAlpha;

		[Token(Token = "0x4000FD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
		private bool _isActive;

		[Token(Token = "0x4000FD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private SDKRender _render;

		[Token(Token = "0x4000FDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private bool _wasReady;

		[Token(Token = "0x4000FDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private INVALIDATION_FLAGS _invalidate;

		[Token(Token = "0x4000FDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Transform _stageCandidate;

		[Token(Token = "0x4000FDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Camera _HMDCameraCandidate;

		[Token(Token = "0x4000FDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Camera _MRCameraPrefabCandidate;

		[Token(Token = "0x4000FDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private string[] _excludeBehavioursCandidate;

		[Token(Token = "0x4000FE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private bool _enabled;

		[Token(Token = "0x4000FE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Coroutine _waitForEndOfFrameCoroutine;

		[Token(Token = "0x17000255")]
		public Transform stage
		{
			[Token(Token = "0x6001048")]
			[Address(RVA = "0xBCA3F8", Offset = "0xBCA3F8", VA = "0xBCA3F8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001049")]
			[Address(RVA = "0xBCA494", Offset = "0xBCA494", VA = "0xBCA494")]
			set
			{
			}
		}

		[Token(Token = "0x17000256")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x7775E8", Offset = "0x7775E8")]
		public Transform trackedSpaceOrigin
		{
			[Token(Token = "0x600104A")]
			[Address(RVA = "0xBCA5A8", Offset = "0xBCA5A8", VA = "0xBCA5A8")]
			get
			{
				return null;
			}
			[Token(Token = "0x600104B")]
			[Address(RVA = "0xBCA5AC", Offset = "0xBCA5AC", VA = "0xBCA5AC")]
			set
			{
			}
		}

		[Token(Token = "0x17000257")]
		public Matrix4x4 stageLocalToWorldMatrix
		{
			[Token(Token = "0x600104C")]
			[Address(RVA = "0xBCA5B0", Offset = "0xBCA5B0", VA = "0xBCA5B0")]
			get
			{
				return default(Matrix4x4);
			}
		}

		[Token(Token = "0x17000258")]
		public Matrix4x4 stageWorldToLocalMatrix
		{
			[Token(Token = "0x600104D")]
			[Address(RVA = "0xBCA680", Offset = "0xBCA680", VA = "0xBCA680")]
			get
			{
				return default(Matrix4x4);
			}
		}

		[Token(Token = "0x17000259")]
		public Transform stageTransform
		{
			[Token(Token = "0x600104E")]
			[Address(RVA = "0xBCA750", Offset = "0xBCA750", VA = "0xBCA750")]
			get
			{
				return null;
			}
			[Token(Token = "0x600104F")]
			[Address(RVA = "0xBCA758", Offset = "0xBCA758", VA = "0xBCA758")]
			set
			{
			}
		}

		[Token(Token = "0x1700025A")]
		public Camera HMDCamera
		{
			[Token(Token = "0x6001050")]
			[Address(RVA = "0xBCA760", Offset = "0xBCA760", VA = "0xBCA760")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001051")]
			[Address(RVA = "0xBCA768", Offset = "0xBCA768", VA = "0xBCA768")]
			set
			{
			}
		}

		[Token(Token = "0x1700025B")]
		public Camera MRCameraPrefab
		{
			[Token(Token = "0x6001052")]
			[Address(RVA = "0xBCA87C", Offset = "0xBCA87C", VA = "0xBCA87C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001053")]
			[Address(RVA = "0xBCA884", Offset = "0xBCA884", VA = "0xBCA884")]
			set
			{
			}
		}

		[Token(Token = "0x1700025C")]
		public bool disableStandardAssets
		{
			[Token(Token = "0x6001054")]
			[Address(RVA = "0xBCA920", Offset = "0xBCA920", VA = "0xBCA920")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001055")]
			[Address(RVA = "0xBCA928", Offset = "0xBCA928", VA = "0xBCA928")]
			set
			{
			}
		}

		[Token(Token = "0x1700025D")]
		public LayerMask spectatorLayerMask
		{
			[Token(Token = "0x6001056")]
			[Address(RVA = "0xBCA934", Offset = "0xBCA934", VA = "0xBCA934")]
			get
			{
				return default(LayerMask);
			}
			[Token(Token = "0x6001057")]
			[Address(RVA = "0xBCA93C", Offset = "0xBCA93C", VA = "0xBCA93C")]
			set
			{
			}
		}

		[Token(Token = "0x1700025E")]
		public string[] excludeBehaviours
		{
			[Token(Token = "0x6001058")]
			[Address(RVA = "0xBCA944", Offset = "0xBCA944", VA = "0xBCA944")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001059")]
			[Address(RVA = "0xBCA94C", Offset = "0xBCA94C", VA = "0xBCA94C")]
			set
			{
			}
		}

		[Token(Token = "0x1700025F")]
		public bool fixPostEffectsAlpha
		{
			[Token(Token = "0x600105A")]
			[Address(RVA = "0xBCA990", Offset = "0xBCA990", VA = "0xBCA990")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600105B")]
			[Address(RVA = "0xBCA998", Offset = "0xBCA998", VA = "0xBCA998")]
			set
			{
			}
		}

		[Token(Token = "0x17000260")]
		public bool isValid
		{
			[Token(Token = "0x600105C")]
			[Address(RVA = "0xBCA9A4", Offset = "0xBCA9A4", VA = "0xBCA9A4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000261")]
		public bool isActive
		{
			[Token(Token = "0x600105D")]
			[Address(RVA = "0xBCAB40", Offset = "0xBCAB40", VA = "0xBCAB40")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000262")]
		private bool _isReady
		{
			[Token(Token = "0x600105E")]
			[Address(RVA = "0xBCAB48", Offset = "0xBCAB48", VA = "0xBCAB48")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000263")]
		public SDKRender render
		{
			[Token(Token = "0x600105F")]
			[Address(RVA = "0xBCABCC", Offset = "0xBCABCC", VA = "0xBCABCC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001060")]
		[Address(RVA = "0xBCABD4", Offset = "0xBCABD4", VA = "0xBCABD4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001061")]
		[Address(RVA = "0xBCAC38", Offset = "0xBCAC38", VA = "0xBCAC38")]
		private void Update()
		{
		}

		[Token(Token = "0x6001062")]
		[Address(RVA = "0xBCAD70", Offset = "0xBCAD70", VA = "0xBCAD70")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001063")]
		[Address(RVA = "0xBCAD78", Offset = "0xBCAD78", VA = "0xBCAD78")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x777528", Offset = "0x777528")]
		private IEnumerator WaitForUnityEndOfFrame()
		{
			return null;
		}

		[Token(Token = "0x6001064")]
		[Address(RVA = "0xBCABE0", Offset = "0xBCABE0", VA = "0xBCABE0")]
		private void UpdateSDKReady()
		{
		}

		[Token(Token = "0x6001065")]
		[Address(RVA = "0xBCADE4", Offset = "0xBCADE4", VA = "0xBCADE4")]
		private void OnSDKReadyChanged(bool value)
		{
		}

		[Token(Token = "0x6001066")]
		[Address(RVA = "0xBCADF0", Offset = "0xBCADF0", VA = "0xBCADF0")]
		private void OnSDKActivate()
		{
		}

		[Token(Token = "0x6001067")]
		[Address(RVA = "0xBCAEA0", Offset = "0xBCAEA0", VA = "0xBCAEA0")]
		private void OnSDKDeactivate()
		{
		}

		[Token(Token = "0x6001068")]
		[Address(RVA = "0xBCB0DC", Offset = "0xBCB0DC", VA = "0xBCB0DC")]
		private void CreateAssets()
		{
		}

		[Token(Token = "0x6001069")]
		[Address(RVA = "0xBCB1D0", Offset = "0xBCB1D0", VA = "0xBCB1D0")]
		private void DestroyAssets()
		{
		}

		[Token(Token = "0x600106A")]
		[Address(RVA = "0xBCB150", Offset = "0xBCB150", VA = "0xBCB150")]
		private void StartRenderCoroutine()
		{
		}

		[Token(Token = "0x600106B")]
		[Address(RVA = "0xBCB1A0", Offset = "0xBCB1A0", VA = "0xBCB1A0")]
		private void StopRenderCoroutine()
		{
		}

		[Token(Token = "0x600106C")]
		[Address(RVA = "0xBCAF5C", Offset = "0xBCAF5C", VA = "0xBCAF5C")]
		private void SubmitSDKOutput()
		{
		}

		[Token(Token = "0x600106D")]
		[Address(RVA = "0xBCAC5C", Offset = "0xBCAC5C", VA = "0xBCAC5C")]
		private void Invalidate()
		{
		}

		[Token(Token = "0x600106E")]
		[Address(RVA = "0xBCB200", Offset = "0xBCB200", VA = "0xBCB200")]
		public LIV()
		{
		}
	}
	[Token(Token = "0x200032B")]
	public static class SDKBridge
	{
		[Token(Token = "0x200032C")]
		public struct SDKInjection<T>
		{
			[Token(Token = "0x4000FEC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool active;

			[Token(Token = "0x4000FED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action action;

			[Token(Token = "0x4000FEE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T data;
		}

		[Token(Token = "0x4000FE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static SDKInjection<SDKInputFrame> _injection_SDKInputFrame;

		[Token(Token = "0x4000FE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private static SDKInjection<SDKResolution> _injection_SDKResolution;

		[Token(Token = "0x4000FE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private static SDKInjection<bool> _injection_IsActive;

		[Token(Token = "0x4000FE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		private static bool _injection_DisableSubmit;

		[Token(Token = "0x4000FE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x199")]
		private static bool _injection_DisableSubmitApplicationOutput;

		[Token(Token = "0x4000FEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19A")]
		private static bool _injection_DisableAddTexture;

		[Token(Token = "0x4000FEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19B")]
		private static bool _injection_DisableCreateFrame;

		[Token(Token = "0x17000266")]
		public static bool IsActive
		{
			[Token(Token = "0x6001087")]
			[Address(RVA = "0xCF4DDC", Offset = "0xCF4DDC", VA = "0xCF4DDC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001075")]
		[Address(RVA = "0xCF4944", Offset = "0xCF4944", VA = "0xCF4944")]
		public static int AddStringToChannel(int slot, IntPtr str, int length, ulong tag)
		{
			return default(int);
		}

		[Token(Token = "0x6001076")]
		[Address(RVA = "0xCF494C", Offset = "0xCF494C", VA = "0xCF494C")]
		public static int addtexture(IntPtr sourcetexture, ulong tag)
		{
			return default(int);
		}

		[Token(Token = "0x6001077")]
		[Address(RVA = "0xCF4954", Offset = "0xCF4954", VA = "0xCF4954")]
		public static ulong GetObjectTimeStamp(IntPtr obj)
		{
			return default(ulong);
		}

		[Token(Token = "0x6001078")]
		[Address(RVA = "0xCF495C", Offset = "0xCF495C", VA = "0xCF495C")]
		public static ulong GetCurrentTimeTicks()
		{
			return default(ulong);
		}

		[Token(Token = "0x6001079")]
		[Address(RVA = "0xCF4964", Offset = "0xCF4964", VA = "0xCF4964")]
		private static bool GetIsCaptureActive()
		{
			return default(bool);
		}

		[Token(Token = "0x600107A")]
		[Address(RVA = "0xCF496C", Offset = "0xCF496C", VA = "0xCF496C")]
		public static IntPtr GetRenderEventFunc()
		{
			return default(IntPtr);
		}

		[Token(Token = "0x600107B")]
		[Address(RVA = "0xCF49A8", Offset = "0xCF49A8", VA = "0xCF49A8")]
		public static IntPtr GetCompositorChannelObject(int slot, ulong tag, ulong timestamp)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x600107C")]
		[Address(RVA = "0xCF49E4", Offset = "0xCF49E4", VA = "0xCF49E4")]
		public static int AddObjectToCompositorChannel(int slot, IntPtr obj, int objectsize, ulong tag)
		{
			return default(int);
		}

		[Token(Token = "0x600107D")]
		[Address(RVA = "0xCF49EC", Offset = "0xCF49EC", VA = "0xCF49EC")]
		public static int AddObjectToFrame(IntPtr obj, int objectsize, ulong tag)
		{
			return default(int);
		}

		[Token(Token = "0x600107E")]
		[Address(RVA = "0xCF49F4", Offset = "0xCF49F4", VA = "0xCF49F4")]
		public static IntPtr updatinputframe(IntPtr InputFrame)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x600107F")]
		[Address(RVA = "0xCF4A30", Offset = "0xCF4A30", VA = "0xCF4A30")]
		public static IntPtr GetViewportTexture()
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6001080")]
		[Address(RVA = "0xCF4A6C", Offset = "0xCF4A6C", VA = "0xCF4A6C")]
		public static IntPtr GetChannelObject(int slot, ulong tag, ulong timestamp)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6001081")]
		[Address(RVA = "0xCF4AA8", Offset = "0xCF4AA8", VA = "0xCF4AA8")]
		public static int AddObjectToChannel(int slot, IntPtr obj, int objectsize, ulong tag)
		{
			return default(int);
		}

		[Token(Token = "0x6001082")]
		[Address(RVA = "0xCF4AB0", Offset = "0xCF4AB0", VA = "0xCF4AB0")]
		public static ulong Tag(string str)
		{
			return default(ulong);
		}

		[Token(Token = "0x6001083")]
		[Address(RVA = "0xCF4B38", Offset = "0xCF4B38", VA = "0xCF4B38")]
		public static void AddString(string tag, string value, int slot)
		{
		}

		[Token(Token = "0x6001084")]
		[Address(RVA = "0xCF4C48", Offset = "0xCF4C48", VA = "0xCF4C48")]
		public static void AddTexture(SDKTexture texture, ulong tag)
		{
		}

		[Token(Token = "0x6001085")]
		[Address(RVA = "0xCF4D0C", Offset = "0xCF4D0C", VA = "0xCF4D0C")]
		public static ulong GetObjectTime(IntPtr objectptr)
		{
			return default(ulong);
		}

		[Token(Token = "0x6001086")]
		[Address(RVA = "0xCF4D74", Offset = "0xCF4D74", VA = "0xCF4D74")]
		public static ulong GetCurrentTime()
		{
			return default(ulong);
		}

		[Token(Token = "0x6001088")]
		[Address(RVA = "0xCF4E90", Offset = "0xCF4E90", VA = "0xCF4E90")]
		public static void IssuePluginEvent()
		{
		}

		[Token(Token = "0x6001089")]
		[Address(RVA = "0xCF4F44", Offset = "0xCF4F44", VA = "0xCF4F44")]
		public static void SubmitApplicationOutput(SDKApplicationOutput applicationOutput)
		{
		}

		[Token(Token = "0x600108A")]
		public static bool GetStructFromGlobalChannel<T>(ref T mystruct, int channel, ulong tag)
		{
			return default(bool);
		}

		[Token(Token = "0x600108B")]
		public static int AddStructToGlobalChannel<T>(ref T mystruct, int channel, ulong tag)
		{
			return default(int);
		}

		[Token(Token = "0x600108C")]
		public static bool GetStructFromLocalChannel<T>(ref T mystruct, int channel, ulong tag)
		{
			return default(bool);
		}

		[Token(Token = "0x600108D")]
		public static int AddStructToLocalChannel<T>(ref T mystruct, int channel, ulong tag)
		{
			return default(int);
		}

		[Token(Token = "0x600108E")]
		public static void AddStructToFrame<T>(ref T mystruct, ulong tag)
		{
		}

		[Token(Token = "0x600108F")]
		[Address(RVA = "0xCF5148", Offset = "0xCF5148", VA = "0xCF5148")]
		public static bool UpdateInputFrame(ref SDKInputFrame setframe)
		{
			return default(bool);
		}

		[Token(Token = "0x6001090")]
		[Address(RVA = "0xCF5558", Offset = "0xCF5558", VA = "0xCF5558")]
		public static SDKTexture GetViewfinderTexture()
		{
			return default(SDKTexture);
		}

		[Token(Token = "0x6001091")]
		[Address(RVA = "0xCF5778", Offset = "0xCF5778", VA = "0xCF5778")]
		public static void AddTexture(SDKTexture texture)
		{
		}

		[Token(Token = "0x6001092")]
		[Address(RVA = "0xCF58BC", Offset = "0xCF58BC", VA = "0xCF58BC")]
		public static void CreateFrame(SDKOutputFrame frame)
		{
		}

		[Token(Token = "0x6001093")]
		[Address(RVA = "0xCF5A38", Offset = "0xCF5A38", VA = "0xCF5A38")]
		public static void SetGroundPlane(SDKPlane groundPlane)
		{
		}

		[Token(Token = "0x6001094")]
		[Address(RVA = "0xCF5AE4", Offset = "0xCF5AE4", VA = "0xCF5AE4")]
		public static bool GetResolution(ref SDKResolution sdkResolution)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200032D")]
	public class SDKRender : IDisposable
	{
		[Token(Token = "0x4000FEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private CommandBuffer _clipPlaneCommandBuffer;

		[Token(Token = "0x4000FF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CommandBuffer _combineAlphaCommandBuffer;

		[Token(Token = "0x4000FF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private CommandBuffer _captureTextureCommandBuffer;

		[Token(Token = "0x4000FF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private CommandBuffer _applyTextureCommandBuffer;

		[Token(Token = "0x4000FF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private CommandBuffer _optimizedRenderingCommandBuffer;

		[Token(Token = "0x4000FF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private CameraEvent _clipPlaneCameraEvent;

		[Token(Token = "0x4000FF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private CameraEvent _clipPlaneCombineAlphaCameraEvent;

		[Token(Token = "0x4000FF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private CameraEvent _captureTextureEvent;

		[Token(Token = "0x4000FF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private CameraEvent _applyTextureEvent;

		[Token(Token = "0x4000FF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private CameraEvent _optimizedRenderingCameraEvent;

		[Token(Token = "0x4000FF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Mesh _clipPlaneMesh;

		[Token(Token = "0x4000FFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Material _clipPlaneSimpleMaterial;

		[Token(Token = "0x4000FFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Material _clipPlaneSimpleDebugMaterial;

		[Token(Token = "0x4000FFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Material _clipPlaneComplexMaterial;

		[Token(Token = "0x4000FFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Material _clipPlaneComplexDebugMaterial;

		[Token(Token = "0x4000FFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Material _writeOpaqueToAlphaMaterial;

		[Token(Token = "0x4000FFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Material _combineAlphaMaterial;

		[Token(Token = "0x4001000")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Material _writeMaterial;

		[Token(Token = "0x4001001")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Material _forceForwardRenderingMaterial;

		[Token(Token = "0x4001002")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private RenderTexture _backgroundRenderTexture;

		[Token(Token = "0x4001003")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private RenderTexture _foregroundRenderTexture;

		[Token(Token = "0x4001004")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private RenderTexture _optimizedRenderTexture;

		[Token(Token = "0x4001005")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private RenderTexture _complexClipPlaneRenderTexture;

		[Token(Token = "0x4001006")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private LIV _liv;

		[Token(Token = "0x4001007")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private SDKOutputFrame _outputFrame;

		[Token(Token = "0x4001008")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private SDKInputFrame _inputFrame;

		[Token(Token = "0x4001009")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
		private SDKResolution _resolution;

		[Token(Token = "0x400100A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
		private Camera _cameraInstance;

		[Token(Token = "0x400100B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
		private SDKPose _requestedPose;

		[Token(Token = "0x400100C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x348")]
		private int _requestedPoseFrameIndex;

		[Token(Token = "0x17000267")]
		private bool useDeferredRendering
		{
			[Token(Token = "0x6001098")]
			[Address(RVA = "0xCF7D6C", Offset = "0xCF7D6C", VA = "0xCF7D6C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000268")]
		private bool interlacedRendering
		{
			[Token(Token = "0x6001099")]
			[Address(RVA = "0xCF7DC4", Offset = "0xCF7DC4", VA = "0xCF7DC4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000269")]
		private bool canRenderBackground
		{
			[Token(Token = "0x600109A")]
			[Address(RVA = "0xCF7DDC", Offset = "0xCF7DDC", VA = "0xCF7DDC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700026A")]
		private bool canRenderForeground
		{
			[Token(Token = "0x600109B")]
			[Address(RVA = "0xCF7E74", Offset = "0xCF7E74", VA = "0xCF7E74")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700026B")]
		private bool canRenderOptimized
		{
			[Token(Token = "0x600109C")]
			[Address(RVA = "0xCF7F20", Offset = "0xCF7F20", VA = "0xCF7F20")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700026C")]
		public LIV liv
		{
			[Token(Token = "0x60010A5")]
			[Address(RVA = "0xCFB9B4", Offset = "0xCFB9B4", VA = "0xCFB9B4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700026D")]
		public SDKOutputFrame outputFrame
		{
			[Token(Token = "0x60010A6")]
			[Address(RVA = "0xCFB9BC", Offset = "0xCFB9BC", VA = "0xCFB9BC")]
			get
			{
				return default(SDKOutputFrame);
			}
		}

		[Token(Token = "0x1700026E")]
		public SDKInputFrame inputFrame
		{
			[Token(Token = "0x60010A7")]
			[Address(RVA = "0xCFB9CC", Offset = "0xCFB9CC", VA = "0xCFB9CC")]
			get
			{
				return default(SDKInputFrame);
			}
		}

		[Token(Token = "0x1700026F")]
		public SDKResolution resolution
		{
			[Token(Token = "0x60010A8")]
			[Address(RVA = "0xCFB9DC", Offset = "0xCFB9DC", VA = "0xCFB9DC")]
			get
			{
				return default(SDKResolution);
			}
		}

		[Token(Token = "0x17000270")]
		public Camera cameraInstance
		{
			[Token(Token = "0x60010A9")]
			[Address(RVA = "0xCFB9E4", Offset = "0xCFB9E4", VA = "0xCFB9E4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000271")]
		public Camera cameraReference
		{
			[Token(Token = "0x60010AA")]
			[Address(RVA = "0xCFADD4", Offset = "0xCFADD4", VA = "0xCFADD4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000272")]
		public Camera hmdCamera
		{
			[Token(Token = "0x60010AB")]
			[Address(RVA = "0xCFB9EC", Offset = "0xCFB9EC", VA = "0xCFB9EC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000273")]
		public Transform stage
		{
			[Token(Token = "0x60010AC")]
			[Address(RVA = "0xCFBA08", Offset = "0xCFBA08", VA = "0xCFBA08")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000274")]
		public Transform stageTransform
		{
			[Token(Token = "0x60010AD")]
			[Address(RVA = "0xCFBA24", Offset = "0xCFBA24", VA = "0xCFBA24")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000275")]
		public Matrix4x4 stageLocalToWorldMatrix
		{
			[Token(Token = "0x60010AE")]
			[Address(RVA = "0xCFBA40", Offset = "0xCFBA40", VA = "0xCFBA40")]
			get
			{
				return default(Matrix4x4);
			}
		}

		[Token(Token = "0x17000276")]
		public Matrix4x4 localToWorldMatrix
		{
			[Token(Token = "0x60010AF")]
			[Address(RVA = "0xCFA234", Offset = "0xCFA234", VA = "0xCFA234")]
			get
			{
				return default(Matrix4x4);
			}
		}

		[Token(Token = "0x17000277")]
		public int spectatorLayerMask
		{
			[Token(Token = "0x60010B0")]
			[Address(RVA = "0xCFA304", Offset = "0xCFA304", VA = "0xCFA304")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000278")]
		public bool disableStandardAssets
		{
			[Token(Token = "0x60010B1")]
			[Address(RVA = "0xCFA814", Offset = "0xCFA814", VA = "0xCFA814")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000279")]
		public bool canSetPose
		{
			[Token(Token = "0x60010B2")]
			[Address(RVA = "0xCFBB20", Offset = "0xCFBB20", VA = "0xCFBB20")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001096")]
		[Address(RVA = "0xCF7B9C", Offset = "0xCF7B9C", VA = "0xCF7B9C")]
		private Material GetClipPlaneMaterial(bool debugClipPlane, bool complexClipPlane, ColorWriteMask colorWriteMask)
		{
			return null;
		}

		[Token(Token = "0x6001097")]
		[Address(RVA = "0xCF7CC4", Offset = "0xCF7CC4", VA = "0xCF7CC4")]
		private Material GetGroundClipPlaneMaterial(bool debugClipPlane, ColorWriteMask colorWriteMask)
		{
			return null;
		}

		[Token(Token = "0x600109D")]
		[Address(RVA = "0xCF7FA4", Offset = "0xCF7FA4", VA = "0xCF7FA4")]
		public SDKRender(LIV liv)
		{
		}

		[Token(Token = "0x600109E")]
		[Address(RVA = "0xCF8798", Offset = "0xCF8798", VA = "0xCF8798")]
		public void Render()
		{
		}

		[Token(Token = "0x600109F")]
		[Address(RVA = "0xCF8EA8", Offset = "0xCF8EA8", VA = "0xCF8EA8")]
		private void RenderBackground()
		{
		}

		[Token(Token = "0x60010A0")]
		[Address(RVA = "0xCF91A8", Offset = "0xCF91A8", VA = "0xCF91A8")]
		private void RenderForeground()
		{
		}

		[Token(Token = "0x60010A1")]
		[Address(RVA = "0xCF9B50", Offset = "0xCF9B50", VA = "0xCF9B50")]
		private void RenderOptimized()
		{
		}

		[Token(Token = "0x60010A2")]
		[Address(RVA = "0xCF8100", Offset = "0xCF8100", VA = "0xCF8100")]
		private void CreateAssets()
		{
		}

		[Token(Token = "0x60010A3")]
		[Address(RVA = "0xCFB6C0", Offset = "0xCFB6C0", VA = "0xCFB6C0")]
		private void DestroyAssets()
		{
		}

		[Token(Token = "0x60010A4")]
		[Address(RVA = "0xCFB860", Offset = "0xCFB860", VA = "0xCFB860", Slot = "4")]
		public void Dispose()
		{
		}

		[Token(Token = "0x60010B3")]
		[Address(RVA = "0xCFBB40", Offset = "0xCFBB40", VA = "0xCFBB40")]
		public bool SetPose(Vector3 position, Quaternion rotation, float verticalFieldOfView = 60f, bool useLocalSpace = false)
		{
			return default(bool);
		}

		[Token(Token = "0x60010B4")]
		[Address(RVA = "0xCFBEC4", Offset = "0xCFBEC4", VA = "0xCFBEC4")]
		public void SetGroundPlane(float distance, Vector3 normal, bool useLocalSpace = false)
		{
		}

		[Token(Token = "0x60010B5")]
		[Address(RVA = "0xCFC074", Offset = "0xCFC074", VA = "0xCFC074")]
		public void SetGroundPlane(Plane plane, bool useLocalSpace = false)
		{
		}

		[Token(Token = "0x60010B6")]
		[Address(RVA = "0xCFC0F0", Offset = "0xCFC0F0", VA = "0xCFC0F0")]
		public void SetGroundPlane(Transform transform, bool useLocalSpace = false)
		{
		}

		[Token(Token = "0x60010B7")]
		[Address(RVA = "0xCFB8A4", Offset = "0xCFB8A4", VA = "0xCFB8A4")]
		private void ReleaseBridgePoseControl()
		{
		}

		[Token(Token = "0x60010B8")]
		[Address(RVA = "0xCF8868", Offset = "0xCF8868", VA = "0xCF8868")]
		private void UpdateBridgeResolution()
		{
		}

		[Token(Token = "0x60010B9")]
		[Address(RVA = "0xCF88CC", Offset = "0xCF88CC", VA = "0xCF88CC")]
		private void UpdateBridgeInputFrame()
		{
		}

		[Token(Token = "0x60010BA")]
		[Address(RVA = "0xCF8E3C", Offset = "0xCF8E3C", VA = "0xCF8E3C")]
		private void InvokePreRender()
		{
		}

		[Token(Token = "0x60010BB")]
		[Address(RVA = "0xCFA020", Offset = "0xCFA020", VA = "0xCFA020")]
		private void IvokePostRender()
		{
		}

		[Token(Token = "0x60010BC")]
		[Address(RVA = "0xCFA5A0", Offset = "0xCFA5A0", VA = "0xCFA5A0")]
		private void InvokePreRenderBackground()
		{
		}

		[Token(Token = "0x60010BD")]
		[Address(RVA = "0xCFA718", Offset = "0xCFA718", VA = "0xCFA718")]
		private void InvokePostRenderBackground()
		{
		}

		[Token(Token = "0x60010BE")]
		[Address(RVA = "0xCFAC18", Offset = "0xCFAC18", VA = "0xCFAC18")]
		private void InvokePreRenderForeground()
		{
		}

		[Token(Token = "0x60010BF")]
		[Address(RVA = "0xCFAC84", Offset = "0xCFAC84", VA = "0xCFAC84")]
		private void InvokePostRenderForeground()
		{
		}

		[Token(Token = "0x60010C0")]
		[Address(RVA = "0xCFC278", Offset = "0xCFC278", VA = "0xCFC278")]
		private void CreateBackgroundTexture()
		{
		}

		[Token(Token = "0x60010C1")]
		[Address(RVA = "0xCFC4A4", Offset = "0xCFC4A4", VA = "0xCFC4A4")]
		private void CreateForegroundTexture()
		{
		}

		[Token(Token = "0x60010C2")]
		[Address(RVA = "0xCFC544", Offset = "0xCFC544", VA = "0xCFC544")]
		private void CreateOptimizedTexture()
		{
		}

		[Token(Token = "0x60010C3")]
		[Address(RVA = "0xCFC5E4", Offset = "0xCFC5E4", VA = "0xCFC5E4")]
		private void CreateComplexClipPlaneTexture()
		{
		}

		[Token(Token = "0x60010C4")]
		[Address(RVA = "0xCF8B80", Offset = "0xCF8B80", VA = "0xCF8B80")]
		private void UpdateTextures()
		{
		}

		[Token(Token = "0x60010C5")]
		[Address(RVA = "0xCFA60C", Offset = "0xCFA60C", VA = "0xCFA60C")]
		private void SendTextureToBridge(RenderTexture texture, TEXTURE_ID id)
		{
		}
	}
	[Token(Token = "0x200032E")]
	internal static class SDKShaders
	{
		[Token(Token = "0x400100D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly int LIV_COLOR_MASK;

		[Token(Token = "0x400100E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static readonly int LIV_TESSELLATION_PROPERTY;

		[Token(Token = "0x400100F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly int LIV_CLIP_PLANE_HEIGHT_MAP_PROPERTY;

		[Token(Token = "0x4001010")]
		public const string LIV_MR_FOREGROUND_KEYWORD = "LIV_MR_FOREGROUND";

		[Token(Token = "0x4001011")]
		public const string LIV_MR_BACKGROUND_KEYWORD = "LIV_MR_BACKGROUND";

		[Token(Token = "0x4001012")]
		public const string LIV_MR_KEYWORD = "LIV_MR";

		[Token(Token = "0x4001013")]
		public const string LIV_CLIP_PLANE_SIMPLE_SHADER = "Hidden/LIV_ClipPlaneSimple";

		[Token(Token = "0x4001014")]
		public const string LIV_CLIP_PLANE_SIMPLE_DEBUG_SHADER = "Hidden/LIV_ClipPlaneSimpleDebug";

		[Token(Token = "0x4001015")]
		public const string LIV_CLIP_PLANE_COMPLEX_SHADER = "Hidden/LIV_ClipPlaneComplex";

		[Token(Token = "0x4001016")]
		public const string LIV_CLIP_PLANE_COMPLEX_DEBUG_SHADER = "Hidden/LIV_ClipPlaneComplexDebug";

		[Token(Token = "0x4001017")]
		public const string LIV_WRITE_OPAQUE_TO_ALPHA_SHADER = "Hidden/LIV_WriteOpaqueToAlpha";

		[Token(Token = "0x4001018")]
		public const string LIV_COMBINE_ALPHA_SHADER = "Hidden/LIV_CombineAlpha";

		[Token(Token = "0x4001019")]
		public const string LIV_WRITE_SHADER = "Hidden/LIV_Write";

		[Token(Token = "0x400101A")]
		public const string LIV_FORCE_FORWARD_RENDERING_SHADER = "Hidden/LIV_ForceForwardRendering";

		[Token(Token = "0x60010C6")]
		[Address(RVA = "0xCFA510", Offset = "0xCFA510", VA = "0xCFA510")]
		public static void StartRendering()
		{
		}

		[Token(Token = "0x60010C7")]
		[Address(RVA = "0xCFA7CC", Offset = "0xCFA7CC", VA = "0xCFA7CC")]
		public static void StopRendering()
		{
		}

		[Token(Token = "0x60010C8")]
		[Address(RVA = "0xCFABD0", Offset = "0xCFABD0", VA = "0xCFABD0")]
		public static void StartForegroundRendering()
		{
		}

		[Token(Token = "0x60010C9")]
		[Address(RVA = "0xCFACF0", Offset = "0xCFACF0", VA = "0xCFACF0")]
		public static void StopForegroundRendering()
		{
		}

		[Token(Token = "0x60010CA")]
		[Address(RVA = "0xCFA558", Offset = "0xCFA558", VA = "0xCFA558")]
		public static void StartBackgroundRendering()
		{
		}

		[Token(Token = "0x60010CB")]
		[Address(RVA = "0xCFA784", Offset = "0xCFA784", VA = "0xCFA784")]
		public static void StopBackgroundRendering()
		{
		}
	}
	[Token(Token = "0x200032F")]
	public struct SDKConstants
	{
		[Token(Token = "0x400101B")]
		public const string SDK_ID = "BDI6TNWHNHGFO7OUDZZCIX1CPJFRSW3Z";

		[Token(Token = "0x400101C")]
		public const string SDK_VERSION = "1.5.4";

		[Token(Token = "0x400101D")]
		public const string ENGINE_NAME = "unity";
	}
	[Token(Token = "0x2000330")]
	public enum PRIORITY : sbyte
	{
		[Token(Token = "0x400101F")]
		NONE = 0,
		[Token(Token = "0x4001020")]
		GAME = 63
	}
	[Token(Token = "0x2000331")]
	[Flags]
	public enum FEATURES : ulong
	{
		[Token(Token = "0x4001022")]
		NONE = 0uL,
		[Token(Token = "0x4001023")]
		BACKGROUND_RENDER = 1uL,
		[Token(Token = "0x4001024")]
		FOREGROUND_RENDER = 2uL,
		[Token(Token = "0x4001025")]
		COMPLEX_CLIP_PLANE = 4uL,
		[Token(Token = "0x4001026")]
		BACKGROUND_DEPTH_RENDER = 8uL,
		[Token(Token = "0x4001027")]
		OVERRIDE_POST_PROCESSING = 0x10uL,
		[Token(Token = "0x4001028")]
		FIX_FOREGROUND_ALPHA = 0x20uL,
		[Token(Token = "0x4001029")]
		GROUND_CLIP_PLANE = 0x40uL,
		[Token(Token = "0x400102A")]
		RELEASE_CONTROL = 0x8000uL,
		[Token(Token = "0x400102B")]
		OPTIMIZED_RENDER = 0x10000000uL,
		[Token(Token = "0x400102C")]
		INTERLACED_RENDER = 0x20000000uL,
		[Token(Token = "0x400102D")]
		DEBUG_CLIP_PLANE = 0x1000000000000uL
	}
	[Token(Token = "0x2000332")]
	public enum TEXTURE_ID : uint
	{
		[Token(Token = "0x400102F")]
		UNDEFINED = 0u,
		[Token(Token = "0x4001030")]
		BACKGROUND_COLOR_BUFFER_ID = 10u,
		[Token(Token = "0x4001031")]
		FOREGROUND_COLOR_BUFFER_ID = 20u,
		[Token(Token = "0x4001032")]
		OPTIMIZED_COLOR_BUFFER_ID = 30u
	}
	[Token(Token = "0x2000333")]
	public enum TEXTURE_TYPE : uint
	{
		[Token(Token = "0x4001034")]
		UNDEFINED,
		[Token(Token = "0x4001035")]
		COLOR_BUFFER
	}
	[Token(Token = "0x2000334")]
	public enum TEXTURE_FORMAT : uint
	{
		[Token(Token = "0x4001037")]
		UNDEFINED = 0u,
		[Token(Token = "0x4001038")]
		ARGB32 = 10u
	}
	[Token(Token = "0x2000335")]
	public enum TEXTURE_DEVICE : uint
	{
		[Token(Token = "0x400103A")]
		UNDEFINED,
		[Token(Token = "0x400103B")]
		RAW,
		[Token(Token = "0x400103C")]
		DIRECTX,
		[Token(Token = "0x400103D")]
		OPENGL,
		[Token(Token = "0x400103E")]
		VULKAN,
		[Token(Token = "0x400103F")]
		METAL
	}
	[Token(Token = "0x2000336")]
	public enum TEXTURE_COLOR_SPACE : uint
	{
		[Token(Token = "0x4001041")]
		UNDEFINED,
		[Token(Token = "0x4001042")]
		LINEAR,
		[Token(Token = "0x4001043")]
		SRGB
	}
	[Token(Token = "0x2000337")]
	public enum RENDERING_PIPELINE : uint
	{
		[Token(Token = "0x4001045")]
		UNDEFINED,
		[Token(Token = "0x4001046")]
		FORWARD,
		[Token(Token = "0x4001047")]
		DEFERRED,
		[Token(Token = "0x4001048")]
		VERTEX_LIT,
		[Token(Token = "0x4001049")]
		UNIVERSAL,
		[Token(Token = "0x400104A")]
		HIGH_DEFINITION
	}
	[Token(Token = "0x2000338")]
	public struct SDKResolution
	{
		[Token(Token = "0x400104B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int width;

		[Token(Token = "0x400104C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int height;

		[Token(Token = "0x1700027A")]
		public static SDKResolution zero
		{
			[Token(Token = "0x60010CD")]
			[Address(RVA = "0xCF5CE4", Offset = "0xCF5CE4", VA = "0xCF5CE4")]
			get
			{
				return default(SDKResolution);
			}
		}

		[Token(Token = "0x60010CE")]
		[Address(RVA = "0xCFC780", Offset = "0xCFC780", VA = "0xCFC780", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000339")]
	public struct SDKVector3
	{
		[Token(Token = "0x400104D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float x;

		[Token(Token = "0x400104E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float y;

		[Token(Token = "0x400104F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float z;

		[Token(Token = "0x1700027B")]
		public static SDKVector3 zero
		{
			[Token(Token = "0x60010CF")]
			[Address(RVA = "0xCF5F80", Offset = "0xCF5F80", VA = "0xCF5F80")]
			get
			{
				return default(SDKVector3);
			}
		}

		[Token(Token = "0x1700027C")]
		public static SDKVector3 one
		{
			[Token(Token = "0x60010D0")]
			[Address(RVA = "0xCFCEE8", Offset = "0xCFCEE8", VA = "0xCFCEE8")]
			get
			{
				return default(SDKVector3);
			}
		}

		[Token(Token = "0x1700027D")]
		public static SDKVector3 forward
		{
			[Token(Token = "0x60010D1")]
			[Address(RVA = "0xCFD378", Offset = "0xCFD378", VA = "0xCFD378")]
			get
			{
				return default(SDKVector3);
			}
		}

		[Token(Token = "0x1700027E")]
		public static SDKVector3 up
		{
			[Token(Token = "0x60010D2")]
			[Address(RVA = "0xCF7208", Offset = "0xCF7208", VA = "0xCF7208")]
			get
			{
				return default(SDKVector3);
			}
		}

		[Token(Token = "0x1700027F")]
		public static SDKVector3 right
		{
			[Token(Token = "0x60010D3")]
			[Address(RVA = "0xCFD388", Offset = "0xCFD388", VA = "0xCFD388")]
			get
			{
				return default(SDKVector3);
			}
		}

		[Token(Token = "0x60010D4")]
		[Address(RVA = "0xCFD0EC", Offset = "0xCFD0EC", VA = "0xCFD0EC")]
		public static implicit operator Vector3(SDKVector3 v)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60010D5")]
		[Address(RVA = "0xCF71F0", Offset = "0xCF71F0", VA = "0xCF71F0")]
		public static implicit operator SDKVector3(Vector3 v)
		{
			return default(SDKVector3);
		}

		[Token(Token = "0x60010D6")]
		[Address(RVA = "0xCFD398", Offset = "0xCFD398", VA = "0xCFD398")]
		public static SDKVector3 operator +(SDKVector3 lhs, SDKVector3 rhs)
		{
			return default(SDKVector3);
		}

		[Token(Token = "0x60010D7")]
		[Address(RVA = "0xCFD3A8", Offset = "0xCFD3A8", VA = "0xCFD3A8")]
		public static SDKVector3 operator -(SDKVector3 lhs, SDKVector3 rhs)
		{
			return default(SDKVector3);
		}

		[Token(Token = "0x60010D8")]
		[Address(RVA = "0xCFD3B8", Offset = "0xCFD3B8", VA = "0xCFD3B8")]
		public static SDKVector3 operator *(SDKVector3 lhs, SDKVector3 rhs)
		{
			return default(SDKVector3);
		}

		[Token(Token = "0x60010D9")]
		[Address(RVA = "0xCFD3C8", Offset = "0xCFD3C8", VA = "0xCFD3C8")]
		public static SDKVector3 operator *(SDKVector3 lhs, float rhs)
		{
			return default(SDKVector3);
		}

		[Token(Token = "0x60010DA")]
		[Address(RVA = "0xCFD3D8", Offset = "0xCFD3D8", VA = "0xCFD3D8", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x200033A")]
	public struct SDKQuaternion
	{
		[Token(Token = "0x4001050")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float x;

		[Token(Token = "0x4001051")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float y;

		[Token(Token = "0x4001052")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float z;

		[Token(Token = "0x4001053")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float w;

		[Token(Token = "0x17000280")]
		public static SDKQuaternion identity
		{
			[Token(Token = "0x60010DB")]
			[Address(RVA = "0xCF5F90", Offset = "0xCF5F90", VA = "0xCF5F90")]
			get
			{
				return default(SDKQuaternion);
			}
		}

		[Token(Token = "0x60010DC")]
		[Address(RVA = "0xCF77D4", Offset = "0xCF77D4", VA = "0xCF77D4")]
		public static implicit operator Quaternion(SDKQuaternion v)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60010DD")]
		[Address(RVA = "0xCF7804", Offset = "0xCF7804", VA = "0xCF7804")]
		public static implicit operator SDKQuaternion(Quaternion v)
		{
			return default(SDKQuaternion);
		}

		[Token(Token = "0x60010DE")]
		[Address(RVA = "0xCF7808", Offset = "0xCF7808", VA = "0xCF7808")]
		public static SDKQuaternion Euler(float pitch, float yaw, float roll)
		{
			return default(SDKQuaternion);
		}

		[Token(Token = "0x60010DF")]
		[Address(RVA = "0xCF78CC", Offset = "0xCF78CC", VA = "0xCF78CC")]
		public static SDKQuaternion operator *(SDKQuaternion lhs, SDKQuaternion rhs)
		{
			return default(SDKQuaternion);
		}

		[Token(Token = "0x60010E0")]
		[Address(RVA = "0xCF7940", Offset = "0xCF7940", VA = "0xCF7940")]
		public static SDKVector3 operator *(SDKQuaternion lhs, SDKVector3 rhs)
		{
			return default(SDKVector3);
		}

		[Token(Token = "0x60010E1")]
		[Address(RVA = "0xCF79E4", Offset = "0xCF79E4", VA = "0xCF79E4", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x200033B")]
	public struct SDKMatrix4x4
	{
		[Token(Token = "0x4001054")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float m00;

		[Token(Token = "0x4001055")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float m01;

		[Token(Token = "0x4001056")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float m02;

		[Token(Token = "0x4001057")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float m03;

		[Token(Token = "0x4001058")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float m10;

		[Token(Token = "0x4001059")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float m11;

		[Token(Token = "0x400105A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float m12;

		[Token(Token = "0x400105B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float m13;

		[Token(Token = "0x400105C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float m20;

		[Token(Token = "0x400105D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float m21;

		[Token(Token = "0x400105E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float m22;

		[Token(Token = "0x400105F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float m23;

		[Token(Token = "0x4001060")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float m30;

		[Token(Token = "0x4001061")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float m31;

		[Token(Token = "0x4001062")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float m32;

		[Token(Token = "0x4001063")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float m33;

		[Token(Token = "0x17000281")]
		public static SDKMatrix4x4 identity
		{
			[Token(Token = "0x60010E2")]
			[Address(RVA = "0xCF5D20", Offset = "0xCF5D20", VA = "0xCF5D20")]
			get
			{
				return default(SDKMatrix4x4);
			}
		}

		[Token(Token = "0x60010E3")]
		[Address(RVA = "0xCF6728", Offset = "0xCF6728", VA = "0xCF6728")]
		public static implicit operator Matrix4x4(SDKMatrix4x4 v)
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x60010E4")]
		[Address(RVA = "0xCF676C", Offset = "0xCF676C", VA = "0xCF676C")]
		public static implicit operator SDKMatrix4x4(Matrix4x4 v)
		{
			return default(SDKMatrix4x4);
		}

		[Token(Token = "0x60010E5")]
		[Address(RVA = "0xCF67B0", Offset = "0xCF67B0", VA = "0xCF67B0")]
		public static SDKMatrix4x4 Perspective(float vFov, float aspect, float zNear, float zFar)
		{
			return default(SDKMatrix4x4);
		}

		[Token(Token = "0x60010E6")]
		[Address(RVA = "0xCF6870", Offset = "0xCF6870", VA = "0xCF6870")]
		public static SDKMatrix4x4 operator *(SDKMatrix4x4 lhs, SDKMatrix4x4 rhs)
		{
			return default(SDKMatrix4x4);
		}

		[Token(Token = "0x60010E7")]
		[Address(RVA = "0xCF691C", Offset = "0xCF691C", VA = "0xCF691C")]
		public static SDKVector3 operator *(SDKMatrix4x4 lhs, SDKVector3 rhs)
		{
			return default(SDKVector3);
		}

		[Token(Token = "0x60010E8")]
		[Address(RVA = "0xCF6974", Offset = "0xCF6974", VA = "0xCF6974")]
		public static SDKMatrix4x4 Translate(SDKVector3 value)
		{
			return default(SDKMatrix4x4);
		}

		[Token(Token = "0x60010E9")]
		[Address(RVA = "0xCF69B0", Offset = "0xCF69B0", VA = "0xCF69B0")]
		public static SDKMatrix4x4 Rotate(SDKQuaternion value)
		{
			return default(SDKMatrix4x4);
		}

		[Token(Token = "0x60010EA")]
		[Address(RVA = "0xCF6A44", Offset = "0xCF6A44", VA = "0xCF6A44")]
		public static SDKMatrix4x4 Scale(SDKVector3 value)
		{
			return default(SDKMatrix4x4);
		}

		[Token(Token = "0x60010EB")]
		[Address(RVA = "0xCF6A70", Offset = "0xCF6A70", VA = "0xCF6A70")]
		public static SDKMatrix4x4 TRS(SDKVector3 translation, SDKQuaternion rotation, SDKVector3 scale)
		{
			return default(SDKMatrix4x4);
		}

		[Token(Token = "0x60010EC")]
		[Address(RVA = "0xCF6B5C", Offset = "0xCF6B5C", VA = "0xCF6B5C", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x200033C")]
	public struct SDKPlane
	{
		[Token(Token = "0x4001064")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float distance;

		[Token(Token = "0x4001065")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public SDKVector3 normal;

		[Token(Token = "0x17000282")]
		public static SDKPlane empty
		{
			[Token(Token = "0x60010EE")]
			[Address(RVA = "0xCF71F4", Offset = "0xCF71F4", VA = "0xCF71F4")]
			get
			{
				return default(SDKPlane);
			}
		}

		[Token(Token = "0x60010ED")]
		[Address(RVA = "0xCF7190", Offset = "0xCF7190", VA = "0xCF7190")]
		public static implicit operator SDKPlane(Plane v)
		{
			return default(SDKPlane);
		}

		[Token(Token = "0x60010EF")]
		[Address(RVA = "0xCF7218", Offset = "0xCF7218", VA = "0xCF7218", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x200033D")]
	public struct SDKPriority
	{
		[Token(Token = "0x4001066")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public sbyte pose;

		[Token(Token = "0x4001067")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		public sbyte clipPlane;

		[Token(Token = "0x4001068")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
		public sbyte stage;

		[Token(Token = "0x4001069")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3")]
		public sbyte resolution;

		[Token(Token = "0x400106A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public sbyte feature;

		[Token(Token = "0x400106B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5")]
		public sbyte nearFarAdjustment;

		[Token(Token = "0x400106C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6")]
		public sbyte groundPlane;

		[Token(Token = "0x400106D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7")]
		public sbyte reserved2;

		[Token(Token = "0x17000283")]
		public static SDKPriority empty
		{
			[Token(Token = "0x60010F0")]
			[Address(RVA = "0xCF63B0", Offset = "0xCF63B0", VA = "0xCF63B0")]
			get
			{
				return default(SDKPriority);
			}
		}

		[Token(Token = "0x60010F1")]
		[Address(RVA = "0xCF755C", Offset = "0xCF755C", VA = "0xCF755C", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x200033E")]
	public struct SDKApplicationOutput
	{
		[Token(Token = "0x400106E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public FEATURES supportedFeatures;

		[Token(Token = "0x400106F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string engineName;

		[Token(Token = "0x4001070")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string engineVersion;

		[Token(Token = "0x4001071")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string applicationName;

		[Token(Token = "0x4001072")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string applicationVersion;

		[Token(Token = "0x4001073")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string xrDeviceName;

		[Token(Token = "0x4001074")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string graphicsAPI;

		[Token(Token = "0x4001075")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string sdkID;

		[Token(Token = "0x4001076")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string sdkVersion;

		[Token(Token = "0x17000284")]
		public static SDKApplicationOutput empty
		{
			[Token(Token = "0x60010F2")]
			[Address(RVA = "0xCF4678", Offset = "0xCF4678", VA = "0xCF4678")]
			get
			{
				return default(SDKApplicationOutput);
			}
		}

		[Token(Token = "0x60010F3")]
		[Address(RVA = "0xCF46F4", Offset = "0xCF46F4", VA = "0xCF46F4", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x200033F")]
	public struct SDKInputFrame
	{
		[Token(Token = "0x4001077")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public SDKPose pose;

		[Token(Token = "0x4001078")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public SDKClipPlane clipPlane;

		[Token(Token = "0x4001079")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		public SDKTransform stageTransform;

		[Token(Token = "0x400107A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public FEATURES features;

		[Token(Token = "0x400107B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public SDKClipPlane groundClipPlane;

		[Token(Token = "0x400107C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public ulong frameid;

		[Token(Token = "0x400107D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		public ulong referenceframe;

		[Token(Token = "0x400107E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		public SDKPriority priority;

		[Token(Token = "0x17000285")]
		public static SDKInputFrame empty
		{
			[Token(Token = "0x60010F4")]
			[Address(RVA = "0xCF5424", Offset = "0xCF5424", VA = "0xCF5424")]
			get
			{
				return default(SDKInputFrame);
			}
		}

		[Token(Token = "0x60010F5")]
		[Address(RVA = "0xCF63BC", Offset = "0xCF63BC", VA = "0xCF63BC")]
		public void ReleaseControl()
		{
		}

		[Token(Token = "0x60010F6")]
		[Address(RVA = "0xCF63CC", Offset = "0xCF63CC", VA = "0xCF63CC")]
		public void ObtainControl()
		{
		}

		[Token(Token = "0x60010F7")]
		[Address(RVA = "0xCF63E0", Offset = "0xCF63E0", VA = "0xCF63E0", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000340")]
	public struct SDKOutputFrame
	{
		[Token(Token = "0x400107F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public RENDERING_PIPELINE renderingPipeline;

		[Token(Token = "0x4001080")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public SDKTrackedSpace trackedSpace;

		[Token(Token = "0x17000286")]
		public static SDKOutputFrame empty
		{
			[Token(Token = "0x60010F8")]
			[Address(RVA = "0xCF7014", Offset = "0xCF7014", VA = "0xCF7014")]
			get
			{
				return default(SDKOutputFrame);
			}
		}

		[Token(Token = "0x60010F9")]
		[Address(RVA = "0xCF70D0", Offset = "0xCF70D0", VA = "0xCF70D0", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000341")]
	public struct SDKTrackedSpace
	{
		[Token(Token = "0x4001081")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public SDKVector3 trackedSpaceWorldPosition;

		[Token(Token = "0x4001082")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public SDKQuaternion trackedSpaceWorldRotation;

		[Token(Token = "0x4001083")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public SDKVector3 trackedSpaceLocalScale;

		[Token(Token = "0x4001084")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SDKMatrix4x4 trackedSpaceLocalToWorldMatrix;

		[Token(Token = "0x4001085")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public SDKMatrix4x4 trackedSpaceWorldToLocalMatrix;

		[Token(Token = "0x17000287")]
		public static SDKTrackedSpace empty
		{
			[Token(Token = "0x60010FA")]
			[Address(RVA = "0xCF7074", Offset = "0xCF7074", VA = "0xCF7074")]
			get
			{
				return default(SDKTrackedSpace);
			}
		}

		[Token(Token = "0x60010FB")]
		[Address(RVA = "0xCFCC98", Offset = "0xCFCC98", VA = "0xCFCC98", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000342")]
	public struct SDKTexture
	{
		[Token(Token = "0x4001086")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public TEXTURE_ID id;

		[Token(Token = "0x4001087")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public IntPtr texturePtr;

		[Token(Token = "0x4001088")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public IntPtr SharedHandle;

		[Token(Token = "0x4001089")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TEXTURE_DEVICE device;

		[Token(Token = "0x400108A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int dummy;

		[Token(Token = "0x400108B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TEXTURE_TYPE type;

		[Token(Token = "0x400108C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public TEXTURE_FORMAT format;

		[Token(Token = "0x400108D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TEXTURE_COLOR_SPACE colorSpace;

		[Token(Token = "0x400108E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int width;

		[Token(Token = "0x400108F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int height;

		[Token(Token = "0x17000288")]
		public static SDKTexture empty
		{
			[Token(Token = "0x60010FC")]
			[Address(RVA = "0xCF572C", Offset = "0xCF572C", VA = "0xCF572C")]
			get
			{
				return default(SDKTexture);
			}
		}

		[Token(Token = "0x60010FD")]
		[Address(RVA = "0xCFC8E8", Offset = "0xCFC8E8", VA = "0xCFC8E8", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000343")]
	public struct SDKTransform
	{
		[Token(Token = "0x4001090")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public SDKVector3 localPosition;

		[Token(Token = "0x4001091")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public SDKQuaternion localRotation;

		[Token(Token = "0x4001092")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public SDKVector3 localScale;

		[Token(Token = "0x17000289")]
		public static SDKTransform empty
		{
			[Token(Token = "0x60010FE")]
			[Address(RVA = "0xCF639C", Offset = "0xCF639C", VA = "0xCF639C")]
			get
			{
				return default(SDKTransform);
			}
		}

		[Token(Token = "0x60010FF")]
		[Address(RVA = "0xCFCEF8", Offset = "0xCFCEF8", VA = "0xCFCEF8", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000344")]
	public struct SDKClipPlane
	{
		[Token(Token = "0x4001093")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public SDKMatrix4x4 transform;

		[Token(Token = "0x4001094")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int width;

		[Token(Token = "0x4001095")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public int height;

		[Token(Token = "0x4001096")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float tesselation;

		[Token(Token = "0x1700028A")]
		public static SDKClipPlane empty
		{
			[Token(Token = "0x6001100")]
			[Address(RVA = "0xCF5CEC", Offset = "0xCF5CEC", VA = "0xCF5CEC")]
			get
			{
				return default(SDKClipPlane);
			}
		}

		[Token(Token = "0x6001101")]
		[Address(RVA = "0xCF5D4C", Offset = "0xCF5D4C", VA = "0xCF5D4C", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000345")]
	public struct SDKControllerState
	{
		[Token(Token = "0x4001097")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public SDKVector3 hmdposition;

		[Token(Token = "0x4001098")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public SDKQuaternion hmdrotation;

		[Token(Token = "0x4001099")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public SDKVector3 calibrationcameraposition;

		[Token(Token = "0x400109A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SDKQuaternion calibrationcamerarotation;

		[Token(Token = "0x400109B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public SDKVector3 cameraposition;

		[Token(Token = "0x400109C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public SDKQuaternion camerarotation;

		[Token(Token = "0x400109D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public SDKVector3 leftposition;

		[Token(Token = "0x400109E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public SDKQuaternion leftrotation;

		[Token(Token = "0x400109F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public SDKVector3 rightposition;

		[Token(Token = "0x40010A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public SDKQuaternion rightrotation;

		[Token(Token = "0x1700028B")]
		public static SDKControllerState empty
		{
			[Token(Token = "0x6001102")]
			[Address(RVA = "0xCF5F34", Offset = "0xCF5F34", VA = "0xCF5F34")]
			get
			{
				return default(SDKControllerState);
			}
		}

		[Token(Token = "0x6001103")]
		[Address(RVA = "0xCF5FA4", Offset = "0xCF5FA4", VA = "0xCF5FA4", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000346")]
	public struct SDKPose
	{
		[Token(Token = "0x40010A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public SDKMatrix4x4 projectionMatrix;

		[Token(Token = "0x40010A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public SDKVector3 localPosition;

		[Token(Token = "0x40010A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public SDKQuaternion localRotation;

		[Token(Token = "0x40010A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float verticalFieldOfView;

		[Token(Token = "0x40010A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float nearClipPlane;

		[Token(Token = "0x40010A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public float farClipPlane;

		[Token(Token = "0x40010A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public int unused0;

		[Token(Token = "0x40010A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public int unused1;

		[Token(Token = "0x1700028C")]
		public static SDKPose empty
		{
			[Token(Token = "0x6001104")]
			[Address(RVA = "0xCF6320", Offset = "0xCF6320", VA = "0xCF6320")]
			get
			{
				return default(SDKPose);
			}
		}

		[Token(Token = "0x6001105")]
		[Address(RVA = "0xCF72D8", Offset = "0xCF72D8", VA = "0xCF72D8", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000347")]
	public static class SDKUtils
	{
		[Token(Token = "0x1700028D")]
		public static TEXTURE_COLOR_SPACE GetDefaultColorSpace
		{
			[Token(Token = "0x6001108")]
			[Address(RVA = "0xCFCFFC", Offset = "0xCFCFFC", VA = "0xCFCFFC")]
			get
			{
				return default(TEXTURE_COLOR_SPACE);
			}
		}

		[Token(Token = "0x6001106")]
		[Address(RVA = "0xCFB1D4", Offset = "0xCFB1D4", VA = "0xCFB1D4")]
		public static void CreateClipPlane(Mesh mesh, int resX, int resY, bool useQuads, float skirtLength)
		{
		}

		[Token(Token = "0x6001107")]
		[Address(RVA = "0xCFCFE4", Offset = "0xCFCFE4", VA = "0xCFCFE4")]
		public static RenderTextureReadWrite GetReadWriteFromColorSpace(TEXTURE_COLOR_SPACE colorSpace)
		{
			return default(RenderTextureReadWrite);
		}

		[Token(Token = "0x6001109")]
		[Address(RVA = "0xCFC6E8", Offset = "0xCFC6E8", VA = "0xCFC6E8")]
		public static TEXTURE_COLOR_SPACE GetColorSpace(RenderTexture renderTexture)
		{
			return default(TEXTURE_COLOR_SPACE);
		}

		[Token(Token = "0x600110A")]
		[Address(RVA = "0xCFD02C", Offset = "0xCFD02C", VA = "0xCFD02C")]
		public static RENDERING_PIPELINE GetRenderingPipeline(RenderingPath renderingPath)
		{
			return default(RENDERING_PIPELINE);
		}

		[Token(Token = "0x600110B")]
		[Address(RVA = "0xCFC684", Offset = "0xCFC684", VA = "0xCFC684")]
		public static TEXTURE_DEVICE GetDevice()
		{
			return default(TEXTURE_DEVICE);
		}

		[Token(Token = "0x600110C")]
		[Address(RVA = "0xCFD04C", Offset = "0xCFD04C", VA = "0xCFD04C")]
		public static bool ContainsFlag(ulong flags, ulong flag)
		{
			return default(bool);
		}

		[Token(Token = "0x600110D")]
		[Address(RVA = "0xCFD058", Offset = "0xCFD058", VA = "0xCFD058")]
		public static ulong SetFlag(ulong flags, ulong flag, bool enabled)
		{
			return default(ulong);
		}

		[Token(Token = "0x600110E")]
		[Address(RVA = "0xCFD06C", Offset = "0xCFD06C", VA = "0xCFD06C")]
		public static void GetCameraPositionAndRotation(SDKPose pose, Matrix4x4 originLocalToWorldMatrix, out Vector3 position, out Quaternion rotation)
		{
		}

		[Token(Token = "0x600110F")]
		[Address(RVA = "0xCFAE6C", Offset = "0xCFAE6C", VA = "0xCFAE6C")]
		public static void CleanCameraBehaviours(Camera camera, string[] excludeBehaviours)
		{
		}

		[Token(Token = "0x6001110")]
		[Address(RVA = "0xCFA324", Offset = "0xCFA324", VA = "0xCFA324")]
		public static void SetCamera(Camera camera, Transform cameraTransform, SDKInputFrame inputFrame, Matrix4x4 originLocalToWorldMatrix, int layerMask)
		{
		}

		[Token(Token = "0x6001111")]
		[Address(RVA = "0xCFBE10", Offset = "0xCFBE10", VA = "0xCFBE10")]
		public static Quaternion RotateQuaternionByMatrix(Matrix4x4 matrix, Quaternion rotation)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6001112")]
		[Address(RVA = "0xCFD0F0", Offset = "0xCFD0F0", VA = "0xCFD0F0")]
		public static SDKTrackedSpace GetTrackedSpace(Transform transform)
		{
			return default(SDKTrackedSpace);
		}

		[Token(Token = "0x6001113")]
		public static bool DestroyObject<T>(ref T reference) where T : UnityEngine.Object
		{
			return default(bool);
		}

		[Token(Token = "0x6001114")]
		public static bool DisposeObject<T>(ref T reference) where T : IDisposable
		{
			return default(bool);
		}

		[Token(Token = "0x6001115")]
		[Address(RVA = "0xCFC318", Offset = "0xCFC318", VA = "0xCFC318")]
		public static bool CreateTexture(ref RenderTexture renderTexture, int width, int height, int depth, RenderTextureFormat format)
		{
			return default(bool);
		}

		[Token(Token = "0x6001116")]
		[Address(RVA = "0xCFB914", Offset = "0xCFB914", VA = "0xCFB914")]
		public static void DestroyTexture(ref RenderTexture _renderTexture)
		{
		}

		[Token(Token = "0x6001117")]
		[Address(RVA = "0xCF8A7C", Offset = "0xCF8A7C", VA = "0xCF8A7C")]
		public static void ApplyUserSpaceTransform(SDKRender render)
		{
		}

		[Token(Token = "0x6001118")]
		[Address(RVA = "0xCFA08C", Offset = "0xCFA08C", VA = "0xCFA08C")]
		public static void CreateBridgeOutputFrame(SDKRender render)
		{
		}

		[Token(Token = "0x6001119")]
		[Address(RVA = "0xCF7DD0", Offset = "0xCF7DD0", VA = "0xCF7DD0")]
		public static bool FeatureEnabled(FEATURES features, FEATURES feature)
		{
			return default(bool);
		}

		[Token(Token = "0x600111A")]
		[Address(RVA = "0xCFA830", Offset = "0xCFA830", VA = "0xCFA830")]
		public static void DisableStandardAssets(Camera cameraInstance, ref MonoBehaviour[] behaviours, ref bool[] wasBehaviourEnabled)
		{
		}

		[Token(Token = "0x600111B")]
		[Address(RVA = "0xCFAD38", Offset = "0xCFAD38", VA = "0xCFAD38")]
		public static void RestoreStandardAssets(ref MonoBehaviour[] behaviours, ref bool[] wasBehaviourEnabled)
		{
		}

		[Token(Token = "0x600111C")]
		[Address(RVA = "0xCFA9AC", Offset = "0xCFA9AC", VA = "0xCFA9AC")]
		public static void ForceForwardRendering(Camera cameraInstance, Mesh clipPlaneMesh, Material forceForwardRenderingMaterial)
		{
		}
	}
}
