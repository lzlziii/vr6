using System;
using System.Collections;
using System.Collections.Generic;
using System.Diagnostics;
using System.Globalization;
using System.IO;
using System.Linq;
using System.Reflection;
using System.Runtime.InteropServices;
using System.Runtime.Serialization.Formatters.Binary;
using System.Text;
using System.Text.RegularExpressions;
using System.Xml.Serialization;
using CielaSpike;
using FuryStudios.FurySDK;
using FuryStudios.FurySDK.Settings;
using FuryStudios.FurySDK.Utils;
using I2.Loc;
using Il2CppDummyDll;
using Microsoft.CodeAnalysis;
using Oculus.Platform;
using Os.Utils;
using Placemaker;
using Placemaker.Audio;
using Placemaker.Graphs;
using Placemaker.Life;
using Placemaker.Modules;
using Placemaker.Props;
using Placemaker.Quads;
using Placemaker.Quads.GridGeneration;
using Placemaker.SceneProcessing;
using Placemaker.Ui;
using Placemaker.Vr;
using Rewired;
using Rewired.Components;
using Rewired.ControllerExtensions;
using Rewired.Integration.UnityUI;
using Rewired.UI;
using Rewired.UI.ControlMapper;
using Rewired.Utils.Interfaces;
using TMPro;
using Unity.Mathematics;
using Unity.XR.CoreUtils;
using UnityEngine;
using UnityEngine.Audio;
using UnityEngine.EventSystems;
using UnityEngine.Events;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Controls;
using UnityEngine.InputSystem.LowLevel;
using UnityEngine.InputSystem.Utilities;
using UnityEngine.Networking;
using UnityEngine.Rendering;
using UnityEngine.SceneManagement;
using UnityEngine.UI;
using UnityEngine.XR;
using UnityEngine.XR.Interaction.Toolkit;

[assembly: AssemblyVersion("0.0.0.0")]
namespace Microsoft.CodeAnalysis
{
	[Token(Token = "0x2000002")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EF18C", Offset = "0x6EF18C")]
	[Microsoft.CodeAnalysis.Embedded]
	internal sealed class EmbeddedAttribute : Attribute
	{
		[Token(Token = "0x6000001")]
		[Address(RVA = "0xE795D4", Offset = "0xE795D4", VA = "0xE795D4")]
		public EmbeddedAttribute()
		{
		}
	}
}
namespace System.Runtime.CompilerServices
{
	[Token(Token = "0x2000003")]
	[Microsoft.CodeAnalysis.Embedded]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EF1C4", Offset = "0x6EF1C4")]
	internal sealed class IsReadOnlyAttribute : Attribute
	{
		[Token(Token = "0x6000002")]
		[Address(RVA = "0xB1D664", Offset = "0xB1D664", VA = "0xB1D664")]
		public IsReadOnlyAttribute()
		{
		}
	}
}
[Token(Token = "0x2000004")]
public class Beatbox : MonoBehaviour
{
	[Token(Token = "0x4000001")]
	private const float bpm = 100f;

	[Token(Token = "0x4000002")]
	private const float beatLength = 0.6f;

	[Token(Token = "0x4000003")]
	private const float beatScale = 1.6666666f;

	[Token(Token = "0x6000003")]
	[Address(RVA = "0xFA85C8", Offset = "0xFA85C8", VA = "0xFA85C8")]
	public static bool IsBeat(float divisor = 1f, float offset = 0f)
	{
		return default(bool);
	}

	[Token(Token = "0x6000004")]
	[Address(RVA = "0xFA8654", Offset = "0xFA8654", VA = "0xFA8654")]
	public static int GetBeat(float time, float divisor, float offset)
	{
		return default(int);
	}

	[Token(Token = "0x6000005")]
	[Address(RVA = "0xFA8670", Offset = "0xFA8670", VA = "0xFA8670")]
	public Beatbox()
	{
	}
}
[Token(Token = "0x2000005")]
public class ExampleScript : MonoBehaviour
{
	[Token(Token = "0x2000006")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EF1FC", Offset = "0x6EF1FC")]
	private sealed class <StartExamples>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000004")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000005")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000006")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ExampleScript <>4__this;

		[Token(Token = "0x4000007")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Task <task>5__2;

		[Token(Token = "0x17000001")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000014")]
			[Address(RVA = "0x92440C", Offset = "0x92440C", VA = "0x92440C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000002")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000016")]
			[Address(RVA = "0x924454", Offset = "0x924454", VA = "0x924454", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000011")]
		[Address(RVA = "0x9241B8", Offset = "0x9241B8", VA = "0x9241B8")]
		[DebuggerHidden]
		public <StartExamples>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x6000012")]
		[Address(RVA = "0x9241E4", Offset = "0x9241E4", VA = "0x9241E4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000013")]
		[Address(RVA = "0x9241E8", Offset = "0x9241E8", VA = "0x9241E8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000015")]
		[Address(RVA = "0x924414", Offset = "0x924414", VA = "0x924414", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000007")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EF20C", Offset = "0x6EF20C")]
	private sealed class <Blocking>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000008")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000009")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400000A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ExampleScript <>4__this;

		[Token(Token = "0x17000003")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600001A")]
			[Address(RVA = "0x923F30", Offset = "0x923F30", VA = "0x923F30", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000004")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600001C")]
			[Address(RVA = "0x923F78", Offset = "0x923F78", VA = "0x923F78", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000017")]
		[Address(RVA = "0x923CBC", Offset = "0x923CBC", VA = "0x923CBC")]
		[DebuggerHidden]
		public <Blocking>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6000018")]
		[Address(RVA = "0x923CE8", Offset = "0x923CE8", VA = "0x923CE8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000019")]
		[Address(RVA = "0x923CEC", Offset = "0x923CEC", VA = "0x923CEC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600001B")]
		[Address(RVA = "0x923F38", Offset = "0x923F38", VA = "0x923F38", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000008")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EF21C", Offset = "0x6EF21C")]
	private sealed class <Cancellation>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400000B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400000C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400000D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ExampleScript <>4__this;

		[Token(Token = "0x17000005")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000020")]
			[Address(RVA = "0x924020", Offset = "0x924020", VA = "0x924020", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000006")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000022")]
			[Address(RVA = "0x924068", Offset = "0x924068", VA = "0x924068", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600001D")]
		[Address(RVA = "0x923F80", Offset = "0x923F80", VA = "0x923F80")]
		[DebuggerHidden]
		public <Cancellation>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x600001E")]
		[Address(RVA = "0x923FAC", Offset = "0x923FAC", VA = "0x923FAC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600001F")]
		[Address(RVA = "0x923FB0", Offset = "0x923FB0", VA = "0x923FB0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000021")]
		[Address(RVA = "0x924028", Offset = "0x924028", VA = "0x924028", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000009")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EF22C", Offset = "0x6EF22C")]
	private sealed class <ErrorHandling>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400000E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400000F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000010")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ExampleScript <>4__this;

		[Token(Token = "0x17000007")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000026")]
			[Address(RVA = "0x924168", Offset = "0x924168", VA = "0x924168", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000008")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000028")]
			[Address(RVA = "0x9241B0", Offset = "0x9241B0", VA = "0x9241B0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000023")]
		[Address(RVA = "0x924070", Offset = "0x924070", VA = "0x924070")]
		[DebuggerHidden]
		public <ErrorHandling>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6000024")]
		[Address(RVA = "0x92409C", Offset = "0x92409C", VA = "0x92409C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000025")]
		[Address(RVA = "0x9240A0", Offset = "0x9240A0", VA = "0x9240A0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000027")]
		[Address(RVA = "0x924170", Offset = "0x924170", VA = "0x924170", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x6000006")]
	[Address(RVA = "0xE7A0C4", Offset = "0xE7A0C4", VA = "0xE7A0C4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000007")]
	[Address(RVA = "0xE7A15C", Offset = "0xE7A15C", VA = "0xE7A15C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000008")]
	[Address(RVA = "0xE7A0F0", Offset = "0xE7A0F0", VA = "0xE7A0F0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6F8F3C", Offset = "0x6F8F3C")]
	private IEnumerator StartExamples()
	{
		return null;
	}

	[Token(Token = "0x6000009")]
	[Address(RVA = "0xE7A1D4", Offset = "0xE7A1D4", VA = "0xE7A1D4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6F8F9C", Offset = "0x6F8F9C")]
	private IEnumerator Blocking()
	{
		return null;
	}

	[Token(Token = "0x600000A")]
	[Address(RVA = "0xE7A240", Offset = "0xE7A240", VA = "0xE7A240")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6F8FFC", Offset = "0x6F8FFC")]
	private IEnumerator Cancellation()
	{
		return null;
	}

	[Token(Token = "0x600000B")]
	[Address(RVA = "0xE7A2AC", Offset = "0xE7A2AC", VA = "0xE7A2AC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6F905C", Offset = "0x6F905C")]
	private IEnumerator ErrorHandling()
	{
		return null;
	}

	[Token(Token = "0x600000C")]
	[Address(RVA = "0xE7A318", Offset = "0xE7A318", VA = "0xE7A318")]
	private void LogAsync(string msg)
	{
	}

	[Token(Token = "0x600000D")]
	[Address(RVA = "0xE7A3A8", Offset = "0xE7A3A8", VA = "0xE7A3A8")]
	private void LogState(Task task)
	{
	}

	[Token(Token = "0x600000E")]
	[Address(RVA = "0xE7A4AC", Offset = "0xE7A4AC", VA = "0xE7A4AC")]
	private void LogSync(string msg)
	{
	}

	[Token(Token = "0x600000F")]
	[Address(RVA = "0xE7A53C", Offset = "0xE7A53C", VA = "0xE7A53C")]
	private void LogExample(string msg)
	{
	}

	[Token(Token = "0x6000010")]
	[Address(RVA = "0xE7A5CC", Offset = "0xE7A5CC", VA = "0xE7A5CC")]
	public ExampleScript()
	{
	}
}
[Token(Token = "0x200000A")]
public class CustomCameraProjection : MonoBehaviour
{
	[Token(Token = "0x4000011")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Matrix4x4 originalProjection;

	[Token(Token = "0x4000012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Camera cam;

	[Token(Token = "0x6000029")]
	[Address(RVA = "0xB37264", Offset = "0xB37264", VA = "0xB37264")]
	private void Start()
	{
	}

	[Token(Token = "0x600002A")]
	[Address(RVA = "0xB372FC", Offset = "0xB372FC", VA = "0xB372FC")]
	private void Update()
	{
	}

	[Token(Token = "0x600002B")]
	[Address(RVA = "0xB37358", Offset = "0xB37358", VA = "0xB37358")]
	public CustomCameraProjection()
	{
	}
}
[Token(Token = "0x200000B")]
public sealed class FurySystemMessenger : PlatformSystemMessengerBase
{
	[Token(Token = "0x17000009")]
	protected override bool IsShowingMessage
	{
		[Token(Token = "0x600002C")]
		[Address(RVA = "0xE82FC4", Offset = "0xE82FC4", VA = "0xE82FC4", Slot = "12")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700000A")]
	protected override bool IsReadyToShowMessage
	{
		[Token(Token = "0x600002D")]
		[Address(RVA = "0xE82FCC", Offset = "0xE82FCC", VA = "0xE82FCC", Slot = "13")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600002E")]
	[Address(RVA = "0xE82FD4", Offset = "0xE82FD4", VA = "0xE82FD4", Slot = "8")]
	protected override void OnShowOverlay(string message)
	{
	}

	[Token(Token = "0x600002F")]
	[Address(RVA = "0xE82FD8", Offset = "0xE82FD8", VA = "0xE82FD8", Slot = "9")]
	protected override void OnDiscardOverlay()
	{
	}

	[Token(Token = "0x6000030")]
	[Address(RVA = "0xE82FDC", Offset = "0xE82FDC", VA = "0xE82FDC", Slot = "10")]
	protected override void OnShowConfirm(string message, string okButtonText, System.Action okButtonCallback)
	{
	}

	[Token(Token = "0x6000031")]
	[Address(RVA = "0xE82FE0", Offset = "0xE82FE0", VA = "0xE82FE0", Slot = "11")]
	protected override void OnShowPrompt(string message, string yesButtonText, string noButtonText, System.Action yesButtonCallback, System.Action noButtonCallback)
	{
	}

	[Token(Token = "0x6000032")]
	[Address(RVA = "0xE82FE4", Offset = "0xE82FE4", VA = "0xE82FE4", Slot = "14")]
	protected override void OnDiscardMessage(string message)
	{
	}

	[Token(Token = "0x6000033")]
	[Address(RVA = "0xE82FE8", Offset = "0xE82FE8", VA = "0xE82FE8")]
	public FurySystemMessenger()
	{
	}
}
[Token(Token = "0x200000C")]
public sealed class LocalizationService : ILocalisationService
{
	[Token(Token = "0x4000013")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F13D0", Offset = "0x6F13D0")]
	private readonly Language <DefaultLanguage>k__BackingField;

	[Token(Token = "0x1700000B")]
	public Language DefaultLanguage
	{
		[Token(Token = "0x6000034")]
		[Address(RVA = "0x9DBD50", Offset = "0x9DBD50", VA = "0x9DBD50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F91FC", Offset = "0x6F91FC")]
		get
		{
			return default(Language);
		}
	}

	[Token(Token = "0x1700000C")]
	private Language FuryStudios.FurySDK.ILocalisationService.DefaultLanguage
	{
		[Token(Token = "0x6000035")]
		[Address(RVA = "0x9DBD58", Offset = "0x9DBD58", VA = "0x9DBD58", Slot = "4")]
		get
		{
			return default(Language);
		}
	}

	[Token(Token = "0x6000036")]
	[Address(RVA = "0x9DBD98", Offset = "0x9DBD98", VA = "0x9DBD98", Slot = "5")]
	public bool IsLanguageSupported(Language language)
	{
		return default(bool);
	}

	[Token(Token = "0x6000037")]
	[Address(RVA = "0x9DBDA0", Offset = "0x9DBDA0", VA = "0x9DBDA0", Slot = "6")]
	public string Translate(TextID text)
	{
		return null;
	}

	[Token(Token = "0x6000038")]
	[Address(RVA = "0x9DBDEC", Offset = "0x9DBDEC", VA = "0x9DBDEC", Slot = "7")]
	public string Translate(TextID text, Language language)
	{
		return null;
	}

	[Token(Token = "0x6000039")]
	[Address(RVA = "0x9DBE38", Offset = "0x9DBE38", VA = "0x9DBE38")]
	public LocalizationService()
	{
	}
}
[Token(Token = "0x200000D")]
public sealed class PlatformManager : MonoBehaviour
{
	[Token(Token = "0x4000014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private FuryStudios.FurySDK.Settings.PlatformSettings settings;

	[Token(Token = "0x4000015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long? LastSignedInUserID;

	[Token(Token = "0x4000016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool pausingWhileConstrained;

	[Token(Token = "0x600003A")]
	[Address(RVA = "0xE08540", Offset = "0xE08540", VA = "0xE08540")]
	private void Awake()
	{
	}

	[Token(Token = "0x600003B")]
	[Address(RVA = "0xE0863C", Offset = "0xE0863C", VA = "0xE0863C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600003C")]
	[Address(RVA = "0xE08728", Offset = "0xE08728", VA = "0xE08728")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600003D")]
	[Address(RVA = "0xE08858", Offset = "0xE08858", VA = "0xE08858")]
	private void SDK_OnResumed()
	{
	}

	[Token(Token = "0x600003E")]
	[Address(RVA = "0xE0855C", Offset = "0xE0855C", VA = "0xE0855C")]
	private void SignIn()
	{
	}

	[Token(Token = "0x600003F")]
	[Address(RVA = "0xE088DC", Offset = "0xE088DC", VA = "0xE088DC")]
	public PlatformManager()
	{
	}
}
[Token(Token = "0x200000E")]
public class RigControllerVR : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200000F")]
	public struct ControllerData
	{
		[Token(Token = "0x4000022")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 pos;

		[Token(Token = "0x4000023")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int frame;

		[Token(Token = "0x4000024")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool gripped;
	}

	[Token(Token = "0x4000017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private UiMaster master;

	[Token(Token = "0x4000018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F1400", Offset = "0x6F1400")]
	private List<XRBaseController> m_Controllers;

	[Token(Token = "0x4000019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F144C", Offset = "0x6F144C")]
	private XRBaseController m_ActiveController;

	[Token(Token = "0x400001A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F1498", Offset = "0x6F1498")]
	[SerializeField]
	private Camera m_Camera;

	[Token(Token = "0x400001B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject m_OriginBaseGameObject;

	[Token(Token = "0x400001C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private bool m_CanPlaceBlocks;

	[Token(Token = "0x400001D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly InputFeatureUsage<bool>[] k_Vec2UsageBoolList;

	[Token(Token = "0x400001E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[SerializeField]
	private ControllerData oldLeft;

	[Token(Token = "0x400001F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private ControllerData oldRight;

	[Token(Token = "0x4000020")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private Transform interactionPointLeft;

	[Token(Token = "0x4000021")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private Transform interactionPointRight;

	[Token(Token = "0x1700000D")]
	public List<XRBaseController> controllers
	{
		[Token(Token = "0x6000041")]
		[Address(RVA = "0xDA5AD8", Offset = "0xDA5AD8", VA = "0xDA5AD8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000042")]
		[Address(RVA = "0xDA5AE0", Offset = "0xDA5AE0", VA = "0xDA5AE0")]
		set
		{
		}
	}

	[Token(Token = "0x1700000E")]
	public XRBaseController activeController
	{
		[Token(Token = "0x6000043")]
		[Address(RVA = "0xDA5AE8", Offset = "0xDA5AE8", VA = "0xDA5AE8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000044")]
		[Address(RVA = "0xDA5AF0", Offset = "0xDA5AF0", VA = "0xDA5AF0")]
		set
		{
		}
	}

	[Token(Token = "0x1700000F")]
	public Camera Camera
	{
		[Token(Token = "0x6000045")]
		[Address(RVA = "0xDA5AF8", Offset = "0xDA5AF8", VA = "0xDA5AF8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000046")]
		[Address(RVA = "0xDA5B00", Offset = "0xDA5B00", VA = "0xDA5B00")]
		set
		{
		}
	}

	[Token(Token = "0x17000010")]
	public bool CanPlaceBlocks
	{
		[Token(Token = "0x6000047")]
		[Address(RVA = "0xDA5B08", Offset = "0xDA5B08", VA = "0xDA5B08")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000048")]
		[Address(RVA = "0xDA5B10", Offset = "0xDA5B10", VA = "0xDA5B10")]
		set
		{
		}
	}

	[Token(Token = "0x17000011")]
	public GameObject Origin
	{
		[Token(Token = "0x6000049")]
		[Address(RVA = "0xDA5B1C", Offset = "0xDA5B1C", VA = "0xDA5B1C")]
		get
		{
			return null;
		}
		[Token(Token = "0x600004A")]
		[Address(RVA = "0xDA5B24", Offset = "0xDA5B24", VA = "0xDA5B24")]
		set
		{
		}
	}

	[Token(Token = "0x600004B")]
	[Address(RVA = "0xDA5B2C", Offset = "0xDA5B2C", VA = "0xDA5B2C")]
	private void Update()
	{
	}

	[Token(Token = "0x600004C")]
	[Address(RVA = "0xDA6434", Offset = "0xDA6434", VA = "0xDA6434")]
	public RigControllerVR()
	{
	}
}
[Token(Token = "0x2000010")]
public class TeleportationHelperVR : MonoBehaviour
{
	[Token(Token = "0x4000025")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TeleportationArea myArea;

	[Token(Token = "0x600004E")]
	[Address(RVA = "0xAEBE3C", Offset = "0xAEBE3C", VA = "0xAEBE3C")]
	private void Start()
	{
	}

	[Token(Token = "0x600004F")]
	[Address(RVA = "0xAEBE40", Offset = "0xAEBE40", VA = "0xAEBE40")]
	public TeleportationHelperVR()
	{
	}
}
[Token(Token = "0x2000011")]
public class ExampleDebugMenu : MonoBehaviour
{
	[Token(Token = "0x2000012")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EF23C", Offset = "0x6EF23C")]
	private sealed class <>c__DisplayClass2_0
	{
		[Token(Token = "0x4000028")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public DebugMenu.TextFieldEntry field;

		[Token(Token = "0x6000054")]
		[Address(RVA = "0x923C18", Offset = "0x923C18", VA = "0x923C18")]
		public <>c__DisplayClass2_0()
		{
		}

		[Token(Token = "0x6000055")]
		[Address(RVA = "0x923C20", Offset = "0x923C20", VA = "0x923C20")]
		internal void <Start>b__1()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000013")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EF24C", Offset = "0x6EF24C")]
	private sealed class <>c
	{
		[Token(Token = "0x4000029")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x400002A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static System.Action <>9__2_0;

		[Token(Token = "0x6000057")]
		[Address(RVA = "0x923B9C", Offset = "0x923B9C", VA = "0x923B9C")]
		public <>c()
		{
		}

		[Token(Token = "0x6000058")]
		[Address(RVA = "0x923BA4", Offset = "0x923BA4", VA = "0x923BA4")]
		internal void <Start>b__2_0()
		{
		}
	}

	[Token(Token = "0x4000026")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GUISkin skin;

	[Token(Token = "0x4000027")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private DebugMenu menu;

	[Token(Token = "0x6000050")]
	[Address(RVA = "0xE797B0", Offset = "0xE797B0", VA = "0xE797B0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000051")]
	[Address(RVA = "0xE79E98", Offset = "0xE79E98", VA = "0xE79E98")]
	private void Update()
	{
	}

	[Token(Token = "0x6000052")]
	[Address(RVA = "0xE79FA8", Offset = "0xE79FA8", VA = "0xE79FA8")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000053")]
	[Address(RVA = "0xE7A0BC", Offset = "0xE7A0BC", VA = "0xE7A0BC")]
	public ExampleDebugMenu()
	{
	}
}
[Token(Token = "0x2000014")]
public class CameraVR : MonoBehaviour, UiMaster.IUiSetup
{
	[Token(Token = "0x400002B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private UiMaster master;

	[Token(Token = "0x400002C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	public Camera cam;

	[Token(Token = "0x400002D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	public Camera skyBoxCam;

	[Token(Token = "0x400002E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6F1574", Offset = "0x6F1574")]
	public float zoomTarget;

	[Token(Token = "0x400002F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6F15B4", Offset = "0x6F15B4")]
	[SerializeField]
	public float zoomCurrent;

	[Token(Token = "0x4000030")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6F15F4", Offset = "0x6F15F4")]
	[SerializeField]
	public float rotationY;

	[Token(Token = "0x4000031")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6F1634", Offset = "0x6F1634")]
	public float rotationX;

	[Token(Token = "0x4000032")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6F1674", Offset = "0x6F1674")]
	public float panHexCurrentX;

	[Token(Token = "0x4000033")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6F16B4", Offset = "0x6F16B4")]
	[SerializeField]
	public float panHexCurrentY;

	[Token(Token = "0x4000034")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6F16F4", Offset = "0x6F16F4")]
	[SerializeField]
	public float panHeightCurrent;

	[Token(Token = "0x4000035")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6F1734", Offset = "0x6F1734")]
	[SerializeField]
	public float panHexTargetX;

	[Token(Token = "0x4000036")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6F1774", Offset = "0x6F1774")]
	[SerializeField]
	public float panHexTargetY;

	[Token(Token = "0x4000037")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6F17B4", Offset = "0x6F17B4")]
	[SerializeField]
	public float panHeightTarget;

	[Token(Token = "0x4000038")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float3x2 boundsCurrent;

	[Token(Token = "0x4000039")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float3x2 boundsTarget;

	[Token(Token = "0x400003A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float heightCurrent;

	[Token(Token = "0x400003B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public float heightTarget;

	[Token(Token = "0x400003C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float anyVoxelsCurrent;

	[Token(Token = "0x400003D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private float minRadius;

	[Token(Token = "0x400003E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private bool snap;

	[Token(Token = "0x400003F")]
	public const float maxAngle = 88f;

	[Token(Token = "0x4000040")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public float currentDist;

	[Token(Token = "0x4000041")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public float nonDollyDist;

	[Token(Token = "0x4000042")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public float lastBoundsChangeTime;

	[Token(Token = "0x4000043")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private float distMin;

	[Token(Token = "0x4000044")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private float distMax;

	[Token(Token = "0x6000059")]
	[Address(RVA = "0x8E375C", Offset = "0x8E375C", VA = "0x8E375C", Slot = "4")]
	private void Placemaker.Ui.UiMaster.IUiSetup.OnStart(UiMaster master)
	{
	}

	[Token(Token = "0x600005A")]
	[Address(RVA = "0x8E377C", Offset = "0x8E377C", VA = "0x8E377C", Slot = "5")]
	private void Placemaker.Ui.UiMaster.IUiSetup.OnSetup(UiMaster master)
	{
	}

	[Token(Token = "0x600005B")]
	[Address(RVA = "0x8E3B58", Offset = "0x8E3B58", VA = "0x8E3B58")]
	private void RemapPans(float3x2 oldBounds, float3x2 newBounts, float oldHeight, float newHeight)
	{
	}

	[Token(Token = "0x600005C")]
	[Address(RVA = "0x8E3EB0", Offset = "0x8E3EB0", VA = "0x8E3EB0")]
	public void SetBounds()
	{
	}

	[Token(Token = "0x600005D")]
	[Address(RVA = "0x8E39C0", Offset = "0x8E39C0", VA = "0x8E39C0")]
	public void BoundsUpdated()
	{
	}

	[Token(Token = "0x600005E")]
	[Address(RVA = "0x8E3F20", Offset = "0x8E3F20", VA = "0x8E3F20")]
	public void SetCamera()
	{
	}

	[Token(Token = "0x600005F")]
	[Address(RVA = "0x8E3BD4", Offset = "0x8E3BD4", VA = "0x8E3BD4")]
	public static Vector3 GetWorldPos(float panHexX, float panHexY, float panHeight, float3x2 bounds, float height)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000060")]
	[Address(RVA = "0x8E3D40", Offset = "0x8E3D40", VA = "0x8E3D40")]
	public static (float, float, float) GetRelativePos(Vector3 worldPos, float3x2 bounds, float height)
	{
		return default((float, float, float));
	}

	[Token(Token = "0x6000061")]
	[Address(RVA = "0x8E4854", Offset = "0x8E4854", VA = "0x8E4854")]
	public void Save(SaveData saveData)
	{
	}

	[Token(Token = "0x6000062")]
	[Address(RVA = "0x8E4904", Offset = "0x8E4904", VA = "0x8E4904")]
	public void Load(SaveData saveData)
	{
	}

	[Token(Token = "0x6000063")]
	[Address(RVA = "0x8E4A40", Offset = "0x8E4A40", VA = "0x8E4A40")]
	public void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000064")]
	[Address(RVA = "0x8E51F0", Offset = "0x8E51F0", VA = "0x8E51F0")]
	public CameraVR()
	{
	}

	[Token(Token = "0x6000065")]
	[Address(RVA = "0x8E509C", Offset = "0x8E509C", VA = "0x8E509C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F920C", Offset = "0x6F920C")]
	private Vector3 <OnDrawGizmos>g__GetPanPos|36_0(float panHexX, float panHexY, float panHeight)
	{
		return default(Vector3);
	}
}
[Token(Token = "0x2000015")]
public class HudButtonsVR : MonoBehaviour
{
	[Token(Token = "0x6000066")]
	[Address(RVA = "0xB169F8", Offset = "0xB169F8", VA = "0xB169F8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000067")]
	[Address(RVA = "0xB169FC", Offset = "0xB169FC", VA = "0xB169FC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000068")]
	[Address(RVA = "0xB16A00", Offset = "0xB16A00", VA = "0xB16A00")]
	public HudButtonsVR()
	{
	}
}
[Token(Token = "0x2000016")]
public class PalettePickerVR : MonoBehaviour
{
	[Token(Token = "0x4000045")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public Color32 color;

	[Token(Token = "0x4000046")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	public int pickerIndex;

	[Token(Token = "0x6000069")]
	[Address(RVA = "0xE06FB0", Offset = "0xE06FB0", VA = "0xE06FB0")]
	public void OnClicked()
	{
	}

	[Token(Token = "0x600006A")]
	[Address(RVA = "0xE07118", Offset = "0xE07118", VA = "0xE07118")]
	public void OnHoverEntered()
	{
	}

	[Token(Token = "0x600006B")]
	[Address(RVA = "0xE0721C", Offset = "0xE0721C", VA = "0xE0721C")]
	public void OnHoverExited()
	{
	}

	[Token(Token = "0x600006C")]
	[Address(RVA = "0xE07278", Offset = "0xE07278", VA = "0xE07278")]
	public PalettePickerVR()
	{
	}
}
[Token(Token = "0x2000017")]
public class PaletteVR : MonoBehaviour
{
	[Token(Token = "0x4000047")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject spherePlaceholder;

	[Token(Token = "0x4000048")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject paletteHolder;

	[Token(Token = "0x4000049")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Palette palette;

	[Token(Token = "0x400004A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private UiMaster master;

	[Token(Token = "0x400004B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private XROrigin xrOrigin;

	[Token(Token = "0x600006D")]
	[Address(RVA = "0xE07280", Offset = "0xE07280", VA = "0xE07280")]
	private void Start()
	{
	}

	[Token(Token = "0x600006E")]
	[Address(RVA = "0xE0700C", Offset = "0xE0700C", VA = "0xE0700C")]
	public void PickerClicked(PalettePickerVR picker)
	{
	}

	[Token(Token = "0x600006F")]
	[Address(RVA = "0xE07174", Offset = "0xE07174", VA = "0xE07174")]
	public void EnableBlockPlacement(bool enableBlockPlacement)
	{
	}

	[Token(Token = "0x6000070")]
	[Address(RVA = "0xE075BC", Offset = "0xE075BC", VA = "0xE075BC")]
	public PaletteVR()
	{
	}
}
[Token(Token = "0x2000018")]
public class RigControllerRade : ContinuousMoveProviderBase
{
	[Token(Token = "0x2000019")]
	private enum MovingEnum
	{
		[Token(Token = "0x400005C")]
		Idle,
		[Token(Token = "0x400005D")]
		Moving
	}

	[Token(Token = "0x400004C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public XRBaseController activeController;

	[Token(Token = "0x400004D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private List<XRBaseController> controllers;

	[Token(Token = "0x400004E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private GameObject originBase;

	[Token(Token = "0x400004F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly InputFeatureUsage<bool>[] inputFeatureUsage;

	[Token(Token = "0x4000050")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector3 leftControllerPreviosPosition;

	[Token(Token = "0x4000051")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private Vector3 leftControllerPositionPreGrip;

	[Token(Token = "0x4000052")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Vector3 rightControllerPositionPreGrip;

	[Token(Token = "0x4000053")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private Vector3 singleGripMovementDirection;

	[Token(Token = "0x4000054")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Vector3 previousOriginBasePosition;

	[Token(Token = "0x4000055")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private float initialPanGripAngle;

	[Token(Token = "0x4000056")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private bool singleGripControl;

	[Token(Token = "0x4000057")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6F1884", Offset = "0x6F1884")]
	[SerializeField]
	private float positionDistanceThreshold;

	[Token(Token = "0x4000058")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private MovingEnum movingEnum;

	[Token(Token = "0x4000059")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	[SerializeField]
	private float value1;

	[Token(Token = "0x400005A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[SerializeField]
	private float value2;

	[Token(Token = "0x6000071")]
	[Address(RVA = "0xDA5408", Offset = "0xDA5408", VA = "0xDA5408", Slot = "5")]
	protected override Vector2 ReadInput()
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000072")]
	[Address(RVA = "0xDA5978", Offset = "0xDA5978", VA = "0xDA5978")]
	public void FocusCameraOnCenter()
	{
	}

	[Token(Token = "0x6000073")]
	[Address(RVA = "0xDA597C", Offset = "0xDA597C", VA = "0xDA597C")]
	public RigControllerRade()
	{
	}
}
[Token(Token = "0x200001A")]
public class SunSphereControlVR : MonoBehaviour
{
	[Token(Token = "0x400005E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool isGrabbed;

	[Token(Token = "0x400005F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Vector3 ControllerPositionPreGrip;

	[Token(Token = "0x4000060")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 PreviousSpherePosition;

	[Token(Token = "0x4000061")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector3 SingleGripMovementDirection;

	[Token(Token = "0x4000062")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private float radius;

	[Token(Token = "0x4000063")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[SerializeField]
	private float maxY;

	[Token(Token = "0x4000064")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private XROrigin rig;

	[Token(Token = "0x4000065")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private XRBaseController controller;

	[Token(Token = "0x4000066")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private GameObject earth;

	[Token(Token = "0x6000075")]
	[Address(RVA = "0xAEAF20", Offset = "0xAEAF20", VA = "0xAEAF20")]
	private void Start()
	{
	}

	[Token(Token = "0x6000076")]
	[Address(RVA = "0xAEAFCC", Offset = "0xAEAFCC", VA = "0xAEAFCC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000077")]
	[Address(RVA = "0xAEB21C", Offset = "0xAEB21C", VA = "0xAEB21C")]
	public void Grab()
	{
	}

	[Token(Token = "0x6000078")]
	[Address(RVA = "0xAEB228", Offset = "0xAEB228", VA = "0xAEB228")]
	public void LetGo()
	{
	}

	[Token(Token = "0x6000079")]
	[Address(RVA = "0xAEB230", Offset = "0xAEB230", VA = "0xAEB230")]
	public SunSphereControlVR()
	{
	}
}
[Token(Token = "0x200001B")]
public class SunSphereVR : MonoBehaviour
{
	[Token(Token = "0x4000067")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject sunSphere;

	[Token(Token = "0x4000068")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject sun;

	[Token(Token = "0x4000069")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private UiMaster master;

	[Token(Token = "0x400006A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Gradient sunColor;

	[Token(Token = "0x600007A")]
	[Address(RVA = "0xAEB238", Offset = "0xAEB238", VA = "0xAEB238")]
	private void Start()
	{
	}

	[Token(Token = "0x600007B")]
	[Address(RVA = "0xAEB390", Offset = "0xAEB390", VA = "0xAEB390")]
	private void Update()
	{
	}

	[Token(Token = "0x600007C")]
	[Address(RVA = "0xAEB554", Offset = "0xAEB554", VA = "0xAEB554")]
	private void PushSunColors(float CurrentY)
	{
	}

	[Token(Token = "0x600007D")]
	[Address(RVA = "0xAEB61C", Offset = "0xAEB61C", VA = "0xAEB61C")]
	public SunSphereVR()
	{
	}
}
[Token(Token = "0x200001C")]
public class VRChildrenToggle : MonoBehaviour
{
	[Token(Token = "0x400006B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject HudChild;

	[Token(Token = "0x600007E")]
	[Address(RVA = "0x1BDC4F4", Offset = "0x1BDC4F4", VA = "0x1BDC4F4")]
	public void Start()
	{
	}

	[Token(Token = "0x600007F")]
	[Address(RVA = "0x1BDC5B0", Offset = "0x1BDC5B0", VA = "0x1BDC5B0")]
	public void ToggleChildrenVisibility()
	{
	}

	[Token(Token = "0x6000080")]
	[Address(RVA = "0x1BDC5F0", Offset = "0x1BDC5F0", VA = "0x1BDC5F0")]
	public VRChildrenToggle()
	{
	}
}
[Token(Token = "0x200001D")]
public class StoreAssetExporter : MonoBehaviour
{
	[Token(Token = "0x400006C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public Camera cam;

	[Token(Token = "0x400006D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	public Canvas canvas;

	[Token(Token = "0x6000081")]
	[Address(RVA = "0xAE8D88", Offset = "0xAE8D88", VA = "0xAE8D88")]
	public StoreAssetExporter()
	{
	}
}
[Token(Token = "0x200001E")]
public class StoreAssetFrame : MonoBehaviour
{
	[Token(Token = "0x200001F")]
	public enum Format
	{
		[Token(Token = "0x4000071")]
		Png,
		[Token(Token = "0x4000072")]
		Jpg,
		[Token(Token = "0x4000073")]
		Tga
	}

	[Token(Token = "0x2000020")]
	public enum Folder
	{
		[Token(Token = "0x4000075")]
		StoreAssets,
		[Token(Token = "0x4000076")]
		Assets
	}

	[Token(Token = "0x400006E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Format format;

	[Token(Token = "0x400006F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Folder folder;

	[Token(Token = "0x6000082")]
	[Address(RVA = "0xAE8D90", Offset = "0xAE8D90", VA = "0xAE8D90")]
	public StoreAssetFrame()
	{
	}
}
[Token(Token = "0x2000021")]
public class BindingRow : MonoBehaviour
{
	[Token(Token = "0x2000022")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EF25C", Offset = "0x6EF25C")]
	private sealed class <>c__DisplayClass7_0
	{
		[Token(Token = "0x400007D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Action<int, int, bool> action;

		[Token(Token = "0x400007E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int index;

		[Token(Token = "0x400007F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int mapId;

		[Token(Token = "0x4000080")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool isAltField;

		[Token(Token = "0x6000086")]
		[Address(RVA = "0xBAED24", Offset = "0xBAED24", VA = "0xBAED24")]
		public <>c__DisplayClass7_0()
		{
		}

		[Token(Token = "0x6000087")]
		[Address(RVA = "0xBAED2C", Offset = "0xBAED2C", VA = "0xBAED2C")]
		internal void <SetButton>b__0()
		{
		}
	}

	[Token(Token = "0x4000077")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private TextMeshProUGUI actionText;

	[Token(Token = "0x4000078")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private TextMeshProUGUI buttonText;

	[Token(Token = "0x4000079")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private BaseButton baseButton;

	[Token(Token = "0x400007A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Rewired.InputAction action;

	[Token(Token = "0x400007B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AxisRange actionRange;

	[Token(Token = "0x400007C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public ControlBinding.RowVisibilityCategory visibility;

	[Token(Token = "0x6000083")]
	[Address(RVA = "0xFABFD4", Offset = "0xFABFD4", VA = "0xFABFD4")]
	public void SetAction(Rewired.InputAction action, AxisRange actionRange, string label, ControlBinding.RowVisibilityCategory visibility)
	{
	}

	[Token(Token = "0x6000084")]
	[Address(RVA = "0xFAC008", Offset = "0xFAC008", VA = "0xFAC008")]
	public void SetButton(string name, Action<int, int, bool> action, int index, int mapId, bool isAltField)
	{
	}

	[Token(Token = "0x6000085")]
	[Address(RVA = "0xFAC138", Offset = "0xFAC138", VA = "0xFAC138")]
	public BindingRow()
	{
	}
}
[Token(Token = "0x2000023")]
public class CornerImage : MaskableGraphic
{
	[Token(Token = "0x4000081")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[SerializeField]
	private Sprite _sprite;

	[Token(Token = "0x4000082")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[SerializeField]
	private float innerSize;

	[Token(Token = "0x4000083")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	[SerializeField]
	private bool3x3 quadrants;

	[Token(Token = "0x4000084")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[SerializeField]
	public int uOffset;

	[Token(Token = "0x4000085")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6F19F4", Offset = "0x6F19F4")]
	private float _progress;

	[Token(Token = "0x17000012")]
	public Sprite sprite
	{
		[Token(Token = "0x6000088")]
		[Address(RVA = "0xB3226C", Offset = "0xB3226C", VA = "0xB3226C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000089")]
		[Address(RVA = "0xB32274", Offset = "0xB32274", VA = "0xB32274")]
		set
		{
		}
	}

	[Token(Token = "0x17000013")]
	public float progress
	{
		[Token(Token = "0x600008A")]
		[Address(RVA = "0xB32318", Offset = "0xB32318", VA = "0xB32318")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600008B")]
		[Address(RVA = "0xB32320", Offset = "0xB32320", VA = "0xB32320")]
		set
		{
		}
	}

	[Token(Token = "0x600008C")]
	[Address(RVA = "0xB32344", Offset = "0xB32344", VA = "0xB32344", Slot = "44")]
	protected override void OnPopulateMesh(VertexHelper vh)
	{
	}

	[Token(Token = "0x600008D")]
	[Address(RVA = "0xB33E74", Offset = "0xB33E74", VA = "0xB33E74", Slot = "40")]
	protected override void UpdateMaterial()
	{
	}

	[Token(Token = "0x600008E")]
	[Address(RVA = "0xB33F34", Offset = "0xB33F34", VA = "0xB33F34")]
	public CornerImage()
	{
	}
}
[Token(Token = "0x2000024")]
public class UiCornerMesh : Graphic
{
	[Token(Token = "0x4000086")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public float radius;

	[Token(Token = "0x4000087")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public float zFront;

	[Token(Token = "0x4000088")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public float zBack;

	[Token(Token = "0x4000089")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public int u;

	[Token(Token = "0x400008A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public bool bevel0;

	[Token(Token = "0x400008B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAD")]
	public bool bevel1;

	[Token(Token = "0x400008C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAE")]
	public bool bevel2;

	[Token(Token = "0x400008D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAF")]
	public bool bevel3;

	[Token(Token = "0x400008E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public bool inverse;

	[Token(Token = "0x600008F")]
	[Address(RVA = "0x1BCFED8", Offset = "0x1BCFED8", VA = "0x1BCFED8", Slot = "44")]
	protected override void OnPopulateMesh(VertexHelper vh)
	{
	}

	[Token(Token = "0x6000090")]
	[Address(RVA = "0x1BD0B5C", Offset = "0x1BD0B5C", VA = "0x1BD0B5C", Slot = "40")]
	protected override void UpdateMaterial()
	{
	}

	[Token(Token = "0x6000091")]
	[Address(RVA = "0x1BD0B9C", Offset = "0x1BD0B9C", VA = "0x1BD0B9C")]
	public UiCornerMesh()
	{
	}
}
[Token(Token = "0x2000025")]
public class UndoRedoFeedback : UIBehaviour, UiMaster.IUiSetup
{
	[Token(Token = "0x6000092")]
	[Address(RVA = "0x1BD3AA4", Offset = "0x1BD3AA4", VA = "0x1BD3AA4", Slot = "18")]
	public void OnSetup(UiMaster master)
	{
	}

	[Token(Token = "0x6000093")]
	[Address(RVA = "0x1BD3B48", Offset = "0x1BD3B48", VA = "0x1BD3B48", Slot = "17")]
	public void OnStart(UiMaster master)
	{
	}

	[Token(Token = "0x6000094")]
	[Address(RVA = "0x1BD3B4C", Offset = "0x1BD3B4C", VA = "0x1BD3B4C")]
	public UndoRedoFeedback()
	{
	}
}
[Token(Token = "0x2000026")]
public class VrEntitlementCheck : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000027")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EF26C", Offset = "0x6EF26C")]
	private sealed class <>c
	{
		[Token(Token = "0x4000093")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000094")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static System.Action <>9__9_0;

		[Token(Token = "0x4000095")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static System.Action <>9__9_1;

		[Token(Token = "0x600009C")]
		[Address(RVA = "0x1080B94", Offset = "0x1080B94", VA = "0x1080B94")]
		public <>c()
		{
		}

		[Token(Token = "0x600009D")]
		[Address(RVA = "0x1080B9C", Offset = "0x1080B9C", VA = "0x1080B9C")]
		internal void <.ctor>b__9_0()
		{
		}

		[Token(Token = "0x600009E")]
		[Address(RVA = "0x1080BA0", Offset = "0x1080BA0", VA = "0x1080BA0")]
		internal void <.ctor>b__9_1()
		{
		}
	}

	[Token(Token = "0x400008F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private string oculusAppId;

	[Token(Token = "0x4000090")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private string picoAppId;

	[Token(Token = "0x4000091")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public System.Action onEntitlementConfirmed;

	[Token(Token = "0x4000092")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public System.Action onEntitlementFailed;

	[Token(Token = "0x6000095")]
	[Address(RVA = "0xB9FA44", Offset = "0xB9FA44", VA = "0xB9FA44")]
	private void Start()
	{
	}

	[Token(Token = "0x6000096")]
	[Address(RVA = "0xB9FA48", Offset = "0xB9FA48", VA = "0xB9FA48")]
	private void RunEntitlementCheckPico()
	{
	}

	[Token(Token = "0x6000097")]
	[Address(RVA = "0xB9FA4C", Offset = "0xB9FA4C", VA = "0xB9FA4C")]
	private void RunEntitlementCheckOculus()
	{
	}

	[Token(Token = "0x6000098")]
	[Address(RVA = "0xB9FC58", Offset = "0xB9FC58", VA = "0xB9FC58")]
	private void EntitlementCallback(Message msg)
	{
	}

	[Token(Token = "0x6000099")]
	[Address(RVA = "0xB9FC18", Offset = "0xB9FC18", VA = "0xB9FC18")]
	private void EntitlementResult(bool confirmed)
	{
	}

	[Token(Token = "0x600009A")]
	[Address(RVA = "0xB9FD54", Offset = "0xB9FD54", VA = "0xB9FD54")]
	public VrEntitlementCheck()
	{
	}
}
[Token(Token = "0x2000028")]
[AttributeAttribute(Name = "DisplayStringFormatAttribute", RVA = "0x6EF27C", Offset = "0x6EF27C")]
public class CustomComposite : InputBindingComposite<Vector2>
{
	[Token(Token = "0x4000096")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "InputControlAttribute", RVA = "0x6F1A54", Offset = "0x6F1A54")]
	public int multiplier;

	[Token(Token = "0x4000097")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "InputControlAttribute", RVA = "0x6F1A90", Offset = "0x6F1A90")]
	public int stick;

	[Token(Token = "0x4000098")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float scaleFactor;

	[Token(Token = "0x600009F")]
	[Address(RVA = "0xB373BC", Offset = "0xB373BC", VA = "0xB373BC")]
	[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x6F921C", Offset = "0x6F921C")]
	private static void Initialize()
	{
	}

	[Token(Token = "0x60000A0")]
	[Address(RVA = "0xB37430", Offset = "0xB37430", VA = "0xB37430", Slot = "10")]
	public override Vector2 ReadValue(ref InputBindingCompositeContext context)
	{
		return default(Vector2);
	}

	[Token(Token = "0x60000A1")]
	[Address(RVA = "0xB374D8", Offset = "0xB374D8", VA = "0xB374D8")]
	public CustomComposite()
	{
	}
}
[Token(Token = "0x2000029")]
public static class InitCustomDeviceUsages
{
	[Token(Token = "0x60000A2")]
	[Address(RVA = "0xB187F0", Offset = "0xB187F0", VA = "0xB187F0")]
	static InitCustomDeviceUsages()
	{
	}

	[Token(Token = "0x60000A3")]
	[Address(RVA = "0xB187F4", Offset = "0xB187F4", VA = "0xB187F4")]
	[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x6F9230", Offset = "0x6F9230")]
	private static void Initialize()
	{
	}
}
[Token(Token = "0x200002A")]
public class CustomDeviceUsages : MonoBehaviour
{
	[Token(Token = "0x4000099")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int gamepadIndex;

	[Token(Token = "0x400009A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string usageTag;

	[Token(Token = "0x400009B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Gamepad m_Gamepad;

	[Token(Token = "0x60000A4")]
	[Address(RVA = "0xB38A60", Offset = "0xB38A60", VA = "0xB38A60")]
	protected void OnEnable()
	{
	}

	[Token(Token = "0x60000A5")]
	[Address(RVA = "0xB38B40", Offset = "0xB38B40", VA = "0xB38B40")]
	protected void OnDisable()
	{
	}

	[Token(Token = "0x60000A6")]
	[Address(RVA = "0xB38BD0", Offset = "0xB38BD0", VA = "0xB38BD0")]
	public CustomDeviceUsages()
	{
	}
}
[Token(Token = "0x200002B")]
public struct CustomDeviceState : IInputStateTypeInfo
{
	[Token(Token = "0x400009C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "InputControlAttribute", RVA = "0x6F1ACC", Offset = "0x6F1ACC")]
	[AttributeAttribute(Name = "InputControlAttribute", RVA = "0x6F1ACC", Offset = "0x6F1ACC")]
	[AttributeAttribute(Name = "InputControlAttribute", RVA = "0x6F1ACC", Offset = "0x6F1ACC")]
	public ushort buttons;

	[Token(Token = "0x400009D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
	[AttributeAttribute(Name = "InputControlAttribute", RVA = "0x6F1BCC", Offset = "0x6F1BCC")]
	[AttributeAttribute(Name = "InputControlAttribute", RVA = "0x6F1BCC", Offset = "0x6F1BCC")]
	public byte x;

	[Token(Token = "0x400009E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3")]
	[AttributeAttribute(Name = "InputControlAttribute", RVA = "0x6F1CCC", Offset = "0x6F1CCC")]
	[AttributeAttribute(Name = "InputControlAttribute", RVA = "0x6F1CCC", Offset = "0x6F1CCC")]
	[AttributeAttribute(Name = "InputControlAttribute", RVA = "0x6F1CCC", Offset = "0x6F1CCC")]
	[AttributeAttribute(Name = "InputControlAttribute", RVA = "0x6F1CCC", Offset = "0x6F1CCC")]
	[AttributeAttribute(Name = "InputControlAttribute", RVA = "0x6F1CCC", Offset = "0x6F1CCC")]
	public byte y;

	[Token(Token = "0x17000014")]
	public FourCC format
	{
		[Token(Token = "0x60000A7")]
		[Address(RVA = "0xB38A24", Offset = "0xB38A24", VA = "0xB38A24", Slot = "4")]
		get
		{
			return default(FourCC);
		}
	}
}
[Token(Token = "0x200002C")]
[AttributeAttribute(Name = "InputControlLayoutAttribute", RVA = "0x6EF2B4", Offset = "0x6EF2B4")]
public class CustomDevice : UnityEngine.InputSystem.InputDevice, IInputUpdateCallbackReceiver
{
	[Token(Token = "0x400009F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F1E54", Offset = "0x6F1E54")]
	private ButtonControl <firstButton>k__BackingField;

	[Token(Token = "0x40000A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F1E64", Offset = "0x6F1E64")]
	private ButtonControl <secondButton>k__BackingField;

	[Token(Token = "0x40000A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F1E74", Offset = "0x6F1E74")]
	private ButtonControl <thirdButton>k__BackingField;

	[Token(Token = "0x40000A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F1E84", Offset = "0x6F1E84")]
	private StickControl <stick>k__BackingField;

	[Token(Token = "0x40000A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F1E94", Offset = "0x6F1E94")]
	private static CustomDevice <current>k__BackingField;

	[Token(Token = "0x17000015")]
	public ButtonControl firstButton
	{
		[Token(Token = "0x60000A9")]
		[Address(RVA = "0xB38564", Offset = "0xB38564", VA = "0xB38564")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F9258", Offset = "0x6F9258")]
		get
		{
			return null;
		}
		[Token(Token = "0x60000AA")]
		[Address(RVA = "0xB3856C", Offset = "0xB3856C", VA = "0xB3856C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F9268", Offset = "0x6F9268")]
		private set
		{
		}
	}

	[Token(Token = "0x17000016")]
	public ButtonControl secondButton
	{
		[Token(Token = "0x60000AB")]
		[Address(RVA = "0xB38574", Offset = "0xB38574", VA = "0xB38574")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F9278", Offset = "0x6F9278")]
		get
		{
			return null;
		}
		[Token(Token = "0x60000AC")]
		[Address(RVA = "0xB3857C", Offset = "0xB3857C", VA = "0xB3857C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F9288", Offset = "0x6F9288")]
		private set
		{
		}
	}

	[Token(Token = "0x17000017")]
	public ButtonControl thirdButton
	{
		[Token(Token = "0x60000AD")]
		[Address(RVA = "0xB38584", Offset = "0xB38584", VA = "0xB38584")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F9298", Offset = "0x6F9298")]
		get
		{
			return null;
		}
		[Token(Token = "0x60000AE")]
		[Address(RVA = "0xB3858C", Offset = "0xB3858C", VA = "0xB3858C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F92A8", Offset = "0x6F92A8")]
		private set
		{
		}
	}

	[Token(Token = "0x17000018")]
	public StickControl stick
	{
		[Token(Token = "0x60000AF")]
		[Address(RVA = "0xB38594", Offset = "0xB38594", VA = "0xB38594")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F92B8", Offset = "0x6F92B8")]
		get
		{
			return null;
		}
		[Token(Token = "0x60000B0")]
		[Address(RVA = "0xB3859C", Offset = "0xB3859C", VA = "0xB3859C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F92C8", Offset = "0x6F92C8")]
		private set
		{
		}
	}

	[Token(Token = "0x17000019")]
	public static CustomDevice current
	{
		[Token(Token = "0x60000B2")]
		[Address(RVA = "0xB386A8", Offset = "0xB386A8", VA = "0xB386A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F92D8", Offset = "0x6F92D8")]
		get
		{
			return null;
		}
		[Token(Token = "0x60000B3")]
		[Address(RVA = "0xB386F4", Offset = "0xB386F4", VA = "0xB386F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F92E8", Offset = "0x6F92E8")]
		private set
		{
		}
	}

	[Token(Token = "0x60000A8")]
	[Address(RVA = "0xB3848C", Offset = "0xB3848C", VA = "0xB3848C")]
	[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x6F9244", Offset = "0x6F9244")]
	private static void Initialize()
	{
	}

	[Token(Token = "0x60000B1")]
	[Address(RVA = "0xB385A4", Offset = "0xB385A4", VA = "0xB385A4", Slot = "13")]
	protected override void FinishSetup()
	{
	}

	[Token(Token = "0x60000B4")]
	[Address(RVA = "0xB38744", Offset = "0xB38744", VA = "0xB38744", Slot = "16")]
	public override void MakeCurrent()
	{
	}

	[Token(Token = "0x60000B5")]
	[Address(RVA = "0xB3879C", Offset = "0xB3879C", VA = "0xB3879C", Slot = "18")]
	protected override void OnRemoved()
	{
	}

	[Token(Token = "0x60000B6")]
	[Address(RVA = "0xB38824", Offset = "0xB38824", VA = "0xB38824", Slot = "21")]
	public void OnUpdate()
	{
	}

	[Token(Token = "0x60000B7")]
	[Address(RVA = "0xB38A1C", Offset = "0xB38A1C", VA = "0xB38A1C")]
	public CustomDevice()
	{
	}
}
[Token(Token = "0x200002D")]
public class TextFps : MonoBehaviour
{
	[Token(Token = "0x200002E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EF318", Offset = "0x6EF318")]
	private sealed class <FpsCounter>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40000A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40000A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40000A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextFps <>4__this;

		[Token(Token = "0x1700001A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60000BF")]
			[Address(RVA = "0x107D044", Offset = "0x107D044", VA = "0x107D044", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700001B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60000C1")]
			[Address(RVA = "0x107D08C", Offset = "0x107D08C", VA = "0x107D08C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60000BC")]
		[Address(RVA = "0x107CE90", Offset = "0x107CE90", VA = "0x107CE90")]
		[DebuggerHidden]
		public <FpsCounter>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x60000BD")]
		[Address(RVA = "0x107CEBC", Offset = "0x107CEBC", VA = "0x107CEBC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60000BE")]
		[Address(RVA = "0x107CEC0", Offset = "0x107CEC0", VA = "0x107CEC0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60000C0")]
		[Address(RVA = "0x107D04C", Offset = "0x107D04C", VA = "0x107D04C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40000A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text textComponent;

	[Token(Token = "0x40000A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private WaitForSeconds wait;

	[Token(Token = "0x40000A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float currentFps;

	[Token(Token = "0x60000B8")]
	[Address(RVA = "0xAEC7C8", Offset = "0xAEC7C8", VA = "0xAEC7C8")]
	private void Start()
	{
	}

	[Token(Token = "0x60000B9")]
	[Address(RVA = "0xAEC8AC", Offset = "0xAEC8AC", VA = "0xAEC8AC")]
	private void Update()
	{
	}

	[Token(Token = "0x60000BA")]
	[Address(RVA = "0xAEC840", Offset = "0xAEC840", VA = "0xAEC840")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6F92F8", Offset = "0x6F92F8")]
	private IEnumerator FpsCounter()
	{
		return null;
	}

	[Token(Token = "0x60000BB")]
	[Address(RVA = "0xAEC928", Offset = "0xAEC928", VA = "0xAEC928")]
	public TextFps()
	{
	}
}
namespace SFB
{
	[Token(Token = "0x200002F")]
	public interface IStandaloneFileBrowser
	{
		[Token(Token = "0x60000C2")]
		string[] OpenFilePanel(string title, string directory, ExtensionFilter[] extensions, bool multiselect);

		[Token(Token = "0x60000C3")]
		string[] OpenFolderPanel(string title, string directory, bool multiselect);

		[Token(Token = "0x60000C4")]
		string SaveFilePanel(string title, string directory, string defaultName, ExtensionFilter[] extensions);

		[Token(Token = "0x60000C5")]
		void OpenFilePanelAsync(string title, string directory, ExtensionFilter[] extensions, bool multiselect, Action<string[]> cb);

		[Token(Token = "0x60000C6")]
		void OpenFolderPanelAsync(string title, string directory, bool multiselect, Action<string[]> cb);

		[Token(Token = "0x60000C7")]
		void SaveFilePanelAsync(string title, string directory, string defaultName, ExtensionFilter[] extensions, Action<string> cb);
	}
	[Token(Token = "0x2000030")]
	public struct ExtensionFilter
	{
		[Token(Token = "0x40000AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string Name;

		[Token(Token = "0x40000AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string[] Extensions;

		[Token(Token = "0x60000C8")]
		[Address(RVA = "0xE7A5D4", Offset = "0xE7A5D4", VA = "0xE7A5D4")]
		public ExtensionFilter(string filterName, params string[] filterExtensions)
		{
		}
	}
	[Token(Token = "0x2000031")]
	public class StandaloneFileBrowser
	{
		[Token(Token = "0x40000AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static IStandaloneFileBrowser _platformWrapper;

		[Token(Token = "0x60000C9")]
		[Address(RVA = "0xAE7DA8", Offset = "0xAE7DA8", VA = "0xAE7DA8")]
		static StandaloneFileBrowser()
		{
		}

		[Token(Token = "0x60000CA")]
		[Address(RVA = "0xAE7DAC", Offset = "0xAE7DAC", VA = "0xAE7DAC")]
		public static string[] OpenFilePanel(string title, string directory, string extension, bool multiselect)
		{
			return null;
		}

		[Token(Token = "0x60000CB")]
		[Address(RVA = "0xAE7F24", Offset = "0xAE7F24", VA = "0xAE7F24")]
		public static string[] OpenFilePanel(string title, string directory, ExtensionFilter[] extensions, bool multiselect)
		{
			return null;
		}

		[Token(Token = "0x60000CC")]
		[Address(RVA = "0xAE8030", Offset = "0xAE8030", VA = "0xAE8030")]
		public static void OpenFilePanelAsync(string title, string directory, string extension, bool multiselect, Action<string[]> cb)
		{
		}

		[Token(Token = "0x60000CD")]
		[Address(RVA = "0xAE81B8", Offset = "0xAE81B8", VA = "0xAE81B8")]
		public static void OpenFilePanelAsync(string title, string directory, ExtensionFilter[] extensions, bool multiselect, Action<string[]> cb)
		{
		}

		[Token(Token = "0x60000CE")]
		[Address(RVA = "0xAE82D0", Offset = "0xAE82D0", VA = "0xAE82D0")]
		public static string[] OpenFolderPanel(string title, string directory, bool multiselect)
		{
			return null;
		}

		[Token(Token = "0x60000CF")]
		[Address(RVA = "0xAE83D0", Offset = "0xAE83D0", VA = "0xAE83D0")]
		public static void OpenFolderPanelAsync(string title, string directory, bool multiselect, Action<string[]> cb)
		{
		}

		[Token(Token = "0x60000D0")]
		[Address(RVA = "0xAE84E0", Offset = "0xAE84E0", VA = "0xAE84E0")]
		public static string SaveFilePanel(string title, string directory, string defaultName, string extension)
		{
			return null;
		}

		[Token(Token = "0x60000D1")]
		[Address(RVA = "0xAE8658", Offset = "0xAE8658", VA = "0xAE8658")]
		public static string SaveFilePanel(string title, string directory, string defaultName, ExtensionFilter[] extensions)
		{
			return null;
		}

		[Token(Token = "0x60000D2")]
		[Address(RVA = "0xAE8768", Offset = "0xAE8768", VA = "0xAE8768")]
		public static void SaveFilePanelAsync(string title, string directory, string defaultName, string extension, Action<string> cb)
		{
		}

		[Token(Token = "0x60000D3")]
		[Address(RVA = "0xAE88F0", Offset = "0xAE88F0", VA = "0xAE88F0")]
		public static void SaveFilePanelAsync(string title, string directory, string defaultName, ExtensionFilter[] extensions, Action<string> cb)
		{
		}

		[Token(Token = "0x60000D4")]
		[Address(RVA = "0xAE8A08", Offset = "0xAE8A08", VA = "0xAE8A08")]
		public StandaloneFileBrowser()
		{
		}
	}
}
namespace Rewired
{
	[Token(Token = "0x2000032")]
	public interface IGamepadTemplate : IControllerTemplate
	{
		[Token(Token = "0x1700001C")]
		IControllerTemplateButton actionBottomRow1
		{
			[Token(Token = "0x60000D5")]
			get;
		}

		[Token(Token = "0x1700001D")]
		IControllerTemplateButton a
		{
			[Token(Token = "0x60000D6")]
			get;
		}

		[Token(Token = "0x1700001E")]
		IControllerTemplateButton actionBottomRow2
		{
			[Token(Token = "0x60000D7")]
			get;
		}

		[Token(Token = "0x1700001F")]
		IControllerTemplateButton b
		{
			[Token(Token = "0x60000D8")]
			get;
		}

		[Token(Token = "0x17000020")]
		IControllerTemplateButton actionBottomRow3
		{
			[Token(Token = "0x60000D9")]
			get;
		}

		[Token(Token = "0x17000021")]
		IControllerTemplateButton c
		{
			[Token(Token = "0x60000DA")]
			get;
		}

		[Token(Token = "0x17000022")]
		IControllerTemplateButton actionTopRow1
		{
			[Token(Token = "0x60000DB")]
			get;
		}

		[Token(Token = "0x17000023")]
		IControllerTemplateButton x
		{
			[Token(Token = "0x60000DC")]
			get;
		}

		[Token(Token = "0x17000024")]
		IControllerTemplateButton actionTopRow2
		{
			[Token(Token = "0x60000DD")]
			get;
		}

		[Token(Token = "0x17000025")]
		IControllerTemplateButton y
		{
			[Token(Token = "0x60000DE")]
			get;
		}

		[Token(Token = "0x17000026")]
		IControllerTemplateButton actionTopRow3
		{
			[Token(Token = "0x60000DF")]
			get;
		}

		[Token(Token = "0x17000027")]
		IControllerTemplateButton z
		{
			[Token(Token = "0x60000E0")]
			get;
		}

		[Token(Token = "0x17000028")]
		IControllerTemplateButton leftShoulder1
		{
			[Token(Token = "0x60000E1")]
			get;
		}

		[Token(Token = "0x17000029")]
		IControllerTemplateButton leftBumper
		{
			[Token(Token = "0x60000E2")]
			get;
		}

		[Token(Token = "0x1700002A")]
		IControllerTemplateAxis leftShoulder2
		{
			[Token(Token = "0x60000E3")]
			get;
		}

		[Token(Token = "0x1700002B")]
		IControllerTemplateAxis leftTrigger
		{
			[Token(Token = "0x60000E4")]
			get;
		}

		[Token(Token = "0x1700002C")]
		IControllerTemplateButton rightShoulder1
		{
			[Token(Token = "0x60000E5")]
			get;
		}

		[Token(Token = "0x1700002D")]
		IControllerTemplateButton rightBumper
		{
			[Token(Token = "0x60000E6")]
			get;
		}

		[Token(Token = "0x1700002E")]
		IControllerTemplateAxis rightShoulder2
		{
			[Token(Token = "0x60000E7")]
			get;
		}

		[Token(Token = "0x1700002F")]
		IControllerTemplateAxis rightTrigger
		{
			[Token(Token = "0x60000E8")]
			get;
		}

		[Token(Token = "0x17000030")]
		IControllerTemplateButton center1
		{
			[Token(Token = "0x60000E9")]
			get;
		}

		[Token(Token = "0x17000031")]
		IControllerTemplateButton back
		{
			[Token(Token = "0x60000EA")]
			get;
		}

		[Token(Token = "0x17000032")]
		IControllerTemplateButton center2
		{
			[Token(Token = "0x60000EB")]
			get;
		}

		[Token(Token = "0x17000033")]
		IControllerTemplateButton start
		{
			[Token(Token = "0x60000EC")]
			get;
		}

		[Token(Token = "0x17000034")]
		IControllerTemplateButton center3
		{
			[Token(Token = "0x60000ED")]
			get;
		}

		[Token(Token = "0x17000035")]
		IControllerTemplateButton guide
		{
			[Token(Token = "0x60000EE")]
			get;
		}

		[Token(Token = "0x17000036")]
		IControllerTemplateThumbStick leftStick
		{
			[Token(Token = "0x60000EF")]
			get;
		}

		[Token(Token = "0x17000037")]
		IControllerTemplateThumbStick rightStick
		{
			[Token(Token = "0x60000F0")]
			get;
		}

		[Token(Token = "0x17000038")]
		IControllerTemplateDPad dPad
		{
			[Token(Token = "0x60000F1")]
			get;
		}
	}
	[Token(Token = "0x2000033")]
	public interface IRacingWheelTemplate : IControllerTemplate
	{
		[Token(Token = "0x17000039")]
		IControllerTemplateAxis wheel
		{
			[Token(Token = "0x60000F2")]
			get;
		}

		[Token(Token = "0x1700003A")]
		IControllerTemplateAxis accelerator
		{
			[Token(Token = "0x60000F3")]
			get;
		}

		[Token(Token = "0x1700003B")]
		IControllerTemplateAxis brake
		{
			[Token(Token = "0x60000F4")]
			get;
		}

		[Token(Token = "0x1700003C")]
		IControllerTemplateAxis clutch
		{
			[Token(Token = "0x60000F5")]
			get;
		}

		[Token(Token = "0x1700003D")]
		IControllerTemplateButton shiftDown
		{
			[Token(Token = "0x60000F6")]
			get;
		}

		[Token(Token = "0x1700003E")]
		IControllerTemplateButton shiftUp
		{
			[Token(Token = "0x60000F7")]
			get;
		}

		[Token(Token = "0x1700003F")]
		IControllerTemplateButton wheelButton1
		{
			[Token(Token = "0x60000F8")]
			get;
		}

		[Token(Token = "0x17000040")]
		IControllerTemplateButton wheelButton2
		{
			[Token(Token = "0x60000F9")]
			get;
		}

		[Token(Token = "0x17000041")]
		IControllerTemplateButton wheelButton3
		{
			[Token(Token = "0x60000FA")]
			get;
		}

		[Token(Token = "0x17000042")]
		IControllerTemplateButton wheelButton4
		{
			[Token(Token = "0x60000FB")]
			get;
		}

		[Token(Token = "0x17000043")]
		IControllerTemplateButton wheelButton5
		{
			[Token(Token = "0x60000FC")]
			get;
		}

		[Token(Token = "0x17000044")]
		IControllerTemplateButton wheelButton6
		{
			[Token(Token = "0x60000FD")]
			get;
		}

		[Token(Token = "0x17000045")]
		IControllerTemplateButton wheelButton7
		{
			[Token(Token = "0x60000FE")]
			get;
		}

		[Token(Token = "0x17000046")]
		IControllerTemplateButton wheelButton8
		{
			[Token(Token = "0x60000FF")]
			get;
		}

		[Token(Token = "0x17000047")]
		IControllerTemplateButton wheelButton9
		{
			[Token(Token = "0x6000100")]
			get;
		}

		[Token(Token = "0x17000048")]
		IControllerTemplateButton wheelButton10
		{
			[Token(Token = "0x6000101")]
			get;
		}

		[Token(Token = "0x17000049")]
		IControllerTemplateButton consoleButton1
		{
			[Token(Token = "0x6000102")]
			get;
		}

		[Token(Token = "0x1700004A")]
		IControllerTemplateButton consoleButton2
		{
			[Token(Token = "0x6000103")]
			get;
		}

		[Token(Token = "0x1700004B")]
		IControllerTemplateButton consoleButton3
		{
			[Token(Token = "0x6000104")]
			get;
		}

		[Token(Token = "0x1700004C")]
		IControllerTemplateButton consoleButton4
		{
			[Token(Token = "0x6000105")]
			get;
		}

		[Token(Token = "0x1700004D")]
		IControllerTemplateButton consoleButton5
		{
			[Token(Token = "0x6000106")]
			get;
		}

		[Token(Token = "0x1700004E")]
		IControllerTemplateButton consoleButton6
		{
			[Token(Token = "0x6000107")]
			get;
		}

		[Token(Token = "0x1700004F")]
		IControllerTemplateButton consoleButton7
		{
			[Token(Token = "0x6000108")]
			get;
		}

		[Token(Token = "0x17000050")]
		IControllerTemplateButton consoleButton8
		{
			[Token(Token = "0x6000109")]
			get;
		}

		[Token(Token = "0x17000051")]
		IControllerTemplateButton consoleButton9
		{
			[Token(Token = "0x600010A")]
			get;
		}

		[Token(Token = "0x17000052")]
		IControllerTemplateButton consoleButton10
		{
			[Token(Token = "0x600010B")]
			get;
		}

		[Token(Token = "0x17000053")]
		IControllerTemplateButton shifter1
		{
			[Token(Token = "0x600010C")]
			get;
		}

		[Token(Token = "0x17000054")]
		IControllerTemplateButton shifter2
		{
			[Token(Token = "0x600010D")]
			get;
		}

		[Token(Token = "0x17000055")]
		IControllerTemplateButton shifter3
		{
			[Token(Token = "0x600010E")]
			get;
		}

		[Token(Token = "0x17000056")]
		IControllerTemplateButton shifter4
		{
			[Token(Token = "0x600010F")]
			get;
		}

		[Token(Token = "0x17000057")]
		IControllerTemplateButton shifter5
		{
			[Token(Token = "0x6000110")]
			get;
		}

		[Token(Token = "0x17000058")]
		IControllerTemplateButton shifter6
		{
			[Token(Token = "0x6000111")]
			get;
		}

		[Token(Token = "0x17000059")]
		IControllerTemplateButton shifter7
		{
			[Token(Token = "0x6000112")]
			get;
		}

		[Token(Token = "0x1700005A")]
		IControllerTemplateButton shifter8
		{
			[Token(Token = "0x6000113")]
			get;
		}

		[Token(Token = "0x1700005B")]
		IControllerTemplateButton shifter9
		{
			[Token(Token = "0x6000114")]
			get;
		}

		[Token(Token = "0x1700005C")]
		IControllerTemplateButton shifter10
		{
			[Token(Token = "0x6000115")]
			get;
		}

		[Token(Token = "0x1700005D")]
		IControllerTemplateButton reverseGear
		{
			[Token(Token = "0x6000116")]
			get;
		}

		[Token(Token = "0x1700005E")]
		IControllerTemplateButton select
		{
			[Token(Token = "0x6000117")]
			get;
		}

		[Token(Token = "0x1700005F")]
		IControllerTemplateButton start
		{
			[Token(Token = "0x6000118")]
			get;
		}

		[Token(Token = "0x17000060")]
		IControllerTemplateButton systemButton
		{
			[Token(Token = "0x6000119")]
			get;
		}

		[Token(Token = "0x17000061")]
		IControllerTemplateButton horn
		{
			[Token(Token = "0x600011A")]
			get;
		}

		[Token(Token = "0x17000062")]
		IControllerTemplateDPad dPad
		{
			[Token(Token = "0x600011B")]
			get;
		}
	}
	[Token(Token = "0x2000034")]
	public interface IHOTASTemplate : IControllerTemplate
	{
		[Token(Token = "0x17000063")]
		IControllerTemplateButton stickTrigger
		{
			[Token(Token = "0x600011C")]
			get;
		}

		[Token(Token = "0x17000064")]
		IControllerTemplateButton stickTriggerStage2
		{
			[Token(Token = "0x600011D")]
			get;
		}

		[Token(Token = "0x17000065")]
		IControllerTemplateButton stickPinkyButton
		{
			[Token(Token = "0x600011E")]
			get;
		}

		[Token(Token = "0x17000066")]
		IControllerTemplateButton stickPinkyTrigger
		{
			[Token(Token = "0x600011F")]
			get;
		}

		[Token(Token = "0x17000067")]
		IControllerTemplateButton stickButton1
		{
			[Token(Token = "0x6000120")]
			get;
		}

		[Token(Token = "0x17000068")]
		IControllerTemplateButton stickButton2
		{
			[Token(Token = "0x6000121")]
			get;
		}

		[Token(Token = "0x17000069")]
		IControllerTemplateButton stickButton3
		{
			[Token(Token = "0x6000122")]
			get;
		}

		[Token(Token = "0x1700006A")]
		IControllerTemplateButton stickButton4
		{
			[Token(Token = "0x6000123")]
			get;
		}

		[Token(Token = "0x1700006B")]
		IControllerTemplateButton stickButton5
		{
			[Token(Token = "0x6000124")]
			get;
		}

		[Token(Token = "0x1700006C")]
		IControllerTemplateButton stickButton6
		{
			[Token(Token = "0x6000125")]
			get;
		}

		[Token(Token = "0x1700006D")]
		IControllerTemplateButton stickButton7
		{
			[Token(Token = "0x6000126")]
			get;
		}

		[Token(Token = "0x1700006E")]
		IControllerTemplateButton stickButton8
		{
			[Token(Token = "0x6000127")]
			get;
		}

		[Token(Token = "0x1700006F")]
		IControllerTemplateButton stickButton9
		{
			[Token(Token = "0x6000128")]
			get;
		}

		[Token(Token = "0x17000070")]
		IControllerTemplateButton stickButton10
		{
			[Token(Token = "0x6000129")]
			get;
		}

		[Token(Token = "0x17000071")]
		IControllerTemplateButton stickBaseButton1
		{
			[Token(Token = "0x600012A")]
			get;
		}

		[Token(Token = "0x17000072")]
		IControllerTemplateButton stickBaseButton2
		{
			[Token(Token = "0x600012B")]
			get;
		}

		[Token(Token = "0x17000073")]
		IControllerTemplateButton stickBaseButton3
		{
			[Token(Token = "0x600012C")]
			get;
		}

		[Token(Token = "0x17000074")]
		IControllerTemplateButton stickBaseButton4
		{
			[Token(Token = "0x600012D")]
			get;
		}

		[Token(Token = "0x17000075")]
		IControllerTemplateButton stickBaseButton5
		{
			[Token(Token = "0x600012E")]
			get;
		}

		[Token(Token = "0x17000076")]
		IControllerTemplateButton stickBaseButton6
		{
			[Token(Token = "0x600012F")]
			get;
		}

		[Token(Token = "0x17000077")]
		IControllerTemplateButton stickBaseButton7
		{
			[Token(Token = "0x6000130")]
			get;
		}

		[Token(Token = "0x17000078")]
		IControllerTemplateButton stickBaseButton8
		{
			[Token(Token = "0x6000131")]
			get;
		}

		[Token(Token = "0x17000079")]
		IControllerTemplateButton stickBaseButton9
		{
			[Token(Token = "0x6000132")]
			get;
		}

		[Token(Token = "0x1700007A")]
		IControllerTemplateButton stickBaseButton10
		{
			[Token(Token = "0x6000133")]
			get;
		}

		[Token(Token = "0x1700007B")]
		IControllerTemplateButton stickBaseButton11
		{
			[Token(Token = "0x6000134")]
			get;
		}

		[Token(Token = "0x1700007C")]
		IControllerTemplateButton stickBaseButton12
		{
			[Token(Token = "0x6000135")]
			get;
		}

		[Token(Token = "0x1700007D")]
		IControllerTemplateButton mode1
		{
			[Token(Token = "0x6000136")]
			get;
		}

		[Token(Token = "0x1700007E")]
		IControllerTemplateButton mode2
		{
			[Token(Token = "0x6000137")]
			get;
		}

		[Token(Token = "0x1700007F")]
		IControllerTemplateButton mode3
		{
			[Token(Token = "0x6000138")]
			get;
		}

		[Token(Token = "0x17000080")]
		IControllerTemplateButton throttleButton1
		{
			[Token(Token = "0x6000139")]
			get;
		}

		[Token(Token = "0x17000081")]
		IControllerTemplateButton throttleButton2
		{
			[Token(Token = "0x600013A")]
			get;
		}

		[Token(Token = "0x17000082")]
		IControllerTemplateButton throttleButton3
		{
			[Token(Token = "0x600013B")]
			get;
		}

		[Token(Token = "0x17000083")]
		IControllerTemplateButton throttleButton4
		{
			[Token(Token = "0x600013C")]
			get;
		}

		[Token(Token = "0x17000084")]
		IControllerTemplateButton throttleButton5
		{
			[Token(Token = "0x600013D")]
			get;
		}

		[Token(Token = "0x17000085")]
		IControllerTemplateButton throttleButton6
		{
			[Token(Token = "0x600013E")]
			get;
		}

		[Token(Token = "0x17000086")]
		IControllerTemplateButton throttleButton7
		{
			[Token(Token = "0x600013F")]
			get;
		}

		[Token(Token = "0x17000087")]
		IControllerTemplateButton throttleButton8
		{
			[Token(Token = "0x6000140")]
			get;
		}

		[Token(Token = "0x17000088")]
		IControllerTemplateButton throttleButton9
		{
			[Token(Token = "0x6000141")]
			get;
		}

		[Token(Token = "0x17000089")]
		IControllerTemplateButton throttleButton10
		{
			[Token(Token = "0x6000142")]
			get;
		}

		[Token(Token = "0x1700008A")]
		IControllerTemplateButton throttleBaseButton1
		{
			[Token(Token = "0x6000143")]
			get;
		}

		[Token(Token = "0x1700008B")]
		IControllerTemplateButton throttleBaseButton2
		{
			[Token(Token = "0x6000144")]
			get;
		}

		[Token(Token = "0x1700008C")]
		IControllerTemplateButton throttleBaseButton3
		{
			[Token(Token = "0x6000145")]
			get;
		}

		[Token(Token = "0x1700008D")]
		IControllerTemplateButton throttleBaseButton4
		{
			[Token(Token = "0x6000146")]
			get;
		}

		[Token(Token = "0x1700008E")]
		IControllerTemplateButton throttleBaseButton5
		{
			[Token(Token = "0x6000147")]
			get;
		}

		[Token(Token = "0x1700008F")]
		IControllerTemplateButton throttleBaseButton6
		{
			[Token(Token = "0x6000148")]
			get;
		}

		[Token(Token = "0x17000090")]
		IControllerTemplateButton throttleBaseButton7
		{
			[Token(Token = "0x6000149")]
			get;
		}

		[Token(Token = "0x17000091")]
		IControllerTemplateButton throttleBaseButton8
		{
			[Token(Token = "0x600014A")]
			get;
		}

		[Token(Token = "0x17000092")]
		IControllerTemplateButton throttleBaseButton9
		{
			[Token(Token = "0x600014B")]
			get;
		}

		[Token(Token = "0x17000093")]
		IControllerTemplateButton throttleBaseButton10
		{
			[Token(Token = "0x600014C")]
			get;
		}

		[Token(Token = "0x17000094")]
		IControllerTemplateButton throttleBaseButton11
		{
			[Token(Token = "0x600014D")]
			get;
		}

		[Token(Token = "0x17000095")]
		IControllerTemplateButton throttleBaseButton12
		{
			[Token(Token = "0x600014E")]
			get;
		}

		[Token(Token = "0x17000096")]
		IControllerTemplateButton throttleBaseButton13
		{
			[Token(Token = "0x600014F")]
			get;
		}

		[Token(Token = "0x17000097")]
		IControllerTemplateButton throttleBaseButton14
		{
			[Token(Token = "0x6000150")]
			get;
		}

		[Token(Token = "0x17000098")]
		IControllerTemplateButton throttleBaseButton15
		{
			[Token(Token = "0x6000151")]
			get;
		}

		[Token(Token = "0x17000099")]
		IControllerTemplateAxis throttleSlider1
		{
			[Token(Token = "0x6000152")]
			get;
		}

		[Token(Token = "0x1700009A")]
		IControllerTemplateAxis throttleSlider2
		{
			[Token(Token = "0x6000153")]
			get;
		}

		[Token(Token = "0x1700009B")]
		IControllerTemplateAxis throttleSlider3
		{
			[Token(Token = "0x6000154")]
			get;
		}

		[Token(Token = "0x1700009C")]
		IControllerTemplateAxis throttleSlider4
		{
			[Token(Token = "0x6000155")]
			get;
		}

		[Token(Token = "0x1700009D")]
		IControllerTemplateAxis throttleDial1
		{
			[Token(Token = "0x6000156")]
			get;
		}

		[Token(Token = "0x1700009E")]
		IControllerTemplateAxis throttleDial2
		{
			[Token(Token = "0x6000157")]
			get;
		}

		[Token(Token = "0x1700009F")]
		IControllerTemplateAxis throttleDial3
		{
			[Token(Token = "0x6000158")]
			get;
		}

		[Token(Token = "0x170000A0")]
		IControllerTemplateAxis throttleDial4
		{
			[Token(Token = "0x6000159")]
			get;
		}

		[Token(Token = "0x170000A1")]
		IControllerTemplateButton throttleWheel1Forward
		{
			[Token(Token = "0x600015A")]
			get;
		}

		[Token(Token = "0x170000A2")]
		IControllerTemplateButton throttleWheel1Back
		{
			[Token(Token = "0x600015B")]
			get;
		}

		[Token(Token = "0x170000A3")]
		IControllerTemplateButton throttleWheel1Press
		{
			[Token(Token = "0x600015C")]
			get;
		}

		[Token(Token = "0x170000A4")]
		IControllerTemplateButton throttleWheel2Forward
		{
			[Token(Token = "0x600015D")]
			get;
		}

		[Token(Token = "0x170000A5")]
		IControllerTemplateButton throttleWheel2Back
		{
			[Token(Token = "0x600015E")]
			get;
		}

		[Token(Token = "0x170000A6")]
		IControllerTemplateButton throttleWheel2Press
		{
			[Token(Token = "0x600015F")]
			get;
		}

		[Token(Token = "0x170000A7")]
		IControllerTemplateButton throttleWheel3Forward
		{
			[Token(Token = "0x6000160")]
			get;
		}

		[Token(Token = "0x170000A8")]
		IControllerTemplateButton throttleWheel3Back
		{
			[Token(Token = "0x6000161")]
			get;
		}

		[Token(Token = "0x170000A9")]
		IControllerTemplateButton throttleWheel3Press
		{
			[Token(Token = "0x6000162")]
			get;
		}

		[Token(Token = "0x170000AA")]
		IControllerTemplateAxis leftPedal
		{
			[Token(Token = "0x6000163")]
			get;
		}

		[Token(Token = "0x170000AB")]
		IControllerTemplateAxis rightPedal
		{
			[Token(Token = "0x6000164")]
			get;
		}

		[Token(Token = "0x170000AC")]
		IControllerTemplateAxis slidePedals
		{
			[Token(Token = "0x6000165")]
			get;
		}

		[Token(Token = "0x170000AD")]
		IControllerTemplateStick stick
		{
			[Token(Token = "0x6000166")]
			get;
		}

		[Token(Token = "0x170000AE")]
		IControllerTemplateThumbStick stickMiniStick1
		{
			[Token(Token = "0x6000167")]
			get;
		}

		[Token(Token = "0x170000AF")]
		IControllerTemplateThumbStick stickMiniStick2
		{
			[Token(Token = "0x6000168")]
			get;
		}

		[Token(Token = "0x170000B0")]
		IControllerTemplateHat stickHat1
		{
			[Token(Token = "0x6000169")]
			get;
		}

		[Token(Token = "0x170000B1")]
		IControllerTemplateHat stickHat2
		{
			[Token(Token = "0x600016A")]
			get;
		}

		[Token(Token = "0x170000B2")]
		IControllerTemplateHat stickHat3
		{
			[Token(Token = "0x600016B")]
			get;
		}

		[Token(Token = "0x170000B3")]
		IControllerTemplateHat stickHat4
		{
			[Token(Token = "0x600016C")]
			get;
		}

		[Token(Token = "0x170000B4")]
		IControllerTemplateThrottle throttle1
		{
			[Token(Token = "0x600016D")]
			get;
		}

		[Token(Token = "0x170000B5")]
		IControllerTemplateThrottle throttle2
		{
			[Token(Token = "0x600016E")]
			get;
		}

		[Token(Token = "0x170000B6")]
		IControllerTemplateThumbStick throttleMiniStick
		{
			[Token(Token = "0x600016F")]
			get;
		}

		[Token(Token = "0x170000B7")]
		IControllerTemplateHat throttleHat1
		{
			[Token(Token = "0x6000170")]
			get;
		}

		[Token(Token = "0x170000B8")]
		IControllerTemplateHat throttleHat2
		{
			[Token(Token = "0x6000171")]
			get;
		}

		[Token(Token = "0x170000B9")]
		IControllerTemplateHat throttleHat3
		{
			[Token(Token = "0x6000172")]
			get;
		}

		[Token(Token = "0x170000BA")]
		IControllerTemplateHat throttleHat4
		{
			[Token(Token = "0x6000173")]
			get;
		}
	}
	[Token(Token = "0x2000035")]
	public interface IFlightYokeTemplate : IControllerTemplate
	{
		[Token(Token = "0x170000BB")]
		IControllerTemplateButton leftPaddle
		{
			[Token(Token = "0x6000174")]
			get;
		}

		[Token(Token = "0x170000BC")]
		IControllerTemplateButton rightPaddle
		{
			[Token(Token = "0x6000175")]
			get;
		}

		[Token(Token = "0x170000BD")]
		IControllerTemplateButton leftGripButton1
		{
			[Token(Token = "0x6000176")]
			get;
		}

		[Token(Token = "0x170000BE")]
		IControllerTemplateButton leftGripButton2
		{
			[Token(Token = "0x6000177")]
			get;
		}

		[Token(Token = "0x170000BF")]
		IControllerTemplateButton leftGripButton3
		{
			[Token(Token = "0x6000178")]
			get;
		}

		[Token(Token = "0x170000C0")]
		IControllerTemplateButton leftGripButton4
		{
			[Token(Token = "0x6000179")]
			get;
		}

		[Token(Token = "0x170000C1")]
		IControllerTemplateButton leftGripButton5
		{
			[Token(Token = "0x600017A")]
			get;
		}

		[Token(Token = "0x170000C2")]
		IControllerTemplateButton leftGripButton6
		{
			[Token(Token = "0x600017B")]
			get;
		}

		[Token(Token = "0x170000C3")]
		IControllerTemplateButton rightGripButton1
		{
			[Token(Token = "0x600017C")]
			get;
		}

		[Token(Token = "0x170000C4")]
		IControllerTemplateButton rightGripButton2
		{
			[Token(Token = "0x600017D")]
			get;
		}

		[Token(Token = "0x170000C5")]
		IControllerTemplateButton rightGripButton3
		{
			[Token(Token = "0x600017E")]
			get;
		}

		[Token(Token = "0x170000C6")]
		IControllerTemplateButton rightGripButton4
		{
			[Token(Token = "0x600017F")]
			get;
		}

		[Token(Token = "0x170000C7")]
		IControllerTemplateButton rightGripButton5
		{
			[Token(Token = "0x6000180")]
			get;
		}

		[Token(Token = "0x170000C8")]
		IControllerTemplateButton rightGripButton6
		{
			[Token(Token = "0x6000181")]
			get;
		}

		[Token(Token = "0x170000C9")]
		IControllerTemplateButton centerButton1
		{
			[Token(Token = "0x6000182")]
			get;
		}

		[Token(Token = "0x170000CA")]
		IControllerTemplateButton centerButton2
		{
			[Token(Token = "0x6000183")]
			get;
		}

		[Token(Token = "0x170000CB")]
		IControllerTemplateButton centerButton3
		{
			[Token(Token = "0x6000184")]
			get;
		}

		[Token(Token = "0x170000CC")]
		IControllerTemplateButton centerButton4
		{
			[Token(Token = "0x6000185")]
			get;
		}

		[Token(Token = "0x170000CD")]
		IControllerTemplateButton centerButton5
		{
			[Token(Token = "0x6000186")]
			get;
		}

		[Token(Token = "0x170000CE")]
		IControllerTemplateButton centerButton6
		{
			[Token(Token = "0x6000187")]
			get;
		}

		[Token(Token = "0x170000CF")]
		IControllerTemplateButton centerButton7
		{
			[Token(Token = "0x6000188")]
			get;
		}

		[Token(Token = "0x170000D0")]
		IControllerTemplateButton centerButton8
		{
			[Token(Token = "0x6000189")]
			get;
		}

		[Token(Token = "0x170000D1")]
		IControllerTemplateButton wheel1Up
		{
			[Token(Token = "0x600018A")]
			get;
		}

		[Token(Token = "0x170000D2")]
		IControllerTemplateButton wheel1Down
		{
			[Token(Token = "0x600018B")]
			get;
		}

		[Token(Token = "0x170000D3")]
		IControllerTemplateButton wheel1Press
		{
			[Token(Token = "0x600018C")]
			get;
		}

		[Token(Token = "0x170000D4")]
		IControllerTemplateButton wheel2Up
		{
			[Token(Token = "0x600018D")]
			get;
		}

		[Token(Token = "0x170000D5")]
		IControllerTemplateButton wheel2Down
		{
			[Token(Token = "0x600018E")]
			get;
		}

		[Token(Token = "0x170000D6")]
		IControllerTemplateButton wheel2Press
		{
			[Token(Token = "0x600018F")]
			get;
		}

		[Token(Token = "0x170000D7")]
		IControllerTemplateButton consoleButton1
		{
			[Token(Token = "0x6000190")]
			get;
		}

		[Token(Token = "0x170000D8")]
		IControllerTemplateButton consoleButton2
		{
			[Token(Token = "0x6000191")]
			get;
		}

		[Token(Token = "0x170000D9")]
		IControllerTemplateButton consoleButton3
		{
			[Token(Token = "0x6000192")]
			get;
		}

		[Token(Token = "0x170000DA")]
		IControllerTemplateButton consoleButton4
		{
			[Token(Token = "0x6000193")]
			get;
		}

		[Token(Token = "0x170000DB")]
		IControllerTemplateButton consoleButton5
		{
			[Token(Token = "0x6000194")]
			get;
		}

		[Token(Token = "0x170000DC")]
		IControllerTemplateButton consoleButton6
		{
			[Token(Token = "0x6000195")]
			get;
		}

		[Token(Token = "0x170000DD")]
		IControllerTemplateButton consoleButton7
		{
			[Token(Token = "0x6000196")]
			get;
		}

		[Token(Token = "0x170000DE")]
		IControllerTemplateButton consoleButton8
		{
			[Token(Token = "0x6000197")]
			get;
		}

		[Token(Token = "0x170000DF")]
		IControllerTemplateButton consoleButton9
		{
			[Token(Token = "0x6000198")]
			get;
		}

		[Token(Token = "0x170000E0")]
		IControllerTemplateButton consoleButton10
		{
			[Token(Token = "0x6000199")]
			get;
		}

		[Token(Token = "0x170000E1")]
		IControllerTemplateButton mode1
		{
			[Token(Token = "0x600019A")]
			get;
		}

		[Token(Token = "0x170000E2")]
		IControllerTemplateButton mode2
		{
			[Token(Token = "0x600019B")]
			get;
		}

		[Token(Token = "0x170000E3")]
		IControllerTemplateButton mode3
		{
			[Token(Token = "0x600019C")]
			get;
		}

		[Token(Token = "0x170000E4")]
		IControllerTemplateYoke yoke
		{
			[Token(Token = "0x600019D")]
			get;
		}

		[Token(Token = "0x170000E5")]
		IControllerTemplateThrottle lever1
		{
			[Token(Token = "0x600019E")]
			get;
		}

		[Token(Token = "0x170000E6")]
		IControllerTemplateThrottle lever2
		{
			[Token(Token = "0x600019F")]
			get;
		}

		[Token(Token = "0x170000E7")]
		IControllerTemplateThrottle lever3
		{
			[Token(Token = "0x60001A0")]
			get;
		}

		[Token(Token = "0x170000E8")]
		IControllerTemplateThrottle lever4
		{
			[Token(Token = "0x60001A1")]
			get;
		}

		[Token(Token = "0x170000E9")]
		IControllerTemplateThrottle lever5
		{
			[Token(Token = "0x60001A2")]
			get;
		}

		[Token(Token = "0x170000EA")]
		IControllerTemplateHat leftGripHat
		{
			[Token(Token = "0x60001A3")]
			get;
		}

		[Token(Token = "0x170000EB")]
		IControllerTemplateHat rightGripHat
		{
			[Token(Token = "0x60001A4")]
			get;
		}
	}
	[Token(Token = "0x2000036")]
	public interface IFlightPedalsTemplate : IControllerTemplate
	{
		[Token(Token = "0x170000EC")]
		IControllerTemplateAxis leftPedal
		{
			[Token(Token = "0x60001A5")]
			get;
		}

		[Token(Token = "0x170000ED")]
		IControllerTemplateAxis rightPedal
		{
			[Token(Token = "0x60001A6")]
			get;
		}

		[Token(Token = "0x170000EE")]
		IControllerTemplateAxis slide
		{
			[Token(Token = "0x60001A7")]
			get;
		}
	}
	[Token(Token = "0x2000037")]
	public interface ISixDofControllerTemplate : IControllerTemplate
	{
		[Token(Token = "0x170000EF")]
		IControllerTemplateAxis extraAxis1
		{
			[Token(Token = "0x60001A8")]
			get;
		}

		[Token(Token = "0x170000F0")]
		IControllerTemplateAxis extraAxis2
		{
			[Token(Token = "0x60001A9")]
			get;
		}

		[Token(Token = "0x170000F1")]
		IControllerTemplateAxis extraAxis3
		{
			[Token(Token = "0x60001AA")]
			get;
		}

		[Token(Token = "0x170000F2")]
		IControllerTemplateAxis extraAxis4
		{
			[Token(Token = "0x60001AB")]
			get;
		}

		[Token(Token = "0x170000F3")]
		IControllerTemplateButton button1
		{
			[Token(Token = "0x60001AC")]
			get;
		}

		[Token(Token = "0x170000F4")]
		IControllerTemplateButton button2
		{
			[Token(Token = "0x60001AD")]
			get;
		}

		[Token(Token = "0x170000F5")]
		IControllerTemplateButton button3
		{
			[Token(Token = "0x60001AE")]
			get;
		}

		[Token(Token = "0x170000F6")]
		IControllerTemplateButton button4
		{
			[Token(Token = "0x60001AF")]
			get;
		}

		[Token(Token = "0x170000F7")]
		IControllerTemplateButton button5
		{
			[Token(Token = "0x60001B0")]
			get;
		}

		[Token(Token = "0x170000F8")]
		IControllerTemplateButton button6
		{
			[Token(Token = "0x60001B1")]
			get;
		}

		[Token(Token = "0x170000F9")]
		IControllerTemplateButton button7
		{
			[Token(Token = "0x60001B2")]
			get;
		}

		[Token(Token = "0x170000FA")]
		IControllerTemplateButton button8
		{
			[Token(Token = "0x60001B3")]
			get;
		}

		[Token(Token = "0x170000FB")]
		IControllerTemplateButton button9
		{
			[Token(Token = "0x60001B4")]
			get;
		}

		[Token(Token = "0x170000FC")]
		IControllerTemplateButton button10
		{
			[Token(Token = "0x60001B5")]
			get;
		}

		[Token(Token = "0x170000FD")]
		IControllerTemplateButton button11
		{
			[Token(Token = "0x60001B6")]
			get;
		}

		[Token(Token = "0x170000FE")]
		IControllerTemplateButton button12
		{
			[Token(Token = "0x60001B7")]
			get;
		}

		[Token(Token = "0x170000FF")]
		IControllerTemplateButton button13
		{
			[Token(Token = "0x60001B8")]
			get;
		}

		[Token(Token = "0x17000100")]
		IControllerTemplateButton button14
		{
			[Token(Token = "0x60001B9")]
			get;
		}

		[Token(Token = "0x17000101")]
		IControllerTemplateButton button15
		{
			[Token(Token = "0x60001BA")]
			get;
		}

		[Token(Token = "0x17000102")]
		IControllerTemplateButton button16
		{
			[Token(Token = "0x60001BB")]
			get;
		}

		[Token(Token = "0x17000103")]
		IControllerTemplateButton button17
		{
			[Token(Token = "0x60001BC")]
			get;
		}

		[Token(Token = "0x17000104")]
		IControllerTemplateButton button18
		{
			[Token(Token = "0x60001BD")]
			get;
		}

		[Token(Token = "0x17000105")]
		IControllerTemplateButton button19
		{
			[Token(Token = "0x60001BE")]
			get;
		}

		[Token(Token = "0x17000106")]
		IControllerTemplateButton button20
		{
			[Token(Token = "0x60001BF")]
			get;
		}

		[Token(Token = "0x17000107")]
		IControllerTemplateButton button21
		{
			[Token(Token = "0x60001C0")]
			get;
		}

		[Token(Token = "0x17000108")]
		IControllerTemplateButton button22
		{
			[Token(Token = "0x60001C1")]
			get;
		}

		[Token(Token = "0x17000109")]
		IControllerTemplateButton button23
		{
			[Token(Token = "0x60001C2")]
			get;
		}

		[Token(Token = "0x1700010A")]
		IControllerTemplateButton button24
		{
			[Token(Token = "0x60001C3")]
			get;
		}

		[Token(Token = "0x1700010B")]
		IControllerTemplateButton button25
		{
			[Token(Token = "0x60001C4")]
			get;
		}

		[Token(Token = "0x1700010C")]
		IControllerTemplateButton button26
		{
			[Token(Token = "0x60001C5")]
			get;
		}

		[Token(Token = "0x1700010D")]
		IControllerTemplateButton button27
		{
			[Token(Token = "0x60001C6")]
			get;
		}

		[Token(Token = "0x1700010E")]
		IControllerTemplateButton button28
		{
			[Token(Token = "0x60001C7")]
			get;
		}

		[Token(Token = "0x1700010F")]
		IControllerTemplateButton button29
		{
			[Token(Token = "0x60001C8")]
			get;
		}

		[Token(Token = "0x17000110")]
		IControllerTemplateButton button30
		{
			[Token(Token = "0x60001C9")]
			get;
		}

		[Token(Token = "0x17000111")]
		IControllerTemplateButton button31
		{
			[Token(Token = "0x60001CA")]
			get;
		}

		[Token(Token = "0x17000112")]
		IControllerTemplateButton button32
		{
			[Token(Token = "0x60001CB")]
			get;
		}

		[Token(Token = "0x17000113")]
		IControllerTemplateHat hat1
		{
			[Token(Token = "0x60001CC")]
			get;
		}

		[Token(Token = "0x17000114")]
		IControllerTemplateHat hat2
		{
			[Token(Token = "0x60001CD")]
			get;
		}

		[Token(Token = "0x17000115")]
		IControllerTemplateThrottle throttle1
		{
			[Token(Token = "0x60001CE")]
			get;
		}

		[Token(Token = "0x17000116")]
		IControllerTemplateThrottle throttle2
		{
			[Token(Token = "0x60001CF")]
			get;
		}

		[Token(Token = "0x17000117")]
		IControllerTemplateStick6D stick
		{
			[Token(Token = "0x60001D0")]
			get;
		}
	}
	[Token(Token = "0x2000038")]
	public sealed class GamepadTemplate : ControllerTemplate, IGamepadTemplate, IControllerTemplate
	{
		[Token(Token = "0x40000AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Guid typeGuid;

		[Token(Token = "0x40000AE")]
		public const int elementId_leftStickX = 0;

		[Token(Token = "0x40000AF")]
		public const int elementId_leftStickY = 1;

		[Token(Token = "0x40000B0")]
		public const int elementId_rightStickX = 2;

		[Token(Token = "0x40000B1")]
		public const int elementId_rightStickY = 3;

		[Token(Token = "0x40000B2")]
		public const int elementId_actionBottomRow1 = 4;

		[Token(Token = "0x40000B3")]
		public const int elementId_a = 4;

		[Token(Token = "0x40000B4")]
		public const int elementId_actionBottomRow2 = 5;

		[Token(Token = "0x40000B5")]
		public const int elementId_b = 5;

		[Token(Token = "0x40000B6")]
		public const int elementId_actionBottomRow3 = 6;

		[Token(Token = "0x40000B7")]
		public const int elementId_c = 6;

		[Token(Token = "0x40000B8")]
		public const int elementId_actionTopRow1 = 7;

		[Token(Token = "0x40000B9")]
		public const int elementId_x = 7;

		[Token(Token = "0x40000BA")]
		public const int elementId_actionTopRow2 = 8;

		[Token(Token = "0x40000BB")]
		public const int elementId_y = 8;

		[Token(Token = "0x40000BC")]
		public const int elementId_actionTopRow3 = 9;

		[Token(Token = "0x40000BD")]
		public const int elementId_z = 9;

		[Token(Token = "0x40000BE")]
		public const int elementId_leftShoulder1 = 10;

		[Token(Token = "0x40000BF")]
		public const int elementId_leftBumper = 10;

		[Token(Token = "0x40000C0")]
		public const int elementId_leftShoulder2 = 11;

		[Token(Token = "0x40000C1")]
		public const int elementId_leftTrigger = 11;

		[Token(Token = "0x40000C2")]
		public const int elementId_rightShoulder1 = 12;

		[Token(Token = "0x40000C3")]
		public const int elementId_rightBumper = 12;

		[Token(Token = "0x40000C4")]
		public const int elementId_rightShoulder2 = 13;

		[Token(Token = "0x40000C5")]
		public const int elementId_rightTrigger = 13;

		[Token(Token = "0x40000C6")]
		public const int elementId_center1 = 14;

		[Token(Token = "0x40000C7")]
		public const int elementId_back = 14;

		[Token(Token = "0x40000C8")]
		public const int elementId_center2 = 15;

		[Token(Token = "0x40000C9")]
		public const int elementId_start = 15;

		[Token(Token = "0x40000CA")]
		public const int elementId_center3 = 16;

		[Token(Token = "0x40000CB")]
		public const int elementId_guide = 16;

		[Token(Token = "0x40000CC")]
		public const int elementId_leftStickButton = 17;

		[Token(Token = "0x40000CD")]
		public const int elementId_rightStickButton = 18;

		[Token(Token = "0x40000CE")]
		public const int elementId_dPadUp = 19;

		[Token(Token = "0x40000CF")]
		public const int elementId_dPadRight = 20;

		[Token(Token = "0x40000D0")]
		public const int elementId_dPadDown = 21;

		[Token(Token = "0x40000D1")]
		public const int elementId_dPadLeft = 22;

		[Token(Token = "0x40000D2")]
		public const int elementId_leftStick = 23;

		[Token(Token = "0x40000D3")]
		public const int elementId_rightStick = 24;

		[Token(Token = "0x40000D4")]
		public const int elementId_dPad = 25;

		[Token(Token = "0x17000118")]
		private IControllerTemplateButton Rewired.IGamepadTemplate.actionBottomRow1
		{
			[Token(Token = "0x60001D1")]
			[Address(RVA = "0xE849E0", Offset = "0xE849E0", VA = "0xE849E0", Slot = "12")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000119")]
		private IControllerTemplateButton Rewired.IGamepadTemplate.a
		{
			[Token(Token = "0x60001D2")]
			[Address(RVA = "0xE84A30", Offset = "0xE84A30", VA = "0xE84A30", Slot = "13")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700011A")]
		private IControllerTemplateButton Rewired.IGamepadTemplate.actionBottomRow2
		{
			[Token(Token = "0x60001D3")]
			[Address(RVA = "0xE84A80", Offset = "0xE84A80", VA = "0xE84A80", Slot = "14")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700011B")]
		private IControllerTemplateButton Rewired.IGamepadTemplate.b
		{
			[Token(Token = "0x60001D4")]
			[Address(RVA = "0xE84AD0", Offset = "0xE84AD0", VA = "0xE84AD0", Slot = "15")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700011C")]
		private IControllerTemplateButton Rewired.IGamepadTemplate.actionBottomRow3
		{
			[Token(Token = "0x60001D5")]
			[Address(RVA = "0xE84B20", Offset = "0xE84B20", VA = "0xE84B20", Slot = "16")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700011D")]
		private IControllerTemplateButton Rewired.IGamepadTemplate.c
		{
			[Token(Token = "0x60001D6")]
			[Address(RVA = "0xE84B70", Offset = "0xE84B70", VA = "0xE84B70", Slot = "17")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700011E")]
		private IControllerTemplateButton Rewired.IGamepadTemplate.actionTopRow1
		{
			[Token(Token = "0x60001D7")]
			[Address(RVA = "0xE84BC0", Offset = "0xE84BC0", VA = "0xE84BC0", Slot = "18")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700011F")]
		private IControllerTemplateButton Rewired.IGamepadTemplate.x
		{
			[Token(Token = "0x60001D8")]
			[Address(RVA = "0xE84C10", Offset = "0xE84C10", VA = "0xE84C10", Slot = "19")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000120")]
		private IControllerTemplateButton Rewired.IGamepadTemplate.actionTopRow2
		{
			[Token(Token = "0x60001D9")]
			[Address(RVA = "0xE84C60", Offset = "0xE84C60", VA = "0xE84C60", Slot = "20")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000121")]
		private IControllerTemplateButton Rewired.IGamepadTemplate.y
		{
			[Token(Token = "0x60001DA")]
			[Address(RVA = "0xE84CB0", Offset = "0xE84CB0", VA = "0xE84CB0", Slot = "21")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000122")]
		private IControllerTemplateButton Rewired.IGamepadTemplate.actionTopRow3
		{
			[Token(Token = "0x60001DB")]
			[Address(RVA = "0xE84D00", Offset = "0xE84D00", VA = "0xE84D00", Slot = "22")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000123")]
		private IControllerTemplateButton Rewired.IGamepadTemplate.z
		{
			[Token(Token = "0x60001DC")]
			[Address(RVA = "0xE84D50", Offset = "0xE84D50", VA = "0xE84D50", Slot = "23")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000124")]
		private IControllerTemplateButton Rewired.IGamepadTemplate.leftShoulder1
		{
			[Token(Token = "0x60001DD")]
			[Address(RVA = "0xE84DA0", Offset = "0xE84DA0", VA = "0xE84DA0", Slot = "24")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000125")]
		private IControllerTemplateButton Rewired.IGamepadTemplate.leftBumper
		{
			[Token(Token = "0x60001DE")]
			[Address(RVA = "0xE84DF0", Offset = "0xE84DF0", VA = "0xE84DF0", Slot = "25")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000126")]
		private IControllerTemplateAxis Rewired.IGamepadTemplate.leftShoulder2
		{
			[Token(Token = "0x60001DF")]
			[Address(RVA = "0xE84E40", Offset = "0xE84E40", VA = "0xE84E40", Slot = "26")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000127")]
		private IControllerTemplateAxis Rewired.IGamepadTemplate.leftTrigger
		{
			[Token(Token = "0x60001E0")]
			[Address(RVA = "0xE84E90", Offset = "0xE84E90", VA = "0xE84E90", Slot = "27")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000128")]
		private IControllerTemplateButton Rewired.IGamepadTemplate.rightShoulder1
		{
			[Token(Token = "0x60001E1")]
			[Address(RVA = "0xE84EE0", Offset = "0xE84EE0", VA = "0xE84EE0", Slot = "28")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000129")]
		private IControllerTemplateButton Rewired.IGamepadTemplate.rightBumper
		{
			[Token(Token = "0x60001E2")]
			[Address(RVA = "0xE84F30", Offset = "0xE84F30", VA = "0xE84F30", Slot = "29")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700012A")]
		private IControllerTemplateAxis Rewired.IGamepadTemplate.rightShoulder2
		{
			[Token(Token = "0x60001E3")]
			[Address(RVA = "0xE84F80", Offset = "0xE84F80", VA = "0xE84F80", Slot = "30")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700012B")]
		private IControllerTemplateAxis Rewired.IGamepadTemplate.rightTrigger
		{
			[Token(Token = "0x60001E4")]
			[Address(RVA = "0xE84FD0", Offset = "0xE84FD0", VA = "0xE84FD0", Slot = "31")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700012C")]
		private IControllerTemplateButton Rewired.IGamepadTemplate.center1
		{
			[Token(Token = "0x60001E5")]
			[Address(RVA = "0xE85020", Offset = "0xE85020", VA = "0xE85020", Slot = "32")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700012D")]
		private IControllerTemplateButton Rewired.IGamepadTemplate.back
		{
			[Token(Token = "0x60001E6")]
			[Address(RVA = "0xE85070", Offset = "0xE85070", VA = "0xE85070", Slot = "33")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700012E")]
		private IControllerTemplateButton Rewired.IGamepadTemplate.center2
		{
			[Token(Token = "0x60001E7")]
			[Address(RVA = "0xE850C0", Offset = "0xE850C0", VA = "0xE850C0", Slot = "34")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700012F")]
		private IControllerTemplateButton Rewired.IGamepadTemplate.start
		{
			[Token(Token = "0x60001E8")]
			[Address(RVA = "0xE85110", Offset = "0xE85110", VA = "0xE85110", Slot = "35")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000130")]
		private IControllerTemplateButton Rewired.IGamepadTemplate.center3
		{
			[Token(Token = "0x60001E9")]
			[Address(RVA = "0xE85160", Offset = "0xE85160", VA = "0xE85160", Slot = "36")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000131")]
		private IControllerTemplateButton Rewired.IGamepadTemplate.guide
		{
			[Token(Token = "0x60001EA")]
			[Address(RVA = "0xE851B0", Offset = "0xE851B0", VA = "0xE851B0", Slot = "37")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000132")]
		private IControllerTemplateThumbStick Rewired.IGamepadTemplate.leftStick
		{
			[Token(Token = "0x60001EB")]
			[Address(RVA = "0xE85200", Offset = "0xE85200", VA = "0xE85200", Slot = "38")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000133")]
		private IControllerTemplateThumbStick Rewired.IGamepadTemplate.rightStick
		{
			[Token(Token = "0x60001EC")]
			[Address(RVA = "0xE85250", Offset = "0xE85250", VA = "0xE85250", Slot = "39")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000134")]
		private IControllerTemplateDPad Rewired.IGamepadTemplate.dPad
		{
			[Token(Token = "0x60001ED")]
			[Address(RVA = "0xE852A0", Offset = "0xE852A0", VA = "0xE852A0", Slot = "40")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60001EE")]
		[Address(RVA = "0xE852F0", Offset = "0xE852F0", VA = "0xE852F0")]
		public GamepadTemplate(object payload)
		{
		}
	}
	[Token(Token = "0x2000039")]
	public sealed class RacingWheelTemplate : ControllerTemplate, IRacingWheelTemplate, IControllerTemplate
	{
		[Token(Token = "0x40000D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Guid typeGuid;

		[Token(Token = "0x40000D6")]
		public const int elementId_wheel = 0;

		[Token(Token = "0x40000D7")]
		public const int elementId_accelerator = 1;

		[Token(Token = "0x40000D8")]
		public const int elementId_brake = 2;

		[Token(Token = "0x40000D9")]
		public const int elementId_clutch = 3;

		[Token(Token = "0x40000DA")]
		public const int elementId_shiftDown = 4;

		[Token(Token = "0x40000DB")]
		public const int elementId_shiftUp = 5;

		[Token(Token = "0x40000DC")]
		public const int elementId_wheelButton1 = 6;

		[Token(Token = "0x40000DD")]
		public const int elementId_wheelButton2 = 7;

		[Token(Token = "0x40000DE")]
		public const int elementId_wheelButton3 = 8;

		[Token(Token = "0x40000DF")]
		public const int elementId_wheelButton4 = 9;

		[Token(Token = "0x40000E0")]
		public const int elementId_wheelButton5 = 10;

		[Token(Token = "0x40000E1")]
		public const int elementId_wheelButton6 = 11;

		[Token(Token = "0x40000E2")]
		public const int elementId_wheelButton7 = 12;

		[Token(Token = "0x40000E3")]
		public const int elementId_wheelButton8 = 13;

		[Token(Token = "0x40000E4")]
		public const int elementId_wheelButton9 = 14;

		[Token(Token = "0x40000E5")]
		public const int elementId_wheelButton10 = 15;

		[Token(Token = "0x40000E6")]
		public const int elementId_consoleButton1 = 16;

		[Token(Token = "0x40000E7")]
		public const int elementId_consoleButton2 = 17;

		[Token(Token = "0x40000E8")]
		public const int elementId_consoleButton3 = 18;

		[Token(Token = "0x40000E9")]
		public const int elementId_consoleButton4 = 19;

		[Token(Token = "0x40000EA")]
		public const int elementId_consoleButton5 = 20;

		[Token(Token = "0x40000EB")]
		public const int elementId_consoleButton6 = 21;

		[Token(Token = "0x40000EC")]
		public const int elementId_consoleButton7 = 22;

		[Token(Token = "0x40000ED")]
		public const int elementId_consoleButton8 = 23;

		[Token(Token = "0x40000EE")]
		public const int elementId_consoleButton9 = 24;

		[Token(Token = "0x40000EF")]
		public const int elementId_consoleButton10 = 25;

		[Token(Token = "0x40000F0")]
		public const int elementId_shifter1 = 26;

		[Token(Token = "0x40000F1")]
		public const int elementId_shifter2 = 27;

		[Token(Token = "0x40000F2")]
		public const int elementId_shifter3 = 28;

		[Token(Token = "0x40000F3")]
		public const int elementId_shifter4 = 29;

		[Token(Token = "0x40000F4")]
		public const int elementId_shifter5 = 30;

		[Token(Token = "0x40000F5")]
		public const int elementId_shifter6 = 31;

		[Token(Token = "0x40000F6")]
		public const int elementId_shifter7 = 32;

		[Token(Token = "0x40000F7")]
		public const int elementId_shifter8 = 33;

		[Token(Token = "0x40000F8")]
		public const int elementId_shifter9 = 34;

		[Token(Token = "0x40000F9")]
		public const int elementId_shifter10 = 35;

		[Token(Token = "0x40000FA")]
		public const int elementId_reverseGear = 44;

		[Token(Token = "0x40000FB")]
		public const int elementId_select = 36;

		[Token(Token = "0x40000FC")]
		public const int elementId_start = 37;

		[Token(Token = "0x40000FD")]
		public const int elementId_systemButton = 38;

		[Token(Token = "0x40000FE")]
		public const int elementId_horn = 43;

		[Token(Token = "0x40000FF")]
		public const int elementId_dPadUp = 39;

		[Token(Token = "0x4000100")]
		public const int elementId_dPadRight = 40;

		[Token(Token = "0x4000101")]
		public const int elementId_dPadDown = 41;

		[Token(Token = "0x4000102")]
		public const int elementId_dPadLeft = 42;

		[Token(Token = "0x4000103")]
		public const int elementId_dPad = 45;

		[Token(Token = "0x17000135")]
		private IControllerTemplateAxis Rewired.IRacingWheelTemplate.wheel
		{
			[Token(Token = "0x60001F0")]
			[Address(RVA = "0xD9B970", Offset = "0xD9B970", VA = "0xD9B970", Slot = "12")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000136")]
		private IControllerTemplateAxis Rewired.IRacingWheelTemplate.accelerator
		{
			[Token(Token = "0x60001F1")]
			[Address(RVA = "0xD9B9C0", Offset = "0xD9B9C0", VA = "0xD9B9C0", Slot = "13")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000137")]
		private IControllerTemplateAxis Rewired.IRacingWheelTemplate.brake
		{
			[Token(Token = "0x60001F2")]
			[Address(RVA = "0xD9BA10", Offset = "0xD9BA10", VA = "0xD9BA10", Slot = "14")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000138")]
		private IControllerTemplateAxis Rewired.IRacingWheelTemplate.clutch
		{
			[Token(Token = "0x60001F3")]
			[Address(RVA = "0xD9BA60", Offset = "0xD9BA60", VA = "0xD9BA60", Slot = "15")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000139")]
		private IControllerTemplateButton Rewired.IRacingWheelTemplate.shiftDown
		{
			[Token(Token = "0x60001F4")]
			[Address(RVA = "0xD9BAB0", Offset = "0xD9BAB0", VA = "0xD9BAB0", Slot = "16")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700013A")]
		private IControllerTemplateButton Rewired.IRacingWheelTemplate.shiftUp
		{
			[Token(Token = "0x60001F5")]
			[Address(RVA = "0xD9BB00", Offset = "0xD9BB00", VA = "0xD9BB00", Slot = "17")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700013B")]
		private IControllerTemplateButton Rewired.IRacingWheelTemplate.wheelButton1
		{
			[Token(Token = "0x60001F6")]
			[Address(RVA = "0xD9BB50", Offset = "0xD9BB50", VA = "0xD9BB50", Slot = "18")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700013C")]
		private IControllerTemplateButton Rewired.IRacingWheelTemplate.wheelButton2
		{
			[Token(Token = "0x60001F7")]
			[Address(RVA = "0xD9BBA0", Offset = "0xD9BBA0", VA = "0xD9BBA0", Slot = "19")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700013D")]
		private IControllerTemplateButton Rewired.IRacingWheelTemplate.wheelButton3
		{
			[Token(Token = "0x60001F8")]
			[Address(RVA = "0xD9BBF0", Offset = "0xD9BBF0", VA = "0xD9BBF0", Slot = "20")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700013E")]
		private IControllerTemplateButton Rewired.IRacingWheelTemplate.wheelButton4
		{
			[Token(Token = "0x60001F9")]
			[Address(RVA = "0xD9BC40", Offset = "0xD9BC40", VA = "0xD9BC40", Slot = "21")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700013F")]
		private IControllerTemplateButton Rewired.IRacingWheelTemplate.wheelButton5
		{
			[Token(Token = "0x60001FA")]
			[Address(RVA = "0xD9BC90", Offset = "0xD9BC90", VA = "0xD9BC90", Slot = "22")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000140")]
		private IControllerTemplateButton Rewired.IRacingWheelTemplate.wheelButton6
		{
			[Token(Token = "0x60001FB")]
			[Address(RVA = "0xD9BCE0", Offset = "0xD9BCE0", VA = "0xD9BCE0", Slot = "23")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000141")]
		private IControllerTemplateButton Rewired.IRacingWheelTemplate.wheelButton7
		{
			[Token(Token = "0x60001FC")]
			[Address(RVA = "0xD9BD30", Offset = "0xD9BD30", VA = "0xD9BD30", Slot = "24")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000142")]
		private IControllerTemplateButton Rewired.IRacingWheelTemplate.wheelButton8
		{
			[Token(Token = "0x60001FD")]
			[Address(RVA = "0xD9BD80", Offset = "0xD9BD80", VA = "0xD9BD80", Slot = "25")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000143")]
		private IControllerTemplateButton Rewired.IRacingWheelTemplate.wheelButton9
		{
			[Token(Token = "0x60001FE")]
			[Address(RVA = "0xD9BDD0", Offset = "0xD9BDD0", VA = "0xD9BDD0", Slot = "26")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000144")]
		private IControllerTemplateButton Rewired.IRacingWheelTemplate.wheelButton10
		{
			[Token(Token = "0x60001FF")]
			[Address(RVA = "0xD9BE20", Offset = "0xD9BE20", VA = "0xD9BE20", Slot = "27")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000145")]
		private IControllerTemplateButton Rewired.IRacingWheelTemplate.consoleButton1
		{
			[Token(Token = "0x6000200")]
			[Address(RVA = "0xD9BE70", Offset = "0xD9BE70", VA = "0xD9BE70", Slot = "28")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000146")]
		private IControllerTemplateButton Rewired.IRacingWheelTemplate.consoleButton2
		{
			[Token(Token = "0x6000201")]
			[Address(RVA = "0xD9BEC0", Offset = "0xD9BEC0", VA = "0xD9BEC0", Slot = "29")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000147")]
		private IControllerTemplateButton Rewired.IRacingWheelTemplate.consoleButton3
		{
			[Token(Token = "0x6000202")]
			[Address(RVA = "0xD9BF10", Offset = "0xD9BF10", VA = "0xD9BF10", Slot = "30")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000148")]
		private IControllerTemplateButton Rewired.IRacingWheelTemplate.consoleButton4
		{
			[Token(Token = "0x6000203")]
			[Address(RVA = "0xD9BF60", Offset = "0xD9BF60", VA = "0xD9BF60", Slot = "31")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000149")]
		private IControllerTemplateButton Rewired.IRacingWheelTemplate.consoleButton5
		{
			[Token(Token = "0x6000204")]
			[Address(RVA = "0xD9BFB0", Offset = "0xD9BFB0", VA = "0xD9BFB0", Slot = "32")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700014A")]
		private IControllerTemplateButton Rewired.IRacingWheelTemplate.consoleButton6
		{
			[Token(Token = "0x6000205")]
			[Address(RVA = "0xD9C000", Offset = "0xD9C000", VA = "0xD9C000", Slot = "33")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700014B")]
		private IControllerTemplateButton Rewired.IRacingWheelTemplate.consoleButton7
		{
			[Token(Token = "0x6000206")]
			[Address(RVA = "0xD9C050", Offset = "0xD9C050", VA = "0xD9C050", Slot = "34")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700014C")]
		private IControllerTemplateButton Rewired.IRacingWheelTemplate.consoleButton8
		{
			[Token(Token = "0x6000207")]
			[Address(RVA = "0xD9C0A0", Offset = "0xD9C0A0", VA = "0xD9C0A0", Slot = "35")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700014D")]
		private IControllerTemplateButton Rewired.IRacingWheelTemplate.consoleButton9
		{
			[Token(Token = "0x6000208")]
			[Address(RVA = "0xD9C0F0", Offset = "0xD9C0F0", VA = "0xD9C0F0", Slot = "36")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700014E")]
		private IControllerTemplateButton Rewired.IRacingWheelTemplate.consoleButton10
		{
			[Token(Token = "0x6000209")]
			[Address(RVA = "0xD9C140", Offset = "0xD9C140", VA = "0xD9C140", Slot = "37")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700014F")]
		private IControllerTemplateButton Rewired.IRacingWheelTemplate.shifter1
		{
			[Token(Token = "0x600020A")]
			[Address(RVA = "0xD9C190", Offset = "0xD9C190", VA = "0xD9C190", Slot = "38")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000150")]
		private IControllerTemplateButton Rewired.IRacingWheelTemplate.shifter2
		{
			[Token(Token = "0x600020B")]
			[Address(RVA = "0xD9C1E0", Offset = "0xD9C1E0", VA = "0xD9C1E0", Slot = "39")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000151")]
		private IControllerTemplateButton Rewired.IRacingWheelTemplate.shifter3
		{
			[Token(Token = "0x600020C")]
			[Address(RVA = "0xD9C230", Offset = "0xD9C230", VA = "0xD9C230", Slot = "40")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000152")]
		private IControllerTemplateButton Rewired.IRacingWheelTemplate.shifter4
		{
			[Token(Token = "0x600020D")]
			[Address(RVA = "0xD9C280", Offset = "0xD9C280", VA = "0xD9C280", Slot = "41")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000153")]
		private IControllerTemplateButton Rewired.IRacingWheelTemplate.shifter5
		{
			[Token(Token = "0x600020E")]
			[Address(RVA = "0xD9C2D0", Offset = "0xD9C2D0", VA = "0xD9C2D0", Slot = "42")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000154")]
		private IControllerTemplateButton Rewired.IRacingWheelTemplate.shifter6
		{
			[Token(Token = "0x600020F")]
			[Address(RVA = "0xD9C320", Offset = "0xD9C320", VA = "0xD9C320", Slot = "43")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000155")]
		private IControllerTemplateButton Rewired.IRacingWheelTemplate.shifter7
		{
			[Token(Token = "0x6000210")]
			[Address(RVA = "0xD9C370", Offset = "0xD9C370", VA = "0xD9C370", Slot = "44")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000156")]
		private IControllerTemplateButton Rewired.IRacingWheelTemplate.shifter8
		{
			[Token(Token = "0x6000211")]
			[Address(RVA = "0xD9C3C0", Offset = "0xD9C3C0", VA = "0xD9C3C0", Slot = "45")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000157")]
		private IControllerTemplateButton Rewired.IRacingWheelTemplate.shifter9
		{
			[Token(Token = "0x6000212")]
			[Address(RVA = "0xD9C410", Offset = "0xD9C410", VA = "0xD9C410", Slot = "46")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000158")]
		private IControllerTemplateButton Rewired.IRacingWheelTemplate.shifter10
		{
			[Token(Token = "0x6000213")]
			[Address(RVA = "0xD9C460", Offset = "0xD9C460", VA = "0xD9C460", Slot = "47")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000159")]
		private IControllerTemplateButton Rewired.IRacingWheelTemplate.reverseGear
		{
			[Token(Token = "0x6000214")]
			[Address(RVA = "0xD9C4B0", Offset = "0xD9C4B0", VA = "0xD9C4B0", Slot = "48")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700015A")]
		private IControllerTemplateButton Rewired.IRacingWheelTemplate.select
		{
			[Token(Token = "0x6000215")]
			[Address(RVA = "0xD9C500", Offset = "0xD9C500", VA = "0xD9C500", Slot = "49")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700015B")]
		private IControllerTemplateButton Rewired.IRacingWheelTemplate.start
		{
			[Token(Token = "0x6000216")]
			[Address(RVA = "0xD9C550", Offset = "0xD9C550", VA = "0xD9C550", Slot = "50")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700015C")]
		private IControllerTemplateButton Rewired.IRacingWheelTemplate.systemButton
		{
			[Token(Token = "0x6000217")]
			[Address(RVA = "0xD9C5A0", Offset = "0xD9C5A0", VA = "0xD9C5A0", Slot = "51")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700015D")]
		private IControllerTemplateButton Rewired.IRacingWheelTemplate.horn
		{
			[Token(Token = "0x6000218")]
			[Address(RVA = "0xD9C5F0", Offset = "0xD9C5F0", VA = "0xD9C5F0", Slot = "52")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700015E")]
		private IControllerTemplateDPad Rewired.IRacingWheelTemplate.dPad
		{
			[Token(Token = "0x6000219")]
			[Address(RVA = "0xD9C640", Offset = "0xD9C640", VA = "0xD9C640", Slot = "53")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600021A")]
		[Address(RVA = "0xD9C690", Offset = "0xD9C690", VA = "0xD9C690")]
		public RacingWheelTemplate(object payload)
		{
		}
	}
	[Token(Token = "0x200003A")]
	public sealed class HOTASTemplate : ControllerTemplate, IHOTASTemplate, IControllerTemplate
	{
		[Token(Token = "0x4000104")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Guid typeGuid;

		[Token(Token = "0x4000105")]
		public const int elementId_stickX = 0;

		[Token(Token = "0x4000106")]
		public const int elementId_stickY = 1;

		[Token(Token = "0x4000107")]
		public const int elementId_stickRotate = 2;

		[Token(Token = "0x4000108")]
		public const int elementId_stickMiniStick1X = 78;

		[Token(Token = "0x4000109")]
		public const int elementId_stickMiniStick1Y = 79;

		[Token(Token = "0x400010A")]
		public const int elementId_stickMiniStick1Press = 80;

		[Token(Token = "0x400010B")]
		public const int elementId_stickMiniStick2X = 81;

		[Token(Token = "0x400010C")]
		public const int elementId_stickMiniStick2Y = 82;

		[Token(Token = "0x400010D")]
		public const int elementId_stickMiniStick2Press = 83;

		[Token(Token = "0x400010E")]
		public const int elementId_stickTrigger = 3;

		[Token(Token = "0x400010F")]
		public const int elementId_stickTriggerStage2 = 4;

		[Token(Token = "0x4000110")]
		public const int elementId_stickPinkyButton = 5;

		[Token(Token = "0x4000111")]
		public const int elementId_stickPinkyTrigger = 154;

		[Token(Token = "0x4000112")]
		public const int elementId_stickButton1 = 6;

		[Token(Token = "0x4000113")]
		public const int elementId_stickButton2 = 7;

		[Token(Token = "0x4000114")]
		public const int elementId_stickButton3 = 8;

		[Token(Token = "0x4000115")]
		public const int elementId_stickButton4 = 9;

		[Token(Token = "0x4000116")]
		public const int elementId_stickButton5 = 10;

		[Token(Token = "0x4000117")]
		public const int elementId_stickButton6 = 11;

		[Token(Token = "0x4000118")]
		public const int elementId_stickButton7 = 12;

		[Token(Token = "0x4000119")]
		public const int elementId_stickButton8 = 13;

		[Token(Token = "0x400011A")]
		public const int elementId_stickButton9 = 14;

		[Token(Token = "0x400011B")]
		public const int elementId_stickButton10 = 15;

		[Token(Token = "0x400011C")]
		public const int elementId_stickBaseButton1 = 18;

		[Token(Token = "0x400011D")]
		public const int elementId_stickBaseButton2 = 19;

		[Token(Token = "0x400011E")]
		public const int elementId_stickBaseButton3 = 20;

		[Token(Token = "0x400011F")]
		public const int elementId_stickBaseButton4 = 21;

		[Token(Token = "0x4000120")]
		public const int elementId_stickBaseButton5 = 22;

		[Token(Token = "0x4000121")]
		public const int elementId_stickBaseButton6 = 23;

		[Token(Token = "0x4000122")]
		public const int elementId_stickBaseButton7 = 24;

		[Token(Token = "0x4000123")]
		public const int elementId_stickBaseButton8 = 25;

		[Token(Token = "0x4000124")]
		public const int elementId_stickBaseButton9 = 26;

		[Token(Token = "0x4000125")]
		public const int elementId_stickBaseButton10 = 27;

		[Token(Token = "0x4000126")]
		public const int elementId_stickBaseButton11 = 161;

		[Token(Token = "0x4000127")]
		public const int elementId_stickBaseButton12 = 162;

		[Token(Token = "0x4000128")]
		public const int elementId_stickHat1Up = 28;

		[Token(Token = "0x4000129")]
		public const int elementId_stickHat1UpRight = 29;

		[Token(Token = "0x400012A")]
		public const int elementId_stickHat1Right = 30;

		[Token(Token = "0x400012B")]
		public const int elementId_stickHat1DownRight = 31;

		[Token(Token = "0x400012C")]
		public const int elementId_stickHat1Down = 32;

		[Token(Token = "0x400012D")]
		public const int elementId_stickHat1DownLeft = 33;

		[Token(Token = "0x400012E")]
		public const int elementId_stickHat1Left = 34;

		[Token(Token = "0x400012F")]
		public const int elementId_stickHat1Up_Left = 35;

		[Token(Token = "0x4000130")]
		public const int elementId_stickHat2Up = 36;

		[Token(Token = "0x4000131")]
		public const int elementId_stickHat2Up_right = 37;

		[Token(Token = "0x4000132")]
		public const int elementId_stickHat2Right = 38;

		[Token(Token = "0x4000133")]
		public const int elementId_stickHat2Down_Right = 39;

		[Token(Token = "0x4000134")]
		public const int elementId_stickHat2Down = 40;

		[Token(Token = "0x4000135")]
		public const int elementId_stickHat2Down_Left = 41;

		[Token(Token = "0x4000136")]
		public const int elementId_stickHat2Left = 42;

		[Token(Token = "0x4000137")]
		public const int elementId_stickHat2Up_Left = 43;

		[Token(Token = "0x4000138")]
		public const int elementId_stickHat3Up = 84;

		[Token(Token = "0x4000139")]
		public const int elementId_stickHat3Up_Right = 85;

		[Token(Token = "0x400013A")]
		public const int elementId_stickHat3Right = 86;

		[Token(Token = "0x400013B")]
		public const int elementId_stickHat3Down_Right = 87;

		[Token(Token = "0x400013C")]
		public const int elementId_stickHat3Down = 88;

		[Token(Token = "0x400013D")]
		public const int elementId_stickHat3Down_Left = 89;

		[Token(Token = "0x400013E")]
		public const int elementId_stickHat3Left = 90;

		[Token(Token = "0x400013F")]
		public const int elementId_stickHat3Up_Left = 91;

		[Token(Token = "0x4000140")]
		public const int elementId_stickHat4Up = 92;

		[Token(Token = "0x4000141")]
		public const int elementId_stickHat4Up_Right = 93;

		[Token(Token = "0x4000142")]
		public const int elementId_stickHat4Right = 94;

		[Token(Token = "0x4000143")]
		public const int elementId_stickHat4Down_Right = 95;

		[Token(Token = "0x4000144")]
		public const int elementId_stickHat4Down = 96;

		[Token(Token = "0x4000145")]
		public const int elementId_stickHat4Down_Left = 97;

		[Token(Token = "0x4000146")]
		public const int elementId_stickHat4Left = 98;

		[Token(Token = "0x4000147")]
		public const int elementId_stickHat4Up_Left = 99;

		[Token(Token = "0x4000148")]
		public const int elementId_mode1 = 44;

		[Token(Token = "0x4000149")]
		public const int elementId_mode2 = 45;

		[Token(Token = "0x400014A")]
		public const int elementId_mode3 = 46;

		[Token(Token = "0x400014B")]
		public const int elementId_throttle1Axis = 49;

		[Token(Token = "0x400014C")]
		public const int elementId_throttle2Axis = 155;

		[Token(Token = "0x400014D")]
		public const int elementId_throttle1MinDetent = 166;

		[Token(Token = "0x400014E")]
		public const int elementId_throttle2MinDetent = 167;

		[Token(Token = "0x400014F")]
		public const int elementId_throttleButton1 = 50;

		[Token(Token = "0x4000150")]
		public const int elementId_throttleButton2 = 51;

		[Token(Token = "0x4000151")]
		public const int elementId_throttleButton3 = 52;

		[Token(Token = "0x4000152")]
		public const int elementId_throttleButton4 = 53;

		[Token(Token = "0x4000153")]
		public const int elementId_throttleButton5 = 54;

		[Token(Token = "0x4000154")]
		public const int elementId_throttleButton6 = 55;

		[Token(Token = "0x4000155")]
		public const int elementId_throttleButton7 = 56;

		[Token(Token = "0x4000156")]
		public const int elementId_throttleButton8 = 57;

		[Token(Token = "0x4000157")]
		public const int elementId_throttleButton9 = 58;

		[Token(Token = "0x4000158")]
		public const int elementId_throttleButton10 = 59;

		[Token(Token = "0x4000159")]
		public const int elementId_throttleBaseButton1 = 60;

		[Token(Token = "0x400015A")]
		public const int elementId_throttleBaseButton2 = 61;

		[Token(Token = "0x400015B")]
		public const int elementId_throttleBaseButton3 = 62;

		[Token(Token = "0x400015C")]
		public const int elementId_throttleBaseButton4 = 63;

		[Token(Token = "0x400015D")]
		public const int elementId_throttleBaseButton5 = 64;

		[Token(Token = "0x400015E")]
		public const int elementId_throttleBaseButton6 = 65;

		[Token(Token = "0x400015F")]
		public const int elementId_throttleBaseButton7 = 66;

		[Token(Token = "0x4000160")]
		public const int elementId_throttleBaseButton8 = 67;

		[Token(Token = "0x4000161")]
		public const int elementId_throttleBaseButton9 = 68;

		[Token(Token = "0x4000162")]
		public const int elementId_throttleBaseButton10 = 69;

		[Token(Token = "0x4000163")]
		public const int elementId_throttleBaseButton11 = 132;

		[Token(Token = "0x4000164")]
		public const int elementId_throttleBaseButton12 = 133;

		[Token(Token = "0x4000165")]
		public const int elementId_throttleBaseButton13 = 134;

		[Token(Token = "0x4000166")]
		public const int elementId_throttleBaseButton14 = 135;

		[Token(Token = "0x4000167")]
		public const int elementId_throttleBaseButton15 = 136;

		[Token(Token = "0x4000168")]
		public const int elementId_throttleSlider1 = 70;

		[Token(Token = "0x4000169")]
		public const int elementId_throttleSlider2 = 71;

		[Token(Token = "0x400016A")]
		public const int elementId_throttleSlider3 = 72;

		[Token(Token = "0x400016B")]
		public const int elementId_throttleSlider4 = 73;

		[Token(Token = "0x400016C")]
		public const int elementId_throttleDial1 = 74;

		[Token(Token = "0x400016D")]
		public const int elementId_throttleDial2 = 142;

		[Token(Token = "0x400016E")]
		public const int elementId_throttleDial3 = 143;

		[Token(Token = "0x400016F")]
		public const int elementId_throttleDial4 = 144;

		[Token(Token = "0x4000170")]
		public const int elementId_throttleMiniStickX = 75;

		[Token(Token = "0x4000171")]
		public const int elementId_throttleMiniStickY = 76;

		[Token(Token = "0x4000172")]
		public const int elementId_throttleMiniStickPress = 77;

		[Token(Token = "0x4000173")]
		public const int elementId_throttleWheel1Forward = 145;

		[Token(Token = "0x4000174")]
		public const int elementId_throttleWheel1Back = 146;

		[Token(Token = "0x4000175")]
		public const int elementId_throttleWheel1Press = 147;

		[Token(Token = "0x4000176")]
		public const int elementId_throttleWheel2Forward = 148;

		[Token(Token = "0x4000177")]
		public const int elementId_throttleWheel2Back = 149;

		[Token(Token = "0x4000178")]
		public const int elementId_throttleWheel2Press = 150;

		[Token(Token = "0x4000179")]
		public const int elementId_throttleWheel3Forward = 151;

		[Token(Token = "0x400017A")]
		public const int elementId_throttleWheel3Back = 152;

		[Token(Token = "0x400017B")]
		public const int elementId_throttleWheel3Press = 153;

		[Token(Token = "0x400017C")]
		public const int elementId_throttleHat1Up = 100;

		[Token(Token = "0x400017D")]
		public const int elementId_throttleHat1Up_Right = 101;

		[Token(Token = "0x400017E")]
		public const int elementId_throttleHat1Right = 102;

		[Token(Token = "0x400017F")]
		public const int elementId_throttleHat1Down_Right = 103;

		[Token(Token = "0x4000180")]
		public const int elementId_throttleHat1Down = 104;

		[Token(Token = "0x4000181")]
		public const int elementId_throttleHat1Down_Left = 105;

		[Token(Token = "0x4000182")]
		public const int elementId_throttleHat1Left = 106;

		[Token(Token = "0x4000183")]
		public const int elementId_throttleHat1Up_Left = 107;

		[Token(Token = "0x4000184")]
		public const int elementId_throttleHat2Up = 108;

		[Token(Token = "0x4000185")]
		public const int elementId_throttleHat2Up_Right = 109;

		[Token(Token = "0x4000186")]
		public const int elementId_throttleHat2Right = 110;

		[Token(Token = "0x4000187")]
		public const int elementId_throttleHat2Down_Right = 111;

		[Token(Token = "0x4000188")]
		public const int elementId_throttleHat2Down = 112;

		[Token(Token = "0x4000189")]
		public const int elementId_throttleHat2Down_Left = 113;

		[Token(Token = "0x400018A")]
		public const int elementId_throttleHat2Left = 114;

		[Token(Token = "0x400018B")]
		public const int elementId_throttleHat2Up_Left = 115;

		[Token(Token = "0x400018C")]
		public const int elementId_throttleHat3Up = 116;

		[Token(Token = "0x400018D")]
		public const int elementId_throttleHat3Up_Right = 117;

		[Token(Token = "0x400018E")]
		public const int elementId_throttleHat3Right = 118;

		[Token(Token = "0x400018F")]
		public const int elementId_throttleHat3Down_Right = 119;

		[Token(Token = "0x4000190")]
		public const int elementId_throttleHat3Down = 120;

		[Token(Token = "0x4000191")]
		public const int elementId_throttleHat3Down_Left = 121;

		[Token(Token = "0x4000192")]
		public const int elementId_throttleHat3Left = 122;

		[Token(Token = "0x4000193")]
		public const int elementId_throttleHat3Up_Left = 123;

		[Token(Token = "0x4000194")]
		public const int elementId_throttleHat4Up = 124;

		[Token(Token = "0x4000195")]
		public const int elementId_throttleHat4Up_Right = 125;

		[Token(Token = "0x4000196")]
		public const int elementId_throttleHat4Right = 126;

		[Token(Token = "0x4000197")]
		public const int elementId_throttleHat4Down_Right = 127;

		[Token(Token = "0x4000198")]
		public const int elementId_throttleHat4Down = 128;

		[Token(Token = "0x4000199")]
		public const int elementId_throttleHat4Down_Left = 129;

		[Token(Token = "0x400019A")]
		public const int elementId_throttleHat4Left = 130;

		[Token(Token = "0x400019B")]
		public const int elementId_throttleHat4Up_Left = 131;

		[Token(Token = "0x400019C")]
		public const int elementId_leftPedal = 168;

		[Token(Token = "0x400019D")]
		public const int elementId_rightPedal = 169;

		[Token(Token = "0x400019E")]
		public const int elementId_slidePedals = 170;

		[Token(Token = "0x400019F")]
		public const int elementId_stick = 171;

		[Token(Token = "0x40001A0")]
		public const int elementId_stickMiniStick1 = 172;

		[Token(Token = "0x40001A1")]
		public const int elementId_stickMiniStick2 = 173;

		[Token(Token = "0x40001A2")]
		public const int elementId_stickHat1 = 174;

		[Token(Token = "0x40001A3")]
		public const int elementId_stickHat2 = 175;

		[Token(Token = "0x40001A4")]
		public const int elementId_stickHat3 = 176;

		[Token(Token = "0x40001A5")]
		public const int elementId_stickHat4 = 177;

		[Token(Token = "0x40001A6")]
		public const int elementId_throttle1 = 178;

		[Token(Token = "0x40001A7")]
		public const int elementId_throttle2 = 179;

		[Token(Token = "0x40001A8")]
		public const int elementId_throttleMiniStick = 180;

		[Token(Token = "0x40001A9")]
		public const int elementId_throttleHat1 = 181;

		[Token(Token = "0x40001AA")]
		public const int elementId_throttleHat2 = 182;

		[Token(Token = "0x40001AB")]
		public const int elementId_throttleHat3 = 183;

		[Token(Token = "0x40001AC")]
		public const int elementId_throttleHat4 = 184;

		[Token(Token = "0x1700015F")]
		private IControllerTemplateButton Rewired.IHOTASTemplate.stickTrigger
		{
			[Token(Token = "0x600021C")]
			[Address(RVA = "0xB0EEF4", Offset = "0xB0EEF4", VA = "0xB0EEF4", Slot = "12")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000160")]
		private IControllerTemplateButton Rewired.IHOTASTemplate.stickTriggerStage2
		{
			[Token(Token = "0x600021D")]
			[Address(RVA = "0xB0EF44", Offset = "0xB0EF44", VA = "0xB0EF44", Slot = "13")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000161")]
		private IControllerTemplateButton Rewired.IHOTASTemplate.stickPinkyButton
		{
			[Token(Token = "0x600021E")]
			[Address(RVA = "0xB0EF94", Offset = "0xB0EF94", VA = "0xB0EF94", Slot = "14")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000162")]
		private IControllerTemplateButton Rewired.IHOTASTemplate.stickPinkyTrigger
		{
			[Token(Token = "0x600021F")]
			[Address(RVA = "0xB0EFE4", Offset = "0xB0EFE4", VA = "0xB0EFE4", Slot = "15")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000163")]
		private IControllerTemplateButton Rewired.IHOTASTemplate.stickButton1
		{
			[Token(Token = "0x6000220")]
			[Address(RVA = "0xB0F034", Offset = "0xB0F034", VA = "0xB0F034", Slot = "16")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000164")]
		private IControllerTemplateButton Rewired.IHOTASTemplate.stickButton2
		{
			[Token(Token = "0x6000221")]
			[Address(RVA = "0xB0F084", Offset = "0xB0F084", VA = "0xB0F084", Slot = "17")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000165")]
		private IControllerTemplateButton Rewired.IHOTASTemplate.stickButton3
		{
			[Token(Token = "0x6000222")]
			[Address(RVA = "0xB0F0D4", Offset = "0xB0F0D4", VA = "0xB0F0D4", Slot = "18")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000166")]
		private IControllerTemplateButton Rewired.IHOTASTemplate.stickButton4
		{
			[Token(Token = "0x6000223")]
			[Address(RVA = "0xB0F124", Offset = "0xB0F124", VA = "0xB0F124", Slot = "19")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000167")]
		private IControllerTemplateButton Rewired.IHOTASTemplate.stickButton5
		{
			[Token(Token = "0x6000224")]
			[Address(RVA = "0xB0F174", Offset = "0xB0F174", VA = "0xB0F174", Slot = "20")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000168")]
		private IControllerTemplateButton Rewired.IHOTASTemplate.stickButton6
		{
			[Token(Token = "0x6000225")]
			[Address(RVA = "0xB0F1C4", Offset = "0xB0F1C4", VA = "0xB0F1C4", Slot = "21")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000169")]
		private IControllerTemplateButton Rewired.IHOTASTemplate.stickButton7
		{
			[Token(Token = "0x6000226")]
			[Address(RVA = "0xB0F214", Offset = "0xB0F214", VA = "0xB0F214", Slot = "22")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700016A")]
		private IControllerTemplateButton Rewired.IHOTASTemplate.stickButton8
		{
			[Token(Token = "0x6000227")]
			[Address(RVA = "0xB0F264", Offset = "0xB0F264", VA = "0xB0F264", Slot = "23")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700016B")]
		private IControllerTemplateButton Rewired.IHOTASTemplate.stickButton9
		{
			[Token(Token = "0x6000228")]
			[Address(RVA = "0xB0F2B4", Offset = "0xB0F2B4", VA = "0xB0F2B4", Slot = "24")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700016C")]
		private IControllerTemplateButton Rewired.IHOTASTemplate.stickButton10
		{
			[Token(Token = "0x6000229")]
			[Address(RVA = "0xB0F304", Offset = "0xB0F304", VA = "0xB0F304", Slot = "25")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700016D")]
		private IControllerTemplateButton Rewired.IHOTASTemplate.stickBaseButton1
		{
			[Token(Token = "0x600022A")]
			[Address(RVA = "0xB0F354", Offset = "0xB0F354", VA = "0xB0F354", Slot = "26")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700016E")]
		private IControllerTemplateButton Rewired.IHOTASTemplate.stickBaseButton2
		{
			[Token(Token = "0x600022B")]
			[Address(RVA = "0xB0F3A4", Offset = "0xB0F3A4", VA = "0xB0F3A4", Slot = "27")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700016F")]
		private IControllerTemplateButton Rewired.IHOTASTemplate.stickBaseButton3
		{
			[Token(Token = "0x600022C")]
			[Address(RVA = "0xB0F3F4", Offset = "0xB0F3F4", VA = "0xB0F3F4", Slot = "28")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000170")]
		private IControllerTemplateButton Rewired.IHOTASTemplate.stickBaseButton4
		{
			[Token(Token = "0x600022D")]
			[Address(RVA = "0xB0F444", Offset = "0xB0F444", VA = "0xB0F444", Slot = "29")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000171")]
		private IControllerTemplateButton Rewired.IHOTASTemplate.stickBaseButton5
		{
			[Token(Token = "0x600022E")]
			[Address(RVA = "0xB0F494", Offset = "0xB0F494", VA = "0xB0F494", Slot = "30")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000172")]
		private IControllerTemplateButton Rewired.IHOTASTemplate.stickBaseButton6
		{
			[Token(Token = "0x600022F")]
			[Address(RVA = "0xB0F4E4", Offset = "0xB0F4E4", VA = "0xB0F4E4", Slot = "31")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000173")]
		private IControllerTemplateButton Rewired.IHOTASTemplate.stickBaseButton7
		{
			[Token(Token = "0x6000230")]
			[Address(RVA = "0xB0F534", Offset = "0xB0F534", VA = "0xB0F534", Slot = "32")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000174")]
		private IControllerTemplateButton Rewired.IHOTASTemplate.stickBaseButton8
		{
			[Token(Token = "0x6000231")]
			[Address(RVA = "0xB0F584", Offset = "0xB0F584", VA = "0xB0F584", Slot = "33")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000175")]
		private IControllerTemplateButton Rewired.IHOTASTemplate.stickBaseButton9
		{
			[Token(Token = "0x6000232")]
			[Address(RVA = "0xB0F5D4", Offset = "0xB0F5D4", VA = "0xB0F5D4", Slot = "34")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000176")]
		private IControllerTemplateButton Rewired.IHOTASTemplate.stickBaseButton10
		{
			[Token(Token = "0x6000233")]
			[Address(RVA = "0xB0F624", Offset = "0xB0F624", VA = "0xB0F624", Slot = "35")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000177")]
		private IControllerTemplateButton Rewired.IHOTASTemplate.stickBaseButton11
		{
			[Token(Token = "0x6000234")]
			[Address(RVA = "0xB0F674", Offset = "0xB0F674", VA = "0xB0F674", Slot = "36")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000178")]
		private IControllerTemplateButton Rewired.IHOTASTemplate.stickBaseButton12
		{
			[Token(Token = "0x6000235")]
			[Address(RVA = "0xB0F6C4", Offset = "0xB0F6C4", VA = "0xB0F6C4", Slot = "37")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000179")]
		private IControllerTemplateButton Rewired.IHOTASTemplate.mode1
		{
			[Token(Token = "0x6000236")]
			[Address(RVA = "0xB0F714", Offset = "0xB0F714", VA = "0xB0F714", Slot = "38")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700017A")]
		private IControllerTemplateButton Rewired.IHOTASTemplate.mode2
		{
			[Token(Token = "0x6000237")]
			[Address(RVA = "0xB0F764", Offset = "0xB0F764", VA = "0xB0F764", Slot = "39")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700017B")]
		private IControllerTemplateButton Rewired.IHOTASTemplate.mode3
		{
			[Token(Token = "0x6000238")]
			[Address(RVA = "0xB0F7B4", Offset = "0xB0F7B4", VA = "0xB0F7B4", Slot = "40")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700017C")]
		private IControllerTemplateButton Rewired.IHOTASTemplate.throttleButton1
		{
			[Token(Token = "0x6000239")]
			[Address(RVA = "0xB0F804", Offset = "0xB0F804", VA = "0xB0F804", Slot = "41")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700017D")]
		private IControllerTemplateButton Rewired.IHOTASTemplate.throttleButton2
		{
			[Token(Token = "0x600023A")]
			[Address(RVA = "0xB0F854", Offset = "0xB0F854", VA = "0xB0F854", Slot = "42")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700017E")]
		private IControllerTemplateButton Rewired.IHOTASTemplate.throttleButton3
		{
			[Token(Token = "0x600023B")]
			[Address(RVA = "0xB0F8A4", Offset = "0xB0F8A4", VA = "0xB0F8A4", Slot = "43")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700017F")]
		private IControllerTemplateButton Rewired.IHOTASTemplate.throttleButton4
		{
			[Token(Token = "0x600023C")]
			[Address(RVA = "0xB0F8F4", Offset = "0xB0F8F4", VA = "0xB0F8F4", Slot = "44")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000180")]
		private IControllerTemplateButton Rewired.IHOTASTemplate.throttleButton5
		{
			[Token(Token = "0x600023D")]
			[Address(RVA = "0xB0F944", Offset = "0xB0F944", VA = "0xB0F944", Slot = "45")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000181")]
		private IControllerTemplateButton Rewired.IHOTASTemplate.throttleButton6
		{
			[Token(Token = "0x600023E")]
			[Address(RVA = "0xB0F994", Offset = "0xB0F994", VA = "0xB0F994", Slot = "46")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000182")]
		private IControllerTemplateButton Rewired.IHOTASTemplate.throttleButton7
		{
			[Token(Token = "0x600023F")]
			[Address(RVA = "0xB0F9E4", Offset = "0xB0F9E4", VA = "0xB0F9E4", Slot = "47")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000183")]
		private IControllerTemplateButton Rewired.IHOTASTemplate.throttleButton8
		{
			[Token(Token = "0x6000240")]
			[Address(RVA = "0xB0FA34", Offset = "0xB0FA34", VA = "0xB0FA34", Slot = "48")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000184")]
		private IControllerTemplateButton Rewired.IHOTASTemplate.throttleButton9
		{
			[Token(Token = "0x6000241")]
			[Address(RVA = "0xB0FA84", Offset = "0xB0FA84", VA = "0xB0FA84", Slot = "49")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000185")]
		private IControllerTemplateButton Rewired.IHOTASTemplate.throttleButton10
		{
			[Token(Token = "0x6000242")]
			[Address(RVA = "0xB0FAD4", Offset = "0xB0FAD4", VA = "0xB0FAD4", Slot = "50")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000186")]
		private IControllerTemplateButton Rewired.IHOTASTemplate.throttleBaseButton1
		{
			[Token(Token = "0x6000243")]
			[Address(RVA = "0xB0FB24", Offset = "0xB0FB24", VA = "0xB0FB24", Slot = "51")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000187")]
		private IControllerTemplateButton Rewired.IHOTASTemplate.throttleBaseButton2
		{
			[Token(Token = "0x6000244")]
			[Address(RVA = "0xB0FB74", Offset = "0xB0FB74", VA = "0xB0FB74", Slot = "52")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000188")]
		private IControllerTemplateButton Rewired.IHOTASTemplate.throttleBaseButton3
		{
			[Token(Token = "0x6000245")]
			[Address(RVA = "0xB0FBC4", Offset = "0xB0FBC4", VA = "0xB0FBC4", Slot = "53")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000189")]
		private IControllerTemplateButton Rewired.IHOTASTemplate.throttleBaseButton4
		{
			[Token(Token = "0x6000246")]
			[Address(RVA = "0xB0FC14", Offset = "0xB0FC14", VA = "0xB0FC14", Slot = "54")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700018A")]
		private IControllerTemplateButton Rewired.IHOTASTemplate.throttleBaseButton5
		{
			[Token(Token = "0x6000247")]
			[Address(RVA = "0xB0FC64", Offset = "0xB0FC64", VA = "0xB0FC64", Slot = "55")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700018B")]
		private IControllerTemplateButton Rewired.IHOTASTemplate.throttleBaseButton6
		{
			[Token(Token = "0x6000248")]
			[Address(RVA = "0xB0FCB4", Offset = "0xB0FCB4", VA = "0xB0FCB4", Slot = "56")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700018C")]
		private IControllerTemplateButton Rewired.IHOTASTemplate.throttleBaseButton7
		{
			[Token(Token = "0x6000249")]
			[Address(RVA = "0xB0FD04", Offset = "0xB0FD04", VA = "0xB0FD04", Slot = "57")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700018D")]
		private IControllerTemplateButton Rewired.IHOTASTemplate.throttleBaseButton8
		{
			[Token(Token = "0x600024A")]
			[Address(RVA = "0xB0FD54", Offset = "0xB0FD54", VA = "0xB0FD54", Slot = "58")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700018E")]
		private IControllerTemplateButton Rewired.IHOTASTemplate.throttleBaseButton9
		{
			[Token(Token = "0x600024B")]
			[Address(RVA = "0xB0FDA4", Offset = "0xB0FDA4", VA = "0xB0FDA4", Slot = "59")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700018F")]
		private IControllerTemplateButton Rewired.IHOTASTemplate.throttleBaseButton10
		{
			[Token(Token = "0x600024C")]
			[Address(RVA = "0xB0FDF4", Offset = "0xB0FDF4", VA = "0xB0FDF4", Slot = "60")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000190")]
		private IControllerTemplateButton Rewired.IHOTASTemplate.throttleBaseButton11
		{
			[Token(Token = "0x600024D")]
			[Address(RVA = "0xB0FE44", Offset = "0xB0FE44", VA = "0xB0FE44", Slot = "61")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000191")]
		private IControllerTemplateButton Rewired.IHOTASTemplate.throttleBaseButton12
		{
			[Token(Token = "0x600024E")]
			[Address(RVA = "0xB0FE94", Offset = "0xB0FE94", VA = "0xB0FE94", Slot = "62")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000192")]
		private IControllerTemplateButton Rewired.IHOTASTemplate.throttleBaseButton13
		{
			[Token(Token = "0x600024F")]
			[Address(RVA = "0xB0FEE4", Offset = "0xB0FEE4", VA = "0xB0FEE4", Slot = "63")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000193")]
		private IControllerTemplateButton Rewired.IHOTASTemplate.throttleBaseButton14
		{
			[Token(Token = "0x6000250")]
			[Address(RVA = "0xB0FF34", Offset = "0xB0FF34", VA = "0xB0FF34", Slot = "64")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000194")]
		private IControllerTemplateButton Rewired.IHOTASTemplate.throttleBaseButton15
		{
			[Token(Token = "0x6000251")]
			[Address(RVA = "0xB0FF84", Offset = "0xB0FF84", VA = "0xB0FF84", Slot = "65")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000195")]
		private IControllerTemplateAxis Rewired.IHOTASTemplate.throttleSlider1
		{
			[Token(Token = "0x6000252")]
			[Address(RVA = "0xB0FFD4", Offset = "0xB0FFD4", VA = "0xB0FFD4", Slot = "66")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000196")]
		private IControllerTemplateAxis Rewired.IHOTASTemplate.throttleSlider2
		{
			[Token(Token = "0x6000253")]
			[Address(RVA = "0xB10024", Offset = "0xB10024", VA = "0xB10024", Slot = "67")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000197")]
		private IControllerTemplateAxis Rewired.IHOTASTemplate.throttleSlider3
		{
			[Token(Token = "0x6000254")]
			[Address(RVA = "0xB10074", Offset = "0xB10074", VA = "0xB10074", Slot = "68")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000198")]
		private IControllerTemplateAxis Rewired.IHOTASTemplate.throttleSlider4
		{
			[Token(Token = "0x6000255")]
			[Address(RVA = "0xB100C4", Offset = "0xB100C4", VA = "0xB100C4", Slot = "69")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000199")]
		private IControllerTemplateAxis Rewired.IHOTASTemplate.throttleDial1
		{
			[Token(Token = "0x6000256")]
			[Address(RVA = "0xB10114", Offset = "0xB10114", VA = "0xB10114", Slot = "70")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700019A")]
		private IControllerTemplateAxis Rewired.IHOTASTemplate.throttleDial2
		{
			[Token(Token = "0x6000257")]
			[Address(RVA = "0xB10164", Offset = "0xB10164", VA = "0xB10164", Slot = "71")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700019B")]
		private IControllerTemplateAxis Rewired.IHOTASTemplate.throttleDial3
		{
			[Token(Token = "0x6000258")]
			[Address(RVA = "0xB101B4", Offset = "0xB101B4", VA = "0xB101B4", Slot = "72")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700019C")]
		private IControllerTemplateAxis Rewired.IHOTASTemplate.throttleDial4
		{
			[Token(Token = "0x6000259")]
			[Address(RVA = "0xB10204", Offset = "0xB10204", VA = "0xB10204", Slot = "73")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700019D")]
		private IControllerTemplateButton Rewired.IHOTASTemplate.throttleWheel1Forward
		{
			[Token(Token = "0x600025A")]
			[Address(RVA = "0xB10254", Offset = "0xB10254", VA = "0xB10254", Slot = "74")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700019E")]
		private IControllerTemplateButton Rewired.IHOTASTemplate.throttleWheel1Back
		{
			[Token(Token = "0x600025B")]
			[Address(RVA = "0xB102A4", Offset = "0xB102A4", VA = "0xB102A4", Slot = "75")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700019F")]
		private IControllerTemplateButton Rewired.IHOTASTemplate.throttleWheel1Press
		{
			[Token(Token = "0x600025C")]
			[Address(RVA = "0xB102F4", Offset = "0xB102F4", VA = "0xB102F4", Slot = "76")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A0")]
		private IControllerTemplateButton Rewired.IHOTASTemplate.throttleWheel2Forward
		{
			[Token(Token = "0x600025D")]
			[Address(RVA = "0xB10344", Offset = "0xB10344", VA = "0xB10344", Slot = "77")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A1")]
		private IControllerTemplateButton Rewired.IHOTASTemplate.throttleWheel2Back
		{
			[Token(Token = "0x600025E")]
			[Address(RVA = "0xB10394", Offset = "0xB10394", VA = "0xB10394", Slot = "78")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A2")]
		private IControllerTemplateButton Rewired.IHOTASTemplate.throttleWheel2Press
		{
			[Token(Token = "0x600025F")]
			[Address(RVA = "0xB103E4", Offset = "0xB103E4", VA = "0xB103E4", Slot = "79")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A3")]
		private IControllerTemplateButton Rewired.IHOTASTemplate.throttleWheel3Forward
		{
			[Token(Token = "0x6000260")]
			[Address(RVA = "0xB10434", Offset = "0xB10434", VA = "0xB10434", Slot = "80")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A4")]
		private IControllerTemplateButton Rewired.IHOTASTemplate.throttleWheel3Back
		{
			[Token(Token = "0x6000261")]
			[Address(RVA = "0xB10484", Offset = "0xB10484", VA = "0xB10484", Slot = "81")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A5")]
		private IControllerTemplateButton Rewired.IHOTASTemplate.throttleWheel3Press
		{
			[Token(Token = "0x6000262")]
			[Address(RVA = "0xB104D4", Offset = "0xB104D4", VA = "0xB104D4", Slot = "82")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A6")]
		private IControllerTemplateAxis Rewired.IHOTASTemplate.leftPedal
		{
			[Token(Token = "0x6000263")]
			[Address(RVA = "0xB10524", Offset = "0xB10524", VA = "0xB10524", Slot = "83")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A7")]
		private IControllerTemplateAxis Rewired.IHOTASTemplate.rightPedal
		{
			[Token(Token = "0x6000264")]
			[Address(RVA = "0xB10574", Offset = "0xB10574", VA = "0xB10574", Slot = "84")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A8")]
		private IControllerTemplateAxis Rewired.IHOTASTemplate.slidePedals
		{
			[Token(Token = "0x6000265")]
			[Address(RVA = "0xB105C4", Offset = "0xB105C4", VA = "0xB105C4", Slot = "85")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A9")]
		private IControllerTemplateStick Rewired.IHOTASTemplate.stick
		{
			[Token(Token = "0x6000266")]
			[Address(RVA = "0xB10614", Offset = "0xB10614", VA = "0xB10614", Slot = "86")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001AA")]
		private IControllerTemplateThumbStick Rewired.IHOTASTemplate.stickMiniStick1
		{
			[Token(Token = "0x6000267")]
			[Address(RVA = "0xB10664", Offset = "0xB10664", VA = "0xB10664", Slot = "87")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001AB")]
		private IControllerTemplateThumbStick Rewired.IHOTASTemplate.stickMiniStick2
		{
			[Token(Token = "0x6000268")]
			[Address(RVA = "0xB106B4", Offset = "0xB106B4", VA = "0xB106B4", Slot = "88")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001AC")]
		private IControllerTemplateHat Rewired.IHOTASTemplate.stickHat1
		{
			[Token(Token = "0x6000269")]
			[Address(RVA = "0xB10704", Offset = "0xB10704", VA = "0xB10704", Slot = "89")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001AD")]
		private IControllerTemplateHat Rewired.IHOTASTemplate.stickHat2
		{
			[Token(Token = "0x600026A")]
			[Address(RVA = "0xB10754", Offset = "0xB10754", VA = "0xB10754", Slot = "90")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001AE")]
		private IControllerTemplateHat Rewired.IHOTASTemplate.stickHat3
		{
			[Token(Token = "0x600026B")]
			[Address(RVA = "0xB107A4", Offset = "0xB107A4", VA = "0xB107A4", Slot = "91")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001AF")]
		private IControllerTemplateHat Rewired.IHOTASTemplate.stickHat4
		{
			[Token(Token = "0x600026C")]
			[Address(RVA = "0xB107F4", Offset = "0xB107F4", VA = "0xB107F4", Slot = "92")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B0")]
		private IControllerTemplateThrottle Rewired.IHOTASTemplate.throttle1
		{
			[Token(Token = "0x600026D")]
			[Address(RVA = "0xB10844", Offset = "0xB10844", VA = "0xB10844", Slot = "93")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B1")]
		private IControllerTemplateThrottle Rewired.IHOTASTemplate.throttle2
		{
			[Token(Token = "0x600026E")]
			[Address(RVA = "0xB10894", Offset = "0xB10894", VA = "0xB10894", Slot = "94")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B2")]
		private IControllerTemplateThumbStick Rewired.IHOTASTemplate.throttleMiniStick
		{
			[Token(Token = "0x600026F")]
			[Address(RVA = "0xB108E4", Offset = "0xB108E4", VA = "0xB108E4", Slot = "95")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B3")]
		private IControllerTemplateHat Rewired.IHOTASTemplate.throttleHat1
		{
			[Token(Token = "0x6000270")]
			[Address(RVA = "0xB10934", Offset = "0xB10934", VA = "0xB10934", Slot = "96")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B4")]
		private IControllerTemplateHat Rewired.IHOTASTemplate.throttleHat2
		{
			[Token(Token = "0x6000271")]
			[Address(RVA = "0xB10984", Offset = "0xB10984", VA = "0xB10984", Slot = "97")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B5")]
		private IControllerTemplateHat Rewired.IHOTASTemplate.throttleHat3
		{
			[Token(Token = "0x6000272")]
			[Address(RVA = "0xB109D4", Offset = "0xB109D4", VA = "0xB109D4", Slot = "98")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B6")]
		private IControllerTemplateHat Rewired.IHOTASTemplate.throttleHat4
		{
			[Token(Token = "0x6000273")]
			[Address(RVA = "0xB10A24", Offset = "0xB10A24", VA = "0xB10A24", Slot = "99")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000274")]
		[Address(RVA = "0xB10A74", Offset = "0xB10A74", VA = "0xB10A74")]
		public HOTASTemplate(object payload)
		{
		}
	}
	[Token(Token = "0x200003B")]
	public sealed class FlightYokeTemplate : ControllerTemplate, IFlightYokeTemplate, IControllerTemplate
	{
		[Token(Token = "0x40001AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Guid typeGuid;

		[Token(Token = "0x40001AE")]
		public const int elementId_rotateYoke = 0;

		[Token(Token = "0x40001AF")]
		public const int elementId_yokeZ = 1;

		[Token(Token = "0x40001B0")]
		public const int elementId_leftPaddle = 59;

		[Token(Token = "0x40001B1")]
		public const int elementId_rightPaddle = 60;

		[Token(Token = "0x40001B2")]
		public const int elementId_lever1Axis = 2;

		[Token(Token = "0x40001B3")]
		public const int elementId_lever1MinDetent = 64;

		[Token(Token = "0x40001B4")]
		public const int elementId_lever2Axis = 3;

		[Token(Token = "0x40001B5")]
		public const int elementId_lever2MinDetent = 65;

		[Token(Token = "0x40001B6")]
		public const int elementId_lever3Axis = 4;

		[Token(Token = "0x40001B7")]
		public const int elementId_lever3MinDetent = 66;

		[Token(Token = "0x40001B8")]
		public const int elementId_lever4Axis = 5;

		[Token(Token = "0x40001B9")]
		public const int elementId_lever4MinDetent = 67;

		[Token(Token = "0x40001BA")]
		public const int elementId_lever5Axis = 6;

		[Token(Token = "0x40001BB")]
		public const int elementId_lever5MinDetent = 68;

		[Token(Token = "0x40001BC")]
		public const int elementId_leftGripButton1 = 7;

		[Token(Token = "0x40001BD")]
		public const int elementId_leftGripButton2 = 8;

		[Token(Token = "0x40001BE")]
		public const int elementId_leftGripButton3 = 9;

		[Token(Token = "0x40001BF")]
		public const int elementId_leftGripButton4 = 10;

		[Token(Token = "0x40001C0")]
		public const int elementId_leftGripButton5 = 11;

		[Token(Token = "0x40001C1")]
		public const int elementId_leftGripButton6 = 12;

		[Token(Token = "0x40001C2")]
		public const int elementId_rightGripButton1 = 13;

		[Token(Token = "0x40001C3")]
		public const int elementId_rightGripButton2 = 14;

		[Token(Token = "0x40001C4")]
		public const int elementId_rightGripButton3 = 15;

		[Token(Token = "0x40001C5")]
		public const int elementId_rightGripButton4 = 16;

		[Token(Token = "0x40001C6")]
		public const int elementId_rightGripButton5 = 17;

		[Token(Token = "0x40001C7")]
		public const int elementId_rightGripButton6 = 18;

		[Token(Token = "0x40001C8")]
		public const int elementId_centerButton1 = 19;

		[Token(Token = "0x40001C9")]
		public const int elementId_centerButton2 = 20;

		[Token(Token = "0x40001CA")]
		public const int elementId_centerButton3 = 21;

		[Token(Token = "0x40001CB")]
		public const int elementId_centerButton4 = 22;

		[Token(Token = "0x40001CC")]
		public const int elementId_centerButton5 = 23;

		[Token(Token = "0x40001CD")]
		public const int elementId_centerButton6 = 24;

		[Token(Token = "0x40001CE")]
		public const int elementId_centerButton7 = 25;

		[Token(Token = "0x40001CF")]
		public const int elementId_centerButton8 = 26;

		[Token(Token = "0x40001D0")]
		public const int elementId_wheel1Up = 53;

		[Token(Token = "0x40001D1")]
		public const int elementId_wheel1Down = 54;

		[Token(Token = "0x40001D2")]
		public const int elementId_wheel1Press = 55;

		[Token(Token = "0x40001D3")]
		public const int elementId_wheel2Up = 56;

		[Token(Token = "0x40001D4")]
		public const int elementId_wheel2Down = 57;

		[Token(Token = "0x40001D5")]
		public const int elementId_wheel2Press = 58;

		[Token(Token = "0x40001D6")]
		public const int elementId_leftGripHatUp = 27;

		[Token(Token = "0x40001D7")]
		public const int elementId_leftGripHatUpRight = 28;

		[Token(Token = "0x40001D8")]
		public const int elementId_leftGripHatRight = 29;

		[Token(Token = "0x40001D9")]
		public const int elementId_leftGripHatDownRight = 30;

		[Token(Token = "0x40001DA")]
		public const int elementId_leftGripHatDown = 31;

		[Token(Token = "0x40001DB")]
		public const int elementId_leftGripHatDownLeft = 32;

		[Token(Token = "0x40001DC")]
		public const int elementId_leftGripHatLeft = 33;

		[Token(Token = "0x40001DD")]
		public const int elementId_leftGripHatUpLeft = 34;

		[Token(Token = "0x40001DE")]
		public const int elementId_rightGripHatUp = 35;

		[Token(Token = "0x40001DF")]
		public const int elementId_rightGripHatUpRight = 36;

		[Token(Token = "0x40001E0")]
		public const int elementId_rightGripHatRight = 37;

		[Token(Token = "0x40001E1")]
		public const int elementId_rightGripHatDownRight = 38;

		[Token(Token = "0x40001E2")]
		public const int elementId_rightGripHatDown = 39;

		[Token(Token = "0x40001E3")]
		public const int elementId_rightGripHatDownLeft = 40;

		[Token(Token = "0x40001E4")]
		public const int elementId_rightGripHatLeft = 41;

		[Token(Token = "0x40001E5")]
		public const int elementId_rightGripHatUpLeft = 42;

		[Token(Token = "0x40001E6")]
		public const int elementId_consoleButton1 = 43;

		[Token(Token = "0x40001E7")]
		public const int elementId_consoleButton2 = 44;

		[Token(Token = "0x40001E8")]
		public const int elementId_consoleButton3 = 45;

		[Token(Token = "0x40001E9")]
		public const int elementId_consoleButton4 = 46;

		[Token(Token = "0x40001EA")]
		public const int elementId_consoleButton5 = 47;

		[Token(Token = "0x40001EB")]
		public const int elementId_consoleButton6 = 48;

		[Token(Token = "0x40001EC")]
		public const int elementId_consoleButton7 = 49;

		[Token(Token = "0x40001ED")]
		public const int elementId_consoleButton8 = 50;

		[Token(Token = "0x40001EE")]
		public const int elementId_consoleButton9 = 51;

		[Token(Token = "0x40001EF")]
		public const int elementId_consoleButton10 = 52;

		[Token(Token = "0x40001F0")]
		public const int elementId_mode1 = 61;

		[Token(Token = "0x40001F1")]
		public const int elementId_mode2 = 62;

		[Token(Token = "0x40001F2")]
		public const int elementId_mode3 = 63;

		[Token(Token = "0x40001F3")]
		public const int elementId_yoke = 69;

		[Token(Token = "0x40001F4")]
		public const int elementId_lever1 = 70;

		[Token(Token = "0x40001F5")]
		public const int elementId_lever2 = 71;

		[Token(Token = "0x40001F6")]
		public const int elementId_lever3 = 72;

		[Token(Token = "0x40001F7")]
		public const int elementId_lever4 = 73;

		[Token(Token = "0x40001F8")]
		public const int elementId_lever5 = 74;

		[Token(Token = "0x40001F9")]
		public const int elementId_leftGripHat = 75;

		[Token(Token = "0x40001FA")]
		public const int elementId_rightGripHat = 76;

		[Token(Token = "0x170001B7")]
		private IControllerTemplateButton Rewired.IFlightYokeTemplate.leftPaddle
		{
			[Token(Token = "0x6000276")]
			[Address(RVA = "0xE7E084", Offset = "0xE7E084", VA = "0xE7E084", Slot = "12")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B8")]
		private IControllerTemplateButton Rewired.IFlightYokeTemplate.rightPaddle
		{
			[Token(Token = "0x6000277")]
			[Address(RVA = "0xE7E0D4", Offset = "0xE7E0D4", VA = "0xE7E0D4", Slot = "13")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B9")]
		private IControllerTemplateButton Rewired.IFlightYokeTemplate.leftGripButton1
		{
			[Token(Token = "0x6000278")]
			[Address(RVA = "0xE7E124", Offset = "0xE7E124", VA = "0xE7E124", Slot = "14")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001BA")]
		private IControllerTemplateButton Rewired.IFlightYokeTemplate.leftGripButton2
		{
			[Token(Token = "0x6000279")]
			[Address(RVA = "0xE7E174", Offset = "0xE7E174", VA = "0xE7E174", Slot = "15")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001BB")]
		private IControllerTemplateButton Rewired.IFlightYokeTemplate.leftGripButton3
		{
			[Token(Token = "0x600027A")]
			[Address(RVA = "0xE7E1C4", Offset = "0xE7E1C4", VA = "0xE7E1C4", Slot = "16")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001BC")]
		private IControllerTemplateButton Rewired.IFlightYokeTemplate.leftGripButton4
		{
			[Token(Token = "0x600027B")]
			[Address(RVA = "0xE7E214", Offset = "0xE7E214", VA = "0xE7E214", Slot = "17")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001BD")]
		private IControllerTemplateButton Rewired.IFlightYokeTemplate.leftGripButton5
		{
			[Token(Token = "0x600027C")]
			[Address(RVA = "0xE7E264", Offset = "0xE7E264", VA = "0xE7E264", Slot = "18")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001BE")]
		private IControllerTemplateButton Rewired.IFlightYokeTemplate.leftGripButton6
		{
			[Token(Token = "0x600027D")]
			[Address(RVA = "0xE7E2B4", Offset = "0xE7E2B4", VA = "0xE7E2B4", Slot = "19")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001BF")]
		private IControllerTemplateButton Rewired.IFlightYokeTemplate.rightGripButton1
		{
			[Token(Token = "0x600027E")]
			[Address(RVA = "0xE7E304", Offset = "0xE7E304", VA = "0xE7E304", Slot = "20")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C0")]
		private IControllerTemplateButton Rewired.IFlightYokeTemplate.rightGripButton2
		{
			[Token(Token = "0x600027F")]
			[Address(RVA = "0xE7E354", Offset = "0xE7E354", VA = "0xE7E354", Slot = "21")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C1")]
		private IControllerTemplateButton Rewired.IFlightYokeTemplate.rightGripButton3
		{
			[Token(Token = "0x6000280")]
			[Address(RVA = "0xE7E3A4", Offset = "0xE7E3A4", VA = "0xE7E3A4", Slot = "22")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C2")]
		private IControllerTemplateButton Rewired.IFlightYokeTemplate.rightGripButton4
		{
			[Token(Token = "0x6000281")]
			[Address(RVA = "0xE7E3F4", Offset = "0xE7E3F4", VA = "0xE7E3F4", Slot = "23")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C3")]
		private IControllerTemplateButton Rewired.IFlightYokeTemplate.rightGripButton5
		{
			[Token(Token = "0x6000282")]
			[Address(RVA = "0xE7E444", Offset = "0xE7E444", VA = "0xE7E444", Slot = "24")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C4")]
		private IControllerTemplateButton Rewired.IFlightYokeTemplate.rightGripButton6
		{
			[Token(Token = "0x6000283")]
			[Address(RVA = "0xE7E494", Offset = "0xE7E494", VA = "0xE7E494", Slot = "25")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C5")]
		private IControllerTemplateButton Rewired.IFlightYokeTemplate.centerButton1
		{
			[Token(Token = "0x6000284")]
			[Address(RVA = "0xE7E4E4", Offset = "0xE7E4E4", VA = "0xE7E4E4", Slot = "26")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C6")]
		private IControllerTemplateButton Rewired.IFlightYokeTemplate.centerButton2
		{
			[Token(Token = "0x6000285")]
			[Address(RVA = "0xE7E534", Offset = "0xE7E534", VA = "0xE7E534", Slot = "27")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C7")]
		private IControllerTemplateButton Rewired.IFlightYokeTemplate.centerButton3
		{
			[Token(Token = "0x6000286")]
			[Address(RVA = "0xE7E584", Offset = "0xE7E584", VA = "0xE7E584", Slot = "28")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C8")]
		private IControllerTemplateButton Rewired.IFlightYokeTemplate.centerButton4
		{
			[Token(Token = "0x6000287")]
			[Address(RVA = "0xE7E5D4", Offset = "0xE7E5D4", VA = "0xE7E5D4", Slot = "29")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C9")]
		private IControllerTemplateButton Rewired.IFlightYokeTemplate.centerButton5
		{
			[Token(Token = "0x6000288")]
			[Address(RVA = "0xE7E624", Offset = "0xE7E624", VA = "0xE7E624", Slot = "30")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001CA")]
		private IControllerTemplateButton Rewired.IFlightYokeTemplate.centerButton6
		{
			[Token(Token = "0x6000289")]
			[Address(RVA = "0xE7E674", Offset = "0xE7E674", VA = "0xE7E674", Slot = "31")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001CB")]
		private IControllerTemplateButton Rewired.IFlightYokeTemplate.centerButton7
		{
			[Token(Token = "0x600028A")]
			[Address(RVA = "0xE7E6C4", Offset = "0xE7E6C4", VA = "0xE7E6C4", Slot = "32")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001CC")]
		private IControllerTemplateButton Rewired.IFlightYokeTemplate.centerButton8
		{
			[Token(Token = "0x600028B")]
			[Address(RVA = "0xE7E714", Offset = "0xE7E714", VA = "0xE7E714", Slot = "33")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001CD")]
		private IControllerTemplateButton Rewired.IFlightYokeTemplate.wheel1Up
		{
			[Token(Token = "0x600028C")]
			[Address(RVA = "0xE7E764", Offset = "0xE7E764", VA = "0xE7E764", Slot = "34")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001CE")]
		private IControllerTemplateButton Rewired.IFlightYokeTemplate.wheel1Down
		{
			[Token(Token = "0x600028D")]
			[Address(RVA = "0xE7E7B4", Offset = "0xE7E7B4", VA = "0xE7E7B4", Slot = "35")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001CF")]
		private IControllerTemplateButton Rewired.IFlightYokeTemplate.wheel1Press
		{
			[Token(Token = "0x600028E")]
			[Address(RVA = "0xE7E804", Offset = "0xE7E804", VA = "0xE7E804", Slot = "36")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D0")]
		private IControllerTemplateButton Rewired.IFlightYokeTemplate.wheel2Up
		{
			[Token(Token = "0x600028F")]
			[Address(RVA = "0xE7E854", Offset = "0xE7E854", VA = "0xE7E854", Slot = "37")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D1")]
		private IControllerTemplateButton Rewired.IFlightYokeTemplate.wheel2Down
		{
			[Token(Token = "0x6000290")]
			[Address(RVA = "0xE7E8A4", Offset = "0xE7E8A4", VA = "0xE7E8A4", Slot = "38")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D2")]
		private IControllerTemplateButton Rewired.IFlightYokeTemplate.wheel2Press
		{
			[Token(Token = "0x6000291")]
			[Address(RVA = "0xE7E8F4", Offset = "0xE7E8F4", VA = "0xE7E8F4", Slot = "39")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D3")]
		private IControllerTemplateButton Rewired.IFlightYokeTemplate.consoleButton1
		{
			[Token(Token = "0x6000292")]
			[Address(RVA = "0xE7E944", Offset = "0xE7E944", VA = "0xE7E944", Slot = "40")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D4")]
		private IControllerTemplateButton Rewired.IFlightYokeTemplate.consoleButton2
		{
			[Token(Token = "0x6000293")]
			[Address(RVA = "0xE7E994", Offset = "0xE7E994", VA = "0xE7E994", Slot = "41")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D5")]
		private IControllerTemplateButton Rewired.IFlightYokeTemplate.consoleButton3
		{
			[Token(Token = "0x6000294")]
			[Address(RVA = "0xE7E9E4", Offset = "0xE7E9E4", VA = "0xE7E9E4", Slot = "42")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D6")]
		private IControllerTemplateButton Rewired.IFlightYokeTemplate.consoleButton4
		{
			[Token(Token = "0x6000295")]
			[Address(RVA = "0xE7EA34", Offset = "0xE7EA34", VA = "0xE7EA34", Slot = "43")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D7")]
		private IControllerTemplateButton Rewired.IFlightYokeTemplate.consoleButton5
		{
			[Token(Token = "0x6000296")]
			[Address(RVA = "0xE7EA84", Offset = "0xE7EA84", VA = "0xE7EA84", Slot = "44")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D8")]
		private IControllerTemplateButton Rewired.IFlightYokeTemplate.consoleButton6
		{
			[Token(Token = "0x6000297")]
			[Address(RVA = "0xE7EAD4", Offset = "0xE7EAD4", VA = "0xE7EAD4", Slot = "45")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D9")]
		private IControllerTemplateButton Rewired.IFlightYokeTemplate.consoleButton7
		{
			[Token(Token = "0x6000298")]
			[Address(RVA = "0xE7EB24", Offset = "0xE7EB24", VA = "0xE7EB24", Slot = "46")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001DA")]
		private IControllerTemplateButton Rewired.IFlightYokeTemplate.consoleButton8
		{
			[Token(Token = "0x6000299")]
			[Address(RVA = "0xE7EB74", Offset = "0xE7EB74", VA = "0xE7EB74", Slot = "47")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001DB")]
		private IControllerTemplateButton Rewired.IFlightYokeTemplate.consoleButton9
		{
			[Token(Token = "0x600029A")]
			[Address(RVA = "0xE7EBC4", Offset = "0xE7EBC4", VA = "0xE7EBC4", Slot = "48")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001DC")]
		private IControllerTemplateButton Rewired.IFlightYokeTemplate.consoleButton10
		{
			[Token(Token = "0x600029B")]
			[Address(RVA = "0xE7EC14", Offset = "0xE7EC14", VA = "0xE7EC14", Slot = "49")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001DD")]
		private IControllerTemplateButton Rewired.IFlightYokeTemplate.mode1
		{
			[Token(Token = "0x600029C")]
			[Address(RVA = "0xE7EC64", Offset = "0xE7EC64", VA = "0xE7EC64", Slot = "50")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001DE")]
		private IControllerTemplateButton Rewired.IFlightYokeTemplate.mode2
		{
			[Token(Token = "0x600029D")]
			[Address(RVA = "0xE7ECB4", Offset = "0xE7ECB4", VA = "0xE7ECB4", Slot = "51")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001DF")]
		private IControllerTemplateButton Rewired.IFlightYokeTemplate.mode3
		{
			[Token(Token = "0x600029E")]
			[Address(RVA = "0xE7ED04", Offset = "0xE7ED04", VA = "0xE7ED04", Slot = "52")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E0")]
		private IControllerTemplateYoke Rewired.IFlightYokeTemplate.yoke
		{
			[Token(Token = "0x600029F")]
			[Address(RVA = "0xE7ED54", Offset = "0xE7ED54", VA = "0xE7ED54", Slot = "53")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E1")]
		private IControllerTemplateThrottle Rewired.IFlightYokeTemplate.lever1
		{
			[Token(Token = "0x60002A0")]
			[Address(RVA = "0xE7EDA4", Offset = "0xE7EDA4", VA = "0xE7EDA4", Slot = "54")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E2")]
		private IControllerTemplateThrottle Rewired.IFlightYokeTemplate.lever2
		{
			[Token(Token = "0x60002A1")]
			[Address(RVA = "0xE7EDF4", Offset = "0xE7EDF4", VA = "0xE7EDF4", Slot = "55")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E3")]
		private IControllerTemplateThrottle Rewired.IFlightYokeTemplate.lever3
		{
			[Token(Token = "0x60002A2")]
			[Address(RVA = "0xE7EE44", Offset = "0xE7EE44", VA = "0xE7EE44", Slot = "56")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E4")]
		private IControllerTemplateThrottle Rewired.IFlightYokeTemplate.lever4
		{
			[Token(Token = "0x60002A3")]
			[Address(RVA = "0xE7EE94", Offset = "0xE7EE94", VA = "0xE7EE94", Slot = "57")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E5")]
		private IControllerTemplateThrottle Rewired.IFlightYokeTemplate.lever5
		{
			[Token(Token = "0x60002A4")]
			[Address(RVA = "0xE7EEE4", Offset = "0xE7EEE4", VA = "0xE7EEE4", Slot = "58")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E6")]
		private IControllerTemplateHat Rewired.IFlightYokeTemplate.leftGripHat
		{
			[Token(Token = "0x60002A5")]
			[Address(RVA = "0xE7EF34", Offset = "0xE7EF34", VA = "0xE7EF34", Slot = "59")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E7")]
		private IControllerTemplateHat Rewired.IFlightYokeTemplate.rightGripHat
		{
			[Token(Token = "0x60002A6")]
			[Address(RVA = "0xE7EF84", Offset = "0xE7EF84", VA = "0xE7EF84", Slot = "60")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60002A7")]
		[Address(RVA = "0xE7EFD4", Offset = "0xE7EFD4", VA = "0xE7EFD4")]
		public FlightYokeTemplate(object payload)
		{
		}
	}
	[Token(Token = "0x200003C")]
	public sealed class FlightPedalsTemplate : ControllerTemplate, IFlightPedalsTemplate, IControllerTemplate
	{
		[Token(Token = "0x40001FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Guid typeGuid;

		[Token(Token = "0x40001FC")]
		public const int elementId_leftPedal = 0;

		[Token(Token = "0x40001FD")]
		public const int elementId_rightPedal = 1;

		[Token(Token = "0x40001FE")]
		public const int elementId_slide = 2;

		[Token(Token = "0x170001E8")]
		private IControllerTemplateAxis Rewired.IFlightPedalsTemplate.leftPedal
		{
			[Token(Token = "0x60002A9")]
			[Address(RVA = "0xE7DF0C", Offset = "0xE7DF0C", VA = "0xE7DF0C", Slot = "12")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E9")]
		private IControllerTemplateAxis Rewired.IFlightPedalsTemplate.rightPedal
		{
			[Token(Token = "0x60002AA")]
			[Address(RVA = "0xE7DF5C", Offset = "0xE7DF5C", VA = "0xE7DF5C", Slot = "13")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001EA")]
		private IControllerTemplateAxis Rewired.IFlightPedalsTemplate.slide
		{
			[Token(Token = "0x60002AB")]
			[Address(RVA = "0xE7DFAC", Offset = "0xE7DFAC", VA = "0xE7DFAC", Slot = "14")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60002AC")]
		[Address(RVA = "0xE7DFFC", Offset = "0xE7DFFC", VA = "0xE7DFFC")]
		public FlightPedalsTemplate(object payload)
		{
		}
	}
	[Token(Token = "0x200003D")]
	public sealed class SixDofControllerTemplate : ControllerTemplate, ISixDofControllerTemplate, IControllerTemplate
	{
		[Token(Token = "0x40001FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Guid typeGuid;

		[Token(Token = "0x4000200")]
		public const int elementId_positionX = 1;

		[Token(Token = "0x4000201")]
		public const int elementId_positionY = 2;

		[Token(Token = "0x4000202")]
		public const int elementId_positionZ = 0;

		[Token(Token = "0x4000203")]
		public const int elementId_rotationX = 3;

		[Token(Token = "0x4000204")]
		public const int elementId_rotationY = 5;

		[Token(Token = "0x4000205")]
		public const int elementId_rotationZ = 4;

		[Token(Token = "0x4000206")]
		public const int elementId_throttle1Axis = 6;

		[Token(Token = "0x4000207")]
		public const int elementId_throttle1MinDetent = 50;

		[Token(Token = "0x4000208")]
		public const int elementId_throttle2Axis = 7;

		[Token(Token = "0x4000209")]
		public const int elementId_throttle2MinDetent = 51;

		[Token(Token = "0x400020A")]
		public const int elementId_extraAxis1 = 8;

		[Token(Token = "0x400020B")]
		public const int elementId_extraAxis2 = 9;

		[Token(Token = "0x400020C")]
		public const int elementId_extraAxis3 = 10;

		[Token(Token = "0x400020D")]
		public const int elementId_extraAxis4 = 11;

		[Token(Token = "0x400020E")]
		public const int elementId_button1 = 12;

		[Token(Token = "0x400020F")]
		public const int elementId_button2 = 13;

		[Token(Token = "0x4000210")]
		public const int elementId_button3 = 14;

		[Token(Token = "0x4000211")]
		public const int elementId_button4 = 15;

		[Token(Token = "0x4000212")]
		public const int elementId_button5 = 16;

		[Token(Token = "0x4000213")]
		public const int elementId_button6 = 17;

		[Token(Token = "0x4000214")]
		public const int elementId_button7 = 18;

		[Token(Token = "0x4000215")]
		public const int elementId_button8 = 19;

		[Token(Token = "0x4000216")]
		public const int elementId_button9 = 20;

		[Token(Token = "0x4000217")]
		public const int elementId_button10 = 21;

		[Token(Token = "0x4000218")]
		public const int elementId_button11 = 22;

		[Token(Token = "0x4000219")]
		public const int elementId_button12 = 23;

		[Token(Token = "0x400021A")]
		public const int elementId_button13 = 24;

		[Token(Token = "0x400021B")]
		public const int elementId_button14 = 25;

		[Token(Token = "0x400021C")]
		public const int elementId_button15 = 26;

		[Token(Token = "0x400021D")]
		public const int elementId_button16 = 27;

		[Token(Token = "0x400021E")]
		public const int elementId_button17 = 28;

		[Token(Token = "0x400021F")]
		public const int elementId_button18 = 29;

		[Token(Token = "0x4000220")]
		public const int elementId_button19 = 30;

		[Token(Token = "0x4000221")]
		public const int elementId_button20 = 31;

		[Token(Token = "0x4000222")]
		public const int elementId_button21 = 55;

		[Token(Token = "0x4000223")]
		public const int elementId_button22 = 56;

		[Token(Token = "0x4000224")]
		public const int elementId_button23 = 57;

		[Token(Token = "0x4000225")]
		public const int elementId_button24 = 58;

		[Token(Token = "0x4000226")]
		public const int elementId_button25 = 59;

		[Token(Token = "0x4000227")]
		public const int elementId_button26 = 60;

		[Token(Token = "0x4000228")]
		public const int elementId_button27 = 61;

		[Token(Token = "0x4000229")]
		public const int elementId_button28 = 62;

		[Token(Token = "0x400022A")]
		public const int elementId_button29 = 63;

		[Token(Token = "0x400022B")]
		public const int elementId_button30 = 64;

		[Token(Token = "0x400022C")]
		public const int elementId_button31 = 65;

		[Token(Token = "0x400022D")]
		public const int elementId_button32 = 66;

		[Token(Token = "0x400022E")]
		public const int elementId_hat1Up = 32;

		[Token(Token = "0x400022F")]
		public const int elementId_hat1UpRight = 33;

		[Token(Token = "0x4000230")]
		public const int elementId_hat1Right = 34;

		[Token(Token = "0x4000231")]
		public const int elementId_hat1DownRight = 35;

		[Token(Token = "0x4000232")]
		public const int elementId_hat1Down = 36;

		[Token(Token = "0x4000233")]
		public const int elementId_hat1DownLeft = 37;

		[Token(Token = "0x4000234")]
		public const int elementId_hat1Left = 38;

		[Token(Token = "0x4000235")]
		public const int elementId_hat1UpLeft = 39;

		[Token(Token = "0x4000236")]
		public const int elementId_hat2Up = 40;

		[Token(Token = "0x4000237")]
		public const int elementId_hat2UpRight = 41;

		[Token(Token = "0x4000238")]
		public const int elementId_hat2Right = 42;

		[Token(Token = "0x4000239")]
		public const int elementId_hat2DownRight = 43;

		[Token(Token = "0x400023A")]
		public const int elementId_hat2Down = 44;

		[Token(Token = "0x400023B")]
		public const int elementId_hat2DownLeft = 45;

		[Token(Token = "0x400023C")]
		public const int elementId_hat2Left = 46;

		[Token(Token = "0x400023D")]
		public const int elementId_hat2UpLeft = 47;

		[Token(Token = "0x400023E")]
		public const int elementId_hat1 = 48;

		[Token(Token = "0x400023F")]
		public const int elementId_hat2 = 49;

		[Token(Token = "0x4000240")]
		public const int elementId_throttle1 = 52;

		[Token(Token = "0x4000241")]
		public const int elementId_throttle2 = 53;

		[Token(Token = "0x4000242")]
		public const int elementId_stick = 54;

		[Token(Token = "0x170001EB")]
		private IControllerTemplateAxis Rewired.ISixDofControllerTemplate.extraAxis1
		{
			[Token(Token = "0x60002AE")]
			[Address(RVA = "0xAE4B34", Offset = "0xAE4B34", VA = "0xAE4B34", Slot = "12")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001EC")]
		private IControllerTemplateAxis Rewired.ISixDofControllerTemplate.extraAxis2
		{
			[Token(Token = "0x60002AF")]
			[Address(RVA = "0xAE4B84", Offset = "0xAE4B84", VA = "0xAE4B84", Slot = "13")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001ED")]
		private IControllerTemplateAxis Rewired.ISixDofControllerTemplate.extraAxis3
		{
			[Token(Token = "0x60002B0")]
			[Address(RVA = "0xAE4BD4", Offset = "0xAE4BD4", VA = "0xAE4BD4", Slot = "14")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001EE")]
		private IControllerTemplateAxis Rewired.ISixDofControllerTemplate.extraAxis4
		{
			[Token(Token = "0x60002B1")]
			[Address(RVA = "0xAE4C24", Offset = "0xAE4C24", VA = "0xAE4C24", Slot = "15")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001EF")]
		private IControllerTemplateButton Rewired.ISixDofControllerTemplate.button1
		{
			[Token(Token = "0x60002B2")]
			[Address(RVA = "0xAE4C74", Offset = "0xAE4C74", VA = "0xAE4C74", Slot = "16")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F0")]
		private IControllerTemplateButton Rewired.ISixDofControllerTemplate.button2
		{
			[Token(Token = "0x60002B3")]
			[Address(RVA = "0xAE4CC4", Offset = "0xAE4CC4", VA = "0xAE4CC4", Slot = "17")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F1")]
		private IControllerTemplateButton Rewired.ISixDofControllerTemplate.button3
		{
			[Token(Token = "0x60002B4")]
			[Address(RVA = "0xAE4D14", Offset = "0xAE4D14", VA = "0xAE4D14", Slot = "18")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F2")]
		private IControllerTemplateButton Rewired.ISixDofControllerTemplate.button4
		{
			[Token(Token = "0x60002B5")]
			[Address(RVA = "0xAE4D64", Offset = "0xAE4D64", VA = "0xAE4D64", Slot = "19")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F3")]
		private IControllerTemplateButton Rewired.ISixDofControllerTemplate.button5
		{
			[Token(Token = "0x60002B6")]
			[Address(RVA = "0xAE4DB4", Offset = "0xAE4DB4", VA = "0xAE4DB4", Slot = "20")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F4")]
		private IControllerTemplateButton Rewired.ISixDofControllerTemplate.button6
		{
			[Token(Token = "0x60002B7")]
			[Address(RVA = "0xAE4E04", Offset = "0xAE4E04", VA = "0xAE4E04", Slot = "21")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F5")]
		private IControllerTemplateButton Rewired.ISixDofControllerTemplate.button7
		{
			[Token(Token = "0x60002B8")]
			[Address(RVA = "0xAE4E54", Offset = "0xAE4E54", VA = "0xAE4E54", Slot = "22")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F6")]
		private IControllerTemplateButton Rewired.ISixDofControllerTemplate.button8
		{
			[Token(Token = "0x60002B9")]
			[Address(RVA = "0xAE4EA4", Offset = "0xAE4EA4", VA = "0xAE4EA4", Slot = "23")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F7")]
		private IControllerTemplateButton Rewired.ISixDofControllerTemplate.button9
		{
			[Token(Token = "0x60002BA")]
			[Address(RVA = "0xAE4EF4", Offset = "0xAE4EF4", VA = "0xAE4EF4", Slot = "24")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F8")]
		private IControllerTemplateButton Rewired.ISixDofControllerTemplate.button10
		{
			[Token(Token = "0x60002BB")]
			[Address(RVA = "0xAE4F44", Offset = "0xAE4F44", VA = "0xAE4F44", Slot = "25")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F9")]
		private IControllerTemplateButton Rewired.ISixDofControllerTemplate.button11
		{
			[Token(Token = "0x60002BC")]
			[Address(RVA = "0xAE4F94", Offset = "0xAE4F94", VA = "0xAE4F94", Slot = "26")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001FA")]
		private IControllerTemplateButton Rewired.ISixDofControllerTemplate.button12
		{
			[Token(Token = "0x60002BD")]
			[Address(RVA = "0xAE4FE4", Offset = "0xAE4FE4", VA = "0xAE4FE4", Slot = "27")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001FB")]
		private IControllerTemplateButton Rewired.ISixDofControllerTemplate.button13
		{
			[Token(Token = "0x60002BE")]
			[Address(RVA = "0xAE5034", Offset = "0xAE5034", VA = "0xAE5034", Slot = "28")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001FC")]
		private IControllerTemplateButton Rewired.ISixDofControllerTemplate.button14
		{
			[Token(Token = "0x60002BF")]
			[Address(RVA = "0xAE5084", Offset = "0xAE5084", VA = "0xAE5084", Slot = "29")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001FD")]
		private IControllerTemplateButton Rewired.ISixDofControllerTemplate.button15
		{
			[Token(Token = "0x60002C0")]
			[Address(RVA = "0xAE50D4", Offset = "0xAE50D4", VA = "0xAE50D4", Slot = "30")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001FE")]
		private IControllerTemplateButton Rewired.ISixDofControllerTemplate.button16
		{
			[Token(Token = "0x60002C1")]
			[Address(RVA = "0xAE5124", Offset = "0xAE5124", VA = "0xAE5124", Slot = "31")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001FF")]
		private IControllerTemplateButton Rewired.ISixDofControllerTemplate.button17
		{
			[Token(Token = "0x60002C2")]
			[Address(RVA = "0xAE5174", Offset = "0xAE5174", VA = "0xAE5174", Slot = "32")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000200")]
		private IControllerTemplateButton Rewired.ISixDofControllerTemplate.button18
		{
			[Token(Token = "0x60002C3")]
			[Address(RVA = "0xAE51C4", Offset = "0xAE51C4", VA = "0xAE51C4", Slot = "33")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000201")]
		private IControllerTemplateButton Rewired.ISixDofControllerTemplate.button19
		{
			[Token(Token = "0x60002C4")]
			[Address(RVA = "0xAE5214", Offset = "0xAE5214", VA = "0xAE5214", Slot = "34")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000202")]
		private IControllerTemplateButton Rewired.ISixDofControllerTemplate.button20
		{
			[Token(Token = "0x60002C5")]
			[Address(RVA = "0xAE5264", Offset = "0xAE5264", VA = "0xAE5264", Slot = "35")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000203")]
		private IControllerTemplateButton Rewired.ISixDofControllerTemplate.button21
		{
			[Token(Token = "0x60002C6")]
			[Address(RVA = "0xAE52B4", Offset = "0xAE52B4", VA = "0xAE52B4", Slot = "36")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000204")]
		private IControllerTemplateButton Rewired.ISixDofControllerTemplate.button22
		{
			[Token(Token = "0x60002C7")]
			[Address(RVA = "0xAE5304", Offset = "0xAE5304", VA = "0xAE5304", Slot = "37")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000205")]
		private IControllerTemplateButton Rewired.ISixDofControllerTemplate.button23
		{
			[Token(Token = "0x60002C8")]
			[Address(RVA = "0xAE5354", Offset = "0xAE5354", VA = "0xAE5354", Slot = "38")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000206")]
		private IControllerTemplateButton Rewired.ISixDofControllerTemplate.button24
		{
			[Token(Token = "0x60002C9")]
			[Address(RVA = "0xAE53A4", Offset = "0xAE53A4", VA = "0xAE53A4", Slot = "39")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000207")]
		private IControllerTemplateButton Rewired.ISixDofControllerTemplate.button25
		{
			[Token(Token = "0x60002CA")]
			[Address(RVA = "0xAE53F4", Offset = "0xAE53F4", VA = "0xAE53F4", Slot = "40")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000208")]
		private IControllerTemplateButton Rewired.ISixDofControllerTemplate.button26
		{
			[Token(Token = "0x60002CB")]
			[Address(RVA = "0xAE5444", Offset = "0xAE5444", VA = "0xAE5444", Slot = "41")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000209")]
		private IControllerTemplateButton Rewired.ISixDofControllerTemplate.button27
		{
			[Token(Token = "0x60002CC")]
			[Address(RVA = "0xAE5494", Offset = "0xAE5494", VA = "0xAE5494", Slot = "42")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700020A")]
		private IControllerTemplateButton Rewired.ISixDofControllerTemplate.button28
		{
			[Token(Token = "0x60002CD")]
			[Address(RVA = "0xAE54E4", Offset = "0xAE54E4", VA = "0xAE54E4", Slot = "43")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700020B")]
		private IControllerTemplateButton Rewired.ISixDofControllerTemplate.button29
		{
			[Token(Token = "0x60002CE")]
			[Address(RVA = "0xAE5534", Offset = "0xAE5534", VA = "0xAE5534", Slot = "44")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700020C")]
		private IControllerTemplateButton Rewired.ISixDofControllerTemplate.button30
		{
			[Token(Token = "0x60002CF")]
			[Address(RVA = "0xAE5584", Offset = "0xAE5584", VA = "0xAE5584", Slot = "45")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700020D")]
		private IControllerTemplateButton Rewired.ISixDofControllerTemplate.button31
		{
			[Token(Token = "0x60002D0")]
			[Address(RVA = "0xAE55D4", Offset = "0xAE55D4", VA = "0xAE55D4", Slot = "46")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700020E")]
		private IControllerTemplateButton Rewired.ISixDofControllerTemplate.button32
		{
			[Token(Token = "0x60002D1")]
			[Address(RVA = "0xAE5624", Offset = "0xAE5624", VA = "0xAE5624", Slot = "47")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700020F")]
		private IControllerTemplateHat Rewired.ISixDofControllerTemplate.hat1
		{
			[Token(Token = "0x60002D2")]
			[Address(RVA = "0xAE5674", Offset = "0xAE5674", VA = "0xAE5674", Slot = "48")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000210")]
		private IControllerTemplateHat Rewired.ISixDofControllerTemplate.hat2
		{
			[Token(Token = "0x60002D3")]
			[Address(RVA = "0xAE56C4", Offset = "0xAE56C4", VA = "0xAE56C4", Slot = "49")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000211")]
		private IControllerTemplateThrottle Rewired.ISixDofControllerTemplate.throttle1
		{
			[Token(Token = "0x60002D4")]
			[Address(RVA = "0xAE5714", Offset = "0xAE5714", VA = "0xAE5714", Slot = "50")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000212")]
		private IControllerTemplateThrottle Rewired.ISixDofControllerTemplate.throttle2
		{
			[Token(Token = "0x60002D5")]
			[Address(RVA = "0xAE5764", Offset = "0xAE5764", VA = "0xAE5764", Slot = "51")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000213")]
		private IControllerTemplateStick6D Rewired.ISixDofControllerTemplate.stick
		{
			[Token(Token = "0x60002D6")]
			[Address(RVA = "0xAE57B4", Offset = "0xAE57B4", VA = "0xAE57B4", Slot = "52")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60002D7")]
		[Address(RVA = "0xAE5804", Offset = "0xAE5804", VA = "0xAE5804")]
		public SixDofControllerTemplate(object payload)
		{
		}
	}
	[Token(Token = "0x200003E")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x6EF328", Offset = "0x6EF328")]
	[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0x6EF328", Offset = "0x6EF328")]
	public sealed class InputManager : InputManager_Base
	{
		[Token(Token = "0x4000243")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4E")]
		private bool ignoreRecompile;

		[Token(Token = "0x60002D9")]
		[Address(RVA = "0xB19AF4", Offset = "0xB19AF4", VA = "0xB19AF4", Slot = "4")]
		protected override void OnInitialized()
		{
		}

		[Token(Token = "0x60002DA")]
		[Address(RVA = "0xB19BBC", Offset = "0xB19BBC", VA = "0xB19BBC", Slot = "5")]
		protected override void OnDeinitialized()
		{
		}

		[Token(Token = "0x60002DB")]
		[Address(RVA = "0xB19C7C", Offset = "0xB19C7C", VA = "0xB19C7C", Slot = "6")]
		protected override void DetectPlatform()
		{
		}

		[Token(Token = "0x60002DC")]
		[Address(RVA = "0xB19E78", Offset = "0xB19E78", VA = "0xB19E78", Slot = "7")]
		protected override void CheckRecompile()
		{
		}

		[Token(Token = "0x60002DD")]
		[Address(RVA = "0xB19E7C", Offset = "0xB19E7C", VA = "0xB19E7C", Slot = "8")]
		protected override IExternalTools GetExternalTools()
		{
			return null;
		}

		[Token(Token = "0x60002DE")]
		[Address(RVA = "0xB19DB8", Offset = "0xB19DB8", VA = "0xB19DB8")]
		private bool CheckDeviceName(string searchPattern, string deviceName, string deviceModel)
		{
			return default(bool);
		}

		[Token(Token = "0x60002DF")]
		[Address(RVA = "0xB19AF8", Offset = "0xB19AF8", VA = "0xB19AF8")]
		private void SubscribeEvents()
		{
		}

		[Token(Token = "0x60002E0")]
		[Address(RVA = "0xB19BC0", Offset = "0xB19BC0", VA = "0xB19BC0")]
		private void UnsubscribeEvents()
		{
		}

		[Token(Token = "0x60002E1")]
		[Address(RVA = "0xB19ED4", Offset = "0xB19ED4", VA = "0xB19ED4")]
		private void OnSceneLoaded(Scene scene, LoadSceneMode mode)
		{
		}

		[Token(Token = "0x60002E2")]
		[Address(RVA = "0xB19EDC", Offset = "0xB19EDC", VA = "0xB19EDC")]
		public InputManager()
		{
		}
	}
}
namespace Rewired.Platforms.Switch
{
	[Token(Token = "0x200003F")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x6EF378", Offset = "0x6EF378")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x6EF378", Offset = "0x6EF378")]
	public sealed class NintendoSwitchInputManager : MonoBehaviour, IExternalInputManager
	{
		[Serializable]
		[Token(Token = "0x2000040")]
		private class UserData : IKeyedData<int>
		{
			[Token(Token = "0x4000245")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			private int _allowedNpadStyles;

			[Token(Token = "0x4000246")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[SerializeField]
			private int _joyConGripStyle;

			[Token(Token = "0x4000247")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[SerializeField]
			private bool _adjustIMUsForGripStyle;

			[Token(Token = "0x4000248")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[SerializeField]
			private int _handheldActivationMode;

			[Token(Token = "0x4000249")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[SerializeField]
			private bool _assignJoysticksByNpadId;

			[Token(Token = "0x400024A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
			[SerializeField]
			private bool _useVibrationThread;

			[Token(Token = "0x400024B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[SerializeField]
			private NpadSettings_Internal _npadNo1;

			[Token(Token = "0x400024C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[SerializeField]
			private NpadSettings_Internal _npadNo2;

			[Token(Token = "0x400024D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[SerializeField]
			private NpadSettings_Internal _npadNo3;

			[Token(Token = "0x400024E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			[SerializeField]
			private NpadSettings_Internal _npadNo4;

			[Token(Token = "0x400024F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			[SerializeField]
			private NpadSettings_Internal _npadNo5;

			[Token(Token = "0x4000250")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[SerializeField]
			private NpadSettings_Internal _npadNo6;

			[Token(Token = "0x4000251")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			[SerializeField]
			private NpadSettings_Internal _npadNo7;

			[Token(Token = "0x4000252")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			[SerializeField]
			private NpadSettings_Internal _npadNo8;

			[Token(Token = "0x4000253")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			[SerializeField]
			private NpadSettings_Internal _npadHandheld;

			[Token(Token = "0x4000254")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			[SerializeField]
			private DebugPadSettings_Internal _debugPad;

			[Token(Token = "0x4000255")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			private Dictionary<int, object[]> __delegates;

			[Token(Token = "0x17000214")]
			public int allowedNpadStyles
			{
				[Token(Token = "0x60002E6")]
				[Address(RVA = "0x929FF0", Offset = "0x929FF0", VA = "0x929FF0")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x60002E7")]
				[Address(RVA = "0x929FF8", Offset = "0x929FF8", VA = "0x929FF8")]
				set
				{
				}
			}

			[Token(Token = "0x17000215")]
			public int joyConGripStyle
			{
				[Token(Token = "0x60002E8")]
				[Address(RVA = "0x92A000", Offset = "0x92A000", VA = "0x92A000")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x60002E9")]
				[Address(RVA = "0x92A008", Offset = "0x92A008", VA = "0x92A008")]
				set
				{
				}
			}

			[Token(Token = "0x17000216")]
			public bool adjustIMUsForGripStyle
			{
				[Token(Token = "0x60002EA")]
				[Address(RVA = "0x92A010", Offset = "0x92A010", VA = "0x92A010")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x60002EB")]
				[Address(RVA = "0x92A018", Offset = "0x92A018", VA = "0x92A018")]
				set
				{
				}
			}

			[Token(Token = "0x17000217")]
			public int handheldActivationMode
			{
				[Token(Token = "0x60002EC")]
				[Address(RVA = "0x92A024", Offset = "0x92A024", VA = "0x92A024")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x60002ED")]
				[Address(RVA = "0x92A02C", Offset = "0x92A02C", VA = "0x92A02C")]
				set
				{
				}
			}

			[Token(Token = "0x17000218")]
			public bool assignJoysticksByNpadId
			{
				[Token(Token = "0x60002EE")]
				[Address(RVA = "0x92A034", Offset = "0x92A034", VA = "0x92A034")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x60002EF")]
				[Address(RVA = "0x92A03C", Offset = "0x92A03C", VA = "0x92A03C")]
				set
				{
				}
			}

			[Token(Token = "0x17000219")]
			public bool useVibrationThread
			{
				[Token(Token = "0x60002F0")]
				[Address(RVA = "0x92A048", Offset = "0x92A048", VA = "0x92A048")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x60002F1")]
				[Address(RVA = "0x92A050", Offset = "0x92A050", VA = "0x92A050")]
				set
				{
				}
			}

			[Token(Token = "0x1700021A")]
			private NpadSettings_Internal npadNo1
			{
				[Token(Token = "0x60002F2")]
				[Address(RVA = "0x92A05C", Offset = "0x92A05C", VA = "0x92A05C")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700021B")]
			private NpadSettings_Internal npadNo2
			{
				[Token(Token = "0x60002F3")]
				[Address(RVA = "0x92A064", Offset = "0x92A064", VA = "0x92A064")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700021C")]
			private NpadSettings_Internal npadNo3
			{
				[Token(Token = "0x60002F4")]
				[Address(RVA = "0x92A06C", Offset = "0x92A06C", VA = "0x92A06C")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700021D")]
			private NpadSettings_Internal npadNo4
			{
				[Token(Token = "0x60002F5")]
				[Address(RVA = "0x92A074", Offset = "0x92A074", VA = "0x92A074")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700021E")]
			private NpadSettings_Internal npadNo5
			{
				[Token(Token = "0x60002F6")]
				[Address(RVA = "0x92A07C", Offset = "0x92A07C", VA = "0x92A07C")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700021F")]
			private NpadSettings_Internal npadNo6
			{
				[Token(Token = "0x60002F7")]
				[Address(RVA = "0x92A084", Offset = "0x92A084", VA = "0x92A084")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000220")]
			private NpadSettings_Internal npadNo7
			{
				[Token(Token = "0x60002F8")]
				[Address(RVA = "0x92A08C", Offset = "0x92A08C", VA = "0x92A08C")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000221")]
			private NpadSettings_Internal npadNo8
			{
				[Token(Token = "0x60002F9")]
				[Address(RVA = "0x92A094", Offset = "0x92A094", VA = "0x92A094")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000222")]
			private NpadSettings_Internal npadHandheld
			{
				[Token(Token = "0x60002FA")]
				[Address(RVA = "0x92A09C", Offset = "0x92A09C", VA = "0x92A09C")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000223")]
			public DebugPadSettings_Internal debugPad
			{
				[Token(Token = "0x60002FB")]
				[Address(RVA = "0x92A0A4", Offset = "0x92A0A4", VA = "0x92A0A4")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000224")]
			private Dictionary<int, object[]> delegates
			{
				[Token(Token = "0x60002FC")]
				[Address(RVA = "0x92A0AC", Offset = "0x92A0AC", VA = "0x92A0AC")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60002FD")]
			private bool Rewired.Utils.Interfaces.IKeyedData<System.Int32>.TryGetValue<T>(int key, out T value)
			{
				return default(bool);
			}

			[Token(Token = "0x60002FE")]
			private bool Rewired.Utils.Interfaces.IKeyedData<System.Int32>.TrySetValue<T>(int key, T value)
			{
				return default(bool);
			}

			[Token(Token = "0x60002FF")]
			[Address(RVA = "0x92AC98", Offset = "0x92AC98", VA = "0x92AC98")]
			public UserData()
			{
			}

			[Token(Token = "0x6000300")]
			[Address(RVA = "0x92AEA0", Offset = "0x92AEA0", VA = "0x92AEA0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F93A8", Offset = "0x6F93A8")]
			private int <get_delegates>b__56_0()
			{
				return default(int);
			}

			[Token(Token = "0x6000301")]
			[Address(RVA = "0x92AEA8", Offset = "0x92AEA8", VA = "0x92AEA8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F93B8", Offset = "0x6F93B8")]
			private void <get_delegates>b__56_1(int x)
			{
			}

			[Token(Token = "0x6000302")]
			[Address(RVA = "0x92AEB0", Offset = "0x92AEB0", VA = "0x92AEB0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F93C8", Offset = "0x6F93C8")]
			private int <get_delegates>b__56_2()
			{
				return default(int);
			}

			[Token(Token = "0x6000303")]
			[Address(RVA = "0x92AEB8", Offset = "0x92AEB8", VA = "0x92AEB8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F93D8", Offset = "0x6F93D8")]
			private void <get_delegates>b__56_3(int x)
			{
			}

			[Token(Token = "0x6000304")]
			[Address(RVA = "0x92AEC0", Offset = "0x92AEC0", VA = "0x92AEC0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F93E8", Offset = "0x6F93E8")]
			private bool <get_delegates>b__56_4()
			{
				return default(bool);
			}

			[Token(Token = "0x6000305")]
			[Address(RVA = "0x92AEC8", Offset = "0x92AEC8", VA = "0x92AEC8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F93F8", Offset = "0x6F93F8")]
			private void <get_delegates>b__56_5(bool x)
			{
			}

			[Token(Token = "0x6000306")]
			[Address(RVA = "0x92AED4", Offset = "0x92AED4", VA = "0x92AED4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F9408", Offset = "0x6F9408")]
			private int <get_delegates>b__56_6()
			{
				return default(int);
			}

			[Token(Token = "0x6000307")]
			[Address(RVA = "0x92AEDC", Offset = "0x92AEDC", VA = "0x92AEDC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F9418", Offset = "0x6F9418")]
			private void <get_delegates>b__56_7(int x)
			{
			}

			[Token(Token = "0x6000308")]
			[Address(RVA = "0x92AEE4", Offset = "0x92AEE4", VA = "0x92AEE4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F9428", Offset = "0x6F9428")]
			private bool <get_delegates>b__56_8()
			{
				return default(bool);
			}

			[Token(Token = "0x6000309")]
			[Address(RVA = "0x92AEEC", Offset = "0x92AEEC", VA = "0x92AEEC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F9438", Offset = "0x6F9438")]
			private void <get_delegates>b__56_9(bool x)
			{
			}

			[Token(Token = "0x600030A")]
			[Address(RVA = "0x92AEF8", Offset = "0x92AEF8", VA = "0x92AEF8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F9448", Offset = "0x6F9448")]
			private object <get_delegates>b__56_10()
			{
				return null;
			}

			[Token(Token = "0x600030B")]
			[Address(RVA = "0x92AF00", Offset = "0x92AF00", VA = "0x92AF00")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F9458", Offset = "0x6F9458")]
			private object <get_delegates>b__56_11()
			{
				return null;
			}

			[Token(Token = "0x600030C")]
			[Address(RVA = "0x92AF08", Offset = "0x92AF08", VA = "0x92AF08")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F9468", Offset = "0x6F9468")]
			private object <get_delegates>b__56_12()
			{
				return null;
			}

			[Token(Token = "0x600030D")]
			[Address(RVA = "0x92AF10", Offset = "0x92AF10", VA = "0x92AF10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F9478", Offset = "0x6F9478")]
			private object <get_delegates>b__56_13()
			{
				return null;
			}

			[Token(Token = "0x600030E")]
			[Address(RVA = "0x92AF18", Offset = "0x92AF18", VA = "0x92AF18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F9488", Offset = "0x6F9488")]
			private object <get_delegates>b__56_14()
			{
				return null;
			}

			[Token(Token = "0x600030F")]
			[Address(RVA = "0x92AF20", Offset = "0x92AF20", VA = "0x92AF20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F9498", Offset = "0x6F9498")]
			private object <get_delegates>b__56_15()
			{
				return null;
			}

			[Token(Token = "0x6000310")]
			[Address(RVA = "0x92AF28", Offset = "0x92AF28", VA = "0x92AF28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F94A8", Offset = "0x6F94A8")]
			private object <get_delegates>b__56_16()
			{
				return null;
			}

			[Token(Token = "0x6000311")]
			[Address(RVA = "0x92AF30", Offset = "0x92AF30", VA = "0x92AF30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F94B8", Offset = "0x6F94B8")]
			private object <get_delegates>b__56_17()
			{
				return null;
			}

			[Token(Token = "0x6000312")]
			[Address(RVA = "0x92AF38", Offset = "0x92AF38", VA = "0x92AF38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F94C8", Offset = "0x6F94C8")]
			private object <get_delegates>b__56_18()
			{
				return null;
			}

			[Token(Token = "0x6000313")]
			[Address(RVA = "0x92AF40", Offset = "0x92AF40", VA = "0x92AF40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F94D8", Offset = "0x6F94D8")]
			private object <get_delegates>b__56_19()
			{
				return null;
			}

			[Token(Token = "0x6000314")]
			[Address(RVA = "0x92AF48", Offset = "0x92AF48", VA = "0x92AF48")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F94E8", Offset = "0x6F94E8")]
			private bool <get_delegates>b__56_20()
			{
				return default(bool);
			}

			[Token(Token = "0x6000315")]
			[Address(RVA = "0x92AF50", Offset = "0x92AF50", VA = "0x92AF50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F94F8", Offset = "0x6F94F8")]
			private void <get_delegates>b__56_21(bool x)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000041")]
		private sealed class NpadSettings_Internal : IKeyedData<int>
		{
			[Token(Token = "0x4000256")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F1FB4", Offset = "0x6F1FB4")]
			private bool _isAllowed;

			[Token(Token = "0x4000257")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F2000", Offset = "0x6F2000")]
			[SerializeField]
			private int _rewiredPlayerId;

			[Token(Token = "0x4000258")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[SerializeField]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F204C", Offset = "0x6F204C")]
			private int _joyConAssignmentMode;

			[Token(Token = "0x4000259")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private Dictionary<int, object[]> __delegates;

			[Token(Token = "0x17000225")]
			private bool isAllowed
			{
				[Token(Token = "0x6000316")]
				[Address(RVA = "0x929B40", Offset = "0x929B40", VA = "0x929B40")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x6000317")]
				[Address(RVA = "0x929B48", Offset = "0x929B48", VA = "0x929B48")]
				set
				{
				}
			}

			[Token(Token = "0x17000226")]
			private int rewiredPlayerId
			{
				[Token(Token = "0x6000318")]
				[Address(RVA = "0x929B54", Offset = "0x929B54", VA = "0x929B54")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6000319")]
				[Address(RVA = "0x929B5C", Offset = "0x929B5C", VA = "0x929B5C")]
				set
				{
				}
			}

			[Token(Token = "0x17000227")]
			private int joyConAssignmentMode
			{
				[Token(Token = "0x600031A")]
				[Address(RVA = "0x929B64", Offset = "0x929B64", VA = "0x929B64")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x600031B")]
				[Address(RVA = "0x929B6C", Offset = "0x929B6C", VA = "0x929B6C")]
				set
				{
				}
			}

			[Token(Token = "0x17000228")]
			private Dictionary<int, object[]> delegates
			{
				[Token(Token = "0x600031D")]
				[Address(RVA = "0x929BB0", Offset = "0x929BB0", VA = "0x929BB0")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600031C")]
			[Address(RVA = "0x929B74", Offset = "0x929B74", VA = "0x929B74")]
			internal NpadSettings_Internal(int playerId)
			{
			}

			[Token(Token = "0x600031E")]
			private bool Rewired.Utils.Interfaces.IKeyedData<System.Int32>.TryGetValue<T>(int key, out T value)
			{
				return default(bool);
			}

			[Token(Token = "0x600031F")]
			private bool Rewired.Utils.Interfaces.IKeyedData<System.Int32>.TrySetValue<T>(int key, T value)
			{
				return default(bool);
			}

			[Token(Token = "0x6000320")]
			[Address(RVA = "0x929FBC", Offset = "0x929FBC", VA = "0x929FBC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F9508", Offset = "0x6F9508")]
			private bool <get_delegates>b__15_0()
			{
				return default(bool);
			}

			[Token(Token = "0x6000321")]
			[Address(RVA = "0x929FC4", Offset = "0x929FC4", VA = "0x929FC4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F9518", Offset = "0x6F9518")]
			private void <get_delegates>b__15_1(bool x)
			{
			}

			[Token(Token = "0x6000322")]
			[Address(RVA = "0x929FD0", Offset = "0x929FD0", VA = "0x929FD0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F9528", Offset = "0x6F9528")]
			private int <get_delegates>b__15_2()
			{
				return default(int);
			}

			[Token(Token = "0x6000323")]
			[Address(RVA = "0x929FD8", Offset = "0x929FD8", VA = "0x929FD8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F9538", Offset = "0x6F9538")]
			private void <get_delegates>b__15_3(int x)
			{
			}

			[Token(Token = "0x6000324")]
			[Address(RVA = "0x929FE0", Offset = "0x929FE0", VA = "0x929FE0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F9548", Offset = "0x6F9548")]
			private int <get_delegates>b__15_4()
			{
				return default(int);
			}

			[Token(Token = "0x6000325")]
			[Address(RVA = "0x929FE8", Offset = "0x929FE8", VA = "0x929FE8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F9558", Offset = "0x6F9558")]
			private void <get_delegates>b__15_5(int x)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000042")]
		private sealed class DebugPadSettings_Internal : IKeyedData<int>
		{
			[Token(Token = "0x400025A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F2098", Offset = "0x6F2098")]
			private bool _enabled;

			[Token(Token = "0x400025B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[SerializeField]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F20E4", Offset = "0x6F20E4")]
			private int _rewiredPlayerId;

			[Token(Token = "0x400025C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private Dictionary<int, object[]> __delegates;

			[Token(Token = "0x17000229")]
			private int rewiredPlayerId
			{
				[Token(Token = "0x6000326")]
				[Address(RVA = "0x9297A8", Offset = "0x9297A8", VA = "0x9297A8")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6000327")]
				[Address(RVA = "0x9297B0", Offset = "0x9297B0", VA = "0x9297B0")]
				set
				{
				}
			}

			[Token(Token = "0x1700022A")]
			private bool enabled
			{
				[Token(Token = "0x6000328")]
				[Address(RVA = "0x9297B8", Offset = "0x9297B8", VA = "0x9297B8")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x6000329")]
				[Address(RVA = "0x9297C0", Offset = "0x9297C0", VA = "0x9297C0")]
				set
				{
				}
			}

			[Token(Token = "0x1700022B")]
			private Dictionary<int, object[]> delegates
			{
				[Token(Token = "0x600032B")]
				[Address(RVA = "0x9297F8", Offset = "0x9297F8", VA = "0x9297F8")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600032A")]
			[Address(RVA = "0x9297CC", Offset = "0x9297CC", VA = "0x9297CC")]
			internal DebugPadSettings_Internal(int playerId)
			{
			}

			[Token(Token = "0x600032C")]
			private bool Rewired.Utils.Interfaces.IKeyedData<System.Int32>.TryGetValue<T>(int key, out T value)
			{
				return default(bool);
			}

			[Token(Token = "0x600032D")]
			private bool Rewired.Utils.Interfaces.IKeyedData<System.Int32>.TrySetValue<T>(int key, T value)
			{
				return default(bool);
			}

			[Token(Token = "0x600032E")]
			[Address(RVA = "0x929B1C", Offset = "0x929B1C", VA = "0x929B1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F9568", Offset = "0x6F9568")]
			private bool <get_delegates>b__11_0()
			{
				return default(bool);
			}

			[Token(Token = "0x600032F")]
			[Address(RVA = "0x929B24", Offset = "0x929B24", VA = "0x929B24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F9578", Offset = "0x6F9578")]
			private void <get_delegates>b__11_1(bool x)
			{
			}

			[Token(Token = "0x6000330")]
			[Address(RVA = "0x929B30", Offset = "0x929B30", VA = "0x929B30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F9588", Offset = "0x6F9588")]
			private int <get_delegates>b__11_2()
			{
				return default(int);
			}

			[Token(Token = "0x6000331")]
			[Address(RVA = "0x929B38", Offset = "0x929B38", VA = "0x929B38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F9598", Offset = "0x6F9598")]
			private void <get_delegates>b__11_3(int x)
			{
			}
		}

		[Token(Token = "0x4000244")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private UserData _userData;

		[Token(Token = "0x60002E3")]
		[Address(RVA = "0x9EDFC4", Offset = "0x9EDFC4", VA = "0x9EDFC4", Slot = "4")]
		private object Rewired.Utils.Interfaces.IExternalInputManager.Initialize(Platform platform, object configVars)
		{
			return null;
		}

		[Token(Token = "0x60002E4")]
		[Address(RVA = "0x9EDFCC", Offset = "0x9EDFCC", VA = "0x9EDFCC", Slot = "5")]
		private void Rewired.Utils.Interfaces.IExternalInputManager.Deinitialize()
		{
		}

		[Token(Token = "0x60002E5")]
		[Address(RVA = "0x9EDFD0", Offset = "0x9EDFD0", VA = "0x9EDFD0")]
		public NintendoSwitchInputManager()
		{
		}
	}
}
namespace Rewired.Utils
{
	[Token(Token = "0x2000043")]
	[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0x6EF3FC", Offset = "0x6EF3FC")]
	public class ExternalTools : IExternalTools
	{
		[Token(Token = "0x400025D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Func<object> _getPlatformInitializerDelegate;

		[Token(Token = "0x400025E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool _isEditorPaused;

		[Token(Token = "0x400025F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Action<bool> _EditorPausedStateChangedEvent;

		[Token(Token = "0x4000261")]
		private const int API_LEVEL_HONEYCOMB = 9;

		[Token(Token = "0x4000262")]
		private const int API_LEVEL_KITKAT = 19;

		[Token(Token = "0x1700022C")]
		public static Func<object> getPlatformInitializerDelegate
		{
			[Token(Token = "0x6000332")]
			[Address(RVA = "0xE7A6F0", Offset = "0xE7A6F0", VA = "0xE7A6F0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000333")]
			[Address(RVA = "0xE7A73C", Offset = "0xE7A73C", VA = "0xE7A73C")]
			set
			{
			}
		}

		[Token(Token = "0x1700022D")]
		public bool isEditorPaused
		{
			[Token(Token = "0x6000336")]
			[Address(RVA = "0xE7A798", Offset = "0xE7A798", VA = "0xE7A798", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700022E")]
		public bool UnityInput_IsTouchPressureSupported
		{
			[Token(Token = "0x6000382")]
			[Address(RVA = "0xE7B998", Offset = "0xE7B998", VA = "0xE7B998", Slot = "81")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x14000001")]
		public event Action<bool> EditorPausedStateChangedEvent
		{
			[Token(Token = "0x6000337")]
			[Address(RVA = "0xE7A7A0", Offset = "0xE7A7A0", VA = "0xE7A7A0", Slot = "5")]
			add
			{
			}
			[Token(Token = "0x6000338")]
			[Address(RVA = "0xE7A81C", Offset = "0xE7A81C", VA = "0xE7A81C", Slot = "6")]
			remove
			{
			}
		}

		[Token(Token = "0x14000002")]
		public event Action<uint, bool> XboxOneInput_OnGamepadStateChange
		{
			[Token(Token = "0x600033D")]
			[Address(RVA = "0xE7A8FC", Offset = "0xE7A8FC", VA = "0xE7A8FC", Slot = "14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F95A8", Offset = "0x6F95A8")]
			add
			{
			}
			[Token(Token = "0x600033E")]
			[Address(RVA = "0xE7A99C", Offset = "0xE7A99C", VA = "0xE7A99C", Slot = "15")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F95B8", Offset = "0x6F95B8")]
			remove
			{
			}
		}

		[Token(Token = "0x6000334")]
		[Address(RVA = "0xE7A78C", Offset = "0xE7A78C", VA = "0xE7A78C")]
		public ExternalTools()
		{
		}

		[Token(Token = "0x6000335")]
		[Address(RVA = "0xE7A794", Offset = "0xE7A794", VA = "0xE7A794", Slot = "7")]
		public void Destroy()
		{
		}

		[Token(Token = "0x6000339")]
		[Address(RVA = "0xE7A898", Offset = "0xE7A898", VA = "0xE7A898", Slot = "8")]
		public object GetPlatformInitializer()
		{
			return null;
		}

		[Token(Token = "0x600033A")]
		[Address(RVA = "0xE7A8A0", Offset = "0xE7A8A0", VA = "0xE7A8A0", Slot = "9")]
		public string GetFocusedEditorWindowTitle()
		{
			return null;
		}

		[Token(Token = "0x600033B")]
		[Address(RVA = "0xE7A8EC", Offset = "0xE7A8EC", VA = "0xE7A8EC", Slot = "10")]
		public bool IsEditorSceneViewFocused()
		{
			return default(bool);
		}

		[Token(Token = "0x600033C")]
		[Address(RVA = "0xE7A8F4", Offset = "0xE7A8F4", VA = "0xE7A8F4", Slot = "11")]
		public bool LinuxInput_IsJoystickPreconfigured(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x600033F")]
		[Address(RVA = "0xE7AA3C", Offset = "0xE7AA3C", VA = "0xE7AA3C", Slot = "12")]
		public int XboxOneInput_GetUserIdForGamepad(uint id)
		{
			return default(int);
		}

		[Token(Token = "0x6000340")]
		[Address(RVA = "0xE7AA44", Offset = "0xE7AA44", VA = "0xE7AA44", Slot = "13")]
		public ulong XboxOneInput_GetControllerId(uint unityJoystickId)
		{
			return default(ulong);
		}

		[Token(Token = "0x6000341")]
		[Address(RVA = "0xE7AA4C", Offset = "0xE7AA4C", VA = "0xE7AA4C", Slot = "16")]
		public bool XboxOneInput_IsGamepadActive(uint unityJoystickId)
		{
			return default(bool);
		}

		[Token(Token = "0x6000342")]
		[Address(RVA = "0xE7AA54", Offset = "0xE7AA54", VA = "0xE7AA54", Slot = "17")]
		public string XboxOneInput_GetControllerType(ulong xboxControllerId)
		{
			return null;
		}

		[Token(Token = "0x6000343")]
		[Address(RVA = "0xE7AAA0", Offset = "0xE7AAA0", VA = "0xE7AAA0", Slot = "18")]
		public uint XboxOneInput_GetJoystickId(ulong xboxControllerId)
		{
			return default(uint);
		}

		[Token(Token = "0x6000344")]
		[Address(RVA = "0xE7AAA8", Offset = "0xE7AAA8", VA = "0xE7AAA8", Slot = "19")]
		public void XboxOne_Gamepad_UpdatePlugin()
		{
		}

		[Token(Token = "0x6000345")]
		[Address(RVA = "0xE7AAAC", Offset = "0xE7AAAC", VA = "0xE7AAAC", Slot = "20")]
		public bool XboxOne_Gamepad_SetGamepadVibration(ulong xboxOneJoystickId, float leftMotor, float rightMotor, float leftTriggerLevel, float rightTriggerLevel)
		{
			return default(bool);
		}

		[Token(Token = "0x6000346")]
		[Address(RVA = "0xE7AAB4", Offset = "0xE7AAB4", VA = "0xE7AAB4", Slot = "21")]
		public void XboxOne_Gamepad_PulseVibrateMotor(ulong xboxOneJoystickId, int motorInt, float startLevel, float endLevel, ulong durationMS)
		{
		}

		[Token(Token = "0x6000347")]
		[Address(RVA = "0xE7AAB8", Offset = "0xE7AAB8", VA = "0xE7AAB8", Slot = "22")]
		public Vector3 PS4Input_GetLastAcceleration(int id)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000348")]
		[Address(RVA = "0xE7AAC0", Offset = "0xE7AAC0", VA = "0xE7AAC0", Slot = "23")]
		public Vector3 PS4Input_GetLastGyro(int id)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000349")]
		[Address(RVA = "0xE7AAC8", Offset = "0xE7AAC8", VA = "0xE7AAC8", Slot = "24")]
		public Vector4 PS4Input_GetLastOrientation(int id)
		{
			return default(Vector4);
		}

		[Token(Token = "0x600034A")]
		[Address(RVA = "0xE7AAD0", Offset = "0xE7AAD0", VA = "0xE7AAD0", Slot = "25")]
		public void PS4Input_GetLastTouchData(int id, out int touchNum, out int touch0x, out int touch0y, out int touch0id, out int touch1x, out int touch1y, out int touch1id)
		{
		}

		[Token(Token = "0x600034B")]
		[Address(RVA = "0xE7AAF4", Offset = "0xE7AAF4", VA = "0xE7AAF4", Slot = "26")]
		public void PS4Input_GetPadControllerInformation(int id, out float touchpixelDensity, out int touchResolutionX, out int touchResolutionY, out int analogDeadZoneLeft, out int analogDeadZoneright, out int connectionType)
		{
		}

		[Token(Token = "0x600034C")]
		[Address(RVA = "0xE7AB10", Offset = "0xE7AB10", VA = "0xE7AB10", Slot = "27")]
		public void PS4Input_PadSetMotionSensorState(int id, bool bEnable)
		{
		}

		[Token(Token = "0x600034D")]
		[Address(RVA = "0xE7AB14", Offset = "0xE7AB14", VA = "0xE7AB14", Slot = "28")]
		public void PS4Input_PadSetTiltCorrectionState(int id, bool bEnable)
		{
		}

		[Token(Token = "0x600034E")]
		[Address(RVA = "0xE7AB18", Offset = "0xE7AB18", VA = "0xE7AB18", Slot = "29")]
		public void PS4Input_PadSetAngularVelocityDeadbandState(int id, bool bEnable)
		{
		}

		[Token(Token = "0x600034F")]
		[Address(RVA = "0xE7AB1C", Offset = "0xE7AB1C", VA = "0xE7AB1C", Slot = "30")]
		public void PS4Input_PadSetLightBar(int id, int red, int green, int blue)
		{
		}

		[Token(Token = "0x6000350")]
		[Address(RVA = "0xE7AB20", Offset = "0xE7AB20", VA = "0xE7AB20", Slot = "31")]
		public void PS4Input_PadResetLightBar(int id)
		{
		}

		[Token(Token = "0x6000351")]
		[Address(RVA = "0xE7AB24", Offset = "0xE7AB24", VA = "0xE7AB24", Slot = "32")]
		public void PS4Input_PadSetVibration(int id, int largeMotor, int smallMotor)
		{
		}

		[Token(Token = "0x6000352")]
		[Address(RVA = "0xE7AB28", Offset = "0xE7AB28", VA = "0xE7AB28", Slot = "33")]
		public void PS4Input_PadResetOrientation(int id)
		{
		}

		[Token(Token = "0x6000353")]
		[Address(RVA = "0xE7AB2C", Offset = "0xE7AB2C", VA = "0xE7AB2C", Slot = "34")]
		public bool PS4Input_PadIsConnected(int id)
		{
			return default(bool);
		}

		[Token(Token = "0x6000354")]
		[Address(RVA = "0xE7AB34", Offset = "0xE7AB34", VA = "0xE7AB34", Slot = "35")]
		public void PS4Input_GetUsersDetails(int slot, object loggedInUser)
		{
		}

		[Token(Token = "0x6000355")]
		[Address(RVA = "0xE7AB38", Offset = "0xE7AB38", VA = "0xE7AB38", Slot = "36")]
		public int PS4Input_GetDeviceClassForHandle(int handle)
		{
			return default(int);
		}

		[Token(Token = "0x6000356")]
		[Address(RVA = "0xE7AB40", Offset = "0xE7AB40", VA = "0xE7AB40", Slot = "37")]
		public string PS4Input_GetDeviceClassString(int intValue)
		{
			return null;
		}

		[Token(Token = "0x6000357")]
		[Address(RVA = "0xE7AB48", Offset = "0xE7AB48", VA = "0xE7AB48", Slot = "38")]
		public int PS4Input_PadGetUsersHandles2(int maxControllers, int[] handles)
		{
			return default(int);
		}

		[Token(Token = "0x6000358")]
		[Address(RVA = "0xE7AB50", Offset = "0xE7AB50", VA = "0xE7AB50", Slot = "39")]
		public void PS4Input_GetSpecialControllerInformation(int id, int padIndex, object controllerInformation)
		{
		}

		[Token(Token = "0x6000359")]
		[Address(RVA = "0xE7AB54", Offset = "0xE7AB54", VA = "0xE7AB54", Slot = "40")]
		public Vector3 PS4Input_SpecialGetLastAcceleration(int id)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600035A")]
		[Address(RVA = "0xE7AB5C", Offset = "0xE7AB5C", VA = "0xE7AB5C", Slot = "41")]
		public Vector3 PS4Input_SpecialGetLastGyro(int id)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600035B")]
		[Address(RVA = "0xE7AB64", Offset = "0xE7AB64", VA = "0xE7AB64", Slot = "42")]
		public Vector4 PS4Input_SpecialGetLastOrientation(int id)
		{
			return default(Vector4);
		}

		[Token(Token = "0x600035C")]
		[Address(RVA = "0xE7AB6C", Offset = "0xE7AB6C", VA = "0xE7AB6C", Slot = "43")]
		public int PS4Input_SpecialGetUsersHandles(int maxNumberControllers, int[] handles)
		{
			return default(int);
		}

		[Token(Token = "0x600035D")]
		[Address(RVA = "0xE7AB74", Offset = "0xE7AB74", VA = "0xE7AB74", Slot = "44")]
		public int PS4Input_SpecialGetUsersHandles2(int maxNumberControllers, int[] handles)
		{
			return default(int);
		}

		[Token(Token = "0x600035E")]
		[Address(RVA = "0xE7AB7C", Offset = "0xE7AB7C", VA = "0xE7AB7C", Slot = "45")]
		public bool PS4Input_SpecialIsConnected(int id)
		{
			return default(bool);
		}

		[Token(Token = "0x600035F")]
		[Address(RVA = "0xE7AB84", Offset = "0xE7AB84", VA = "0xE7AB84", Slot = "46")]
		public void PS4Input_SpecialResetLightSphere(int id)
		{
		}

		[Token(Token = "0x6000360")]
		[Address(RVA = "0xE7AB88", Offset = "0xE7AB88", VA = "0xE7AB88", Slot = "47")]
		public void PS4Input_SpecialResetOrientation(int id)
		{
		}

		[Token(Token = "0x6000361")]
		[Address(RVA = "0xE7AB8C", Offset = "0xE7AB8C", VA = "0xE7AB8C", Slot = "48")]
		public void PS4Input_SpecialSetAngularVelocityDeadbandState(int id, bool bEnable)
		{
		}

		[Token(Token = "0x6000362")]
		[Address(RVA = "0xE7AB90", Offset = "0xE7AB90", VA = "0xE7AB90", Slot = "49")]
		public void PS4Input_SpecialSetLightSphere(int id, int red, int green, int blue)
		{
		}

		[Token(Token = "0x6000363")]
		[Address(RVA = "0xE7AB94", Offset = "0xE7AB94", VA = "0xE7AB94", Slot = "50")]
		public void PS4Input_SpecialSetMotionSensorState(int id, bool bEnable)
		{
		}

		[Token(Token = "0x6000364")]
		[Address(RVA = "0xE7AB98", Offset = "0xE7AB98", VA = "0xE7AB98", Slot = "51")]
		public void PS4Input_SpecialSetTiltCorrectionState(int id, bool bEnable)
		{
		}

		[Token(Token = "0x6000365")]
		[Address(RVA = "0xE7AB9C", Offset = "0xE7AB9C", VA = "0xE7AB9C", Slot = "52")]
		public void PS4Input_SpecialSetVibration(int id, int largeMotor, int smallMotor)
		{
		}

		[Token(Token = "0x6000366")]
		[Address(RVA = "0xE7ABA0", Offset = "0xE7ABA0", VA = "0xE7ABA0", Slot = "53")]
		public Vector3 PS4Input_AimGetLastAcceleration(int id)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000367")]
		[Address(RVA = "0xE7ABA8", Offset = "0xE7ABA8", VA = "0xE7ABA8", Slot = "54")]
		public Vector3 PS4Input_AimGetLastGyro(int id)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000368")]
		[Address(RVA = "0xE7ABB0", Offset = "0xE7ABB0", VA = "0xE7ABB0", Slot = "55")]
		public Vector4 PS4Input_AimGetLastOrientation(int id)
		{
			return default(Vector4);
		}

		[Token(Token = "0x6000369")]
		[Address(RVA = "0xE7ABB8", Offset = "0xE7ABB8", VA = "0xE7ABB8", Slot = "56")]
		public int PS4Input_AimGetUsersHandles(int maxNumberControllers, int[] handles)
		{
			return default(int);
		}

		[Token(Token = "0x600036A")]
		[Address(RVA = "0xE7ABC0", Offset = "0xE7ABC0", VA = "0xE7ABC0", Slot = "57")]
		public int PS4Input_AimGetUsersHandles2(int maxNumberControllers, int[] handles)
		{
			return default(int);
		}

		[Token(Token = "0x600036B")]
		[Address(RVA = "0xE7ABC8", Offset = "0xE7ABC8", VA = "0xE7ABC8", Slot = "58")]
		public bool PS4Input_AimIsConnected(int id)
		{
			return default(bool);
		}

		[Token(Token = "0x600036C")]
		[Address(RVA = "0xE7ABD0", Offset = "0xE7ABD0", VA = "0xE7ABD0", Slot = "59")]
		public void PS4Input_AimResetLightSphere(int id)
		{
		}

		[Token(Token = "0x600036D")]
		[Address(RVA = "0xE7ABD4", Offset = "0xE7ABD4", VA = "0xE7ABD4", Slot = "60")]
		public void PS4Input_AimResetOrientation(int id)
		{
		}

		[Token(Token = "0x600036E")]
		[Address(RVA = "0xE7ABD8", Offset = "0xE7ABD8", VA = "0xE7ABD8", Slot = "61")]
		public void PS4Input_AimSetAngularVelocityDeadbandState(int id, bool bEnable)
		{
		}

		[Token(Token = "0x600036F")]
		[Address(RVA = "0xE7ABDC", Offset = "0xE7ABDC", VA = "0xE7ABDC", Slot = "62")]
		public void PS4Input_AimSetLightSphere(int id, int red, int green, int blue)
		{
		}

		[Token(Token = "0x6000370")]
		[Address(RVA = "0xE7ABE0", Offset = "0xE7ABE0", VA = "0xE7ABE0", Slot = "63")]
		public void PS4Input_AimSetMotionSensorState(int id, bool bEnable)
		{
		}

		[Token(Token = "0x6000371")]
		[Address(RVA = "0xE7ABE4", Offset = "0xE7ABE4", VA = "0xE7ABE4", Slot = "64")]
		public void PS4Input_AimSetTiltCorrectionState(int id, bool bEnable)
		{
		}

		[Token(Token = "0x6000372")]
		[Address(RVA = "0xE7ABE8", Offset = "0xE7ABE8", VA = "0xE7ABE8", Slot = "65")]
		public void PS4Input_AimSetVibration(int id, int largeMotor, int smallMotor)
		{
		}

		[Token(Token = "0x6000373")]
		[Address(RVA = "0xE7ABEC", Offset = "0xE7ABEC", VA = "0xE7ABEC", Slot = "66")]
		public Vector3 PS4Input_GetLastMoveAcceleration(int id, int index)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000374")]
		[Address(RVA = "0xE7ABF4", Offset = "0xE7ABF4", VA = "0xE7ABF4", Slot = "67")]
		public Vector3 PS4Input_GetLastMoveGyro(int id, int index)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000375")]
		[Address(RVA = "0xE7ABFC", Offset = "0xE7ABFC", VA = "0xE7ABFC", Slot = "68")]
		public int PS4Input_MoveGetButtons(int id, int index)
		{
			return default(int);
		}

		[Token(Token = "0x6000376")]
		[Address(RVA = "0xE7AC04", Offset = "0xE7AC04", VA = "0xE7AC04", Slot = "69")]
		public int PS4Input_MoveGetAnalogButton(int id, int index)
		{
			return default(int);
		}

		[Token(Token = "0x6000377")]
		[Address(RVA = "0xE7AC0C", Offset = "0xE7AC0C", VA = "0xE7AC0C", Slot = "70")]
		public bool PS4Input_MoveIsConnected(int id, int index)
		{
			return default(bool);
		}

		[Token(Token = "0x6000378")]
		[Address(RVA = "0xE7AC14", Offset = "0xE7AC14", VA = "0xE7AC14", Slot = "71")]
		public int PS4Input_MoveGetUsersMoveHandles(int maxNumberControllers, int[] primaryHandles, int[] secondaryHandles)
		{
			return default(int);
		}

		[Token(Token = "0x6000379")]
		[Address(RVA = "0xE7AC1C", Offset = "0xE7AC1C", VA = "0xE7AC1C", Slot = "72")]
		public int PS4Input_MoveGetUsersMoveHandles(int maxNumberControllers, int[] primaryHandles)
		{
			return default(int);
		}

		[Token(Token = "0x600037A")]
		[Address(RVA = "0xE7AC24", Offset = "0xE7AC24", VA = "0xE7AC24", Slot = "73")]
		public int PS4Input_MoveGetUsersMoveHandles(int maxNumberControllers)
		{
			return default(int);
		}

		[Token(Token = "0x600037B")]
		[Address(RVA = "0xE7AC2C", Offset = "0xE7AC2C", VA = "0xE7AC2C", Slot = "74")]
		public IntPtr PS4Input_MoveGetControllerInputForTracking()
		{
			return default(IntPtr);
		}

		[Token(Token = "0x600037C")]
		[Address(RVA = "0xE7AC68", Offset = "0xE7AC68", VA = "0xE7AC68", Slot = "75")]
		public int PS4Input_MoveSetLightSphere(int id, int index, int red, int green, int blue)
		{
			return default(int);
		}

		[Token(Token = "0x600037D")]
		[Address(RVA = "0xE7AC70", Offset = "0xE7AC70", VA = "0xE7AC70", Slot = "76")]
		public int PS4Input_MoveSetVibration(int id, int index, int motor)
		{
			return default(int);
		}

		[Token(Token = "0x600037E")]
		[Address(RVA = "0xE7AC78", Offset = "0xE7AC78", VA = "0xE7AC78", Slot = "77")]
		public void GetDeviceVIDPIDs(out List<int> vids, out List<int> pids)
		{
		}

		[Token(Token = "0x600037F")]
		[Address(RVA = "0xE7B54C", Offset = "0xE7B54C", VA = "0xE7B54C", Slot = "78")]
		public int GetAndroidAPILevel()
		{
			return default(int);
		}

		[Token(Token = "0x6000380")]
		[Address(RVA = "0xE7B778", Offset = "0xE7B778", VA = "0xE7B778", Slot = "79")]
		public bool UnityUI_Graphic_GetRaycastTarget(object graphic)
		{
			return default(bool);
		}

		[Token(Token = "0x6000381")]
		[Address(RVA = "0xE7B880", Offset = "0xE7B880", VA = "0xE7B880", Slot = "80")]
		public void UnityUI_Graphic_SetRaycastTarget(object graphic, bool value)
		{
		}

		[Token(Token = "0x6000383")]
		[Address(RVA = "0xE7B9A0", Offset = "0xE7B9A0", VA = "0xE7B9A0", Slot = "82")]
		public float UnityInput_GetTouchPressure(ref Touch touch)
		{
			return default(float);
		}

		[Token(Token = "0x6000384")]
		[Address(RVA = "0xE7B9AC", Offset = "0xE7B9AC", VA = "0xE7B9AC", Slot = "83")]
		public float UnityInput_GetTouchMaximumPossiblePressure(ref Touch touch)
		{
			return default(float);
		}

		[Token(Token = "0x6000385")]
		[Address(RVA = "0xE7B9B8", Offset = "0xE7B9B8", VA = "0xE7B9B8", Slot = "84")]
		public IControllerTemplate CreateControllerTemplate(Guid typeGuid, object payload)
		{
			return null;
		}

		[Token(Token = "0x6000386")]
		[Address(RVA = "0xE7BA34", Offset = "0xE7BA34", VA = "0xE7BA34", Slot = "85")]
		public Type[] GetControllerTemplateTypes()
		{
			return null;
		}

		[Token(Token = "0x6000387")]
		[Address(RVA = "0xE7BAD0", Offset = "0xE7BAD0", VA = "0xE7BAD0", Slot = "86")]
		public Type[] GetControllerTemplateInterfaceTypes()
		{
			return null;
		}
	}
}
namespace Rewired.Data
{
	[Token(Token = "0x2000044")]
	public class UserDataStore_PlayerPrefs : UserDataStore
	{
		[Token(Token = "0x2000045")]
		private class ControllerAssignmentSaveInfo
		{
			[Token(Token = "0x2000046")]
			public class PlayerInfo
			{
				[Token(Token = "0x4000278")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public int id;

				[Token(Token = "0x4000279")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
				public bool hasKeyboard;

				[Token(Token = "0x400027A")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
				public bool hasMouse;

				[Token(Token = "0x400027B")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				public JoystickInfo[] joysticks;

				[Token(Token = "0x1700023A")]
				public int joystickCount
				{
					[Token(Token = "0x60003E2")]
					[Address(RVA = "0x1084350", Offset = "0x1084350", VA = "0x1084350")]
					get
					{
						return default(int);
					}
				}

				[Token(Token = "0x60003E3")]
				[Address(RVA = "0x1084368", Offset = "0x1084368", VA = "0x1084368")]
				public int IndexOfJoystick(int joystickId)
				{
					return default(int);
				}

				[Token(Token = "0x60003E4")]
				[Address(RVA = "0x10843E0", Offset = "0x10843E0", VA = "0x10843E0")]
				public bool ContainsJoystick(int joystickId)
				{
					return default(bool);
				}

				[Token(Token = "0x60003E5")]
				[Address(RVA = "0x10802A0", Offset = "0x10802A0", VA = "0x10802A0")]
				public PlayerInfo()
				{
				}
			}

			[Token(Token = "0x2000047")]
			public class JoystickInfo
			{
				[Token(Token = "0x400027C")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public Guid instanceGuid;

				[Token(Token = "0x400027D")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				public string hardwareIdentifier;

				[Token(Token = "0x400027E")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
				public int id;

				[Token(Token = "0x60003E6")]
				[Address(RVA = "0x1084348", Offset = "0x1084348", VA = "0x1084348")]
				public JoystickInfo()
				{
				}
			}

			[Token(Token = "0x4000277")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public PlayerInfo[] players;

			[Token(Token = "0x17000239")]
			public int playerCount
			{
				[Token(Token = "0x60003DD")]
				[Address(RVA = "0x108015C", Offset = "0x108015C", VA = "0x108015C")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x60003DE")]
			[Address(RVA = "0x1080174", Offset = "0x1080174", VA = "0x1080174")]
			public ControllerAssignmentSaveInfo()
			{
			}

			[Token(Token = "0x60003DF")]
			[Address(RVA = "0x108017C", Offset = "0x108017C", VA = "0x108017C")]
			public ControllerAssignmentSaveInfo(int playerCount)
			{
			}

			[Token(Token = "0x60003E0")]
			[Address(RVA = "0x10802A8", Offset = "0x10802A8", VA = "0x10802A8")]
			public int IndexOfPlayer(int playerId)
			{
				return default(int);
			}

			[Token(Token = "0x60003E1")]
			[Address(RVA = "0x1080320", Offset = "0x1080320", VA = "0x1080320")]
			public bool ContainsPlayer(int playerId)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000048")]
		private class JoystickAssignmentHistoryInfo
		{
			[Token(Token = "0x400027F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public readonly Joystick joystick;

			[Token(Token = "0x4000280")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public readonly int oldJoystickId;

			[Token(Token = "0x60003E7")]
			[Address(RVA = "0x108033C", Offset = "0x108033C", VA = "0x108033C")]
			public JoystickAssignmentHistoryInfo(Joystick joystick, int oldJoystickId)
			{
			}
		}

		[Token(Token = "0x2000049")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EF410", Offset = "0x6EF410")]
		private sealed class <>c__DisplayClass78_0
		{
			[Token(Token = "0x4000281")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Joystick joystick;

			[Token(Token = "0x60003E8")]
			[Address(RVA = "0x107FF04", Offset = "0x107FF04", VA = "0x107FF04")]
			public <>c__DisplayClass78_0()
			{
			}

			[Token(Token = "0x60003E9")]
			[Address(RVA = "0x107FF0C", Offset = "0x107FF0C", VA = "0x107FF0C")]
			internal bool <LoadJoystickAssignmentsNow>b__0(JoystickAssignmentHistoryInfo x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x200004A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EF420", Offset = "0x6EF420")]
		private sealed class <>c__DisplayClass78_1
		{
			[Token(Token = "0x4000282")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ControllerAssignmentSaveInfo.JoystickInfo joystickInfo;

			[Token(Token = "0x60003EA")]
			[Address(RVA = "0x107FF30", Offset = "0x107FF30", VA = "0x107FF30")]
			public <>c__DisplayClass78_1()
			{
			}

			[Token(Token = "0x60003EB")]
			[Address(RVA = "0x107FF38", Offset = "0x107FF38", VA = "0x107FF38")]
			internal bool <LoadJoystickAssignmentsNow>b__1(JoystickAssignmentHistoryInfo x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x200004B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EF430", Offset = "0x6EF430")]
		private sealed class <>c__DisplayClass78_2
		{
			[Token(Token = "0x4000283")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Joystick match;

			[Token(Token = "0x60003EC")]
			[Address(RVA = "0x107FF68", Offset = "0x107FF68", VA = "0x107FF68")]
			public <>c__DisplayClass78_2()
			{
			}

			[Token(Token = "0x60003ED")]
			[Address(RVA = "0x107FF70", Offset = "0x107FF70", VA = "0x107FF70")]
			internal bool <LoadJoystickAssignmentsNow>b__2(JoystickAssignmentHistoryInfo x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x200004C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EF440", Offset = "0x6EF440")]
		private sealed class <LoadJoystickAssignmentsDeferred>d__80 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000284")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000285")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000286")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UserDataStore_PlayerPrefs <>4__this;

			[Token(Token = "0x1700023B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60003F1")]
				[Address(RVA = "0x108010C", Offset = "0x108010C", VA = "0x108010C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700023C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60003F3")]
				[Address(RVA = "0x1080154", Offset = "0x1080154", VA = "0x1080154", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60003EE")]
			[Address(RVA = "0x107FF94", Offset = "0x107FF94", VA = "0x107FF94")]
			[DebuggerHidden]
			public <LoadJoystickAssignmentsDeferred>d__80(int <>1__state)
			{
			}

			[Token(Token = "0x60003EF")]
			[Address(RVA = "0x107FFC0", Offset = "0x107FFC0", VA = "0x107FFC0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60003F0")]
			[Address(RVA = "0x107FFC4", Offset = "0x107FFC4", VA = "0x107FFC4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60003F2")]
			[Address(RVA = "0x1080114", Offset = "0x1080114", VA = "0x1080114", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000263")]
		private const string thisScriptName = "UserDataStore_PlayerPrefs";

		[Token(Token = "0x4000264")]
		private const string logPrefix = "Rewired: ";

		[Token(Token = "0x4000265")]
		private const string editorLoadedMessage = "\n***IMPORTANT:*** Changes made to the Rewired Input Manager configuration after the last time XML data was saved WILL NOT be used because the loaded old saved data has overwritten these values. If you change something in the Rewired Input Manager such as a Joystick Map or Input Behavior settings, you will not see these changes reflected in the current configuration. Clear PlayerPrefs using the inspector option on the UserDataStore_PlayerPrefs component.";

		[Token(Token = "0x4000266")]
		private const string playerPrefsKeySuffix_controllerAssignments = "ControllerAssignments";

		[Token(Token = "0x4000267")]
		private const int controllerMapPPKeyVersion_original = 0;

		[Token(Token = "0x4000268")]
		private const int controllerMapPPKeyVersion_includeDuplicateJoystickIndex = 1;

		[Token(Token = "0x4000269")]
		private const int controllerMapPPKeyVersion_supportDisconnectedControllers = 2;

		[Token(Token = "0x400026A")]
		private const int controllerMapPPKeyVersion_includeFormatVersion = 2;

		[Token(Token = "0x400026B")]
		private const int controllerMapPPKeyVersion = 2;

		[Token(Token = "0x400026C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F2140", Offset = "0x6F2140")]
		private bool isEnabled;

		[Token(Token = "0x400026D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F218C", Offset = "0x6F218C")]
		[SerializeField]
		private bool loadDataOnStart;

		[Token(Token = "0x400026E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F21D8", Offset = "0x6F21D8")]
		[SerializeField]
		private bool loadJoystickAssignments;

		[Token(Token = "0x400026F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F2224", Offset = "0x6F2224")]
		[SerializeField]
		private bool loadKeyboardAssignments;

		[Token(Token = "0x4000270")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F2270", Offset = "0x6F2270")]
		[SerializeField]
		private bool loadMouseAssignments;

		[Token(Token = "0x4000271")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F22BC", Offset = "0x6F22BC")]
		private string playerPrefsKeyPrefix;

		[NonSerialized]
		[Token(Token = "0x4000272")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool allowImpreciseJoystickAssignmentMatching;

		[NonSerialized]
		[Token(Token = "0x4000273")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		private bool deferredJoystickAssignmentLoadPending;

		[NonSerialized]
		[Token(Token = "0x4000274")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		private bool wasJoystickEverDetected;

		[NonSerialized]
		[Token(Token = "0x4000275")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<int> __allActionIds;

		[NonSerialized]
		[Token(Token = "0x4000276")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string __allActionIdsString;

		[Token(Token = "0x1700022F")]
		public bool IsEnabled
		{
			[Token(Token = "0x6000388")]
			[Address(RVA = "0x1BD5174", Offset = "0x1BD5174", VA = "0x1BD5174")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000389")]
			[Address(RVA = "0x1BD517C", Offset = "0x1BD517C", VA = "0x1BD517C")]
			set
			{
			}
		}

		[Token(Token = "0x17000230")]
		public bool LoadDataOnStart
		{
			[Token(Token = "0x600038A")]
			[Address(RVA = "0x1BD5188", Offset = "0x1BD5188", VA = "0x1BD5188")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600038B")]
			[Address(RVA = "0x1BD5190", Offset = "0x1BD5190", VA = "0x1BD5190")]
			set
			{
			}
		}

		[Token(Token = "0x17000231")]
		public bool LoadJoystickAssignments
		{
			[Token(Token = "0x600038C")]
			[Address(RVA = "0x1BD519C", Offset = "0x1BD519C", VA = "0x1BD519C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600038D")]
			[Address(RVA = "0x1BD51A4", Offset = "0x1BD51A4", VA = "0x1BD51A4")]
			set
			{
			}
		}

		[Token(Token = "0x17000232")]
		public bool LoadKeyboardAssignments
		{
			[Token(Token = "0x600038E")]
			[Address(RVA = "0x1BD51B0", Offset = "0x1BD51B0", VA = "0x1BD51B0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600038F")]
			[Address(RVA = "0x1BD51B8", Offset = "0x1BD51B8", VA = "0x1BD51B8")]
			set
			{
			}
		}

		[Token(Token = "0x17000233")]
		public bool LoadMouseAssignments
		{
			[Token(Token = "0x6000390")]
			[Address(RVA = "0x1BD51C4", Offset = "0x1BD51C4", VA = "0x1BD51C4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000391")]
			[Address(RVA = "0x1BD51CC", Offset = "0x1BD51CC", VA = "0x1BD51CC")]
			set
			{
			}
		}

		[Token(Token = "0x17000234")]
		public string PlayerPrefsKeyPrefix
		{
			[Token(Token = "0x6000392")]
			[Address(RVA = "0x1BD51D8", Offset = "0x1BD51D8", VA = "0x1BD51D8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000393")]
			[Address(RVA = "0x1BD51E0", Offset = "0x1BD51E0", VA = "0x1BD51E0")]
			set
			{
			}
		}

		[Token(Token = "0x17000235")]
		private string playerPrefsKey_controllerAssignments
		{
			[Token(Token = "0x6000394")]
			[Address(RVA = "0x1BD51E8", Offset = "0x1BD51E8", VA = "0x1BD51E8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000236")]
		private bool loadControllerAssignments
		{
			[Token(Token = "0x6000395")]
			[Address(RVA = "0x1BD5250", Offset = "0x1BD5250", VA = "0x1BD5250")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000237")]
		private List<int> allActionIds
		{
			[Token(Token = "0x6000396")]
			[Address(RVA = "0x1BD5278", Offset = "0x1BD5278", VA = "0x1BD5278")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000238")]
		private string allActionIdsString
		{
			[Token(Token = "0x6000397")]
			[Address(RVA = "0x1BD5484", Offset = "0x1BD5484", VA = "0x1BD5484")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000398")]
		[Address(RVA = "0x1BD55C4", Offset = "0x1BD55C4", VA = "0x1BD55C4", Slot = "21")]
		public override void Save()
		{
		}

		[Token(Token = "0x6000399")]
		[Address(RVA = "0x1BD581C", Offset = "0x1BD581C", VA = "0x1BD581C", Slot = "22")]
		public override void SaveControllerData(int playerId, ControllerType controllerType, int controllerId)
		{
		}

		[Token(Token = "0x600039A")]
		[Address(RVA = "0x1BD5930", Offset = "0x1BD5930", VA = "0x1BD5930", Slot = "23")]
		public override void SaveControllerData(ControllerType controllerType, int controllerId)
		{
		}

		[Token(Token = "0x600039B")]
		[Address(RVA = "0x1BD5A10", Offset = "0x1BD5A10", VA = "0x1BD5A10", Slot = "24")]
		public override void SavePlayerData(int playerId)
		{
		}

		[Token(Token = "0x600039C")]
		[Address(RVA = "0x1BD5B4C", Offset = "0x1BD5B4C", VA = "0x1BD5B4C", Slot = "25")]
		public override void SaveInputBehavior(int playerId, int behaviorId)
		{
		}

		[Token(Token = "0x600039D")]
		[Address(RVA = "0x1BD5CF4", Offset = "0x1BD5CF4", VA = "0x1BD5CF4", Slot = "16")]
		public override void Load()
		{
		}

		[Token(Token = "0x600039E")]
		[Address(RVA = "0x1BD5F5C", Offset = "0x1BD5F5C", VA = "0x1BD5F5C", Slot = "17")]
		public override void LoadControllerData(int playerId, ControllerType controllerType, int controllerId)
		{
		}

		[Token(Token = "0x600039F")]
		[Address(RVA = "0x1BD6088", Offset = "0x1BD6088", VA = "0x1BD6088", Slot = "18")]
		public override void LoadControllerData(ControllerType controllerType, int controllerId)
		{
		}

		[Token(Token = "0x60003A0")]
		[Address(RVA = "0x1BD6164", Offset = "0x1BD6164", VA = "0x1BD6164", Slot = "19")]
		public override void LoadPlayerData(int playerId)
		{
		}

		[Token(Token = "0x60003A1")]
		[Address(RVA = "0x1BD6298", Offset = "0x1BD6298", VA = "0x1BD6298", Slot = "20")]
		public override void LoadInputBehavior(int playerId, int behaviorId)
		{
		}

		[Token(Token = "0x60003A2")]
		[Address(RVA = "0x1BD643C", Offset = "0x1BD643C", VA = "0x1BD643C", Slot = "28")]
		protected override void OnInitialize()
		{
		}

		[Token(Token = "0x60003A3")]
		[Address(RVA = "0x1BD6AA8", Offset = "0x1BD6AA8", VA = "0x1BD6AA8", Slot = "29")]
		protected override void OnControllerConnected(ControllerStatusChangedEventArgs args)
		{
		}

		[Token(Token = "0x60003A4")]
		[Address(RVA = "0x1BD6DAC", Offset = "0x1BD6DAC", VA = "0x1BD6DAC", Slot = "32")]
		protected override void OnControllerPreDisconnect(ControllerStatusChangedEventArgs args)
		{
		}

		[Token(Token = "0x60003A5")]
		[Address(RVA = "0x1BD6FC0", Offset = "0x1BD6FC0", VA = "0x1BD6FC0", Slot = "30")]
		protected override void OnControllerDisconnected(ControllerStatusChangedEventArgs args)
		{
		}

		[Token(Token = "0x60003A6")]
		[Address(RVA = "0x1BD6FE8", Offset = "0x1BD6FE8", VA = "0x1BD6FE8", Slot = "26")]
		public override void SaveControllerMap(int playerId, ControllerMap controllerMap)
		{
		}

		[Token(Token = "0x60003A7")]
		[Address(RVA = "0x1BD71C0", Offset = "0x1BD71C0", VA = "0x1BD71C0", Slot = "27")]
		public override ControllerMap LoadControllerMap(int playerId, ControllerIdentifier controllerIdentifier, int categoryId, int layoutId)
		{
			return null;
		}

		[Token(Token = "0x60003A8")]
		[Address(RVA = "0x1BD5D88", Offset = "0x1BD5D88", VA = "0x1BD5D88")]
		private int LoadAll()
		{
			return default(int);
		}

		[Token(Token = "0x60003A9")]
		[Address(RVA = "0x1BD620C", Offset = "0x1BD620C", VA = "0x1BD620C")]
		private int LoadPlayerDataNow(int playerId)
		{
			return default(int);
		}

		[Token(Token = "0x60003AA")]
		[Address(RVA = "0x1BD74A8", Offset = "0x1BD74A8", VA = "0x1BD74A8")]
		private int LoadPlayerDataNow(Player player)
		{
			return default(int);
		}

		[Token(Token = "0x60003AB")]
		[Address(RVA = "0x1BD7838", Offset = "0x1BD7838", VA = "0x1BD7838")]
		private int LoadAllJoystickCalibrationData()
		{
			return default(int);
		}

		[Token(Token = "0x60003AC")]
		[Address(RVA = "0x1BD80AC", Offset = "0x1BD80AC", VA = "0x1BD80AC")]
		private int LoadJoystickCalibrationData(Joystick joystick)
		{
			return default(int);
		}

		[Token(Token = "0x60003AD")]
		[Address(RVA = "0x1BD817C", Offset = "0x1BD817C", VA = "0x1BD817C")]
		private int LoadJoystickCalibrationData(int joystickId)
		{
			return default(int);
		}

		[Token(Token = "0x60003AE")]
		[Address(RVA = "0x1BD6B38", Offset = "0x1BD6B38", VA = "0x1BD6B38")]
		private int LoadJoystickData(int joystickId)
		{
			return default(int);
		}

		[Token(Token = "0x60003AF")]
		[Address(RVA = "0x1BD6020", Offset = "0x1BD6020", VA = "0x1BD6020")]
		private int LoadControllerDataNow(int playerId, ControllerType controllerType, int controllerId)
		{
			return default(int);
		}

		[Token(Token = "0x60003B0")]
		[Address(RVA = "0x1BD614C", Offset = "0x1BD614C", VA = "0x1BD614C")]
		private int LoadControllerDataNow(ControllerType controllerType, int controllerId)
		{
			return default(int);
		}

		[Token(Token = "0x60003B1")]
		[Address(RVA = "0x1BD7BE8", Offset = "0x1BD7BE8", VA = "0x1BD7BE8")]
		private int LoadControllerMaps(int playerId, ControllerType controllerType, int controllerId)
		{
			return default(int);
		}

		[Token(Token = "0x60003B2")]
		[Address(RVA = "0x1BD728C", Offset = "0x1BD728C", VA = "0x1BD728C")]
		private ControllerMap LoadControllerMap(Player player, ControllerIdentifier controllerIdentifier, int categoryId, int layoutId)
		{
			return null;
		}

		[Token(Token = "0x60003B3")]
		[Address(RVA = "0x1BD79DC", Offset = "0x1BD79DC", VA = "0x1BD79DC")]
		private int LoadInputBehaviors(int playerId)
		{
			return default(int);
		}

		[Token(Token = "0x60003B4")]
		[Address(RVA = "0x1BD6348", Offset = "0x1BD6348", VA = "0x1BD6348")]
		private int LoadInputBehaviorNow(int playerId, int behaviorId)
		{
			return default(int);
		}

		[Token(Token = "0x60003B5")]
		[Address(RVA = "0x1BD8B04", Offset = "0x1BD8B04", VA = "0x1BD8B04")]
		private int LoadInputBehaviorNow(Player player, InputBehavior inputBehavior)
		{
			return default(int);
		}

		[Token(Token = "0x60003B6")]
		[Address(RVA = "0x1BD73CC", Offset = "0x1BD73CC", VA = "0x1BD73CC")]
		private bool LoadControllerAssignmentsNow()
		{
			return default(bool);
		}

		[Token(Token = "0x60003B7")]
		[Address(RVA = "0x1BD8DA0", Offset = "0x1BD8DA0", VA = "0x1BD8DA0")]
		private bool LoadKeyboardAndMouseAssignmentsNow(ControllerAssignmentSaveInfo data)
		{
			return default(bool);
		}

		[Token(Token = "0x60003B8")]
		[Address(RVA = "0x1BD9258", Offset = "0x1BD9258", VA = "0x1BD9258")]
		private bool LoadJoystickAssignmentsNow(ControllerAssignmentSaveInfo data)
		{
			return default(bool);
		}

		[Token(Token = "0x60003B9")]
		[Address(RVA = "0x1BD8C44", Offset = "0x1BD8C44", VA = "0x1BD8C44")]
		private ControllerAssignmentSaveInfo LoadControllerAssignmentData()
		{
			return null;
		}

		[Token(Token = "0x60003BA")]
		[Address(RVA = "0x1BD6D40", Offset = "0x1BD6D40", VA = "0x1BD6D40")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6F95C8", Offset = "0x6F95C8")]
		private IEnumerator LoadJoystickAssignmentsDeferred()
		{
			return null;
		}

		[Token(Token = "0x60003BB")]
		[Address(RVA = "0x1BD5658", Offset = "0x1BD5658", VA = "0x1BD5658")]
		private void SaveAll()
		{
		}

		[Token(Token = "0x60003BC")]
		[Address(RVA = "0x1BD5AB8", Offset = "0x1BD5AB8", VA = "0x1BD5AB8")]
		private void SavePlayerDataNow(int playerId)
		{
		}

		[Token(Token = "0x60003BD")]
		[Address(RVA = "0x1BDA914", Offset = "0x1BDA914", VA = "0x1BDA914")]
		private void SavePlayerDataNow(Player player)
		{
		}

		[Token(Token = "0x60003BE")]
		[Address(RVA = "0x1BDA9B0", Offset = "0x1BDA9B0", VA = "0x1BDA9B0")]
		private void SaveAllJoystickCalibrationData()
		{
		}

		[Token(Token = "0x60003BF")]
		[Address(RVA = "0x1BDAF34", Offset = "0x1BDAF34", VA = "0x1BDAF34")]
		private void SaveJoystickCalibrationData(int joystickId)
		{
		}

		[Token(Token = "0x60003C0")]
		[Address(RVA = "0x1BDAEB4", Offset = "0x1BDAEB4", VA = "0x1BDAEB4")]
		private void SaveJoystickCalibrationData(Joystick joystick)
		{
		}

		[Token(Token = "0x60003C1")]
		[Address(RVA = "0x1BD6DDC", Offset = "0x1BD6DDC", VA = "0x1BD6DDC")]
		private void SaveJoystickData(int joystickId)
		{
		}

		[Token(Token = "0x60003C2")]
		[Address(RVA = "0x1BD58E0", Offset = "0x1BD58E0", VA = "0x1BD58E0")]
		private void SaveControllerDataNow(int playerId, ControllerType controllerType, int controllerId)
		{
		}

		[Token(Token = "0x60003C3")]
		[Address(RVA = "0x1BD59EC", Offset = "0x1BD59EC", VA = "0x1BD59EC")]
		private void SaveControllerDataNow(ControllerType controllerType, int controllerId)
		{
		}

		[Token(Token = "0x60003C4")]
		[Address(RVA = "0x1BDABD4", Offset = "0x1BDABD4", VA = "0x1BDABD4")]
		private void SaveControllerMaps(Player player, PlayerSaveData playerSaveData)
		{
		}

		[Token(Token = "0x60003C5")]
		[Address(RVA = "0x1BDB140", Offset = "0x1BDB140", VA = "0x1BDB140")]
		private void SaveControllerMaps(int playerId, ControllerType controllerType, int controllerId)
		{
		}

		[Token(Token = "0x60003C6")]
		[Address(RVA = "0x1BD7094", Offset = "0x1BD7094", VA = "0x1BD7094")]
		private void SaveControllerMap(Player player, ControllerMap controllerMap)
		{
		}

		[Token(Token = "0x60003C7")]
		[Address(RVA = "0x1BDAB48", Offset = "0x1BDAB48", VA = "0x1BDAB48")]
		private void SaveInputBehaviors(Player player, PlayerSaveData playerSaveData)
		{
		}

		[Token(Token = "0x60003C8")]
		[Address(RVA = "0x1BD5BFC", Offset = "0x1BD5BFC", VA = "0x1BD5BFC")]
		private void SaveInputBehaviorNow(int playerId, int behaviorId)
		{
		}

		[Token(Token = "0x60003C9")]
		[Address(RVA = "0x1BDB40C", Offset = "0x1BDB40C", VA = "0x1BDB40C")]
		private void SaveInputBehaviorNow(Player player, InputBehavior inputBehavior)
		{
		}

		[Token(Token = "0x60003CA")]
		[Address(RVA = "0x1BD6504", Offset = "0x1BD6504", VA = "0x1BD6504")]
		private bool SaveControllerAssignments()
		{
			return default(bool);
		}

		[Token(Token = "0x60003CB")]
		[Address(RVA = "0x1BDB504", Offset = "0x1BDB504", VA = "0x1BDB504")]
		private bool ControllerAssignmentSaveDataExists()
		{
			return default(bool);
		}

		[Token(Token = "0x60003CC")]
		[Address(RVA = "0x1BDB558", Offset = "0x1BDB558", VA = "0x1BDB558")]
		private string GetBasePlayerPrefsKey(Player player)
		{
			return null;
		}

		[Token(Token = "0x60003CD")]
		[Address(RVA = "0x1BDB27C", Offset = "0x1BDB27C", VA = "0x1BDB27C")]
		private string GetControllerMapPlayerPrefsKey(Player player, ControllerIdentifier controllerIdentifier, int categoryId, int layoutId, int ppKeyVersion)
		{
			return null;
		}

		[Token(Token = "0x60003CE")]
		[Address(RVA = "0x1BDB344", Offset = "0x1BDB344", VA = "0x1BDB344")]
		private string GetControllerMapKnownActionIdsPlayerPrefsKey(Player player, ControllerIdentifier controllerIdentifier, int categoryId, int layoutId, int ppKeyVersion)
		{
			return null;
		}

		[Token(Token = "0x60003CF")]
		[Address(RVA = "0x1BDB5D0", Offset = "0x1BDB5D0", VA = "0x1BDB5D0")]
		private static string GetControllerMapPlayerPrefsKeyCommonSuffix(Player player, ControllerIdentifier controllerIdentifier, int categoryId, int layoutId, int ppKeyVersion)
		{
			return null;
		}

		[Token(Token = "0x60003D0")]
		[Address(RVA = "0x1BDAFC0", Offset = "0x1BDAFC0", VA = "0x1BDAFC0")]
		private string GetJoystickCalibrationMapPlayerPrefsKey(Joystick joystick)
		{
			return null;
		}

		[Token(Token = "0x60003D1")]
		[Address(RVA = "0x1BDB460", Offset = "0x1BDB460", VA = "0x1BDB460")]
		private string GetInputBehaviorPlayerPrefsKey(Player player, int inputBehaviorId)
		{
			return null;
		}

		[Token(Token = "0x60003D2")]
		[Address(RVA = "0x1BD8208", Offset = "0x1BD8208", VA = "0x1BD8208")]
		private string GetControllerMapXml(Player player, ControllerIdentifier controllerIdentifier, int categoryId, int layoutId)
		{
			return null;
		}

		[Token(Token = "0x60003D3")]
		[Address(RVA = "0x1BD82C8", Offset = "0x1BD82C8", VA = "0x1BD82C8")]
		private List<int> GetControllerMapKnownActionIds(Player player, ControllerIdentifier controllerIdentifier, int categoryId, int layoutId)
		{
			return null;
		}

		[Token(Token = "0x60003D4")]
		[Address(RVA = "0x1BD80EC", Offset = "0x1BD80EC", VA = "0x1BD80EC")]
		private string GetJoystickCalibrationMapXml(Joystick joystick)
		{
			return null;
		}

		[Token(Token = "0x60003D5")]
		[Address(RVA = "0x1BD8BAC", Offset = "0x1BD8BAC", VA = "0x1BD8BAC")]
		private string GetInputBehaviorXml(Player player, int id)
		{
			return null;
		}

		[Token(Token = "0x60003D6")]
		[Address(RVA = "0x1BD84C0", Offset = "0x1BD84C0", VA = "0x1BD84C0")]
		private void AddDefaultMappingsForNewActions(ControllerIdentifier controllerIdentifier, ControllerMap controllerMap, List<int> knownActionIds)
		{
		}

		[Token(Token = "0x60003D7")]
		[Address(RVA = "0x1BDA394", Offset = "0x1BDA394", VA = "0x1BDA394")]
		private Joystick FindJoystickPrecise(ControllerAssignmentSaveInfo.JoystickInfo joystickInfo)
		{
			return null;
		}

		[Token(Token = "0x60003D8")]
		[Address(RVA = "0x1BDA654", Offset = "0x1BDA654", VA = "0x1BDA654")]
		private bool TryFindJoysticksImprecise(ControllerAssignmentSaveInfo.JoystickInfo joystickInfo, out List<Joystick> matches)
		{
			return default(bool);
		}

		[Token(Token = "0x60003D9")]
		[Address(RVA = "0x1BDBBD0", Offset = "0x1BDBBD0", VA = "0x1BDBBD0")]
		private static int GetDuplicateIndex(Player player, ControllerIdentifier controllerIdentifier)
		{
			return default(int);
		}

		[Token(Token = "0x60003DA")]
		[Address(RVA = "0x1BD8008", Offset = "0x1BD8008", VA = "0x1BD8008")]
		private void RefreshLayoutManager(int playerId)
		{
		}

		[Token(Token = "0x60003DB")]
		[Address(RVA = "0x1BDB9F4", Offset = "0x1BDB9F4", VA = "0x1BDB9F4")]
		private static Type GetControllerMapType(ControllerType controllerType)
		{
			return null;
		}

		[Token(Token = "0x60003DC")]
		[Address(RVA = "0x1BDC140", Offset = "0x1BDC140", VA = "0x1BDC140")]
		public UserDataStore_PlayerPrefs()
		{
		}
	}
}
namespace Rewired.Internal
{
	[Token(Token = "0x200004D")]
	public static class ControllerTemplateFactory
	{
		[Token(Token = "0x4000287")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Type[] _defaultTemplateTypes;

		[Token(Token = "0x4000288")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly Type[] _defaultTemplateInterfaceTypes;

		[Token(Token = "0x1700023D")]
		public static Type[] templateTypes
		{
			[Token(Token = "0x60003F4")]
			[Address(RVA = "0xB30778", Offset = "0xB30778", VA = "0xB30778")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700023E")]
		public static Type[] templateInterfaceTypes
		{
			[Token(Token = "0x60003F5")]
			[Address(RVA = "0xB307DC", Offset = "0xB307DC", VA = "0xB307DC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60003F6")]
		[Address(RVA = "0xB30840", Offset = "0xB30840", VA = "0xB30840")]
		public static IControllerTemplate Create(Guid typeGuid, object payload)
		{
			return null;
		}
	}
}
namespace Rewired.Integration.UnityUI
{
	[Token(Token = "0x200004E")]
	public class PlayerPointerEventData : PointerEventData
	{
		[Token(Token = "0x4000289")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F2308", Offset = "0x6F2308")]
		private int <playerId>k__BackingField;

		[Token(Token = "0x400028A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F2318", Offset = "0x6F2318")]
		private int <inputSourceIndex>k__BackingField;

		[Token(Token = "0x400028B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F2328", Offset = "0x6F2328")]
		private IMouseInputSource <mouseSource>k__BackingField;

		[Token(Token = "0x400028C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F2338", Offset = "0x6F2338")]
		private ITouchInputSource <touchSource>k__BackingField;

		[Token(Token = "0x400028D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F2348", Offset = "0x6F2348")]
		private PointerEventType <sourceType>k__BackingField;

		[Token(Token = "0x400028E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F2358", Offset = "0x6F2358")]
		private int <buttonIndex>k__BackingField;

		[Token(Token = "0x1700023F")]
		public int playerId
		{
			[Token(Token = "0x60003F8")]
			[Address(RVA = "0xE09200", Offset = "0xE09200", VA = "0xE09200")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F9678", Offset = "0x6F9678")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60003F9")]
			[Address(RVA = "0xE09208", Offset = "0xE09208", VA = "0xE09208")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F9688", Offset = "0x6F9688")]
			set
			{
			}
		}

		[Token(Token = "0x17000240")]
		public int inputSourceIndex
		{
			[Token(Token = "0x60003FA")]
			[Address(RVA = "0xE09210", Offset = "0xE09210", VA = "0xE09210")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F9698", Offset = "0x6F9698")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60003FB")]
			[Address(RVA = "0xE09218", Offset = "0xE09218", VA = "0xE09218")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F96A8", Offset = "0x6F96A8")]
			set
			{
			}
		}

		[Token(Token = "0x17000241")]
		public IMouseInputSource mouseSource
		{
			[Token(Token = "0x60003FC")]
			[Address(RVA = "0xE09220", Offset = "0xE09220", VA = "0xE09220")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F96B8", Offset = "0x6F96B8")]
			get
			{
				return null;
			}
			[Token(Token = "0x60003FD")]
			[Address(RVA = "0xE09228", Offset = "0xE09228", VA = "0xE09228")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F96C8", Offset = "0x6F96C8")]
			set
			{
			}
		}

		[Token(Token = "0x17000242")]
		public ITouchInputSource touchSource
		{
			[Token(Token = "0x60003FE")]
			[Address(RVA = "0xE09230", Offset = "0xE09230", VA = "0xE09230")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F96D8", Offset = "0x6F96D8")]
			get
			{
				return null;
			}
			[Token(Token = "0x60003FF")]
			[Address(RVA = "0xE09238", Offset = "0xE09238", VA = "0xE09238")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F96E8", Offset = "0x6F96E8")]
			set
			{
			}
		}

		[Token(Token = "0x17000243")]
		public PointerEventType sourceType
		{
			[Token(Token = "0x6000400")]
			[Address(RVA = "0xE09240", Offset = "0xE09240", VA = "0xE09240")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F96F8", Offset = "0x6F96F8")]
			get
			{
				return default(PointerEventType);
			}
			[Token(Token = "0x6000401")]
			[Address(RVA = "0xE09248", Offset = "0xE09248", VA = "0xE09248")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F9708", Offset = "0x6F9708")]
			set
			{
			}
		}

		[Token(Token = "0x17000244")]
		public int buttonIndex
		{
			[Token(Token = "0x6000402")]
			[Address(RVA = "0xE09250", Offset = "0xE09250", VA = "0xE09250")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F9718", Offset = "0x6F9718")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000403")]
			[Address(RVA = "0xE09258", Offset = "0xE09258", VA = "0xE09258")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F9728", Offset = "0x6F9728")]
			set
			{
			}
		}

		[Token(Token = "0x6000404")]
		[Address(RVA = "0xE09260", Offset = "0xE09260", VA = "0xE09260")]
		public PlayerPointerEventData(EventSystem eventSystem)
		{
		}

		[Token(Token = "0x6000405")]
		[Address(RVA = "0xE09294", Offset = "0xE09294", VA = "0xE09294", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x200004F")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x6EF450", Offset = "0x6EF450")]
	public class RewiredEventSystem : EventSystem
	{
		[Token(Token = "0x400028F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F2368", Offset = "0x6F2368")]
		[SerializeField]
		private bool _alwaysUpdate;

		[Token(Token = "0x17000245")]
		public bool alwaysUpdate
		{
			[Token(Token = "0x6000406")]
			[Address(RVA = "0xD9D1A8", Offset = "0xD9D1A8", VA = "0xD9D1A8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000407")]
			[Address(RVA = "0xD9D1B0", Offset = "0xD9D1B0", VA = "0xD9D1B0")]
			set
			{
			}
		}

		[Token(Token = "0x6000408")]
		[Address(RVA = "0xD9D1BC", Offset = "0xD9D1BC", VA = "0xD9D1BC", Slot = "18")]
		protected override void Update()
		{
		}

		[Token(Token = "0x6000409")]
		[Address(RVA = "0xD9D37C", Offset = "0xD9D37C", VA = "0xD9D37C")]
		public RewiredEventSystem()
		{
		}
	}
	[Token(Token = "0x2000050")]
	public abstract class RewiredPointerInputModule : BaseInputModule
	{
		[Token(Token = "0x2000051")]
		protected class MouseState
		{
			[Token(Token = "0x400029C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private List<ButtonState> m_TrackedButtons;

			[Token(Token = "0x6000429")]
			[Address(RVA = "0x92B6F8", Offset = "0x92B6F8", VA = "0x92B6F8")]
			public bool AnyPressesThisFrame()
			{
				return default(bool);
			}

			[Token(Token = "0x600042A")]
			[Address(RVA = "0x92B7B4", Offset = "0x92B7B4", VA = "0x92B7B4")]
			public bool AnyReleasesThisFrame()
			{
				return default(bool);
			}

			[Token(Token = "0x600042B")]
			[Address(RVA = "0x92B870", Offset = "0x92B870", VA = "0x92B870")]
			public ButtonState GetButtonState(int button)
			{
				return null;
			}

			[Token(Token = "0x600042C")]
			[Address(RVA = "0x92B9D4", Offset = "0x92B9D4", VA = "0x92B9D4")]
			public void SetButtonState(int button, PointerEventData.FramePressState stateForMouseButton, PlayerPointerEventData data)
			{
			}

			[Token(Token = "0x600042D")]
			[Address(RVA = "0x92BA18", Offset = "0x92BA18", VA = "0x92BA18")]
			public MouseState()
			{
			}
		}

		[Token(Token = "0x2000052")]
		public class MouseButtonEventData
		{
			[Token(Token = "0x400029D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public PointerEventData.FramePressState buttonState;

			[Token(Token = "0x400029E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public PlayerPointerEventData buttonData;

			[Token(Token = "0x600042E")]
			[Address(RVA = "0x92B6C8", Offset = "0x92B6C8", VA = "0x92B6C8")]
			public bool PressedThisFrame()
			{
				return default(bool);
			}

			[Token(Token = "0x600042F")]
			[Address(RVA = "0x92B6DC", Offset = "0x92B6DC", VA = "0x92B6DC")]
			public bool ReleasedThisFrame()
			{
				return default(bool);
			}

			[Token(Token = "0x6000430")]
			[Address(RVA = "0x92B6F0", Offset = "0x92B6F0", VA = "0x92B6F0")]
			public MouseButtonEventData()
			{
			}
		}

		[Token(Token = "0x2000053")]
		protected class ButtonState
		{
			[Token(Token = "0x400029F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int m_Button;

			[Token(Token = "0x40002A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private MouseButtonEventData m_EventData;

			[Token(Token = "0x1700024A")]
			public MouseButtonEventData eventData
			{
				[Token(Token = "0x6000431")]
				[Address(RVA = "0x92B6A0", Offset = "0x92B6A0", VA = "0x92B6A0")]
				get
				{
					return null;
				}
				[Token(Token = "0x6000432")]
				[Address(RVA = "0x92B6A8", Offset = "0x92B6A8", VA = "0x92B6A8")]
				set
				{
				}
			}

			[Token(Token = "0x1700024B")]
			public int button
			{
				[Token(Token = "0x6000433")]
				[Address(RVA = "0x92B6B0", Offset = "0x92B6B0", VA = "0x92B6B0")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6000434")]
				[Address(RVA = "0x92B6B8", Offset = "0x92B6B8", VA = "0x92B6B8")]
				set
				{
				}
			}

			[Token(Token = "0x6000435")]
			[Address(RVA = "0x92B6C0", Offset = "0x92B6C0", VA = "0x92B6C0")]
			public ButtonState()
			{
			}
		}

		[Token(Token = "0x2000054")]
		private sealed class UnityInputSource : IMouseInputSource, ITouchInputSource
		{
			[Token(Token = "0x40002A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private Vector2 m_MousePosition;

			[Token(Token = "0x40002A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private Vector2 m_MousePositionPrev;

			[Token(Token = "0x40002A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int m_LastUpdatedFrame;

			[Token(Token = "0x1700024C")]
			private int Rewired.UI.IMouseInputSource.playerId
			{
				[Token(Token = "0x6000436")]
				[Address(RVA = "0x92BA90", Offset = "0x92BA90", VA = "0x92BA90", Slot = "4")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x1700024D")]
			private int Rewired.UI.ITouchInputSource.playerId
			{
				[Token(Token = "0x6000437")]
				[Address(RVA = "0x92BAF8", Offset = "0x92BAF8", VA = "0x92BAF8", Slot = "14")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x1700024E")]
			private bool Rewired.UI.IMouseInputSource.enabled
			{
				[Token(Token = "0x6000438")]
				[Address(RVA = "0x92BB10", Offset = "0x92BB10", VA = "0x92BB10", Slot = "5")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x1700024F")]
			private bool Rewired.UI.IMouseInputSource.locked
			{
				[Token(Token = "0x6000439")]
				[Address(RVA = "0x92BB28", Offset = "0x92BB28", VA = "0x92BB28", Slot = "6")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x17000250")]
			private int Rewired.UI.IMouseInputSource.buttonCount
			{
				[Token(Token = "0x600043A")]
				[Address(RVA = "0x92BB4C", Offset = "0x92BB4C", VA = "0x92BB4C", Slot = "7")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x17000251")]
			private Vector2 Rewired.UI.IMouseInputSource.screenPosition
			{
				[Token(Token = "0x600043E")]
				[Address(RVA = "0x92BBDC", Offset = "0x92BBDC", VA = "0x92BBDC", Slot = "11")]
				get
				{
					return default(Vector2);
				}
			}

			[Token(Token = "0x17000252")]
			private Vector2 Rewired.UI.IMouseInputSource.screenPositionDelta
			{
				[Token(Token = "0x600043F")]
				[Address(RVA = "0x92BBF4", Offset = "0x92BBF4", VA = "0x92BBF4", Slot = "12")]
				get
				{
					return default(Vector2);
				}
			}

			[Token(Token = "0x17000253")]
			private Vector2 Rewired.UI.IMouseInputSource.wheelDelta
			{
				[Token(Token = "0x6000440")]
				[Address(RVA = "0x92BC20", Offset = "0x92BC20", VA = "0x92BC20", Slot = "13")]
				get
				{
					return default(Vector2);
				}
			}

			[Token(Token = "0x17000254")]
			private bool Rewired.UI.ITouchInputSource.touchSupported
			{
				[Token(Token = "0x6000441")]
				[Address(RVA = "0x92BC38", Offset = "0x92BC38", VA = "0x92BC38", Slot = "15")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x17000255")]
			private int Rewired.UI.ITouchInputSource.touchCount
			{
				[Token(Token = "0x6000442")]
				[Address(RVA = "0x92BC50", Offset = "0x92BC50", VA = "0x92BC50", Slot = "16")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x600043B")]
			[Address(RVA = "0x92BB64", Offset = "0x92BB64", VA = "0x92BB64", Slot = "8")]
			private bool Rewired.UI.IMouseInputSource.GetButtonDown(int button)
			{
				return default(bool);
			}

			[Token(Token = "0x600043C")]
			[Address(RVA = "0x92BB8C", Offset = "0x92BB8C", VA = "0x92BB8C", Slot = "9")]
			private bool Rewired.UI.IMouseInputSource.GetButtonUp(int button)
			{
				return default(bool);
			}

			[Token(Token = "0x600043D")]
			[Address(RVA = "0x92BBB4", Offset = "0x92BBB4", VA = "0x92BBB4", Slot = "10")]
			private bool Rewired.UI.IMouseInputSource.GetButton(int button)
			{
				return default(bool);
			}

			[Token(Token = "0x6000443")]
			[Address(RVA = "0x92BC68", Offset = "0x92BC68", VA = "0x92BC68", Slot = "17")]
			private Touch Rewired.UI.ITouchInputSource.GetTouch(int index)
			{
				return default(Touch);
			}

			[Token(Token = "0x6000444")]
			[Address(RVA = "0x92BAA8", Offset = "0x92BAA8", VA = "0x92BAA8")]
			private void TryUpdate()
			{
			}

			[Token(Token = "0x6000445")]
			[Address(RVA = "0x92BCB4", Offset = "0x92BCB4", VA = "0x92BCB4")]
			public UnityInputSource()
			{
			}
		}

		[Token(Token = "0x4000290")]
		public const int kMouseLeftId = -1;

		[Token(Token = "0x4000291")]
		public const int kMouseRightId = -2;

		[Token(Token = "0x4000292")]
		public const int kMouseMiddleId = -3;

		[Token(Token = "0x4000293")]
		public const int kFakeTouchesId = -4;

		[Token(Token = "0x4000294")]
		private const int customButtonsStartingId = -2147483520;

		[Token(Token = "0x4000295")]
		private const int customButtonsMaxCount = 128;

		[Token(Token = "0x4000296")]
		private const int customButtonsLastId = -2147483392;

		[Token(Token = "0x4000297")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private readonly List<IMouseInputSource> m_MouseInputSourcesList;

		[Token(Token = "0x4000298")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Dictionary<int, Dictionary<int, PlayerPointerEventData>[]> m_PlayerPointerData;

		[Token(Token = "0x4000299")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private ITouchInputSource m_UserDefaultTouchInputSource;

		[Token(Token = "0x400029A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private UnityInputSource __m_DefaultInputSource;

		[Token(Token = "0x400029B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private readonly MouseState m_MouseState;

		[Token(Token = "0x17000246")]
		private UnityInputSource defaultInputSource
		{
			[Token(Token = "0x600040A")]
			[Address(RVA = "0xD9D3E0", Offset = "0xD9D3E0", VA = "0xD9D3E0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000247")]
		private IMouseInputSource defaultMouseInputSource
		{
			[Token(Token = "0x600040B")]
			[Address(RVA = "0xD9D448", Offset = "0xD9D448", VA = "0xD9D448")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000248")]
		protected ITouchInputSource defaultTouchInputSource
		{
			[Token(Token = "0x600040C")]
			[Address(RVA = "0xD9D44C", Offset = "0xD9D44C", VA = "0xD9D44C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000249")]
		protected virtual bool isMouseSupported
		{
			[Token(Token = "0x6000417")]
			[Address(RVA = "0xD9DC7C", Offset = "0xD9DC7C", VA = "0xD9DC7C", Slot = "26")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600040D")]
		[Address(RVA = "0xD9D450", Offset = "0xD9D450", VA = "0xD9D450")]
		protected bool IsDefaultMouse(IMouseInputSource mouse)
		{
			return default(bool);
		}

		[Token(Token = "0x600040E")]
		[Address(RVA = "0xD9D478", Offset = "0xD9D478", VA = "0xD9D478")]
		public IMouseInputSource GetMouseInputSource(int playerId, int mouseIndex)
		{
			return null;
		}

		[Token(Token = "0x600040F")]
		[Address(RVA = "0xD9D6AC", Offset = "0xD9D6AC", VA = "0xD9D6AC")]
		public void RemoveMouseInputSource(IMouseInputSource source)
		{
		}

		[Token(Token = "0x6000410")]
		[Address(RVA = "0xD9D75C", Offset = "0xD9D75C", VA = "0xD9D75C")]
		public void AddMouseInputSource(IMouseInputSource source)
		{
		}

		[Token(Token = "0x6000411")]
		[Address(RVA = "0xD9D858", Offset = "0xD9D858", VA = "0xD9D858")]
		public int GetMouseInputSourceCount(int playerId)
		{
			return default(int);
		}

		[Token(Token = "0x6000412")]
		[Address(RVA = "0xD9DA28", Offset = "0xD9DA28", VA = "0xD9DA28")]
		public ITouchInputSource GetTouchInputSource(int playerId, int sourceIndex)
		{
			return null;
		}

		[Token(Token = "0x6000413")]
		[Address(RVA = "0xD9DABC", Offset = "0xD9DABC", VA = "0xD9DABC")]
		public void RemoveTouchInputSource(ITouchInputSource source)
		{
		}

		[Token(Token = "0x6000414")]
		[Address(RVA = "0xD9DB2C", Offset = "0xD9DB2C", VA = "0xD9DB2C")]
		public void AddTouchInputSource(ITouchInputSource source)
		{
		}

		[Token(Token = "0x6000415")]
		[Address(RVA = "0xD9DC04", Offset = "0xD9DC04", VA = "0xD9DC04")]
		public int GetTouchInputSourceCount(int playerId)
		{
			return default(int);
		}

		[Token(Token = "0x6000416")]
		[Address(RVA = "0xD9DC28", Offset = "0xD9DC28", VA = "0xD9DC28")]
		protected void ClearMouseInputSources()
		{
		}

		[Token(Token = "0x6000418")]
		protected abstract bool IsDefaultPlayer(int playerId);

		[Token(Token = "0x6000419")]
		[Address(RVA = "0xD9DE44", Offset = "0xD9DE44", VA = "0xD9DE44")]
		protected bool GetPointerData(int playerId, int pointerIndex, int pointerTypeId, out PlayerPointerEventData data, bool create, PointerEventType pointerEventType)
		{
			return default(bool);
		}

		[Token(Token = "0x600041A")]
		[Address(RVA = "0xD9E210", Offset = "0xD9E210", VA = "0xD9E210")]
		private PlayerPointerEventData CreatePointerEventData(int playerId, int pointerIndex, int pointerTypeId, PointerEventType pointerEventType)
		{
			return null;
		}

		[Token(Token = "0x600041B")]
		[Address(RVA = "0xD9E308", Offset = "0xD9E308", VA = "0xD9E308")]
		protected void RemovePointerData(PlayerPointerEventData data)
		{
		}

		[Token(Token = "0x600041C")]
		[Address(RVA = "0xD9E3C4", Offset = "0xD9E3C4", VA = "0xD9E3C4")]
		protected PlayerPointerEventData GetTouchPointerEventData(int playerId, int touchDeviceIndex, Touch input, out bool pressed, out bool released)
		{
			return null;
		}

		[Token(Token = "0x600041D")]
		[Address(RVA = "0xD9E5F8", Offset = "0xD9E5F8", VA = "0xD9E5F8", Slot = "28")]
		protected virtual MouseState GetMousePointerEventData(int playerId, int mouseIndex)
		{
			return null;
		}

		[Token(Token = "0x600041E")]
		[Address(RVA = "0xD9EE50", Offset = "0xD9EE50", VA = "0xD9EE50")]
		protected PlayerPointerEventData GetLastPointerEventData(int playerId, int pointerIndex, int pointerTypeId, bool ignorePointerTypeId, PointerEventType pointerEventType)
		{
			return null;
		}

		[Token(Token = "0x600041F")]
		[Address(RVA = "0xD9F010", Offset = "0xD9F010", VA = "0xD9F010")]
		private static bool ShouldStartDrag(Vector2 pressPos, Vector2 currentPos, float threshold, bool useDragThreshold)
		{
			return default(bool);
		}

		[Token(Token = "0x6000420")]
		[Address(RVA = "0xD9F060", Offset = "0xD9F060", VA = "0xD9F060", Slot = "29")]
		protected virtual void ProcessMove(PlayerPointerEventData pointerEvent)
		{
		}

		[Token(Token = "0x6000421")]
		[Address(RVA = "0xD9F1FC", Offset = "0xD9F1FC", VA = "0xD9F1FC", Slot = "30")]
		protected virtual void ProcessDrag(PlayerPointerEventData pointerEvent)
		{
		}

		[Token(Token = "0x6000422")]
		[Address(RVA = "0xD9F5F4", Offset = "0xD9F5F4", VA = "0xD9F5F4", Slot = "20")]
		public override bool IsPointerOverGameObject(int pointerTypeId)
		{
			return default(bool);
		}

		[Token(Token = "0x6000423")]
		[Address(RVA = "0xD9F840", Offset = "0xD9F840", VA = "0xD9F840")]
		protected void ClearSelection()
		{
		}

		[Token(Token = "0x6000424")]
		[Address(RVA = "0xD9FBD8", Offset = "0xD9FBD8", VA = "0xD9FBD8", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6000425")]
		[Address(RVA = "0xDA00B8", Offset = "0xDA00B8", VA = "0xDA00B8")]
		protected void DeselectIfSelectionChanged(GameObject currentOverGo, BaseEventData pointerEvent)
		{
		}

		[Token(Token = "0x6000426")]
		[Address(RVA = "0xD9EC7C", Offset = "0xD9EC7C", VA = "0xD9EC7C")]
		protected void CopyFromTo(PointerEventData from, PointerEventData to)
		{
		}

		[Token(Token = "0x6000427")]
		[Address(RVA = "0xD9ECD8", Offset = "0xD9ECD8", VA = "0xD9ECD8")]
		protected PointerEventData.FramePressState StateForMouseButton(int playerId, int mouseIndex, int buttonId)
		{
			return default(PointerEventData.FramePressState);
		}

		[Token(Token = "0x6000428")]
		[Address(RVA = "0xDA01BC", Offset = "0xDA01BC", VA = "0xDA01BC")]
		protected RewiredPointerInputModule()
		{
		}
	}
	[Token(Token = "0x2000055")]
	public enum PointerEventType
	{
		[Token(Token = "0x40002A5")]
		Mouse,
		[Token(Token = "0x40002A6")]
		Touch
	}
	[Token(Token = "0x2000056")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x6EF488", Offset = "0x6EF488")]
	public sealed class RewiredStandaloneInputModule : RewiredPointerInputModule
	{
		[Serializable]
		[Token(Token = "0x2000057")]
		public class PlayerSetting
		{
			[Token(Token = "0x40002CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int playerId;

			[Token(Token = "0x40002CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public List<Rewired.Components.PlayerMouse> playerMice;

			[Token(Token = "0x60004A1")]
			[Address(RVA = "0x92BCC4", Offset = "0x92BCC4", VA = "0x92BCC4")]
			public PlayerSetting()
			{
			}

			[Token(Token = "0x60004A2")]
			[Address(RVA = "0x92BD3C", Offset = "0x92BD3C", VA = "0x92BD3C")]
			private PlayerSetting(PlayerSetting other)
			{
			}

			[Token(Token = "0x60004A3")]
			[Address(RVA = "0x92BF34", Offset = "0x92BF34", VA = "0x92BF34")]
			public PlayerSetting Clone()
			{
				return null;
			}
		}

		[Token(Token = "0x40002A7")]
		private const string DEFAULT_ACTION_MOVE_HORIZONTAL = "UIHorizontal";

		[Token(Token = "0x40002A8")]
		private const string DEFAULT_ACTION_MOVE_VERTICAL = "UIVertical";

		[Token(Token = "0x40002A9")]
		private const string DEFAULT_ACTION_SUBMIT = "UISubmit";

		[Token(Token = "0x40002AA")]
		private const string DEFAULT_ACTION_CANCEL = "UICancel";

		[Token(Token = "0x40002AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F23B4", Offset = "0x6F23B4")]
		private InputManager_Base rewiredInputManager;

		[Token(Token = "0x40002AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F2400", Offset = "0x6F2400")]
		private bool useAllRewiredGamePlayers;

		[Token(Token = "0x40002AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F244C", Offset = "0x6F244C")]
		private bool useRewiredSystemPlayer;

		[Token(Token = "0x40002AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F2498", Offset = "0x6F2498")]
		private int[] rewiredPlayerIds;

		[Token(Token = "0x40002AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F24E4", Offset = "0x6F24E4")]
		[SerializeField]
		private bool usePlayingPlayersOnly;

		[Token(Token = "0x40002B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F2530", Offset = "0x6F2530")]
		private List<Rewired.Components.PlayerMouse> playerMice;

		[Token(Token = "0x40002B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F257C", Offset = "0x6F257C")]
		private bool moveOneElementPerAxisPress;

		[Token(Token = "0x40002B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F25C8", Offset = "0x6F25C8")]
		private bool setActionsById;

		[Token(Token = "0x40002B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F2614", Offset = "0x6F2614")]
		private int horizontalActionId;

		[Token(Token = "0x40002B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F2660", Offset = "0x6F2660")]
		private int verticalActionId;

		[Token(Token = "0x40002B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F26AC", Offset = "0x6F26AC")]
		private int submitActionId;

		[Token(Token = "0x40002B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F26F8", Offset = "0x6F26F8")]
		private int cancelActionId;

		[Token(Token = "0x40002B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F2744", Offset = "0x6F2744")]
		private string m_HorizontalAxis;

		[Token(Token = "0x40002B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F2790", Offset = "0x6F2790")]
		private string m_VerticalAxis;

		[Token(Token = "0x40002B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F27DC", Offset = "0x6F27DC")]
		[SerializeField]
		private string m_SubmitButton;

		[Token(Token = "0x40002BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F2828", Offset = "0x6F2828")]
		[SerializeField]
		private string m_CancelButton;

		[Token(Token = "0x40002BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F2874", Offset = "0x6F2874")]
		private float m_InputActionsPerSecond;

		[Token(Token = "0x40002BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F28C0", Offset = "0x6F28C0")]
		private float m_RepeatDelay;

		[Token(Token = "0x40002BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F290C", Offset = "0x6F290C")]
		[SerializeField]
		private bool m_allowMouseInput;

		[Token(Token = "0x40002BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD9")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F2958", Offset = "0x6F2958")]
		private bool m_allowMouseInputIfTouchSupported;

		[Token(Token = "0x40002BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDA")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F29A4", Offset = "0x6F29A4")]
		private bool m_allowTouchInput;

		[Token(Token = "0x40002C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDB")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F29F0", Offset = "0x6F29F0")]
		[SerializeField]
		private bool m_deselectIfBackgroundClicked;

		[Token(Token = "0x40002C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F2A3C", Offset = "0x6F2A3C")]
		[SerializeField]
		private bool m_deselectBeforeSelecting;

		[Token(Token = "0x40002C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDD")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x6F2A88", Offset = "0x6F2A88")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F2A88", Offset = "0x6F2A88")]
		[SerializeField]
		private bool m_ForceModuleActive;

		[NonSerialized]
		[Token(Token = "0x40002C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private int[] playerIds;

		[Token(Token = "0x40002C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private bool recompiling;

		[NonSerialized]
		[Token(Token = "0x40002C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE9")]
		private bool isTouchSupported;

		[NonSerialized]
		[Token(Token = "0x40002C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private double m_PrevActionTime;

		[NonSerialized]
		[Token(Token = "0x40002C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Vector2 m_LastMoveVector;

		[NonSerialized]
		[Token(Token = "0x40002C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private int m_ConsecutiveMoveCount;

		[NonSerialized]
		[Token(Token = "0x40002C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		private bool m_HasFocus;

		[Token(Token = "0x17000256")]
		public InputManager_Base RewiredInputManager
		{
			[Token(Token = "0x6000446")]
			[Address(RVA = "0xDA02A0", Offset = "0xDA02A0", VA = "0xDA02A0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000447")]
			[Address(RVA = "0xDA02A8", Offset = "0xDA02A8", VA = "0xDA02A8")]
			set
			{
			}
		}

		[Token(Token = "0x17000257")]
		public bool UseAllRewiredGamePlayers
		{
			[Token(Token = "0x6000448")]
			[Address(RVA = "0xDA02B0", Offset = "0xDA02B0", VA = "0xDA02B0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000449")]
			[Address(RVA = "0xDA02B8", Offset = "0xDA02B8", VA = "0xDA02B8")]
			set
			{
			}
		}

		[Token(Token = "0x17000258")]
		public bool UseRewiredSystemPlayer
		{
			[Token(Token = "0x600044A")]
			[Address(RVA = "0xDA07E8", Offset = "0xDA07E8", VA = "0xDA07E8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600044B")]
			[Address(RVA = "0xDA07F0", Offset = "0xDA07F0", VA = "0xDA07F0")]
			set
			{
			}
		}

		[Token(Token = "0x17000259")]
		public int[] RewiredPlayerIds
		{
			[Token(Token = "0x600044C")]
			[Address(RVA = "0xDA0814", Offset = "0xDA0814", VA = "0xDA0814")]
			get
			{
				return null;
			}
			[Token(Token = "0x600044D")]
			[Address(RVA = "0xDA0890", Offset = "0xDA0890", VA = "0xDA0890")]
			set
			{
			}
		}

		[Token(Token = "0x1700025A")]
		public bool UsePlayingPlayersOnly
		{
			[Token(Token = "0x600044E")]
			[Address(RVA = "0xDA0938", Offset = "0xDA0938", VA = "0xDA0938")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600044F")]
			[Address(RVA = "0xDA0940", Offset = "0xDA0940", VA = "0xDA0940")]
			set
			{
			}
		}

		[Token(Token = "0x1700025B")]
		public List<Rewired.Components.PlayerMouse> PlayerMice
		{
			[Token(Token = "0x6000450")]
			[Address(RVA = "0xDA094C", Offset = "0xDA094C", VA = "0xDA094C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000451")]
			[Address(RVA = "0xDA09C4", Offset = "0xDA09C4", VA = "0xDA09C4")]
			set
			{
			}
		}

		[Token(Token = "0x1700025C")]
		public bool MoveOneElementPerAxisPress
		{
			[Token(Token = "0x6000452")]
			[Address(RVA = "0xDA0A74", Offset = "0xDA0A74", VA = "0xDA0A74")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000453")]
			[Address(RVA = "0xDA0A7C", Offset = "0xDA0A7C", VA = "0xDA0A7C")]
			set
			{
			}
		}

		[Token(Token = "0x1700025D")]
		public bool allowMouseInput
		{
			[Token(Token = "0x6000454")]
			[Address(RVA = "0xDA0A88", Offset = "0xDA0A88", VA = "0xDA0A88")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000455")]
			[Address(RVA = "0xDA0A90", Offset = "0xDA0A90", VA = "0xDA0A90")]
			set
			{
			}
		}

		[Token(Token = "0x1700025E")]
		public bool allowMouseInputIfTouchSupported
		{
			[Token(Token = "0x6000456")]
			[Address(RVA = "0xDA0A9C", Offset = "0xDA0A9C", VA = "0xDA0A9C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000457")]
			[Address(RVA = "0xDA0AA4", Offset = "0xDA0AA4", VA = "0xDA0AA4")]
			set
			{
			}
		}

		[Token(Token = "0x1700025F")]
		public bool allowTouchInput
		{
			[Token(Token = "0x6000458")]
			[Address(RVA = "0xDA0AB0", Offset = "0xDA0AB0", VA = "0xDA0AB0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000459")]
			[Address(RVA = "0xDA0AB8", Offset = "0xDA0AB8", VA = "0xDA0AB8")]
			set
			{
			}
		}

		[Token(Token = "0x17000260")]
		public bool deselectIfBackgroundClicked
		{
			[Token(Token = "0x600045A")]
			[Address(RVA = "0xDA0AC4", Offset = "0xDA0AC4", VA = "0xDA0AC4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600045B")]
			[Address(RVA = "0xDA0ACC", Offset = "0xDA0ACC", VA = "0xDA0ACC")]
			set
			{
			}
		}

		[Token(Token = "0x17000261")]
		private bool deselectBeforeSelecting
		{
			[Token(Token = "0x600045C")]
			[Address(RVA = "0xDA0AD8", Offset = "0xDA0AD8", VA = "0xDA0AD8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600045D")]
			[Address(RVA = "0xDA0AE0", Offset = "0xDA0AE0", VA = "0xDA0AE0")]
			set
			{
			}
		}

		[Token(Token = "0x17000262")]
		public bool SetActionsById
		{
			[Token(Token = "0x600045E")]
			[Address(RVA = "0xDA0AEC", Offset = "0xDA0AEC", VA = "0xDA0AEC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600045F")]
			[Address(RVA = "0xDA0AF4", Offset = "0xDA0AF4", VA = "0xDA0AF4")]
			set
			{
			}
		}

		[Token(Token = "0x17000263")]
		public int HorizontalActionId
		{
			[Token(Token = "0x6000460")]
			[Address(RVA = "0xDA0B18", Offset = "0xDA0B18", VA = "0xDA0B18")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000461")]
			[Address(RVA = "0xDA0B20", Offset = "0xDA0B20", VA = "0xDA0B20")]
			set
			{
			}
		}

		[Token(Token = "0x17000264")]
		public int VerticalActionId
		{
			[Token(Token = "0x6000462")]
			[Address(RVA = "0xDA0C74", Offset = "0xDA0C74", VA = "0xDA0C74")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000463")]
			[Address(RVA = "0xDA0C7C", Offset = "0xDA0C7C", VA = "0xDA0C7C")]
			set
			{
			}
		}

		[Token(Token = "0x17000265")]
		public int SubmitActionId
		{
			[Token(Token = "0x6000464")]
			[Address(RVA = "0xDA0DD0", Offset = "0xDA0DD0", VA = "0xDA0DD0")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000465")]
			[Address(RVA = "0xDA0DD8", Offset = "0xDA0DD8", VA = "0xDA0DD8")]
			set
			{
			}
		}

		[Token(Token = "0x17000266")]
		public int CancelActionId
		{
			[Token(Token = "0x6000466")]
			[Address(RVA = "0xDA0F2C", Offset = "0xDA0F2C", VA = "0xDA0F2C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000467")]
			[Address(RVA = "0xDA0F34", Offset = "0xDA0F34", VA = "0xDA0F34")]
			set
			{
			}
		}

		[Token(Token = "0x17000267")]
		protected override bool isMouseSupported
		{
			[Token(Token = "0x6000468")]
			[Address(RVA = "0xDA1088", Offset = "0xDA1088", VA = "0xDA1088", Slot = "26")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000268")]
		private bool isTouchAllowed
		{
			[Token(Token = "0x6000469")]
			[Address(RVA = "0xDA10D8", Offset = "0xDA10D8", VA = "0xDA10D8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000269")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x6FD614", Offset = "0x6FD614")]
		public bool allowActivationOnMobileDevice
		{
			[Token(Token = "0x600046A")]
			[Address(RVA = "0xDA10E0", Offset = "0xDA10E0", VA = "0xDA10E0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600046B")]
			[Address(RVA = "0xDA10E8", Offset = "0xDA10E8", VA = "0xDA10E8")]
			set
			{
			}
		}

		[Token(Token = "0x1700026A")]
		public bool forceModuleActive
		{
			[Token(Token = "0x600046C")]
			[Address(RVA = "0xDA10F4", Offset = "0xDA10F4", VA = "0xDA10F4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600046D")]
			[Address(RVA = "0xDA10FC", Offset = "0xDA10FC", VA = "0xDA10FC")]
			set
			{
			}
		}

		[Token(Token = "0x1700026B")]
		public float inputActionsPerSecond
		{
			[Token(Token = "0x600046E")]
			[Address(RVA = "0xDA1108", Offset = "0xDA1108", VA = "0xDA1108")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600046F")]
			[Address(RVA = "0xDA1110", Offset = "0xDA1110", VA = "0xDA1110")]
			set
			{
			}
		}

		[Token(Token = "0x1700026C")]
		public float repeatDelay
		{
			[Token(Token = "0x6000470")]
			[Address(RVA = "0xDA1118", Offset = "0xDA1118", VA = "0xDA1118")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000471")]
			[Address(RVA = "0xDA1120", Offset = "0xDA1120", VA = "0xDA1120")]
			set
			{
			}
		}

		[Token(Token = "0x1700026D")]
		public string horizontalAxis
		{
			[Token(Token = "0x6000472")]
			[Address(RVA = "0xDA1128", Offset = "0xDA1128", VA = "0xDA1128")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000473")]
			[Address(RVA = "0xDA1130", Offset = "0xDA1130", VA = "0xDA1130")]
			set
			{
			}
		}

		[Token(Token = "0x1700026E")]
		public string verticalAxis
		{
			[Token(Token = "0x6000474")]
			[Address(RVA = "0xDA122C", Offset = "0xDA122C", VA = "0xDA122C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000475")]
			[Address(RVA = "0xDA1234", Offset = "0xDA1234", VA = "0xDA1234")]
			set
			{
			}
		}

		[Token(Token = "0x1700026F")]
		public string submitButton
		{
			[Token(Token = "0x6000476")]
			[Address(RVA = "0xDA1330", Offset = "0xDA1330", VA = "0xDA1330")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000477")]
			[Address(RVA = "0xDA1338", Offset = "0xDA1338", VA = "0xDA1338")]
			set
			{
			}
		}

		[Token(Token = "0x17000270")]
		public string cancelButton
		{
			[Token(Token = "0x6000478")]
			[Address(RVA = "0xDA1434", Offset = "0xDA1434", VA = "0xDA1434")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000479")]
			[Address(RVA = "0xDA143C", Offset = "0xDA143C", VA = "0xDA143C")]
			set
			{
			}
		}

		[Token(Token = "0x600047A")]
		[Address(RVA = "0xDA1538", Offset = "0xDA1538", VA = "0xDA1538")]
		private RewiredStandaloneInputModule()
		{
		}

		[Token(Token = "0x600047B")]
		[Address(RVA = "0xDA1670", Offset = "0xDA1670", VA = "0xDA1670", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x600047C")]
		[Address(RVA = "0xDA1A44", Offset = "0xDA1A44", VA = "0xDA1A44", Slot = "24")]
		public override void UpdateModule()
		{
		}

		[Token(Token = "0x600047D")]
		[Address(RVA = "0xDA1CBC", Offset = "0xDA1CBC", VA = "0xDA1CBC", Slot = "25")]
		public override bool IsModuleSupported()
		{
			return default(bool);
		}

		[Token(Token = "0x600047E")]
		[Address(RVA = "0xDA1CC4", Offset = "0xDA1CC4", VA = "0xDA1CC4", Slot = "21")]
		public override bool ShouldActivateModule()
		{
			return default(bool);
		}

		[Token(Token = "0x600047F")]
		[Address(RVA = "0xDA2590", Offset = "0xDA2590", VA = "0xDA2590", Slot = "23")]
		public override void ActivateModule()
		{
		}

		[Token(Token = "0x6000480")]
		[Address(RVA = "0xDA2678", Offset = "0xDA2678", VA = "0xDA2678", Slot = "22")]
		public override void DeactivateModule()
		{
		}

		[Token(Token = "0x6000481")]
		[Address(RVA = "0xDA26A0", Offset = "0xDA26A0", VA = "0xDA26A0", Slot = "17")]
		public override void Process()
		{
		}

		[Token(Token = "0x6000482")]
		[Address(RVA = "0xDA2F2C", Offset = "0xDA2F2C", VA = "0xDA2F2C")]
		private bool ProcessTouchEvents()
		{
			return default(bool);
		}

		[Token(Token = "0x6000483")]
		[Address(RVA = "0xDA3334", Offset = "0xDA3334", VA = "0xDA3334")]
		private void ProcessTouchPress(PointerEventData pointerEvent, bool pressed, bool released)
		{
		}

		[Token(Token = "0x6000484")]
		[Address(RVA = "0xDA2C50", Offset = "0xDA2C50", VA = "0xDA2C50")]
		private bool SendSubmitEventToSelectedObject()
		{
			return default(bool);
		}

		[Token(Token = "0x6000485")]
		[Address(RVA = "0xDA3D24", Offset = "0xDA3D24", VA = "0xDA3D24")]
		private Vector2 GetRawMoveVector()
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000486")]
		[Address(RVA = "0xDA2960", Offset = "0xDA2960", VA = "0xDA2960")]
		private bool SendMoveEventToSelectedObject()
		{
			return default(bool);
		}

		[Token(Token = "0x6000487")]
		[Address(RVA = "0xDA404C", Offset = "0xDA404C", VA = "0xDA404C")]
		private void CheckButtonOrKeyMovement(out bool downHorizontal, out bool downVertical)
		{
		}

		[Token(Token = "0x6000488")]
		[Address(RVA = "0xDA31E4", Offset = "0xDA31E4", VA = "0xDA31E4")]
		private void ProcessMouseEvents()
		{
		}

		[Token(Token = "0x6000489")]
		[Address(RVA = "0xDA41EC", Offset = "0xDA41EC", VA = "0xDA41EC")]
		private void ProcessMouseEvent(int playerId, int pointerIndex)
		{
		}

		[Token(Token = "0x600048A")]
		[Address(RVA = "0xDA27FC", Offset = "0xDA27FC", VA = "0xDA27FC")]
		private bool SendUpdateEventToSelectedObject()
		{
			return default(bool);
		}

		[Token(Token = "0x600048B")]
		[Address(RVA = "0xDA4550", Offset = "0xDA4550", VA = "0xDA4550")]
		private void ProcessMousePress(MouseButtonEventData data)
		{
		}

		[Token(Token = "0x600048C")]
		[Address(RVA = "0xDA3B44", Offset = "0xDA3B44", VA = "0xDA3B44")]
		private void HandleMouseTouchDeselectionOnSelectionChanged(GameObject currentOverGo, BaseEventData pointerEvent)
		{
		}

		[Token(Token = "0x600048D")]
		[Address(RVA = "0xDA4C84", Offset = "0xDA4C84", VA = "0xDA4C84")]
		private void OnApplicationFocus(bool hasFocus)
		{
		}

		[Token(Token = "0x600048E")]
		[Address(RVA = "0xDA1BE4", Offset = "0xDA1BE4", VA = "0xDA1BE4")]
		private bool ShouldIgnoreEventsOnNoFocus()
		{
			return default(bool);
		}

		[Token(Token = "0x600048F")]
		[Address(RVA = "0xDA4C90", Offset = "0xDA4C90", VA = "0xDA4C90", Slot = "8")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6000490")]
		[Address(RVA = "0xDA4DC4", Offset = "0xDA4DC4", VA = "0xDA4DC4", Slot = "27")]
		protected override bool IsDefaultPlayer(int playerId)
		{
			return default(bool);
		}

		[Token(Token = "0x6000491")]
		[Address(RVA = "0xDA183C", Offset = "0xDA183C", VA = "0xDA183C")]
		private void InitializeRewired()
		{
		}

		[Token(Token = "0x6000492")]
		[Address(RVA = "0xDA02DC", Offset = "0xDA02DC", VA = "0xDA02DC")]
		private void SetupRewiredVars()
		{
		}

		[Token(Token = "0x6000493")]
		[Address(RVA = "0xDA5240", Offset = "0xDA5240", VA = "0xDA5240")]
		private void SetUpRewiredPlayerMice()
		{
		}

		[Token(Token = "0x6000494")]
		[Address(RVA = "0xDA4F8C", Offset = "0xDA4F8C", VA = "0xDA4F8C")]
		private void SetUpRewiredActions()
		{
		}

		[Token(Token = "0x6000495")]
		[Address(RVA = "0xDA3FF4", Offset = "0xDA3FF4", VA = "0xDA3FF4")]
		private bool GetButton(Player player, int actionId)
		{
			return default(bool);
		}

		[Token(Token = "0x6000496")]
		[Address(RVA = "0xDA217C", Offset = "0xDA217C", VA = "0xDA217C")]
		private bool GetButtonDown(Player player, int actionId)
		{
			return default(bool);
		}

		[Token(Token = "0x6000497")]
		[Address(RVA = "0xDA4020", Offset = "0xDA4020", VA = "0xDA4020")]
		private bool GetNegativeButton(Player player, int actionId)
		{
			return default(bool);
		}

		[Token(Token = "0x6000498")]
		[Address(RVA = "0xDA21A8", Offset = "0xDA21A8", VA = "0xDA21A8")]
		private bool GetNegativeButtonDown(Player player, int actionId)
		{
			return default(bool);
		}

		[Token(Token = "0x6000499")]
		[Address(RVA = "0xDA21D4", Offset = "0xDA21D4", VA = "0xDA21D4")]
		private float GetAxis(Player player, int actionId)
		{
			return default(float);
		}

		[Token(Token = "0x600049A")]
		[Address(RVA = "0xDA1B18", Offset = "0xDA1B18", VA = "0xDA1B18")]
		private void CheckEditorRecompile()
		{
		}

		[Token(Token = "0x600049B")]
		[Address(RVA = "0xDA53B8", Offset = "0xDA53B8", VA = "0xDA53B8")]
		private void OnEditorRecompile()
		{
		}

		[Token(Token = "0x600049C")]
		[Address(RVA = "0xDA53C4", Offset = "0xDA53C4", VA = "0xDA53C4")]
		private void ClearRewiredVars()
		{
		}

		[Token(Token = "0x600049D")]
		[Address(RVA = "0xDA2200", Offset = "0xDA2200", VA = "0xDA2200")]
		private bool DidAnyMouseMove()
		{
			return default(bool);
		}

		[Token(Token = "0x600049E")]
		[Address(RVA = "0xDA23D0", Offset = "0xDA23D0", VA = "0xDA23D0")]
		private bool GetMouseButtonDownOnAnyMouse(int buttonIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x600049F")]
		[Address(RVA = "0xDA5400", Offset = "0xDA5400", VA = "0xDA5400")]
		private void OnRewiredInitialized()
		{
		}

		[Token(Token = "0x60004A0")]
		[Address(RVA = "0xDA5404", Offset = "0xDA5404", VA = "0xDA5404")]
		private void OnRewiredShutDown()
		{
		}
	}
}
namespace Rewired.UI.ControlMapper
{
	[Token(Token = "0x2000058")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x6EF4C0", Offset = "0x6EF4C0")]
	public class ButtonInfo : UIElementInfo
	{
		[Token(Token = "0x60004A4")]
		[Address(RVA = "0x8DFC50", Offset = "0x8DFC50", VA = "0x8DFC50")]
		public ButtonInfo()
		{
		}
	}
	[Token(Token = "0x2000059")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x6EF4F8", Offset = "0x6EF4F8")]
	public class CalibrationWindow : Window
	{
		[Token(Token = "0x200005A")]
		public enum ButtonIdentifier
		{
			[Token(Token = "0x40002F1")]
			Done,
			[Token(Token = "0x40002F2")]
			Cancel,
			[Token(Token = "0x40002F3")]
			Default,
			[Token(Token = "0x40002F4")]
			Calibrate
		}

		[Token(Token = "0x200005B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EF530", Offset = "0x6EF530")]
		private sealed class <>c__DisplayClass41_0
		{
			[Token(Token = "0x40002F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int index;

			[Token(Token = "0x40002F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Button button;

			[Token(Token = "0x40002F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CalibrationWindow <>4__this;

			[Token(Token = "0x60004C8")]
			[Address(RVA = "0x91ABCC", Offset = "0x91ABCC", VA = "0x91ABCC")]
			public <>c__DisplayClass41_0()
			{
			}

			[Token(Token = "0x60004C9")]
			[Address(RVA = "0x91ABD4", Offset = "0x91ABD4", VA = "0x91ABD4")]
			internal void <SetJoystick>b__0()
			{
			}
		}

		[Token(Token = "0x40002CC")]
		private const float minSensitivityOtherAxes = 0.1f;

		[Token(Token = "0x40002CD")]
		private const float maxDeadzone = 0.8f;

		[Token(Token = "0x40002CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private RectTransform rightContentContainer;

		[Token(Token = "0x40002CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private RectTransform valueDisplayGroup;

		[Token(Token = "0x40002D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private RectTransform calibratedValueMarker;

		[Token(Token = "0x40002D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private RectTransform rawValueMarker;

		[Token(Token = "0x40002D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private RectTransform calibratedZeroMarker;

		[Token(Token = "0x40002D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private RectTransform deadzoneArea;

		[Token(Token = "0x40002D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private UnityEngine.UI.Slider deadzoneSlider;

		[Token(Token = "0x40002D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private UnityEngine.UI.Slider zeroSlider;

		[Token(Token = "0x40002D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private UnityEngine.UI.Slider sensitivitySlider;

		[Token(Token = "0x40002D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private Toggle invertToggle;

		[Token(Token = "0x40002D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private RectTransform axisScrollAreaContent;

		[Token(Token = "0x40002D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private Button doneButton;

		[Token(Token = "0x40002DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private Button calibrateButton;

		[Token(Token = "0x40002DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		private TMP_Text doneButtonLabel;

		[Token(Token = "0x40002DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		private TMP_Text cancelButtonLabel;

		[Token(Token = "0x40002DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		private TMP_Text defaultButtonLabel;

		[Token(Token = "0x40002DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		private TMP_Text deadzoneSliderLabel;

		[Token(Token = "0x40002DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[SerializeField]
		private TMP_Text zeroSliderLabel;

		[Token(Token = "0x40002E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[SerializeField]
		private TMP_Text sensitivitySliderLabel;

		[Token(Token = "0x40002E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[SerializeField]
		private TMP_Text invertToggleLabel;

		[Token(Token = "0x40002E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[SerializeField]
		private TMP_Text calibrateButtonLabel;

		[Token(Token = "0x40002E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[SerializeField]
		private GameObject axisButtonPrefab;

		[Token(Token = "0x40002E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private Joystick joystick;

		[Token(Token = "0x40002E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private string origCalibrationData;

		[Token(Token = "0x40002E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private int selectedAxis;

		[Token(Token = "0x40002E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private AxisCalibrationData origSelectedAxisCalibrationData;

		[Token(Token = "0x40002E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private float displayAreaWidth;

		[Token(Token = "0x40002E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		private List<Button> axisButtons;

		[Token(Token = "0x40002EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		private Dictionary<int, Action<int>> buttonCallbacks;

		[Token(Token = "0x40002EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		private int playerId;

		[Token(Token = "0x40002EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		private RewiredStandaloneInputModule rewiredStandaloneInputModule;

		[Token(Token = "0x40002ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		private int menuHorizActionId;

		[Token(Token = "0x40002EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
		private int menuVertActionId;

		[Token(Token = "0x40002EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		private float minSensitivity;

		[Token(Token = "0x17000271")]
		private bool axisSelected
		{
			[Token(Token = "0x60004A5")]
			[Address(RVA = "0x8E13B4", Offset = "0x8E13B4", VA = "0x8E13B4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000272")]
		private AxisCalibration axisCalibration
		{
			[Token(Token = "0x60004A6")]
			[Address(RVA = "0x8E1408", Offset = "0x8E1408", VA = "0x8E1408")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60004A7")]
		[Address(RVA = "0x8E145C", Offset = "0x8E145C", VA = "0x8E145C", Slot = "5")]
		public override void Initialize(int id, Func<int, bool> isFocusedCallback)
		{
		}

		[Token(Token = "0x60004A8")]
		[Address(RVA = "0x8E1C34", Offset = "0x8E1C34", VA = "0x8E1C34")]
		public void SetJoystick(int playerId, Joystick joystick)
		{
		}

		[Token(Token = "0x60004A9")]
		[Address(RVA = "0x8E2604", Offset = "0x8E2604", VA = "0x8E2604")]
		public void SetButtonCallback(ButtonIdentifier buttonIdentifier, Action<int> callback)
		{
		}

		[Token(Token = "0x60004AA")]
		[Address(RVA = "0x8E26F0", Offset = "0x8E26F0", VA = "0x8E26F0", Slot = "9")]
		public override void Cancel()
		{
		}

		[Token(Token = "0x60004AB")]
		[Address(RVA = "0x8E27B8", Offset = "0x8E27B8", VA = "0x8E27B8", Slot = "4")]
		protected override void Update()
		{
		}

		[Token(Token = "0x60004AC")]
		[Address(RVA = "0x8E27F0", Offset = "0x8E27F0", VA = "0x8E27F0")]
		public void OnDone()
		{
		}

		[Token(Token = "0x60004AD")]
		[Address(RVA = "0x8E2890", Offset = "0x8E2890", VA = "0x8E2890")]
		public void OnCancel()
		{
		}

		[Token(Token = "0x60004AE")]
		[Address(RVA = "0x8E289C", Offset = "0x8E289C", VA = "0x8E289C")]
		public void OnRestoreDefault()
		{
		}

		[Token(Token = "0x60004AF")]
		[Address(RVA = "0x8E2900", Offset = "0x8E2900", VA = "0x8E2900")]
		public void OnCalibrate()
		{
		}

		[Token(Token = "0x60004B0")]
		[Address(RVA = "0x8E29A0", Offset = "0x8E29A0", VA = "0x8E29A0")]
		public void OnInvert(bool state)
		{
		}

		[Token(Token = "0x60004B1")]
		[Address(RVA = "0x8E29E8", Offset = "0x8E29E8", VA = "0x8E29E8")]
		public void OnZeroValueChange(float value)
		{
		}

		[Token(Token = "0x60004B2")]
		[Address(RVA = "0x8E2AE8", Offset = "0x8E2AE8", VA = "0x8E2AE8")]
		public void OnZeroCancel()
		{
		}

		[Token(Token = "0x60004B3")]
		[Address(RVA = "0x8E2B44", Offset = "0x8E2B44", VA = "0x8E2B44")]
		public void OnDeadzoneValueChange(float value)
		{
		}

		[Token(Token = "0x60004B4")]
		[Address(RVA = "0x8E2CC4", Offset = "0x8E2CC4", VA = "0x8E2CC4")]
		public void OnDeadzoneCancel()
		{
		}

		[Token(Token = "0x60004B5")]
		[Address(RVA = "0x8E2D24", Offset = "0x8E2D24", VA = "0x8E2D24")]
		public void OnSensitivityValueChange(float value)
		{
		}

		[Token(Token = "0x60004B6")]
		[Address(RVA = "0x8E2E34", Offset = "0x8E2E34", VA = "0x8E2E34")]
		public void OnSensitivityCancel(float value)
		{
		}

		[Token(Token = "0x60004B7")]
		[Address(RVA = "0x8E2E88", Offset = "0x8E2E88", VA = "0x8E2E88")]
		public void OnAxisScrollRectScroll(Vector2 pos)
		{
		}

		[Token(Token = "0x60004B8")]
		[Address(RVA = "0x8E2E8C", Offset = "0x8E2E8C", VA = "0x8E2E8C")]
		private void OnAxisSelected(int axisIndex, Button button)
		{
		}

		[Token(Token = "0x60004B9")]
		[Address(RVA = "0x8E27EC", Offset = "0x8E27EC", VA = "0x8E27EC")]
		private void UpdateDisplay()
		{
		}

		[Token(Token = "0x60004BA")]
		[Address(RVA = "0x8E25E0", Offset = "0x8E25E0", VA = "0x8E25E0")]
		private void Redraw()
		{
		}

		[Token(Token = "0x60004BB")]
		[Address(RVA = "0x8E24AC", Offset = "0x8E24AC", VA = "0x8E24AC")]
		private void RefreshControls()
		{
		}

		[Token(Token = "0x60004BC")]
		[Address(RVA = "0x8E2BF0", Offset = "0x8E2BF0", VA = "0x8E2BF0")]
		private void RedrawDeadzone()
		{
		}

		[Token(Token = "0x60004BD")]
		[Address(RVA = "0x8E2A48", Offset = "0x8E2A48", VA = "0x8E2A48")]
		private void RedrawCalibratedZero()
		{
		}

		[Token(Token = "0x60004BE")]
		[Address(RVA = "0x8E2EE0", Offset = "0x8E2EE0", VA = "0x8E2EE0")]
		private void RedrawValueMarkers()
		{
		}

		[Token(Token = "0x60004BF")]
		[Address(RVA = "0x8E2294", Offset = "0x8E2294", VA = "0x8E2294")]
		private void SelectAxis(int index)
		{
		}

		[Token(Token = "0x60004C0")]
		[Address(RVA = "0x8E3118", Offset = "0x8E3118", VA = "0x8E3118", Slot = "6")]
		public override void TakeInputFocus()
		{
		}

		[Token(Token = "0x60004C1")]
		[Address(RVA = "0x8E303C", Offset = "0x8E303C", VA = "0x8E303C")]
		private void SetMinSensitivity()
		{
		}

		[Token(Token = "0x60004C2")]
		[Address(RVA = "0x8E3160", Offset = "0x8E3160", VA = "0x8E3160")]
		private bool IsMenuAxis(int actionId, int axisIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x60004C3")]
		[Address(RVA = "0x8E35FC", Offset = "0x8E35FC", VA = "0x8E35FC")]
		private void GetAxisButtonDeadZone(int playerId, int actionId, ref float value)
		{
		}

		[Token(Token = "0x60004C4")]
		[Address(RVA = "0x8E2FF4", Offset = "0x8E2FF4", VA = "0x8E2FF4")]
		private float GetSliderSensitivity(AxisCalibration axisCalibration)
		{
			return default(float);
		}

		[Token(Token = "0x60004C5")]
		[Address(RVA = "0x8E2D80", Offset = "0x8E2D80", VA = "0x8E2D80")]
		public void SetSensitivity(AxisCalibration axisCalibration, float sliderValue)
		{
		}

		[Token(Token = "0x60004C6")]
		[Address(RVA = "0x8E36DC", Offset = "0x8E36DC", VA = "0x8E36DC")]
		private static float ProcessPowerValue(float value, float minValue, float maxValue)
		{
			return default(float);
		}

		[Token(Token = "0x60004C7")]
		[Address(RVA = "0x8E3744", Offset = "0x8E3744", VA = "0x8E3744")]
		public CalibrationWindow()
		{
		}
	}
	[Token(Token = "0x200005C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x6EF540", Offset = "0x6EF540")]
	public class CanvasScalerExt : CanvasScaler
	{
		[Token(Token = "0x60004CA")]
		[Address(RVA = "0x8E5228", Offset = "0x8E5228", VA = "0x8E5228")]
		public void ForceRefresh()
		{
		}

		[Token(Token = "0x60004CB")]
		[Address(RVA = "0x8E5238", Offset = "0x8E5238", VA = "0x8E5238")]
		public CanvasScalerExt()
		{
		}
	}
	[Token(Token = "0x200005D")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x6EF578", Offset = "0x6EF578")]
	public class CanvasScalerFitter : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200005E")]
		private class BreakPoint
		{
			[Token(Token = "0x40002FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			public string name;

			[Token(Token = "0x40002FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[SerializeField]
			public float screenAspectRatio;

			[Token(Token = "0x40002FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[SerializeField]
			public Vector2 referenceResolution;

			[Token(Token = "0x60004D0")]
			[Address(RVA = "0x91ABFC", Offset = "0x91ABFC", VA = "0x91ABFC")]
			public BreakPoint()
			{
			}
		}

		[Token(Token = "0x40002F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private BreakPoint[] breakPoints;

		[Token(Token = "0x40002F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private CanvasScalerExt canvasScaler;

		[Token(Token = "0x40002FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int screenWidth;

		[Token(Token = "0x40002FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int screenHeight;

		[Token(Token = "0x40002FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private System.Action ScreenSizeChanged;

		[Token(Token = "0x60004CC")]
		[Address(RVA = "0x8E5240", Offset = "0x8E5240", VA = "0x8E5240")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60004CD")]
		[Address(RVA = "0x8E52B4", Offset = "0x8E52B4", VA = "0x8E52B4")]
		private void Update()
		{
		}

		[Token(Token = "0x60004CE")]
		[Address(RVA = "0x8E5320", Offset = "0x8E5320", VA = "0x8E5320")]
		private void UpdateSize()
		{
		}

		[Token(Token = "0x60004CF")]
		[Address(RVA = "0x8E5464", Offset = "0x8E5464", VA = "0x8E5464")]
		public CanvasScalerFitter()
		{
		}
	}
	[Token(Token = "0x200005F")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x6EF5D8", Offset = "0x6EF5D8")]
	public class ControlMapper : MonoBehaviour
	{
		[Token(Token = "0x2000060")]
		private abstract class GUIElement
		{
			[Token(Token = "0x4000368")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public readonly GameObject gameObject;

			[Token(Token = "0x4000369")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			protected readonly TMP_Text text;

			[Token(Token = "0x400036A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public readonly Selectable selectable;

			[Token(Token = "0x400036B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			protected readonly UIElementInfo uiElementInfo;

			[Token(Token = "0x400036C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			protected bool permanentStateSet;

			[Token(Token = "0x400036D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			protected readonly List<GUIElement> children;

			[Token(Token = "0x400036E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F3F10", Offset = "0x6F3F10")]
			private RectTransform <rectTransform>k__BackingField;

			[Token(Token = "0x170002AE")]
			public RectTransform rectTransform
			{
				[Token(Token = "0x60005EF")]
				[Address(RVA = "0x91C79C", Offset = "0x91C79C", VA = "0x91C79C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F9798", Offset = "0x6F9798")]
				get
				{
					return null;
				}
				[Token(Token = "0x60005F0")]
				[Address(RVA = "0x91C7A4", Offset = "0x91C7A4", VA = "0x91C7A4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F97A8", Offset = "0x6F97A8")]
				private set
				{
				}
			}

			[Token(Token = "0x60005F1")]
			[Address(RVA = "0x91C1B4", Offset = "0x91C1B4", VA = "0x91C1B4")]
			public GUIElement(GameObject gameObject)
			{
			}

			[Token(Token = "0x60005F2")]
			[Address(RVA = "0x91C430", Offset = "0x91C430", VA = "0x91C430")]
			public GUIElement(Selectable selectable, TMP_Text label)
			{
			}

			[Token(Token = "0x60005F3")]
			[Address(RVA = "0x91C7AC", Offset = "0x91C7AC", VA = "0x91C7AC", Slot = "4")]
			public virtual void SetInteractible(bool state, bool playTransition)
			{
			}

			[Token(Token = "0x60005F4")]
			[Address(RVA = "0x91C7C4", Offset = "0x91C7C4", VA = "0x91C7C4", Slot = "5")]
			public virtual void SetInteractible(bool state, bool playTransition, bool permanent)
			{
			}

			[Token(Token = "0x60005F5")]
			[Address(RVA = "0x91C958", Offset = "0x91C958", VA = "0x91C958", Slot = "6")]
			public virtual void SetTextWidth(int value)
			{
			}

			[Token(Token = "0x60005F6")]
			[Address(RVA = "0x91CA90", Offset = "0x91CA90", VA = "0x91CA90", Slot = "7")]
			public virtual void SetFirstChildObjectWidth(LayoutElementSizeType type, int value)
			{
			}

			[Token(Token = "0x60005F7")]
			[Address(RVA = "0x91CC14", Offset = "0x91CC14", VA = "0x91CC14", Slot = "8")]
			public virtual void SetLabel(string label)
			{
			}

			[Token(Token = "0x60005F8")]
			[Address(RVA = "0x91CCC0", Offset = "0x91CCC0", VA = "0x91CCC0", Slot = "9")]
			public virtual string GetLabel()
			{
				return null;
			}

			[Token(Token = "0x60005F9")]
			[Address(RVA = "0x91CD78", Offset = "0x91CD78", VA = "0x91CD78", Slot = "10")]
			public virtual void AddChild(GUIElement child)
			{
			}

			[Token(Token = "0x60005FA")]
			[Address(RVA = "0x91C5C8", Offset = "0x91C5C8", VA = "0x91C5C8")]
			public void SetElementInfoData(string identifier, int intData)
			{
			}

			[Token(Token = "0x60005FB")]
			[Address(RVA = "0x91CDDC", Offset = "0x91CDDC", VA = "0x91CDDC", Slot = "11")]
			public virtual void SetActive(bool state)
			{
			}

			[Token(Token = "0x60005FC")]
			[Address(RVA = "0x91CE80", Offset = "0x91CE80", VA = "0x91CE80", Slot = "12")]
			protected virtual bool Init()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000061")]
		private class GUIButton : GUIElement
		{
			[Token(Token = "0x2000062")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EF610", Offset = "0x6EF610")]
			private sealed class <>c__DisplayClass7_0
			{
				[Token(Token = "0x400036F")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public Action<ButtonInfo> callback;

				[Token(Token = "0x4000370")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				public GUIButton <>4__this;

				[Token(Token = "0x6000603")]
				[Address(RVA = "0x10820D0", Offset = "0x10820D0", VA = "0x10820D0")]
				public <>c__DisplayClass7_0()
				{
				}

				[Token(Token = "0x6000604")]
				[Address(RVA = "0x10820D8", Offset = "0x10820D8", VA = "0x10820D8")]
				internal void <SetOnClickCallback>b__0()
				{
				}
			}

			[Token(Token = "0x170002AF")]
			protected Button button
			{
				[Token(Token = "0x60005FD")]
				[Address(RVA = "0x91C088", Offset = "0x91C088", VA = "0x91C088")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002B0")]
			public ButtonInfo buttonInfo
			{
				[Token(Token = "0x60005FE")]
				[Address(RVA = "0x91C108", Offset = "0x91C108", VA = "0x91C108")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60005FF")]
			[Address(RVA = "0x91C188", Offset = "0x91C188", VA = "0x91C188")]
			public GUIButton(GameObject gameObject)
			{
			}

			[Token(Token = "0x6000600")]
			[Address(RVA = "0x91C404", Offset = "0x91C404", VA = "0x91C404")]
			public GUIButton(Button button, TMP_Text label)
			{
			}

			[Token(Token = "0x6000601")]
			[Address(RVA = "0x91C5C4", Offset = "0x91C5C4", VA = "0x91C5C4")]
			public void SetButtonInfoData(string identifier, int intData)
			{
			}

			[Token(Token = "0x6000602")]
			[Address(RVA = "0x91C668", Offset = "0x91C668", VA = "0x91C668")]
			public void SetOnClickCallback(Action<ButtonInfo> callback)
			{
			}
		}

		[Token(Token = "0x2000063")]
		private class GUIInputField : GUIElement
		{
			[Token(Token = "0x2000064")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EF620", Offset = "0x6EF620")]
			private sealed class <>c__DisplayClass19_0
			{
				[Token(Token = "0x4000372")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public Action<InputFieldInfo> callback;

				[Token(Token = "0x4000373")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				public GUIInputField <>4__this;

				[Token(Token = "0x6000614")]
				[Address(RVA = "0x1082144", Offset = "0x1082144", VA = "0x1082144")]
				public <>c__DisplayClass19_0()
				{
				}

				[Token(Token = "0x6000615")]
				[Address(RVA = "0x108214C", Offset = "0x108214C", VA = "0x108214C")]
				internal void <SetOnClickCallback>b__0()
				{
				}
			}

			[Token(Token = "0x4000371")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F3F20", Offset = "0x6F3F20")]
			private GUIToggle <toggle>k__BackingField;

			[Token(Token = "0x170002B1")]
			protected Button button
			{
				[Token(Token = "0x6000605")]
				[Address(RVA = "0x91D0E0", Offset = "0x91D0E0", VA = "0x91D0E0")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002B2")]
			public InputFieldInfo fieldInfo
			{
				[Token(Token = "0x6000606")]
				[Address(RVA = "0x91D160", Offset = "0x91D160", VA = "0x91D160")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002B3")]
			public bool hasToggle
			{
				[Token(Token = "0x6000607")]
				[Address(RVA = "0x91D1E0", Offset = "0x91D1E0", VA = "0x91D1E0")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x170002B4")]
			public GUIToggle toggle
			{
				[Token(Token = "0x6000608")]
				[Address(RVA = "0x91D1F0", Offset = "0x91D1F0", VA = "0x91D1F0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F97B8", Offset = "0x6F97B8")]
				get
				{
					return null;
				}
				[Token(Token = "0x6000609")]
				[Address(RVA = "0x91D1F8", Offset = "0x91D1F8", VA = "0x91D1F8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F97C8", Offset = "0x6F97C8")]
				private set
				{
				}
			}

			[Token(Token = "0x170002B5")]
			public int actionElementMapId
			{
				[Token(Token = "0x600060A")]
				[Address(RVA = "0x91D200", Offset = "0x91D200", VA = "0x91D200")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x600060B")]
				[Address(RVA = "0x91D29C", Offset = "0x91D29C", VA = "0x91D29C")]
				set
				{
				}
			}

			[Token(Token = "0x170002B6")]
			public int controllerId
			{
				[Token(Token = "0x600060C")]
				[Address(RVA = "0x91D33C", Offset = "0x91D33C", VA = "0x91D33C")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x600060D")]
				[Address(RVA = "0x91D3D8", Offset = "0x91D3D8", VA = "0x91D3D8")]
				set
				{
				}
			}

			[Token(Token = "0x600060E")]
			[Address(RVA = "0x91D478", Offset = "0x91D478", VA = "0x91D478")]
			public GUIInputField(GameObject gameObject)
			{
			}

			[Token(Token = "0x600060F")]
			[Address(RVA = "0x91D4A4", Offset = "0x91D4A4", VA = "0x91D4A4")]
			public GUIInputField(Button button, TMP_Text label)
			{
			}

			[Token(Token = "0x6000610")]
			[Address(RVA = "0x91D4D0", Offset = "0x91D4D0", VA = "0x91D4D0")]
			public void SetFieldInfoData(int actionId, AxisRange axisRange, ControllerType controllerType, int intData)
			{
			}

			[Token(Token = "0x6000611")]
			[Address(RVA = "0x91D5D0", Offset = "0x91D5D0", VA = "0x91D5D0")]
			public void SetOnClickCallback(Action<InputFieldInfo> callback)
			{
			}

			[Token(Token = "0x6000612")]
			[Address(RVA = "0x91D704", Offset = "0x91D704", VA = "0x91D704", Slot = "13")]
			public virtual void SetInteractable(bool state, bool playTransition, bool permanent)
			{
			}

			[Token(Token = "0x6000613")]
			[Address(RVA = "0x91D774", Offset = "0x91D774", VA = "0x91D774")]
			public void AddToggle(GUIToggle toggle)
			{
			}
		}

		[Token(Token = "0x2000065")]
		private class GUIToggle : GUIElement
		{
			[Token(Token = "0x2000066")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EF630", Offset = "0x6EF630")]
			private sealed class <>c__DisplayClass10_0
			{
				[Token(Token = "0x4000374")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public Action<ToggleInfo, bool> callback;

				[Token(Token = "0x4000375")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				public GUIToggle <>4__this;

				[Token(Token = "0x600061F")]
				[Address(RVA = "0x10821B8", Offset = "0x10821B8", VA = "0x10821B8")]
				public <>c__DisplayClass10_0()
				{
				}

				[Token(Token = "0x6000620")]
				[Address(RVA = "0x10821C0", Offset = "0x10821C0", VA = "0x10821C0")]
				internal void <SetOnSubmitCallback>b__0(BaseEventData data)
				{
				}
			}

			[Token(Token = "0x170002B7")]
			protected Toggle toggle
			{
				[Token(Token = "0x6000616")]
				[Address(RVA = "0x91DED4", Offset = "0x91DED4", VA = "0x91DED4")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002B8")]
			public ToggleInfo toggleInfo
			{
				[Token(Token = "0x6000617")]
				[Address(RVA = "0x91DF54", Offset = "0x91DF54", VA = "0x91DF54")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002B9")]
			public int actionElementMapId
			{
				[Token(Token = "0x6000618")]
				[Address(RVA = "0x91DFD4", Offset = "0x91DFD4", VA = "0x91DFD4")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6000619")]
				[Address(RVA = "0x91E070", Offset = "0x91E070", VA = "0x91E070")]
				set
				{
				}
			}

			[Token(Token = "0x600061A")]
			[Address(RVA = "0x91E110", Offset = "0x91E110", VA = "0x91E110")]
			public GUIToggle(GameObject gameObject)
			{
			}

			[Token(Token = "0x600061B")]
			[Address(RVA = "0x91E13C", Offset = "0x91E13C", VA = "0x91E13C")]
			public GUIToggle(Toggle toggle, TMP_Text label)
			{
			}

			[Token(Token = "0x600061C")]
			[Address(RVA = "0x91E168", Offset = "0x91E168", VA = "0x91E168")]
			public void SetToggleInfoData(int actionId, AxisRange axisRange, ControllerType controllerType, int intData)
			{
			}

			[Token(Token = "0x600061D")]
			[Address(RVA = "0x91E268", Offset = "0x91E268", VA = "0x91E268")]
			public void SetOnSubmitCallback(Action<ToggleInfo, bool> callback)
			{
			}

			[Token(Token = "0x600061E")]
			[Address(RVA = "0x91E59C", Offset = "0x91E59C", VA = "0x91E59C")]
			public void SetToggleState(bool state)
			{
			}
		}

		[Token(Token = "0x2000067")]
		private class GUILabel
		{
			[Token(Token = "0x4000376")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F3F30", Offset = "0x6F3F30")]
			private GameObject <gameObject>k__BackingField;

			[Token(Token = "0x4000377")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F3F40", Offset = "0x6F3F40")]
			private TMP_Text <text>k__BackingField;

			[Token(Token = "0x4000378")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F3F50", Offset = "0x6F3F50")]
			private RectTransform <rectTransform>k__BackingField;

			[Token(Token = "0x170002BA")]
			public GameObject gameObject
			{
				[Token(Token = "0x6000621")]
				[Address(RVA = "0x91D780", Offset = "0x91D780", VA = "0x91D780")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F97D8", Offset = "0x6F97D8")]
				get
				{
					return null;
				}
				[Token(Token = "0x6000622")]
				[Address(RVA = "0x91D788", Offset = "0x91D788", VA = "0x91D788")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F97E8", Offset = "0x6F97E8")]
				private set
				{
				}
			}

			[Token(Token = "0x170002BB")]
			private TMP_Text text
			{
				[Token(Token = "0x6000623")]
				[Address(RVA = "0x91D790", Offset = "0x91D790", VA = "0x91D790")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F97F8", Offset = "0x6F97F8")]
				get
				{
					return null;
				}
				[Token(Token = "0x6000624")]
				[Address(RVA = "0x91D798", Offset = "0x91D798", VA = "0x91D798")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F9808", Offset = "0x6F9808")]
				set
				{
				}
			}

			[Token(Token = "0x170002BC")]
			public RectTransform rectTransform
			{
				[Token(Token = "0x6000625")]
				[Address(RVA = "0x91D7A0", Offset = "0x91D7A0", VA = "0x91D7A0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F9818", Offset = "0x6F9818")]
				get
				{
					return null;
				}
				[Token(Token = "0x6000626")]
				[Address(RVA = "0x91D7A8", Offset = "0x91D7A8", VA = "0x91D7A8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F9828", Offset = "0x6F9828")]
				private set
				{
				}
			}

			[Token(Token = "0x6000627")]
			[Address(RVA = "0x91D7B0", Offset = "0x91D7B0", VA = "0x91D7B0")]
			public GUILabel(GameObject gameObject)
			{
			}

			[Token(Token = "0x6000628")]
			[Address(RVA = "0x91D9F8", Offset = "0x91D9F8", VA = "0x91D9F8")]
			public GUILabel(TMP_Text label)
			{
			}

			[Token(Token = "0x6000629")]
			[Address(RVA = "0x91DA28", Offset = "0x91DA28", VA = "0x91DA28")]
			public void SetSize(int width, int height)
			{
			}

			[Token(Token = "0x600062A")]
			[Address(RVA = "0x91DAEC", Offset = "0x91DAEC", VA = "0x91DAEC")]
			public void SetWidth(int width)
			{
			}

			[Token(Token = "0x600062B")]
			[Address(RVA = "0x91DB94", Offset = "0x91DB94", VA = "0x91DB94")]
			public void SetHeight(int height)
			{
			}

			[Token(Token = "0x600062C")]
			[Address(RVA = "0x91DC3C", Offset = "0x91DC3C", VA = "0x91DC3C")]
			public void SetLabel(string label)
			{
			}

			[Token(Token = "0x600062D")]
			[Address(RVA = "0x91DCE8", Offset = "0x91DCE8", VA = "0x91DCE8")]
			public void SetFontStyle(FontStyles style)
			{
			}

			[Token(Token = "0x600062E")]
			[Address(RVA = "0x91DD8C", Offset = "0x91DD8C", VA = "0x91DD8C")]
			public void SetTextAlignment(TextAlignmentOptions alignment)
			{
			}

			[Token(Token = "0x600062F")]
			[Address(RVA = "0x91DE30", Offset = "0x91DE30", VA = "0x91DE30")]
			public void SetActive(bool state)
			{
			}

			[Token(Token = "0x6000630")]
			[Address(RVA = "0x91D8E4", Offset = "0x91D8E4", VA = "0x91D8E4")]
			private bool Check()
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x2000068")]
		public class MappingSet
		{
			[Token(Token = "0x2000069")]
			public enum ActionListMode
			{
				[Token(Token = "0x4000380")]
				ActionCategory,
				[Token(Token = "0x4000381")]
				Action
			}

			[Token(Token = "0x4000379")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F3F60", Offset = "0x6F3F60")]
			[SerializeField]
			private int _mapCategoryId;

			[Token(Token = "0x400037A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[SerializeField]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F3FAC", Offset = "0x6F3FAC")]
			private ActionListMode _actionListMode;

			[Token(Token = "0x400037B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[SerializeField]
			private int[] _actionCategoryIds;

			[Token(Token = "0x400037C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[SerializeField]
			private int[] _actionIds;

			[Token(Token = "0x400037D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private IList<int> _actionCategoryIdsReadOnly;

			[Token(Token = "0x400037E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private IList<int> _actionIdsReadOnly;

			[Token(Token = "0x170002BD")]
			public int mapCategoryId
			{
				[Token(Token = "0x6000631")]
				[Address(RVA = "0x91FCA8", Offset = "0x91FCA8", VA = "0x91FCA8")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x170002BE")]
			public ActionListMode actionListMode
			{
				[Token(Token = "0x6000632")]
				[Address(RVA = "0x91FCB0", Offset = "0x91FCB0", VA = "0x91FCB0")]
				get
				{
					return default(ActionListMode);
				}
			}

			[Token(Token = "0x170002BF")]
			public IList<int> actionCategoryIds
			{
				[Token(Token = "0x6000633")]
				[Address(RVA = "0x91FCB8", Offset = "0x91FCB8", VA = "0x91FCB8")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002C0")]
			public IList<int> actionIds
			{
				[Token(Token = "0x6000634")]
				[Address(RVA = "0x91FD50", Offset = "0x91FD50", VA = "0x91FD50")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002C1")]
			public bool isValid
			{
				[Token(Token = "0x6000635")]
				[Address(RVA = "0x91FDE4", Offset = "0x91FDE4", VA = "0x91FDE4")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x170002C2")]
			public static MappingSet Default
			{
				[Token(Token = "0x6000638")]
				[Address(RVA = "0x91FF3C", Offset = "0x91FF3C", VA = "0x91FF3C")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000636")]
			[Address(RVA = "0x91FE74", Offset = "0x91FE74", VA = "0x91FE74")]
			public MappingSet()
			{
			}

			[Token(Token = "0x6000637")]
			[Address(RVA = "0x91FEF0", Offset = "0x91FEF0", VA = "0x91FEF0")]
			private MappingSet(int mapCategoryId, ActionListMode actionListMode, int[] actionCategoryIds, int[] actionIds)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200006A")]
		public class InputBehaviorSettings
		{
			[Token(Token = "0x4000382")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F4018", Offset = "0x6F4018")]
			private int _inputBehaviorId;

			[Token(Token = "0x4000383")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[SerializeField]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F4064", Offset = "0x6F4064")]
			private bool _showJoystickAxisSensitivity;

			[Token(Token = "0x4000384")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
			[SerializeField]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F40B0", Offset = "0x6F40B0")]
			private bool _showMouseXYAxisSensitivity;

			[Token(Token = "0x4000385")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[SerializeField]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F40FC", Offset = "0x6F40FC")]
			private string _labelLanguageKey;

			[Token(Token = "0x4000386")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[SerializeField]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F4148", Offset = "0x6F4148")]
			private string _joystickAxisSensitivityLabelLanguageKey;

			[Token(Token = "0x4000387")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[SerializeField]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F4194", Offset = "0x6F4194")]
			private string _mouseXYAxisSensitivityLabelLanguageKey;

			[Token(Token = "0x4000388")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[SerializeField]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F41E0", Offset = "0x6F41E0")]
			private Sprite _joystickAxisSensitivityIcon;

			[Token(Token = "0x4000389")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F422C", Offset = "0x6F422C")]
			[SerializeField]
			private Sprite _mouseXYAxisSensitivityIcon;

			[Token(Token = "0x400038A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			[SerializeField]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F4278", Offset = "0x6F4278")]
			private float _joystickAxisSensitivityMin;

			[Token(Token = "0x400038B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			[SerializeField]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F42C4", Offset = "0x6F42C4")]
			private float _joystickAxisSensitivityMax;

			[Token(Token = "0x400038C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			[SerializeField]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F4310", Offset = "0x6F4310")]
			private float _mouseXYAxisSensitivityMin;

			[Token(Token = "0x400038D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			[SerializeField]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F435C", Offset = "0x6F435C")]
			private float _mouseXYAxisSensitivityMax;

			[Token(Token = "0x170002C3")]
			public int inputBehaviorId
			{
				[Token(Token = "0x6000639")]
				[Address(RVA = "0x91E698", Offset = "0x91E698", VA = "0x91E698")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x170002C4")]
			public bool showJoystickAxisSensitivity
			{
				[Token(Token = "0x600063A")]
				[Address(RVA = "0x91E6A0", Offset = "0x91E6A0", VA = "0x91E6A0")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x170002C5")]
			public bool showMouseXYAxisSensitivity
			{
				[Token(Token = "0x600063B")]
				[Address(RVA = "0x91E6A8", Offset = "0x91E6A8", VA = "0x91E6A8")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x170002C6")]
			public string labelLanguageKey
			{
				[Token(Token = "0x600063C")]
				[Address(RVA = "0x91E6B0", Offset = "0x91E6B0", VA = "0x91E6B0")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002C7")]
			public string joystickAxisSensitivityLabelLanguageKey
			{
				[Token(Token = "0x600063D")]
				[Address(RVA = "0x91E6B8", Offset = "0x91E6B8", VA = "0x91E6B8")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002C8")]
			public string mouseXYAxisSensitivityLabelLanguageKey
			{
				[Token(Token = "0x600063E")]
				[Address(RVA = "0x91E6C0", Offset = "0x91E6C0", VA = "0x91E6C0")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002C9")]
			public Sprite joystickAxisSensitivityIcon
			{
				[Token(Token = "0x600063F")]
				[Address(RVA = "0x91E6C8", Offset = "0x91E6C8", VA = "0x91E6C8")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002CA")]
			public Sprite mouseXYAxisSensitivityIcon
			{
				[Token(Token = "0x6000640")]
				[Address(RVA = "0x91E6D0", Offset = "0x91E6D0", VA = "0x91E6D0")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002CB")]
			public float joystickAxisSensitivityMin
			{
				[Token(Token = "0x6000641")]
				[Address(RVA = "0x91E6D8", Offset = "0x91E6D8", VA = "0x91E6D8")]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x170002CC")]
			public float joystickAxisSensitivityMax
			{
				[Token(Token = "0x6000642")]
				[Address(RVA = "0x91E6E0", Offset = "0x91E6E0", VA = "0x91E6E0")]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x170002CD")]
			public float mouseXYAxisSensitivityMin
			{
				[Token(Token = "0x6000643")]
				[Address(RVA = "0x91E6E8", Offset = "0x91E6E8", VA = "0x91E6E8")]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x170002CE")]
			public float mouseXYAxisSensitivityMax
			{
				[Token(Token = "0x6000644")]
				[Address(RVA = "0x91E6F0", Offset = "0x91E6F0", VA = "0x91E6F0")]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x170002CF")]
			public bool isValid
			{
				[Token(Token = "0x6000645")]
				[Address(RVA = "0x91E6F8", Offset = "0x91E6F8", VA = "0x91E6F8")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x6000646")]
			[Address(RVA = "0x91E728", Offset = "0x91E728", VA = "0x91E728")]
			public InputBehaviorSettings()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200006B")]
		private class Prefabs
		{
			[Token(Token = "0x400038E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			private GameObject _button;

			[Token(Token = "0x400038F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[SerializeField]
			private GameObject _fitButton;

			[Token(Token = "0x4000390")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[SerializeField]
			private GameObject _inputGridLabel;

			[Token(Token = "0x4000391")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[SerializeField]
			private GameObject _inputGridHeaderLabel;

			[Token(Token = "0x4000392")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[SerializeField]
			private GameObject _inputGridFieldButton;

			[Token(Token = "0x4000393")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[SerializeField]
			private GameObject _inputGridFieldInvertToggle;

			[Token(Token = "0x4000394")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			[SerializeField]
			private GameObject _window;

			[Token(Token = "0x4000395")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			[SerializeField]
			private GameObject _windowTitleText;

			[Token(Token = "0x4000396")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[SerializeField]
			private GameObject _windowContentText;

			[Token(Token = "0x4000397")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			[SerializeField]
			private GameObject _fader;

			[Token(Token = "0x4000398")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			[SerializeField]
			private GameObject _calibrationWindow;

			[Token(Token = "0x4000399")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			[SerializeField]
			private GameObject _inputBehaviorsWindow;

			[Token(Token = "0x400039A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			[SerializeField]
			private GameObject _centerStickGraphic;

			[Token(Token = "0x400039B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			[SerializeField]
			private GameObject _moveStickGraphic;

			[Token(Token = "0x170002D0")]
			public GameObject button
			{
				[Token(Token = "0x6000647")]
				[Address(RVA = "0x91FFE0", Offset = "0x91FFE0", VA = "0x91FFE0")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002D1")]
			public GameObject fitButton
			{
				[Token(Token = "0x6000648")]
				[Address(RVA = "0x91FFE8", Offset = "0x91FFE8", VA = "0x91FFE8")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002D2")]
			public GameObject inputGridLabel
			{
				[Token(Token = "0x6000649")]
				[Address(RVA = "0x91FFF0", Offset = "0x91FFF0", VA = "0x91FFF0")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002D3")]
			public GameObject inputGridHeaderLabel
			{
				[Token(Token = "0x600064A")]
				[Address(RVA = "0x91FFF8", Offset = "0x91FFF8", VA = "0x91FFF8")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002D4")]
			public GameObject inputGridFieldButton
			{
				[Token(Token = "0x600064B")]
				[Address(RVA = "0x920000", Offset = "0x920000", VA = "0x920000")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002D5")]
			public GameObject inputGridFieldInvertToggle
			{
				[Token(Token = "0x600064C")]
				[Address(RVA = "0x920008", Offset = "0x920008", VA = "0x920008")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002D6")]
			public GameObject window
			{
				[Token(Token = "0x600064D")]
				[Address(RVA = "0x920010", Offset = "0x920010", VA = "0x920010")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002D7")]
			public GameObject windowTitleText
			{
				[Token(Token = "0x600064E")]
				[Address(RVA = "0x920018", Offset = "0x920018", VA = "0x920018")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002D8")]
			public GameObject windowContentText
			{
				[Token(Token = "0x600064F")]
				[Address(RVA = "0x920020", Offset = "0x920020", VA = "0x920020")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002D9")]
			public GameObject fader
			{
				[Token(Token = "0x6000650")]
				[Address(RVA = "0x920028", Offset = "0x920028", VA = "0x920028")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002DA")]
			public GameObject calibrationWindow
			{
				[Token(Token = "0x6000651")]
				[Address(RVA = "0x920030", Offset = "0x920030", VA = "0x920030")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002DB")]
			public GameObject inputBehaviorsWindow
			{
				[Token(Token = "0x6000652")]
				[Address(RVA = "0x920038", Offset = "0x920038", VA = "0x920038")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002DC")]
			public GameObject centerStickGraphic
			{
				[Token(Token = "0x6000653")]
				[Address(RVA = "0x920040", Offset = "0x920040", VA = "0x920040")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002DD")]
			public GameObject moveStickGraphic
			{
				[Token(Token = "0x6000654")]
				[Address(RVA = "0x920048", Offset = "0x920048", VA = "0x920048")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000655")]
			[Address(RVA = "0x920050", Offset = "0x920050", VA = "0x920050")]
			public bool Check()
			{
				return default(bool);
			}

			[Token(Token = "0x6000656")]
			[Address(RVA = "0x9202E8", Offset = "0x9202E8", VA = "0x9202E8")]
			public Prefabs()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200006C")]
		private class References
		{
			[Token(Token = "0x400039C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			private Canvas _canvas;

			[Token(Token = "0x400039D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[SerializeField]
			private CanvasGroup _mainCanvasGroup;

			[Token(Token = "0x400039E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[SerializeField]
			private Transform _mainContent;

			[Token(Token = "0x400039F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[SerializeField]
			private Transform _mainContentInner;

			[Token(Token = "0x40003A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[SerializeField]
			private UIGroup _playersGroup;

			[Token(Token = "0x40003A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[SerializeField]
			private Transform _controllerGroup;

			[Token(Token = "0x40003A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			[SerializeField]
			private Transform _controllerGroupLabelGroup;

			[Token(Token = "0x40003A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			[SerializeField]
			private UIGroup _controllerSettingsGroup;

			[Token(Token = "0x40003A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[SerializeField]
			private UIGroup _assignedControllersGroup;

			[Token(Token = "0x40003A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			[SerializeField]
			private Transform _settingsAndMapCategoriesGroup;

			[Token(Token = "0x40003A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			[SerializeField]
			private UIGroup _settingsGroup;

			[Token(Token = "0x40003A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			[SerializeField]
			private UIGroup _mapCategoriesGroup;

			[Token(Token = "0x40003A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			[SerializeField]
			private Transform _inputGridGroup;

			[Token(Token = "0x40003A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			[SerializeField]
			private Transform _inputGridContainer;

			[Token(Token = "0x40003AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			[SerializeField]
			private Transform _inputGridHeadersGroup;

			[Token(Token = "0x40003AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			[SerializeField]
			private Scrollbar _inputGridVScrollbar;

			[Token(Token = "0x40003AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			[SerializeField]
			private ScrollRect _inputGridScrollRect;

			[Token(Token = "0x40003AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			[SerializeField]
			private Transform _inputGridInnerGroup;

			[Token(Token = "0x40003AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			[SerializeField]
			private TMP_Text _controllerNameLabel;

			[Token(Token = "0x40003AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
			[SerializeField]
			private Button _removeControllerButton;

			[Token(Token = "0x40003B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
			[SerializeField]
			private Button _assignControllerButton;

			[Token(Token = "0x40003B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			[SerializeField]
			private Button _calibrateControllerButton;

			[Token(Token = "0x40003B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			[SerializeField]
			private Button _doneButton;

			[Token(Token = "0x40003B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
			[SerializeField]
			private Button _restoreDefaultsButton;

			[Token(Token = "0x40003B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
			[SerializeField]
			private Selectable _defaultSelection;

			[Token(Token = "0x40003B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
			[SerializeField]
			private GameObject[] _fixedSelectableUIElements;

			[Token(Token = "0x40003B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
			[SerializeField]
			private Image _mainBackgroundImage;

			[Token(Token = "0x40003B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F4638", Offset = "0x6F4638")]
			private LayoutElement <inputGridLayoutElement>k__BackingField;

			[Token(Token = "0x40003B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F4648", Offset = "0x6F4648")]
			private Transform <inputGridActionColumn>k__BackingField;

			[Token(Token = "0x40003B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F4658", Offset = "0x6F4658")]
			private Transform <inputGridKeyboardColumn>k__BackingField;

			[Token(Token = "0x40003BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F4668", Offset = "0x6F4668")]
			private Transform <inputGridMouseColumn>k__BackingField;

			[Token(Token = "0x40003BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F4678", Offset = "0x6F4678")]
			private Transform <inputGridControllerColumn>k__BackingField;

			[Token(Token = "0x40003BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F4688", Offset = "0x6F4688")]
			private Transform <inputGridHeader1>k__BackingField;

			[Token(Token = "0x40003BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F4698", Offset = "0x6F4698")]
			private Transform <inputGridHeader2>k__BackingField;

			[Token(Token = "0x40003BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F46A8", Offset = "0x6F46A8")]
			private Transform <inputGridHeader3>k__BackingField;

			[Token(Token = "0x40003BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F46B8", Offset = "0x6F46B8")]
			private Transform <inputGridHeader4>k__BackingField;

			[Token(Token = "0x170002DE")]
			public Canvas canvas
			{
				[Token(Token = "0x6000657")]
				[Address(RVA = "0x9202F0", Offset = "0x9202F0", VA = "0x9202F0")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002DF")]
			public CanvasGroup mainCanvasGroup
			{
				[Token(Token = "0x6000658")]
				[Address(RVA = "0x9202F8", Offset = "0x9202F8", VA = "0x9202F8")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002E0")]
			public Transform mainContent
			{
				[Token(Token = "0x6000659")]
				[Address(RVA = "0x920300", Offset = "0x920300", VA = "0x920300")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002E1")]
			public Transform mainContentInner
			{
				[Token(Token = "0x600065A")]
				[Address(RVA = "0x920308", Offset = "0x920308", VA = "0x920308")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002E2")]
			public UIGroup playersGroup
			{
				[Token(Token = "0x600065B")]
				[Address(RVA = "0x920310", Offset = "0x920310", VA = "0x920310")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002E3")]
			public Transform controllerGroup
			{
				[Token(Token = "0x600065C")]
				[Address(RVA = "0x920318", Offset = "0x920318", VA = "0x920318")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002E4")]
			public Transform controllerGroupLabelGroup
			{
				[Token(Token = "0x600065D")]
				[Address(RVA = "0x920320", Offset = "0x920320", VA = "0x920320")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002E5")]
			public UIGroup controllerSettingsGroup
			{
				[Token(Token = "0x600065E")]
				[Address(RVA = "0x920328", Offset = "0x920328", VA = "0x920328")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002E6")]
			public UIGroup assignedControllersGroup
			{
				[Token(Token = "0x600065F")]
				[Address(RVA = "0x920330", Offset = "0x920330", VA = "0x920330")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002E7")]
			public Transform settingsAndMapCategoriesGroup
			{
				[Token(Token = "0x6000660")]
				[Address(RVA = "0x920338", Offset = "0x920338", VA = "0x920338")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002E8")]
			public UIGroup settingsGroup
			{
				[Token(Token = "0x6000661")]
				[Address(RVA = "0x920340", Offset = "0x920340", VA = "0x920340")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002E9")]
			public UIGroup mapCategoriesGroup
			{
				[Token(Token = "0x6000662")]
				[Address(RVA = "0x920348", Offset = "0x920348", VA = "0x920348")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002EA")]
			public Transform inputGridGroup
			{
				[Token(Token = "0x6000663")]
				[Address(RVA = "0x920350", Offset = "0x920350", VA = "0x920350")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002EB")]
			public Transform inputGridContainer
			{
				[Token(Token = "0x6000664")]
				[Address(RVA = "0x920358", Offset = "0x920358", VA = "0x920358")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002EC")]
			public Transform inputGridHeadersGroup
			{
				[Token(Token = "0x6000665")]
				[Address(RVA = "0x920360", Offset = "0x920360", VA = "0x920360")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002ED")]
			public Scrollbar inputGridVScrollbar
			{
				[Token(Token = "0x6000666")]
				[Address(RVA = "0x920368", Offset = "0x920368", VA = "0x920368")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002EE")]
			public ScrollRect inputGridScrollRect
			{
				[Token(Token = "0x6000667")]
				[Address(RVA = "0x920370", Offset = "0x920370", VA = "0x920370")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002EF")]
			public Transform inputGridInnerGroup
			{
				[Token(Token = "0x6000668")]
				[Address(RVA = "0x920378", Offset = "0x920378", VA = "0x920378")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002F0")]
			public TMP_Text controllerNameLabel
			{
				[Token(Token = "0x6000669")]
				[Address(RVA = "0x920380", Offset = "0x920380", VA = "0x920380")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002F1")]
			public Button removeControllerButton
			{
				[Token(Token = "0x600066A")]
				[Address(RVA = "0x920388", Offset = "0x920388", VA = "0x920388")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002F2")]
			public Button assignControllerButton
			{
				[Token(Token = "0x600066B")]
				[Address(RVA = "0x920390", Offset = "0x920390", VA = "0x920390")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002F3")]
			public Button calibrateControllerButton
			{
				[Token(Token = "0x600066C")]
				[Address(RVA = "0x920398", Offset = "0x920398", VA = "0x920398")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002F4")]
			public Button doneButton
			{
				[Token(Token = "0x600066D")]
				[Address(RVA = "0x9203A0", Offset = "0x9203A0", VA = "0x9203A0")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002F5")]
			public Button restoreDefaultsButton
			{
				[Token(Token = "0x600066E")]
				[Address(RVA = "0x9203A8", Offset = "0x9203A8", VA = "0x9203A8")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002F6")]
			public Selectable defaultSelection
			{
				[Token(Token = "0x600066F")]
				[Address(RVA = "0x9203B0", Offset = "0x9203B0", VA = "0x9203B0")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002F7")]
			public GameObject[] fixedSelectableUIElements
			{
				[Token(Token = "0x6000670")]
				[Address(RVA = "0x9203B8", Offset = "0x9203B8", VA = "0x9203B8")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002F8")]
			public Image mainBackgroundImage
			{
				[Token(Token = "0x6000671")]
				[Address(RVA = "0x9203C0", Offset = "0x9203C0", VA = "0x9203C0")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002F9")]
			public LayoutElement inputGridLayoutElement
			{
				[Token(Token = "0x6000672")]
				[Address(RVA = "0x9203C8", Offset = "0x9203C8", VA = "0x9203C8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F9838", Offset = "0x6F9838")]
				get
				{
					return null;
				}
				[Token(Token = "0x6000673")]
				[Address(RVA = "0x9203D0", Offset = "0x9203D0", VA = "0x9203D0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F9848", Offset = "0x6F9848")]
				set
				{
				}
			}

			[Token(Token = "0x170002FA")]
			public Transform inputGridActionColumn
			{
				[Token(Token = "0x6000674")]
				[Address(RVA = "0x9203D8", Offset = "0x9203D8", VA = "0x9203D8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F9858", Offset = "0x6F9858")]
				get
				{
					return null;
				}
				[Token(Token = "0x6000675")]
				[Address(RVA = "0x9203E0", Offset = "0x9203E0", VA = "0x9203E0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F9868", Offset = "0x6F9868")]
				set
				{
				}
			}

			[Token(Token = "0x170002FB")]
			public Transform inputGridKeyboardColumn
			{
				[Token(Token = "0x6000676")]
				[Address(RVA = "0x9203E8", Offset = "0x9203E8", VA = "0x9203E8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F9878", Offset = "0x6F9878")]
				get
				{
					return null;
				}
				[Token(Token = "0x6000677")]
				[Address(RVA = "0x9203F0", Offset = "0x9203F0", VA = "0x9203F0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F9888", Offset = "0x6F9888")]
				set
				{
				}
			}

			[Token(Token = "0x170002FC")]
			public Transform inputGridMouseColumn
			{
				[Token(Token = "0x6000678")]
				[Address(RVA = "0x9203F8", Offset = "0x9203F8", VA = "0x9203F8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F9898", Offset = "0x6F9898")]
				get
				{
					return null;
				}
				[Token(Token = "0x6000679")]
				[Address(RVA = "0x920400", Offset = "0x920400", VA = "0x920400")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F98A8", Offset = "0x6F98A8")]
				set
				{
				}
			}

			[Token(Token = "0x170002FD")]
			public Transform inputGridControllerColumn
			{
				[Token(Token = "0x600067A")]
				[Address(RVA = "0x920408", Offset = "0x920408", VA = "0x920408")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F98B8", Offset = "0x6F98B8")]
				get
				{
					return null;
				}
				[Token(Token = "0x600067B")]
				[Address(RVA = "0x920410", Offset = "0x920410", VA = "0x920410")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F98C8", Offset = "0x6F98C8")]
				set
				{
				}
			}

			[Token(Token = "0x170002FE")]
			public Transform inputGridHeader1
			{
				[Token(Token = "0x600067C")]
				[Address(RVA = "0x920418", Offset = "0x920418", VA = "0x920418")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F98D8", Offset = "0x6F98D8")]
				get
				{
					return null;
				}
				[Token(Token = "0x600067D")]
				[Address(RVA = "0x920420", Offset = "0x920420", VA = "0x920420")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F98E8", Offset = "0x6F98E8")]
				set
				{
				}
			}

			[Token(Token = "0x170002FF")]
			public Transform inputGridHeader2
			{
				[Token(Token = "0x600067E")]
				[Address(RVA = "0x920428", Offset = "0x920428", VA = "0x920428")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F98F8", Offset = "0x6F98F8")]
				get
				{
					return null;
				}
				[Token(Token = "0x600067F")]
				[Address(RVA = "0x920430", Offset = "0x920430", VA = "0x920430")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F9908", Offset = "0x6F9908")]
				set
				{
				}
			}

			[Token(Token = "0x17000300")]
			public Transform inputGridHeader3
			{
				[Token(Token = "0x6000680")]
				[Address(RVA = "0x920438", Offset = "0x920438", VA = "0x920438")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F9918", Offset = "0x6F9918")]
				get
				{
					return null;
				}
				[Token(Token = "0x6000681")]
				[Address(RVA = "0x920440", Offset = "0x920440", VA = "0x920440")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F9928", Offset = "0x6F9928")]
				set
				{
				}
			}

			[Token(Token = "0x17000301")]
			public Transform inputGridHeader4
			{
				[Token(Token = "0x6000682")]
				[Address(RVA = "0x920448", Offset = "0x920448", VA = "0x920448")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F9938", Offset = "0x6F9938")]
				get
				{
					return null;
				}
				[Token(Token = "0x6000683")]
				[Address(RVA = "0x920450", Offset = "0x920450", VA = "0x920450")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F9948", Offset = "0x6F9948")]
				set
				{
				}
			}

			[Token(Token = "0x6000684")]
			[Address(RVA = "0x920458", Offset = "0x920458", VA = "0x920458")]
			public bool Check()
			{
				return default(bool);
			}

			[Token(Token = "0x6000685")]
			[Address(RVA = "0x920960", Offset = "0x920960", VA = "0x920960")]
			public References()
			{
			}
		}

		[Token(Token = "0x200006D")]
		private class InputActionSet
		{
			[Token(Token = "0x40003C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int _actionId;

			[Token(Token = "0x40003C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private AxisRange _axisRange;

			[Token(Token = "0x17000302")]
			public int actionId
			{
				[Token(Token = "0x6000686")]
				[Address(RVA = "0x91E650", Offset = "0x91E650", VA = "0x91E650")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x17000303")]
			public AxisRange axisRange
			{
				[Token(Token = "0x6000687")]
				[Address(RVA = "0x91E658", Offset = "0x91E658", VA = "0x91E658")]
				get
				{
					return default(AxisRange);
				}
			}

			[Token(Token = "0x6000688")]
			[Address(RVA = "0x91E660", Offset = "0x91E660", VA = "0x91E660")]
			public InputActionSet(int actionId, AxisRange axisRange)
			{
			}
		}

		[Token(Token = "0x200006E")]
		private class InputMapping
		{
			[Token(Token = "0x40003C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F46C8", Offset = "0x6F46C8")]
			private string <actionName>k__BackingField;

			[Token(Token = "0x40003C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F46D8", Offset = "0x6F46D8")]
			private InputFieldInfo <fieldInfo>k__BackingField;

			[Token(Token = "0x40003C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F46E8", Offset = "0x6F46E8")]
			private ControllerMap <map>k__BackingField;

			[Token(Token = "0x40003C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F46F8", Offset = "0x6F46F8")]
			private ActionElementMap <aem>k__BackingField;

			[Token(Token = "0x40003C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F4708", Offset = "0x6F4708")]
			private ControllerType <controllerType>k__BackingField;

			[Token(Token = "0x40003C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F4718", Offset = "0x6F4718")]
			private int <controllerId>k__BackingField;

			[Token(Token = "0x40003C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F4728", Offset = "0x6F4728")]
			private ControllerPollingInfo <pollingInfo>k__BackingField;

			[Token(Token = "0x40003C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F4738", Offset = "0x6F4738")]
			private ModifierKeyFlags <modifierKeyFlags>k__BackingField;

			[Token(Token = "0x17000304")]
			public string actionName
			{
				[Token(Token = "0x6000689")]
				[Address(RVA = "0x91F8E4", Offset = "0x91F8E4", VA = "0x91F8E4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F9958", Offset = "0x6F9958")]
				get
				{
					return null;
				}
				[Token(Token = "0x600068A")]
				[Address(RVA = "0x91F8EC", Offset = "0x91F8EC", VA = "0x91F8EC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F9968", Offset = "0x6F9968")]
				private set
				{
				}
			}

			[Token(Token = "0x17000305")]
			public InputFieldInfo fieldInfo
			{
				[Token(Token = "0x600068B")]
				[Address(RVA = "0x91F8F4", Offset = "0x91F8F4", VA = "0x91F8F4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F9978", Offset = "0x6F9978")]
				get
				{
					return null;
				}
				[Token(Token = "0x600068C")]
				[Address(RVA = "0x91F8FC", Offset = "0x91F8FC", VA = "0x91F8FC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F9988", Offset = "0x6F9988")]
				private set
				{
				}
			}

			[Token(Token = "0x17000306")]
			public ControllerMap map
			{
				[Token(Token = "0x600068D")]
				[Address(RVA = "0x91F904", Offset = "0x91F904", VA = "0x91F904")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F9998", Offset = "0x6F9998")]
				get
				{
					return null;
				}
				[Token(Token = "0x600068E")]
				[Address(RVA = "0x91F90C", Offset = "0x91F90C", VA = "0x91F90C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F99A8", Offset = "0x6F99A8")]
				private set
				{
				}
			}

			[Token(Token = "0x17000307")]
			public ActionElementMap aem
			{
				[Token(Token = "0x600068F")]
				[Address(RVA = "0x91F914", Offset = "0x91F914", VA = "0x91F914")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F99B8", Offset = "0x6F99B8")]
				get
				{
					return null;
				}
				[Token(Token = "0x6000690")]
				[Address(RVA = "0x91F91C", Offset = "0x91F91C", VA = "0x91F91C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F99C8", Offset = "0x6F99C8")]
				private set
				{
				}
			}

			[Token(Token = "0x17000308")]
			public ControllerType controllerType
			{
				[Token(Token = "0x6000691")]
				[Address(RVA = "0x91F924", Offset = "0x91F924", VA = "0x91F924")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F99D8", Offset = "0x6F99D8")]
				get
				{
					return default(ControllerType);
				}
				[Token(Token = "0x6000692")]
				[Address(RVA = "0x91F92C", Offset = "0x91F92C", VA = "0x91F92C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F99E8", Offset = "0x6F99E8")]
				private set
				{
				}
			}

			[Token(Token = "0x17000309")]
			public int controllerId
			{
				[Token(Token = "0x6000693")]
				[Address(RVA = "0x91F934", Offset = "0x91F934", VA = "0x91F934")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F99F8", Offset = "0x6F99F8")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6000694")]
				[Address(RVA = "0x91F93C", Offset = "0x91F93C", VA = "0x91F93C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F9A08", Offset = "0x6F9A08")]
				private set
				{
				}
			}

			[Token(Token = "0x1700030A")]
			public ControllerPollingInfo pollingInfo
			{
				[Token(Token = "0x6000695")]
				[Address(RVA = "0x91F944", Offset = "0x91F944", VA = "0x91F944")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F9A18", Offset = "0x6F9A18")]
				get
				{
					return default(ControllerPollingInfo);
				}
				[Token(Token = "0x6000696")]
				[Address(RVA = "0x91F964", Offset = "0x91F964", VA = "0x91F964")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F9A28", Offset = "0x6F9A28")]
				set
				{
				}
			}

			[Token(Token = "0x1700030B")]
			public ModifierKeyFlags modifierKeyFlags
			{
				[Token(Token = "0x6000697")]
				[Address(RVA = "0x91F984", Offset = "0x91F984", VA = "0x91F984")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F9A38", Offset = "0x6F9A38")]
				get
				{
					return default(ModifierKeyFlags);
				}
				[Token(Token = "0x6000698")]
				[Address(RVA = "0x91F98C", Offset = "0x91F98C", VA = "0x91F98C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F9A48", Offset = "0x6F9A48")]
				set
				{
				}
			}

			[Token(Token = "0x1700030C")]
			public AxisRange axisRange
			{
				[Token(Token = "0x6000699")]
				[Address(RVA = "0x91F994", Offset = "0x91F994", VA = "0x91F994")]
				get
				{
					return default(AxisRange);
				}
			}

			[Token(Token = "0x1700030D")]
			public string elementName
			{
				[Token(Token = "0x600069A")]
				[Address(RVA = "0x91F9DC", Offset = "0x91F9DC", VA = "0x91F9DC")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600069B")]
			[Address(RVA = "0x91FAE0", Offset = "0x91FAE0", VA = "0x91FAE0")]
			public InputMapping(string actionName, InputFieldInfo fieldInfo, ControllerMap map, ActionElementMap aem, ControllerType controllerType, int controllerId)
			{
			}

			[Token(Token = "0x600069C")]
			[Address(RVA = "0x91FB40", Offset = "0x91FB40", VA = "0x91FB40")]
			public ElementAssignment ToElementAssignment(ControllerPollingInfo pollingInfo)
			{
				return default(ElementAssignment);
			}

			[Token(Token = "0x600069D")]
			[Address(RVA = "0x91FC48", Offset = "0x91FC48", VA = "0x91FC48")]
			public ElementAssignment ToElementAssignment(ControllerPollingInfo pollingInfo, ModifierKeyFlags modifierKeyFlags)
			{
				return default(ElementAssignment);
			}

			[Token(Token = "0x600069E")]
			[Address(RVA = "0x91FB9C", Offset = "0x91FB9C", VA = "0x91FB9C")]
			public ElementAssignment ToElementAssignment()
			{
				return default(ElementAssignment);
			}
		}

		[Token(Token = "0x200006F")]
		private class AxisCalibrator
		{
			[Token(Token = "0x40003CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public AxisCalibrationData data;

			[Token(Token = "0x40003CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public readonly Joystick joystick;

			[Token(Token = "0x40003CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public readonly int axisIndex;

			[Token(Token = "0x40003CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private Controller.Axis axis;

			[Token(Token = "0x40003CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private bool firstRun;

			[Token(Token = "0x1700030E")]
			public bool isValid
			{
				[Token(Token = "0x600069F")]
				[Address(RVA = "0x91BDC4", Offset = "0x91BDC4", VA = "0x91BDC4")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x60006A0")]
			[Address(RVA = "0x91BDD4", Offset = "0x91BDD4", VA = "0x91BDD4")]
			public AxisCalibrator(Joystick joystick, int axisIndex)
			{
			}

			[Token(Token = "0x60006A1")]
			[Address(RVA = "0x91BF5C", Offset = "0x91BF5C", VA = "0x91BF5C")]
			public void RecordMinMax()
			{
			}

			[Token(Token = "0x60006A2")]
			[Address(RVA = "0x91BFC4", Offset = "0x91BFC4", VA = "0x91BFC4")]
			public void RecordZero()
			{
			}

			[Token(Token = "0x60006A3")]
			[Address(RVA = "0x91BFF4", Offset = "0x91BFF4", VA = "0x91BFF4")]
			public void Commit()
			{
			}
		}

		[Token(Token = "0x2000070")]
		[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x6EF640", Offset = "0x6EF640")]
		private class IndexedDictionary<TKey, TValue>
		{
			[Token(Token = "0x2000071")]
			private class Entry
			{
				[Token(Token = "0x40003D0")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public TKey key;

				[Token(Token = "0x40003D1")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public TValue value;

				[Token(Token = "0x60006AD")]
				public Entry(TKey key, TValue value)
				{
				}
			}

			[Token(Token = "0x40003CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private List<Entry> list;

			[Token(Token = "0x1700030F")]
			public int Count
			{
				[Token(Token = "0x60006A4")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x17000310")]
			public TValue Item
			{
				[Token(Token = "0x60006A6")]
				get
				{
					return (TValue)null;
				}
			}

			[Token(Token = "0x60006A5")]
			public IndexedDictionary()
			{
			}

			[Token(Token = "0x60006A7")]
			public TValue Get(TKey key)
			{
				return (TValue)null;
			}

			[Token(Token = "0x60006A8")]
			public bool TryGet(TKey key, out TValue value)
			{
				return default(bool);
			}

			[Token(Token = "0x60006A9")]
			public void Add(TKey key, TValue value)
			{
			}

			[Token(Token = "0x60006AA")]
			public int IndexOfKey(TKey key)
			{
				return default(int);
			}

			[Token(Token = "0x60006AB")]
			public bool ContainsKey(TKey key)
			{
				return default(bool);
			}

			[Token(Token = "0x60006AC")]
			public void Clear()
			{
			}
		}

		[Token(Token = "0x2000072")]
		private enum LayoutElementSizeType
		{
			[Token(Token = "0x40003D3")]
			MinSize,
			[Token(Token = "0x40003D4")]
			PreferredSize
		}

		[Token(Token = "0x2000073")]
		private enum WindowType
		{
			[Token(Token = "0x40003D6")]
			None,
			[Token(Token = "0x40003D7")]
			ChooseJoystick,
			[Token(Token = "0x40003D8")]
			JoystickAssignmentConflict,
			[Token(Token = "0x40003D9")]
			ElementAssignment,
			[Token(Token = "0x40003DA")]
			ElementAssignmentPrePolling,
			[Token(Token = "0x40003DB")]
			ElementAssignmentPolling,
			[Token(Token = "0x40003DC")]
			ElementAssignmentResult,
			[Token(Token = "0x40003DD")]
			ElementAssignmentConflict,
			[Token(Token = "0x40003DE")]
			Calibration,
			[Token(Token = "0x40003DF")]
			CalibrateStep1,
			[Token(Token = "0x40003E0")]
			CalibrateStep2
		}

		[Token(Token = "0x2000074")]
		private class InputGrid
		{
			[Token(Token = "0x40003E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private InputGridEntryList list;

			[Token(Token = "0x40003E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private List<GameObject> groups;

			[Token(Token = "0x60006AE")]
			[Address(RVA = "0x91E7B8", Offset = "0x91E7B8", VA = "0x91E7B8")]
			public InputGrid()
			{
			}

			[Token(Token = "0x60006AF")]
			[Address(RVA = "0x91E8D8", Offset = "0x91E8D8", VA = "0x91E8D8")]
			public void AddMapCategory(int mapCategoryId)
			{
			}

			[Token(Token = "0x60006B0")]
			[Address(RVA = "0x91E9C4", Offset = "0x91E9C4", VA = "0x91E9C4")]
			public void AddAction(int mapCategoryId, InputAction action, AxisRange axisRange)
			{
			}

			[Token(Token = "0x60006B1")]
			[Address(RVA = "0x91E9E0", Offset = "0x91E9E0", VA = "0x91E9E0")]
			public void AddActionCategory(int mapCategoryId, int actionCategoryId)
			{
			}

			[Token(Token = "0x60006B2")]
			[Address(RVA = "0x91E9FC", Offset = "0x91E9FC", VA = "0x91E9FC")]
			public void AddInputFieldSet(int mapCategoryId, InputAction action, AxisRange axisRange, ControllerType controllerType, GameObject fieldSetContainer)
			{
			}

			[Token(Token = "0x60006B3")]
			[Address(RVA = "0x91EA5C", Offset = "0x91EA5C", VA = "0x91EA5C")]
			public void AddInputField(int mapCategoryId, InputAction action, AxisRange axisRange, ControllerType controllerType, int fieldIndex, GUIInputField inputField)
			{
			}

			[Token(Token = "0x60006B4")]
			[Address(RVA = "0x91EAD0", Offset = "0x91EAD0", VA = "0x91EAD0")]
			public void AddGroup(GameObject group)
			{
			}

			[Token(Token = "0x60006B5")]
			[Address(RVA = "0x91EB34", Offset = "0x91EB34", VA = "0x91EB34")]
			public void AddActionLabel(int mapCategoryId, int actionId, AxisRange axisRange, GUILabel label)
			{
			}

			[Token(Token = "0x60006B6")]
			[Address(RVA = "0x91EBFC", Offset = "0x91EBFC", VA = "0x91EBFC")]
			public void AddActionCategoryLabel(int mapCategoryId, int actionCategoryId, GUILabel label)
			{
			}

			[Token(Token = "0x60006B7")]
			[Address(RVA = "0x91ECB4", Offset = "0x91ECB4", VA = "0x91ECB4")]
			public bool Contains(int mapCategoryId, int actionId, AxisRange axisRange, ControllerType controllerType, int fieldIndex)
			{
				return default(bool);
			}

			[Token(Token = "0x60006B8")]
			[Address(RVA = "0x91ED0C", Offset = "0x91ED0C", VA = "0x91ED0C")]
			public GUIInputField GetGUIInputField(int mapCategoryId, int actionId, AxisRange axisRange, ControllerType controllerType, int fieldIndex)
			{
				return null;
			}

			[Token(Token = "0x60006B9")]
			[Address(RVA = "0x91ED64", Offset = "0x91ED64", VA = "0x91ED64")]
			public IEnumerable<InputActionSet> GetActionSets(int mapCategoryId)
			{
				return null;
			}

			[Token(Token = "0x60006BA")]
			[Address(RVA = "0x91EDF8", Offset = "0x91EDF8", VA = "0x91EDF8")]
			public void SetColumnHeight(int mapCategoryId, float height)
			{
			}

			[Token(Token = "0x60006BB")]
			[Address(RVA = "0x91EEA4", Offset = "0x91EEA4", VA = "0x91EEA4")]
			public float GetColumnHeight(int mapCategoryId)
			{
				return default(float);
			}

			[Token(Token = "0x60006BC")]
			[Address(RVA = "0x91EF40", Offset = "0x91EF40", VA = "0x91EF40")]
			public void SetFieldsActive(int mapCategoryId, bool state)
			{
			}

			[Token(Token = "0x60006BD")]
			[Address(RVA = "0x91F054", Offset = "0x91F054", VA = "0x91F054")]
			public void SetFieldLabel(int mapCategoryId, int actionId, AxisRange axisRange, ControllerType controllerType, int index, string label)
			{
			}

			[Token(Token = "0x60006BE")]
			[Address(RVA = "0x91F0C0", Offset = "0x91F0C0", VA = "0x91F0C0")]
			public void PopulateField(int mapCategoryId, int actionId, AxisRange axisRange, ControllerType controllerType, int controllerId, int index, int actionElementMapId, string label, bool invert)
			{
			}

			[Token(Token = "0x60006BF")]
			[Address(RVA = "0x91F168", Offset = "0x91F168", VA = "0x91F168")]
			public void SetFixedFieldData(int mapCategoryId, int actionId, AxisRange axisRange, ControllerType controllerType, int controllerId)
			{
			}

			[Token(Token = "0x60006C0")]
			[Address(RVA = "0x91F1C0", Offset = "0x91F1C0", VA = "0x91F1C0")]
			public void InitializeFields(int mapCategoryId)
			{
			}

			[Token(Token = "0x60006C1")]
			[Address(RVA = "0x91F2BC", Offset = "0x91F2BC", VA = "0x91F2BC")]
			public void Show(int mapCategoryId)
			{
			}

			[Token(Token = "0x60006C2")]
			[Address(RVA = "0x91F35C", Offset = "0x91F35C", VA = "0x91F35C")]
			public void HideAll()
			{
			}

			[Token(Token = "0x60006C3")]
			[Address(RVA = "0x91F424", Offset = "0x91F424", VA = "0x91F424")]
			public void ClearLabels(int mapCategoryId)
			{
			}

			[Token(Token = "0x60006C4")]
			[Address(RVA = "0x91F520", Offset = "0x91F520", VA = "0x91F520")]
			private void ClearGroups()
			{
			}

			[Token(Token = "0x60006C5")]
			[Address(RVA = "0x91F648", Offset = "0x91F648", VA = "0x91F648")]
			public void ClearAll()
			{
			}
		}

		[Token(Token = "0x2000075")]
		private class InputGridEntryList
		{
			[Token(Token = "0x2000076")]
			private class MapCategoryEntry
			{
				[Token(Token = "0x40003E4")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				private List<ActionEntry> _actionList;

				[Token(Token = "0x40003E5")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				private IndexedDictionary<int, ActionCategoryEntry> _actionCategoryList;

				[Token(Token = "0x40003E6")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				private float _columnHeight;

				[Token(Token = "0x17000311")]
				public List<ActionEntry> actionList
				{
					[Token(Token = "0x60006E1")]
					[Address(RVA = "0x1083478", Offset = "0x1083478", VA = "0x1083478")]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x17000312")]
				public IndexedDictionary<int, ActionCategoryEntry> actionCategoryList
				{
					[Token(Token = "0x60006E2")]
					[Address(RVA = "0x1083480", Offset = "0x1083480", VA = "0x1083480")]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x17000313")]
				public float columnHeight
				{
					[Token(Token = "0x60006E3")]
					[Address(RVA = "0x1083488", Offset = "0x1083488", VA = "0x1083488")]
					get
					{
						return default(float);
					}
					[Token(Token = "0x60006E4")]
					[Address(RVA = "0x1083490", Offset = "0x1083490", VA = "0x1083490")]
					set
					{
					}
				}

				[Token(Token = "0x60006E5")]
				[Address(RVA = "0x1083498", Offset = "0x1083498", VA = "0x1083498")]
				public MapCategoryEntry()
				{
				}

				[Token(Token = "0x60006E6")]
				[Address(RVA = "0x1083554", Offset = "0x1083554", VA = "0x1083554")]
				public ActionEntry GetActionEntry(int actionId, AxisRange axisRange)
				{
					return null;
				}

				[Token(Token = "0x60006E7")]
				[Address(RVA = "0x10835EC", Offset = "0x10835EC", VA = "0x10835EC")]
				public int IndexOfActionEntry(int actionId, AxisRange axisRange)
				{
					return default(int);
				}

				[Token(Token = "0x60006E8")]
				[Address(RVA = "0x10836C8", Offset = "0x10836C8", VA = "0x10836C8")]
				public bool ContainsActionEntry(int actionId, AxisRange axisRange)
				{
					return default(bool);
				}

				[Token(Token = "0x60006E9")]
				[Address(RVA = "0x10836E4", Offset = "0x10836E4", VA = "0x10836E4")]
				public ActionEntry AddAction(InputAction action, AxisRange axisRange)
				{
					return null;
				}

				[Token(Token = "0x60006EA")]
				[Address(RVA = "0x10837E8", Offset = "0x10837E8", VA = "0x10837E8")]
				public ActionCategoryEntry GetActionCategoryEntry(int actionCategoryId)
				{
					return null;
				}

				[Token(Token = "0x60006EB")]
				[Address(RVA = "0x1083884", Offset = "0x1083884", VA = "0x1083884")]
				public ActionCategoryEntry AddActionCategory(int actionCategoryId)
				{
					return null;
				}

				[Token(Token = "0x60006EC")]
				[Address(RVA = "0x1083980", Offset = "0x1083980", VA = "0x1083980")]
				public void SetAllActive(bool state)
				{
				}
			}

			[Token(Token = "0x2000077")]
			private class ActionEntry
			{
				[Token(Token = "0x40003E7")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				private IndexedDictionary<int, FieldSet> fieldSets;

				[Token(Token = "0x40003E8")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				public GUILabel label;

				[Token(Token = "0x40003E9")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				public readonly InputAction action;

				[Token(Token = "0x40003EA")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
				public readonly AxisRange axisRange;

				[Token(Token = "0x40003EB")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
				public readonly InputActionSet actionSet;

				[Token(Token = "0x60006ED")]
				[Address(RVA = "0x108256C", Offset = "0x108256C", VA = "0x108256C")]
				public ActionEntry(InputAction action, AxisRange axisRange)
				{
				}

				[Token(Token = "0x60006EE")]
				[Address(RVA = "0x1082640", Offset = "0x1082640", VA = "0x1082640")]
				public void SetLabel(GUILabel label)
				{
				}

				[Token(Token = "0x60006EF")]
				[Address(RVA = "0x1082648", Offset = "0x1082648", VA = "0x1082648")]
				public bool Matches(int actionId, AxisRange axisRange)
				{
					return default(bool);
				}

				[Token(Token = "0x60006F0")]
				[Address(RVA = "0x1082680", Offset = "0x1082680", VA = "0x1082680")]
				public void AddInputFieldSet(ControllerType controllerType, GameObject fieldSetContainer)
				{
				}

				[Token(Token = "0x60006F1")]
				[Address(RVA = "0x10827E0", Offset = "0x10827E0", VA = "0x10827E0")]
				public void AddInputField(ControllerType controllerType, int fieldIndex, GUIInputField inputField)
				{
				}

				[Token(Token = "0x60006F2")]
				[Address(RVA = "0x10828F4", Offset = "0x10828F4", VA = "0x10828F4")]
				public GUIInputField GetGUIInputField(ControllerType controllerType, int fieldIndex)
				{
					return null;
				}

				[Token(Token = "0x60006F3")]
				[Address(RVA = "0x1082A04", Offset = "0x1082A04", VA = "0x1082A04")]
				public bool Contains(ControllerType controllerType, int fieldId)
				{
					return default(bool);
				}

				[Token(Token = "0x60006F4")]
				[Address(RVA = "0x1082AD8", Offset = "0x1082AD8", VA = "0x1082AD8")]
				public void SetFieldLabel(ControllerType controllerType, int index, string label)
				{
				}

				[Token(Token = "0x60006F5")]
				[Address(RVA = "0x1082C10", Offset = "0x1082C10", VA = "0x1082C10")]
				public void PopulateField(ControllerType controllerType, int controllerId, int index, int actionElementMapId, string label, bool invert)
				{
				}

				[Token(Token = "0x60006F6")]
				[Address(RVA = "0x1082DD8", Offset = "0x1082DD8", VA = "0x1082DD8")]
				public void SetFixedFieldData(ControllerType controllerType, int controllerId)
				{
				}

				[Token(Token = "0x60006F7")]
				[Address(RVA = "0x1082EF8", Offset = "0x1082EF8", VA = "0x1082EF8")]
				public void Initialize()
				{
				}

				[Token(Token = "0x60006F8")]
				[Address(RVA = "0x10830C0", Offset = "0x10830C0", VA = "0x10830C0")]
				public void SetActive(bool state)
				{
				}

				[Token(Token = "0x60006F9")]
				[Address(RVA = "0x108319C", Offset = "0x108319C", VA = "0x108319C")]
				public void ClearLabels()
				{
				}

				[Token(Token = "0x60006FA")]
				[Address(RVA = "0x10832EC", Offset = "0x10832EC", VA = "0x10832EC")]
				public void SetFieldsActive(bool state)
				{
				}
			}

			[Token(Token = "0x2000078")]
			private class FieldSet
			{
				[Token(Token = "0x40003EC")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public readonly GameObject groupContainer;

				[Token(Token = "0x40003ED")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				public readonly IndexedDictionary<int, GUIInputField> fields;

				[Token(Token = "0x60006FB")]
				[Address(RVA = "0x1082754", Offset = "0x1082754", VA = "0x1082754")]
				public FieldSet(GameObject groupContainer)
				{
				}
			}

			[Token(Token = "0x2000079")]
			private class ActionCategoryEntry
			{
				[Token(Token = "0x40003EE")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public readonly int actionCategoryId;

				[Token(Token = "0x40003EF")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				public GUILabel label;

				[Token(Token = "0x60006FC")]
				[Address(RVA = "0x1082520", Offset = "0x1082520", VA = "0x1082520")]
				public ActionCategoryEntry(int actionCategoryId)
				{
				}

				[Token(Token = "0x60006FD")]
				[Address(RVA = "0x108254C", Offset = "0x108254C", VA = "0x108254C")]
				public void SetLabel(GUILabel label)
				{
				}

				[Token(Token = "0x60006FE")]
				[Address(RVA = "0x1082554", Offset = "0x1082554", VA = "0x1082554")]
				public void SetActive(bool state)
				{
				}
			}

			[Token(Token = "0x200007A")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EF678", Offset = "0x6EF678")]
			private sealed class <GetActionSets>d__18 : IEnumerable<InputActionSet>, IEnumerable, IEnumerator<InputActionSet>, IEnumerator, IDisposable
			{
				[Token(Token = "0x40003F0")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				private int <>1__state;

				[Token(Token = "0x40003F1")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				private InputActionSet <>2__current;

				[Token(Token = "0x40003F2")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				private int <>l__initialThreadId;

				[Token(Token = "0x40003F3")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
				public InputGridEntryList <>4__this;

				[Token(Token = "0x40003F4")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
				private int mapCategoryId;

				[Token(Token = "0x40003F5")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
				public int <>3__mapCategoryId;

				[Token(Token = "0x40003F6")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
				private List<ActionEntry> <list>5__2;

				[Token(Token = "0x40003F7")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
				private int <count>5__3;

				[Token(Token = "0x40003F8")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
				private int <i>5__4;

				[Token(Token = "0x17000314")]
				private InputActionSet System.Collections.Generic.IEnumerator<Rewired.UI.ControlMapper.ControlMapper.InputActionSet>.Current
				{
					[Token(Token = "0x6000702")]
					[Address(RVA = "0x108241C", Offset = "0x108241C", VA = "0x108241C", Slot = "6")]
					[DebuggerHidden]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x17000315")]
				private object System.Collections.IEnumerator.Current
				{
					[Token(Token = "0x6000704")]
					[Address(RVA = "0x1082464", Offset = "0x1082464", VA = "0x1082464", Slot = "9")]
					[DebuggerHidden]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x60006FF")]
				[Address(RVA = "0x10822B4", Offset = "0x10822B4", VA = "0x10822B4")]
				[DebuggerHidden]
				public <GetActionSets>d__18(int <>1__state)
				{
				}

				[Token(Token = "0x6000700")]
				[Address(RVA = "0x10822EC", Offset = "0x10822EC", VA = "0x10822EC", Slot = "7")]
				[DebuggerHidden]
				private void System.IDisposable.Dispose()
				{
				}

				[Token(Token = "0x6000701")]
				[Address(RVA = "0x10822F0", Offset = "0x10822F0", VA = "0x10822F0", Slot = "8")]
				private bool MoveNext()
				{
					return default(bool);
				}

				[Token(Token = "0x6000703")]
				[Address(RVA = "0x1082424", Offset = "0x1082424", VA = "0x1082424", Slot = "10")]
				[DebuggerHidden]
				private void System.Collections.IEnumerator.Reset()
				{
				}

				[Token(Token = "0x6000705")]
				[Address(RVA = "0x108246C", Offset = "0x108246C", VA = "0x108246C", Slot = "4")]
				[DebuggerHidden]
				private IEnumerator<InputActionSet> System.Collections.Generic.IEnumerable<Rewired.UI.ControlMapper.ControlMapper.InputActionSet>.GetEnumerator()
				{
					return null;
				}

				[Token(Token = "0x6000706")]
				[Address(RVA = "0x108251C", Offset = "0x108251C", VA = "0x108251C", Slot = "5")]
				[DebuggerHidden]
				private IEnumerator System.Collections.IEnumerable.GetEnumerator()
				{
					return null;
				}
			}

			[Token(Token = "0x40003E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private IndexedDictionary<int, MapCategoryEntry> entries;

			[Token(Token = "0x60006C6")]
			[Address(RVA = "0x91E85C", Offset = "0x91E85C", VA = "0x91E85C")]
			public InputGridEntryList()
			{
			}

			[Token(Token = "0x60006C7")]
			[Address(RVA = "0x91E8F0", Offset = "0x91E8F0", VA = "0x91E8F0")]
			public void AddMapCategory(int mapCategoryId)
			{
			}

			[Token(Token = "0x60006C8")]
			[Address(RVA = "0x91E9DC", Offset = "0x91E9DC", VA = "0x91E9DC")]
			public void AddAction(int mapCategoryId, InputAction action, AxisRange axisRange)
			{
			}

			[Token(Token = "0x60006C9")]
			[Address(RVA = "0x91F6C8", Offset = "0x91F6C8", VA = "0x91F6C8")]
			private ActionEntry AddActionEntry(int mapCategoryId, InputAction action, AxisRange axisRange)
			{
				return null;
			}

			[Token(Token = "0x60006CA")]
			[Address(RVA = "0x91EB4C", Offset = "0x91EB4C", VA = "0x91EB4C")]
			public void AddActionLabel(int mapCategoryId, int actionId, AxisRange axisRange, GUILabel label)
			{
			}

			[Token(Token = "0x60006CB")]
			[Address(RVA = "0x91E9F8", Offset = "0x91E9F8", VA = "0x91E9F8")]
			public void AddActionCategory(int mapCategoryId, int actionCategoryId)
			{
			}

			[Token(Token = "0x60006CC")]
			[Address(RVA = "0x91F770", Offset = "0x91F770", VA = "0x91F770")]
			private ActionCategoryEntry AddActionCategoryEntry(int mapCategoryId, int actionCategoryId)
			{
				return null;
			}

			[Token(Token = "0x60006CD")]
			[Address(RVA = "0x91EC14", Offset = "0x91EC14", VA = "0x91EC14")]
			public void AddActionCategoryLabel(int mapCategoryId, int actionCategoryId, GUILabel label)
			{
			}

			[Token(Token = "0x60006CE")]
			[Address(RVA = "0x91EA14", Offset = "0x91EA14", VA = "0x91EA14")]
			public void AddInputFieldSet(int mapCategoryId, InputAction action, AxisRange axisRange, ControllerType controllerType, GameObject fieldSetContainer)
			{
			}

			[Token(Token = "0x60006CF")]
			[Address(RVA = "0x91EA74", Offset = "0x91EA74", VA = "0x91EA74")]
			public void AddInputField(int mapCategoryId, InputAction action, AxisRange axisRange, ControllerType controllerType, int fieldIndex, GUIInputField inputField)
			{
			}

			[Token(Token = "0x60006D0")]
			[Address(RVA = "0x91F820", Offset = "0x91F820", VA = "0x91F820")]
			public bool Contains(int mapCategoryId, int actionId, AxisRange axisRange)
			{
				return default(bool);
			}

			[Token(Token = "0x60006D1")]
			[Address(RVA = "0x91ECCC", Offset = "0x91ECCC", VA = "0x91ECCC")]
			public bool Contains(int mapCategoryId, int actionId, AxisRange axisRange, ControllerType controllerType, int fieldIndex)
			{
				return default(bool);
			}

			[Token(Token = "0x60006D2")]
			[Address(RVA = "0x91EE10", Offset = "0x91EE10", VA = "0x91EE10")]
			public void SetColumnHeight(int mapCategoryId, float height)
			{
			}

			[Token(Token = "0x60006D3")]
			[Address(RVA = "0x91EEBC", Offset = "0x91EEBC", VA = "0x91EEBC")]
			public float GetColumnHeight(int mapCategoryId)
			{
				return default(float);
			}

			[Token(Token = "0x60006D4")]
			[Address(RVA = "0x91ED24", Offset = "0x91ED24", VA = "0x91ED24")]
			public GUIInputField GetGUIInputField(int mapCategoryId, int actionId, AxisRange axisRange, ControllerType controllerType, int fieldIndex)
			{
				return null;
			}

			[Token(Token = "0x60006D5")]
			[Address(RVA = "0x91F83C", Offset = "0x91F83C", VA = "0x91F83C")]
			private ActionEntry GetActionEntry(int mapCategoryId, int actionId, AxisRange axisRange)
			{
				return null;
			}

			[Token(Token = "0x60006D6")]
			[Address(RVA = "0x91F80C", Offset = "0x91F80C", VA = "0x91F80C")]
			private ActionEntry GetActionEntry(int mapCategoryId, InputAction action, AxisRange axisRange)
			{
				return null;
			}

			[Token(Token = "0x60006D7")]
			[Address(RVA = "0x91ED7C", Offset = "0x91ED7C", VA = "0x91ED7C")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6F9A58", Offset = "0x6F9A58")]
			public IEnumerable<InputActionSet> GetActionSets(int mapCategoryId)
			{
				return null;
			}

			[Token(Token = "0x60006D8")]
			[Address(RVA = "0x91EF5C", Offset = "0x91EF5C", VA = "0x91EF5C")]
			public void SetFieldsActive(int mapCategoryId, bool state)
			{
			}

			[Token(Token = "0x60006D9")]
			[Address(RVA = "0x91F06C", Offset = "0x91F06C", VA = "0x91F06C")]
			public void SetLabel(int mapCategoryId, int actionId, AxisRange axisRange, ControllerType controllerType, int index, string label)
			{
			}

			[Token(Token = "0x60006DA")]
			[Address(RVA = "0x91F0F0", Offset = "0x91F0F0", VA = "0x91F0F0")]
			public void PopulateField(int mapCategoryId, int actionId, AxisRange axisRange, ControllerType controllerType, int controllerId, int index, int actionElementMapId, string label, bool invert)
			{
			}

			[Token(Token = "0x60006DB")]
			[Address(RVA = "0x91F180", Offset = "0x91F180", VA = "0x91F180")]
			public void SetFixedFieldData(int mapCategoryId, int actionId, AxisRange axisRange, ControllerType controllerType, int controllerId)
			{
			}

			[Token(Token = "0x60006DC")]
			[Address(RVA = "0x91F1D8", Offset = "0x91F1D8", VA = "0x91F1D8")]
			public void InitializeFields(int mapCategoryId)
			{
			}

			[Token(Token = "0x60006DD")]
			[Address(RVA = "0x91F2D4", Offset = "0x91F2D4", VA = "0x91F2D4")]
			public void Show(int mapCategoryId)
			{
			}

			[Token(Token = "0x60006DE")]
			[Address(RVA = "0x91F374", Offset = "0x91F374", VA = "0x91F374")]
			public void HideAll()
			{
			}

			[Token(Token = "0x60006DF")]
			[Address(RVA = "0x91F43C", Offset = "0x91F43C", VA = "0x91F43C")]
			public void ClearLabels(int mapCategoryId)
			{
			}

			[Token(Token = "0x60006E0")]
			[Address(RVA = "0x91F674", Offset = "0x91F674", VA = "0x91F674")]
			public void Clear()
			{
			}
		}

		[Token(Token = "0x200007B")]
		private class WindowManager
		{
			[Token(Token = "0x40003F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private List<Window> windows;

			[Token(Token = "0x40003FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private GameObject windowPrefab;

			[Token(Token = "0x40003FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private Transform parent;

			[Token(Token = "0x40003FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private GameObject fader;

			[Token(Token = "0x40003FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int idCounter;

			[Token(Token = "0x17000316")]
			public bool isWindowOpen
			{
				[Token(Token = "0x6000707")]
				[Address(RVA = "0x920968", Offset = "0x920968", VA = "0x920968")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x17000317")]
			public Window topWindow
			{
				[Token(Token = "0x6000708")]
				[Address(RVA = "0x920A58", Offset = "0x920A58", VA = "0x920A58")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000709")]
			[Address(RVA = "0x920B6C", Offset = "0x920B6C", VA = "0x920B6C")]
			public WindowManager(GameObject windowPrefab, GameObject faderPrefab, Transform parent)
			{
			}

			[Token(Token = "0x600070A")]
			[Address(RVA = "0x920CF0", Offset = "0x920CF0", VA = "0x920CF0")]
			public Window OpenWindow(string name, int width, int height)
			{
				return null;
			}

			[Token(Token = "0x600070B")]
			[Address(RVA = "0x921068", Offset = "0x921068", VA = "0x921068")]
			public Window OpenWindow(GameObject windowPrefab, string name)
			{
				return null;
			}

			[Token(Token = "0x600070C")]
			[Address(RVA = "0x921380", Offset = "0x921380", VA = "0x921380")]
			public void CloseTop()
			{
			}

			[Token(Token = "0x600070D")]
			[Address(RVA = "0x92159C", Offset = "0x92159C", VA = "0x92159C")]
			public void CloseWindow(int windowId)
			{
			}

			[Token(Token = "0x600070E")]
			[Address(RVA = "0x92174C", Offset = "0x92174C", VA = "0x92174C")]
			public void CloseWindow(Window window)
			{
			}

			[Token(Token = "0x600070F")]
			[Address(RVA = "0x921A40", Offset = "0x921A40", VA = "0x921A40")]
			public void CloseAll()
			{
			}

			[Token(Token = "0x6000710")]
			[Address(RVA = "0x921BB0", Offset = "0x921BB0", VA = "0x921BB0")]
			public void CancelAll()
			{
			}

			[Token(Token = "0x6000711")]
			[Address(RVA = "0x9215C4", Offset = "0x9215C4", VA = "0x9215C4")]
			public Window GetWindow(int windowId)
			{
				return null;
			}

			[Token(Token = "0x6000712")]
			[Address(RVA = "0x921CF8", Offset = "0x921CF8", VA = "0x921CF8")]
			public bool IsFocused(int windowId)
			{
				return default(bool);
			}

			[Token(Token = "0x6000713")]
			[Address(RVA = "0x921DAC", Offset = "0x921DAC", VA = "0x921DAC")]
			public void Focus(int windowId)
			{
			}

			[Token(Token = "0x6000714")]
			[Address(RVA = "0x921DD4", Offset = "0x921DD4", VA = "0x921DD4")]
			public void Focus(Window window)
			{
			}

			[Token(Token = "0x6000715")]
			[Address(RVA = "0x921E80", Offset = "0x921E80", VA = "0x921E80")]
			private void DefocusOtherWindows(int focusedWindowId)
			{
			}

			[Token(Token = "0x6000716")]
			[Address(RVA = "0x920F24", Offset = "0x920F24", VA = "0x920F24")]
			private void UpdateFader()
			{
			}

			[Token(Token = "0x6000717")]
			[Address(RVA = "0x92199C", Offset = "0x92199C", VA = "0x92199C")]
			private void FocusTopWindow()
			{
			}

			[Token(Token = "0x6000718")]
			[Address(RVA = "0x920CD0", Offset = "0x920CD0", VA = "0x920CD0")]
			private void SetFaderActive(bool state)
			{
			}

			[Token(Token = "0x6000719")]
			[Address(RVA = "0x920D20", Offset = "0x920D20", VA = "0x920D20")]
			private Window InstantiateWindow(string name, int width, int height)
			{
				return null;
			}

			[Token(Token = "0x600071A")]
			[Address(RVA = "0x92115C", Offset = "0x92115C", VA = "0x92115C")]
			private Window InstantiateWindow(string name, GameObject windowPrefab)
			{
				return null;
			}

			[Token(Token = "0x600071B")]
			[Address(RVA = "0x9214E4", Offset = "0x9214E4", VA = "0x9214E4")]
			private void DestroyWindow(Window window)
			{
			}

			[Token(Token = "0x600071C")]
			[Address(RVA = "0x921FE8", Offset = "0x921FE8", VA = "0x921FE8")]
			private int GetNewId()
			{
				return default(int);
			}

			[Token(Token = "0x600071D")]
			[Address(RVA = "0x921FFC", Offset = "0x921FFC", VA = "0x921FFC")]
			public void ClearCompletely()
			{
			}
		}

		[Token(Token = "0x200007C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EF688", Offset = "0x6EF688")]
		private sealed class <>c__DisplayClass341_0
		{
			[Token(Token = "0x40003FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ControlMapper <>4__this;

			[Token(Token = "0x40003FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Window window;

			[Token(Token = "0x4000400")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int controllerId;

			[Token(Token = "0x600071E")]
			[Address(RVA = "0x91AC80", Offset = "0x91AC80", VA = "0x91AC80")]
			public <>c__DisplayClass341_0()
			{
			}

			[Token(Token = "0x600071F")]
			[Address(RVA = "0x91AC88", Offset = "0x91AC88", VA = "0x91AC88")]
			internal void <ShowControllerAssignmentConflictWindow>b__0()
			{
			}

			[Token(Token = "0x6000720")]
			[Address(RVA = "0x91ACB4", Offset = "0x91ACB4", VA = "0x91ACB4")]
			internal void <ShowControllerAssignmentConflictWindow>b__1()
			{
			}
		}

		[Token(Token = "0x200007D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EF698", Offset = "0x6EF698")]
		private sealed class <>c__DisplayClass342_0
		{
			[Token(Token = "0x4000401")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ControlMapper <>4__this;

			[Token(Token = "0x4000402")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Window window;

			[Token(Token = "0x4000403")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public InputFieldInfo fieldInfo;

			[Token(Token = "0x4000404")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public ControllerMap map;

			[Token(Token = "0x4000405")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public ActionElementMap aem;

			[Token(Token = "0x4000406")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public string actionName;

			[Token(Token = "0x6000721")]
			[Address(RVA = "0x91AD10", Offset = "0x91AD10", VA = "0x91AD10")]
			public <>c__DisplayClass342_0()
			{
			}

			[Token(Token = "0x6000722")]
			[Address(RVA = "0x91AD18", Offset = "0x91AD18", VA = "0x91AD18")]
			internal void <ShowBeginElementAssignmentReplacementWindow>b__0()
			{
			}

			[Token(Token = "0x6000723")]
			[Address(RVA = "0x91AD44", Offset = "0x91AD44", VA = "0x91AD44")]
			internal void <ShowBeginElementAssignmentReplacementWindow>b__1()
			{
			}

			[Token(Token = "0x6000724")]
			[Address(RVA = "0x91AD6C", Offset = "0x91AD6C", VA = "0x91AD6C")]
			internal void <ShowBeginElementAssignmentReplacementWindow>b__2()
			{
			}
		}

		[Token(Token = "0x200007E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EF6A8", Offset = "0x6EF6A8")]
		private sealed class <>c__DisplayClass349_0
		{
			[Token(Token = "0x4000407")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ControlMapper <>4__this;

			[Token(Token = "0x4000408")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Window window;

			[Token(Token = "0x4000409")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ElementAssignment assignment;

			[Token(Token = "0x400040A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public bool skipOtherPlayers;

			[Token(Token = "0x6000725")]
			[Address(RVA = "0x91ADA0", Offset = "0x91ADA0", VA = "0x91ADA0")]
			public <>c__DisplayClass349_0()
			{
			}

			[Token(Token = "0x6000726")]
			[Address(RVA = "0x91ADA8", Offset = "0x91ADA8", VA = "0x91ADA8")]
			internal void <ShowElementAssignmentConflictWindow>b__0()
			{
			}

			[Token(Token = "0x6000727")]
			[Address(RVA = "0x91ADD4", Offset = "0x91ADD4", VA = "0x91ADD4")]
			internal void <ShowElementAssignmentConflictWindow>b__1()
			{
			}

			[Token(Token = "0x6000728")]
			[Address(RVA = "0x91AE30", Offset = "0x91AE30", VA = "0x91AE30")]
			internal void <ShowElementAssignmentConflictWindow>b__2()
			{
			}

			[Token(Token = "0x6000729")]
			[Address(RVA = "0x91AE84", Offset = "0x91AE84", VA = "0x91AE84")]
			internal void <ShowElementAssignmentConflictWindow>b__3()
			{
			}
		}

		[Token(Token = "0x200007F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EF6B8", Offset = "0x6EF6B8")]
		private sealed class <>c__DisplayClass350_0
		{
			[Token(Token = "0x400040B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ControlMapper <>4__this;

			[Token(Token = "0x400040C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Window window;

			[Token(Token = "0x600072A")]
			[Address(RVA = "0x91AEE0", Offset = "0x91AEE0", VA = "0x91AEE0")]
			public <>c__DisplayClass350_0()
			{
			}

			[Token(Token = "0x600072B")]
			[Address(RVA = "0x91AEE8", Offset = "0x91AEE8", VA = "0x91AEE8")]
			internal void <ShowMouseAssignmentConflictWindow>b__0()
			{
			}

			[Token(Token = "0x600072C")]
			[Address(RVA = "0x91AF14", Offset = "0x91AF14", VA = "0x91AF14")]
			internal void <ShowMouseAssignmentConflictWindow>b__1()
			{
			}
		}

		[Token(Token = "0x2000080")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EF6C8", Offset = "0x6EF6C8")]
		private sealed class <>c__DisplayClass403_0
		{
			[Token(Token = "0x400040D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ControlMapper <>4__this;

			[Token(Token = "0x400040E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Window window;

			[Token(Token = "0x600072D")]
			[Address(RVA = "0x91AF60", Offset = "0x91AF60", VA = "0x91AF60")]
			public <>c__DisplayClass403_0()
			{
			}

			[Token(Token = "0x600072E")]
			[Address(RVA = "0x91AF68", Offset = "0x91AF68", VA = "0x91AF68")]
			internal void <OpenModal>b__0()
			{
			}

			[Token(Token = "0x600072F")]
			[Address(RVA = "0x91AF94", Offset = "0x91AF94", VA = "0x91AF94")]
			internal void <OpenModal>b__1()
			{
			}
		}

		[Token(Token = "0x2000081")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EF6D8", Offset = "0x6EF6D8")]
		private sealed class <ElementAssignmentConflicts>d__411 : IEnumerable<ElementAssignmentConflictInfo>, IEnumerable, IEnumerator<ElementAssignmentConflictInfo>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400040F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000410")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private ElementAssignmentConflictInfo <>2__current;

			[Token(Token = "0x4000411")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4000412")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private Player player;

			[Token(Token = "0x4000413")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public Player <>3__player;

			[Token(Token = "0x4000414")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private InputMapping mapping;

			[Token(Token = "0x4000415")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public InputMapping <>3__mapping;

			[Token(Token = "0x4000416")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public ControlMapper <>4__this;

			[Token(Token = "0x4000417")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			private ElementAssignment assignment;

			[Token(Token = "0x4000418")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
			public ElementAssignment <>3__assignment;

			[Token(Token = "0x4000419")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			private bool skipOtherPlayers;

			[Token(Token = "0x400041A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB9")]
			public bool <>3__skipOtherPlayers;

			[Token(Token = "0x400041B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
			private ElementAssignmentConflictCheck <conflictCheck>5__2;

			[Token(Token = "0x400041C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
			private IEnumerator<ElementAssignmentConflictInfo> <>7__wrap2;

			[Token(Token = "0x17000318")]
			private ElementAssignmentConflictInfo System.Collections.Generic.IEnumerator<Rewired.ElementAssignmentConflictInfo>.Current
			{
				[Token(Token = "0x6000736")]
				[Address(RVA = "0x91BC28", Offset = "0x91BC28", VA = "0x91BC28", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return default(ElementAssignmentConflictInfo);
				}
			}

			[Token(Token = "0x17000319")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000738")]
				[Address(RVA = "0x91BC80", Offset = "0x91BC80", VA = "0x91BC80", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000730")]
			[Address(RVA = "0x91AFF0", Offset = "0x91AFF0", VA = "0x91AFF0")]
			[DebuggerHidden]
			public <ElementAssignmentConflicts>d__411(int <>1__state)
			{
			}

			[Token(Token = "0x6000731")]
			[Address(RVA = "0x91B028", Offset = "0x91B028", VA = "0x91B028", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000732")]
			[Address(RVA = "0x91B364", Offset = "0x91B364", VA = "0x91B364", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000733")]
			[Address(RVA = "0x91B130", Offset = "0x91B130", VA = "0x91B130")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6000734")]
			[Address(RVA = "0x91B1EC", Offset = "0x91B1EC", VA = "0x91B1EC")]
			private void <>m__Finally2()
			{
			}

			[Token(Token = "0x6000735")]
			[Address(RVA = "0x91B2A8", Offset = "0x91B2A8", VA = "0x91B2A8")]
			private void <>m__Finally3()
			{
			}

			[Token(Token = "0x6000737")]
			[Address(RVA = "0x91BC40", Offset = "0x91BC40", VA = "0x91BC40", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6000739")]
			[Address(RVA = "0x91BCEC", Offset = "0x91BCEC", VA = "0x91BCEC", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<ElementAssignmentConflictInfo> System.Collections.Generic.IEnumerable<Rewired.ElementAssignmentConflictInfo>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x600073A")]
			[Address(RVA = "0x91BDC0", Offset = "0x91BDC0", VA = "0x91BDC0", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x2000082")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EF6E8", Offset = "0x6EF6E8")]
		private sealed class <>c__DisplayClass456_0
		{
			[Token(Token = "0x400041D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ActionElementMap aem;

			[Token(Token = "0x600073B")]
			[Address(RVA = "0x91AFC0", Offset = "0x91AFC0", VA = "0x91AFC0")]
			public <>c__DisplayClass456_0()
			{
			}

			[Token(Token = "0x600073C")]
			[Address(RVA = "0x91AFC8", Offset = "0x91AFC8", VA = "0x91AFC8")]
			internal bool <ShowSwapButton>b__0(ElementAssignmentConflictInfo x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000300")]
		public const int versionMajor = 1;

		[Token(Token = "0x4000301")]
		public const int versionMinor = 1;

		[Token(Token = "0x4000302")]
		public const bool usesTMPro = true;

		[Token(Token = "0x4000303")]
		private const float blockInputOnFocusTimeout = 0.1f;

		[Token(Token = "0x4000304")]
		private const string buttonIdentifier_playerSelection = "PlayerSelection";

		[Token(Token = "0x4000305")]
		private const string buttonIdentifier_removeController = "RemoveController";

		[Token(Token = "0x4000306")]
		private const string buttonIdentifier_assignController = "AssignController";

		[Token(Token = "0x4000307")]
		private const string buttonIdentifier_calibrateController = "CalibrateController";

		[Token(Token = "0x4000308")]
		private const string buttonIdentifier_editInputBehaviors = "EditInputBehaviors";

		[Token(Token = "0x4000309")]
		private const string buttonIdentifier_mapCategorySelection = "MapCategorySelection";

		[Token(Token = "0x400030A")]
		private const string buttonIdentifier_assignedControllerSelection = "AssignedControllerSelection";

		[Token(Token = "0x400030B")]
		private const string buttonIdentifier_done = "Done";

		[Token(Token = "0x400030C")]
		private const string buttonIdentifier_restoreDefaults = "RestoreDefaults";

		[Token(Token = "0x400030D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F2C98", Offset = "0x6F2C98")]
		[SerializeField]
		private InputManager _rewiredInputManager;

		[Token(Token = "0x400030E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F2CE4", Offset = "0x6F2CE4")]
		[SerializeField]
		private bool _dontDestroyOnLoad;

		[Token(Token = "0x400030F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F2D30", Offset = "0x6F2D30")]
		[SerializeField]
		private bool _openOnStart;

		[Token(Token = "0x4000310")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F2D7C", Offset = "0x6F2D7C")]
		private int _keyboardMapDefaultLayout;

		[Token(Token = "0x4000311")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F2DC8", Offset = "0x6F2DC8")]
		private int _mouseMapDefaultLayout;

		[Token(Token = "0x4000312")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F2E14", Offset = "0x6F2E14")]
		private int _joystickMapDefaultLayout;

		[Token(Token = "0x4000313")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MappingSet[] _mappingSets;

		[Token(Token = "0x4000314")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F2E70", Offset = "0x6F2E70")]
		private bool _showPlayers;

		[Token(Token = "0x4000315")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F2EBC", Offset = "0x6F2EBC")]
		private bool _showControllers;

		[Token(Token = "0x4000316")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F2F08", Offset = "0x6F2F08")]
		[SerializeField]
		private bool _showKeyboard;

		[Token(Token = "0x4000317")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3B")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F2F54", Offset = "0x6F2F54")]
		[SerializeField]
		private bool _showMouse;

		[Token(Token = "0x4000318")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F2FA0", Offset = "0x6F2FA0")]
		[SerializeField]
		private int _maxControllersPerPlayer;

		[Token(Token = "0x4000319")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F2FEC", Offset = "0x6F2FEC")]
		private bool _showActionCategoryLabels;

		[Token(Token = "0x400031A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F3038", Offset = "0x6F3038")]
		private int _keyboardInputFieldCount;

		[Token(Token = "0x400031B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F3084", Offset = "0x6F3084")]
		private int _mouseInputFieldCount;

		[Token(Token = "0x400031C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F30D0", Offset = "0x6F30D0")]
		[SerializeField]
		private int _controllerInputFieldCount;

		[Token(Token = "0x400031D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F311C", Offset = "0x6F311C")]
		private bool _showFullAxisInputFields;

		[Token(Token = "0x400031E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F3168", Offset = "0x6F3168")]
		private bool _showSplitAxisInputFields;

		[Token(Token = "0x400031F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F31B4", Offset = "0x6F31B4")]
		private bool _allowElementAssignmentConflicts;

		[Token(Token = "0x4000320")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x53")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F3200", Offset = "0x6F3200")]
		[SerializeField]
		private bool _allowElementAssignmentSwap;

		[Token(Token = "0x4000321")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F324C", Offset = "0x6F324C")]
		[SerializeField]
		private int _actionLabelWidth;

		[Token(Token = "0x4000322")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F3298", Offset = "0x6F3298")]
		[SerializeField]
		private int _keyboardColMaxWidth;

		[Token(Token = "0x4000323")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F32E4", Offset = "0x6F32E4")]
		[SerializeField]
		private int _mouseColMaxWidth;

		[Token(Token = "0x4000324")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F3330", Offset = "0x6F3330")]
		[SerializeField]
		private int _controllerColMaxWidth;

		[Token(Token = "0x4000325")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F337C", Offset = "0x6F337C")]
		private int _inputRowHeight;

		[Token(Token = "0x4000326")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F33C8", Offset = "0x6F33C8")]
		[SerializeField]
		private RectOffset _inputRowPadding;

		[Token(Token = "0x4000327")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F3414", Offset = "0x6F3414")]
		private int _inputRowFieldSpacing;

		[Token(Token = "0x4000328")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F3460", Offset = "0x6F3460")]
		private int _inputColumnSpacing;

		[Token(Token = "0x4000329")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F34AC", Offset = "0x6F34AC")]
		[SerializeField]
		private int _inputRowCategorySpacing;

		[Token(Token = "0x400032A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F34F8", Offset = "0x6F34F8")]
		[SerializeField]
		private int _invertToggleWidth;

		[Token(Token = "0x400032B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F3544", Offset = "0x6F3544")]
		private int _defaultWindowWidth;

		[Token(Token = "0x400032C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F3590", Offset = "0x6F3590")]
		private int _defaultWindowHeight;

		[Token(Token = "0x400032D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F35DC", Offset = "0x6F35DC")]
		[SerializeField]
		private float _controllerAssignmentTimeout;

		[Token(Token = "0x400032E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F3628", Offset = "0x6F3628")]
		[SerializeField]
		private float _preInputAssignmentTimeout;

		[Token(Token = "0x400032F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F3674", Offset = "0x6F3674")]
		private float _inputAssignmentTimeout;

		[Token(Token = "0x4000330")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F36C0", Offset = "0x6F36C0")]
		[SerializeField]
		private float _axisCalibrationTimeout;

		[Token(Token = "0x4000331")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F370C", Offset = "0x6F370C")]
		[SerializeField]
		private bool _ignoreMouseXAxisAssignment;

		[Token(Token = "0x4000332")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F3758", Offset = "0x6F3758")]
		[SerializeField]
		private bool _ignoreMouseYAxisAssignment;

		[Token(Token = "0x4000333")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F37A4", Offset = "0x6F37A4")]
		private int _screenToggleAction;

		[Token(Token = "0x4000334")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F37F0", Offset = "0x6F37F0")]
		[SerializeField]
		private int _screenOpenAction;

		[Token(Token = "0x4000335")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F383C", Offset = "0x6F383C")]
		[SerializeField]
		private int _screenCloseAction;

		[Token(Token = "0x4000336")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F3888", Offset = "0x6F3888")]
		[SerializeField]
		private int _universalCancelAction;

		[Token(Token = "0x4000337")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F38D4", Offset = "0x6F38D4")]
		[SerializeField]
		private bool _universalCancelClosesScreen;

		[Token(Token = "0x4000338")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAD")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F3920", Offset = "0x6F3920")]
		private bool _showInputBehaviorSettings;

		[Token(Token = "0x4000339")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F396C", Offset = "0x6F396C")]
		private InputBehaviorSettings[] _inputBehaviorSettings;

		[Token(Token = "0x400033A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F39B8", Offset = "0x6F39B8")]
		private bool _useThemeSettings;

		[Token(Token = "0x400033B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F3A04", Offset = "0x6F3A04")]
		private ThemeSettings _themeSettings;

		[Token(Token = "0x400033C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F3A50", Offset = "0x6F3A50")]
		private LanguageDataBase _language;

		[Token(Token = "0x400033D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F3A9C", Offset = "0x6F3A9C")]
		private Prefabs prefabs;

		[Token(Token = "0x400033E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F3AE8", Offset = "0x6F3AE8")]
		private References references;

		[Token(Token = "0x400033F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F3B34", Offset = "0x6F3B34")]
		[SerializeField]
		private bool _showPlayersGroupLabel;

		[Token(Token = "0x4000340")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE1")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F3B80", Offset = "0x6F3B80")]
		private bool _showControllerGroupLabel;

		[Token(Token = "0x4000341")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE2")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F3BCC", Offset = "0x6F3BCC")]
		private bool _showAssignedControllersGroupLabel;

		[Token(Token = "0x4000342")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE3")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F3C18", Offset = "0x6F3C18")]
		private bool _showSettingsGroupLabel;

		[Token(Token = "0x4000343")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F3C64", Offset = "0x6F3C64")]
		private bool _showMapCategoriesGroupLabel;

		[Token(Token = "0x4000344")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE5")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F3CB0", Offset = "0x6F3CB0")]
		private bool _showControllerNameLabel;

		[Token(Token = "0x4000345")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE6")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F3CFC", Offset = "0x6F3CFC")]
		private bool _showAssignedControllers;

		[Token(Token = "0x4000346")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private System.Action _ScreenClosedEvent;

		[Token(Token = "0x4000347")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private System.Action _ScreenOpenedEvent;

		[Token(Token = "0x4000348")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private System.Action _PopupWindowOpenedEvent;

		[Token(Token = "0x4000349")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private System.Action _PopupWindowClosedEvent;

		[Token(Token = "0x400034A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private System.Action _InputPollingStartedEvent;

		[Token(Token = "0x400034B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private System.Action _InputPollingEndedEvent;

		[Token(Token = "0x400034C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F3D48", Offset = "0x6F3D48")]
		[SerializeField]
		private UnityEvent _onScreenClosed;

		[Token(Token = "0x400034D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F3D94", Offset = "0x6F3D94")]
		[SerializeField]
		private UnityEvent _onScreenOpened;

		[Token(Token = "0x400034E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F3DE0", Offset = "0x6F3DE0")]
		private UnityEvent _onPopupWindowClosed;

		[Token(Token = "0x400034F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F3E2C", Offset = "0x6F3E2C")]
		private UnityEvent _onPopupWindowOpened;

		[Token(Token = "0x4000350")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F3E78", Offset = "0x6F3E78")]
		private UnityEvent _onInputPollingStarted;

		[Token(Token = "0x4000351")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F3EC4", Offset = "0x6F3EC4")]
		private UnityEvent _onInputPollingEnded;

		[Token(Token = "0x4000352")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static ControlMapper Instance;

		[Token(Token = "0x4000353")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private bool initialized;

		[Token(Token = "0x4000354")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
		private int playerCount;

		[Token(Token = "0x4000355")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private InputGrid inputGrid;

		[Token(Token = "0x4000356")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private WindowManager windowManager;

		[Token(Token = "0x4000357")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private int currentPlayerId;

		[Token(Token = "0x4000358")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
		private int currentMapCategoryId;

		[Token(Token = "0x4000359")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private List<GUIButton> playerButtons;

		[Token(Token = "0x400035A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private List<GUIButton> mapCategoryButtons;

		[Token(Token = "0x400035B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		private List<GUIButton> assignedControllerButtons;

		[Token(Token = "0x400035C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private GUIButton assignedControllerButtonsPlaceholder;

		[Token(Token = "0x400035D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		private List<GameObject> miscInstantiatedObjects;

		[Token(Token = "0x400035E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		private GameObject canvas;

		[Token(Token = "0x400035F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		private GameObject lastUISelection;

		[Token(Token = "0x4000360")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		private int currentJoystickId;

		[Token(Token = "0x4000361")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
		private float blockInputOnFocusEndTime;

		[Token(Token = "0x4000362")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		private bool isPollingForInput;

		[Token(Token = "0x4000363")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		private InputMapping pendingInputMapping;

		[Token(Token = "0x4000364")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		private AxisCalibrator pendingAxisCalibration;

		[Token(Token = "0x4000365")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		private Action<InputFieldInfo> inputFieldActivatedDelegate;

		[Token(Token = "0x4000366")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		private Action<ToggleInfo, bool> inputFieldInvertToggleStateChangedDelegate;

		[Token(Token = "0x4000367")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		private System.Action _restoreDefaultsDelegate;

		[Token(Token = "0x17000273")]
		public InputManager rewiredInputManager
		{
			[Token(Token = "0x60004E9")]
			[Address(RVA = "0x8EBE24", Offset = "0x8EBE24", VA = "0x8EBE24")]
			get
			{
				return null;
			}
			[Token(Token = "0x60004EA")]
			[Address(RVA = "0x8EBE2C", Offset = "0x8EBE2C", VA = "0x8EBE2C")]
			set
			{
			}
		}

		[Token(Token = "0x17000274")]
		public bool dontDestroyOnLoad
		{
			[Token(Token = "0x60004EB")]
			[Address(RVA = "0x8EBE40", Offset = "0x8EBE40", VA = "0x8EBE40")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60004EC")]
			[Address(RVA = "0x8EBE48", Offset = "0x8EBE48", VA = "0x8EBE48")]
			set
			{
			}
		}

		[Token(Token = "0x17000275")]
		public int keyboardMapDefaultLayout
		{
			[Token(Token = "0x60004ED")]
			[Address(RVA = "0x8EBF00", Offset = "0x8EBF00", VA = "0x8EBF00")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60004EE")]
			[Address(RVA = "0x8EBF08", Offset = "0x8EBF08", VA = "0x8EBF08")]
			set
			{
			}
		}

		[Token(Token = "0x17000276")]
		public int mouseMapDefaultLayout
		{
			[Token(Token = "0x60004EF")]
			[Address(RVA = "0x8EBF10", Offset = "0x8EBF10", VA = "0x8EBF10")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60004F0")]
			[Address(RVA = "0x8EBF18", Offset = "0x8EBF18", VA = "0x8EBF18")]
			set
			{
			}
		}

		[Token(Token = "0x17000277")]
		public int joystickMapDefaultLayout
		{
			[Token(Token = "0x60004F1")]
			[Address(RVA = "0x8EBF20", Offset = "0x8EBF20", VA = "0x8EBF20")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60004F2")]
			[Address(RVA = "0x8EBF28", Offset = "0x8EBF28", VA = "0x8EBF28")]
			set
			{
			}
		}

		[Token(Token = "0x17000278")]
		public bool showPlayers
		{
			[Token(Token = "0x60004F3")]
			[Address(RVA = "0x8EBF30", Offset = "0x8EBF30", VA = "0x8EBF30")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60004F4")]
			[Address(RVA = "0x8EBFBC", Offset = "0x8EBFBC", VA = "0x8EBFBC")]
			set
			{
			}
		}

		[Token(Token = "0x17000279")]
		public bool showControllers
		{
			[Token(Token = "0x60004F5")]
			[Address(RVA = "0x8EBFC8", Offset = "0x8EBFC8", VA = "0x8EBFC8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60004F6")]
			[Address(RVA = "0x8EBFD0", Offset = "0x8EBFD0", VA = "0x8EBFD0")]
			set
			{
			}
		}

		[Token(Token = "0x1700027A")]
		public bool showKeyboard
		{
			[Token(Token = "0x60004F7")]
			[Address(RVA = "0x8EBFDC", Offset = "0x8EBFDC", VA = "0x8EBFDC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60004F8")]
			[Address(RVA = "0x8EBFE4", Offset = "0x8EBFE4", VA = "0x8EBFE4")]
			set
			{
			}
		}

		[Token(Token = "0x1700027B")]
		public bool showMouse
		{
			[Token(Token = "0x60004F9")]
			[Address(RVA = "0x8EBFF0", Offset = "0x8EBFF0", VA = "0x8EBFF0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60004FA")]
			[Address(RVA = "0x8EBFF8", Offset = "0x8EBFF8", VA = "0x8EBFF8")]
			set
			{
			}
		}

		[Token(Token = "0x1700027C")]
		public int maxControllersPerPlayer
		{
			[Token(Token = "0x60004FB")]
			[Address(RVA = "0x8EC004", Offset = "0x8EC004", VA = "0x8EC004")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60004FC")]
			[Address(RVA = "0x8EC00C", Offset = "0x8EC00C", VA = "0x8EC00C")]
			set
			{
			}
		}

		[Token(Token = "0x1700027D")]
		public bool showActionCategoryLabels
		{
			[Token(Token = "0x60004FD")]
			[Address(RVA = "0x8EC014", Offset = "0x8EC014", VA = "0x8EC014")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60004FE")]
			[Address(RVA = "0x8EC01C", Offset = "0x8EC01C", VA = "0x8EC01C")]
			set
			{
			}
		}

		[Token(Token = "0x1700027E")]
		public int keyboardInputFieldCount
		{
			[Token(Token = "0x60004FF")]
			[Address(RVA = "0x8EC028", Offset = "0x8EC028", VA = "0x8EC028")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000500")]
			[Address(RVA = "0x8EC030", Offset = "0x8EC030", VA = "0x8EC030")]
			set
			{
			}
		}

		[Token(Token = "0x1700027F")]
		public int mouseInputFieldCount
		{
			[Token(Token = "0x6000501")]
			[Address(RVA = "0x8EC038", Offset = "0x8EC038", VA = "0x8EC038")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000502")]
			[Address(RVA = "0x8EC040", Offset = "0x8EC040", VA = "0x8EC040")]
			set
			{
			}
		}

		[Token(Token = "0x17000280")]
		public int controllerInputFieldCount
		{
			[Token(Token = "0x6000503")]
			[Address(RVA = "0x8EC048", Offset = "0x8EC048", VA = "0x8EC048")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000504")]
			[Address(RVA = "0x8EC050", Offset = "0x8EC050", VA = "0x8EC050")]
			set
			{
			}
		}

		[Token(Token = "0x17000281")]
		public bool showFullAxisInputFields
		{
			[Token(Token = "0x6000505")]
			[Address(RVA = "0x8EC058", Offset = "0x8EC058", VA = "0x8EC058")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000506")]
			[Address(RVA = "0x8EC060", Offset = "0x8EC060", VA = "0x8EC060")]
			set
			{
			}
		}

		[Token(Token = "0x17000282")]
		public bool showSplitAxisInputFields
		{
			[Token(Token = "0x6000507")]
			[Address(RVA = "0x8EC06C", Offset = "0x8EC06C", VA = "0x8EC06C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000508")]
			[Address(RVA = "0x8EC074", Offset = "0x8EC074", VA = "0x8EC074")]
			set
			{
			}
		}

		[Token(Token = "0x17000283")]
		public bool allowElementAssignmentConflicts
		{
			[Token(Token = "0x6000509")]
			[Address(RVA = "0x8EC080", Offset = "0x8EC080", VA = "0x8EC080")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600050A")]
			[Address(RVA = "0x8EC088", Offset = "0x8EC088", VA = "0x8EC088")]
			set
			{
			}
		}

		[Token(Token = "0x17000284")]
		public bool allowElementAssignmentSwap
		{
			[Token(Token = "0x600050B")]
			[Address(RVA = "0x8EC094", Offset = "0x8EC094", VA = "0x8EC094")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600050C")]
			[Address(RVA = "0x8EC09C", Offset = "0x8EC09C", VA = "0x8EC09C")]
			set
			{
			}
		}

		[Token(Token = "0x17000285")]
		public int actionLabelWidth
		{
			[Token(Token = "0x600050D")]
			[Address(RVA = "0x8EC0A8", Offset = "0x8EC0A8", VA = "0x8EC0A8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600050E")]
			[Address(RVA = "0x8EC0B0", Offset = "0x8EC0B0", VA = "0x8EC0B0")]
			set
			{
			}
		}

		[Token(Token = "0x17000286")]
		public int keyboardColMaxWidth
		{
			[Token(Token = "0x600050F")]
			[Address(RVA = "0x8EC0B8", Offset = "0x8EC0B8", VA = "0x8EC0B8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000510")]
			[Address(RVA = "0x8EC0C0", Offset = "0x8EC0C0", VA = "0x8EC0C0")]
			set
			{
			}
		}

		[Token(Token = "0x17000287")]
		public int mouseColMaxWidth
		{
			[Token(Token = "0x6000511")]
			[Address(RVA = "0x8EC0C8", Offset = "0x8EC0C8", VA = "0x8EC0C8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000512")]
			[Address(RVA = "0x8EC0D0", Offset = "0x8EC0D0", VA = "0x8EC0D0")]
			set
			{
			}
		}

		[Token(Token = "0x17000288")]
		public int controllerColMaxWidth
		{
			[Token(Token = "0x6000513")]
			[Address(RVA = "0x8EC0D8", Offset = "0x8EC0D8", VA = "0x8EC0D8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000514")]
			[Address(RVA = "0x8EC0E0", Offset = "0x8EC0E0", VA = "0x8EC0E0")]
			set
			{
			}
		}

		[Token(Token = "0x17000289")]
		public int inputRowHeight
		{
			[Token(Token = "0x6000515")]
			[Address(RVA = "0x8EC0E8", Offset = "0x8EC0E8", VA = "0x8EC0E8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000516")]
			[Address(RVA = "0x8EC0F0", Offset = "0x8EC0F0", VA = "0x8EC0F0")]
			set
			{
			}
		}

		[Token(Token = "0x1700028A")]
		public int inputColumnSpacing
		{
			[Token(Token = "0x6000517")]
			[Address(RVA = "0x8EC0F8", Offset = "0x8EC0F8", VA = "0x8EC0F8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000518")]
			[Address(RVA = "0x8EC100", Offset = "0x8EC100", VA = "0x8EC100")]
			set
			{
			}
		}

		[Token(Token = "0x1700028B")]
		public int inputRowCategorySpacing
		{
			[Token(Token = "0x6000519")]
			[Address(RVA = "0x8EC108", Offset = "0x8EC108", VA = "0x8EC108")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600051A")]
			[Address(RVA = "0x8EC110", Offset = "0x8EC110", VA = "0x8EC110")]
			set
			{
			}
		}

		[Token(Token = "0x1700028C")]
		public int invertToggleWidth
		{
			[Token(Token = "0x600051B")]
			[Address(RVA = "0x8EC118", Offset = "0x8EC118", VA = "0x8EC118")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600051C")]
			[Address(RVA = "0x8EC120", Offset = "0x8EC120", VA = "0x8EC120")]
			set
			{
			}
		}

		[Token(Token = "0x1700028D")]
		public int defaultWindowWidth
		{
			[Token(Token = "0x600051D")]
			[Address(RVA = "0x8EC128", Offset = "0x8EC128", VA = "0x8EC128")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600051E")]
			[Address(RVA = "0x8EC130", Offset = "0x8EC130", VA = "0x8EC130")]
			set
			{
			}
		}

		[Token(Token = "0x1700028E")]
		public int defaultWindowHeight
		{
			[Token(Token = "0x600051F")]
			[Address(RVA = "0x8EC138", Offset = "0x8EC138", VA = "0x8EC138")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000520")]
			[Address(RVA = "0x8EC140", Offset = "0x8EC140", VA = "0x8EC140")]
			set
			{
			}
		}

		[Token(Token = "0x1700028F")]
		public float controllerAssignmentTimeout
		{
			[Token(Token = "0x6000521")]
			[Address(RVA = "0x8EC148", Offset = "0x8EC148", VA = "0x8EC148")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000522")]
			[Address(RVA = "0x8EC150", Offset = "0x8EC150", VA = "0x8EC150")]
			set
			{
			}
		}

		[Token(Token = "0x17000290")]
		public float preInputAssignmentTimeout
		{
			[Token(Token = "0x6000523")]
			[Address(RVA = "0x8EC158", Offset = "0x8EC158", VA = "0x8EC158")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000524")]
			[Address(RVA = "0x8EC160", Offset = "0x8EC160", VA = "0x8EC160")]
			set
			{
			}
		}

		[Token(Token = "0x17000291")]
		public float inputAssignmentTimeout
		{
			[Token(Token = "0x6000525")]
			[Address(RVA = "0x8EC168", Offset = "0x8EC168", VA = "0x8EC168")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000526")]
			[Address(RVA = "0x8EC170", Offset = "0x8EC170", VA = "0x8EC170")]
			set
			{
			}
		}

		[Token(Token = "0x17000292")]
		public float axisCalibrationTimeout
		{
			[Token(Token = "0x6000527")]
			[Address(RVA = "0x8EC178", Offset = "0x8EC178", VA = "0x8EC178")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000528")]
			[Address(RVA = "0x8EC180", Offset = "0x8EC180", VA = "0x8EC180")]
			set
			{
			}
		}

		[Token(Token = "0x17000293")]
		public bool ignoreMouseXAxisAssignment
		{
			[Token(Token = "0x6000529")]
			[Address(RVA = "0x8EC188", Offset = "0x8EC188", VA = "0x8EC188")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600052A")]
			[Address(RVA = "0x8EC190", Offset = "0x8EC190", VA = "0x8EC190")]
			set
			{
			}
		}

		[Token(Token = "0x17000294")]
		public bool ignoreMouseYAxisAssignment
		{
			[Token(Token = "0x600052B")]
			[Address(RVA = "0x8EC19C", Offset = "0x8EC19C", VA = "0x8EC19C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600052C")]
			[Address(RVA = "0x8EC1A4", Offset = "0x8EC1A4", VA = "0x8EC1A4")]
			set
			{
			}
		}

		[Token(Token = "0x17000295")]
		public bool universalCancelClosesScreen
		{
			[Token(Token = "0x600052D")]
			[Address(RVA = "0x8EC1B0", Offset = "0x8EC1B0", VA = "0x8EC1B0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600052E")]
			[Address(RVA = "0x8EC1B8", Offset = "0x8EC1B8", VA = "0x8EC1B8")]
			set
			{
			}
		}

		[Token(Token = "0x17000296")]
		public bool showInputBehaviorSettings
		{
			[Token(Token = "0x600052F")]
			[Address(RVA = "0x8EC1C4", Offset = "0x8EC1C4", VA = "0x8EC1C4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000530")]
			[Address(RVA = "0x8EC1CC", Offset = "0x8EC1CC", VA = "0x8EC1CC")]
			set
			{
			}
		}

		[Token(Token = "0x17000297")]
		public bool useThemeSettings
		{
			[Token(Token = "0x6000531")]
			[Address(RVA = "0x8EC1D8", Offset = "0x8EC1D8", VA = "0x8EC1D8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000532")]
			[Address(RVA = "0x8EC1E0", Offset = "0x8EC1E0", VA = "0x8EC1E0")]
			set
			{
			}
		}

		[Token(Token = "0x17000298")]
		public LanguageDataBase language
		{
			[Token(Token = "0x6000533")]
			[Address(RVA = "0x8EC1EC", Offset = "0x8EC1EC", VA = "0x8EC1EC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000534")]
			[Address(RVA = "0x8EC1F4", Offset = "0x8EC1F4", VA = "0x8EC1F4")]
			set
			{
			}
		}

		[Token(Token = "0x17000299")]
		public bool showPlayersGroupLabel
		{
			[Token(Token = "0x6000535")]
			[Address(RVA = "0x8EC290", Offset = "0x8EC290", VA = "0x8EC290")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000536")]
			[Address(RVA = "0x8EC298", Offset = "0x8EC298", VA = "0x8EC298")]
			set
			{
			}
		}

		[Token(Token = "0x1700029A")]
		public bool showControllerGroupLabel
		{
			[Token(Token = "0x6000537")]
			[Address(RVA = "0x8EC2A4", Offset = "0x8EC2A4", VA = "0x8EC2A4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000538")]
			[Address(RVA = "0x8EC2AC", Offset = "0x8EC2AC", VA = "0x8EC2AC")]
			set
			{
			}
		}

		[Token(Token = "0x1700029B")]
		public bool showAssignedControllersGroupLabel
		{
			[Token(Token = "0x6000539")]
			[Address(RVA = "0x8EC2B8", Offset = "0x8EC2B8", VA = "0x8EC2B8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600053A")]
			[Address(RVA = "0x8EC2C0", Offset = "0x8EC2C0", VA = "0x8EC2C0")]
			set
			{
			}
		}

		[Token(Token = "0x1700029C")]
		public bool showSettingsGroupLabel
		{
			[Token(Token = "0x600053B")]
			[Address(RVA = "0x8EC2CC", Offset = "0x8EC2CC", VA = "0x8EC2CC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600053C")]
			[Address(RVA = "0x8EC2D4", Offset = "0x8EC2D4", VA = "0x8EC2D4")]
			set
			{
			}
		}

		[Token(Token = "0x1700029D")]
		public bool showMapCategoriesGroupLabel
		{
			[Token(Token = "0x600053D")]
			[Address(RVA = "0x8EC2E0", Offset = "0x8EC2E0", VA = "0x8EC2E0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600053E")]
			[Address(RVA = "0x8EC2E8", Offset = "0x8EC2E8", VA = "0x8EC2E8")]
			set
			{
			}
		}

		[Token(Token = "0x1700029E")]
		public bool showControllerNameLabel
		{
			[Token(Token = "0x600053F")]
			[Address(RVA = "0x8EC2F4", Offset = "0x8EC2F4", VA = "0x8EC2F4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000540")]
			[Address(RVA = "0x8EC2FC", Offset = "0x8EC2FC", VA = "0x8EC2FC")]
			set
			{
			}
		}

		[Token(Token = "0x1700029F")]
		public bool showAssignedControllers
		{
			[Token(Token = "0x6000541")]
			[Address(RVA = "0x8EC308", Offset = "0x8EC308", VA = "0x8EC308")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000542")]
			[Address(RVA = "0x8EC310", Offset = "0x8EC310", VA = "0x8EC310")]
			set
			{
			}
		}

		[Token(Token = "0x170002A0")]
		public System.Action restoreDefaultsDelegate
		{
			[Token(Token = "0x6000543")]
			[Address(RVA = "0x8EC31C", Offset = "0x8EC31C", VA = "0x8EC31C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000544")]
			[Address(RVA = "0x8EC324", Offset = "0x8EC324", VA = "0x8EC324")]
			set
			{
			}
		}

		[Token(Token = "0x170002A1")]
		public bool isOpen
		{
			[Token(Token = "0x6000545")]
			[Address(RVA = "0x8EC32C", Offset = "0x8EC32C", VA = "0x8EC32C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002A2")]
		private bool isFocused
		{
			[Token(Token = "0x6000546")]
			[Address(RVA = "0x8EC3F0", Offset = "0x8EC3F0", VA = "0x8EC3F0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002A3")]
		private bool inputAllowed
		{
			[Token(Token = "0x6000547")]
			[Address(RVA = "0x8EC424", Offset = "0x8EC424", VA = "0x8EC424")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002A4")]
		private int inputGridColumnCount
		{
			[Token(Token = "0x6000548")]
			[Address(RVA = "0x8EC450", Offset = "0x8EC450", VA = "0x8EC450")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170002A5")]
		private int inputGridWidth
		{
			[Token(Token = "0x6000549")]
			[Address(RVA = "0x8EC474", Offset = "0x8EC474", VA = "0x8EC474")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170002A6")]
		private Player currentPlayer
		{
			[Token(Token = "0x600054A")]
			[Address(RVA = "0x8EC4D8", Offset = "0x8EC4D8", VA = "0x8EC4D8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002A7")]
		private InputCategory currentMapCategory
		{
			[Token(Token = "0x600054B")]
			[Address(RVA = "0x8EC54C", Offset = "0x8EC54C", VA = "0x8EC54C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002A8")]
		private MappingSet currentMappingSet
		{
			[Token(Token = "0x600054C")]
			[Address(RVA = "0x8EC5C0", Offset = "0x8EC5C0", VA = "0x8EC5C0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002A9")]
		private Joystick currentJoystick
		{
			[Token(Token = "0x600054D")]
			[Address(RVA = "0x8EC630", Offset = "0x8EC630", VA = "0x8EC630")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002AA")]
		private bool isJoystickSelected
		{
			[Token(Token = "0x600054E")]
			[Address(RVA = "0x8EC6A4", Offset = "0x8EC6A4", VA = "0x8EC6A4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002AB")]
		private GameObject currentUISelection
		{
			[Token(Token = "0x600054F")]
			[Address(RVA = "0x8EC6B4", Offset = "0x8EC6B4", VA = "0x8EC6B4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002AC")]
		private bool showSettings
		{
			[Token(Token = "0x6000550")]
			[Address(RVA = "0x8EC790", Offset = "0x8EC790", VA = "0x8EC790")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002AD")]
		private bool showMapCategories
		{
			[Token(Token = "0x6000551")]
			[Address(RVA = "0x8EC7C4", Offset = "0x8EC7C4", VA = "0x8EC7C4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x14000003")]
		public event System.Action ScreenClosedEvent
		{
			[Token(Token = "0x60004D1")]
			[Address(RVA = "0x8EB704", Offset = "0x8EB704", VA = "0x8EB704")]
			add
			{
			}
			[Token(Token = "0x60004D2")]
			[Address(RVA = "0x8EB780", Offset = "0x8EB780", VA = "0x8EB780")]
			remove
			{
			}
		}

		[Token(Token = "0x14000004")]
		public event System.Action ScreenOpenedEvent
		{
			[Token(Token = "0x60004D3")]
			[Address(RVA = "0x8EB7FC", Offset = "0x8EB7FC", VA = "0x8EB7FC")]
			add
			{
			}
			[Token(Token = "0x60004D4")]
			[Address(RVA = "0x8EB878", Offset = "0x8EB878", VA = "0x8EB878")]
			remove
			{
			}
		}

		[Token(Token = "0x14000005")]
		public event System.Action PopupWindowClosedEvent
		{
			[Token(Token = "0x60004D5")]
			[Address(RVA = "0x8EB8F4", Offset = "0x8EB8F4", VA = "0x8EB8F4")]
			add
			{
			}
			[Token(Token = "0x60004D6")]
			[Address(RVA = "0x8EB970", Offset = "0x8EB970", VA = "0x8EB970")]
			remove
			{
			}
		}

		[Token(Token = "0x14000006")]
		public event System.Action PopupWindowOpenedEvent
		{
			[Token(Token = "0x60004D7")]
			[Address(RVA = "0x8EB9EC", Offset = "0x8EB9EC", VA = "0x8EB9EC")]
			add
			{
			}
			[Token(Token = "0x60004D8")]
			[Address(RVA = "0x8EBA68", Offset = "0x8EBA68", VA = "0x8EBA68")]
			remove
			{
			}
		}

		[Token(Token = "0x14000007")]
		public event System.Action InputPollingStartedEvent
		{
			[Token(Token = "0x60004D9")]
			[Address(RVA = "0x8EBAE4", Offset = "0x8EBAE4", VA = "0x8EBAE4")]
			add
			{
			}
			[Token(Token = "0x60004DA")]
			[Address(RVA = "0x8EBB60", Offset = "0x8EBB60", VA = "0x8EBB60")]
			remove
			{
			}
		}

		[Token(Token = "0x14000008")]
		public event System.Action InputPollingEndedEvent
		{
			[Token(Token = "0x60004DB")]
			[Address(RVA = "0x8EBBDC", Offset = "0x8EBBDC", VA = "0x8EBBDC")]
			add
			{
			}
			[Token(Token = "0x60004DC")]
			[Address(RVA = "0x8EBC58", Offset = "0x8EBC58", VA = "0x8EBC58")]
			remove
			{
			}
		}

		[Token(Token = "0x14000009")]
		public event UnityAction onScreenClosed
		{
			[Token(Token = "0x60004DD")]
			[Address(RVA = "0x8EBCD4", Offset = "0x8EBCD4", VA = "0x8EBCD4")]
			add
			{
			}
			[Token(Token = "0x60004DE")]
			[Address(RVA = "0x8EBCF0", Offset = "0x8EBCF0", VA = "0x8EBCF0")]
			remove
			{
			}
		}

		[Token(Token = "0x1400000A")]
		public event UnityAction onScreenOpened
		{
			[Token(Token = "0x60004DF")]
			[Address(RVA = "0x8EBD0C", Offset = "0x8EBD0C", VA = "0x8EBD0C")]
			add
			{
			}
			[Token(Token = "0x60004E0")]
			[Address(RVA = "0x8EBD28", Offset = "0x8EBD28", VA = "0x8EBD28")]
			remove
			{
			}
		}

		[Token(Token = "0x1400000B")]
		public event UnityAction onPopupWindowClosed
		{
			[Token(Token = "0x60004E1")]
			[Address(RVA = "0x8EBD44", Offset = "0x8EBD44", VA = "0x8EBD44")]
			add
			{
			}
			[Token(Token = "0x60004E2")]
			[Address(RVA = "0x8EBD60", Offset = "0x8EBD60", VA = "0x8EBD60")]
			remove
			{
			}
		}

		[Token(Token = "0x1400000C")]
		public event UnityAction onPopupWindowOpened
		{
			[Token(Token = "0x60004E3")]
			[Address(RVA = "0x8EBD7C", Offset = "0x8EBD7C", VA = "0x8EBD7C")]
			add
			{
			}
			[Token(Token = "0x60004E4")]
			[Address(RVA = "0x8EBD98", Offset = "0x8EBD98", VA = "0x8EBD98")]
			remove
			{
			}
		}

		[Token(Token = "0x1400000D")]
		public event UnityAction onInputPollingStarted
		{
			[Token(Token = "0x60004E5")]
			[Address(RVA = "0x8EBDB4", Offset = "0x8EBDB4", VA = "0x8EBDB4")]
			add
			{
			}
			[Token(Token = "0x60004E6")]
			[Address(RVA = "0x8EBDD0", Offset = "0x8EBDD0", VA = "0x8EBDD0")]
			remove
			{
			}
		}

		[Token(Token = "0x1400000E")]
		public event UnityAction onInputPollingEnded
		{
			[Token(Token = "0x60004E7")]
			[Address(RVA = "0x8EBDEC", Offset = "0x8EBDEC", VA = "0x8EBDEC")]
			add
			{
			}
			[Token(Token = "0x60004E8")]
			[Address(RVA = "0x8EBE08", Offset = "0x8EBE08", VA = "0x8EBE08")]
			remove
			{
			}
		}

		[Token(Token = "0x6000552")]
		[Address(RVA = "0x8EC7E4", Offset = "0x8EC7E4", VA = "0x8EC7E4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000553")]
		[Address(RVA = "0x8ED390", Offset = "0x8ED390", VA = "0x8ED390")]
		private void Start()
		{
		}

		[Token(Token = "0x6000554")]
		[Address(RVA = "0x8ED3A4", Offset = "0x8ED3A4", VA = "0x8ED3A4")]
		private void Update()
		{
		}

		[Token(Token = "0x6000555")]
		[Address(RVA = "0x8ED478", Offset = "0x8ED478", VA = "0x8ED478")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000556")]
		[Address(RVA = "0x8EC8A8", Offset = "0x8EC8A8", VA = "0x8EC8A8")]
		private void PreInitialize()
		{
		}

		[Token(Token = "0x6000557")]
		[Address(RVA = "0x8EC9B0", Offset = "0x8EC9B0", VA = "0x8EC9B0")]
		private void Initialize()
		{
		}

		[Token(Token = "0x6000558")]
		[Address(RVA = "0x8EDCA8", Offset = "0x8EDCA8", VA = "0x8EDCA8")]
		private void OnJoystickConnected(ControllerStatusChangedEventArgs args)
		{
		}

		[Token(Token = "0x6000559")]
		[Address(RVA = "0x8EDD24", Offset = "0x8EDD24", VA = "0x8EDD24")]
		private void OnJoystickDisconnected(ControllerStatusChangedEventArgs args)
		{
		}

		[Token(Token = "0x600055A")]
		[Address(RVA = "0x8EDD44", Offset = "0x8EDD44", VA = "0x8EDD44")]
		private void OnJoystickPreDisconnect(ControllerStatusChangedEventArgs args)
		{
		}

		[Token(Token = "0x600055B")]
		[Address(RVA = "0x8EDD48", Offset = "0x8EDD48", VA = "0x8EDD48")]
		public void OnButtonActivated(ButtonInfo buttonInfo)
		{
		}

		[Token(Token = "0x600055C")]
		[Address(RVA = "0x8EEB4C", Offset = "0x8EEB4C", VA = "0x8EEB4C")]
		public void OnInputFieldActivated(InputFieldInfo fieldInfo)
		{
		}

		[Token(Token = "0x600055D")]
		[Address(RVA = "0x8EF31C", Offset = "0x8EF31C", VA = "0x8EF31C")]
		public void OnInputFieldInvertToggleStateChanged(ToggleInfo toggleInfo, bool newState)
		{
		}

		[Token(Token = "0x600055E")]
		[Address(RVA = "0x8EE0EC", Offset = "0x8EE0EC", VA = "0x8EE0EC")]
		private void OnPlayerSelected(int playerId, bool redraw)
		{
		}

		[Token(Token = "0x600055F")]
		[Address(RVA = "0x8EE114", Offset = "0x8EE114", VA = "0x8EE114")]
		private void OnControllerSelected(int joystickId)
		{
		}

		[Token(Token = "0x6000560")]
		[Address(RVA = "0x8EE134", Offset = "0x8EE134", VA = "0x8EE134")]
		private void OnRemoveCurrentController()
		{
		}

		[Token(Token = "0x6000561")]
		[Address(RVA = "0x8EE9A0", Offset = "0x8EE9A0", VA = "0x8EE9A0")]
		private void OnMapCategorySelected(int id, bool redraw)
		{
		}

		[Token(Token = "0x6000562")]
		[Address(RVA = "0x8EEB3C", Offset = "0x8EEB3C", VA = "0x8EEB3C")]
		private void OnRestoreDefaults()
		{
		}

		[Token(Token = "0x6000563")]
		[Address(RVA = "0x8EF83C", Offset = "0x8EF83C", VA = "0x8EF83C")]
		private void OnScreenToggleActionPressed(InputActionEventData data)
		{
		}

		[Token(Token = "0x6000564")]
		[Address(RVA = "0x8EF8A4", Offset = "0x8EF8A4", VA = "0x8EF8A4")]
		private void OnScreenOpenActionPressed(InputActionEventData data)
		{
		}

		[Token(Token = "0x6000565")]
		[Address(RVA = "0x8EF8AC", Offset = "0x8EF8AC", VA = "0x8EF8AC")]
		private void OnScreenCloseActionPressed(InputActionEventData data)
		{
		}

		[Token(Token = "0x6000566")]
		[Address(RVA = "0x8EF8F8", Offset = "0x8EF8F8", VA = "0x8EF8F8")]
		private void OnUniversalCancelActionPressed(InputActionEventData data)
		{
		}

		[Token(Token = "0x6000567")]
		[Address(RVA = "0x8EF9BC", Offset = "0x8EF9BC", VA = "0x8EF9BC")]
		private void OnWindowCancel(int windowId)
		{
		}

		[Token(Token = "0x6000568")]
		[Address(RVA = "0x8EFA2C", Offset = "0x8EFA2C", VA = "0x8EFA2C")]
		private void OnRemoveElementAssignment(int windowId, ControllerMap map, ActionElementMap aem)
		{
		}

		[Token(Token = "0x6000569")]
		[Address(RVA = "0x8EFA78", Offset = "0x8EFA78", VA = "0x8EFA78")]
		private void OnBeginElementAssignment(InputFieldInfo fieldInfo, ControllerMap map, ActionElementMap aem, string actionName)
		{
		}

		[Token(Token = "0x600056A")]
		[Address(RVA = "0x8EFFF0", Offset = "0x8EFFF0", VA = "0x8EFFF0")]
		private void OnControllerAssignmentConfirmed(int windowId, Player player, int controllerId)
		{
		}

		[Token(Token = "0x600056B")]
		[Address(RVA = "0x8F047C", Offset = "0x8F047C", VA = "0x8F047C")]
		private void OnMouseAssignmentConfirmed(int windowId, Player player)
		{
		}

		[Token(Token = "0x600056C")]
		[Address(RVA = "0x8F06D8", Offset = "0x8F06D8", VA = "0x8F06D8")]
		private void OnElementAssignmentConflictReplaceConfirmed(int windowId, InputMapping mapping, ElementAssignment assignment, bool skipOtherPlayers, bool allowSwap)
		{
		}

		[Token(Token = "0x600056D")]
		[Address(RVA = "0x8F1370", Offset = "0x8F1370", VA = "0x8F1370")]
		private void OnElementAssignmentAddConfirmed(int windowId, InputMapping mapping, ElementAssignment assignment)
		{
		}

		[Token(Token = "0x600056E")]
		[Address(RVA = "0x8F13F8", Offset = "0x8F13F8", VA = "0x8F13F8")]
		private void OnRestoreDefaultsConfirmed(int windowId)
		{
		}

		[Token(Token = "0x600056F")]
		[Address(RVA = "0x8F1644", Offset = "0x8F1644", VA = "0x8F1644")]
		private void OnAssignControllerWindowUpdate(int windowId)
		{
		}

		[Token(Token = "0x6000570")]
		[Address(RVA = "0x8F2014", Offset = "0x8F2014", VA = "0x8F2014")]
		private void OnElementAssignmentPrePollingWindowUpdate(int windowId)
		{
		}

		[Token(Token = "0x6000571")]
		[Address(RVA = "0x8F2224", Offset = "0x8F2224", VA = "0x8F2224")]
		private void OnJoystickElementAssignmentPollingWindowUpdate(int windowId)
		{
		}

		[Token(Token = "0x6000572")]
		[Address(RVA = "0x8F2E30", Offset = "0x8F2E30", VA = "0x8F2E30")]
		private void OnKeyboardElementAssignmentPollingWindowUpdate(int windowId)
		{
		}

		[Token(Token = "0x6000573")]
		[Address(RVA = "0x8F364C", Offset = "0x8F364C", VA = "0x8F364C")]
		private void OnMouseElementAssignmentPollingWindowUpdate(int windowId)
		{
		}

		[Token(Token = "0x6000574")]
		[Address(RVA = "0x8F3CE8", Offset = "0x8F3CE8", VA = "0x8F3CE8")]
		private void OnCalibrateAxisStep1WindowUpdate(int windowId)
		{
		}

		[Token(Token = "0x6000575")]
		[Address(RVA = "0x8F4290", Offset = "0x8F4290", VA = "0x8F4290")]
		private void OnCalibrateAxisStep2WindowUpdate(int windowId)
		{
		}

		[Token(Token = "0x6000576")]
		[Address(RVA = "0x8EE194", Offset = "0x8EE194", VA = "0x8EE194")]
		private void ShowAssignControllerWindow()
		{
		}

		[Token(Token = "0x6000577")]
		[Address(RVA = "0x8F18C4", Offset = "0x8F18C4", VA = "0x8F18C4")]
		private void ShowControllerAssignmentConflictWindow(int controllerId)
		{
		}

		[Token(Token = "0x6000578")]
		[Address(RVA = "0x8EEDC4", Offset = "0x8EEDC4", VA = "0x8EEDC4")]
		private void ShowBeginElementAssignmentReplacementWindow(InputFieldInfo fieldInfo, InputAction action, ControllerMap map, ActionElementMap aem, string actionName)
		{
		}

		[Token(Token = "0x6000579")]
		[Address(RVA = "0x8EF294", Offset = "0x8EF294", VA = "0x8EF294")]
		private void ShowCreateNewElementAssignmentWindow(InputFieldInfo fieldInfo, InputAction action, ControllerMap map, string actionName)
		{
		}

		[Token(Token = "0x600057A")]
		[Address(RVA = "0x8EFBE8", Offset = "0x8EFBE8", VA = "0x8EFBE8")]
		private void ShowElementAssignmentPrePollingWindow()
		{
		}

		[Token(Token = "0x600057B")]
		[Address(RVA = "0x8EFF1C", Offset = "0x8EFF1C", VA = "0x8EFF1C")]
		private void ShowElementAssignmentPollingWindow()
		{
		}

		[Token(Token = "0x600057C")]
		[Address(RVA = "0x8F446C", Offset = "0x8F446C", VA = "0x8F446C")]
		private void ShowJoystickElementAssignmentPollingWindow()
		{
		}

		[Token(Token = "0x600057D")]
		[Address(RVA = "0x8F4758", Offset = "0x8F4758", VA = "0x8F4758")]
		private void ShowKeyboardElementAssignmentPollingWindow()
		{
		}

		[Token(Token = "0x600057E")]
		[Address(RVA = "0x8F4A7C", Offset = "0x8F4A7C", VA = "0x8F4A7C")]
		private void ShowMouseElementAssignmentPollingWindow()
		{
		}

		[Token(Token = "0x600057F")]
		[Address(RVA = "0x8F2790", Offset = "0x8F2790", VA = "0x8F2790")]
		private void ShowElementAssignmentConflictWindow(ElementAssignment assignment, bool skipOtherPlayers)
		{
		}

		[Token(Token = "0x6000580")]
		[Address(RVA = "0x8F4D68", Offset = "0x8F4D68", VA = "0x8F4D68")]
		private void ShowMouseAssignmentConflictWindow()
		{
		}

		[Token(Token = "0x6000581")]
		[Address(RVA = "0x8EE490", Offset = "0x8EE490", VA = "0x8EE490")]
		private void ShowCalibrateControllerWindow()
		{
		}

		[Token(Token = "0x6000582")]
		[Address(RVA = "0x8F66D8", Offset = "0x8F66D8", VA = "0x8F66D8")]
		private void ShowCalibrateAxisStep1Window()
		{
		}

		[Token(Token = "0x6000583")]
		[Address(RVA = "0x8F3E24", Offset = "0x8F3E24", VA = "0x8F3E24")]
		private void ShowCalibrateAxisStep2Window()
		{
		}

		[Token(Token = "0x6000584")]
		[Address(RVA = "0x8EE744", Offset = "0x8EE744", VA = "0x8EE744")]
		private void ShowEditInputBehaviorsWindow()
		{
		}

		[Token(Token = "0x6000585")]
		[Address(RVA = "0x8EF6D0", Offset = "0x8EF6D0", VA = "0x8EF6D0")]
		private void ShowRestoreDefaultsWindow()
		{
		}

		[Token(Token = "0x6000586")]
		[Address(RVA = "0x8ED8C0", Offset = "0x8ED8C0", VA = "0x8ED8C0")]
		private void CreateInputGrid()
		{
		}

		[Token(Token = "0x6000587")]
		[Address(RVA = "0x8F6EB4", Offset = "0x8F6EB4", VA = "0x8F6EB4")]
		private void InitializeInputGrid()
		{
		}

		[Token(Token = "0x6000588")]
		[Address(RVA = "0x8F8AC0", Offset = "0x8F8AC0", VA = "0x8F8AC0")]
		private void RefreshInputGridStructure()
		{
		}

		[Token(Token = "0x6000589")]
		[Address(RVA = "0x8F778C", Offset = "0x8F778C", VA = "0x8F778C")]
		private void CreateHeaderLabels()
		{
		}

		[Token(Token = "0x600058A")]
		[Address(RVA = "0x8F7A5C", Offset = "0x8F7A5C", VA = "0x8F7A5C")]
		private void CreateActionLabelColumn()
		{
		}

		[Token(Token = "0x600058B")]
		[Address(RVA = "0x8F7AD8", Offset = "0x8F7AD8", VA = "0x8F7AD8")]
		private void CreateKeyboardInputFieldColumn()
		{
		}

		[Token(Token = "0x600058C")]
		[Address(RVA = "0x8F7B44", Offset = "0x8F7B44", VA = "0x8F7B44")]
		private void CreateMouseInputFieldColumn()
		{
		}

		[Token(Token = "0x600058D")]
		[Address(RVA = "0x8F7BB0", Offset = "0x8F7BB0", VA = "0x8F7BB0")]
		private void CreateControllerInputFieldColumn()
		{
		}

		[Token(Token = "0x600058E")]
		[Address(RVA = "0x8F8E78", Offset = "0x8F8E78", VA = "0x8F8E78")]
		private void CreateInputFieldColumn(string name, ControllerType controllerType, int maxWidth, int cols, bool disableFullAxis)
		{
		}

		[Token(Token = "0x600058F")]
		[Address(RVA = "0x8F7C1C", Offset = "0x8F7C1C", VA = "0x8F7C1C")]
		private void CreateInputActionLabels()
		{
		}

		[Token(Token = "0x6000590")]
		[Address(RVA = "0x8F8964", Offset = "0x8F8964", VA = "0x8F8964")]
		private void CreateInputFields()
		{
		}

		[Token(Token = "0x6000591")]
		[Address(RVA = "0x8F8F54", Offset = "0x8F8F54", VA = "0x8F8F54")]
		private void CreateInputFields(Transform columnXform, ControllerType controllerType, int maxWidth, int cols, bool disableFullAxis)
		{
		}

		[Token(Token = "0x6000592")]
		[Address(RVA = "0x8F98B0", Offset = "0x8F98B0", VA = "0x8F98B0")]
		private void CreateInputFieldSet(Transform parent, int mapCategoryId, InputAction action, AxisRange axisRange, ControllerType controllerType, int cols, int fieldWidth, ref int yPos, bool disableFullAxis)
		{
		}

		[Token(Token = "0x6000593")]
		[Address(RVA = "0x8F9F54", Offset = "0x8F9F54", VA = "0x8F9F54")]
		private void PopulateInputFields()
		{
		}

		[Token(Token = "0x6000594")]
		[Address(RVA = "0x8FA47C", Offset = "0x8FA47C", VA = "0x8FA47C")]
		private void PopulateInputFieldGroup(InputActionSet actionSet, ControllerMap controllerMap, ControllerType controllerType, int controllerId, int maxFields)
		{
		}

		[Token(Token = "0x6000595")]
		[Address(RVA = "0x8FAA64", Offset = "0x8FAA64", VA = "0x8FAA64")]
		private void DisableInputFieldGroup(InputActionSet actionSet, ControllerType controllerType, int fieldCount)
		{
		}

		[Token(Token = "0x6000596")]
		[Address(RVA = "0x8F8A10", Offset = "0x8F8A10", VA = "0x8F8A10")]
		private void ResetInputGridScrollBar()
		{
		}

		[Token(Token = "0x6000597")]
		[Address(RVA = "0x8ED930", Offset = "0x8ED930", VA = "0x8ED930")]
		private void CreateLayout()
		{
		}

		[Token(Token = "0x6000598")]
		[Address(RVA = "0x8ED884", Offset = "0x8ED884", VA = "0x8ED884")]
		private void Draw()
		{
		}

		[Token(Token = "0x6000599")]
		[Address(RVA = "0x8FAB30", Offset = "0x8FAB30", VA = "0x8FAB30")]
		private void DrawPlayersGroup()
		{
		}

		[Token(Token = "0x600059A")]
		[Address(RVA = "0x8FAEB4", Offset = "0x8FAEB4", VA = "0x8FAEB4")]
		private void DrawControllersGroup()
		{
		}

		[Token(Token = "0x600059B")]
		[Address(RVA = "0x8FB1B4", Offset = "0x8FB1B4", VA = "0x8FB1B4")]
		private void DrawSettingsGroup()
		{
		}

		[Token(Token = "0x600059C")]
		[Address(RVA = "0x8FB3F0", Offset = "0x8FB3F0", VA = "0x8FB3F0")]
		private void DrawMapCategoriesGroup()
		{
		}

		[Token(Token = "0x600059D")]
		[Address(RVA = "0x8FB748", Offset = "0x8FB748", VA = "0x8FB748")]
		private void DrawWindowButtonsGroup()
		{
		}

		[Token(Token = "0x600059E")]
		[Address(RVA = "0x8EF470", Offset = "0x8EF470", VA = "0x8EF470")]
		private void Redraw(bool listsChanged, bool playTransitions)
		{
		}

		[Token(Token = "0x600059F")]
		[Address(RVA = "0x8FB908", Offset = "0x8FB908", VA = "0x8FB908")]
		private void RedrawPlayerGroup(bool playTransitions)
		{
		}

		[Token(Token = "0x60005A0")]
		[Address(RVA = "0x8FBA18", Offset = "0x8FBA18", VA = "0x8FBA18")]
		private void RedrawControllerGroup()
		{
		}

		[Token(Token = "0x60005A1")]
		[Address(RVA = "0x8FC6B0", Offset = "0x8FC6B0", VA = "0x8FC6B0")]
		private void RedrawMapCategoriesGroup(bool playTransitions)
		{
		}

		[Token(Token = "0x60005A2")]
		[Address(RVA = "0x8FC7C8", Offset = "0x8FC7C8", VA = "0x8FC7C8")]
		private void RedrawInputGrid(bool listsChanged)
		{
		}

		[Token(Token = "0x60005A3")]
		[Address(RVA = "0x8EDCD4", Offset = "0x8EDCD4", VA = "0x8EDCD4")]
		private void ForceRefresh()
		{
		}

		[Token(Token = "0x60005A4")]
		[Address(RVA = "0x8FC9E4", Offset = "0x8FC9E4", VA = "0x8FC9E4")]
		private void CreateInputCategoryRow(ref int rowCount, InputCategory category)
		{
		}

		[Token(Token = "0x60005A5")]
		[Address(RVA = "0x8F8F30", Offset = "0x8F8F30", VA = "0x8F8F30")]
		private GUILabel CreateLabel(string labelText, Transform parent, Vector2 offset)
		{
			return null;
		}

		[Token(Token = "0x60005A6")]
		[Address(RVA = "0x8F8CC4", Offset = "0x8F8CC4", VA = "0x8F8CC4")]
		private GUILabel CreateLabel(GameObject prefab, string labelText, Transform parent, Vector2 offset)
		{
			return null;
		}

		[Token(Token = "0x60005A7")]
		[Address(RVA = "0x8FB844", Offset = "0x8FB844", VA = "0x8FB844")]
		private GUIButton CreateButton(string labelText, Transform parent, Vector2 offset)
		{
			return null;
		}

		[Token(Token = "0x60005A8")]
		[Address(RVA = "0x8FCB9C", Offset = "0x8FCB9C", VA = "0x8FCB9C")]
		private GUIButton CreateFitButton(string labelText, Transform parent, Vector2 offset)
		{
			return null;
		}

		[Token(Token = "0x60005A9")]
		[Address(RVA = "0x8F9CB4", Offset = "0x8F9CB4", VA = "0x8F9CB4")]
		private GUIInputField CreateInputField(Transform parent, Vector2 offset, string label, int actionId, AxisRange axisRange, ControllerType controllerType, int fieldIndex)
		{
			return null;
		}

		[Token(Token = "0x60005AA")]
		[Address(RVA = "0x8FCC60", Offset = "0x8FCC60", VA = "0x8FCC60")]
		private GUIInputField CreateInputField(Transform parent, Vector2 offset)
		{
			return null;
		}

		[Token(Token = "0x60005AB")]
		[Address(RVA = "0x8F9E14", Offset = "0x8F9E14", VA = "0x8F9E14")]
		private GUIToggle CreateToggle(GameObject prefab, Transform parent, Vector2 offset, string label, int actionId, AxisRange axisRange, ControllerType controllerType, int fieldIndex)
		{
			return null;
		}

		[Token(Token = "0x60005AC")]
		[Address(RVA = "0x8FCD08", Offset = "0x8FCD08", VA = "0x8FCD08")]
		private GUIToggle CreateToggle(GameObject prefab, Transform parent, Vector2 offset)
		{
			return null;
		}

		[Token(Token = "0x60005AD")]
		[Address(RVA = "0x8FCA64", Offset = "0x8FCA64", VA = "0x8FCA64")]
		private GameObject InstantiateGUIObject(GameObject prefab, Transform parent, Vector2 offset)
		{
			return null;
		}

		[Token(Token = "0x60005AE")]
		[Address(RVA = "0x8F9BF8", Offset = "0x8F9BF8", VA = "0x8F9BF8")]
		private GameObject CreateNewGUIObject(string name, Transform parent, Vector2 offset)
		{
			return null;
		}

		[Token(Token = "0x60005AF")]
		[Address(RVA = "0x8FCDA8", Offset = "0x8FCDA8", VA = "0x8FCDA8")]
		private GameObject InitializeNewGUIGameObject(GameObject gameObject, Transform parent, Vector2 offset)
		{
			return null;
		}

		[Token(Token = "0x60005B0")]
		[Address(RVA = "0x8F8BB0", Offset = "0x8F8BB0", VA = "0x8F8BB0")]
		private GameObject CreateNewColumnGroup(string name, Transform parent, int maxWidth)
		{
			return null;
		}

		[Token(Token = "0x60005B1")]
		[Address(RVA = "0x8F4408", Offset = "0x8F4408", VA = "0x8F4408")]
		private Window OpenWindow(bool closeOthers)
		{
			return null;
		}

		[Token(Token = "0x60005B2")]
		[Address(RVA = "0x8FCF8C", Offset = "0x8FCF8C", VA = "0x8FCF8C")]
		private Window OpenWindow(string name, bool closeOthers)
		{
			return null;
		}

		[Token(Token = "0x60005B3")]
		[Address(RVA = "0x8FD0C0", Offset = "0x8FD0C0", VA = "0x8FD0C0")]
		private Window OpenWindow(GameObject windowPrefab, bool closeOthers)
		{
			return null;
		}

		[Token(Token = "0x60005B4")]
		[Address(RVA = "0x8F6600", Offset = "0x8F6600", VA = "0x8F6600")]
		private Window OpenWindow(GameObject windowPrefab, string name, bool closeOthers)
		{
			return null;
		}

		[Token(Token = "0x60005B5")]
		[Address(RVA = "0x8F6B44", Offset = "0x8F6B44", VA = "0x8F6B44")]
		private void OpenModal(string title, string message, string confirmText, Action<int> confirmAction, string cancelText, Action<int> cancelAction, bool closeOthers)
		{
		}

		[Token(Token = "0x60005B6")]
		[Address(RVA = "0x8EF9D0", Offset = "0x8EF9D0", VA = "0x8EF9D0")]
		private void CloseWindow(int windowId)
		{
		}

		[Token(Token = "0x60005B7")]
		[Address(RVA = "0x8FD194", Offset = "0x8FD194", VA = "0x8FD194")]
		private void CloseTopWindow()
		{
		}

		[Token(Token = "0x60005B8")]
		[Address(RVA = "0x8EF960", Offset = "0x8EF960", VA = "0x8EF960")]
		private void CloseAllWindows()
		{
		}

		[Token(Token = "0x60005B9")]
		[Address(RVA = "0x8FD058", Offset = "0x8FD058", VA = "0x8FD058")]
		private void ChildWindowOpened()
		{
		}

		[Token(Token = "0x60005BA")]
		[Address(RVA = "0x8FD12C", Offset = "0x8FD12C", VA = "0x8FD12C")]
		private void ChildWindowClosed()
		{
		}

		[Token(Token = "0x60005BB")]
		[Address(RVA = "0x8F2588", Offset = "0x8F2588", VA = "0x8F2588")]
		private bool HasElementAssignmentConflicts(Player player, InputMapping mapping, ElementAssignment assignment, bool skipOtherPlayers)
		{
			return default(bool);
		}

		[Token(Token = "0x60005BC")]
		[Address(RVA = "0x8F5410", Offset = "0x8F5410", VA = "0x8F5410")]
		private bool IsBlockingAssignmentConflict(InputMapping mapping, ElementAssignment assignment, bool skipOtherPlayers)
		{
			return default(bool);
		}

		[Token(Token = "0x60005BD")]
		[Address(RVA = "0x8FD25C", Offset = "0x8FD25C", VA = "0x8FD25C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6F9738", Offset = "0x6F9738")]
		private IEnumerable<ElementAssignmentConflictInfo> ElementAssignmentConflicts(Player player, InputMapping mapping, ElementAssignment assignment, bool skipOtherPlayers)
		{
			return null;
		}

		[Token(Token = "0x60005BE")]
		[Address(RVA = "0x8F0F24", Offset = "0x8F0F24", VA = "0x8F0F24")]
		private bool CreateConflictCheck(InputMapping mapping, ElementAssignment assignment, out ElementAssignmentConflictCheck conflictCheck)
		{
			return default(bool);
		}

		[Token(Token = "0x60005BF")]
		[Address(RVA = "0x8F30E4", Offset = "0x8F30E4", VA = "0x8F30E4")]
		private void PollKeyboardForAssignment(out ControllerPollingInfo pollingInfo, out bool modifierKeyPressed, out ModifierKeyFlags modifierFlags, out string label)
		{
		}

		[Token(Token = "0x60005C0")]
		[Address(RVA = "0x8F1028", Offset = "0x8F1028", VA = "0x8F1028")]
		private bool GetFirstElementAssignmentConflict(ElementAssignmentConflictCheck conflictCheck, out ElementAssignmentConflictInfo conflict, bool skipOtherPlayers)
		{
			return default(bool);
		}

		[Token(Token = "0x60005C1")]
		[Address(RVA = "0x8FD308", Offset = "0x8FD308", VA = "0x8FD308")]
		private bool GetFirstElementAssignmentConflict(Player player, ElementAssignmentConflictCheck conflictCheck, out ElementAssignmentConflictInfo conflict)
		{
			return default(bool);
		}

		[Token(Token = "0x60005C2")]
		[Address(RVA = "0x8FD690", Offset = "0x8FD690", VA = "0x8FD690")]
		private void StartAxisCalibration(int axisIndex)
		{
		}

		[Token(Token = "0x60005C3")]
		[Address(RVA = "0x8F43D8", Offset = "0x8F43D8", VA = "0x8F43D8")]
		private void EndAxisCalibration()
		{
		}

		[Token(Token = "0x60005C4")]
		[Address(RVA = "0x8FC8AC", Offset = "0x8FC8AC", VA = "0x8FC8AC")]
		private void SetUISelection(GameObject selection)
		{
		}

		[Token(Token = "0x60005C5")]
		[Address(RVA = "0x8FC80C", Offset = "0x8FC80C", VA = "0x8FC80C")]
		private void RestoreLastUISelection()
		{
		}

		[Token(Token = "0x60005C6")]
		[Address(RVA = "0x8FD76C", Offset = "0x8FD76C", VA = "0x8FD76C")]
		private void SetDefaultUISelection()
		{
		}

		[Token(Token = "0x60005C7")]
		[Address(RVA = "0x8FD828", Offset = "0x8FD828", VA = "0x8FD828")]
		private void SelectDefaultMapCategory(bool redraw)
		{
		}

		[Token(Token = "0x60005C8")]
		[Address(RVA = "0x8ED3E0", Offset = "0x8ED3E0", VA = "0x8ED3E0")]
		private void CheckUISelection()
		{
		}

		[Token(Token = "0x60005C9")]
		[Address(RVA = "0x8FDB18", Offset = "0x8FDB18", VA = "0x8FDB18")]
		private void OnUIElementSelected(GameObject selectedObject)
		{
		}

		[Token(Token = "0x60005CA")]
		[Address(RVA = "0x8FD1E8", Offset = "0x8FD1E8", VA = "0x8FD1E8")]
		private void SetIsFocused(bool state)
		{
		}

		[Token(Token = "0x60005CB")]
		[Address(RVA = "0x8FDB20", Offset = "0x8FDB20", VA = "0x8FDB20")]
		public void Toggle()
		{
		}

		[Token(Token = "0x60005CC")]
		[Address(RVA = "0x8EF89C", Offset = "0x8EF89C", VA = "0x8EF89C")]
		public void Open()
		{
		}

		[Token(Token = "0x60005CD")]
		[Address(RVA = "0x8ED2C8", Offset = "0x8ED2C8", VA = "0x8ED2C8")]
		private void Open(bool force)
		{
		}

		[Token(Token = "0x60005CE")]
		[Address(RVA = "0x8EE9C0", Offset = "0x8EE9C0", VA = "0x8EE9C0")]
		public void Close(bool save)
		{
		}

		[Token(Token = "0x60005CF")]
		[Address(RVA = "0x8FDB60", Offset = "0x8FDB60", VA = "0x8FDB60")]
		private void Clear()
		{
		}

		[Token(Token = "0x60005D0")]
		[Address(RVA = "0x8FDB9C", Offset = "0x8FDB9C", VA = "0x8FDB9C")]
		private void ClearCompletely()
		{
		}

		[Token(Token = "0x60005D1")]
		[Address(RVA = "0x8FDBC0", Offset = "0x8FDBC0", VA = "0x8FDBC0")]
		private void ClearSpawnedObjects()
		{
		}

		[Token(Token = "0x60005D2")]
		[Address(RVA = "0x8EF464", Offset = "0x8EF464", VA = "0x8EF464")]
		private void ClearVarsOnPlayerChange()
		{
		}

		[Token(Token = "0x60005D3")]
		[Address(RVA = "0x8EDCC8", Offset = "0x8EDCC8", VA = "0x8EDCC8")]
		private void ClearVarsOnJoystickChange()
		{
		}

		[Token(Token = "0x60005D4")]
		[Address(RVA = "0x8FE12C", Offset = "0x8FE12C", VA = "0x8FE12C")]
		private void ClearAllVars()
		{
		}

		[Token(Token = "0x60005D5")]
		[Address(RVA = "0x8FE1BC", Offset = "0x8FE1BC", VA = "0x8FE1BC")]
		public void Reset()
		{
		}

		[Token(Token = "0x60005D6")]
		[Address(RVA = "0x8EF394", Offset = "0x8EF394", VA = "0x8EF394")]
		private void SetActionAxisInverted(bool state, ControllerType controllerType, int actionElementMapId)
		{
		}

		[Token(Token = "0x60005D7")]
		[Address(RVA = "0x8EECD4", Offset = "0x8EECD4", VA = "0x8EECD4")]
		private ControllerMap GetControllerMap(ControllerType type)
		{
			return null;
		}

		[Token(Token = "0x60005D8")]
		[Address(RVA = "0x8FA3CC", Offset = "0x8FA3CC", VA = "0x8FA3CC")]
		private ControllerMap GetControllerMapOrCreateNew(ControllerType controllerType, int controllerId, int layoutId)
		{
			return null;
		}

		[Token(Token = "0x60005D9")]
		private int CountIEnumerable<T>(IEnumerable<T> enumerable)
		{
			return default(int);
		}

		[Token(Token = "0x60005DA")]
		[Address(RVA = "0x8FDA04", Offset = "0x8FDA04", VA = "0x8FDA04")]
		private int GetDefaultMapCategoryId()
		{
			return default(int);
		}

		[Token(Token = "0x60005DB")]
		[Address(RVA = "0x8EDB04", Offset = "0x8EDB04", VA = "0x8EDB04")]
		private void SubscribeFixedUISelectionEvents()
		{
		}

		[Token(Token = "0x60005DC")]
		[Address(RVA = "0x8ED720", Offset = "0x8ED720", VA = "0x8ED720")]
		private void SubscribeMenuControlInputEvents()
		{
		}

		[Token(Token = "0x60005DD")]
		[Address(RVA = "0x8ED5BC", Offset = "0x8ED5BC", VA = "0x8ED5BC")]
		private void UnsubscribeMenuControlInputEvents()
		{
		}

		[Token(Token = "0x60005DE")]
		[Address(RVA = "0x8FE214", Offset = "0x8FE214", VA = "0x8FE214")]
		private void SubscribeRewiredInputEventAllPlayers(int actionId, Action<InputActionEventData> callback)
		{
		}

		[Token(Token = "0x60005DF")]
		[Address(RVA = "0x8FE5F4", Offset = "0x8FE5F4", VA = "0x8FE5F4")]
		private void UnsubscribeRewiredInputEventAllPlayers(int actionId, Action<InputActionEventData> callback)
		{
		}

		[Token(Token = "0x60005E0")]
		[Address(RVA = "0x8FC9A0", Offset = "0x8FC9A0", VA = "0x8FC9A0")]
		private int GetMaxControllersPerPlayer()
		{
			return default(int);
		}

		[Token(Token = "0x60005E1")]
		[Address(RVA = "0x8FAAF4", Offset = "0x8FAAF4", VA = "0x8FAAF4")]
		private bool ShowAssignedControllers()
		{
			return default(bool);
		}

		[Token(Token = "0x60005E2")]
		[Address(RVA = "0x8EBE34", Offset = "0x8EBE34", VA = "0x8EBE34")]
		private void InspectorPropertyChanged(bool reset = false)
		{
		}

		[Token(Token = "0x60005E3")]
		[Address(RVA = "0x8F0034", Offset = "0x8F0034", VA = "0x8F0034")]
		private void AssignController(Player player, int controllerId)
		{
		}

		[Token(Token = "0x60005E4")]
		[Address(RVA = "0x8FEA30", Offset = "0x8FEA30", VA = "0x8FEA30")]
		private void RemoveAllControllers(Player player)
		{
		}

		[Token(Token = "0x60005E5")]
		[Address(RVA = "0x8EF558", Offset = "0x8EF558", VA = "0x8EF558")]
		private void RemoveController(Player player, int controllerId)
		{
		}

		[Token(Token = "0x60005E6")]
		[Address(RVA = "0x8F2534", Offset = "0x8F2534", VA = "0x8F2534")]
		private bool IsAllowedAssignment(InputMapping pendingInputMapping, ControllerPollingInfo pollingInfo)
		{
			return default(bool);
		}

		[Token(Token = "0x60005E7")]
		[Address(RVA = "0x8F1820", Offset = "0x8F1820", VA = "0x8F1820")]
		private void InputPollingStarted()
		{
		}

		[Token(Token = "0x60005E8")]
		[Address(RVA = "0x8F1874", Offset = "0x8F1874", VA = "0x8F1874")]
		private void InputPollingStopped()
		{
		}

		[Token(Token = "0x60005E9")]
		[Address(RVA = "0x8F1300", Offset = "0x8F1300", VA = "0x8F1300")]
		private int GetControllerInputFieldCount(ControllerType controllerType)
		{
			return default(int);
		}

		[Token(Token = "0x60005EA")]
		[Address(RVA = "0x8F5DA0", Offset = "0x8F5DA0", VA = "0x8F5DA0")]
		private bool ShowSwapButton(int windowId, InputMapping mapping, ElementAssignment assignment, bool skipOtherPlayers)
		{
			return default(bool);
		}

		[Token(Token = "0x60005EB")]
		[Address(RVA = "0x8F12B8", Offset = "0x8F12B8", VA = "0x8F12B8")]
		private bool SwapIsSameInputRange(ControllerElementType origElementType, AxisRange origAxisRange, Pole origAxisContribution, ControllerElementType conflictElementType, AxisRange conflictAxisRange, Pole conflictAxisContribution)
		{
			return default(bool);
		}

		[Token(Token = "0x60005EC")]
		[Address(RVA = "0x8FEB94", Offset = "0x8FEB94", VA = "0x8FEB94")]
		public static void ApplyTheme(ThemedElement.ElementInfo[] elementInfo)
		{
		}

		[Token(Token = "0x60005ED")]
		[Address(RVA = "0x8E1B88", Offset = "0x8E1B88", VA = "0x8E1B88")]
		public static LanguageDataBase GetLanguage()
		{
			return null;
		}

		[Token(Token = "0x60005EE")]
		[Address(RVA = "0x8FECA8", Offset = "0x8FECA8", VA = "0x8FECA8")]
		public ControlMapper()
		{
		}
	}
	[Token(Token = "0x2000083")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x6EF6F8", Offset = "0x6EF6F8")]
	public class CustomButton : Button, ICustomSelectable, ICancelHandler, IEventSystemHandler
	{
		[Token(Token = "0x2000084")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EF730", Offset = "0x6EF730")]
		private sealed class <OnFinishSubmit>d__51 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000427")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000428")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000429")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CustomButton <>4__this;

			[Token(Token = "0x400042A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <fadeTime>5__2;

			[Token(Token = "0x400042B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <elapsedTime>5__3;

			[Token(Token = "0x17000322")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000765")]
				[Address(RVA = "0x923548", Offset = "0x923548", VA = "0x923548", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000323")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000767")]
				[Address(RVA = "0x923590", Offset = "0x923590", VA = "0x923590", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000762")]
			[Address(RVA = "0x923458", Offset = "0x923458", VA = "0x923458")]
			[DebuggerHidden]
			public <OnFinishSubmit>d__51(int <>1__state)
			{
			}

			[Token(Token = "0x6000763")]
			[Address(RVA = "0x923484", Offset = "0x923484", VA = "0x923484", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000764")]
			[Address(RVA = "0x923488", Offset = "0x923488", VA = "0x923488", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000766")]
			[Address(RVA = "0x923550", Offset = "0x923550", VA = "0x923550", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400041E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		private Sprite _disabledHighlightedSprite;

		[Token(Token = "0x400041F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[SerializeField]
		private Color _disabledHighlightedColor;

		[Token(Token = "0x4000420")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[SerializeField]
		private string _disabledHighlightedTrigger;

		[Token(Token = "0x4000421")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[SerializeField]
		private bool _autoNavUp;

		[Token(Token = "0x4000422")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x121")]
		[SerializeField]
		private bool _autoNavDown;

		[Token(Token = "0x4000423")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x122")]
		[SerializeField]
		private bool _autoNavLeft;

		[Token(Token = "0x4000424")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x123")]
		[SerializeField]
		private bool _autoNavRight;

		[Token(Token = "0x4000425")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		private bool isHighlightDisabled;

		[Token(Token = "0x1700031A")]
		public Sprite disabledHighlightedSprite
		{
			[Token(Token = "0x600073D")]
			[Address(RVA = "0xB363E4", Offset = "0xB363E4", VA = "0xB363E4", Slot = "43")]
			get
			{
				return null;
			}
			[Token(Token = "0x600073E")]
			[Address(RVA = "0xB363EC", Offset = "0xB363EC", VA = "0xB363EC", Slot = "44")]
			set
			{
			}
		}

		[Token(Token = "0x1700031B")]
		public Color disabledHighlightedColor
		{
			[Token(Token = "0x600073F")]
			[Address(RVA = "0xB363F4", Offset = "0xB363F4", VA = "0xB363F4", Slot = "45")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6000740")]
			[Address(RVA = "0xB36408", Offset = "0xB36408", VA = "0xB36408", Slot = "46")]
			set
			{
			}
		}

		[Token(Token = "0x1700031C")]
		public string disabledHighlightedTrigger
		{
			[Token(Token = "0x6000741")]
			[Address(RVA = "0xB3641C", Offset = "0xB3641C", VA = "0xB3641C", Slot = "47")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000742")]
			[Address(RVA = "0xB36424", Offset = "0xB36424", VA = "0xB36424", Slot = "48")]
			set
			{
			}
		}

		[Token(Token = "0x1700031D")]
		public bool autoNavUp
		{
			[Token(Token = "0x6000743")]
			[Address(RVA = "0xB3642C", Offset = "0xB3642C", VA = "0xB3642C", Slot = "49")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000744")]
			[Address(RVA = "0xB36434", Offset = "0xB36434", VA = "0xB36434", Slot = "50")]
			set
			{
			}
		}

		[Token(Token = "0x1700031E")]
		public bool autoNavDown
		{
			[Token(Token = "0x6000745")]
			[Address(RVA = "0xB36440", Offset = "0xB36440", VA = "0xB36440", Slot = "51")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000746")]
			[Address(RVA = "0xB36448", Offset = "0xB36448", VA = "0xB36448", Slot = "52")]
			set
			{
			}
		}

		[Token(Token = "0x1700031F")]
		public bool autoNavLeft
		{
			[Token(Token = "0x6000747")]
			[Address(RVA = "0xB36454", Offset = "0xB36454", VA = "0xB36454", Slot = "53")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000748")]
			[Address(RVA = "0xB3645C", Offset = "0xB3645C", VA = "0xB3645C", Slot = "54")]
			set
			{
			}
		}

		[Token(Token = "0x17000320")]
		public bool autoNavRight
		{
			[Token(Token = "0x6000749")]
			[Address(RVA = "0xB36468", Offset = "0xB36468", VA = "0xB36468", Slot = "55")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600074A")]
			[Address(RVA = "0xB36470", Offset = "0xB36470", VA = "0xB36470", Slot = "56")]
			set
			{
			}
		}

		[Token(Token = "0x17000321")]
		private bool isDisabled
		{
			[Token(Token = "0x600074B")]
			[Address(RVA = "0xB3647C", Offset = "0xB3647C", VA = "0xB3647C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1400000F")]
		private event UnityAction _CancelEvent
		{
			[Token(Token = "0x600074C")]
			[Address(RVA = "0xB364A4", Offset = "0xB364A4", VA = "0xB364A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F9B98", Offset = "0x6F9B98")]
			add
			{
			}
			[Token(Token = "0x600074D")]
			[Address(RVA = "0xB36548", Offset = "0xB36548", VA = "0xB36548")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F9BA8", Offset = "0x6F9BA8")]
			remove
			{
			}
		}

		[Token(Token = "0x14000010")]
		public event UnityAction CancelEvent
		{
			[Token(Token = "0x600074E")]
			[Address(RVA = "0xB365EC", Offset = "0xB365EC", VA = "0xB365EC", Slot = "57")]
			add
			{
			}
			[Token(Token = "0x600074F")]
			[Address(RVA = "0xB365F0", Offset = "0xB365F0", VA = "0xB365F0", Slot = "58")]
			remove
			{
			}
		}

		[Token(Token = "0x6000750")]
		[Address(RVA = "0xB365F4", Offset = "0xB365F4", VA = "0xB365F4", Slot = "27")]
		public override Selectable FindSelectableOnLeft()
		{
			return null;
		}

		[Token(Token = "0x6000751")]
		[Address(RVA = "0xB366C8", Offset = "0xB366C8", VA = "0xB366C8", Slot = "28")]
		public override Selectable FindSelectableOnRight()
		{
			return null;
		}

		[Token(Token = "0x6000752")]
		[Address(RVA = "0xB3679C", Offset = "0xB3679C", VA = "0xB3679C", Slot = "29")]
		public override Selectable FindSelectableOnUp()
		{
			return null;
		}

		[Token(Token = "0x6000753")]
		[Address(RVA = "0xB36870", Offset = "0xB36870", VA = "0xB36870", Slot = "30")]
		public override Selectable FindSelectableOnDown()
		{
			return null;
		}

		[Token(Token = "0x6000754")]
		[Address(RVA = "0xB36944", Offset = "0xB36944", VA = "0xB36944", Slot = "14")]
		protected override void OnCanvasGroupChanged()
		{
		}

		[Token(Token = "0x6000755")]
		[Address(RVA = "0xB36B2C", Offset = "0xB36B2C", VA = "0xB36B2C", Slot = "26")]
		protected override void DoStateTransition(SelectionState state, bool instant)
		{
		}

		[Token(Token = "0x6000756")]
		[Address(RVA = "0xB36C60", Offset = "0xB36C60", VA = "0xB36C60")]
		private void StartColorTween(Color targetColor, bool instant)
		{
		}

		[Token(Token = "0x6000757")]
		[Address(RVA = "0xB36D54", Offset = "0xB36D54", VA = "0xB36D54")]
		private void DoSpriteSwap(Sprite newSprite)
		{
		}

		[Token(Token = "0x6000758")]
		[Address(RVA = "0xB36E10", Offset = "0xB36E10", VA = "0xB36E10")]
		private void TriggerAnimation(string triggername)
		{
		}

		[Token(Token = "0x6000759")]
		[Address(RVA = "0xB36F7C", Offset = "0xB36F7C", VA = "0xB36F7C", Slot = "36")]
		public override void OnSelect(BaseEventData eventData)
		{
		}

		[Token(Token = "0x600075A")]
		[Address(RVA = "0xB36FE4", Offset = "0xB36FE4", VA = "0xB36FE4", Slot = "37")]
		public override void OnDeselect(BaseEventData eventData)
		{
		}

		[Token(Token = "0x600075B")]
		[Address(RVA = "0xB37010", Offset = "0xB37010", VA = "0xB37010")]
		private void Press()
		{
		}

		[Token(Token = "0x600075C")]
		[Address(RVA = "0xB37070", Offset = "0xB37070", VA = "0xB37070", Slot = "41")]
		public override void OnPointerClick(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600075D")]
		[Address(RVA = "0xB3712C", Offset = "0xB3712C", VA = "0xB3712C", Slot = "42")]
		public override void OnSubmit(BaseEventData eventData)
		{
		}

		[Token(Token = "0x600075E")]
		[Address(RVA = "0xB371D4", Offset = "0xB371D4", VA = "0xB371D4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6F9BB8", Offset = "0x6F9BB8")]
		private IEnumerator OnFinishSubmit()
		{
			return null;
		}

		[Token(Token = "0x600075F")]
		[Address(RVA = "0xB36A84", Offset = "0xB36A84", VA = "0xB36A84")]
		private void EvaluateHightlightDisabled(bool isSelected)
		{
		}

		[Token(Token = "0x6000760")]
		[Address(RVA = "0xB37240", Offset = "0xB37240", VA = "0xB37240", Slot = "59")]
		public void OnCancel(BaseEventData eventData)
		{
		}

		[Token(Token = "0x6000761")]
		[Address(RVA = "0xB37254", Offset = "0xB37254", VA = "0xB37254")]
		public CustomButton()
		{
		}
	}
	[Token(Token = "0x2000085")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x6EF740", Offset = "0x6EF740")]
	public class CustomSlider : UnityEngine.UI.Slider, ICustomSelectable, ICancelHandler, IEventSystemHandler
	{
		[Token(Token = "0x400042C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		[SerializeField]
		private Sprite _disabledHighlightedSprite;

		[Token(Token = "0x400042D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		[SerializeField]
		private Color _disabledHighlightedColor;

		[Token(Token = "0x400042E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		[SerializeField]
		private string _disabledHighlightedTrigger;

		[Token(Token = "0x400042F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		[SerializeField]
		private bool _autoNavUp;

		[Token(Token = "0x4000430")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x181")]
		[SerializeField]
		private bool _autoNavDown;

		[Token(Token = "0x4000431")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x182")]
		[SerializeField]
		private bool _autoNavLeft;

		[Token(Token = "0x4000432")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x183")]
		[SerializeField]
		private bool _autoNavRight;

		[Token(Token = "0x4000433")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
		private bool isHighlightDisabled;

		[Token(Token = "0x17000324")]
		public Sprite disabledHighlightedSprite
		{
			[Token(Token = "0x6000768")]
			[Address(RVA = "0xB39084", Offset = "0xB39084", VA = "0xB39084", Slot = "56")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000769")]
			[Address(RVA = "0xB3908C", Offset = "0xB3908C", VA = "0xB3908C", Slot = "57")]
			set
			{
			}
		}

		[Token(Token = "0x17000325")]
		public Color disabledHighlightedColor
		{
			[Token(Token = "0x600076A")]
			[Address(RVA = "0xB39094", Offset = "0xB39094", VA = "0xB39094", Slot = "58")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x600076B")]
			[Address(RVA = "0xB390A8", Offset = "0xB390A8", VA = "0xB390A8", Slot = "59")]
			set
			{
			}
		}

		[Token(Token = "0x17000326")]
		public string disabledHighlightedTrigger
		{
			[Token(Token = "0x600076C")]
			[Address(RVA = "0xB390BC", Offset = "0xB390BC", VA = "0xB390BC", Slot = "60")]
			get
			{
				return null;
			}
			[Token(Token = "0x600076D")]
			[Address(RVA = "0xB390C4", Offset = "0xB390C4", VA = "0xB390C4", Slot = "61")]
			set
			{
			}
		}

		[Token(Token = "0x17000327")]
		public bool autoNavUp
		{
			[Token(Token = "0x600076E")]
			[Address(RVA = "0xB390CC", Offset = "0xB390CC", VA = "0xB390CC", Slot = "62")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600076F")]
			[Address(RVA = "0xB390D4", Offset = "0xB390D4", VA = "0xB390D4", Slot = "63")]
			set
			{
			}
		}

		[Token(Token = "0x17000328")]
		public bool autoNavDown
		{
			[Token(Token = "0x6000770")]
			[Address(RVA = "0xB390E0", Offset = "0xB390E0", VA = "0xB390E0", Slot = "64")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000771")]
			[Address(RVA = "0xB390E8", Offset = "0xB390E8", VA = "0xB390E8", Slot = "65")]
			set
			{
			}
		}

		[Token(Token = "0x17000329")]
		public bool autoNavLeft
		{
			[Token(Token = "0x6000772")]
			[Address(RVA = "0xB390F4", Offset = "0xB390F4", VA = "0xB390F4", Slot = "66")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000773")]
			[Address(RVA = "0xB390FC", Offset = "0xB390FC", VA = "0xB390FC", Slot = "67")]
			set
			{
			}
		}

		[Token(Token = "0x1700032A")]
		public bool autoNavRight
		{
			[Token(Token = "0x6000774")]
			[Address(RVA = "0xB39108", Offset = "0xB39108", VA = "0xB39108", Slot = "68")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000775")]
			[Address(RVA = "0xB39110", Offset = "0xB39110", VA = "0xB39110", Slot = "69")]
			set
			{
			}
		}

		[Token(Token = "0x1700032B")]
		private bool isDisabled
		{
			[Token(Token = "0x6000776")]
			[Address(RVA = "0xB3911C", Offset = "0xB3911C", VA = "0xB3911C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x14000011")]
		private event UnityAction _CancelEvent
		{
			[Token(Token = "0x6000777")]
			[Address(RVA = "0xB39144", Offset = "0xB39144", VA = "0xB39144")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F9C68", Offset = "0x6F9C68")]
			add
			{
			}
			[Token(Token = "0x6000778")]
			[Address(RVA = "0xB391E8", Offset = "0xB391E8", VA = "0xB391E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F9C78", Offset = "0x6F9C78")]
			remove
			{
			}
		}

		[Token(Token = "0x14000012")]
		public event UnityAction CancelEvent
		{
			[Token(Token = "0x6000779")]
			[Address(RVA = "0xB3928C", Offset = "0xB3928C", VA = "0xB3928C", Slot = "70")]
			add
			{
			}
			[Token(Token = "0x600077A")]
			[Address(RVA = "0xB39290", Offset = "0xB39290", VA = "0xB39290", Slot = "71")]
			remove
			{
			}
		}

		[Token(Token = "0x600077B")]
		[Address(RVA = "0xB39294", Offset = "0xB39294", VA = "0xB39294", Slot = "27")]
		public override Selectable FindSelectableOnLeft()
		{
			return null;
		}

		[Token(Token = "0x600077C")]
		[Address(RVA = "0xB39368", Offset = "0xB39368", VA = "0xB39368", Slot = "28")]
		public override Selectable FindSelectableOnRight()
		{
			return null;
		}

		[Token(Token = "0x600077D")]
		[Address(RVA = "0xB3943C", Offset = "0xB3943C", VA = "0xB3943C", Slot = "29")]
		public override Selectable FindSelectableOnUp()
		{
			return null;
		}

		[Token(Token = "0x600077E")]
		[Address(RVA = "0xB39510", Offset = "0xB39510", VA = "0xB39510", Slot = "30")]
		public override Selectable FindSelectableOnDown()
		{
			return null;
		}

		[Token(Token = "0x600077F")]
		[Address(RVA = "0xB395E4", Offset = "0xB395E4", VA = "0xB395E4", Slot = "14")]
		protected override void OnCanvasGroupChanged()
		{
		}

		[Token(Token = "0x6000780")]
		[Address(RVA = "0xB397CC", Offset = "0xB397CC", VA = "0xB397CC", Slot = "26")]
		protected override void DoStateTransition(SelectionState state, bool instant)
		{
		}

		[Token(Token = "0x6000781")]
		[Address(RVA = "0xB39900", Offset = "0xB39900", VA = "0xB39900")]
		private void StartColorTween(Color targetColor, bool instant)
		{
		}

		[Token(Token = "0x6000782")]
		[Address(RVA = "0xB399F4", Offset = "0xB399F4", VA = "0xB399F4")]
		private void DoSpriteSwap(Sprite newSprite)
		{
		}

		[Token(Token = "0x6000783")]
		[Address(RVA = "0xB39AB0", Offset = "0xB39AB0", VA = "0xB39AB0")]
		private void TriggerAnimation(string triggername)
		{
		}

		[Token(Token = "0x6000784")]
		[Address(RVA = "0xB39C1C", Offset = "0xB39C1C", VA = "0xB39C1C", Slot = "36")]
		public override void OnSelect(BaseEventData eventData)
		{
		}

		[Token(Token = "0x6000785")]
		[Address(RVA = "0xB39C84", Offset = "0xB39C84", VA = "0xB39C84", Slot = "37")]
		public override void OnDeselect(BaseEventData eventData)
		{
		}

		[Token(Token = "0x6000786")]
		[Address(RVA = "0xB39724", Offset = "0xB39724", VA = "0xB39724")]
		private void EvaluateHightlightDisabled(bool isSelected)
		{
		}

		[Token(Token = "0x6000787")]
		[Address(RVA = "0xB39CB0", Offset = "0xB39CB0", VA = "0xB39CB0", Slot = "72")]
		public void OnCancel(BaseEventData eventData)
		{
		}

		[Token(Token = "0x6000788")]
		[Address(RVA = "0xB39CC4", Offset = "0xB39CC4", VA = "0xB39CC4")]
		public CustomSlider()
		{
		}
	}
	[Token(Token = "0x2000086")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x6EF778", Offset = "0x6EF778")]
	public class CustomToggle : Toggle, ICustomSelectable, ICancelHandler, IEventSystemHandler
	{
		[Token(Token = "0x4000435")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[SerializeField]
		private Sprite _disabledHighlightedSprite;

		[Token(Token = "0x4000436")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[SerializeField]
		private Color _disabledHighlightedColor;

		[Token(Token = "0x4000437")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[SerializeField]
		private string _disabledHighlightedTrigger;

		[Token(Token = "0x4000438")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[SerializeField]
		private bool _autoNavUp;

		[Token(Token = "0x4000439")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x141")]
		[SerializeField]
		private bool _autoNavDown;

		[Token(Token = "0x400043A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x142")]
		[SerializeField]
		private bool _autoNavLeft;

		[Token(Token = "0x400043B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x143")]
		[SerializeField]
		private bool _autoNavRight;

		[Token(Token = "0x400043C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		private bool isHighlightDisabled;

		[Token(Token = "0x1700032C")]
		public Sprite disabledHighlightedSprite
		{
			[Token(Token = "0x6000789")]
			[Address(RVA = "0xB39CD4", Offset = "0xB39CD4", VA = "0xB39CD4", Slot = "51")]
			get
			{
				return null;
			}
			[Token(Token = "0x600078A")]
			[Address(RVA = "0xB39CDC", Offset = "0xB39CDC", VA = "0xB39CDC", Slot = "52")]
			set
			{
			}
		}

		[Token(Token = "0x1700032D")]
		public Color disabledHighlightedColor
		{
			[Token(Token = "0x600078B")]
			[Address(RVA = "0xB39CE4", Offset = "0xB39CE4", VA = "0xB39CE4", Slot = "53")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x600078C")]
			[Address(RVA = "0xB39CF8", Offset = "0xB39CF8", VA = "0xB39CF8", Slot = "54")]
			set
			{
			}
		}

		[Token(Token = "0x1700032E")]
		public string disabledHighlightedTrigger
		{
			[Token(Token = "0x600078D")]
			[Address(RVA = "0xB39D0C", Offset = "0xB39D0C", VA = "0xB39D0C", Slot = "55")]
			get
			{
				return null;
			}
			[Token(Token = "0x600078E")]
			[Address(RVA = "0xB39D14", Offset = "0xB39D14", VA = "0xB39D14", Slot = "56")]
			set
			{
			}
		}

		[Token(Token = "0x1700032F")]
		public bool autoNavUp
		{
			[Token(Token = "0x600078F")]
			[Address(RVA = "0xB39D1C", Offset = "0xB39D1C", VA = "0xB39D1C", Slot = "57")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000790")]
			[Address(RVA = "0xB39D24", Offset = "0xB39D24", VA = "0xB39D24", Slot = "58")]
			set
			{
			}
		}

		[Token(Token = "0x17000330")]
		public bool autoNavDown
		{
			[Token(Token = "0x6000791")]
			[Address(RVA = "0xB39D30", Offset = "0xB39D30", VA = "0xB39D30", Slot = "59")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000792")]
			[Address(RVA = "0xB39D38", Offset = "0xB39D38", VA = "0xB39D38", Slot = "60")]
			set
			{
			}
		}

		[Token(Token = "0x17000331")]
		public bool autoNavLeft
		{
			[Token(Token = "0x6000793")]
			[Address(RVA = "0xB39D44", Offset = "0xB39D44", VA = "0xB39D44", Slot = "61")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000794")]
			[Address(RVA = "0xB39D4C", Offset = "0xB39D4C", VA = "0xB39D4C", Slot = "62")]
			set
			{
			}
		}

		[Token(Token = "0x17000332")]
		public bool autoNavRight
		{
			[Token(Token = "0x6000795")]
			[Address(RVA = "0xB39D58", Offset = "0xB39D58", VA = "0xB39D58", Slot = "63")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000796")]
			[Address(RVA = "0xB39D60", Offset = "0xB39D60", VA = "0xB39D60", Slot = "64")]
			set
			{
			}
		}

		[Token(Token = "0x17000333")]
		private bool isDisabled
		{
			[Token(Token = "0x6000797")]
			[Address(RVA = "0xB39D6C", Offset = "0xB39D6C", VA = "0xB39D6C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x14000013")]
		private event UnityAction _CancelEvent
		{
			[Token(Token = "0x6000798")]
			[Address(RVA = "0xB39D94", Offset = "0xB39D94", VA = "0xB39D94")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F9C88", Offset = "0x6F9C88")]
			add
			{
			}
			[Token(Token = "0x6000799")]
			[Address(RVA = "0xB39E38", Offset = "0xB39E38", VA = "0xB39E38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F9C98", Offset = "0x6F9C98")]
			remove
			{
			}
		}

		[Token(Token = "0x14000014")]
		public event UnityAction CancelEvent
		{
			[Token(Token = "0x600079A")]
			[Address(RVA = "0xB39EDC", Offset = "0xB39EDC", VA = "0xB39EDC", Slot = "65")]
			add
			{
			}
			[Token(Token = "0x600079B")]
			[Address(RVA = "0xB39EE0", Offset = "0xB39EE0", VA = "0xB39EE0", Slot = "66")]
			remove
			{
			}
		}

		[Token(Token = "0x600079C")]
		[Address(RVA = "0xB39EE4", Offset = "0xB39EE4", VA = "0xB39EE4", Slot = "27")]
		public override Selectable FindSelectableOnLeft()
		{
			return null;
		}

		[Token(Token = "0x600079D")]
		[Address(RVA = "0xB39FB8", Offset = "0xB39FB8", VA = "0xB39FB8", Slot = "28")]
		public override Selectable FindSelectableOnRight()
		{
			return null;
		}

		[Token(Token = "0x600079E")]
		[Address(RVA = "0xB3A08C", Offset = "0xB3A08C", VA = "0xB3A08C", Slot = "29")]
		public override Selectable FindSelectableOnUp()
		{
			return null;
		}

		[Token(Token = "0x600079F")]
		[Address(RVA = "0xB3A160", Offset = "0xB3A160", VA = "0xB3A160", Slot = "30")]
		public override Selectable FindSelectableOnDown()
		{
			return null;
		}

		[Token(Token = "0x60007A0")]
		[Address(RVA = "0xB3A234", Offset = "0xB3A234", VA = "0xB3A234", Slot = "14")]
		protected override void OnCanvasGroupChanged()
		{
		}

		[Token(Token = "0x60007A1")]
		[Address(RVA = "0xB3A41C", Offset = "0xB3A41C", VA = "0xB3A41C", Slot = "26")]
		protected override void DoStateTransition(SelectionState state, bool instant)
		{
		}

		[Token(Token = "0x60007A2")]
		[Address(RVA = "0xB3A550", Offset = "0xB3A550", VA = "0xB3A550")]
		private void StartColorTween(Color targetColor, bool instant)
		{
		}

		[Token(Token = "0x60007A3")]
		[Address(RVA = "0xB3A644", Offset = "0xB3A644", VA = "0xB3A644")]
		private void DoSpriteSwap(Sprite newSprite)
		{
		}

		[Token(Token = "0x60007A4")]
		[Address(RVA = "0xB3A700", Offset = "0xB3A700", VA = "0xB3A700")]
		private void TriggerAnimation(string triggername)
		{
		}

		[Token(Token = "0x60007A5")]
		[Address(RVA = "0xB3A86C", Offset = "0xB3A86C", VA = "0xB3A86C", Slot = "36")]
		public override void OnSelect(BaseEventData eventData)
		{
		}

		[Token(Token = "0x60007A6")]
		[Address(RVA = "0xB3A8D4", Offset = "0xB3A8D4", VA = "0xB3A8D4", Slot = "37")]
		public override void OnDeselect(BaseEventData eventData)
		{
		}

		[Token(Token = "0x60007A7")]
		[Address(RVA = "0xB3A374", Offset = "0xB3A374", VA = "0xB3A374")]
		private void EvaluateHightlightDisabled(bool isSelected)
		{
		}

		[Token(Token = "0x60007A8")]
		[Address(RVA = "0xB3A900", Offset = "0xB3A900", VA = "0xB3A900", Slot = "67")]
		public void OnCancel(BaseEventData eventData)
		{
		}

		[Token(Token = "0x60007A9")]
		[Address(RVA = "0xB3A914", Offset = "0xB3A914", VA = "0xB3A914")]
		public CustomToggle()
		{
		}
	}
	[Token(Token = "0x2000087")]
	public interface ICustomSelectable : ICancelHandler, IEventSystemHandler
	{
		[Token(Token = "0x17000334")]
		Sprite disabledHighlightedSprite
		{
			[Token(Token = "0x60007AA")]
			get;
			[Token(Token = "0x60007AB")]
			set;
		}

		[Token(Token = "0x17000335")]
		Color disabledHighlightedColor
		{
			[Token(Token = "0x60007AC")]
			get;
			[Token(Token = "0x60007AD")]
			set;
		}

		[Token(Token = "0x17000336")]
		string disabledHighlightedTrigger
		{
			[Token(Token = "0x60007AE")]
			get;
			[Token(Token = "0x60007AF")]
			set;
		}

		[Token(Token = "0x17000337")]
		bool autoNavUp
		{
			[Token(Token = "0x60007B0")]
			get;
			[Token(Token = "0x60007B1")]
			set;
		}

		[Token(Token = "0x17000338")]
		bool autoNavDown
		{
			[Token(Token = "0x60007B2")]
			get;
			[Token(Token = "0x60007B3")]
			set;
		}

		[Token(Token = "0x17000339")]
		bool autoNavLeft
		{
			[Token(Token = "0x60007B4")]
			get;
			[Token(Token = "0x60007B5")]
			set;
		}

		[Token(Token = "0x1700033A")]
		bool autoNavRight
		{
			[Token(Token = "0x60007B6")]
			get;
			[Token(Token = "0x60007B7")]
			set;
		}

		[Token(Token = "0x14000015")]
		event UnityAction CancelEvent;
	}
	[Token(Token = "0x2000088")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x6EF7B0", Offset = "0x6EF7B0")]
	public class InputBehaviorWindow : Window
	{
		[Token(Token = "0x2000089")]
		private class InputBehaviorInfo
		{
			[Token(Token = "0x400044B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private InputBehavior _inputBehavior;

			[Token(Token = "0x400044C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private UIControlSet _controlSet;

			[Token(Token = "0x400044D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private Dictionary<int, PropertyType> idToProperty;

			[Token(Token = "0x400044E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private InputBehavior copyOfOriginal;

			[Token(Token = "0x1700033B")]
			public InputBehavior inputBehavior
			{
				[Token(Token = "0x60007CB")]
				[Address(RVA = "0x925E3C", Offset = "0x925E3C", VA = "0x925E3C")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700033C")]
			public UIControlSet controlSet
			{
				[Token(Token = "0x60007CC")]
				[Address(RVA = "0x925E44", Offset = "0x925E44", VA = "0x925E44")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60007CD")]
			[Address(RVA = "0x925E4C", Offset = "0x925E4C", VA = "0x925E4C")]
			public InputBehaviorInfo(InputBehavior inputBehavior, UIControlSet controlSet, Dictionary<int, PropertyType> idToProperty)
			{
			}

			[Token(Token = "0x60007CE")]
			[Address(RVA = "0x925EDC", Offset = "0x925EDC", VA = "0x925EDC")]
			public void RestorePreviousData()
			{
			}

			[Token(Token = "0x60007CF")]
			[Address(RVA = "0x925F00", Offset = "0x925F00", VA = "0x925F00")]
			public void RestoreDefaultData()
			{
			}

			[Token(Token = "0x60007D0")]
			[Address(RVA = "0x9261AC", Offset = "0x9261AC", VA = "0x9261AC")]
			public void RestoreData(PropertyType propertyType, int controlId)
			{
			}

			[Token(Token = "0x60007D1")]
			[Address(RVA = "0x925F34", Offset = "0x925F34", VA = "0x925F34")]
			public void RefreshControls()
			{
			}
		}

		[Token(Token = "0x200008A")]
		public enum ButtonIdentifier
		{
			[Token(Token = "0x4000450")]
			Done,
			[Token(Token = "0x4000451")]
			Cancel,
			[Token(Token = "0x4000452")]
			Default
		}

		[Token(Token = "0x200008B")]
		private enum PropertyType
		{
			[Token(Token = "0x4000454")]
			JoystickAxisSensitivity,
			[Token(Token = "0x4000455")]
			MouseXYAxisSensitivity
		}

		[Token(Token = "0x200008C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EF7E8", Offset = "0x6EF7E8")]
		private sealed class <>c__DisplayClass26_0
		{
			[Token(Token = "0x4000456")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Action<int, int, float> valueChangedCallback;

			[Token(Token = "0x4000457")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int inputBehaviorId;

			[Token(Token = "0x4000458")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Action<int, int> cancelCallback;

			[Token(Token = "0x60007D2")]
			[Address(RVA = "0x925D54", Offset = "0x925D54", VA = "0x925D54")]
			public <>c__DisplayClass26_0()
			{
			}

			[Token(Token = "0x60007D3")]
			[Address(RVA = "0x925D5C", Offset = "0x925D5C", VA = "0x925D5C")]
			internal void <CreateSlider>b__0(int cId, float value)
			{
			}

			[Token(Token = "0x60007D4")]
			[Address(RVA = "0x925DD4", Offset = "0x925DD4", VA = "0x925DD4")]
			internal void <CreateSlider>b__1(int cId)
			{
			}
		}

		[Token(Token = "0x400043E")]
		private const float minSensitivity = 0.1f;

		[Token(Token = "0x400043F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private RectTransform spawnTransform;

		[Token(Token = "0x4000440")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private Button doneButton;

		[Token(Token = "0x4000441")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private Button cancelButton;

		[Token(Token = "0x4000442")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private Button defaultButton;

		[Token(Token = "0x4000443")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private TMP_Text doneButtonLabel;

		[Token(Token = "0x4000444")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private TMP_Text cancelButtonLabel;

		[Token(Token = "0x4000445")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private TMP_Text defaultButtonLabel;

		[Token(Token = "0x4000446")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private GameObject uiControlSetPrefab;

		[Token(Token = "0x4000447")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private GameObject uiSliderControlPrefab;

		[Token(Token = "0x4000448")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private List<InputBehaviorInfo> inputBehaviorInfo;

		[Token(Token = "0x4000449")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private Dictionary<int, Action<int>> buttonCallbacks;

		[Token(Token = "0x400044A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private int playerId;

		[Token(Token = "0x60007BA")]
		[Address(RVA = "0xB1886C", Offset = "0xB1886C", VA = "0xB1886C", Slot = "5")]
		public override void Initialize(int id, Func<int, bool> isFocusedCallback)
		{
		}

		[Token(Token = "0x60007BB")]
		[Address(RVA = "0xB18C1C", Offset = "0xB18C1C", VA = "0xB18C1C")]
		public void SetData(int playerId, ControlMapper.InputBehaviorSettings[] data)
		{
		}

		[Token(Token = "0x60007BC")]
		[Address(RVA = "0xB19474", Offset = "0xB19474", VA = "0xB19474")]
		public void SetButtonCallback(ButtonIdentifier buttonIdentifier, Action<int> callback)
		{
		}

		[Token(Token = "0x60007BD")]
		[Address(RVA = "0xB19560", Offset = "0xB19560", VA = "0xB19560", Slot = "9")]
		public override void Cancel()
		{
		}

		[Token(Token = "0x60007BE")]
		[Address(RVA = "0xB196EC", Offset = "0xB196EC", VA = "0xB196EC")]
		public void OnDone()
		{
		}

		[Token(Token = "0x60007BF")]
		[Address(RVA = "0xB1978C", Offset = "0xB1978C", VA = "0xB1978C")]
		public void OnCancel()
		{
		}

		[Token(Token = "0x60007C0")]
		[Address(RVA = "0xB19798", Offset = "0xB19798", VA = "0xB19798")]
		public void OnRestoreDefault()
		{
		}

		[Token(Token = "0x60007C1")]
		[Address(RVA = "0xB198B8", Offset = "0xB198B8", VA = "0xB198B8")]
		private void JoystickAxisSensitivityValueChanged(int inputBehaviorId, int controlId, float value)
		{
		}

		[Token(Token = "0x60007C2")]
		[Address(RVA = "0xB198E8", Offset = "0xB198E8", VA = "0xB198E8")]
		private void MouseXYAxisSensitivityValueChanged(int inputBehaviorId, int controlId, float value)
		{
		}

		[Token(Token = "0x60007C3")]
		[Address(RVA = "0xB19918", Offset = "0xB19918", VA = "0xB19918")]
		private void JoystickAxisSensitivityCanceled(int inputBehaviorId, int controlId)
		{
		}

		[Token(Token = "0x60007C4")]
		[Address(RVA = "0xB19A50", Offset = "0xB19A50", VA = "0xB19A50")]
		private void MouseXYAxisSensitivityCanceled(int inputBehaviorId, int controlId)
		{
		}

		[Token(Token = "0x60007C5")]
		[Address(RVA = "0xB19A8C", Offset = "0xB19A8C", VA = "0xB19A8C", Slot = "6")]
		public override void TakeInputFocus()
		{
		}

		[Token(Token = "0x60007C6")]
		[Address(RVA = "0xB19160", Offset = "0xB19160", VA = "0xB19160")]
		private UIControlSet CreateControlSet()
		{
			return null;
		}

		[Token(Token = "0x60007C7")]
		[Address(RVA = "0xB19224", Offset = "0xB19224", VA = "0xB19224")]
		private UISliderControl CreateSlider(UIControlSet set, int inputBehaviorId, string defaultTitle, string overrideTitle, Sprite icon, float minValue, float maxValue, Action<int, int, float> valueChangedCallback, Action<int, int> cancelCallback)
		{
			return null;
		}

		[Token(Token = "0x60007C8")]
		[Address(RVA = "0xB190DC", Offset = "0xB190DC", VA = "0xB190DC")]
		private InputBehavior GetInputBehavior(int id)
		{
			return null;
		}

		[Token(Token = "0x60007C9")]
		[Address(RVA = "0xB19954", Offset = "0xB19954", VA = "0xB19954")]
		private InputBehaviorInfo GetInputBehaviorInfo(int inputBehaviorId)
		{
			return null;
		}

		[Token(Token = "0x60007CA")]
		[Address(RVA = "0xB19A94", Offset = "0xB19A94", VA = "0xB19A94")]
		public InputBehaviorWindow()
		{
		}
	}
	[Token(Token = "0x200008D")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x6EF7F8", Offset = "0x6EF7F8")]
	public class InputFieldInfo : UIElementInfo
	{
		[Token(Token = "0x4000459")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F4958", Offset = "0x6F4958")]
		private int <actionId>k__BackingField;

		[Token(Token = "0x400045A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F4968", Offset = "0x6F4968")]
		private AxisRange <axisRange>k__BackingField;

		[Token(Token = "0x400045B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F4978", Offset = "0x6F4978")]
		private int <actionElementMapId>k__BackingField;

		[Token(Token = "0x400045C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F4988", Offset = "0x6F4988")]
		private ControllerType <controllerType>k__BackingField;

		[Token(Token = "0x400045D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F4998", Offset = "0x6F4998")]
		private int <controllerId>k__BackingField;

		[Token(Token = "0x1700033D")]
		public int actionId
		{
			[Token(Token = "0x60007D5")]
			[Address(RVA = "0xB19A9C", Offset = "0xB19A9C", VA = "0xB19A9C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F9CC8", Offset = "0x6F9CC8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60007D6")]
			[Address(RVA = "0xB19AA4", Offset = "0xB19AA4", VA = "0xB19AA4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F9CD8", Offset = "0x6F9CD8")]
			set
			{
			}
		}

		[Token(Token = "0x1700033E")]
		public AxisRange axisRange
		{
			[Token(Token = "0x60007D7")]
			[Address(RVA = "0xB19AAC", Offset = "0xB19AAC", VA = "0xB19AAC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F9CE8", Offset = "0x6F9CE8")]
			get
			{
				return default(AxisRange);
			}
			[Token(Token = "0x60007D8")]
			[Address(RVA = "0xB19AB4", Offset = "0xB19AB4", VA = "0xB19AB4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F9CF8", Offset = "0x6F9CF8")]
			set
			{
			}
		}

		[Token(Token = "0x1700033F")]
		public int actionElementMapId
		{
			[Token(Token = "0x60007D9")]
			[Address(RVA = "0xB19ABC", Offset = "0xB19ABC", VA = "0xB19ABC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F9D08", Offset = "0x6F9D08")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60007DA")]
			[Address(RVA = "0xB19AC4", Offset = "0xB19AC4", VA = "0xB19AC4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F9D18", Offset = "0x6F9D18")]
			set
			{
			}
		}

		[Token(Token = "0x17000340")]
		public ControllerType controllerType
		{
			[Token(Token = "0x60007DB")]
			[Address(RVA = "0xB19ACC", Offset = "0xB19ACC", VA = "0xB19ACC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F9D28", Offset = "0x6F9D28")]
			get
			{
				return default(ControllerType);
			}
			[Token(Token = "0x60007DC")]
			[Address(RVA = "0xB19AD4", Offset = "0xB19AD4", VA = "0xB19AD4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F9D38", Offset = "0x6F9D38")]
			set
			{
			}
		}

		[Token(Token = "0x17000341")]
		public int controllerId
		{
			[Token(Token = "0x60007DD")]
			[Address(RVA = "0xB19ADC", Offset = "0xB19ADC", VA = "0xB19ADC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F9D48", Offset = "0x6F9D48")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60007DE")]
			[Address(RVA = "0xB19AE4", Offset = "0xB19AE4", VA = "0xB19AE4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F9D58", Offset = "0x6F9D58")]
			set
			{
			}
		}

		[Token(Token = "0x60007DF")]
		[Address(RVA = "0xB19AEC", Offset = "0xB19AEC", VA = "0xB19AEC")]
		public InputFieldInfo()
		{
		}
	}
	[Token(Token = "0x200008E")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x6EF830", Offset = "0x6EF830")]
	public class InputRow : MonoBehaviour
	{
		[Token(Token = "0x400045E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TMP_Text label;

		[Token(Token = "0x400045F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F49A8", Offset = "0x6F49A8")]
		private ButtonInfo[] <buttons>k__BackingField;

		[Token(Token = "0x4000460")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int rowIndex;

		[Token(Token = "0x4000461")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Action<int, ButtonInfo> inputFieldActivatedCallback;

		[Token(Token = "0x17000342")]
		public ButtonInfo[] buttons
		{
			[Token(Token = "0x60007E0")]
			[Address(RVA = "0xB1ACF8", Offset = "0xB1ACF8", VA = "0xB1ACF8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F9D68", Offset = "0x6F9D68")]
			get
			{
				return null;
			}
			[Token(Token = "0x60007E1")]
			[Address(RVA = "0xB1AD00", Offset = "0xB1AD00", VA = "0xB1AD00")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F9D78", Offset = "0x6F9D78")]
			private set
			{
			}
		}

		[Token(Token = "0x60007E2")]
		[Address(RVA = "0xB1AD08", Offset = "0xB1AD08", VA = "0xB1AD08")]
		public void Initialize(int rowIndex, string label, Action<int, ButtonInfo> inputFieldActivatedCallback)
		{
		}

		[Token(Token = "0x60007E3")]
		[Address(RVA = "0xB1ADB0", Offset = "0xB1ADB0", VA = "0xB1ADB0")]
		public void OnButtonActivated(ButtonInfo buttonInfo)
		{
		}

		[Token(Token = "0x60007E4")]
		[Address(RVA = "0xB1AE24", Offset = "0xB1AE24", VA = "0xB1AE24")]
		public InputRow()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200008F")]
	public class LanguageData : LanguageDataBase
	{
		[Serializable]
		[Token(Token = "0x2000090")]
		protected class CustomEntry
		{
			[Token(Token = "0x400049E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string key;

			[Token(Token = "0x400049F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string value;

			[Token(Token = "0x600082A")]
			[Address(RVA = "0x927910", Offset = "0x927910", VA = "0x927910")]
			public CustomEntry()
			{
			}

			[Token(Token = "0x600082B")]
			[Address(RVA = "0x927918", Offset = "0x927918", VA = "0x927918")]
			public CustomEntry(string key, string value)
			{
			}

			[Token(Token = "0x600082C")]
			[Address(RVA = "0x927950", Offset = "0x927950", VA = "0x927950")]
			public static Dictionary<string, string> ToDictionary(CustomEntry[] array)
			{
				return null;
			}
		}

		[Serializable]
		[Token(Token = "0x2000091")]
		protected class ModifierKeys
		{
			[Token(Token = "0x40004A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string control;

			[Token(Token = "0x40004A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string alt;

			[Token(Token = "0x40004A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string shift;

			[Token(Token = "0x40004A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string command;

			[Token(Token = "0x40004A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public string separator;

			[Token(Token = "0x600082D")]
			[Address(RVA = "0x927B58", Offset = "0x927B58", VA = "0x927B58")]
			public ModifierKeys()
			{
			}
		}

		[Token(Token = "0x4000462")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string _yes;

		[Token(Token = "0x4000463")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private string _no;

		[Token(Token = "0x4000464")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private string _add;

		[Token(Token = "0x4000465")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private string _replace;

		[Token(Token = "0x4000466")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private string _remove;

		[Token(Token = "0x4000467")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private string _swap;

		[Token(Token = "0x4000468")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private string _cancel;

		[Token(Token = "0x4000469")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private string _none;

		[Token(Token = "0x400046A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private string _okay;

		[Token(Token = "0x400046B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private string _done;

		[Token(Token = "0x400046C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private string _default;

		[Token(Token = "0x400046D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private string _assignControllerWindowTitle;

		[Token(Token = "0x400046E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private string _assignControllerWindowMessage;

		[Token(Token = "0x400046F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private string _controllerAssignmentConflictWindowTitle;

		[Token(Token = "0x4000470")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F4A98", Offset = "0x6F4A98")]
		[SerializeField]
		private string _controllerAssignmentConflictWindowMessage;

		[Token(Token = "0x4000471")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private string _elementAssignmentPrePollingWindowMessage;

		[Token(Token = "0x4000472")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F4AF4", Offset = "0x6F4AF4")]
		[SerializeField]
		private string _joystickElementAssignmentPollingWindowMessage;

		[Token(Token = "0x4000473")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F4B40", Offset = "0x6F4B40")]
		[SerializeField]
		private string _joystickElementAssignmentPollingWindowMessage_fullAxisFieldOnly;

		[Token(Token = "0x4000474")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F4B8C", Offset = "0x6F4B8C")]
		private string _keyboardElementAssignmentPollingWindowMessage;

		[Token(Token = "0x4000475")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F4BD8", Offset = "0x6F4BD8")]
		[SerializeField]
		private string _mouseElementAssignmentPollingWindowMessage;

		[Token(Token = "0x4000476")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F4C24", Offset = "0x6F4C24")]
		private string _mouseElementAssignmentPollingWindowMessage_fullAxisFieldOnly;

		[Token(Token = "0x4000477")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private string _elementAssignmentConflictWindowMessage;

		[Token(Token = "0x4000478")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F4C80", Offset = "0x6F4C80")]
		private string _elementAlreadyInUseBlocked;

		[Token(Token = "0x4000479")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F4CCC", Offset = "0x6F4CCC")]
		private string _elementAlreadyInUseCanReplace;

		[Token(Token = "0x400047A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F4D18", Offset = "0x6F4D18")]
		private string _elementAlreadyInUseCanReplace_conflictAllowed;

		[Token(Token = "0x400047B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private string _mouseAssignmentConflictWindowTitle;

		[Token(Token = "0x400047C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F4D74", Offset = "0x6F4D74")]
		private string _mouseAssignmentConflictWindowMessage;

		[Token(Token = "0x400047D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		private string _calibrateControllerWindowTitle;

		[Token(Token = "0x400047E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		private string _calibrateAxisStep1WindowTitle;

		[Token(Token = "0x400047F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F4DE0", Offset = "0x6F4DE0")]
		private string _calibrateAxisStep1WindowMessage;

		[Token(Token = "0x4000480")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[SerializeField]
		private string _calibrateAxisStep2WindowTitle;

		[Token(Token = "0x4000481")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F4E3C", Offset = "0x6F4E3C")]
		[SerializeField]
		private string _calibrateAxisStep2WindowMessage;

		[Token(Token = "0x4000482")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[SerializeField]
		private string _inputBehaviorSettingsWindowTitle;

		[Token(Token = "0x4000483")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[SerializeField]
		private string _restoreDefaultsWindowTitle;

		[Token(Token = "0x4000484")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F4EA8", Offset = "0x6F4EA8")]
		private string _restoreDefaultsWindowMessage_onePlayer;

		[Token(Token = "0x4000485")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F4EF4", Offset = "0x6F4EF4")]
		private string _restoreDefaultsWindowMessage_multiPlayer;

		[Token(Token = "0x4000486")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[SerializeField]
		private string _actionColumnLabel;

		[Token(Token = "0x4000487")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[SerializeField]
		private string _keyboardColumnLabel;

		[Token(Token = "0x4000488")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[SerializeField]
		private string _mouseColumnLabel;

		[Token(Token = "0x4000489")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[SerializeField]
		private string _controllerColumnLabel;

		[Token(Token = "0x400048A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		[SerializeField]
		private string _removeControllerButtonLabel;

		[Token(Token = "0x400048B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		[SerializeField]
		private string _calibrateControllerButtonLabel;

		[Token(Token = "0x400048C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		[SerializeField]
		private string _assignControllerButtonLabel;

		[Token(Token = "0x400048D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		[SerializeField]
		private string _inputBehaviorSettingsButtonLabel;

		[Token(Token = "0x400048E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		[SerializeField]
		private string _doneButtonLabel;

		[Token(Token = "0x400048F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		[SerializeField]
		private string _restoreDefaultsButtonLabel;

		[Token(Token = "0x4000490")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		[SerializeField]
		private string _playersGroupLabel;

		[Token(Token = "0x4000491")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		[SerializeField]
		private string _controllerSettingsGroupLabel;

		[Token(Token = "0x4000492")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		[SerializeField]
		private string _assignedControllersGroupLabel;

		[Token(Token = "0x4000493")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		[SerializeField]
		private string _settingsGroupLabel;

		[Token(Token = "0x4000494")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		[SerializeField]
		private string _mapCategoriesGroupLabel;

		[Token(Token = "0x4000495")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		[SerializeField]
		private string _calibrateWindow_deadZoneSliderLabel;

		[Token(Token = "0x4000496")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		[SerializeField]
		private string _calibrateWindow_zeroSliderLabel;

		[Token(Token = "0x4000497")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		[SerializeField]
		private string _calibrateWindow_sensitivitySliderLabel;

		[Token(Token = "0x4000498")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		[SerializeField]
		private string _calibrateWindow_invertToggleLabel;

		[Token(Token = "0x4000499")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		[SerializeField]
		private string _calibrateWindow_calibrateButtonLabel;

		[Token(Token = "0x400049A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		[SerializeField]
		private ModifierKeys _modifierKeys;

		[Token(Token = "0x400049B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		[SerializeField]
		private CustomEntry[] _customEntries;

		[Token(Token = "0x400049C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		private bool _initialized;

		[Token(Token = "0x400049D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		private Dictionary<string, string> customDict;

		[Token(Token = "0x17000343")]
		public override string yes
		{
			[Token(Token = "0x60007E8")]
			[Address(RVA = "0xC49B14", Offset = "0xC49B14", VA = "0xC49B14", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000344")]
		public override string no
		{
			[Token(Token = "0x60007E9")]
			[Address(RVA = "0xC49B1C", Offset = "0xC49B1C", VA = "0xC49B1C", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000345")]
		public override string add
		{
			[Token(Token = "0x60007EA")]
			[Address(RVA = "0xC49B24", Offset = "0xC49B24", VA = "0xC49B24", Slot = "9")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000346")]
		public override string replace
		{
			[Token(Token = "0x60007EB")]
			[Address(RVA = "0xC49B2C", Offset = "0xC49B2C", VA = "0xC49B2C", Slot = "10")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000347")]
		public override string remove
		{
			[Token(Token = "0x60007EC")]
			[Address(RVA = "0xC49B34", Offset = "0xC49B34", VA = "0xC49B34", Slot = "11")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000348")]
		public override string swap
		{
			[Token(Token = "0x60007ED")]
			[Address(RVA = "0xC49B3C", Offset = "0xC49B3C", VA = "0xC49B3C", Slot = "12")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000349")]
		public override string cancel
		{
			[Token(Token = "0x60007EE")]
			[Address(RVA = "0xC49B44", Offset = "0xC49B44", VA = "0xC49B44", Slot = "13")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700034A")]
		public override string none
		{
			[Token(Token = "0x60007EF")]
			[Address(RVA = "0xC49B4C", Offset = "0xC49B4C", VA = "0xC49B4C", Slot = "14")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700034B")]
		public override string okay
		{
			[Token(Token = "0x60007F0")]
			[Address(RVA = "0xC49B54", Offset = "0xC49B54", VA = "0xC49B54", Slot = "15")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700034C")]
		public override string done
		{
			[Token(Token = "0x60007F1")]
			[Address(RVA = "0xC49B5C", Offset = "0xC49B5C", VA = "0xC49B5C", Slot = "16")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700034D")]
		public override string default_
		{
			[Token(Token = "0x60007F2")]
			[Address(RVA = "0xC49B64", Offset = "0xC49B64", VA = "0xC49B64", Slot = "17")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700034E")]
		public override string assignControllerWindowTitle
		{
			[Token(Token = "0x60007F3")]
			[Address(RVA = "0xC49B6C", Offset = "0xC49B6C", VA = "0xC49B6C", Slot = "18")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700034F")]
		public override string assignControllerWindowMessage
		{
			[Token(Token = "0x60007F4")]
			[Address(RVA = "0xC49B74", Offset = "0xC49B74", VA = "0xC49B74", Slot = "19")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000350")]
		public override string controllerAssignmentConflictWindowTitle
		{
			[Token(Token = "0x60007F5")]
			[Address(RVA = "0xC49B7C", Offset = "0xC49B7C", VA = "0xC49B7C", Slot = "20")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000351")]
		public override string elementAssignmentPrePollingWindowMessage
		{
			[Token(Token = "0x60007F6")]
			[Address(RVA = "0xC49B84", Offset = "0xC49B84", VA = "0xC49B84", Slot = "21")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000352")]
		public override string elementAssignmentConflictWindowMessage
		{
			[Token(Token = "0x60007F7")]
			[Address(RVA = "0xC49B8C", Offset = "0xC49B8C", VA = "0xC49B8C", Slot = "22")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000353")]
		public override string mouseAssignmentConflictWindowTitle
		{
			[Token(Token = "0x60007F8")]
			[Address(RVA = "0xC49B94", Offset = "0xC49B94", VA = "0xC49B94", Slot = "23")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000354")]
		public override string calibrateControllerWindowTitle
		{
			[Token(Token = "0x60007F9")]
			[Address(RVA = "0xC49B9C", Offset = "0xC49B9C", VA = "0xC49B9C", Slot = "24")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000355")]
		public override string calibrateAxisStep1WindowTitle
		{
			[Token(Token = "0x60007FA")]
			[Address(RVA = "0xC49BA4", Offset = "0xC49BA4", VA = "0xC49BA4", Slot = "25")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000356")]
		public override string calibrateAxisStep2WindowTitle
		{
			[Token(Token = "0x60007FB")]
			[Address(RVA = "0xC49BAC", Offset = "0xC49BAC", VA = "0xC49BAC", Slot = "26")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000357")]
		public override string inputBehaviorSettingsWindowTitle
		{
			[Token(Token = "0x60007FC")]
			[Address(RVA = "0xC49BB4", Offset = "0xC49BB4", VA = "0xC49BB4", Slot = "27")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000358")]
		public override string restoreDefaultsWindowTitle
		{
			[Token(Token = "0x60007FD")]
			[Address(RVA = "0xC49BBC", Offset = "0xC49BBC", VA = "0xC49BBC", Slot = "28")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000359")]
		public override string actionColumnLabel
		{
			[Token(Token = "0x60007FE")]
			[Address(RVA = "0xC49BC4", Offset = "0xC49BC4", VA = "0xC49BC4", Slot = "29")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700035A")]
		public override string keyboardColumnLabel
		{
			[Token(Token = "0x60007FF")]
			[Address(RVA = "0xC49BCC", Offset = "0xC49BCC", VA = "0xC49BCC", Slot = "30")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700035B")]
		public override string mouseColumnLabel
		{
			[Token(Token = "0x6000800")]
			[Address(RVA = "0xC49BD4", Offset = "0xC49BD4", VA = "0xC49BD4", Slot = "31")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700035C")]
		public override string controllerColumnLabel
		{
			[Token(Token = "0x6000801")]
			[Address(RVA = "0xC49BDC", Offset = "0xC49BDC", VA = "0xC49BDC", Slot = "32")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700035D")]
		public override string removeControllerButtonLabel
		{
			[Token(Token = "0x6000802")]
			[Address(RVA = "0xC49BE4", Offset = "0xC49BE4", VA = "0xC49BE4", Slot = "33")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700035E")]
		public override string calibrateControllerButtonLabel
		{
			[Token(Token = "0x6000803")]
			[Address(RVA = "0xC49BEC", Offset = "0xC49BEC", VA = "0xC49BEC", Slot = "34")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700035F")]
		public override string assignControllerButtonLabel
		{
			[Token(Token = "0x6000804")]
			[Address(RVA = "0xC49BF4", Offset = "0xC49BF4", VA = "0xC49BF4", Slot = "35")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000360")]
		public override string inputBehaviorSettingsButtonLabel
		{
			[Token(Token = "0x6000805")]
			[Address(RVA = "0xC49BFC", Offset = "0xC49BFC", VA = "0xC49BFC", Slot = "36")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000361")]
		public override string doneButtonLabel
		{
			[Token(Token = "0x6000806")]
			[Address(RVA = "0xC49C04", Offset = "0xC49C04", VA = "0xC49C04", Slot = "37")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000362")]
		public override string restoreDefaultsButtonLabel
		{
			[Token(Token = "0x6000807")]
			[Address(RVA = "0xC49C0C", Offset = "0xC49C0C", VA = "0xC49C0C", Slot = "38")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000363")]
		public override string controllerSettingsGroupLabel
		{
			[Token(Token = "0x6000808")]
			[Address(RVA = "0xC49C14", Offset = "0xC49C14", VA = "0xC49C14", Slot = "39")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000364")]
		public override string playersGroupLabel
		{
			[Token(Token = "0x6000809")]
			[Address(RVA = "0xC49C1C", Offset = "0xC49C1C", VA = "0xC49C1C", Slot = "40")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000365")]
		public override string assignedControllersGroupLabel
		{
			[Token(Token = "0x600080A")]
			[Address(RVA = "0xC49C24", Offset = "0xC49C24", VA = "0xC49C24", Slot = "41")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000366")]
		public override string settingsGroupLabel
		{
			[Token(Token = "0x600080B")]
			[Address(RVA = "0xC49C2C", Offset = "0xC49C2C", VA = "0xC49C2C", Slot = "42")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000367")]
		public override string mapCategoriesGroupLabel
		{
			[Token(Token = "0x600080C")]
			[Address(RVA = "0xC49C34", Offset = "0xC49C34", VA = "0xC49C34", Slot = "43")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000368")]
		public override string restoreDefaultsWindowMessage
		{
			[Token(Token = "0x600080D")]
			[Address(RVA = "0xC49C3C", Offset = "0xC49C3C", VA = "0xC49C3C", Slot = "44")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000369")]
		public override string calibrateWindow_deadZoneSliderLabel
		{
			[Token(Token = "0x600080E")]
			[Address(RVA = "0xC49CC4", Offset = "0xC49CC4", VA = "0xC49CC4", Slot = "45")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700036A")]
		public override string calibrateWindow_zeroSliderLabel
		{
			[Token(Token = "0x600080F")]
			[Address(RVA = "0xC49CCC", Offset = "0xC49CCC", VA = "0xC49CCC", Slot = "46")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700036B")]
		public override string calibrateWindow_sensitivitySliderLabel
		{
			[Token(Token = "0x6000810")]
			[Address(RVA = "0xC49CD4", Offset = "0xC49CD4", VA = "0xC49CD4", Slot = "47")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700036C")]
		public override string calibrateWindow_invertToggleLabel
		{
			[Token(Token = "0x6000811")]
			[Address(RVA = "0xC49CDC", Offset = "0xC49CDC", VA = "0xC49CDC", Slot = "48")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700036D")]
		public override string calibrateWindow_calibrateButtonLabel
		{
			[Token(Token = "0x6000812")]
			[Address(RVA = "0xC49CE4", Offset = "0xC49CE4", VA = "0xC49CE4", Slot = "49")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60007E5")]
		[Address(RVA = "0xC499A4", Offset = "0xC499A4", VA = "0xC499A4", Slot = "4")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x60007E6")]
		[Address(RVA = "0xC499E4", Offset = "0xC499E4", VA = "0xC499E4", Slot = "5")]
		public override string GetCustomEntry(string key)
		{
			return null;
		}

		[Token(Token = "0x60007E7")]
		[Address(RVA = "0xC49A8C", Offset = "0xC49A8C", VA = "0xC49A8C", Slot = "6")]
		public override bool ContainsCustomEntryKey(string key)
		{
			return default(bool);
		}

		[Token(Token = "0x6000813")]
		[Address(RVA = "0xC49CEC", Offset = "0xC49CEC", VA = "0xC49CEC", Slot = "50")]
		public override string GetControllerAssignmentConflictWindowMessage(string joystickName, string otherPlayerName, string currentPlayerName)
		{
			return null;
		}

		[Token(Token = "0x6000814")]
		[Address(RVA = "0xC49CF8", Offset = "0xC49CF8", VA = "0xC49CF8", Slot = "51")]
		public override string GetJoystickElementAssignmentPollingWindowMessage(string actionName)
		{
			return null;
		}

		[Token(Token = "0x6000815")]
		[Address(RVA = "0xC49D04", Offset = "0xC49D04", VA = "0xC49D04", Slot = "52")]
		public override string GetJoystickElementAssignmentPollingWindowMessage_FullAxisFieldOnly(string actionName)
		{
			return null;
		}

		[Token(Token = "0x6000816")]
		[Address(RVA = "0xC49D10", Offset = "0xC49D10", VA = "0xC49D10", Slot = "53")]
		public override string GetKeyboardElementAssignmentPollingWindowMessage(string actionName)
		{
			return null;
		}

		[Token(Token = "0x6000817")]
		[Address(RVA = "0xC49D1C", Offset = "0xC49D1C", VA = "0xC49D1C", Slot = "54")]
		public override string GetMouseElementAssignmentPollingWindowMessage(string actionName)
		{
			return null;
		}

		[Token(Token = "0x6000818")]
		[Address(RVA = "0xC49D28", Offset = "0xC49D28", VA = "0xC49D28", Slot = "55")]
		public override string GetMouseElementAssignmentPollingWindowMessage_FullAxisFieldOnly(string actionName)
		{
			return null;
		}

		[Token(Token = "0x6000819")]
		[Address(RVA = "0xC49D34", Offset = "0xC49D34", VA = "0xC49D34", Slot = "56")]
		public override string GetElementAlreadyInUseBlocked(string elementName)
		{
			return null;
		}

		[Token(Token = "0x600081A")]
		[Address(RVA = "0xC49D40", Offset = "0xC49D40", VA = "0xC49D40", Slot = "57")]
		public override string GetElementAlreadyInUseCanReplace(string elementName, bool allowConflicts)
		{
			return null;
		}

		[Token(Token = "0x600081B")]
		[Address(RVA = "0xC49D5C", Offset = "0xC49D5C", VA = "0xC49D5C", Slot = "58")]
		public override string GetMouseAssignmentConflictWindowMessage(string otherPlayerName, string thisPlayerName)
		{
			return null;
		}

		[Token(Token = "0x600081C")]
		[Address(RVA = "0xC49D68", Offset = "0xC49D68", VA = "0xC49D68", Slot = "59")]
		public override string GetCalibrateAxisStep1WindowMessage(string axisName)
		{
			return null;
		}

		[Token(Token = "0x600081D")]
		[Address(RVA = "0xC49D74", Offset = "0xC49D74", VA = "0xC49D74", Slot = "60")]
		public override string GetCalibrateAxisStep2WindowMessage(string axisName)
		{
			return null;
		}

		[Token(Token = "0x600081E")]
		[Address(RVA = "0xC49D80", Offset = "0xC49D80", VA = "0xC49D80", Slot = "61")]
		public override string GetPlayerName(int playerId)
		{
			return null;
		}

		[Token(Token = "0x600081F")]
		[Address(RVA = "0xC49E70", Offset = "0xC49E70", VA = "0xC49E70", Slot = "62")]
		public override string GetControllerName(Controller controller)
		{
			return null;
		}

		[Token(Token = "0x6000820")]
		[Address(RVA = "0xC49ED4", Offset = "0xC49ED4", VA = "0xC49ED4", Slot = "63")]
		public override string GetElementIdentifierName(ActionElementMap actionElementMap)
		{
			return null;
		}

		[Token(Token = "0x6000821")]
		[Address(RVA = "0xC49FCC", Offset = "0xC49FCC", VA = "0xC49FCC", Slot = "64")]
		public override string GetElementIdentifierName(Controller controller, int elementIdentifierId, AxisRange axisRange)
		{
			return null;
		}

		[Token(Token = "0x6000822")]
		[Address(RVA = "0xC4A154", Offset = "0xC4A154", VA = "0xC4A154", Slot = "65")]
		public override string GetElementIdentifierName(KeyCode keyCode, ModifierKeyFlags modifierKeyFlags)
		{
			return null;
		}

		[Token(Token = "0x6000823")]
		[Address(RVA = "0xC4A214", Offset = "0xC4A214", VA = "0xC4A214", Slot = "66")]
		public override string GetActionName(int actionId)
		{
			return null;
		}

		[Token(Token = "0x6000824")]
		[Address(RVA = "0xC4A304", Offset = "0xC4A304", VA = "0xC4A304", Slot = "67")]
		public override string GetActionName(int actionId, AxisRange axisRange)
		{
			return null;
		}

		[Token(Token = "0x6000825")]
		[Address(RVA = "0xC4A4F0", Offset = "0xC4A4F0", VA = "0xC4A4F0", Slot = "68")]
		public override string GetMapCategoryName(int id)
		{
			return null;
		}

		[Token(Token = "0x6000826")]
		[Address(RVA = "0xC4A5E0", Offset = "0xC4A5E0", VA = "0xC4A5E0", Slot = "69")]
		public override string GetActionCategoryName(int id)
		{
			return null;
		}

		[Token(Token = "0x6000827")]
		[Address(RVA = "0xC4A6D0", Offset = "0xC4A6D0", VA = "0xC4A6D0", Slot = "70")]
		public override string GetLayoutName(ControllerType controllerType, int id)
		{
			return null;
		}

		[Token(Token = "0x6000828")]
		[Address(RVA = "0xC4A824", Offset = "0xC4A824", VA = "0xC4A824", Slot = "71")]
		public override string ModifierKeyFlagsToString(ModifierKeyFlags flags)
		{
			return null;
		}

		[Token(Token = "0x6000829")]
		[Address(RVA = "0xC4AA1C", Offset = "0xC4AA1C", VA = "0xC4AA1C")]
		public LanguageData()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000092")]
	public abstract class LanguageDataBase : ScriptableObject
	{
		[Token(Token = "0x1700036E")]
		public abstract string yes
		{
			[Token(Token = "0x6000831")]
			get;
		}

		[Token(Token = "0x1700036F")]
		public abstract string no
		{
			[Token(Token = "0x6000832")]
			get;
		}

		[Token(Token = "0x17000370")]
		public abstract string add
		{
			[Token(Token = "0x6000833")]
			get;
		}

		[Token(Token = "0x17000371")]
		public abstract string replace
		{
			[Token(Token = "0x6000834")]
			get;
		}

		[Token(Token = "0x17000372")]
		public abstract string remove
		{
			[Token(Token = "0x6000835")]
			get;
		}

		[Token(Token = "0x17000373")]
		public abstract string swap
		{
			[Token(Token = "0x6000836")]
			get;
		}

		[Token(Token = "0x17000374")]
		public abstract string cancel
		{
			[Token(Token = "0x6000837")]
			get;
		}

		[Token(Token = "0x17000375")]
		public abstract string none
		{
			[Token(Token = "0x6000838")]
			get;
		}

		[Token(Token = "0x17000376")]
		public abstract string okay
		{
			[Token(Token = "0x6000839")]
			get;
		}

		[Token(Token = "0x17000377")]
		public abstract string done
		{
			[Token(Token = "0x600083A")]
			get;
		}

		[Token(Token = "0x17000378")]
		public abstract string default_
		{
			[Token(Token = "0x600083B")]
			get;
		}

		[Token(Token = "0x17000379")]
		public abstract string assignControllerWindowTitle
		{
			[Token(Token = "0x600083C")]
			get;
		}

		[Token(Token = "0x1700037A")]
		public abstract string assignControllerWindowMessage
		{
			[Token(Token = "0x600083D")]
			get;
		}

		[Token(Token = "0x1700037B")]
		public abstract string controllerAssignmentConflictWindowTitle
		{
			[Token(Token = "0x600083E")]
			get;
		}

		[Token(Token = "0x1700037C")]
		public abstract string elementAssignmentPrePollingWindowMessage
		{
			[Token(Token = "0x600083F")]
			get;
		}

		[Token(Token = "0x1700037D")]
		public abstract string elementAssignmentConflictWindowMessage
		{
			[Token(Token = "0x6000840")]
			get;
		}

		[Token(Token = "0x1700037E")]
		public abstract string mouseAssignmentConflictWindowTitle
		{
			[Token(Token = "0x6000841")]
			get;
		}

		[Token(Token = "0x1700037F")]
		public abstract string calibrateControllerWindowTitle
		{
			[Token(Token = "0x6000842")]
			get;
		}

		[Token(Token = "0x17000380")]
		public abstract string calibrateAxisStep1WindowTitle
		{
			[Token(Token = "0x6000843")]
			get;
		}

		[Token(Token = "0x17000381")]
		public abstract string calibrateAxisStep2WindowTitle
		{
			[Token(Token = "0x6000844")]
			get;
		}

		[Token(Token = "0x17000382")]
		public abstract string inputBehaviorSettingsWindowTitle
		{
			[Token(Token = "0x6000845")]
			get;
		}

		[Token(Token = "0x17000383")]
		public abstract string restoreDefaultsWindowTitle
		{
			[Token(Token = "0x6000846")]
			get;
		}

		[Token(Token = "0x17000384")]
		public abstract string actionColumnLabel
		{
			[Token(Token = "0x6000847")]
			get;
		}

		[Token(Token = "0x17000385")]
		public abstract string keyboardColumnLabel
		{
			[Token(Token = "0x6000848")]
			get;
		}

		[Token(Token = "0x17000386")]
		public abstract string mouseColumnLabel
		{
			[Token(Token = "0x6000849")]
			get;
		}

		[Token(Token = "0x17000387")]
		public abstract string controllerColumnLabel
		{
			[Token(Token = "0x600084A")]
			get;
		}

		[Token(Token = "0x17000388")]
		public abstract string removeControllerButtonLabel
		{
			[Token(Token = "0x600084B")]
			get;
		}

		[Token(Token = "0x17000389")]
		public abstract string calibrateControllerButtonLabel
		{
			[Token(Token = "0x600084C")]
			get;
		}

		[Token(Token = "0x1700038A")]
		public abstract string assignControllerButtonLabel
		{
			[Token(Token = "0x600084D")]
			get;
		}

		[Token(Token = "0x1700038B")]
		public abstract string inputBehaviorSettingsButtonLabel
		{
			[Token(Token = "0x600084E")]
			get;
		}

		[Token(Token = "0x1700038C")]
		public abstract string doneButtonLabel
		{
			[Token(Token = "0x600084F")]
			get;
		}

		[Token(Token = "0x1700038D")]
		public abstract string restoreDefaultsButtonLabel
		{
			[Token(Token = "0x6000850")]
			get;
		}

		[Token(Token = "0x1700038E")]
		public abstract string controllerSettingsGroupLabel
		{
			[Token(Token = "0x6000851")]
			get;
		}

		[Token(Token = "0x1700038F")]
		public abstract string playersGroupLabel
		{
			[Token(Token = "0x6000852")]
			get;
		}

		[Token(Token = "0x17000390")]
		public abstract string assignedControllersGroupLabel
		{
			[Token(Token = "0x6000853")]
			get;
		}

		[Token(Token = "0x17000391")]
		public abstract string settingsGroupLabel
		{
			[Token(Token = "0x6000854")]
			get;
		}

		[Token(Token = "0x17000392")]
		public abstract string mapCategoriesGroupLabel
		{
			[Token(Token = "0x6000855")]
			get;
		}

		[Token(Token = "0x17000393")]
		public abstract string restoreDefaultsWindowMessage
		{
			[Token(Token = "0x6000856")]
			get;
		}

		[Token(Token = "0x17000394")]
		public abstract string calibrateWindow_deadZoneSliderLabel
		{
			[Token(Token = "0x6000857")]
			get;
		}

		[Token(Token = "0x17000395")]
		public abstract string calibrateWindow_zeroSliderLabel
		{
			[Token(Token = "0x6000858")]
			get;
		}

		[Token(Token = "0x17000396")]
		public abstract string calibrateWindow_sensitivitySliderLabel
		{
			[Token(Token = "0x6000859")]
			get;
		}

		[Token(Token = "0x17000397")]
		public abstract string calibrateWindow_invertToggleLabel
		{
			[Token(Token = "0x600085A")]
			get;
		}

		[Token(Token = "0x17000398")]
		public abstract string calibrateWindow_calibrateButtonLabel
		{
			[Token(Token = "0x600085B")]
			get;
		}

		[Token(Token = "0x600082E")]
		public abstract void Initialize();

		[Token(Token = "0x600082F")]
		public abstract string GetCustomEntry(string key);

		[Token(Token = "0x6000830")]
		public abstract bool ContainsCustomEntryKey(string key);

		[Token(Token = "0x600085C")]
		public abstract string GetControllerAssignmentConflictWindowMessage(string joystickName, string otherPlayerName, string currentPlayerName);

		[Token(Token = "0x600085D")]
		public abstract string GetJoystickElementAssignmentPollingWindowMessage(string actionName);

		[Token(Token = "0x600085E")]
		public abstract string GetJoystickElementAssignmentPollingWindowMessage_FullAxisFieldOnly(string actionName);

		[Token(Token = "0x600085F")]
		public abstract string GetKeyboardElementAssignmentPollingWindowMessage(string actionName);

		[Token(Token = "0x6000860")]
		public abstract string GetMouseElementAssignmentPollingWindowMessage(string actionName);

		[Token(Token = "0x6000861")]
		public abstract string GetMouseElementAssignmentPollingWindowMessage_FullAxisFieldOnly(string actionName);

		[Token(Token = "0x6000862")]
		public abstract string GetElementAlreadyInUseBlocked(string elementName);

		[Token(Token = "0x6000863")]
		public abstract string GetElementAlreadyInUseCanReplace(string elementName, bool allowConflicts);

		[Token(Token = "0x6000864")]
		public abstract string GetMouseAssignmentConflictWindowMessage(string otherPlayerName, string thisPlayerName);

		[Token(Token = "0x6000865")]
		public abstract string GetCalibrateAxisStep1WindowMessage(string axisName);

		[Token(Token = "0x6000866")]
		public abstract string GetCalibrateAxisStep2WindowMessage(string axisName);

		[Token(Token = "0x6000867")]
		public abstract string GetPlayerName(int playerId);

		[Token(Token = "0x6000868")]
		public abstract string GetControllerName(Controller controller);

		[Token(Token = "0x6000869")]
		public abstract string GetElementIdentifierName(ActionElementMap actionElementMap);

		[Token(Token = "0x600086A")]
		public abstract string GetElementIdentifierName(Controller controller, int elementIdentifierId, AxisRange axisRange);

		[Token(Token = "0x600086B")]
		public abstract string GetElementIdentifierName(KeyCode keyCode, ModifierKeyFlags modifierKeyFlags);

		[Token(Token = "0x600086C")]
		public abstract string GetActionName(int actionId);

		[Token(Token = "0x600086D")]
		public abstract string GetActionName(int actionId, AxisRange axisRange);

		[Token(Token = "0x600086E")]
		public abstract string GetMapCategoryName(int id);

		[Token(Token = "0x600086F")]
		public abstract string GetActionCategoryName(int id);

		[Token(Token = "0x6000870")]
		public abstract string GetLayoutName(ControllerType controllerType, int id);

		[Token(Token = "0x6000871")]
		public abstract string ModifierKeyFlagsToString(ModifierKeyFlags flags);

		[Token(Token = "0x6000872")]
		[Address(RVA = "0xC4B004", Offset = "0xC4B004", VA = "0xC4B004")]
		protected LanguageDataBase()
		{
		}
	}
	[Token(Token = "0x2000093")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x6EF868", Offset = "0x6EF868")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x6EF868", Offset = "0x6EF868")]
	public class ScrollRectSelectableChild : MonoBehaviour, ISelectHandler, IEventSystemHandler
	{
		[Token(Token = "0x40004A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool useCustomEdgePadding;

		[Token(Token = "0x40004A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float customEdgePadding;

		[Token(Token = "0x40004A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ScrollRect parentScrollRect;

		[Token(Token = "0x40004A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Selectable _selectable;

		[Token(Token = "0x17000399")]
		private RectTransform parentScrollRectContentTransform
		{
			[Token(Token = "0x6000873")]
			[Address(RVA = "0x10A6130", Offset = "0x10A6130", VA = "0x10A6130")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700039A")]
		private Selectable selectable
		{
			[Token(Token = "0x6000874")]
			[Address(RVA = "0x10A614C", Offset = "0x10A614C", VA = "0x10A614C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700039B")]
		private RectTransform rectTransform
		{
			[Token(Token = "0x6000875")]
			[Address(RVA = "0x10A61A8", Offset = "0x10A61A8", VA = "0x10A61A8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000876")]
		[Address(RVA = "0x10A620C", Offset = "0x10A620C", VA = "0x10A620C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000877")]
		[Address(RVA = "0x10A6308", Offset = "0x10A6308", VA = "0x10A6308", Slot = "4")]
		public void OnSelect(BaseEventData eventData)
		{
		}

		[Token(Token = "0x6000878")]
		[Address(RVA = "0x10A660C", Offset = "0x10A660C", VA = "0x10A660C")]
		public ScrollRectSelectableChild()
		{
		}
	}
	[Token(Token = "0x2000094")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x6EF8EC", Offset = "0x6EF8EC")]
	public class ScrollbarVisibilityHelper : MonoBehaviour
	{
		[Token(Token = "0x40004A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ScrollRect scrollRect;

		[Token(Token = "0x6000879")]
		[Address(RVA = "0x10A661C", Offset = "0x10A661C", VA = "0x10A661C")]
		public ScrollbarVisibilityHelper()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000095")]
	public class ThemeSettings : ScriptableObject
	{
		[Serializable]
		[Token(Token = "0x2000096")]
		private abstract class SelectableSettings_Base
		{
			[Token(Token = "0x40004BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			protected Selectable.Transition _transition;

			[Token(Token = "0x40004BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[SerializeField]
			protected CustomColorBlock _colors;

			[Token(Token = "0x40004BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			[SerializeField]
			protected CustomSpriteState _spriteState;

			[Token(Token = "0x40004C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
			[SerializeField]
			protected CustomAnimationTriggers _animationTriggers;

			[Token(Token = "0x1700039C")]
			public Selectable.Transition transition
			{
				[Token(Token = "0x6000882")]
				[Address(RVA = "0x107DCF8", Offset = "0x107DCF8", VA = "0x107DCF8")]
				get
				{
					return default(Selectable.Transition);
				}
			}

			[Token(Token = "0x1700039D")]
			public CustomColorBlock selectableColors
			{
				[Token(Token = "0x6000883")]
				[Address(RVA = "0x107DD00", Offset = "0x107DD00", VA = "0x107DD00")]
				get
				{
					return default(CustomColorBlock);
				}
			}

			[Token(Token = "0x1700039E")]
			public CustomSpriteState spriteState
			{
				[Token(Token = "0x6000884")]
				[Address(RVA = "0x107DD10", Offset = "0x107DD10", VA = "0x107DD10")]
				get
				{
					return default(CustomSpriteState);
				}
			}

			[Token(Token = "0x1700039F")]
			public CustomAnimationTriggers animationTriggers
			{
				[Token(Token = "0x6000885")]
				[Address(RVA = "0x107DD24", Offset = "0x107DD24", VA = "0x107DD24")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000886")]
			[Address(RVA = "0x107D798", Offset = "0x107D798", VA = "0x107D798", Slot = "4")]
			public virtual void Apply(Selectable item)
			{
			}

			[Token(Token = "0x6000887")]
			[Address(RVA = "0x107DBE0", Offset = "0x107DBE0", VA = "0x107DBE0")]
			protected SelectableSettings_Base()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000097")]
		private class SelectableSettings : SelectableSettings_Base
		{
			[Token(Token = "0x40004C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
			[SerializeField]
			private ImageSettings _imageSettings;

			[Token(Token = "0x170003A0")]
			public ImageSettings imageSettings
			{
				[Token(Token = "0x6000888")]
				[Address(RVA = "0x107DBE8", Offset = "0x107DBE8", VA = "0x107DBE8")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000889")]
			[Address(RVA = "0x107DBF0", Offset = "0x107DBF0", VA = "0x107DBF0", Slot = "4")]
			public override void Apply(Selectable item)
			{
			}

			[Token(Token = "0x600088A")]
			[Address(RVA = "0x107DCF0", Offset = "0x107DCF0", VA = "0x107DCF0")]
			public SelectableSettings()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000098")]
		private class SliderSettings : SelectableSettings_Base
		{
			[Token(Token = "0x40004C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
			[SerializeField]
			private ImageSettings _handleImageSettings;

			[Token(Token = "0x40004C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			[SerializeField]
			private ImageSettings _fillImageSettings;

			[Token(Token = "0x40004C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			[SerializeField]
			private ImageSettings _backgroundImageSettings;

			[Token(Token = "0x170003A1")]
			public ImageSettings handleImageSettings
			{
				[Token(Token = "0x600088B")]
				[Address(RVA = "0x107DD2C", Offset = "0x107DD2C", VA = "0x107DD2C")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003A2")]
			public ImageSettings fillImageSettings
			{
				[Token(Token = "0x600088C")]
				[Address(RVA = "0x107DD34", Offset = "0x107DD34", VA = "0x107DD34")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003A3")]
			public ImageSettings backgroundImageSettings
			{
				[Token(Token = "0x600088D")]
				[Address(RVA = "0x107DD3C", Offset = "0x107DD3C", VA = "0x107DD3C")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600088E")]
			[Address(RVA = "0x107DD44", Offset = "0x107DD44", VA = "0x107DD44")]
			private void Apply(UnityEngine.UI.Slider item)
			{
			}

			[Token(Token = "0x600088F")]
			[Address(RVA = "0x107DF64", Offset = "0x107DF64", VA = "0x107DF64", Slot = "4")]
			public override void Apply(Selectable item)
			{
			}

			[Token(Token = "0x6000890")]
			[Address(RVA = "0x107DFFC", Offset = "0x107DFFC", VA = "0x107DFFC")]
			public SliderSettings()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000099")]
		private class ScrollbarSettings : SelectableSettings_Base
		{
			[Token(Token = "0x40004C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
			[SerializeField]
			private ImageSettings _handleImageSettings;

			[Token(Token = "0x40004C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			[SerializeField]
			private ImageSettings _backgroundImageSettings;

			[Token(Token = "0x170003A4")]
			public ImageSettings handle
			{
				[Token(Token = "0x6000891")]
				[Address(RVA = "0x107D5BC", Offset = "0x107D5BC", VA = "0x107D5BC")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003A5")]
			public ImageSettings background
			{
				[Token(Token = "0x6000892")]
				[Address(RVA = "0x107D5C4", Offset = "0x107D5C4", VA = "0x107D5C4")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000893")]
			[Address(RVA = "0x107D5CC", Offset = "0x107D5CC", VA = "0x107D5CC")]
			private void Apply(Scrollbar item)
			{
			}

			[Token(Token = "0x6000894")]
			[Address(RVA = "0x107D700", Offset = "0x107D700", VA = "0x107D700", Slot = "4")]
			public override void Apply(Selectable item)
			{
			}

			[Token(Token = "0x6000895")]
			[Address(RVA = "0x107DBD8", Offset = "0x107DBD8", VA = "0x107DBD8")]
			public ScrollbarSettings()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200009A")]
		private class ImageSettings
		{
			[Token(Token = "0x40004C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			private Color _color;

			[Token(Token = "0x40004C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[SerializeField]
			private Sprite _sprite;

			[Token(Token = "0x40004C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[SerializeField]
			private Material _materal;

			[Token(Token = "0x40004CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[SerializeField]
			private Image.Type _type;

			[Token(Token = "0x40004CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			[SerializeField]
			private bool _preserveAspect;

			[Token(Token = "0x40004CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
			[SerializeField]
			private bool _fillCenter;

			[Token(Token = "0x40004CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[SerializeField]
			private Image.FillMethod _fillMethod;

			[Token(Token = "0x40004CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			[SerializeField]
			private float _fillAmout;

			[Token(Token = "0x40004CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			[SerializeField]
			private bool _fillClockwise;

			[Token(Token = "0x40004D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			[SerializeField]
			private int _fillOrigin;

			[Token(Token = "0x170003A6")]
			public Color color
			{
				[Token(Token = "0x6000896")]
				[Address(RVA = "0x107D3F0", Offset = "0x107D3F0", VA = "0x107D3F0")]
				get
				{
					return default(Color);
				}
			}

			[Token(Token = "0x170003A7")]
			public Sprite sprite
			{
				[Token(Token = "0x6000897")]
				[Address(RVA = "0x107D3FC", Offset = "0x107D3FC", VA = "0x107D3FC")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003A8")]
			public Material materal
			{
				[Token(Token = "0x6000898")]
				[Address(RVA = "0x107D404", Offset = "0x107D404", VA = "0x107D404")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003A9")]
			public Image.Type type
			{
				[Token(Token = "0x6000899")]
				[Address(RVA = "0x107D40C", Offset = "0x107D40C", VA = "0x107D40C")]
				get
				{
					return default(Image.Type);
				}
			}

			[Token(Token = "0x170003AA")]
			public bool preserveAspect
			{
				[Token(Token = "0x600089A")]
				[Address(RVA = "0x107D414", Offset = "0x107D414", VA = "0x107D414")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x170003AB")]
			public bool fillCenter
			{
				[Token(Token = "0x600089B")]
				[Address(RVA = "0x107D41C", Offset = "0x107D41C", VA = "0x107D41C")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x170003AC")]
			public Image.FillMethod fillMethod
			{
				[Token(Token = "0x600089C")]
				[Address(RVA = "0x107D424", Offset = "0x107D424", VA = "0x107D424")]
				get
				{
					return default(Image.FillMethod);
				}
			}

			[Token(Token = "0x170003AD")]
			public float fillAmout
			{
				[Token(Token = "0x600089D")]
				[Address(RVA = "0x107D42C", Offset = "0x107D42C", VA = "0x107D42C")]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x170003AE")]
			public bool fillClockwise
			{
				[Token(Token = "0x600089E")]
				[Address(RVA = "0x107D434", Offset = "0x107D434", VA = "0x107D434")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x170003AF")]
			public int fillOrigin
			{
				[Token(Token = "0x600089F")]
				[Address(RVA = "0x107D43C", Offset = "0x107D43C", VA = "0x107D43C")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x60008A0")]
			[Address(RVA = "0x107D444", Offset = "0x107D444", VA = "0x107D444", Slot = "4")]
			public virtual void CopyTo(Image image)
			{
			}

			[Token(Token = "0x60008A1")]
			[Address(RVA = "0x107D588", Offset = "0x107D588", VA = "0x107D588")]
			public ImageSettings()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200009B")]
		private struct CustomColorBlock
		{
			[Token(Token = "0x40004D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[SerializeField]
			private float m_ColorMultiplier;

			[Token(Token = "0x40004D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[SerializeField]
			private Color m_DisabledColor;

			[Token(Token = "0x40004D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[SerializeField]
			private float m_FadeDuration;

			[Token(Token = "0x40004D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[SerializeField]
			private Color m_HighlightedColor;

			[Token(Token = "0x40004D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[SerializeField]
			private Color m_NormalColor;

			[Token(Token = "0x40004D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[SerializeField]
			private Color m_PressedColor;

			[Token(Token = "0x40004D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			[SerializeField]
			private Color m_SelectedColor;

			[Token(Token = "0x40004D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			[SerializeField]
			private Color m_DisabledHighlightedColor;

			[Token(Token = "0x170003B0")]
			public float colorMultiplier
			{
				[Token(Token = "0x60008A2")]
				[Address(RVA = "0x107D2A8", Offset = "0x107D2A8", VA = "0x107D2A8")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x60008A3")]
				[Address(RVA = "0x107D2B0", Offset = "0x107D2B0", VA = "0x107D2B0")]
				set
				{
				}
			}

			[Token(Token = "0x170003B1")]
			public Color disabledColor
			{
				[Token(Token = "0x60008A4")]
				[Address(RVA = "0x107D2B8", Offset = "0x107D2B8", VA = "0x107D2B8")]
				get
				{
					return default(Color);
				}
				[Token(Token = "0x60008A5")]
				[Address(RVA = "0x107D2C4", Offset = "0x107D2C4", VA = "0x107D2C4")]
				set
				{
				}
			}

			[Token(Token = "0x170003B2")]
			public float fadeDuration
			{
				[Token(Token = "0x60008A6")]
				[Address(RVA = "0x107D2D0", Offset = "0x107D2D0", VA = "0x107D2D0")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x60008A7")]
				[Address(RVA = "0x107D2D8", Offset = "0x107D2D8", VA = "0x107D2D8")]
				set
				{
				}
			}

			[Token(Token = "0x170003B3")]
			public Color highlightedColor
			{
				[Token(Token = "0x60008A8")]
				[Address(RVA = "0x107D2E0", Offset = "0x107D2E0", VA = "0x107D2E0")]
				get
				{
					return default(Color);
				}
				[Token(Token = "0x60008A9")]
				[Address(RVA = "0x107D2EC", Offset = "0x107D2EC", VA = "0x107D2EC")]
				set
				{
				}
			}

			[Token(Token = "0x170003B4")]
			public Color normalColor
			{
				[Token(Token = "0x60008AA")]
				[Address(RVA = "0x107D2F8", Offset = "0x107D2F8", VA = "0x107D2F8")]
				get
				{
					return default(Color);
				}
				[Token(Token = "0x60008AB")]
				[Address(RVA = "0x107D304", Offset = "0x107D304", VA = "0x107D304")]
				set
				{
				}
			}

			[Token(Token = "0x170003B5")]
			public Color pressedColor
			{
				[Token(Token = "0x60008AC")]
				[Address(RVA = "0x107D310", Offset = "0x107D310", VA = "0x107D310")]
				get
				{
					return default(Color);
				}
				[Token(Token = "0x60008AD")]
				[Address(RVA = "0x107D31C", Offset = "0x107D31C", VA = "0x107D31C")]
				set
				{
				}
			}

			[Token(Token = "0x170003B6")]
			public Color selectedColor
			{
				[Token(Token = "0x60008AE")]
				[Address(RVA = "0x107D328", Offset = "0x107D328", VA = "0x107D328")]
				get
				{
					return default(Color);
				}
				[Token(Token = "0x60008AF")]
				[Address(RVA = "0x107D334", Offset = "0x107D334", VA = "0x107D334")]
				set
				{
				}
			}

			[Token(Token = "0x170003B7")]
			public Color disabledHighlightedColor
			{
				[Token(Token = "0x60008B0")]
				[Address(RVA = "0x107D340", Offset = "0x107D340", VA = "0x107D340")]
				get
				{
					return default(Color);
				}
				[Token(Token = "0x60008B1")]
				[Address(RVA = "0x107D34C", Offset = "0x107D34C", VA = "0x107D34C")]
				set
				{
				}
			}

			[Token(Token = "0x60008B2")]
			[Address(RVA = "0x107D358", Offset = "0x107D358", VA = "0x107D358")]
			public static implicit operator ColorBlock(CustomColorBlock item)
			{
				return default(ColorBlock);
			}
		}

		[Serializable]
		[Token(Token = "0x200009C")]
		private struct CustomSpriteState
		{
			[Token(Token = "0x40004D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[SerializeField]
			private Sprite m_DisabledSprite;

			[Token(Token = "0x40004DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[SerializeField]
			private Sprite m_HighlightedSprite;

			[Token(Token = "0x40004DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			private Sprite m_PressedSprite;

			[Token(Token = "0x40004DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[SerializeField]
			private Sprite m_SelectedSprite;

			[Token(Token = "0x40004DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[SerializeField]
			private Sprite m_DisabledHighlightedSprite;

			[Token(Token = "0x170003B8")]
			public Sprite disabledSprite
			{
				[Token(Token = "0x60008B3")]
				[Address(RVA = "0x107D388", Offset = "0x107D388", VA = "0x107D388")]
				get
				{
					return null;
				}
				[Token(Token = "0x60008B4")]
				[Address(RVA = "0x107D390", Offset = "0x107D390", VA = "0x107D390")]
				set
				{
				}
			}

			[Token(Token = "0x170003B9")]
			public Sprite highlightedSprite
			{
				[Token(Token = "0x60008B5")]
				[Address(RVA = "0x107D398", Offset = "0x107D398", VA = "0x107D398")]
				get
				{
					return null;
				}
				[Token(Token = "0x60008B6")]
				[Address(RVA = "0x107D3A0", Offset = "0x107D3A0", VA = "0x107D3A0")]
				set
				{
				}
			}

			[Token(Token = "0x170003BA")]
			public Sprite pressedSprite
			{
				[Token(Token = "0x60008B7")]
				[Address(RVA = "0x107D3A8", Offset = "0x107D3A8", VA = "0x107D3A8")]
				get
				{
					return null;
				}
				[Token(Token = "0x60008B8")]
				[Address(RVA = "0x107D3B0", Offset = "0x107D3B0", VA = "0x107D3B0")]
				set
				{
				}
			}

			[Token(Token = "0x170003BB")]
			public Sprite selectedSprite
			{
				[Token(Token = "0x60008B9")]
				[Address(RVA = "0x107D3B8", Offset = "0x107D3B8", VA = "0x107D3B8")]
				get
				{
					return null;
				}
				[Token(Token = "0x60008BA")]
				[Address(RVA = "0x107D3C0", Offset = "0x107D3C0", VA = "0x107D3C0")]
				set
				{
				}
			}

			[Token(Token = "0x170003BC")]
			public Sprite disabledHighlightedSprite
			{
				[Token(Token = "0x60008BB")]
				[Address(RVA = "0x107D3C8", Offset = "0x107D3C8", VA = "0x107D3C8")]
				get
				{
					return null;
				}
				[Token(Token = "0x60008BC")]
				[Address(RVA = "0x107D3D0", Offset = "0x107D3D0", VA = "0x107D3D0")]
				set
				{
				}
			}

			[Token(Token = "0x60008BD")]
			[Address(RVA = "0x107D3D8", Offset = "0x107D3D8", VA = "0x107D3D8")]
			public static implicit operator SpriteState(CustomSpriteState item)
			{
				return default(SpriteState);
			}
		}

		[Serializable]
		[Token(Token = "0x200009D")]
		private class CustomAnimationTriggers
		{
			[Token(Token = "0x40004DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			private string m_DisabledTrigger;

			[Token(Token = "0x40004DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[SerializeField]
			private string m_HighlightedTrigger;

			[Token(Token = "0x40004E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[SerializeField]
			private string m_NormalTrigger;

			[Token(Token = "0x40004E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[SerializeField]
			private string m_PressedTrigger;

			[Token(Token = "0x40004E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[SerializeField]
			private string m_SelectedTrigger;

			[Token(Token = "0x40004E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[SerializeField]
			private string m_DisabledHighlightedTrigger;

			[Token(Token = "0x170003BD")]
			public string disabledTrigger
			{
				[Token(Token = "0x60008BF")]
				[Address(RVA = "0x107D1B8", Offset = "0x107D1B8", VA = "0x107D1B8")]
				get
				{
					return null;
				}
				[Token(Token = "0x60008C0")]
				[Address(RVA = "0x107D1C0", Offset = "0x107D1C0", VA = "0x107D1C0")]
				set
				{
				}
			}

			[Token(Token = "0x170003BE")]
			public string highlightedTrigger
			{
				[Token(Token = "0x60008C1")]
				[Address(RVA = "0x107D1C8", Offset = "0x107D1C8", VA = "0x107D1C8")]
				get
				{
					return null;
				}
				[Token(Token = "0x60008C2")]
				[Address(RVA = "0x107D1D0", Offset = "0x107D1D0", VA = "0x107D1D0")]
				set
				{
				}
			}

			[Token(Token = "0x170003BF")]
			public string normalTrigger
			{
				[Token(Token = "0x60008C3")]
				[Address(RVA = "0x107D1D8", Offset = "0x107D1D8", VA = "0x107D1D8")]
				get
				{
					return null;
				}
				[Token(Token = "0x60008C4")]
				[Address(RVA = "0x107D1E0", Offset = "0x107D1E0", VA = "0x107D1E0")]
				set
				{
				}
			}

			[Token(Token = "0x170003C0")]
			public string pressedTrigger
			{
				[Token(Token = "0x60008C5")]
				[Address(RVA = "0x107D1E8", Offset = "0x107D1E8", VA = "0x107D1E8")]
				get
				{
					return null;
				}
				[Token(Token = "0x60008C6")]
				[Address(RVA = "0x107D1F0", Offset = "0x107D1F0", VA = "0x107D1F0")]
				set
				{
				}
			}

			[Token(Token = "0x170003C1")]
			public string selectedTrigger
			{
				[Token(Token = "0x60008C7")]
				[Address(RVA = "0x107D1F8", Offset = "0x107D1F8", VA = "0x107D1F8")]
				get
				{
					return null;
				}
				[Token(Token = "0x60008C8")]
				[Address(RVA = "0x107D200", Offset = "0x107D200", VA = "0x107D200")]
				set
				{
				}
			}

			[Token(Token = "0x170003C2")]
			public string disabledHighlightedTrigger
			{
				[Token(Token = "0x60008C9")]
				[Address(RVA = "0x107D208", Offset = "0x107D208", VA = "0x107D208")]
				get
				{
					return null;
				}
				[Token(Token = "0x60008CA")]
				[Address(RVA = "0x107D210", Offset = "0x107D210", VA = "0x107D210")]
				set
				{
				}
			}

			[Token(Token = "0x60008BE")]
			[Address(RVA = "0x107D11C", Offset = "0x107D11C", VA = "0x107D11C")]
			public CustomAnimationTriggers()
			{
			}

			[Token(Token = "0x60008CB")]
			[Address(RVA = "0x107D218", Offset = "0x107D218", VA = "0x107D218")]
			public static implicit operator AnimationTriggers(CustomAnimationTriggers item)
			{
				return null;
			}
		}

		[Serializable]
		[Token(Token = "0x200009E")]
		private class TextSettings
		{
			[Token(Token = "0x40004E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			private Color _color;

			[Token(Token = "0x40004E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[SerializeField]
			private TMP_FontAsset _font;

			[Token(Token = "0x40004E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[SerializeField]
			private FontStyleOverride _style;

			[Token(Token = "0x40004E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			[SerializeField]
			private float _sizeMultiplier;

			[Token(Token = "0x40004E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[SerializeField]
			private float _lineSpacing;

			[Token(Token = "0x40004E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			[SerializeField]
			private float _characterSpacing;

			[Token(Token = "0x40004EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[SerializeField]
			private float _wordSpacing;

			[Token(Token = "0x170003C3")]
			public Color color
			{
				[Token(Token = "0x60008CC")]
				[Address(RVA = "0x107E004", Offset = "0x107E004", VA = "0x107E004")]
				get
				{
					return default(Color);
				}
			}

			[Token(Token = "0x170003C4")]
			public TMP_FontAsset font
			{
				[Token(Token = "0x60008CD")]
				[Address(RVA = "0x107E010", Offset = "0x107E010", VA = "0x107E010")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003C5")]
			public FontStyleOverride style
			{
				[Token(Token = "0x60008CE")]
				[Address(RVA = "0x107E018", Offset = "0x107E018", VA = "0x107E018")]
				get
				{
					return default(FontStyleOverride);
				}
			}

			[Token(Token = "0x170003C6")]
			public float sizeMultiplier
			{
				[Token(Token = "0x60008CF")]
				[Address(RVA = "0x107E020", Offset = "0x107E020", VA = "0x107E020")]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x170003C7")]
			public float lineSpacing
			{
				[Token(Token = "0x60008D0")]
				[Address(RVA = "0x107E028", Offset = "0x107E028", VA = "0x107E028")]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x170003C8")]
			public float chracterSpacing
			{
				[Token(Token = "0x60008D1")]
				[Address(RVA = "0x107E030", Offset = "0x107E030", VA = "0x107E030")]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x170003C9")]
			public float wordSpacing
			{
				[Token(Token = "0x60008D2")]
				[Address(RVA = "0x107E038", Offset = "0x107E038", VA = "0x107E038")]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x60008D3")]
			[Address(RVA = "0x107E040", Offset = "0x107E040", VA = "0x107E040")]
			public TextSettings()
			{
			}
		}

		[Token(Token = "0x200009F")]
		private enum FontStyleOverride
		{
			[Token(Token = "0x40004EC")]
			Default,
			[Token(Token = "0x40004ED")]
			Normal,
			[Token(Token = "0x40004EE")]
			Bold,
			[Token(Token = "0x40004EF")]
			Italic,
			[Token(Token = "0x40004F0")]
			BoldAndItalic
		}

		[Token(Token = "0x40004AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private ImageSettings _mainWindowBackground;

		[Token(Token = "0x40004AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private ImageSettings _popupWindowBackground;

		[Token(Token = "0x40004AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ImageSettings _areaBackground;

		[Token(Token = "0x40004AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private SelectableSettings _selectableSettings;

		[Token(Token = "0x40004AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private SelectableSettings _buttonSettings;

		[Token(Token = "0x40004AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private SelectableSettings _inputGridFieldSettings;

		[Token(Token = "0x40004B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private ScrollbarSettings _scrollbarSettings;

		[Token(Token = "0x40004B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private SliderSettings _sliderSettings;

		[Token(Token = "0x40004B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private ImageSettings _invertToggle;

		[Token(Token = "0x40004B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Color _invertToggleDisabledColor;

		[Token(Token = "0x40004B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private ImageSettings _calibrationBackground;

		[Token(Token = "0x40004B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private ImageSettings _calibrationValueMarker;

		[Token(Token = "0x40004B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private ImageSettings _calibrationRawValueMarker;

		[Token(Token = "0x40004B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private ImageSettings _calibrationZeroMarker;

		[Token(Token = "0x40004B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private ImageSettings _calibrationCalibratedZeroMarker;

		[Token(Token = "0x40004B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private ImageSettings _calibrationDeadzone;

		[Token(Token = "0x40004BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private TextSettings _textSettings;

		[Token(Token = "0x40004BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private TextSettings _buttonTextSettings;

		[Token(Token = "0x40004BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private TextSettings _inputGridFieldTextSettings;

		[Token(Token = "0x600087A")]
		[Address(RVA = "0xAEEF50", Offset = "0xAEEF50", VA = "0xAEEF50")]
		public void Apply(ThemedElement.ElementInfo[] elementInfo)
		{
		}

		[Token(Token = "0x600087B")]
		[Address(RVA = "0xAEEFCC", Offset = "0xAEEFCC", VA = "0xAEEFCC")]
		private void Apply(string themeClass, Component component)
		{
		}

		[Token(Token = "0x600087C")]
		[Address(RVA = "0xAEF33C", Offset = "0xAEF33C", VA = "0xAEF33C")]
		private void Apply(string themeClass, Selectable item)
		{
		}

		[Token(Token = "0x600087D")]
		[Address(RVA = "0xAEF640", Offset = "0xAEF640", VA = "0xAEF640")]
		private void Apply(string themeClass, Image item)
		{
		}

		[Token(Token = "0x600087E")]
		[Address(RVA = "0xAEFA50", Offset = "0xAEFA50", VA = "0xAEFA50")]
		private void Apply(string themeClass, TMP_Text item)
		{
		}

		[Token(Token = "0x600087F")]
		[Address(RVA = "0xAEFCB4", Offset = "0xAEFCB4", VA = "0xAEFCB4")]
		private void Apply(string themeClass, UIImageHelper item)
		{
		}

		[Token(Token = "0x6000880")]
		[Address(RVA = "0xAEFD74", Offset = "0xAEFD74", VA = "0xAEFD74")]
		private static FontStyles GetFontStyle(FontStyleOverride style)
		{
			return default(FontStyles);
		}

		[Token(Token = "0x6000881")]
		[Address(RVA = "0xAEFEE8", Offset = "0xAEFEE8", VA = "0xAEFEE8")]
		public ThemeSettings()
		{
		}
	}
	[Token(Token = "0x20000A0")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x6EF924", Offset = "0x6EF924")]
	public class ThemedElement : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20000A1")]
		public class ElementInfo
		{
			[Token(Token = "0x40004F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			private string _themeClass;

			[Token(Token = "0x40004F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[SerializeField]
			private Component _component;

			[Token(Token = "0x170003CA")]
			public string themeClass
			{
				[Token(Token = "0x60008D6")]
				[Address(RVA = "0x107E07C", Offset = "0x107E07C", VA = "0x107E07C")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003CB")]
			public Component component
			{
				[Token(Token = "0x60008D7")]
				[Address(RVA = "0x107E084", Offset = "0x107E084", VA = "0x107E084")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60008D8")]
			[Address(RVA = "0x107E08C", Offset = "0x107E08C", VA = "0x107E08C")]
			public ElementInfo()
			{
			}
		}

		[Token(Token = "0x40004F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private ElementInfo[] _elements;

		[Token(Token = "0x60008D4")]
		[Address(RVA = "0xAEFEF0", Offset = "0xAEFEF0", VA = "0xAEFEF0")]
		private void Start()
		{
		}

		[Token(Token = "0x60008D5")]
		[Address(RVA = "0xAEFEFC", Offset = "0xAEFEFC", VA = "0xAEFEFC")]
		public ThemedElement()
		{
		}
	}
	[Token(Token = "0x20000A2")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x6EF95C", Offset = "0x6EF95C")]
	public class ToggleInfo : InputFieldInfo
	{
		[Token(Token = "0x60008D9")]
		[Address(RVA = "0xAF0A98", Offset = "0xAF0A98", VA = "0xAF0A98")]
		public ToggleInfo()
		{
		}
	}
	[Token(Token = "0x20000A3")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x6EF994", Offset = "0x6EF994")]
	public class UIControl : MonoBehaviour
	{
		[Token(Token = "0x40004F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TMP_Text title;

		[Token(Token = "0x40004F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int _id;

		[Token(Token = "0x40004F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private bool _showTitle;

		[Token(Token = "0x40004F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int _uidCounter;

		[Token(Token = "0x170003CC")]
		public int id
		{
			[Token(Token = "0x60008DA")]
			[Address(RVA = "0xAF3D08", Offset = "0xAF3D08", VA = "0xAF3D08")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170003CD")]
		public bool showTitle
		{
			[Token(Token = "0x60008DC")]
			[Address(RVA = "0xAF3DA4", Offset = "0xAF3DA4", VA = "0xAF3DA4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60008DD")]
			[Address(RVA = "0xAF3DAC", Offset = "0xAF3DAC", VA = "0xAF3DAC")]
			set
			{
			}
		}

		[Token(Token = "0x60008DB")]
		[Address(RVA = "0xAF3D10", Offset = "0xAF3D10", VA = "0xAF3D10")]
		private void Awake()
		{
		}

		[Token(Token = "0x60008DE")]
		[Address(RVA = "0xAF3E58", Offset = "0xAF3E58", VA = "0xAF3E58", Slot = "4")]
		public virtual void SetCancelCallback(System.Action cancelCallback)
		{
		}

		[Token(Token = "0x60008DF")]
		[Address(RVA = "0xAF3D34", Offset = "0xAF3D34", VA = "0xAF3D34")]
		private static int GetNextUid()
		{
			return default(int);
		}

		[Token(Token = "0x60008E0")]
		[Address(RVA = "0xAF3E5C", Offset = "0xAF3E5C", VA = "0xAF3E5C")]
		public UIControl()
		{
		}
	}
	[Token(Token = "0x20000A4")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x6EF9CC", Offset = "0x6EF9CC")]
	public class UIControlSet : MonoBehaviour
	{
		[Token(Token = "0x20000A5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EFA04", Offset = "0x6EFA04")]
		private sealed class <>c__DisplayClass6_0
		{
			[Token(Token = "0x40004FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Action<int, float> valueChangedCallback;

			[Token(Token = "0x40004FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public UISliderControl control;

			[Token(Token = "0x40004FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Action<int> cancelCallback;

			[Token(Token = "0x60008E6")]
			[Address(RVA = "0x107E3E4", Offset = "0x107E3E4", VA = "0x107E3E4")]
			public <>c__DisplayClass6_0()
			{
			}

			[Token(Token = "0x60008E7")]
			[Address(RVA = "0x107E3EC", Offset = "0x107E3EC", VA = "0x107E3EC")]
			internal void <CreateSlider>b__0(float value)
			{
			}

			[Token(Token = "0x60008E8")]
			[Address(RVA = "0x107E45C", Offset = "0x107E45C", VA = "0x107E45C")]
			internal void <CreateSlider>b__1()
			{
			}
		}

		[Token(Token = "0x40004F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TMP_Text title;

		[Token(Token = "0x40004F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Dictionary<int, UIControl> _controls;

		[Token(Token = "0x170003CE")]
		private Dictionary<int, UIControl> controls
		{
			[Token(Token = "0x60008E1")]
			[Address(RVA = "0xAF3E64", Offset = "0xAF3E64", VA = "0xAF3E64")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60008E2")]
		[Address(RVA = "0xAF3EE0", Offset = "0xAF3EE0", VA = "0xAF3EE0")]
		public void SetTitle(string text)
		{
		}

		[Token(Token = "0x60008E3")]
		public T GetControl<T>(int uniqueId) where T : UIControl
		{
			return null;
		}

		[Token(Token = "0x60008E4")]
		[Address(RVA = "0xAF3F8C", Offset = "0xAF3F8C", VA = "0xAF3F8C")]
		public UISliderControl CreateSlider(GameObject prefab, Sprite icon, float minValue, float maxValue, Action<int, float> valueChangedCallback, Action<int> cancelCallback)
		{
			return null;
		}

		[Token(Token = "0x60008E5")]
		[Address(RVA = "0xAF4354", Offset = "0xAF4354", VA = "0xAF4354")]
		public UIControlSet()
		{
		}
	}
	[Token(Token = "0x20000A6")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x6EFA14", Offset = "0x6EFA14")]
	public abstract class UIElementInfo : MonoBehaviour, ISelectHandler, IEventSystemHandler
	{
		[Token(Token = "0x40004FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string identifier;

		[Token(Token = "0x40004FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int intData;

		[Token(Token = "0x40004FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TMP_Text text;

		[Token(Token = "0x14000016")]
		public event Action<GameObject> OnSelectedEvent
		{
			[Token(Token = "0x60008E9")]
			[Address(RVA = "0xAF435C", Offset = "0xAF435C", VA = "0xAF435C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F9D88", Offset = "0x6F9D88")]
			add
			{
			}
			[Token(Token = "0x60008EA")]
			[Address(RVA = "0xAF43FC", Offset = "0xAF43FC", VA = "0xAF43FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F9D98", Offset = "0x6F9D98")]
			remove
			{
			}
		}

		[Token(Token = "0x60008EB")]
		[Address(RVA = "0xAF449C", Offset = "0xAF449C", VA = "0xAF449C", Slot = "4")]
		public void OnSelect(BaseEventData eventData)
		{
		}

		[Token(Token = "0x60008EC")]
		[Address(RVA = "0xAF450C", Offset = "0xAF450C", VA = "0xAF450C")]
		protected UIElementInfo()
		{
		}
	}
	[Token(Token = "0x20000A7")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x6EFA4C", Offset = "0x6EFA4C")]
	public class UIGroup : MonoBehaviour
	{
		[Token(Token = "0x4000501")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TMP_Text _label;

		[Token(Token = "0x4000502")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform _content;

		[Token(Token = "0x170003CF")]
		public string labelText
		{
			[Token(Token = "0x60008ED")]
			[Address(RVA = "0xAF4514", Offset = "0xAF4514", VA = "0xAF4514")]
			get
			{
				return null;
			}
			[Token(Token = "0x60008EE")]
			[Address(RVA = "0xAF45CC", Offset = "0xAF45CC", VA = "0xAF45CC")]
			set
			{
			}
		}

		[Token(Token = "0x170003D0")]
		public Transform content
		{
			[Token(Token = "0x60008EF")]
			[Address(RVA = "0xAF4678", Offset = "0xAF4678", VA = "0xAF4678")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60008F0")]
		[Address(RVA = "0xAF4680", Offset = "0xAF4680", VA = "0xAF4680")]
		public void SetLabelActive(bool state)
		{
		}

		[Token(Token = "0x60008F1")]
		[Address(RVA = "0xAF4730", Offset = "0xAF4730", VA = "0xAF4730")]
		public UIGroup()
		{
		}
	}
	[Token(Token = "0x20000A8")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x6EFA84", Offset = "0x6EFA84")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x6EFA84", Offset = "0x6EFA84")]
	public class UIImageHelper : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20000A9")]
		private class State
		{
			[Token(Token = "0x4000506")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			public Color color;

			[Token(Token = "0x60008F7")]
			[Address(RVA = "0x107E4BC", Offset = "0x107E4BC", VA = "0x107E4BC")]
			public void Set(Image image)
			{
			}

			[Token(Token = "0x60008F8")]
			[Address(RVA = "0x107E568", Offset = "0x107E568", VA = "0x107E568")]
			public State()
			{
			}
		}

		[Token(Token = "0x4000503")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private State enabledState;

		[Token(Token = "0x4000504")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private State disabledState;

		[Token(Token = "0x4000505")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool currentState;

		[Token(Token = "0x60008F2")]
		[Address(RVA = "0xAF4738", Offset = "0xAF4738", VA = "0xAF4738")]
		public void SetEnabledState(bool newState)
		{
		}

		[Token(Token = "0x60008F3")]
		[Address(RVA = "0xAEFDCC", Offset = "0xAEFDCC", VA = "0xAEFDCC")]
		public void SetEnabledStateColor(Color color)
		{
		}

		[Token(Token = "0x60008F4")]
		[Address(RVA = "0xAEFDEC", Offset = "0xAEFDEC", VA = "0xAEFDEC")]
		public void SetDisabledStateColor(Color color)
		{
		}

		[Token(Token = "0x60008F5")]
		[Address(RVA = "0xAEFE0C", Offset = "0xAEFE0C", VA = "0xAEFE0C")]
		public void Refresh()
		{
		}

		[Token(Token = "0x60008F6")]
		[Address(RVA = "0xAF4880", Offset = "0xAF4880", VA = "0xAF4880")]
		public UIImageHelper()
		{
		}
	}
	[Token(Token = "0x20000AA")]
	public static class UISelectionUtility
	{
		[Token(Token = "0x4000507")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Selectable[] s_reusableAllSelectables;

		[Token(Token = "0x60008F9")]
		[Address(RVA = "0xAF4CE0", Offset = "0xAF4CE0", VA = "0xAF4CE0")]
		public static Selectable FindNextSelectable(Selectable selectable, Transform transform, Vector3 direction)
		{
			return null;
		}
	}
	[Token(Token = "0x20000AB")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x6EFB08", Offset = "0x6EFB08")]
	public class UISliderControl : UIControl
	{
		[Token(Token = "0x20000AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EFB40", Offset = "0x6EFB40")]
		private sealed class <>c__DisplayClass10_0
		{
			[Token(Token = "0x400050C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public System.Action cancelCallback;

			[Token(Token = "0x6000901")]
			[Address(RVA = "0x107E570", Offset = "0x107E570", VA = "0x107E570")]
			public <>c__DisplayClass10_0()
			{
			}

			[Token(Token = "0x6000902")]
			[Address(RVA = "0x107E578", Offset = "0x107E578", VA = "0x107E578")]
			internal void <SetCancelCallback>b__0()
			{
			}

			[Token(Token = "0x6000903")]
			[Address(RVA = "0x107E594", Offset = "0x107E594", VA = "0x107E594")]
			internal void <SetCancelCallback>b__1(BaseEventData data)
			{
			}
		}

		[Token(Token = "0x4000508")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Image iconImage;

		[Token(Token = "0x4000509")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public UnityEngine.UI.Slider slider;

		[Token(Token = "0x400050A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool _showIcon;

		[Token(Token = "0x400050B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		private bool _showSlider;

		[Token(Token = "0x170003D1")]
		public bool showIcon
		{
			[Token(Token = "0x60008FB")]
			[Address(RVA = "0xAF59C4", Offset = "0xAF59C4", VA = "0xAF59C4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60008FC")]
			[Address(RVA = "0xAF59CC", Offset = "0xAF59CC", VA = "0xAF59CC")]
			set
			{
			}
		}

		[Token(Token = "0x170003D2")]
		public bool showSlider
		{
			[Token(Token = "0x60008FD")]
			[Address(RVA = "0xAF5A78", Offset = "0xAF5A78", VA = "0xAF5A78")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60008FE")]
			[Address(RVA = "0xAF5A80", Offset = "0xAF5A80", VA = "0xAF5A80")]
			set
			{
			}
		}

		[Token(Token = "0x60008FF")]
		[Address(RVA = "0xAF5B2C", Offset = "0xAF5B2C", VA = "0xAF5B2C", Slot = "4")]
		public override void SetCancelCallback(System.Action cancelCallback)
		{
		}

		[Token(Token = "0x6000900")]
		[Address(RVA = "0xAF5EF4", Offset = "0xAF5EF4", VA = "0xAF5EF4")]
		public UISliderControl()
		{
		}
	}
	[Token(Token = "0x20000AD")]
	public static class UITools
	{
		[Token(Token = "0x6000904")]
		public static GameObject InstantiateGUIObject<T>(GameObject prefab, Transform parent, string name) where T : Component
		{
			return null;
		}

		[Token(Token = "0x6000905")]
		public static GameObject InstantiateGUIObject<T>(GameObject prefab, Transform parent, string name, Vector2 pivot, Vector2 anchorMin, Vector2 anchorMax, Vector2 anchoredPosition) where T : Component
		{
			return null;
		}

		[Token(Token = "0x6000906")]
		private static GameObject InstantiateGUIObject_Pre<T>(GameObject prefab, Transform parent, string name) where T : Component
		{
			return null;
		}

		[Token(Token = "0x6000907")]
		[Address(RVA = "0xAF5508", Offset = "0xAF5508", VA = "0xAF5508")]
		public static Vector3 GetPointOnRectEdge(RectTransform rectTransform, Vector2 dir)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000908")]
		[Address(RVA = "0xAF5EFC", Offset = "0xAF5EFC", VA = "0xAF5EFC")]
		public static Rect GetWorldSpaceRect(RectTransform rt)
		{
			return default(Rect);
		}

		[Token(Token = "0x6000909")]
		[Address(RVA = "0xAF5648", Offset = "0xAF5648", VA = "0xAF5648")]
		public static Rect TransformRectTo(Transform from, Transform to, Rect rect)
		{
			return default(Rect);
		}

		[Token(Token = "0x600090A")]
		[Address(RVA = "0xAF58C4", Offset = "0xAF58C4", VA = "0xAF58C4")]
		public static Rect InvertY(Rect rect)
		{
			return default(Rect);
		}

		[Token(Token = "0x600090B")]
		[Address(RVA = "0xAF607C", Offset = "0xAF607C", VA = "0xAF607C")]
		public static void SetInteractable(Selectable selectable, bool state, bool playTransition)
		{
		}
	}
	[Token(Token = "0x20000AE")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x6EFB50", Offset = "0x6EFB50")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x6EFB50", Offset = "0x6EFB50")]
	public class Window : MonoBehaviour
	{
		[Token(Token = "0x20000AF")]
		public class Timer
		{
			[Token(Token = "0x400051B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private bool _started;

			[Token(Token = "0x400051C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private float end;

			[Token(Token = "0x170003DE")]
			public bool started
			{
				[Token(Token = "0x6000938")]
				[Address(RVA = "0x1081F88", Offset = "0x1081F88", VA = "0x1081F88")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x170003DF")]
			public bool finished
			{
				[Token(Token = "0x6000939")]
				[Address(RVA = "0x1081F90", Offset = "0x1081F90", VA = "0x1081F90")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x170003E0")]
			public float remaining
			{
				[Token(Token = "0x600093A")]
				[Address(RVA = "0x1081FD8", Offset = "0x1081FD8", VA = "0x1081FD8")]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x600093B")]
			[Address(RVA = "0x1082010", Offset = "0x1082010", VA = "0x1082010")]
			public Timer()
			{
			}

			[Token(Token = "0x600093C")]
			[Address(RVA = "0x1082018", Offset = "0x1082018", VA = "0x1082018")]
			public void Start(float length)
			{
			}

			[Token(Token = "0x600093D")]
			[Address(RVA = "0x1082058", Offset = "0x1082058", VA = "0x1082058")]
			public void Stop()
			{
			}
		}

		[Token(Token = "0x20000B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EFBD4", Offset = "0x6EFBD4")]
		private sealed class <OnEnableAsync>d__64 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400051D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400051E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400051F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Window <>4__this;

			[Token(Token = "0x170003E1")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000941")]
				[Address(RVA = "0x1081F38", Offset = "0x1081F38", VA = "0x1081F38", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003E2")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000943")]
				[Address(RVA = "0x1081F80", Offset = "0x1081F80", VA = "0x1081F80", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600093E")]
			[Address(RVA = "0x1081D58", Offset = "0x1081D58", VA = "0x1081D58")]
			[DebuggerHidden]
			public <OnEnableAsync>d__64(int <>1__state)
			{
			}

			[Token(Token = "0x600093F")]
			[Address(RVA = "0x1081D84", Offset = "0x1081D84", VA = "0x1081D84", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000940")]
			[Address(RVA = "0x1081D88", Offset = "0x1081D88", VA = "0x1081D88", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000942")]
			[Address(RVA = "0x1081F40", Offset = "0x1081F40", VA = "0x1081F40", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400050D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Image backgroundImage;

		[Token(Token = "0x400050E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject content;

		[Token(Token = "0x400050F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool _initialized;

		[Token(Token = "0x4000510")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int _id;

		[Token(Token = "0x4000511")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private RectTransform _rectTransform;

		[Token(Token = "0x4000512")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TMP_Text _titleText;

		[Token(Token = "0x4000513")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<TMP_Text> _contentText;

		[Token(Token = "0x4000514")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private GameObject _defaultUIElement;

		[Token(Token = "0x4000515")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Action<int> _updateCallback;

		[Token(Token = "0x4000516")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Func<int, bool> _isFocusedCallback;

		[Token(Token = "0x4000517")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Timer _timer;

		[Token(Token = "0x4000518")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private CanvasGroup _canvasGroup;

		[Token(Token = "0x4000519")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public UnityAction cancelCallback;

		[Token(Token = "0x400051A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private GameObject lastUISelection;

		[Token(Token = "0x170003D3")]
		public bool hasFocus
		{
			[Token(Token = "0x600090C")]
			[Address(RVA = "0xBAB230", Offset = "0xBAB230", VA = "0xBAB230")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003D4")]
		public int id
		{
			[Token(Token = "0x600090D")]
			[Address(RVA = "0xBAB290", Offset = "0xBAB290", VA = "0xBAB290")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170003D5")]
		public RectTransform rectTransform
		{
			[Token(Token = "0x600090E")]
			[Address(RVA = "0xBAB298", Offset = "0xBAB298", VA = "0xBAB298")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003D6")]
		public TMP_Text titleText
		{
			[Token(Token = "0x600090F")]
			[Address(RVA = "0xBAB348", Offset = "0xBAB348", VA = "0xBAB348")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003D7")]
		public List<TMP_Text> contentText
		{
			[Token(Token = "0x6000910")]
			[Address(RVA = "0xBAB350", Offset = "0xBAB350", VA = "0xBAB350")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003D8")]
		public GameObject defaultUIElement
		{
			[Token(Token = "0x6000911")]
			[Address(RVA = "0xBAB358", Offset = "0xBAB358", VA = "0xBAB358")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000912")]
			[Address(RVA = "0xBAB360", Offset = "0xBAB360", VA = "0xBAB360")]
			set
			{
			}
		}

		[Token(Token = "0x170003D9")]
		public Action<int> updateCallback
		{
			[Token(Token = "0x6000913")]
			[Address(RVA = "0xBAB368", Offset = "0xBAB368", VA = "0xBAB368")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000914")]
			[Address(RVA = "0xBAB370", Offset = "0xBAB370", VA = "0xBAB370")]
			set
			{
			}
		}

		[Token(Token = "0x170003DA")]
		public Timer timer
		{
			[Token(Token = "0x6000915")]
			[Address(RVA = "0xBAB378", Offset = "0xBAB378", VA = "0xBAB378")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003DB")]
		public int width
		{
			[Token(Token = "0x6000916")]
			[Address(RVA = "0xBAB380", Offset = "0xBAB380", VA = "0xBAB380")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000917")]
			[Address(RVA = "0xBAB3C0", Offset = "0xBAB3C0", VA = "0xBAB3C0")]
			set
			{
			}
		}

		[Token(Token = "0x170003DC")]
		public int height
		{
			[Token(Token = "0x6000918")]
			[Address(RVA = "0xBAB418", Offset = "0xBAB418", VA = "0xBAB418")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000919")]
			[Address(RVA = "0xBAB458", Offset = "0xBAB458", VA = "0xBAB458")]
			set
			{
			}
		}

		[Token(Token = "0x170003DD")]
		protected bool initialized
		{
			[Token(Token = "0x600091A")]
			[Address(RVA = "0xBAB4B0", Offset = "0xBAB4B0", VA = "0xBAB4B0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600091B")]
		[Address(RVA = "0xBAB4B8", Offset = "0xBAB4B8", VA = "0xBAB4B8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600091C")]
		[Address(RVA = "0xBAB508", Offset = "0xBAB508", VA = "0xBAB508", Slot = "4")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x600091D")]
		[Address(RVA = "0xBAB6D4", Offset = "0xBAB6D4", VA = "0xBAB6D4", Slot = "5")]
		public virtual void Initialize(int id, Func<int, bool> isFocusedCallback)
		{
		}

		[Token(Token = "0x600091E")]
		[Address(RVA = "0xBAB814", Offset = "0xBAB814", VA = "0xBAB814")]
		public void SetSize(int width, int height)
		{
		}

		[Token(Token = "0x600091F")]
		[Address(RVA = "0xBAB84C", Offset = "0xBAB84C", VA = "0xBAB84C")]
		public void CreateTitleText(GameObject prefab, Vector2 offset)
		{
		}

		[Token(Token = "0x6000920")]
		[Address(RVA = "0xBABBA0", Offset = "0xBABBA0", VA = "0xBABBA0")]
		public void CreateTitleText(GameObject prefab, Vector2 offset, string text)
		{
		}

		[Token(Token = "0x6000921")]
		[Address(RVA = "0xBABC78", Offset = "0xBABC78", VA = "0xBABC78")]
		public void AddContentText(GameObject prefab, UIPivot pivot, UIAnchor anchor, Vector2 offset)
		{
		}

		[Token(Token = "0x6000922")]
		[Address(RVA = "0xBABD6C", Offset = "0xBABD6C", VA = "0xBABD6C")]
		public void AddContentText(GameObject prefab, UIPivot pivot, UIAnchor anchor, Vector2 offset, string text)
		{
		}

		[Token(Token = "0x6000923")]
		[Address(RVA = "0xBABF58", Offset = "0xBABF58", VA = "0xBABF58")]
		public void AddContentImage(GameObject prefab, UIPivot pivot, UIAnchor anchor, Vector2 offset)
		{
		}

		[Token(Token = "0x6000924")]
		[Address(RVA = "0xBAC188", Offset = "0xBAC188", VA = "0xBAC188")]
		public void AddContentImage(GameObject prefab, UIPivot pivot, UIAnchor anchor, Vector2 offset, string text)
		{
		}

		[Token(Token = "0x6000925")]
		[Address(RVA = "0xBAC18C", Offset = "0xBAC18C", VA = "0xBAC18C")]
		public void CreateButton(GameObject prefab, UIPivot pivot, UIAnchor anchor, Vector2 offset, string buttonText, UnityAction confirmCallback, UnityAction cancelCallback, bool setDefault)
		{
		}

		[Token(Token = "0x6000926")]
		[Address(RVA = "0xBAC6E4", Offset = "0xBAC6E4", VA = "0xBAC6E4")]
		public string GetTitleText(string text)
		{
			return null;
		}

		[Token(Token = "0x6000927")]
		[Address(RVA = "0xBABBCC", Offset = "0xBABBCC", VA = "0xBABBCC")]
		public void SetTitleText(string text)
		{
		}

		[Token(Token = "0x6000928")]
		[Address(RVA = "0xBAC79C", Offset = "0xBAC79C", VA = "0xBAC79C")]
		public string GetContentText(int index)
		{
			return null;
		}

		[Token(Token = "0x6000929")]
		[Address(RVA = "0xBAC8CC", Offset = "0xBAC8CC", VA = "0xBAC8CC")]
		public float GetContentTextHeight(int index)
		{
			return default(float);
		}

		[Token(Token = "0x600092A")]
		[Address(RVA = "0xBABE40", Offset = "0xBABE40", VA = "0xBABE40")]
		public void SetContentText(string text, int index)
		{
		}

		[Token(Token = "0x600092B")]
		[Address(RVA = "0xBAC9E8", Offset = "0xBAC9E8", VA = "0xBAC9E8")]
		public void SetUpdateCallback(Action<int> callback)
		{
		}

		[Token(Token = "0x600092C")]
		[Address(RVA = "0xBAC9F0", Offset = "0xBAC9F0", VA = "0xBAC9F0", Slot = "6")]
		public virtual void TakeInputFocus()
		{
		}

		[Token(Token = "0x600092D")]
		[Address(RVA = "0xBACAF4", Offset = "0xBACAF4", VA = "0xBACAF4", Slot = "7")]
		public virtual void Enable()
		{
		}

		[Token(Token = "0x600092E")]
		[Address(RVA = "0xBACB14", Offset = "0xBACB14", VA = "0xBACB14", Slot = "8")]
		public virtual void Disable()
		{
		}

		[Token(Token = "0x600092F")]
		[Address(RVA = "0xBACB34", Offset = "0xBACB34", VA = "0xBACB34", Slot = "9")]
		public virtual void Cancel()
		{
		}

		[Token(Token = "0x6000930")]
		[Address(RVA = "0xBAB910", Offset = "0xBAB910", VA = "0xBAB910")]
		private void CreateText(GameObject prefab, ref TMP_Text textComponent, string name, UIPivot pivot, UIAnchor anchor, Vector2 offset)
		{
		}

		[Token(Token = "0x6000931")]
		[Address(RVA = "0xBAC014", Offset = "0xBAC014", VA = "0xBAC014")]
		private void CreateImage(GameObject prefab, string name, UIPivot pivot, UIAnchor anchor, Vector2 offset)
		{
		}

		[Token(Token = "0x6000932")]
		[Address(RVA = "0xBAC42C", Offset = "0xBAC42C", VA = "0xBAC42C")]
		private GameObject CreateButton(GameObject prefab, string name, UIAnchor anchor, UIPivot pivot, Vector2 offset, out ButtonInfo buttonInfo)
		{
			return null;
		}

		[Token(Token = "0x6000933")]
		[Address(RVA = "0xBACB50", Offset = "0xBACB50", VA = "0xBACB50")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6F9DA8", Offset = "0x6F9DA8")]
		private IEnumerator OnEnableAsync()
		{
			return null;
		}

		[Token(Token = "0x6000934")]
		[Address(RVA = "0xBAB584", Offset = "0xBAB584", VA = "0xBAB584")]
		private void CheckUISelection()
		{
		}

		[Token(Token = "0x6000935")]
		[Address(RVA = "0xBACBBC", Offset = "0xBACBBC", VA = "0xBACBBC")]
		private void RestoreDefaultOrLastUISelection()
		{
		}

		[Token(Token = "0x6000936")]
		[Address(RVA = "0xBACC6C", Offset = "0xBACC6C", VA = "0xBACC6C")]
		private void SetUISelection(GameObject selection)
		{
		}

		[Token(Token = "0x6000937")]
		[Address(RVA = "0xBACD60", Offset = "0xBACD60", VA = "0xBACD60")]
		public Window()
		{
		}
	}
}
namespace Rewired.Demos
{
	[Token(Token = "0x20000B1")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x6EFBE4", Offset = "0x6EFBE4")]
	public class ControlRemappingDemo1 : MonoBehaviour
	{
		[Token(Token = "0x20000B2")]
		private class ControllerSelection
		{
			[Token(Token = "0x4000537")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int _id;

			[Token(Token = "0x4000538")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private int _idPrev;

			[Token(Token = "0x4000539")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private ControllerType _type;

			[Token(Token = "0x400053A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			private ControllerType _typePrev;

			[Token(Token = "0x170003E3")]
			public int id
			{
				[Token(Token = "0x6000982")]
				[Address(RVA = "0x9222C4", Offset = "0x9222C4", VA = "0x9222C4")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6000983")]
				[Address(RVA = "0x9222CC", Offset = "0x9222CC", VA = "0x9222CC")]
				set
				{
				}
			}

			[Token(Token = "0x170003E4")]
			public ControllerType type
			{
				[Token(Token = "0x6000984")]
				[Address(RVA = "0x9222D8", Offset = "0x9222D8", VA = "0x9222D8")]
				get
				{
					return default(ControllerType);
				}
				[Token(Token = "0x6000985")]
				[Address(RVA = "0x9222E0", Offset = "0x9222E0", VA = "0x9222E0")]
				set
				{
				}
			}

			[Token(Token = "0x170003E5")]
			public int idPrev
			{
				[Token(Token = "0x6000986")]
				[Address(RVA = "0x9222EC", Offset = "0x9222EC", VA = "0x9222EC")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x170003E6")]
			public ControllerType typePrev
			{
				[Token(Token = "0x6000987")]
				[Address(RVA = "0x9222F4", Offset = "0x9222F4", VA = "0x9222F4")]
				get
				{
					return default(ControllerType);
				}
			}

			[Token(Token = "0x170003E7")]
			public bool hasSelection
			{
				[Token(Token = "0x6000988")]
				[Address(RVA = "0x9222FC", Offset = "0x9222FC", VA = "0x9222FC")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x6000981")]
			[Address(RVA = "0x922284", Offset = "0x922284", VA = "0x922284")]
			public ControllerSelection()
			{
			}

			[Token(Token = "0x6000989")]
			[Address(RVA = "0x92230C", Offset = "0x92230C", VA = "0x92230C")]
			public void Set(int id, ControllerType type)
			{
			}

			[Token(Token = "0x600098A")]
			[Address(RVA = "0x9222B4", Offset = "0x9222B4", VA = "0x9222B4")]
			public void Clear()
			{
			}
		}

		[Token(Token = "0x20000B3")]
		private class DialogHelper
		{
			[Token(Token = "0x20000B4")]
			public enum DialogType
			{
				[Token(Token = "0x4000547")]
				None = 0,
				[Token(Token = "0x4000548")]
				JoystickConflict = 1,
				[Token(Token = "0x4000549")]
				ElementConflict = 2,
				[Token(Token = "0x400054A")]
				KeyConflict = 3,
				[Token(Token = "0x400054B")]
				DeleteAssignmentConfirmation = 10,
				[Token(Token = "0x400054C")]
				AssignElement = 11
			}

			[Token(Token = "0x400053B")]
			private const float openBusyDelay = 0.25f;

			[Token(Token = "0x400053C")]
			private const float closeBusyDelay = 0.1f;

			[Token(Token = "0x400053D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private DialogType _type;

			[Token(Token = "0x400053E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private bool _enabled;

			[Token(Token = "0x400053F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private float _busyTime;

			[Token(Token = "0x4000540")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			private bool _busyTimerRunning;

			[Token(Token = "0x4000541")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private Action<int> drawWindowDelegate;

			[Token(Token = "0x4000542")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private GUI.WindowFunction drawWindowFunction;

			[Token(Token = "0x4000543")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private WindowProperties windowProperties;

			[Token(Token = "0x4000544")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private int currentActionId;

			[Token(Token = "0x4000545")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			private Action<int, UserResponse> resultCallback;

			[Token(Token = "0x170003E8")]
			private float busyTimer
			{
				[Token(Token = "0x600098B")]
				[Address(RVA = "0x922320", Offset = "0x922320", VA = "0x922320")]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x170003E9")]
			public bool enabled
			{
				[Token(Token = "0x600098C")]
				[Address(RVA = "0x922358", Offset = "0x922358", VA = "0x922358")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x600098D")]
				[Address(RVA = "0x922360", Offset = "0x922360", VA = "0x922360")]
				set
				{
				}
			}

			[Token(Token = "0x170003EA")]
			public DialogType type
			{
				[Token(Token = "0x600098E")]
				[Address(RVA = "0x922400", Offset = "0x922400", VA = "0x922400")]
				get
				{
					return default(DialogType);
				}
				[Token(Token = "0x600098F")]
				[Address(RVA = "0x922418", Offset = "0x922418", VA = "0x922418")]
				set
				{
				}
			}

			[Token(Token = "0x170003EB")]
			public bool busy
			{
				[Token(Token = "0x6000990")]
				[Address(RVA = "0x922478", Offset = "0x922478", VA = "0x922478")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x6000991")]
			[Address(RVA = "0x922480", Offset = "0x922480", VA = "0x922480")]
			public DialogHelper()
			{
			}

			[Token(Token = "0x6000992")]
			[Address(RVA = "0x922568", Offset = "0x922568", VA = "0x922568")]
			public void StartModal(int queueActionId, DialogType type, WindowProperties windowProperties, Action<int, UserResponse> resultCallback)
			{
			}

			[Token(Token = "0x6000993")]
			[Address(RVA = "0x9225C0", Offset = "0x9225C0", VA = "0x9225C0")]
			public void StartModal(int queueActionId, DialogType type, WindowProperties windowProperties, Action<int, UserResponse> resultCallback, float openBusyDelay)
			{
			}

			[Token(Token = "0x6000994")]
			[Address(RVA = "0x92262C", Offset = "0x92262C", VA = "0x92262C")]
			public void Update()
			{
			}

			[Token(Token = "0x6000995")]
			[Address(RVA = "0x922678", Offset = "0x922678", VA = "0x922678")]
			public void Draw()
			{
			}

			[Token(Token = "0x6000996")]
			[Address(RVA = "0x922890", Offset = "0x922890", VA = "0x922890")]
			public void DrawConfirmButton()
			{
			}

			[Token(Token = "0x6000997")]
			[Address(RVA = "0x9228DC", Offset = "0x9228DC", VA = "0x9228DC")]
			public void DrawConfirmButton(string title)
			{
			}

			[Token(Token = "0x6000998")]
			[Address(RVA = "0x922B34", Offset = "0x922B34", VA = "0x922B34")]
			public void DrawConfirmButton(UserResponse response)
			{
			}

			[Token(Token = "0x6000999")]
			[Address(RVA = "0x922B90", Offset = "0x922B90", VA = "0x922B90")]
			public void DrawConfirmButton(UserResponse response, string title)
			{
			}

			[Token(Token = "0x600099A")]
			[Address(RVA = "0x922D58", Offset = "0x922D58", VA = "0x922D58")]
			public void DrawCancelButton()
			{
			}

			[Token(Token = "0x600099B")]
			[Address(RVA = "0x922DA4", Offset = "0x922DA4", VA = "0x922DA4")]
			public void DrawCancelButton(string title)
			{
			}

			[Token(Token = "0x600099C")]
			[Address(RVA = "0x922FEC", Offset = "0x922FEC", VA = "0x922FEC")]
			public void Confirm()
			{
			}

			[Token(Token = "0x600099D")]
			[Address(RVA = "0x922A94", Offset = "0x922A94", VA = "0x922A94")]
			public void Confirm(UserResponse response)
			{
			}

			[Token(Token = "0x600099E")]
			[Address(RVA = "0x922F58", Offset = "0x922F58", VA = "0x922F58")]
			public void Cancel()
			{
			}

			[Token(Token = "0x600099F")]
			[Address(RVA = "0x923044", Offset = "0x923044", VA = "0x923044")]
			private void DrawWindow(int windowId)
			{
			}

			[Token(Token = "0x60009A0")]
			[Address(RVA = "0x922848", Offset = "0x922848", VA = "0x922848")]
			private void UpdateTimers()
			{
			}

			[Token(Token = "0x60009A1")]
			[Address(RVA = "0x92309C", Offset = "0x92309C", VA = "0x92309C")]
			private void StartBusyTimer(float time)
			{
			}

			[Token(Token = "0x60009A2")]
			[Address(RVA = "0x922FF4", Offset = "0x922FF4", VA = "0x922FF4")]
			private void Close()
			{
			}

			[Token(Token = "0x60009A3")]
			[Address(RVA = "0x9223C0", Offset = "0x9223C0", VA = "0x9223C0")]
			private void StateChanged(float delay)
			{
			}

			[Token(Token = "0x60009A4")]
			[Address(RVA = "0x9230DC", Offset = "0x9230DC", VA = "0x9230DC")]
			private void Reset()
			{
			}

			[Token(Token = "0x60009A5")]
			[Address(RVA = "0x9230F4", Offset = "0x9230F4", VA = "0x9230F4")]
			private void ResetTimers()
			{
			}

			[Token(Token = "0x60009A6")]
			[Address(RVA = "0x9230FC", Offset = "0x9230FC", VA = "0x9230FC")]
			public void FullReset()
			{
			}
		}

		[Token(Token = "0x20000B5")]
		private abstract class QueueEntry
		{
			[Token(Token = "0x20000B6")]
			public enum State
			{
				[Token(Token = "0x4000553")]
				Waiting,
				[Token(Token = "0x4000554")]
				Confirmed,
				[Token(Token = "0x4000555")]
				Canceled
			}

			[Token(Token = "0x400054D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F5550", Offset = "0x6F5550")]
			private int <id>k__BackingField;

			[Token(Token = "0x400054E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F5560", Offset = "0x6F5560")]
			private QueueActionType <queueActionType>k__BackingField;

			[Token(Token = "0x400054F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F5570", Offset = "0x6F5570")]
			private State <state>k__BackingField;

			[Token(Token = "0x4000550")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F5580", Offset = "0x6F5580")]
			private UserResponse <response>k__BackingField;

			[Token(Token = "0x4000551")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private static int uidCounter;

			[Token(Token = "0x170003EC")]
			public int id
			{
				[Token(Token = "0x60009A7")]
				[Address(RVA = "0x9232A0", Offset = "0x9232A0", VA = "0x9232A0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F9E58", Offset = "0x6F9E58")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x60009A8")]
				[Address(RVA = "0x9232A8", Offset = "0x9232A8", VA = "0x9232A8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F9E68", Offset = "0x6F9E68")]
				protected set
				{
				}
			}

			[Token(Token = "0x170003ED")]
			public QueueActionType queueActionType
			{
				[Token(Token = "0x60009A9")]
				[Address(RVA = "0x9232B0", Offset = "0x9232B0", VA = "0x9232B0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F9E78", Offset = "0x6F9E78")]
				get
				{
					return default(QueueActionType);
				}
				[Token(Token = "0x60009AA")]
				[Address(RVA = "0x9232B8", Offset = "0x9232B8", VA = "0x9232B8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F9E88", Offset = "0x6F9E88")]
				protected set
				{
				}
			}

			[Token(Token = "0x170003EE")]
			public State state
			{
				[Token(Token = "0x60009AB")]
				[Address(RVA = "0x9232C0", Offset = "0x9232C0", VA = "0x9232C0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F9E98", Offset = "0x6F9E98")]
				get
				{
					return default(State);
				}
				[Token(Token = "0x60009AC")]
				[Address(RVA = "0x9232C8", Offset = "0x9232C8", VA = "0x9232C8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F9EA8", Offset = "0x6F9EA8")]
				protected set
				{
				}
			}

			[Token(Token = "0x170003EF")]
			public UserResponse response
			{
				[Token(Token = "0x60009AD")]
				[Address(RVA = "0x9232D0", Offset = "0x9232D0", VA = "0x9232D0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F9EB8", Offset = "0x6F9EB8")]
				get
				{
					return default(UserResponse);
				}
				[Token(Token = "0x60009AE")]
				[Address(RVA = "0x9232D8", Offset = "0x9232D8", VA = "0x9232D8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F9EC8", Offset = "0x6F9EC8")]
				protected set
				{
				}
			}

			[Token(Token = "0x170003F0")]
			protected static int nextId
			{
				[Token(Token = "0x60009AF")]
				[Address(RVA = "0x9232E0", Offset = "0x9232E0", VA = "0x9232E0")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x60009B0")]
			[Address(RVA = "0x922214", Offset = "0x922214", VA = "0x922214")]
			public QueueEntry(QueueActionType queueActionType)
			{
			}

			[Token(Token = "0x60009B1")]
			[Address(RVA = "0x923334", Offset = "0x923334", VA = "0x923334")]
			public void Confirm(UserResponse response)
			{
			}

			[Token(Token = "0x60009B2")]
			[Address(RVA = "0x923340", Offset = "0x923340", VA = "0x923340")]
			public void Cancel()
			{
			}
		}

		[Token(Token = "0x20000B7")]
		private class JoystickAssignmentChange : QueueEntry
		{
			[Token(Token = "0x4000556")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F5590", Offset = "0x6F5590")]
			private int <playerId>k__BackingField;

			[Token(Token = "0x4000557")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F55A0", Offset = "0x6F55A0")]
			private int <joystickId>k__BackingField;

			[Token(Token = "0x4000558")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F55B0", Offset = "0x6F55B0")]
			private bool <assign>k__BackingField;

			[Token(Token = "0x170003F1")]
			public int playerId
			{
				[Token(Token = "0x60009B3")]
				[Address(RVA = "0x923228", Offset = "0x923228", VA = "0x923228")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F9ED8", Offset = "0x6F9ED8")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x60009B4")]
				[Address(RVA = "0x923230", Offset = "0x923230", VA = "0x923230")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F9EE8", Offset = "0x6F9EE8")]
				private set
				{
				}
			}

			[Token(Token = "0x170003F2")]
			public int joystickId
			{
				[Token(Token = "0x60009B5")]
				[Address(RVA = "0x923238", Offset = "0x923238", VA = "0x923238")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F9EF8", Offset = "0x6F9EF8")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x60009B6")]
				[Address(RVA = "0x923240", Offset = "0x923240", VA = "0x923240")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F9F08", Offset = "0x6F9F08")]
				private set
				{
				}
			}

			[Token(Token = "0x170003F3")]
			public bool assign
			{
				[Token(Token = "0x60009B7")]
				[Address(RVA = "0x923248", Offset = "0x923248", VA = "0x923248")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F9F18", Offset = "0x6F9F18")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x60009B8")]
				[Address(RVA = "0x923250", Offset = "0x923250", VA = "0x923250")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F9F28", Offset = "0x6F9F28")]
				private set
				{
				}
			}

			[Token(Token = "0x60009B9")]
			[Address(RVA = "0x92325C", Offset = "0x92325C", VA = "0x92325C")]
			public JoystickAssignmentChange(int newPlayerId, int joystickId, bool assign)
			{
			}
		}

		[Token(Token = "0x20000B8")]
		private class ElementAssignmentChange : QueueEntry
		{
			[Token(Token = "0x4000559")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F55C0", Offset = "0x6F55C0")]
			private ElementAssignmentChangeType <changeType>k__BackingField;

			[Token(Token = "0x400055A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F55D0", Offset = "0x6F55D0")]
			private InputMapper.Context <context>k__BackingField;

			[Token(Token = "0x170003F4")]
			public ElementAssignmentChangeType changeType
			{
				[Token(Token = "0x60009BA")]
				[Address(RVA = "0x923118", Offset = "0x923118", VA = "0x923118")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F9F38", Offset = "0x6F9F38")]
				get
				{
					return default(ElementAssignmentChangeType);
				}
				[Token(Token = "0x60009BB")]
				[Address(RVA = "0x923120", Offset = "0x923120", VA = "0x923120")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F9F48", Offset = "0x6F9F48")]
				set
				{
				}
			}

			[Token(Token = "0x170003F5")]
			public InputMapper.Context context
			{
				[Token(Token = "0x60009BC")]
				[Address(RVA = "0x923128", Offset = "0x923128", VA = "0x923128")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F9F58", Offset = "0x6F9F58")]
				get
				{
					return null;
				}
				[Token(Token = "0x60009BD")]
				[Address(RVA = "0x923130", Offset = "0x923130", VA = "0x923130")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F9F68", Offset = "0x6F9F68")]
				private set
				{
				}
			}

			[Token(Token = "0x60009BE")]
			[Address(RVA = "0x923138", Offset = "0x923138", VA = "0x923138")]
			public ElementAssignmentChange(ElementAssignmentChangeType changeType, InputMapper.Context context)
			{
			}

			[Token(Token = "0x60009BF")]
			[Address(RVA = "0x923174", Offset = "0x923174", VA = "0x923174")]
			public ElementAssignmentChange(ElementAssignmentChange other)
			{
			}
		}

		[Token(Token = "0x20000B9")]
		private class FallbackJoystickIdentification : QueueEntry
		{
			[Token(Token = "0x400055B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F55E0", Offset = "0x6F55E0")]
			private int <joystickId>k__BackingField;

			[Token(Token = "0x400055C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F55F0", Offset = "0x6F55F0")]
			private string <joystickName>k__BackingField;

			[Token(Token = "0x170003F6")]
			public int joystickId
			{
				[Token(Token = "0x60009C0")]
				[Address(RVA = "0x9231CC", Offset = "0x9231CC", VA = "0x9231CC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F9F78", Offset = "0x6F9F78")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x60009C1")]
				[Address(RVA = "0x9231D4", Offset = "0x9231D4", VA = "0x9231D4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F9F88", Offset = "0x6F9F88")]
				private set
				{
				}
			}

			[Token(Token = "0x170003F7")]
			public string joystickName
			{
				[Token(Token = "0x60009C2")]
				[Address(RVA = "0x9231DC", Offset = "0x9231DC", VA = "0x9231DC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F9F98", Offset = "0x6F9F98")]
				get
				{
					return null;
				}
				[Token(Token = "0x60009C3")]
				[Address(RVA = "0x9231E4", Offset = "0x9231E4", VA = "0x9231E4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F9FA8", Offset = "0x6F9FA8")]
				private set
				{
				}
			}

			[Token(Token = "0x60009C4")]
			[Address(RVA = "0x9231EC", Offset = "0x9231EC", VA = "0x9231EC")]
			public FallbackJoystickIdentification(int joystickId, string joystickName)
			{
			}
		}

		[Token(Token = "0x20000BA")]
		private class Calibration : QueueEntry
		{
			[Token(Token = "0x400055D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F5600", Offset = "0x6F5600")]
			private Player <player>k__BackingField;

			[Token(Token = "0x400055E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F5610", Offset = "0x6F5610")]
			private ControllerType <controllerType>k__BackingField;

			[Token(Token = "0x400055F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F5620", Offset = "0x6F5620")]
			private Joystick <joystick>k__BackingField;

			[Token(Token = "0x4000560")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F5630", Offset = "0x6F5630")]
			private CalibrationMap <calibrationMap>k__BackingField;

			[Token(Token = "0x4000561")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public int selectedElementIdentifierId;

			[Token(Token = "0x4000562")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public bool recording;

			[Token(Token = "0x170003F8")]
			public Player player
			{
				[Token(Token = "0x60009C5")]
				[Address(RVA = "0x92218C", Offset = "0x92218C", VA = "0x92218C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F9FB8", Offset = "0x6F9FB8")]
				get
				{
					return null;
				}
				[Token(Token = "0x60009C6")]
				[Address(RVA = "0x922194", Offset = "0x922194", VA = "0x922194")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F9FC8", Offset = "0x6F9FC8")]
				private set
				{
				}
			}

			[Token(Token = "0x170003F9")]
			public ControllerType controllerType
			{
				[Token(Token = "0x60009C7")]
				[Address(RVA = "0x92219C", Offset = "0x92219C", VA = "0x92219C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F9FD8", Offset = "0x6F9FD8")]
				get
				{
					return default(ControllerType);
				}
				[Token(Token = "0x60009C8")]
				[Address(RVA = "0x9221A4", Offset = "0x9221A4", VA = "0x9221A4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F9FE8", Offset = "0x6F9FE8")]
				private set
				{
				}
			}

			[Token(Token = "0x170003FA")]
			public Joystick joystick
			{
				[Token(Token = "0x60009C9")]
				[Address(RVA = "0x9221AC", Offset = "0x9221AC", VA = "0x9221AC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F9FF8", Offset = "0x6F9FF8")]
				get
				{
					return null;
				}
				[Token(Token = "0x60009CA")]
				[Address(RVA = "0x9221B4", Offset = "0x9221B4", VA = "0x9221B4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FA008", Offset = "0x6FA008")]
				private set
				{
				}
			}

			[Token(Token = "0x170003FB")]
			public CalibrationMap calibrationMap
			{
				[Token(Token = "0x60009CB")]
				[Address(RVA = "0x9221BC", Offset = "0x9221BC", VA = "0x9221BC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FA018", Offset = "0x6FA018")]
				get
				{
					return null;
				}
				[Token(Token = "0x60009CC")]
				[Address(RVA = "0x9221C4", Offset = "0x9221C4", VA = "0x9221C4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FA028", Offset = "0x6FA028")]
				private set
				{
				}
			}

			[Token(Token = "0x60009CD")]
			[Address(RVA = "0x9221CC", Offset = "0x9221CC", VA = "0x9221CC")]
			public Calibration(Player player, Joystick joystick, CalibrationMap calibrationMap)
			{
			}
		}

		[Token(Token = "0x20000BB")]
		private struct WindowProperties
		{
			[Token(Token = "0x4000563")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int windowId;

			[Token(Token = "0x4000564")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public Rect rect;

			[Token(Token = "0x4000565")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Action<string, string> windowDrawDelegate;

			[Token(Token = "0x4000566")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string title;

			[Token(Token = "0x4000567")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string message;
		}

		[Token(Token = "0x20000BC")]
		private enum QueueActionType
		{
			[Token(Token = "0x4000569")]
			None,
			[Token(Token = "0x400056A")]
			JoystickAssignment,
			[Token(Token = "0x400056B")]
			ElementAssignment,
			[Token(Token = "0x400056C")]
			FallbackJoystickIdentification,
			[Token(Token = "0x400056D")]
			Calibrate
		}

		[Token(Token = "0x20000BD")]
		private enum ElementAssignmentChangeType
		{
			[Token(Token = "0x400056F")]
			Add,
			[Token(Token = "0x4000570")]
			Replace,
			[Token(Token = "0x4000571")]
			Remove,
			[Token(Token = "0x4000572")]
			ReassignOrRemove,
			[Token(Token = "0x4000573")]
			ConflictCheck
		}

		[Token(Token = "0x20000BE")]
		public enum UserResponse
		{
			[Token(Token = "0x4000575")]
			Confirm,
			[Token(Token = "0x4000576")]
			Cancel,
			[Token(Token = "0x4000577")]
			Custom1,
			[Token(Token = "0x4000578")]
			Custom2
		}

		[Token(Token = "0x4000520")]
		private const float defaultModalWidth = 250f;

		[Token(Token = "0x4000521")]
		private const float defaultModalHeight = 200f;

		[Token(Token = "0x4000522")]
		private const float assignmentTimeout = 5f;

		[Token(Token = "0x4000523")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private DialogHelper dialog;

		[Token(Token = "0x4000524")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private InputMapper inputMapper;

		[Token(Token = "0x4000525")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private InputMapper.ConflictFoundEventData conflictFoundEventData;

		[Token(Token = "0x4000526")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool guiState;

		[Token(Token = "0x4000527")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		private bool busy;

		[Token(Token = "0x4000528")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		private bool pageGUIState;

		[Token(Token = "0x4000529")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Player selectedPlayer;

		[Token(Token = "0x400052A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int selectedMapCategoryId;

		[Token(Token = "0x400052B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private ControllerSelection selectedController;

		[Token(Token = "0x400052C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private ControllerMap selectedMap;

		[Token(Token = "0x400052D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool showMenu;

		[Token(Token = "0x400052E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		private bool startListening;

		[Token(Token = "0x400052F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private Vector2 actionScrollPos;

		[Token(Token = "0x4000530")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private Vector2 calibrateScrollPos;

		[Token(Token = "0x4000531")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Queue<QueueEntry> actionQueue;

		[Token(Token = "0x4000532")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private bool setupFinished;

		[NonSerialized]
		[Token(Token = "0x4000533")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
		private bool initialized;

		[Token(Token = "0x4000534")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7A")]
		private bool isCompiling;

		[Token(Token = "0x4000535")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private GUIStyle style_wordWrap;

		[Token(Token = "0x4000536")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private GUIStyle style_centeredBox;

		[Token(Token = "0x6000944")]
		[Address(RVA = "0xB264B8", Offset = "0xB264B8", VA = "0xB264B8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000945")]
		[Address(RVA = "0xB267CC", Offset = "0xB267CC", VA = "0xB267CC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000946")]
		[Address(RVA = "0xB268F8", Offset = "0xB268F8", VA = "0xB268F8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000947")]
		[Address(RVA = "0xB26534", Offset = "0xB26534", VA = "0xB26534")]
		private void Initialize()
		{
		}

		[Token(Token = "0x6000948")]
		[Address(RVA = "0xB26D1C", Offset = "0xB26D1C", VA = "0xB26D1C")]
		private void Setup()
		{
		}

		[Token(Token = "0x6000949")]
		[Address(RVA = "0xB267D0", Offset = "0xB267D0", VA = "0xB267D0")]
		private void Subscribe()
		{
		}

		[Token(Token = "0x600094A")]
		[Address(RVA = "0xB26914", Offset = "0xB26914", VA = "0xB26914")]
		private void Unsubscribe()
		{
		}

		[Token(Token = "0x600094B")]
		[Address(RVA = "0xB26E40", Offset = "0xB26E40", VA = "0xB26E40")]
		public void OnGUI()
		{
		}

		[Token(Token = "0x600094C")]
		[Address(RVA = "0xB26EC0", Offset = "0xB26EC0", VA = "0xB26EC0")]
		private void HandleMenuControl()
		{
		}

		[Token(Token = "0x600094D")]
		[Address(RVA = "0xB278F4", Offset = "0xB278F4", VA = "0xB278F4")]
		private void Close()
		{
		}

		[Token(Token = "0x600094E")]
		[Address(RVA = "0xB27918", Offset = "0xB27918", VA = "0xB27918")]
		private void Open()
		{
		}

		[Token(Token = "0x600094F")]
		[Address(RVA = "0xB27044", Offset = "0xB27044", VA = "0xB27044")]
		private void DrawInitialScreen()
		{
		}

		[Token(Token = "0x6000950")]
		[Address(RVA = "0xB275D4", Offset = "0xB275D4", VA = "0xB275D4")]
		private void DrawPage()
		{
		}

		[Token(Token = "0x6000951")]
		[Address(RVA = "0xB27A5C", Offset = "0xB27A5C", VA = "0xB27A5C")]
		private void DrawPlayerSelector()
		{
		}

		[Token(Token = "0x6000952")]
		[Address(RVA = "0xB28960", Offset = "0xB28960", VA = "0xB28960")]
		private void DrawMouseAssignment()
		{
		}

		[Token(Token = "0x6000953")]
		[Address(RVA = "0xB28150", Offset = "0xB28150", VA = "0xB28150")]
		private void DrawJoystickSelector()
		{
		}

		[Token(Token = "0x6000954")]
		[Address(RVA = "0xB28FEC", Offset = "0xB28FEC", VA = "0xB28FEC")]
		private void DrawControllerSelector()
		{
		}

		[Token(Token = "0x6000955")]
		[Address(RVA = "0xB29920", Offset = "0xB29920", VA = "0xB29920")]
		private void DrawCalibrateButton()
		{
		}

		[Token(Token = "0x6000956")]
		[Address(RVA = "0xB29C98", Offset = "0xB29C98", VA = "0xB29C98")]
		private void DrawMapCategories()
		{
		}

		[Token(Token = "0x6000957")]
		[Address(RVA = "0xB2A4AC", Offset = "0xB2A4AC", VA = "0xB2A4AC")]
		private void DrawCategoryActions()
		{
		}

		[Token(Token = "0x6000958")]
		[Address(RVA = "0xB2BE90", Offset = "0xB2BE90", VA = "0xB2BE90")]
		private void DrawActionAssignmentButton(int playerId, InputAction action, AxisRange actionRange, ControllerSelection controller, ControllerMap controllerMap, ActionElementMap elementMap)
		{
		}

		[Token(Token = "0x6000959")]
		[Address(RVA = "0xB2C080", Offset = "0xB2C080", VA = "0xB2C080")]
		private void DrawInvertButton(int playerId, InputAction action, Pole actionAxisContribution, ControllerSelection controller, ControllerMap controllerMap, ActionElementMap elementMap)
		{
		}

		[Token(Token = "0x600095A")]
		[Address(RVA = "0xB2BCF8", Offset = "0xB2BCF8", VA = "0xB2BCF8")]
		private void DrawAddActionMapButton(int playerId, InputAction action, AxisRange actionRange, ControllerSelection controller, ControllerMap controllerMap)
		{
		}

		[Token(Token = "0x600095B")]
		[Address(RVA = "0xB27834", Offset = "0xB27834", VA = "0xB27834")]
		private void ShowDialog()
		{
		}

		[Token(Token = "0x600095C")]
		[Address(RVA = "0xB2C180", Offset = "0xB2C180", VA = "0xB2C180")]
		private void DrawModalWindow(string title, string message)
		{
		}

		[Token(Token = "0x600095D")]
		[Address(RVA = "0xB2C37C", Offset = "0xB2C37C", VA = "0xB2C37C")]
		private void DrawModalWindow_OkayOnly(string title, string message)
		{
		}

		[Token(Token = "0x600095E")]
		[Address(RVA = "0xB2C560", Offset = "0xB2C560", VA = "0xB2C560")]
		private void DrawElementAssignmentWindow(string title, string message)
		{
		}

		[Token(Token = "0x600095F")]
		[Address(RVA = "0xB2C8A8", Offset = "0xB2C8A8", VA = "0xB2C8A8")]
		private void DrawElementAssignmentProtectedConflictWindow(string title, string message)
		{
		}

		[Token(Token = "0x6000960")]
		[Address(RVA = "0xB2CB30", Offset = "0xB2CB30", VA = "0xB2CB30")]
		private void DrawElementAssignmentNormalConflictWindow(string title, string message)
		{
		}

		[Token(Token = "0x6000961")]
		[Address(RVA = "0xB2CDEC", Offset = "0xB2CDEC", VA = "0xB2CDEC")]
		private void DrawReassignOrRemoveElementAssignmentWindow(string title, string message)
		{
		}

		[Token(Token = "0x6000962")]
		[Address(RVA = "0xB2D000", Offset = "0xB2D000", VA = "0xB2D000")]
		private void DrawFallbackJoystickIdentificationWindow(string title, string message)
		{
		}

		[Token(Token = "0x6000963")]
		[Address(RVA = "0xB2D3C0", Offset = "0xB2D3C0", VA = "0xB2D3C0")]
		private void DrawCalibrationWindow(string title, string message)
		{
		}

		[Token(Token = "0x6000964")]
		[Address(RVA = "0xB2E7B4", Offset = "0xB2E7B4", VA = "0xB2E7B4")]
		private void DialogResultCallback(int queueActionId, UserResponse response)
		{
		}

		[Token(Token = "0x6000965")]
		[Address(RVA = "0xB279C8", Offset = "0xB279C8", VA = "0xB279C8")]
		private Rect GetScreenCenteredRect(float width, float height)
		{
			return default(Rect);
		}

		[Token(Token = "0x6000966")]
		[Address(RVA = "0xB2BC40", Offset = "0xB2BC40", VA = "0xB2BC40")]
		private void EnqueueAction(QueueEntry entry)
		{
		}

		[Token(Token = "0x6000967")]
		[Address(RVA = "0xB27378", Offset = "0xB27378", VA = "0xB27378")]
		private void ProcessQueue()
		{
		}

		[Token(Token = "0x6000968")]
		[Address(RVA = "0xB2E920", Offset = "0xB2E920", VA = "0xB2E920")]
		private bool ProcessJoystickAssignmentChange(JoystickAssignmentChange entry)
		{
			return default(bool);
		}

		[Token(Token = "0x6000969")]
		[Address(RVA = "0xB2EC14", Offset = "0xB2EC14", VA = "0xB2EC14")]
		private bool ProcessElementAssignmentChange(ElementAssignmentChange entry)
		{
			return default(bool);
		}

		[Token(Token = "0x600096A")]
		[Address(RVA = "0xB2F084", Offset = "0xB2F084", VA = "0xB2F084")]
		private bool ProcessRemoveOrReassignElementAssignment(ElementAssignmentChange entry)
		{
			return default(bool);
		}

		[Token(Token = "0x600096B")]
		[Address(RVA = "0xB2F2F0", Offset = "0xB2F2F0", VA = "0xB2F2F0")]
		private bool ProcessRemoveElementAssignment(ElementAssignmentChange entry)
		{
			return default(bool);
		}

		[Token(Token = "0x600096C")]
		[Address(RVA = "0xB2F4E8", Offset = "0xB2F4E8", VA = "0xB2F4E8")]
		private bool ProcessAddOrReplaceElementAssignment(ElementAssignmentChange entry)
		{
			return default(bool);
		}

		[Token(Token = "0x600096D")]
		[Address(RVA = "0xB2F828", Offset = "0xB2F828", VA = "0xB2F828")]
		private bool ProcessElementAssignmentConflictCheck(ElementAssignmentChange entry)
		{
			return default(bool);
		}

		[Token(Token = "0x600096E")]
		[Address(RVA = "0xB2ECAC", Offset = "0xB2ECAC", VA = "0xB2ECAC")]
		private bool ProcessFallbackJoystickIdentification(FallbackJoystickIdentification entry)
		{
			return default(bool);
		}

		[Token(Token = "0x600096F")]
		[Address(RVA = "0xB2EE7C", Offset = "0xB2EE7C", VA = "0xB2EE7C")]
		private bool ProcessCalibration(Calibration entry)
		{
			return default(bool);
		}

		[Token(Token = "0x6000970")]
		[Address(RVA = "0xB2FBD4", Offset = "0xB2FBD4", VA = "0xB2FBD4")]
		private void PlayerSelectionChanged()
		{
		}

		[Token(Token = "0x6000971")]
		[Address(RVA = "0xB2BC30", Offset = "0xB2BC30", VA = "0xB2BC30")]
		private void ControllerSelectionChanged()
		{
		}

		[Token(Token = "0x6000972")]
		[Address(RVA = "0xB2FBD8", Offset = "0xB2FBD8", VA = "0xB2FBD8")]
		private void ClearControllerSelection()
		{
		}

		[Token(Token = "0x6000973")]
		[Address(RVA = "0xB2FC14", Offset = "0xB2FC14", VA = "0xB2FC14")]
		private void ClearMapSelection()
		{
		}

		[Token(Token = "0x6000974")]
		[Address(RVA = "0xB26930", Offset = "0xB26930", VA = "0xB26930")]
		private void ResetAll()
		{
		}

		[Token(Token = "0x6000975")]
		[Address(RVA = "0xB27924", Offset = "0xB27924", VA = "0xB27924")]
		private void ClearWorkingVars()
		{
		}

		[Token(Token = "0x6000976")]
		[Address(RVA = "0xB2728C", Offset = "0xB2728C", VA = "0xB2728C")]
		private void SetGUIStateStart()
		{
		}

		[Token(Token = "0x6000977")]
		[Address(RVA = "0xB27850", Offset = "0xB27850", VA = "0xB27850")]
		private void SetGUIStateEnd()
		{
		}

		[Token(Token = "0x6000978")]
		[Address(RVA = "0xB2FC24", Offset = "0xB2FC24", VA = "0xB2FC24")]
		private void JoystickConnected(ControllerStatusChangedEventArgs args)
		{
		}

		[Token(Token = "0x6000979")]
		[Address(RVA = "0xB3013C", Offset = "0xB3013C", VA = "0xB3013C")]
		private void JoystickPreDisconnect(ControllerStatusChangedEventArgs args)
		{
		}

		[Token(Token = "0x600097A")]
		[Address(RVA = "0xB30674", Offset = "0xB30674", VA = "0xB30674")]
		private void JoystickDisconnected(ControllerStatusChangedEventArgs args)
		{
		}

		[Token(Token = "0x600097B")]
		[Address(RVA = "0xB306FC", Offset = "0xB306FC", VA = "0xB306FC")]
		private void OnConflictFound(InputMapper.ConflictFoundEventData data)
		{
		}

		[Token(Token = "0x600097C")]
		[Address(RVA = "0xB30704", Offset = "0xB30704", VA = "0xB30704")]
		private void OnStopped(InputMapper.StoppedEventData data)
		{
		}

		[Token(Token = "0x600097D")]
		[Address(RVA = "0xB26958", Offset = "0xB26958", VA = "0xB26958")]
		public void IdentifyAllJoysticks()
		{
		}

		[Token(Token = "0x600097E")]
		[Address(RVA = "0xB3070C", Offset = "0xB3070C", VA = "0xB3070C")]
		protected void CheckRecompile()
		{
		}

		[Token(Token = "0x600097F")]
		[Address(RVA = "0xB30710", Offset = "0xB30710", VA = "0xB30710")]
		private void RecompileWindow(int windowId)
		{
		}

		[Token(Token = "0x6000980")]
		[Address(RVA = "0xB30714", Offset = "0xB30714", VA = "0xB30714")]
		public ControlRemappingDemo1()
		{
		}
	}
	[Token(Token = "0x20000BF")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x6EFC1C", Offset = "0x6EFC1C")]
	public class CustomControllersTiltDemo : MonoBehaviour
	{
		[Token(Token = "0x4000579")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform target;

		[Token(Token = "0x400057A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float speed;

		[Token(Token = "0x400057B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private CustomController controller;

		[Token(Token = "0x400057C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Player player;

		[Token(Token = "0x60009CE")]
		[Address(RVA = "0xB38160", Offset = "0xB38160", VA = "0xB38160")]
		private void Awake()
		{
		}

		[Token(Token = "0x60009CF")]
		[Address(RVA = "0xB3829C", Offset = "0xB3829C", VA = "0xB3829C")]
		private void Update()
		{
		}

		[Token(Token = "0x60009D0")]
		[Address(RVA = "0xB38404", Offset = "0xB38404", VA = "0xB38404")]
		private void OnInputUpdate()
		{
		}

		[Token(Token = "0x60009D1")]
		[Address(RVA = "0xB3847C", Offset = "0xB3847C", VA = "0xB3847C")]
		public CustomControllersTiltDemo()
		{
		}
	}
	[Token(Token = "0x20000C0")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x6EFC54", Offset = "0x6EFC54")]
	public class CustomControllerDemo : MonoBehaviour
	{
		[Token(Token = "0x400057D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int playerId;

		[Token(Token = "0x400057E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string controllerTag;

		[Token(Token = "0x400057F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool useUpdateCallbacks;

		[Token(Token = "0x4000580")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int buttonCount;

		[Token(Token = "0x4000581")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int axisCount;

		[Token(Token = "0x4000582")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float[] axisValues;

		[Token(Token = "0x4000583")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool[] buttonValues;

		[Token(Token = "0x4000584")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private TouchJoystickExample[] joysticks;

		[Token(Token = "0x4000585")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private TouchButtonExample[] buttons;

		[Token(Token = "0x4000586")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private CustomController controller;

		[NonSerialized]
		[Token(Token = "0x4000587")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool initialized;

		[Token(Token = "0x60009D2")]
		[Address(RVA = "0xB3752C", Offset = "0xB3752C", VA = "0xB3752C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60009D3")]
		[Address(RVA = "0xB37578", Offset = "0xB37578", VA = "0xB37578")]
		private void Initialize()
		{
		}

		[Token(Token = "0x60009D4")]
		[Address(RVA = "0xB3791C", Offset = "0xB3791C", VA = "0xB3791C")]
		private void Update()
		{
		}

		[Token(Token = "0x60009D5")]
		[Address(RVA = "0xB379E4", Offset = "0xB379E4", VA = "0xB379E4")]
		private void OnInputSourceUpdate()
		{
		}

		[Token(Token = "0x60009D6")]
		[Address(RVA = "0xB37A2C", Offset = "0xB37A2C", VA = "0xB37A2C")]
		private void GetSourceAxisValues()
		{
		}

		[Token(Token = "0x60009D7")]
		[Address(RVA = "0xB37ABC", Offset = "0xB37ABC", VA = "0xB37ABC")]
		private void GetSourceButtonValues()
		{
		}

		[Token(Token = "0x60009D8")]
		[Address(RVA = "0xB37B34", Offset = "0xB37B34", VA = "0xB37B34")]
		private void SetControllerAxisValues()
		{
		}

		[Token(Token = "0x60009D9")]
		[Address(RVA = "0xB37BA8", Offset = "0xB37BA8", VA = "0xB37BA8")]
		private void SetControllerButtonValues()
		{
		}

		[Token(Token = "0x60009DA")]
		[Address(RVA = "0xB37C1C", Offset = "0xB37C1C", VA = "0xB37C1C")]
		private float GetAxisValueCallback(int index)
		{
			return default(float);
		}

		[Token(Token = "0x60009DB")]
		[Address(RVA = "0xB37C60", Offset = "0xB37C60", VA = "0xB37C60")]
		private bool GetButtonValueCallback(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x60009DC")]
		[Address(RVA = "0xB37CB0", Offset = "0xB37CB0", VA = "0xB37CB0")]
		public CustomControllerDemo()
		{
		}
	}
	[Token(Token = "0x20000C1")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x6EFC8C", Offset = "0x6EFC8C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x6EFC8C", Offset = "0x6EFC8C")]
	public class CustomControllerDemo_Player : MonoBehaviour
	{
		[Token(Token = "0x4000588")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int playerId;

		[Token(Token = "0x4000589")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float speed;

		[Token(Token = "0x400058A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float bulletSpeed;

		[Token(Token = "0x400058B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject bulletPrefab;

		[Token(Token = "0x400058C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Player _player;

		[Token(Token = "0x400058D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private CharacterController cc;

		[Token(Token = "0x170003FC")]
		private Player player
		{
			[Token(Token = "0x60009DD")]
			[Address(RVA = "0xB37CB8", Offset = "0xB37CB8", VA = "0xB37CB8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60009DE")]
		[Address(RVA = "0xB37D3C", Offset = "0xB37D3C", VA = "0xB37D3C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60009DF")]
		[Address(RVA = "0xB37D90", Offset = "0xB37D90", VA = "0xB37D90")]
		private void Update()
		{
		}

		[Token(Token = "0x60009E0")]
		[Address(RVA = "0xB3814C", Offset = "0xB3814C", VA = "0xB3814C")]
		public CustomControllerDemo_Player()
		{
		}
	}
	[Token(Token = "0x20000C2")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x6EFD10", Offset = "0x6EFD10")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x6EFD10", Offset = "0x6EFD10")]
	public class TouchButtonExample : MonoBehaviour, IPointerDownHandler, IEventSystemHandler, IPointerUpHandler
	{
		[Token(Token = "0x400058E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool allowMouseControl;

		[Token(Token = "0x400058F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F5640", Offset = "0x6F5640")]
		private bool <isPressed>k__BackingField;

		[Token(Token = "0x170003FD")]
		public bool isPressed
		{
			[Token(Token = "0x60009E1")]
			[Address(RVA = "0xAF100C", Offset = "0xAF100C", VA = "0xAF100C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FA038", Offset = "0x6FA038")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60009E2")]
			[Address(RVA = "0xAF1014", Offset = "0xAF1014", VA = "0xAF1014")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FA048", Offset = "0x6FA048")]
			private set
			{
			}
		}

		[Token(Token = "0x60009E3")]
		[Address(RVA = "0xAF1020", Offset = "0xAF1020", VA = "0xAF1020")]
		private void Awake()
		{
		}

		[Token(Token = "0x60009E4")]
		[Address(RVA = "0xAF1050", Offset = "0xAF1050", VA = "0xAF1050")]
		private void Restart()
		{
		}

		[Token(Token = "0x60009E5")]
		[Address(RVA = "0xAF1058", Offset = "0xAF1058", VA = "0xAF1058", Slot = "4")]
		private void UnityEngine.EventSystems.IPointerDownHandler.OnPointerDown(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60009E6")]
		[Address(RVA = "0xAF10A8", Offset = "0xAF10A8", VA = "0xAF10A8", Slot = "5")]
		private void UnityEngine.EventSystems.IPointerUpHandler.OnPointerUp(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60009E7")]
		[Address(RVA = "0xAF1088", Offset = "0xAF1088", VA = "0xAF1088")]
		private static bool IsMousePointerId(int id)
		{
			return default(bool);
		}

		[Token(Token = "0x60009E8")]
		[Address(RVA = "0xAF10D4", Offset = "0xAF10D4", VA = "0xAF10D4")]
		public TouchButtonExample()
		{
		}
	}
	[Token(Token = "0x20000C3")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x6EFD94", Offset = "0x6EFD94")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x6EFD94", Offset = "0x6EFD94")]
	public class TouchJoystickExample : MonoBehaviour, IPointerDownHandler, IEventSystemHandler, IPointerUpHandler, IDragHandler
	{
		[Token(Token = "0x4000590")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool allowMouseControl;

		[Token(Token = "0x4000591")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int radius;

		[Token(Token = "0x4000592")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Vector2 origAnchoredPosition;

		[Token(Token = "0x4000593")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 origWorldPosition;

		[Token(Token = "0x4000594")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector2 origScreenResolution;

		[Token(Token = "0x4000595")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private ScreenOrientation origScreenOrientation;

		[NonSerialized]
		[Token(Token = "0x4000596")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool hasFinger;

		[NonSerialized]
		[Token(Token = "0x4000597")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private int lastFingerId;

		[Token(Token = "0x4000598")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F5650", Offset = "0x6F5650")]
		private Vector2 <position>k__BackingField;

		[Token(Token = "0x170003FE")]
		public Vector2 position
		{
			[Token(Token = "0x60009E9")]
			[Address(RVA = "0xAF10E4", Offset = "0xAF10E4", VA = "0xAF10E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FA058", Offset = "0x6FA058")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x60009EA")]
			[Address(RVA = "0xAF10EC", Offset = "0xAF10EC", VA = "0xAF10EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FA068", Offset = "0x6FA068")]
			private set
			{
			}
		}

		[Token(Token = "0x60009EB")]
		[Address(RVA = "0xAF10F4", Offset = "0xAF10F4", VA = "0xAF10F4")]
		private void Start()
		{
		}

		[Token(Token = "0x60009EC")]
		[Address(RVA = "0xAF11E8", Offset = "0xAF11E8", VA = "0xAF11E8")]
		private void Update()
		{
		}

		[Token(Token = "0x60009ED")]
		[Address(RVA = "0xAF1260", Offset = "0xAF1260", VA = "0xAF1260")]
		private void Restart()
		{
		}

		[Token(Token = "0x60009EE")]
		[Address(RVA = "0xAF1128", Offset = "0xAF1128", VA = "0xAF1128")]
		private void StoreOrigValues()
		{
		}

		[Token(Token = "0x60009EF")]
		[Address(RVA = "0xAF12E4", Offset = "0xAF12E4", VA = "0xAF12E4")]
		private void UpdateValue(Vector3 value)
		{
		}

		[Token(Token = "0x60009F0")]
		[Address(RVA = "0xAF1310", Offset = "0xAF1310", VA = "0xAF1310", Slot = "4")]
		private void UnityEngine.EventSystems.IPointerDownHandler.OnPointerDown(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60009F1")]
		[Address(RVA = "0xAF1384", Offset = "0xAF1384", VA = "0xAF1384", Slot = "5")]
		private void UnityEngine.EventSystems.IPointerUpHandler.OnPointerUp(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60009F2")]
		[Address(RVA = "0xAF13BC", Offset = "0xAF13BC", VA = "0xAF13BC", Slot = "6")]
		private void UnityEngine.EventSystems.IDragHandler.OnDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60009F3")]
		[Address(RVA = "0xAF1364", Offset = "0xAF1364", VA = "0xAF1364")]
		private static bool IsMousePointerId(int id)
		{
			return default(bool);
		}

		[Token(Token = "0x60009F4")]
		[Address(RVA = "0xAF149C", Offset = "0xAF149C", VA = "0xAF149C")]
		public TouchJoystickExample()
		{
		}
	}
	[Token(Token = "0x20000C4")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x6EFE18", Offset = "0x6EFE18")]
	public class DualShock4SpecialFeaturesExample : MonoBehaviour
	{
		[Token(Token = "0x20000C5")]
		private class Touch
		{
			[Token(Token = "0x40005A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject go;

			[Token(Token = "0x40005A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int touchId;

			[Token(Token = "0x6000A01")]
			[Address(RVA = "0x923B2C", Offset = "0x923B2C", VA = "0x923B2C")]
			public Touch()
			{
			}
		}

		[Token(Token = "0x20000C6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EFE50", Offset = "0x6EFE50")]
		private sealed class <>c__DisplayClass20_0
		{
			[Token(Token = "0x40005A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int touchId;

			[Token(Token = "0x6000A02")]
			[Address(RVA = "0x923B00", Offset = "0x923B00", VA = "0x923B00")]
			public <>c__DisplayClass20_0()
			{
			}

			[Token(Token = "0x6000A03")]
			[Address(RVA = "0x923B08", Offset = "0x923B08", VA = "0x923B08")]
			internal bool <HandleTouchpad>b__0(Touch x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000599")]
		private const int maxTouches = 2;

		[Token(Token = "0x400059A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int playerId;

		[Token(Token = "0x400059B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform touchpadTransform;

		[Token(Token = "0x400059C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject lightObject;

		[Token(Token = "0x400059D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform accelerometerTransform;

		[Token(Token = "0x400059E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<Touch> touches;

		[Token(Token = "0x400059F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Queue<Touch> unusedTouches;

		[Token(Token = "0x40005A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool isFlashing;

		[Token(Token = "0x40005A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private GUIStyle textStyle;

		[Token(Token = "0x170003FF")]
		private Player player
		{
			[Token(Token = "0x60009F5")]
			[Address(RVA = "0xE77630", Offset = "0xE77630", VA = "0xE77630")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60009F6")]
		[Address(RVA = "0xE776A4", Offset = "0xE776A4", VA = "0xE776A4")]
		private void Awake()
		{
		}

		[Token(Token = "0x60009F7")]
		[Address(RVA = "0xE778B8", Offset = "0xE778B8", VA = "0xE778B8")]
		private void Update()
		{
		}

		[Token(Token = "0x60009F8")]
		[Address(RVA = "0xE788A8", Offset = "0xE788A8", VA = "0xE788A8")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x60009F9")]
		[Address(RVA = "0xE786D0", Offset = "0xE786D0", VA = "0xE786D0")]
		private void ResetOrientation()
		{
		}

		[Token(Token = "0x60009FA")]
		[Address(RVA = "0xE7853C", Offset = "0xE7853C", VA = "0xE7853C")]
		private void SetRandomLightColor()
		{
		}

		[Token(Token = "0x60009FB")]
		[Address(RVA = "0xE7881C", Offset = "0xE7881C", VA = "0xE7881C")]
		private void StartLightFlash()
		{
		}

		[Token(Token = "0x60009FC")]
		[Address(RVA = "0xE78798", Offset = "0xE78798", VA = "0xE78798")]
		private void StopLightFlash()
		{
		}

		[Token(Token = "0x60009FD")]
		[Address(RVA = "0xE77D0C", Offset = "0xE77D0C", VA = "0xE77D0C")]
		private IDualShock4Extension GetFirstDS4(Player player)
		{
			return null;
		}

		[Token(Token = "0x60009FE")]
		[Address(RVA = "0xE776A8", Offset = "0xE776A8", VA = "0xE776A8")]
		private void InitializeTouchObjects()
		{
		}

		[Token(Token = "0x60009FF")]
		[Address(RVA = "0xE78028", Offset = "0xE78028", VA = "0xE78028")]
		private void HandleTouchpad(IDualShock4Extension ds4)
		{
		}

		[Token(Token = "0x6000A00")]
		[Address(RVA = "0xE79134", Offset = "0xE79134", VA = "0xE79134")]
		public DualShock4SpecialFeaturesExample()
		{
		}
	}
	[Token(Token = "0x20000C7")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x6EFE60", Offset = "0x6EFE60")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x6EFE60", Offset = "0x6EFE60")]
	public class EightPlayersExample_Player : MonoBehaviour
	{
		[Token(Token = "0x40005A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int playerId;

		[Token(Token = "0x40005A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float moveSpeed;

		[Token(Token = "0x40005A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float bulletSpeed;

		[Token(Token = "0x40005A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject bulletPrefab;

		[Token(Token = "0x40005A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Player player;

		[Token(Token = "0x40005AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private CharacterController cc;

		[Token(Token = "0x40005AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector3 moveVector;

		[Token(Token = "0x40005AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private bool fire;

		[NonSerialized]
		[Token(Token = "0x40005AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
		private bool initialized;

		[Token(Token = "0x6000A04")]
		[Address(RVA = "0xE79144", Offset = "0xE79144", VA = "0xE79144")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000A05")]
		[Address(RVA = "0xE79198", Offset = "0xE79198", VA = "0xE79198")]
		private void Initialize()
		{
		}

		[Token(Token = "0x6000A06")]
		[Address(RVA = "0xE7921C", Offset = "0xE7921C", VA = "0xE7921C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000A07")]
		[Address(RVA = "0xE792F4", Offset = "0xE792F4", VA = "0xE792F4")]
		private void GetInput()
		{
		}

		[Token(Token = "0x6000A08")]
		[Address(RVA = "0xE793B0", Offset = "0xE793B0", VA = "0xE793B0")]
		private void ProcessInput()
		{
		}

		[Token(Token = "0x6000A09")]
		[Address(RVA = "0xE795C0", Offset = "0xE795C0", VA = "0xE795C0")]
		public EightPlayersExample_Player()
		{
		}
	}
	[Token(Token = "0x20000C8")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x6EFEE4", Offset = "0x6EFEE4")]
	public class FallbackJoystickIdentificationDemo : MonoBehaviour
	{
		[Token(Token = "0x40005AE")]
		private const float windowWidth = 250f;

		[Token(Token = "0x40005AF")]
		private const float windowHeight = 250f;

		[Token(Token = "0x40005B0")]
		private const float inputDelay = 1f;

		[Token(Token = "0x40005B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool identifyRequired;

		[Token(Token = "0x40005B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Queue<Joystick> joysticksToIdentify;

		[Token(Token = "0x40005B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float nextInputAllowedTime;

		[Token(Token = "0x40005B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private GUIStyle style;

		[Token(Token = "0x6000A0A")]
		[Address(RVA = "0xE7CEEC", Offset = "0xE7CEEC", VA = "0xE7CEEC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000A0B")]
		[Address(RVA = "0xE7D150", Offset = "0xE7D150", VA = "0xE7D150")]
		private void JoystickConnected(ControllerStatusChangedEventArgs args)
		{
		}

		[Token(Token = "0x6000A0C")]
		[Address(RVA = "0xE7D154", Offset = "0xE7D154", VA = "0xE7D154")]
		private void JoystickDisconnected(ControllerStatusChangedEventArgs args)
		{
		}

		[Token(Token = "0x6000A0D")]
		[Address(RVA = "0xE7D034", Offset = "0xE7D034", VA = "0xE7D034")]
		public void IdentifyAllJoysticks()
		{
		}

		[Token(Token = "0x6000A0E")]
		[Address(RVA = "0xE7D164", Offset = "0xE7D164", VA = "0xE7D164")]
		private void SetInputDelay()
		{
		}

		[Token(Token = "0x6000A0F")]
		[Address(RVA = "0xE7D194", Offset = "0xE7D194", VA = "0xE7D194")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6000A10")]
		[Address(RVA = "0xE7D4A0", Offset = "0xE7D4A0", VA = "0xE7D4A0")]
		private void DrawDialogWindow(int windowId)
		{
		}

		[Token(Token = "0x6000A11")]
		[Address(RVA = "0xE7D158", Offset = "0xE7D158", VA = "0xE7D158")]
		private void Reset()
		{
		}

		[Token(Token = "0x6000A12")]
		[Address(RVA = "0xE7D83C", Offset = "0xE7D83C", VA = "0xE7D83C")]
		public FallbackJoystickIdentificationDemo()
		{
		}
	}
	[Token(Token = "0x20000C9")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x6EFF1C", Offset = "0x6EFF1C")]
	public class PlayerMouseSpriteExample : MonoBehaviour
	{
		[Token(Token = "0x40005B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F5660", Offset = "0x6F5660")]
		public int playerId;

		[Token(Token = "0x40005B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F5698", Offset = "0x6F5698")]
		public string horizontalAction;

		[Token(Token = "0x40005B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F56D0", Offset = "0x6F56D0")]
		public string verticalAction;

		[Token(Token = "0x40005B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F5708", Offset = "0x6F5708")]
		public string wheelAction;

		[Token(Token = "0x40005B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F5740", Offset = "0x6F5740")]
		public string leftButtonAction;

		[Token(Token = "0x40005BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F5778", Offset = "0x6F5778")]
		public string rightButtonAction;

		[Token(Token = "0x40005BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F57B0", Offset = "0x6F57B0")]
		public string middleButtonAction;

		[Token(Token = "0x40005BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F57E8", Offset = "0x6F57E8")]
		public float distanceFromCamera;

		[Token(Token = "0x40005BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F5820", Offset = "0x6F5820")]
		public float spriteScale;

		[Token(Token = "0x40005BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F5858", Offset = "0x6F5858")]
		public GameObject pointerPrefab;

		[Token(Token = "0x40005BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F5890", Offset = "0x6F5890")]
		public GameObject clickEffectPrefab;

		[Token(Token = "0x40005C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F58C8", Offset = "0x6F58C8")]
		public bool hideHardwarePointer;

		[NonSerialized]
		[Token(Token = "0x40005C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private GameObject pointer;

		[NonSerialized]
		[Token(Token = "0x40005C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private PlayerMouse mouse;

		[Token(Token = "0x6000A13")]
		[Address(RVA = "0xE088E8", Offset = "0xE088E8", VA = "0xE088E8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000A14")]
		[Address(RVA = "0xE08C20", Offset = "0xE08C20", VA = "0xE08C20")]
		private void Update()
		{
		}

		[Token(Token = "0x6000A15")]
		[Address(RVA = "0xE08FE0", Offset = "0xE08FE0", VA = "0xE08FE0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000A16")]
		[Address(RVA = "0xE08E50", Offset = "0xE08E50", VA = "0xE08E50")]
		private void CreateClickEffect(Color color)
		{
		}

		[Token(Token = "0x6000A17")]
		[Address(RVA = "0xE08B98", Offset = "0xE08B98", VA = "0xE08B98")]
		private void OnScreenPositionChanged(Vector2 position)
		{
		}

		[Token(Token = "0x6000A18")]
		[Address(RVA = "0xE0910C", Offset = "0xE0910C", VA = "0xE0910C")]
		public PlayerMouseSpriteExample()
		{
		}
	}
	[Token(Token = "0x20000CA")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x6EFF54", Offset = "0x6EFF54")]
	public sealed class PlayerPointerEventHandlerExample : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler, IPointerUpHandler, IPointerDownHandler, IPointerClickHandler, IScrollHandler, IBeginDragHandler, IDragHandler, IEndDragHandler
	{
		[Token(Token = "0x40005C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Text text;

		[Token(Token = "0x40005C4")]
		private const int logLength = 10;

		[Token(Token = "0x40005C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<string> log;

		[Token(Token = "0x6000A19")]
		[Address(RVA = "0xE09544", Offset = "0xE09544", VA = "0xE09544")]
		private void Log(string o)
		{
		}

		[Token(Token = "0x6000A1A")]
		[Address(RVA = "0xE095F8", Offset = "0xE095F8", VA = "0xE095F8")]
		private void Update()
		{
		}

		[Token(Token = "0x6000A1B")]
		[Address(RVA = "0xE097BC", Offset = "0xE097BC", VA = "0xE097BC", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000A1C")]
		[Address(RVA = "0xE09AC4", Offset = "0xE09AC4", VA = "0xE09AC4", Slot = "5")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000A1D")]
		[Address(RVA = "0xE09D1C", Offset = "0xE09D1C", VA = "0xE09D1C", Slot = "6")]
		public void OnPointerUp(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000A1E")]
		[Address(RVA = "0xE09FF4", Offset = "0xE09FF4", VA = "0xE09FF4", Slot = "7")]
		public void OnPointerDown(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000A1F")]
		[Address(RVA = "0xE0A2CC", Offset = "0xE0A2CC", VA = "0xE0A2CC", Slot = "8")]
		public void OnPointerClick(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000A20")]
		[Address(RVA = "0xE0A5A4", Offset = "0xE0A5A4", VA = "0xE0A5A4", Slot = "9")]
		public void OnScroll(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000A21")]
		[Address(RVA = "0xE0A7FC", Offset = "0xE0A7FC", VA = "0xE0A7FC", Slot = "10")]
		public void OnBeginDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000A22")]
		[Address(RVA = "0xE0AAD4", Offset = "0xE0AAD4", VA = "0xE0AAD4", Slot = "11")]
		public void OnDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000A23")]
		[Address(RVA = "0xE0ADAC", Offset = "0xE0ADAC", VA = "0xE0ADAC", Slot = "12")]
		public void OnEndDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000A24")]
		[Address(RVA = "0xE09A14", Offset = "0xE09A14", VA = "0xE09A14")]
		private static string GetSourceName(PlayerPointerEventData playerEventData)
		{
			return null;
		}

		[Token(Token = "0x6000A25")]
		[Address(RVA = "0xE0B084", Offset = "0xE0B084", VA = "0xE0B084")]
		public PlayerPointerEventHandlerExample()
		{
		}
	}
	[Token(Token = "0x20000CB")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x6EFF8C", Offset = "0x6EFF8C")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x6EFF8C", Offset = "0x6EFF8C")]
	public sealed class UIPointer : UIBehaviour
	{
		[Token(Token = "0x40005C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F5900", Offset = "0x6F5900")]
		[SerializeField]
		private bool _hideHardwarePointer;

		[Token(Token = "0x40005C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F594C", Offset = "0x6F594C")]
		[SerializeField]
		private bool _autoSort;

		[Token(Token = "0x40005C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Canvas _canvas;

		[Token(Token = "0x17000400")]
		public bool autoSort
		{
			[Token(Token = "0x6000A26")]
			[Address(RVA = "0xAF4888", Offset = "0xAF4888", VA = "0xAF4888")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000A27")]
			[Address(RVA = "0xAF4890", Offset = "0xAF4890", VA = "0xAF4890")]
			set
			{
			}
		}

		[Token(Token = "0x6000A28")]
		[Address(RVA = "0xAF48DC", Offset = "0xAF48DC", VA = "0xAF48DC", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6000A29")]
		[Address(RVA = "0xAF4A48", Offset = "0xAF4A48", VA = "0xAF4A48")]
		private void Update()
		{
		}

		[Token(Token = "0x6000A2A")]
		[Address(RVA = "0xAF4AD8", Offset = "0xAF4AD8", VA = "0xAF4AD8", Slot = "12")]
		protected override void OnTransformParentChanged()
		{
		}

		[Token(Token = "0x6000A2B")]
		[Address(RVA = "0xAF4B00", Offset = "0xAF4B00", VA = "0xAF4B00", Slot = "14")]
		protected override void OnCanvasGroupChanged()
		{
		}

		[Token(Token = "0x6000A2C")]
		[Address(RVA = "0xAF4B28", Offset = "0xAF4B28", VA = "0xAF4B28")]
		public void OnScreenPositionChanged(Vector2 screenPosition)
		{
		}

		[Token(Token = "0x6000A2D")]
		[Address(RVA = "0xAF49D8", Offset = "0xAF49D8", VA = "0xAF49D8")]
		private void GetDependencies()
		{
		}

		[Token(Token = "0x6000A2E")]
		[Address(RVA = "0xAF4CD0", Offset = "0xAF4CD0", VA = "0xAF4CD0")]
		public UIPointer()
		{
		}
	}
	[Token(Token = "0x20000CC")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x6F0010", Offset = "0x6F0010")]
	public class PressAnyButtonToJoinExample_Assigner : MonoBehaviour
	{
		[Token(Token = "0x6000A2F")]
		[Address(RVA = "0xE0B0FC", Offset = "0xE0B0FC", VA = "0xE0B0FC")]
		private void Update()
		{
		}

		[Token(Token = "0x6000A30")]
		[Address(RVA = "0xE0B1BC", Offset = "0xE0B1BC", VA = "0xE0B1BC")]
		private void AssignJoysticksToPlayers()
		{
		}

		[Token(Token = "0x6000A31")]
		[Address(RVA = "0xE0B43C", Offset = "0xE0B43C", VA = "0xE0B43C")]
		private Player FindPlayerWithoutJoystick()
		{
			return null;
		}

		[Token(Token = "0x6000A32")]
		[Address(RVA = "0xE0B64C", Offset = "0xE0B64C", VA = "0xE0B64C")]
		private bool DoAllPlayersHaveJoysticks()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A33")]
		[Address(RVA = "0xE0B668", Offset = "0xE0B668", VA = "0xE0B668")]
		public PressAnyButtonToJoinExample_Assigner()
		{
		}
	}
	[Token(Token = "0x20000CD")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x6F0048", Offset = "0x6F0048")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x6F0048", Offset = "0x6F0048")]
	public class PressAnyButtonToJoinExample_GamePlayer : MonoBehaviour
	{
		[Token(Token = "0x40005C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int playerId;

		[Token(Token = "0x40005CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float moveSpeed;

		[Token(Token = "0x40005CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float bulletSpeed;

		[Token(Token = "0x40005CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject bulletPrefab;

		[Token(Token = "0x40005CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private CharacterController cc;

		[Token(Token = "0x40005CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 moveVector;

		[Token(Token = "0x40005CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private bool fire;

		[Token(Token = "0x17000401")]
		private Player player
		{
			[Token(Token = "0x6000A34")]
			[Address(RVA = "0xE0B670", Offset = "0xE0B670", VA = "0xE0B670")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A35")]
		[Address(RVA = "0xE0B75C", Offset = "0xE0B75C", VA = "0xE0B75C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000A36")]
		[Address(RVA = "0xE0B7B0", Offset = "0xE0B7B0", VA = "0xE0B7B0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000A37")]
		[Address(RVA = "0xE0B884", Offset = "0xE0B884", VA = "0xE0B884")]
		private void GetInput()
		{
		}

		[Token(Token = "0x6000A38")]
		[Address(RVA = "0xE0B94C", Offset = "0xE0B94C", VA = "0xE0B94C")]
		private void ProcessInput()
		{
		}

		[Token(Token = "0x6000A39")]
		[Address(RVA = "0xE0BB5C", Offset = "0xE0BB5C", VA = "0xE0BB5C")]
		public PressAnyButtonToJoinExample_GamePlayer()
		{
		}
	}
	[Token(Token = "0x20000CE")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x6F00CC", Offset = "0x6F00CC")]
	public class PressStartToJoinExample_Assigner : MonoBehaviour
	{
		[Token(Token = "0x20000CF")]
		private class PlayerMap
		{
			[Token(Token = "0x40005D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int rewiredPlayerId;

			[Token(Token = "0x40005D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int gamePlayerId;

			[Token(Token = "0x6000A40")]
			[Address(RVA = "0x92B3F0", Offset = "0x92B3F0", VA = "0x92B3F0")]
			public PlayerMap(int rewiredPlayerId, int gamePlayerId)
			{
			}
		}

		[Token(Token = "0x40005D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static PressStartToJoinExample_Assigner instance;

		[Token(Token = "0x40005D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int maxPlayers;

		[Token(Token = "0x40005D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<PlayerMap> playerMap;

		[Token(Token = "0x40005D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int gamePlayerIdCounter;

		[Token(Token = "0x6000A3A")]
		[Address(RVA = "0xE0BB70", Offset = "0xE0BB70", VA = "0xE0BB70")]
		public static Player GetRewiredPlayer(int gamePlayerId)
		{
			return null;
		}

		[Token(Token = "0x6000A3B")]
		[Address(RVA = "0xE0BDE0", Offset = "0xE0BDE0", VA = "0xE0BDE0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000A3C")]
		[Address(RVA = "0xE0BE70", Offset = "0xE0BE70", VA = "0xE0BE70")]
		private void Update()
		{
		}

		[Token(Token = "0x6000A3D")]
		[Address(RVA = "0xE0BF64", Offset = "0xE0BF64", VA = "0xE0BF64")]
		private void AssignNextPlayer(int rewiredPlayerId)
		{
		}

		[Token(Token = "0x6000A3E")]
		[Address(RVA = "0xE0C1D4", Offset = "0xE0C1D4", VA = "0xE0C1D4")]
		private int GetNextGamePlayerId()
		{
			return default(int);
		}

		[Token(Token = "0x6000A3F")]
		[Address(RVA = "0xE0C1E8", Offset = "0xE0C1E8", VA = "0xE0C1E8")]
		public PressStartToJoinExample_Assigner()
		{
		}
	}
	[Token(Token = "0x20000D0")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x6F0104", Offset = "0x6F0104")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x6F0104", Offset = "0x6F0104")]
	public class PressStartToJoinExample_GamePlayer : MonoBehaviour
	{
		[Token(Token = "0x40005D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int gamePlayerId;

		[Token(Token = "0x40005D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float moveSpeed;

		[Token(Token = "0x40005D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float bulletSpeed;

		[Token(Token = "0x40005D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject bulletPrefab;

		[Token(Token = "0x40005DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private CharacterController cc;

		[Token(Token = "0x40005DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 moveVector;

		[Token(Token = "0x40005DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private bool fire;

		[Token(Token = "0x17000402")]
		private Player player
		{
			[Token(Token = "0x6000A41")]
			[Address(RVA = "0xE0C1F8", Offset = "0xE0C1F8", VA = "0xE0C1F8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A42")]
		[Address(RVA = "0xE0C200", Offset = "0xE0C200", VA = "0xE0C200")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000A43")]
		[Address(RVA = "0xE0C254", Offset = "0xE0C254", VA = "0xE0C254")]
		private void Update()
		{
		}

		[Token(Token = "0x6000A44")]
		[Address(RVA = "0xE0C328", Offset = "0xE0C328", VA = "0xE0C328")]
		private void GetInput()
		{
		}

		[Token(Token = "0x6000A45")]
		[Address(RVA = "0xE0C3F0", Offset = "0xE0C3F0", VA = "0xE0C3F0")]
		private void ProcessInput()
		{
		}

		[Token(Token = "0x6000A46")]
		[Address(RVA = "0xE0C600", Offset = "0xE0C600", VA = "0xE0C600")]
		public PressStartToJoinExample_GamePlayer()
		{
		}
	}
	[Token(Token = "0x20000D1")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x6F0188", Offset = "0x6F0188")]
	public class Bullet : MonoBehaviour
	{
		[Token(Token = "0x40005DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float lifeTime;

		[Token(Token = "0x40005DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private bool die;

		[Token(Token = "0x40005DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float deathTime;

		[Token(Token = "0x6000A47")]
		[Address(RVA = "0xFB3084", Offset = "0xFB3084", VA = "0xFB3084")]
		private void Start()
		{
		}

		[Token(Token = "0x6000A48")]
		[Address(RVA = "0xFB30C8", Offset = "0xFB30C8", VA = "0xFB30C8")]
		private void Update()
		{
		}

		[Token(Token = "0x6000A49")]
		[Address(RVA = "0xFB3168", Offset = "0xFB3168", VA = "0xFB3168")]
		public Bullet()
		{
		}
	}
	[Token(Token = "0x20000D2")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x6F01C0", Offset = "0x6F01C0")]
	public class SimpleCombinedKeyboardMouseRemapping : MonoBehaviour
	{
		[Token(Token = "0x20000D3")]
		private class Row
		{
			[Token(Token = "0x40005ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public InputAction action;

			[Token(Token = "0x40005EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public AxisRange actionRange;

			[Token(Token = "0x40005EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Button button;

			[Token(Token = "0x40005F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Text text;

			[Token(Token = "0x6000A56")]
			[Address(RVA = "0x107BC94", Offset = "0x107BC94", VA = "0x107BC94")]
			public Row()
			{
			}
		}

		[Token(Token = "0x20000D4")]
		private struct TargetMapping
		{
			[Token(Token = "0x40005F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ControllerMap controllerMap;

			[Token(Token = "0x40005F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int actionElementMapId;
		}

		[Token(Token = "0x20000D5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F01F8", Offset = "0x6F01F8")]
		private sealed class <>c__DisplayClass17_0
		{
			[Token(Token = "0x40005F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int index;

			[Token(Token = "0x40005F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int actionElementMapId;

			[Token(Token = "0x40005F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public SimpleCombinedKeyboardMouseRemapping <>4__this;

			[Token(Token = "0x6000A57")]
			[Address(RVA = "0x92F44C", Offset = "0x92F44C", VA = "0x92F44C")]
			public <>c__DisplayClass17_0()
			{
			}

			[Token(Token = "0x6000A58")]
			[Address(RVA = "0x92F454", Offset = "0x92F454", VA = "0x92F454")]
			internal void <RedrawUI>b__0()
			{
			}
		}

		[Token(Token = "0x20000D6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F0208", Offset = "0x6F0208")]
		private sealed class <StartListeningDelayed>d__22 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40005F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40005F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40005F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SimpleCombinedKeyboardMouseRemapping <>4__this;

			[Token(Token = "0x40005F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int index;

			[Token(Token = "0x40005FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public ControllerMap keyboardMap;

			[Token(Token = "0x40005FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public int actionElementMapToReplaceId;

			[Token(Token = "0x40005FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public ControllerMap mouseMap;

			[Token(Token = "0x17000404")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000A5C")]
				[Address(RVA = "0x92F7D4", Offset = "0x92F7D4", VA = "0x92F7D4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000405")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000A5E")]
				[Address(RVA = "0x92F81C", Offset = "0x92F81C", VA = "0x92F81C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000A59")]
			[Address(RVA = "0x92F478", Offset = "0x92F478", VA = "0x92F478")]
			[DebuggerHidden]
			public <StartListeningDelayed>d__22(int <>1__state)
			{
			}

			[Token(Token = "0x6000A5A")]
			[Address(RVA = "0x92F4A4", Offset = "0x92F4A4", VA = "0x92F4A4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000A5B")]
			[Address(RVA = "0x92F4A8", Offset = "0x92F4A8", VA = "0x92F4A8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000A5D")]
			[Address(RVA = "0x92F7DC", Offset = "0x92F7DC", VA = "0x92F7DC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40005E0")]
		private const string category = "Default";

		[Token(Token = "0x40005E1")]
		private const string layout = "Default";

		[Token(Token = "0x40005E2")]
		private const string uiCategory = "UI";

		[Token(Token = "0x40005E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private InputMapper inputMapper_keyboard;

		[Token(Token = "0x40005E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private InputMapper inputMapper_mouse;

		[Token(Token = "0x40005E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject buttonPrefab;

		[Token(Token = "0x40005E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject textPrefab;

		[Token(Token = "0x40005E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public RectTransform fieldGroupTransform;

		[Token(Token = "0x40005E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public RectTransform actionGroupTransform;

		[Token(Token = "0x40005E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Text controllerNameUIText;

		[Token(Token = "0x40005EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Text statusUIText;

		[Token(Token = "0x40005EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private List<Row> rows;

		[Token(Token = "0x40005EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private TargetMapping _replaceTargetMapping;

		[Token(Token = "0x17000403")]
		private Player player
		{
			[Token(Token = "0x6000A4A")]
			[Address(RVA = "0x10AB0BC", Offset = "0x10AB0BC", VA = "0x10AB0BC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A4B")]
		[Address(RVA = "0x10AB12C", Offset = "0x10AB12C", VA = "0x10AB12C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000A4C")]
		[Address(RVA = "0x10ABD1C", Offset = "0x10ABD1C", VA = "0x10ABD1C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000A4D")]
		[Address(RVA = "0x10ABD78", Offset = "0x10ABD78", VA = "0x10ABD78")]
		private void RedrawUI()
		{
		}

		[Token(Token = "0x6000A4E")]
		[Address(RVA = "0x10AC31C", Offset = "0x10AC31C", VA = "0x10AC31C")]
		private void ClearUI()
		{
		}

		[Token(Token = "0x6000A4F")]
		[Address(RVA = "0x10AB404", Offset = "0x10AB404", VA = "0x10AB404")]
		private void InitializeUI()
		{
		}

		[Token(Token = "0x6000A50")]
		[Address(RVA = "0x10AC410", Offset = "0x10AC410", VA = "0x10AC410")]
		private void CreateUIRow(InputAction action, AxisRange actionRange, string label)
		{
		}

		[Token(Token = "0x6000A51")]
		[Address(RVA = "0x10AC608", Offset = "0x10AC608", VA = "0x10AC608")]
		private void OnInputFieldClicked(int index, int actionElementMapToReplaceId)
		{
		}

		[Token(Token = "0x6000A52")]
		[Address(RVA = "0x10AC76C", Offset = "0x10AC76C", VA = "0x10AC76C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6FA078", Offset = "0x6FA078")]
		private IEnumerator StartListeningDelayed(int index, ControllerMap keyboardMap, ControllerMap mouseMap, int actionElementMapToReplaceId)
		{
			return null;
		}

		[Token(Token = "0x6000A53")]
		[Address(RVA = "0x10AC808", Offset = "0x10AC808", VA = "0x10AC808")]
		private void OnInputMapped(InputMapper.InputMappedEventData data)
		{
		}

		[Token(Token = "0x6000A54")]
		[Address(RVA = "0x10AC880", Offset = "0x10AC880", VA = "0x10AC880")]
		private void OnStopped(InputMapper.StoppedEventData data)
		{
		}

		[Token(Token = "0x6000A55")]
		[Address(RVA = "0x10AC924", Offset = "0x10AC924", VA = "0x10AC924")]
		public SimpleCombinedKeyboardMouseRemapping()
		{
		}
	}
	[Token(Token = "0x20000D7")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x6F0218", Offset = "0x6F0218")]
	public class SimpleControlRemapping : MonoBehaviour
	{
		[Token(Token = "0x20000D8")]
		private class Row
		{
			[Token(Token = "0x400060A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public InputAction action;

			[Token(Token = "0x400060B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public AxisRange actionRange;

			[Token(Token = "0x400060C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Button button;

			[Token(Token = "0x400060D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Text text;

			[Token(Token = "0x6000A70")]
			[Address(RVA = "0x107BF90", Offset = "0x107BF90", VA = "0x107BF90")]
			public Row()
			{
			}
		}

		[Token(Token = "0x20000D9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F0250", Offset = "0x6F0250")]
		private sealed class <>c__DisplayClass21_0
		{
			[Token(Token = "0x400060E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int index;

			[Token(Token = "0x400060F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int actionElementMapId;

			[Token(Token = "0x4000610")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public SimpleControlRemapping <>4__this;

			[Token(Token = "0x6000A71")]
			[Address(RVA = "0x107BC9C", Offset = "0x107BC9C", VA = "0x107BC9C")]
			public <>c__DisplayClass21_0()
			{
			}

			[Token(Token = "0x6000A72")]
			[Address(RVA = "0x107BCA4", Offset = "0x107BCA4", VA = "0x107BCA4")]
			internal void <RedrawUI>b__0()
			{
			}
		}

		[Token(Token = "0x20000DA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F0260", Offset = "0x6F0260")]
		private sealed class <StartListeningDelayed>d__28 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000611")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000612")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000613")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SimpleControlRemapping <>4__this;

			[Token(Token = "0x4000614")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int index;

			[Token(Token = "0x4000615")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public int actionElementMapToReplaceId;

			[Token(Token = "0x17000409")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000A76")]
				[Address(RVA = "0x107BF40", Offset = "0x107BF40", VA = "0x107BF40", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700040A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000A78")]
				[Address(RVA = "0x107BF88", Offset = "0x107BF88", VA = "0x107BF88", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000A73")]
			[Address(RVA = "0x107BCC8", Offset = "0x107BCC8", VA = "0x107BCC8")]
			[DebuggerHidden]
			public <StartListeningDelayed>d__28(int <>1__state)
			{
			}

			[Token(Token = "0x6000A74")]
			[Address(RVA = "0x107BCF4", Offset = "0x107BCF4", VA = "0x107BCF4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000A75")]
			[Address(RVA = "0x107BCF8", Offset = "0x107BCF8", VA = "0x107BCF8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000A77")]
			[Address(RVA = "0x107BF48", Offset = "0x107BF48", VA = "0x107BF48", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40005FD")]
		private const string category = "Default";

		[Token(Token = "0x40005FE")]
		private const string layout = "Default";

		[Token(Token = "0x40005FF")]
		private const string uiCategory = "UI";

		[Token(Token = "0x4000600")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private InputMapper inputMapper;

		[Token(Token = "0x4000601")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject buttonPrefab;

		[Token(Token = "0x4000602")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject textPrefab;

		[Token(Token = "0x4000603")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public RectTransform fieldGroupTransform;

		[Token(Token = "0x4000604")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public RectTransform actionGroupTransform;

		[Token(Token = "0x4000605")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Text controllerNameUIText;

		[Token(Token = "0x4000606")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Text statusUIText;

		[Token(Token = "0x4000607")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private ControllerType selectedControllerType;

		[Token(Token = "0x4000608")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int selectedControllerId;

		[Token(Token = "0x4000609")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private List<Row> rows;

		[Token(Token = "0x17000406")]
		private Player player
		{
			[Token(Token = "0x6000A5F")]
			[Address(RVA = "0xAE2778", Offset = "0xAE2778", VA = "0xAE2778")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000407")]
		private ControllerMap controllerMap
		{
			[Token(Token = "0x6000A60")]
			[Address(RVA = "0xAE27E8", Offset = "0xAE27E8", VA = "0xAE27E8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000408")]
		private Controller controller
		{
			[Token(Token = "0x6000A61")]
			[Address(RVA = "0xAE28A8", Offset = "0xAE28A8", VA = "0xAE28A8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A62")]
		[Address(RVA = "0xAE28E0", Offset = "0xAE28E0", VA = "0xAE28E0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000A63")]
		[Address(RVA = "0xAE34A4", Offset = "0xAE34A4", VA = "0xAE34A4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000A64")]
		[Address(RVA = "0xAE35BC", Offset = "0xAE35BC", VA = "0xAE35BC")]
		private void RedrawUI()
		{
		}

		[Token(Token = "0x6000A65")]
		[Address(RVA = "0xAE3B18", Offset = "0xAE3B18", VA = "0xAE3B18")]
		private void ClearUI()
		{
		}

		[Token(Token = "0x6000A66")]
		[Address(RVA = "0xAE2B8C", Offset = "0xAE2B8C", VA = "0xAE2B8C")]
		private void InitializeUI()
		{
		}

		[Token(Token = "0x6000A67")]
		[Address(RVA = "0xAE3C50", Offset = "0xAE3C50", VA = "0xAE3C50")]
		private void CreateUIRow(InputAction action, AxisRange actionRange, string label)
		{
		}

		[Token(Token = "0x6000A68")]
		[Address(RVA = "0xAE3E48", Offset = "0xAE3E48", VA = "0xAE3E48")]
		private void SetSelectedController(ControllerType controllerType)
		{
		}

		[Token(Token = "0x6000A69")]
		[Address(RVA = "0xAE3FB8", Offset = "0xAE3FB8", VA = "0xAE3FB8")]
		public void OnControllerSelected(int controllerType)
		{
		}

		[Token(Token = "0x6000A6A")]
		[Address(RVA = "0xAE3FBC", Offset = "0xAE3FBC", VA = "0xAE3FBC")]
		private void OnInputFieldClicked(int index, int actionElementMapToReplaceId)
		{
		}

		[Token(Token = "0x6000A6B")]
		[Address(RVA = "0xAE405C", Offset = "0xAE405C", VA = "0xAE405C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6FA128", Offset = "0x6FA128")]
		private IEnumerator StartListeningDelayed(int index, int actionElementMapToReplaceId)
		{
			return null;
		}

		[Token(Token = "0x6000A6C")]
		[Address(RVA = "0xAE40DC", Offset = "0xAE40DC", VA = "0xAE40DC")]
		private void OnControllerChanged(ControllerStatusChangedEventArgs args)
		{
		}

		[Token(Token = "0x6000A6D")]
		[Address(RVA = "0xAE40E4", Offset = "0xAE40E4", VA = "0xAE40E4")]
		private void OnInputMapped(InputMapper.InputMappedEventData data)
		{
		}

		[Token(Token = "0x6000A6E")]
		[Address(RVA = "0xAE40E8", Offset = "0xAE40E8", VA = "0xAE40E8")]
		private void OnStopped(InputMapper.StoppedEventData data)
		{
		}

		[Token(Token = "0x6000A6F")]
		[Address(RVA = "0xAE418C", Offset = "0xAE418C", VA = "0xAE418C")]
		public SimpleControlRemapping()
		{
		}
	}
	[Token(Token = "0x20000DB")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x6F0270", Offset = "0x6F0270")]
	public class ControlMapperDemoMessage : MonoBehaviour
	{
		[Token(Token = "0x20000DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F02A8", Offset = "0x6F02A8")]
		private sealed class <SelectDefaultDeferred>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000618")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000619")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400061A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ControlMapperDemoMessage <>4__this;

			[Token(Token = "0x1700040B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000A83")]
				[Address(RVA = "0x92213C", Offset = "0x92213C", VA = "0x92213C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700040C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000A85")]
				[Address(RVA = "0x922184", Offset = "0x922184", VA = "0x922184", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000A80")]
			[Address(RVA = "0x9220B4", Offset = "0x9220B4", VA = "0x9220B4")]
			[DebuggerHidden]
			public <SelectDefaultDeferred>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x6000A81")]
			[Address(RVA = "0x9220E0", Offset = "0x9220E0", VA = "0x9220E0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000A82")]
			[Address(RVA = "0x9220E4", Offset = "0x9220E4", VA = "0x9220E4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000A84")]
			[Address(RVA = "0x922144", Offset = "0x922144", VA = "0x922144", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000616")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ControlMapper controlMapper;

		[Token(Token = "0x4000617")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Selectable defaultSelectable;

		[Token(Token = "0x6000A79")]
		[Address(RVA = "0xB2615C", Offset = "0xB2615C", VA = "0xB2615C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000A7A")]
		[Address(RVA = "0xB2628C", Offset = "0xB2628C", VA = "0xB2628C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000A7B")]
		[Address(RVA = "0xB263D0", Offset = "0xB263D0", VA = "0xB263D0")]
		private void OnControlMapperClosed()
		{
		}

		[Token(Token = "0x6000A7C")]
		[Address(RVA = "0xB26488", Offset = "0xB26488", VA = "0xB26488")]
		private void OnControlMapperOpened()
		{
		}

		[Token(Token = "0x6000A7D")]
		[Address(RVA = "0xB26290", Offset = "0xB26290", VA = "0xB26290")]
		private void SelectDefault()
		{
		}

		[Token(Token = "0x6000A7E")]
		[Address(RVA = "0xB2641C", Offset = "0xB2641C", VA = "0xB2641C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6FA1D8", Offset = "0x6FA1D8")]
		private IEnumerator SelectDefaultDeferred()
		{
			return null;
		}

		[Token(Token = "0x6000A7F")]
		[Address(RVA = "0xB264B0", Offset = "0xB264B0", VA = "0xB264B0")]
		public ControlMapperDemoMessage()
		{
		}
	}
}
namespace Rewired.Demos.GamepadTemplateUI
{
	[Token(Token = "0x20000DD")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x6F02B8", Offset = "0x6F02B8")]
	public class ControllerUIEffect : MonoBehaviour
	{
		[Token(Token = "0x400061B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Color _highlightColor;

		[Token(Token = "0x400061C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Image _image;

		[Token(Token = "0x400061D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Color _color;

		[Token(Token = "0x400061E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Color _origColor;

		[Token(Token = "0x400061F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool _isActive;

		[Token(Token = "0x4000620")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float _highlightAmount;

		[Token(Token = "0x6000A86")]
		[Address(RVA = "0xB31068", Offset = "0xB31068", VA = "0xB31068")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000A87")]
		[Address(RVA = "0xB310E4", Offset = "0xB310E4", VA = "0xB310E4")]
		public void Activate(float amount)
		{
		}

		[Token(Token = "0x6000A88")]
		[Address(RVA = "0xB311BC", Offset = "0xB311BC", VA = "0xB311BC")]
		public void Deactivate()
		{
		}

		[Token(Token = "0x6000A89")]
		[Address(RVA = "0xB3116C", Offset = "0xB3116C", VA = "0xB3116C")]
		private void RedrawImage()
		{
		}

		[Token(Token = "0x6000A8A")]
		[Address(RVA = "0xB311DC", Offset = "0xB311DC", VA = "0xB311DC")]
		public ControllerUIEffect()
		{
		}
	}
	[Token(Token = "0x20000DE")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x6F0318", Offset = "0x6F0318")]
	public class ControllerUIElement : MonoBehaviour
	{
		[Token(Token = "0x4000621")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Color _highlightColor;

		[Token(Token = "0x4000622")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ControllerUIEffect _positiveUIEffect;

		[Token(Token = "0x4000623")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private ControllerUIEffect _negativeUIEffect;

		[Token(Token = "0x4000624")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Text _label;

		[Token(Token = "0x4000625")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Text _positiveLabel;

		[Token(Token = "0x4000626")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Text _negativeLabel;

		[Token(Token = "0x4000627")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private ControllerUIElement[] _childElements;

		[Token(Token = "0x4000628")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Image _image;

		[Token(Token = "0x4000629")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Color _color;

		[Token(Token = "0x400062A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Color _origColor;

		[Token(Token = "0x400062B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private bool _isActive;

		[Token(Token = "0x400062C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private float _highlightAmount;

		[Token(Token = "0x1700040D")]
		private bool hasEffects
		{
			[Token(Token = "0x6000A8B")]
			[Address(RVA = "0xB31210", Offset = "0xB31210", VA = "0xB31210")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000A8C")]
		[Address(RVA = "0xB312C8", Offset = "0xB312C8", VA = "0xB312C8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000A8D")]
		[Address(RVA = "0xB31560", Offset = "0xB31560", VA = "0xB31560")]
		public void Activate(float amount)
		{
		}

		[Token(Token = "0x6000A8E")]
		[Address(RVA = "0xB317B4", Offset = "0xB317B4", VA = "0xB317B4")]
		public void Deactivate()
		{
		}

		[Token(Token = "0x6000A8F")]
		[Address(RVA = "0xB31944", Offset = "0xB31944", VA = "0xB31944")]
		public void SetLabel(string text, AxisRange labelType)
		{
		}

		[Token(Token = "0x6000A90")]
		[Address(RVA = "0xB31348", Offset = "0xB31348", VA = "0xB31348")]
		public void ClearLabels()
		{
		}

		[Token(Token = "0x6000A91")]
		[Address(RVA = "0xB31784", Offset = "0xB31784", VA = "0xB31784")]
		private void RedrawImage()
		{
		}

		[Token(Token = "0x6000A92")]
		[Address(RVA = "0xB31ACC", Offset = "0xB31ACC", VA = "0xB31ACC")]
		public ControllerUIElement()
		{
		}
	}
	[Token(Token = "0x20000DF")]
	public class GamepadTemplateUI : MonoBehaviour
	{
		[Token(Token = "0x20000E0")]
		private class Stick
		{
			[Token(Token = "0x400064C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private RectTransform _transform;

			[Token(Token = "0x400064D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private Vector2 _origPosition;

			[Token(Token = "0x400064E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int _xAxisElementId;

			[Token(Token = "0x400064F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			private int _yAxisElementId;

			[Token(Token = "0x1700040F")]
			public Vector2 position
			{
				[Token(Token = "0x6000AA1")]
				[Address(RVA = "0x924B34", Offset = "0x924B34", VA = "0x924B34")]
				get
				{
					return default(Vector2);
				}
				[Token(Token = "0x6000AA2")]
				[Address(RVA = "0x924BD4", Offset = "0x924BD4", VA = "0x924BD4")]
				set
				{
				}
			}

			[Token(Token = "0x6000AA3")]
			[Address(RVA = "0x924C84", Offset = "0x924C84", VA = "0x924C84")]
			public Stick(RectTransform transform, int xAxisElementId, int yAxisElementId)
			{
			}

			[Token(Token = "0x6000AA4")]
			[Address(RVA = "0x924D44", Offset = "0x924D44", VA = "0x924D44")]
			public void Reset()
			{
			}

			[Token(Token = "0x6000AA5")]
			[Address(RVA = "0x924DD8", Offset = "0x924DD8", VA = "0x924DD8")]
			public bool ContainsElement(int elementId)
			{
				return default(bool);
			}

			[Token(Token = "0x6000AA6")]
			[Address(RVA = "0x924E80", Offset = "0x924E80", VA = "0x924E80")]
			public void SetAxisPosition(int elementId, float value)
			{
			}
		}

		[Token(Token = "0x20000E1")]
		private class UIElement
		{
			[Token(Token = "0x4000650")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int id;

			[Token(Token = "0x4000651")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public ControllerUIElement element;

			[Token(Token = "0x6000AA7")]
			[Address(RVA = "0x924F4C", Offset = "0x924F4C", VA = "0x924F4C")]
			public UIElement(int id, ControllerUIElement element)
			{
			}
		}

		[Token(Token = "0x400062D")]
		private const float stickRadius = 20f;

		[Token(Token = "0x400062E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int playerId;

		[Token(Token = "0x400062F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private RectTransform leftStick;

		[Token(Token = "0x4000630")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private RectTransform rightStick;

		[Token(Token = "0x4000631")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private ControllerUIElement leftStickX;

		[Token(Token = "0x4000632")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private ControllerUIElement leftStickY;

		[Token(Token = "0x4000633")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private ControllerUIElement leftStickButton;

		[Token(Token = "0x4000634")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private ControllerUIElement rightStickX;

		[Token(Token = "0x4000635")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private ControllerUIElement rightStickY;

		[Token(Token = "0x4000636")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private ControllerUIElement rightStickButton;

		[Token(Token = "0x4000637")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private ControllerUIElement actionBottomRow1;

		[Token(Token = "0x4000638")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private ControllerUIElement actionBottomRow2;

		[Token(Token = "0x4000639")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private ControllerUIElement actionBottomRow3;

		[Token(Token = "0x400063A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private ControllerUIElement actionTopRow1;

		[Token(Token = "0x400063B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private ControllerUIElement actionTopRow2;

		[Token(Token = "0x400063C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private ControllerUIElement actionTopRow3;

		[Token(Token = "0x400063D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private ControllerUIElement leftShoulder;

		[Token(Token = "0x400063E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private ControllerUIElement leftTrigger;

		[Token(Token = "0x400063F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private ControllerUIElement rightShoulder;

		[Token(Token = "0x4000640")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private ControllerUIElement rightTrigger;

		[Token(Token = "0x4000641")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private ControllerUIElement center1;

		[Token(Token = "0x4000642")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private ControllerUIElement center2;

		[Token(Token = "0x4000643")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private ControllerUIElement center3;

		[Token(Token = "0x4000644")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private ControllerUIElement dPadUp;

		[Token(Token = "0x4000645")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private ControllerUIElement dPadRight;

		[Token(Token = "0x4000646")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private ControllerUIElement dPadDown;

		[Token(Token = "0x4000647")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private ControllerUIElement dPadLeft;

		[Token(Token = "0x4000648")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private UIElement[] _uiElementsArray;

		[Token(Token = "0x4000649")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private Dictionary<int, ControllerUIElement> _uiElements;

		[Token(Token = "0x400064A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private IList<ControllerTemplateElementTarget> _tempTargetList;

		[Token(Token = "0x400064B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private Stick[] _sticks;

		[Token(Token = "0x1700040E")]
		private Player player
		{
			[Token(Token = "0x6000A93")]
			[Address(RVA = "0xE85378", Offset = "0xE85378", VA = "0xE85378")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A94")]
		[Address(RVA = "0xE853EC", Offset = "0xE853EC", VA = "0xE853EC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000A95")]
		[Address(RVA = "0xE85D00", Offset = "0xE85D00", VA = "0xE85D00")]
		private void Start()
		{
		}

		[Token(Token = "0x6000A96")]
		[Address(RVA = "0xE85FBC", Offset = "0xE85FBC", VA = "0xE85FBC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000A97")]
		[Address(RVA = "0xE860BC", Offset = "0xE860BC", VA = "0xE860BC")]
		private void Update()
		{
		}

		[Token(Token = "0x6000A98")]
		[Address(RVA = "0xE8617C", Offset = "0xE8617C", VA = "0xE8617C")]
		private void DrawActiveElements()
		{
		}

		[Token(Token = "0x6000A99")]
		[Address(RVA = "0xE863C4", Offset = "0xE863C4", VA = "0xE863C4")]
		private void ActivateElements(Player player, int actionId)
		{
		}

		[Token(Token = "0x6000A9A")]
		[Address(RVA = "0xE85DC0", Offset = "0xE85DC0", VA = "0xE85DC0")]
		private void DrawLabels()
		{
		}

		[Token(Token = "0x6000A9B")]
		[Address(RVA = "0xE86968", Offset = "0xE86968", VA = "0xE86968")]
		private void DrawLabels(Player player, InputAction action)
		{
		}

		[Token(Token = "0x6000A9C")]
		[Address(RVA = "0xE86B28", Offset = "0xE86B28", VA = "0xE86B28")]
		private void DrawLabel(ControllerUIElement uiElement, InputAction action, ControllerMap controllerMap, IControllerTemplate template, IControllerTemplateElement element)
		{
		}

		[Token(Token = "0x6000A9D")]
		[Address(RVA = "0xE868C8", Offset = "0xE868C8", VA = "0xE868C8")]
		private Stick GetStick(int elementId)
		{
			return null;
		}

		[Token(Token = "0x6000A9E")]
		[Address(RVA = "0xE87278", Offset = "0xE87278", VA = "0xE87278")]
		private void OnControllerConnected(ControllerStatusChangedEventArgs args)
		{
		}

		[Token(Token = "0x6000A9F")]
		[Address(RVA = "0xE8727C", Offset = "0xE8727C", VA = "0xE8727C")]
		private void OnControllerDisconnected(ControllerStatusChangedEventArgs args)
		{
		}

		[Token(Token = "0x6000AA0")]
		[Address(RVA = "0xE87280", Offset = "0xE87280", VA = "0xE87280")]
		public GamepadTemplateUI()
		{
		}
	}
}
namespace I2.Loc
{
	[Token(Token = "0x20000E2")]
	public static class PersistentStorage
	{
		[Token(Token = "0x20000E3")]
		public enum eFileType
		{
			[Token(Token = "0x4000654")]
			Raw,
			[Token(Token = "0x4000655")]
			Persistent,
			[Token(Token = "0x4000656")]
			Temporal,
			[Token(Token = "0x4000657")]
			Streaming
		}

		[Token(Token = "0x4000652")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static I2CustomPersistentStorage mStorage;

		[Token(Token = "0x6000AA8")]
		[Address(RVA = "0xE075C4", Offset = "0xE075C4", VA = "0xE075C4")]
		public static void SetSetting_String(string key, string value)
		{
		}

		[Token(Token = "0x6000AA9")]
		[Address(RVA = "0xE0767C", Offset = "0xE0767C", VA = "0xE0767C")]
		public static string GetSetting_String(string key, string defaultValue)
		{
			return null;
		}

		[Token(Token = "0x6000AAA")]
		[Address(RVA = "0xE07734", Offset = "0xE07734", VA = "0xE07734")]
		public static void DeleteSetting(string key)
		{
		}

		[Token(Token = "0x6000AAB")]
		[Address(RVA = "0xE077E4", Offset = "0xE077E4", VA = "0xE077E4")]
		public static bool HasSetting(string key)
		{
			return default(bool);
		}

		[Token(Token = "0x6000AAC")]
		[Address(RVA = "0xE07894", Offset = "0xE07894", VA = "0xE07894")]
		public static void ForceSaveSettings()
		{
		}

		[Token(Token = "0x6000AAD")]
		[Address(RVA = "0xE07934", Offset = "0xE07934", VA = "0xE07934")]
		public static bool CanAccessFiles()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AAE")]
		[Address(RVA = "0xE079D4", Offset = "0xE079D4", VA = "0xE079D4")]
		public static bool SaveFile(eFileType fileType, string fileName, string data, bool logExceptions = true)
		{
			return default(bool);
		}

		[Token(Token = "0x6000AAF")]
		[Address(RVA = "0xE07AA4", Offset = "0xE07AA4", VA = "0xE07AA4")]
		public static string LoadFile(eFileType fileType, string fileName, bool logExceptions = true)
		{
			return null;
		}

		[Token(Token = "0x6000AB0")]
		[Address(RVA = "0xE07B6C", Offset = "0xE07B6C", VA = "0xE07B6C")]
		public static bool DeleteFile(eFileType fileType, string fileName, bool logExceptions = true)
		{
			return default(bool);
		}

		[Token(Token = "0x6000AB1")]
		[Address(RVA = "0xE07C34", Offset = "0xE07C34", VA = "0xE07C34")]
		public static bool HasFile(eFileType fileType, string fileName, bool logExceptions = true)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20000E4")]
	public abstract class I2BasePersistentStorage
	{
		[Token(Token = "0x6000AB2")]
		[Address(RVA = "0xB16A08", Offset = "0xB16A08", VA = "0xB16A08", Slot = "4")]
		public virtual void SetSetting_String(string key, string value)
		{
		}

		[Token(Token = "0x6000AB3")]
		[Address(RVA = "0xB16C94", Offset = "0xB16C94", VA = "0xB16C94", Slot = "5")]
		public virtual string GetSetting_String(string key, string defaultValue)
		{
			return null;
		}

		[Token(Token = "0x6000AB4")]
		[Address(RVA = "0xB16EFC", Offset = "0xB16EFC", VA = "0xB16EFC", Slot = "6")]
		public virtual void DeleteSetting(string key)
		{
		}

		[Token(Token = "0x6000AB5")]
		[Address(RVA = "0xB17120", Offset = "0xB17120", VA = "0xB17120", Slot = "7")]
		public virtual void ForceSaveSettings()
		{
		}

		[Token(Token = "0x6000AB6")]
		[Address(RVA = "0xB17128", Offset = "0xB17128", VA = "0xB17128", Slot = "8")]
		public virtual bool HasSetting(string key)
		{
			return default(bool);
		}

		[Token(Token = "0x6000AB7")]
		[Address(RVA = "0xB17134", Offset = "0xB17134", VA = "0xB17134", Slot = "9")]
		public virtual bool CanAccessFiles()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AB8")]
		[Address(RVA = "0xB1713C", Offset = "0xB1713C", VA = "0xB1713C")]
		private string UpdateFilename(PersistentStorage.eFileType fileType, string fileName)
		{
			return null;
		}

		[Token(Token = "0x6000AB9")]
		[Address(RVA = "0xB171E4", Offset = "0xB171E4", VA = "0xB171E4", Slot = "10")]
		public virtual bool SaveFile(PersistentStorage.eFileType fileType, string fileName, string data, bool logExceptions = true)
		{
			return default(bool);
		}

		[Token(Token = "0x6000ABA")]
		[Address(RVA = "0xB1739C", Offset = "0xB1739C", VA = "0xB1739C", Slot = "11")]
		public virtual string LoadFile(PersistentStorage.eFileType fileType, string fileName, bool logExceptions = true)
		{
			return null;
		}

		[Token(Token = "0x6000ABB")]
		[Address(RVA = "0xB17548", Offset = "0xB17548", VA = "0xB17548", Slot = "12")]
		public virtual bool DeleteFile(PersistentStorage.eFileType fileType, string fileName, bool logExceptions = true)
		{
			return default(bool);
		}

		[Token(Token = "0x6000ABC")]
		[Address(RVA = "0xB176E8", Offset = "0xB176E8", VA = "0xB176E8", Slot = "13")]
		public virtual bool HasFile(PersistentStorage.eFileType fileType, string fileName, bool logExceptions = true)
		{
			return default(bool);
		}

		[Token(Token = "0x6000ABD")]
		[Address(RVA = "0xB17888", Offset = "0xB17888", VA = "0xB17888")]
		protected I2BasePersistentStorage()
		{
		}
	}
	[Token(Token = "0x20000E5")]
	public class I2CustomPersistentStorage : I2BasePersistentStorage
	{
		[Token(Token = "0x6000ABE")]
		[Address(RVA = "0xB17890", Offset = "0xB17890", VA = "0xB17890")]
		public I2CustomPersistentStorage()
		{
		}
	}
	[Token(Token = "0x20000E6")]
	public class BaseSpecializationManager
	{
		[Token(Token = "0x4000658")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string[] mSpecializations;

		[Token(Token = "0x4000659")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Dictionary<string, string> mSpecializationsFallbacks;

		[Token(Token = "0x6000ABF")]
		[Address(RVA = "0xFA801C", Offset = "0xFA801C", VA = "0xFA801C", Slot = "4")]
		public virtual void InitializeSpecializations()
		{
		}

		[Token(Token = "0x6000AC0")]
		[Address(RVA = "0xFA84B4", Offset = "0xFA84B4", VA = "0xFA84B4", Slot = "5")]
		public virtual string GetCurrentSpecialization()
		{
			return null;
		}

		[Token(Token = "0x6000AC1")]
		[Address(RVA = "0xFA8514", Offset = "0xFA8514", VA = "0xFA8514", Slot = "6")]
		public virtual string GetFallbackSpecialization(string specialization)
		{
			return null;
		}

		[Token(Token = "0x6000AC2")]
		[Address(RVA = "0xFA85C0", Offset = "0xFA85C0", VA = "0xFA85C0")]
		public BaseSpecializationManager()
		{
		}
	}
	[Token(Token = "0x20000E7")]
	public class SpecializationManager : BaseSpecializationManager
	{
		[Token(Token = "0x400065A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static SpecializationManager Singleton;

		[Token(Token = "0x6000AC3")]
		[Address(RVA = "0xAE6C80", Offset = "0xAE6C80", VA = "0xAE6C80")]
		private SpecializationManager()
		{
		}

		[Token(Token = "0x6000AC4")]
		[Address(RVA = "0xAE6CB0", Offset = "0xAE6CB0", VA = "0xAE6CB0")]
		public static string GetSpecializedText(string text, [Optional] string specialization)
		{
			return null;
		}

		[Token(Token = "0x6000AC5")]
		[Address(RVA = "0xAE6EB8", Offset = "0xAE6EB8", VA = "0xAE6EB8")]
		public static string SetSpecializedText(string text, string newText, string specialization)
		{
			return null;
		}

		[Token(Token = "0x6000AC6")]
		[Address(RVA = "0xAE7200", Offset = "0xAE7200", VA = "0xAE7200")]
		public static string SetSpecializedText(Dictionary<string, string> specializations)
		{
			return null;
		}

		[Token(Token = "0x6000AC7")]
		[Address(RVA = "0xAE6FE4", Offset = "0xAE6FE4", VA = "0xAE6FE4")]
		public static Dictionary<string, string> GetSpecializations(string text, [Optional] Dictionary<string, string> buffer)
		{
			return null;
		}

		[Token(Token = "0x6000AC8")]
		[Address(RVA = "0xAE75C4", Offset = "0xAE75C4", VA = "0xAE75C4")]
		public static void AppendSpecializations(string text, [Optional] List<string> list)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000E8")]
	public class EventCallback
	{
		[Token(Token = "0x400065B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MonoBehaviour Target;

		[Token(Token = "0x400065C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string MethodName;

		[Token(Token = "0x6000ACA")]
		[Address(RVA = "0xE7965C", Offset = "0xE7965C", VA = "0xE7965C")]
		public void Execute([Optional] UnityEngine.Object Sender)
		{
		}

		[Token(Token = "0x6000ACB")]
		[Address(RVA = "0xE796C4", Offset = "0xE796C4", VA = "0xE796C4")]
		public bool HasCallback()
		{
			return default(bool);
		}

		[Token(Token = "0x6000ACC")]
		[Address(RVA = "0xE79754", Offset = "0xE79754", VA = "0xE79754")]
		public EventCallback()
		{
		}
	}
	[Token(Token = "0x20000E9")]
	public enum ePluralType
	{
		[Token(Token = "0x400065E")]
		Zero,
		[Token(Token = "0x400065F")]
		One,
		[Token(Token = "0x4000660")]
		Two,
		[Token(Token = "0x4000661")]
		Few,
		[Token(Token = "0x4000662")]
		Many,
		[Token(Token = "0x4000663")]
		Plural
	}
	[Token(Token = "0x20000EA")]
	public static class GoogleLanguages
	{
		[Token(Token = "0x20000EB")]
		public struct LanguageCodeDef
		{
			[Token(Token = "0x4000665")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string Code;

			[Token(Token = "0x4000666")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public string GoogleCode;

			[Token(Token = "0x4000667")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool HasJoinedWords;

			[Token(Token = "0x4000668")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int PluralRule;
		}

		[Token(Token = "0x4000664")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Dictionary<string, LanguageCodeDef> mLanguageDef;

		[Token(Token = "0x6000ACD")]
		[Address(RVA = "0xE88844", Offset = "0xE88844", VA = "0xE88844")]
		public static string GetLanguageCode(string Filter, bool ShowWarnings = false)
		{
			return null;
		}

		[Token(Token = "0x6000ACE")]
		[Address(RVA = "0xE88C44", Offset = "0xE88C44", VA = "0xE88C44")]
		public static List<string> GetLanguagesForDropdown(string Filter, string CodesToExclude)
		{
			return null;
		}

		[Token(Token = "0x6000ACF")]
		[Address(RVA = "0xE88AF0", Offset = "0xE88AF0", VA = "0xE88AF0")]
		private static bool LanguageMatchesFilter(string Language, string[] Filters)
		{
			return default(bool);
		}

		[Token(Token = "0x6000AD0")]
		[Address(RVA = "0xE891C0", Offset = "0xE891C0", VA = "0xE891C0")]
		public static string GetFormatedLanguageName(string Language)
		{
			return null;
		}

		[Token(Token = "0x6000AD1")]
		[Address(RVA = "0xE89318", Offset = "0xE89318", VA = "0xE89318")]
		public static string GetCodedLanguage(string Language, string code)
		{
			return null;
		}

		[Token(Token = "0x6000AD2")]
		[Address(RVA = "0xE893F4", Offset = "0xE893F4", VA = "0xE893F4")]
		public static void UnPackCodeFromLanguageName(string CodedLanguage, out string Language, out string code)
		{
		}

		[Token(Token = "0x6000AD3")]
		[Address(RVA = "0xE89554", Offset = "0xE89554", VA = "0xE89554")]
		public static string GetGoogleLanguageCode(string InternationalCode)
		{
			return null;
		}

		[Token(Token = "0x6000AD4")]
		[Address(RVA = "0xE89720", Offset = "0xE89720", VA = "0xE89720")]
		public static string GetLanguageName(string code, bool useParenthesesForRegion = false, bool allowDiscardRegion = true)
		{
			return null;
		}

		[Token(Token = "0x6000AD5")]
		[Address(RVA = "0xE89A08", Offset = "0xE89A08", VA = "0xE89A08")]
		public static List<string> GetAllInternationalCodes()
		{
			return null;
		}

		[Token(Token = "0x6000AD6")]
		[Address(RVA = "0xE89C08", Offset = "0xE89C08", VA = "0xE89C08")]
		public static bool LanguageCode_HasJoinedWord(string languageCode)
		{
			return default(bool);
		}

		[Token(Token = "0x6000AD7")]
		[Address(RVA = "0xE89DB0", Offset = "0xE89DB0", VA = "0xE89DB0")]
		private static int GetPluralRule(string langCode)
		{
			return default(int);
		}

		[Token(Token = "0x6000AD8")]
		[Address(RVA = "0xE89F7C", Offset = "0xE89F7C", VA = "0xE89F7C")]
		public static bool LanguageHasPluralType(string langCode, string pluralType)
		{
			return default(bool);
		}

		[Token(Token = "0x6000AD9")]
		[Address(RVA = "0xE8A144", Offset = "0xE8A144", VA = "0xE8A144")]
		public static ePluralType GetPluralType(string langCode, int n)
		{
			return default(ePluralType);
		}

		[Token(Token = "0x6000ADA")]
		[Address(RVA = "0xE8A858", Offset = "0xE8A858", VA = "0xE8A858")]
		public static int GetPluralTestNumber(string langCode, ePluralType pluralType)
		{
			return default(int);
		}

		[Token(Token = "0x6000ADB")]
		[Address(RVA = "0xE8A840", Offset = "0xE8A840", VA = "0xE8A840")]
		private static bool inRange(int amount, int min, int max)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20000EC")]
	public static class GoogleTranslation
	{
		[Token(Token = "0x20000ED")]
		public delegate void fnOnTranslated(string Translation, string Error);

		[Token(Token = "0x20000EE")]
		public delegate void fnOnTranslationReady(Dictionary<string, TranslationQuery> dict, string error);

		[Token(Token = "0x20000EF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F0378", Offset = "0x6F0378")]
		private sealed class <>c__DisplayClass2_0
		{
			[Token(Token = "0x400066B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public fnOnTranslated OnTranslationReady;

			[Token(Token = "0x400066C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string text;

			[Token(Token = "0x400066D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Dictionary<string, TranslationQuery> queries;

			[Token(Token = "0x400066E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string LanguageCodeTo;

			[Token(Token = "0x6000B01")]
			[Address(RVA = "0x924F88", Offset = "0x924F88", VA = "0x924F88")]
			public <>c__DisplayClass2_0()
			{
			}

			[Token(Token = "0x6000B02")]
			[Address(RVA = "0x924F90", Offset = "0x924F90", VA = "0x924F90")]
			internal void <Translate>b__0(Dictionary<string, TranslationQuery> results, string error)
			{
			}
		}

		[Token(Token = "0x20000F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F0388", Offset = "0x6F0388")]
		private sealed class <WaitForTranslations>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400066F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000670")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x17000410")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000B06")]
				[Address(RVA = "0x9255E4", Offset = "0x9255E4", VA = "0x9255E4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000411")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000B08")]
				[Address(RVA = "0x92562C", Offset = "0x92562C", VA = "0x92562C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000B03")]
			[Address(RVA = "0x92540C", Offset = "0x92540C", VA = "0x92540C")]
			[DebuggerHidden]
			public <WaitForTranslations>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x6000B04")]
			[Address(RVA = "0x925438", Offset = "0x925438", VA = "0x925438", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000B05")]
			[Address(RVA = "0x92543C", Offset = "0x92543C", VA = "0x92543C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000B07")]
			[Address(RVA = "0x9255EC", Offset = "0x9255EC", VA = "0x9255EC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000669")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<UnityWebRequest> mCurrentTranslations;

		[Token(Token = "0x400066A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static List<TranslationJob> mTranslationJobs;

		[Token(Token = "0x6000ADD")]
		[Address(RVA = "0x1760164", Offset = "0x1760164", VA = "0x1760164")]
		public static bool CanTranslate()
		{
			return default(bool);
		}

		[Token(Token = "0x6000ADE")]
		[Address(RVA = "0x1760220", Offset = "0x1760220", VA = "0x1760220")]
		public static void Translate(string text, string LanguageCodeFrom, string LanguageCodeTo, fnOnTranslated OnTranslationReady)
		{
		}

		[Token(Token = "0x6000ADF")]
		[Address(RVA = "0x1760720", Offset = "0x1760720", VA = "0x1760720")]
		public static string ForceTranslate(string text, string LanguageCodeFrom, string LanguageCodeTo)
		{
			return null;
		}

		[Token(Token = "0x6000AE0")]
		[Address(RVA = "0x1760684", Offset = "0x1760684", VA = "0x1760684")]
		public static void Translate(Dictionary<string, TranslationQuery> requests, fnOnTranslationReady OnTranslationReady, bool usePOST = true)
		{
		}

		[Token(Token = "0x6000AE1")]
		[Address(RVA = "0x1760D50", Offset = "0x1760D50", VA = "0x1760D50")]
		public static bool ForceTranslate(Dictionary<string, TranslationQuery> requests, bool usePOST = true)
		{
			return default(bool);
		}

		[Token(Token = "0x6000AE2")]
		[Address(RVA = "0x1760DD4", Offset = "0x1760DD4", VA = "0x1760DD4")]
		public static List<string> ConvertTranslationRequest(Dictionary<string, TranslationQuery> requests, bool encodeGET)
		{
			return null;
		}

		[Token(Token = "0x6000AE3")]
		[Address(RVA = "0x1760C70", Offset = "0x1760C70", VA = "0x1760C70")]
		private static void AddTranslationJob(TranslationJob job)
		{
		}

		[Token(Token = "0x6000AE4")]
		[Address(RVA = "0x176137C", Offset = "0x176137C", VA = "0x176137C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6FA288", Offset = "0x6FA288")]
		private static IEnumerator WaitForTranslations()
		{
			return null;
		}

		[Token(Token = "0x6000AE5")]
		[Address(RVA = "0x17613D8", Offset = "0x17613D8", VA = "0x17613D8")]
		public static string ParseTranslationResult(string html, Dictionary<string, TranslationQuery> requests)
		{
			return null;
		}

		[Token(Token = "0x6000AE6")]
		[Address(RVA = "0x1761B28", Offset = "0x1761B28", VA = "0x1761B28")]
		public static bool IsTranslating()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AE7")]
		[Address(RVA = "0x1761BF0", Offset = "0x1761BF0", VA = "0x1761BF0")]
		public static void CancelCurrentGoogleTranslations()
		{
		}

		[Token(Token = "0x6000AE8")]
		[Address(RVA = "0x1760474", Offset = "0x1760474", VA = "0x1760474")]
		public static void CreateQueries(string text, string LanguageCodeFrom, string LanguageCodeTo, Dictionary<string, TranslationQuery> dict)
		{
		}

		[Token(Token = "0x6000AE9")]
		[Address(RVA = "0x1761DAC", Offset = "0x1761DAC", VA = "0x1761DAC")]
		private static void CreateQueries_Plurals(string text, string LanguageCodeFrom, string LanguageCodeTo, Dictionary<string, TranslationQuery> dict)
		{
		}

		[Token(Token = "0x6000AEA")]
		[Address(RVA = "0x1760888", Offset = "0x1760888", VA = "0x1760888")]
		public static void AddQuery(string text, string LanguageCodeFrom, string LanguageCodeTo, Dictionary<string, TranslationQuery> dict)
		{
		}

		[Token(Token = "0x6000AEB")]
		[Address(RVA = "0x17627D0", Offset = "0x17627D0", VA = "0x17627D0")]
		private static string GetTranslation(string text, string LanguageCodeTo, Dictionary<string, TranslationQuery> dict)
		{
			return null;
		}

		[Token(Token = "0x6000AEC")]
		[Address(RVA = "0x17618B8", Offset = "0x17618B8", VA = "0x17618B8")]
		private static TranslationQuery FindQueryFromOrigText(string origText, Dictionary<string, TranslationQuery> dict)
		{
			return default(TranslationQuery);
		}

		[Token(Token = "0x6000AED")]
		[Address(RVA = "0x176204C", Offset = "0x176204C", VA = "0x176204C")]
		public static bool HasParameters(string text)
		{
			return default(bool);
		}

		[Token(Token = "0x6000AEE")]
		[Address(RVA = "0x1762210", Offset = "0x1762210", VA = "0x1762210")]
		public static string GetPluralParameter(string text, bool forceTag)
		{
			return null;
		}

		[Token(Token = "0x6000AEF")]
		[Address(RVA = "0x17620E4", Offset = "0x17620E4", VA = "0x17620E4")]
		public static string GetPluralText(string text, string pluralType)
		{
			return null;
		}

		[Token(Token = "0x6000AF0")]
		[Address(RVA = "0x17628DC", Offset = "0x17628DC", VA = "0x17628DC")]
		private static int FindClosingTag(string tag, MatchCollection matches, int startIndex)
		{
			return default(int);
		}

		[Token(Token = "0x6000AF1")]
		[Address(RVA = "0x1761A74", Offset = "0x1761A74", VA = "0x1761A74")]
		private static string GetGoogleNoTranslateTag(int tagNumber)
		{
			return null;
		}

		[Token(Token = "0x6000AF2")]
		[Address(RVA = "0x1762308", Offset = "0x1762308", VA = "0x1762308")]
		private static void ParseNonTranslatableElements(ref TranslationQuery query)
		{
		}

		[Token(Token = "0x6000AF3")]
		[Address(RVA = "0x1760B4C", Offset = "0x1760B4C", VA = "0x1760B4C")]
		public static string GetQueryResult(string text, string LanguageCodeTo, Dictionary<string, TranslationQuery> dict)
		{
			return null;
		}

		[Token(Token = "0x6000AF4")]
		[Address(RVA = "0x17629A8", Offset = "0x17629A8", VA = "0x17629A8")]
		public static string RebuildTranslation(string text, Dictionary<string, TranslationQuery> dict, string LanguageCodeTo)
		{
			return null;
		}

		[Token(Token = "0x6000AF5")]
		[Address(RVA = "0x1762C6C", Offset = "0x1762C6C", VA = "0x1762C6C")]
		private static string RebuildTranslation_Plural(string text, Dictionary<string, TranslationQuery> dict, string LanguageCodeTo)
		{
			return null;
		}

		[Token(Token = "0x6000AF6")]
		[Address(RVA = "0x1762FFC", Offset = "0x1762FFC", VA = "0x1762FFC")]
		public static string UppercaseFirst(string s)
		{
			return null;
		}

		[Token(Token = "0x6000AF7")]
		[Address(RVA = "0x17612BC", Offset = "0x17612BC", VA = "0x17612BC")]
		public static string TitleCase(string s)
		{
			return null;
		}
	}
	[Token(Token = "0x20000F1")]
	public struct TranslationQuery
	{
		[Token(Token = "0x4000671")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string OrigText;

		[Token(Token = "0x4000672")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string Text;

		[Token(Token = "0x4000673")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string LanguageCode;

		[Token(Token = "0x4000674")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string[] TargetLanguagesCode;

		[Token(Token = "0x4000675")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string[] Results;

		[Token(Token = "0x4000676")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string[] Tags;
	}
	[Token(Token = "0x20000F2")]
	public class TranslationJob : IDisposable
	{
		[Token(Token = "0x20000F3")]
		public enum eJobState
		{
			[Token(Token = "0x4000679")]
			Running,
			[Token(Token = "0x400067A")]
			Succeeded,
			[Token(Token = "0x400067B")]
			Failed
		}

		[Token(Token = "0x4000677")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public eJobState mJobState;

		[Token(Token = "0x6000B09")]
		[Address(RVA = "0xAF255C", Offset = "0xAF255C", VA = "0xAF255C", Slot = "5")]
		public virtual eJobState GetState()
		{
			return default(eJobState);
		}

		[Token(Token = "0x6000B0A")]
		[Address(RVA = "0xAF2564", Offset = "0xAF2564", VA = "0xAF2564", Slot = "6")]
		public virtual void Dispose()
		{
		}

		[Token(Token = "0x6000B0B")]
		[Address(RVA = "0xAF2568", Offset = "0xAF2568", VA = "0xAF2568")]
		public TranslationJob()
		{
		}
	}
	[Token(Token = "0x20000F4")]
	public class TranslationJob_WWW : TranslationJob
	{
		[Token(Token = "0x400067C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UnityWebRequest www;

		[Token(Token = "0x6000B0C")]
		[Address(RVA = "0xAF3CD8", Offset = "0xAF3CD8", VA = "0xAF3CD8", Slot = "6")]
		public override void Dispose()
		{
		}

		[Token(Token = "0x6000B0D")]
		[Address(RVA = "0xAF260C", Offset = "0xAF260C", VA = "0xAF260C")]
		public TranslationJob_WWW()
		{
		}
	}
	[Token(Token = "0x20000F5")]
	public class TranslationJob_GET : TranslationJob_WWW
	{
		[Token(Token = "0x400067D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Dictionary<string, TranslationQuery> _requests;

		[Token(Token = "0x400067E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GoogleTranslation.fnOnTranslationReady _OnTranslationReady;

		[Token(Token = "0x400067F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<string> mQueries;

		[Token(Token = "0x4000680")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string mErrorMessage;

		[Token(Token = "0x6000B0E")]
		[Address(RVA = "0xAF2570", Offset = "0xAF2570", VA = "0xAF2570")]
		public TranslationJob_GET(Dictionary<string, TranslationQuery> requests, GoogleTranslation.fnOnTranslationReady OnTranslationReady)
		{
		}

		[Token(Token = "0x6000B0F")]
		[Address(RVA = "0xAF2614", Offset = "0xAF2614", VA = "0xAF2614")]
		private void ExecuteNextQuery()
		{
		}

		[Token(Token = "0x6000B10")]
		[Address(RVA = "0xAF2724", Offset = "0xAF2724", VA = "0xAF2724", Slot = "5")]
		public override eJobState GetState()
		{
			return default(eJobState);
		}

		[Token(Token = "0x6000B11")]
		[Address(RVA = "0xAF27C8", Offset = "0xAF27C8", VA = "0xAF27C8")]
		public void ProcessResult(byte[] bytes, string errorMsg)
		{
		}
	}
	[Token(Token = "0x20000F6")]
	public class TranslationJob_Main : TranslationJob
	{
		[Token(Token = "0x4000681")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TranslationJob_WEB mWeb;

		[Token(Token = "0x4000682")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TranslationJob_POST mPost;

		[Token(Token = "0x4000683")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TranslationJob_GET mGet;

		[Token(Token = "0x4000684")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Dictionary<string, TranslationQuery> _requests;

		[Token(Token = "0x4000685")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private GoogleTranslation.fnOnTranslationReady _OnTranslationReady;

		[Token(Token = "0x4000686")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string mErrorMessage;

		[Token(Token = "0x6000B12")]
		[Address(RVA = "0xAF28D0", Offset = "0xAF28D0", VA = "0xAF28D0")]
		public TranslationJob_Main(Dictionary<string, TranslationQuery> requests, GoogleTranslation.fnOnTranslationReady OnTranslationReady)
		{
		}

		[Token(Token = "0x6000B13")]
		[Address(RVA = "0xAF2AE8", Offset = "0xAF2AE8", VA = "0xAF2AE8", Slot = "5")]
		public override eJobState GetState()
		{
			return default(eJobState);
		}

		[Token(Token = "0x6000B14")]
		[Address(RVA = "0xAF2C9C", Offset = "0xAF2C9C", VA = "0xAF2C9C", Slot = "6")]
		public override void Dispose()
		{
		}
	}
	[Token(Token = "0x20000F7")]
	public class TranslationJob_POST : TranslationJob_WWW
	{
		[Token(Token = "0x4000687")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Dictionary<string, TranslationQuery> _requests;

		[Token(Token = "0x4000688")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GoogleTranslation.fnOnTranslationReady _OnTranslationReady;

		[Token(Token = "0x6000B15")]
		[Address(RVA = "0xAF2950", Offset = "0xAF2950", VA = "0xAF2950")]
		public TranslationJob_POST(Dictionary<string, TranslationQuery> requests, GoogleTranslation.fnOnTranslationReady OnTranslationReady)
		{
		}

		[Token(Token = "0x6000B16")]
		[Address(RVA = "0xAF2CE8", Offset = "0xAF2CE8", VA = "0xAF2CE8", Slot = "5")]
		public override eJobState GetState()
		{
			return default(eJobState);
		}

		[Token(Token = "0x6000B17")]
		[Address(RVA = "0xAF2D78", Offset = "0xAF2D78", VA = "0xAF2D78")]
		public void ProcessResult(byte[] bytes, string errorMsg)
		{
		}
	}
	[Token(Token = "0x20000F8")]
	public class TranslationJob_WEB : TranslationJob_WWW
	{
		[Serializable]
		[Token(Token = "0x20000F9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F0398", Offset = "0x6F0398")]
		private sealed class <>c
		{
			[Token(Token = "0x4000690")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000691")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Comparison<KeyValuePair<string, string>> <>9__8_0;

			[Token(Token = "0x4000692")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static MatchEvaluator <>9__12_0;

			[Token(Token = "0x4000693")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static MatchEvaluator <>9__12_1;

			[Token(Token = "0x6000B1F")]
			[Address(RVA = "0x107E22C", Offset = "0x107E22C", VA = "0x107E22C")]
			public <>c()
			{
			}

			[Token(Token = "0x6000B20")]
			[Address(RVA = "0x107E234", Offset = "0x107E234", VA = "0x107E234")]
			internal int <FindAllQueries>b__8_0(KeyValuePair<string, string> a, KeyValuePair<string, string> b)
			{
				return default(int);
			}

			[Token(Token = "0x6000B21")]
			[Address(RVA = "0x107E290", Offset = "0x107E290", VA = "0x107E290")]
			internal string <ParseTranslationResult>b__12_0(Match match)
			{
				return null;
			}

			[Token(Token = "0x6000B22")]
			[Address(RVA = "0x107E33C", Offset = "0x107E33C", VA = "0x107E33C")]
			internal string <ParseTranslationResult>b__12_1(Match match)
			{
				return null;
			}
		}

		[Token(Token = "0x4000689")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Dictionary<string, TranslationQuery> _requests;

		[Token(Token = "0x400068A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GoogleTranslation.fnOnTranslationReady _OnTranslationReady;

		[Token(Token = "0x400068B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string mErrorMessage;

		[Token(Token = "0x400068C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string mCurrentBatch_ToLanguageCode;

		[Token(Token = "0x400068D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string mCurrentBatch_FromLanguageCode;

		[Token(Token = "0x400068E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<string> mCurrentBatch_Text;

		[Token(Token = "0x400068F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<KeyValuePair<string, string>> mQueries;

		[Token(Token = "0x6000B18")]
		[Address(RVA = "0xAF2E6C", Offset = "0xAF2E6C", VA = "0xAF2E6C")]
		public TranslationJob_WEB(Dictionary<string, TranslationQuery> requests, GoogleTranslation.fnOnTranslationReady OnTranslationReady)
		{
		}

		[Token(Token = "0x6000B19")]
		[Address(RVA = "0xAF2EB0", Offset = "0xAF2EB0", VA = "0xAF2EB0")]
		private void FindAllQueries()
		{
		}

		[Token(Token = "0x6000B1A")]
		[Address(RVA = "0xAF320C", Offset = "0xAF320C", VA = "0xAF320C")]
		private void ExecuteNextBatch()
		{
		}

		[Token(Token = "0x6000B1B")]
		[Address(RVA = "0xAF35D0", Offset = "0xAF35D0", VA = "0xAF35D0", Slot = "5")]
		public override eJobState GetState()
		{
			return default(eJobState);
		}

		[Token(Token = "0x6000B1C")]
		[Address(RVA = "0xAF3674", Offset = "0xAF3674", VA = "0xAF3674")]
		public void ProcessResult(byte[] bytes, string errorMsg)
		{
		}

		[Token(Token = "0x6000B1D")]
		[Address(RVA = "0xAF3794", Offset = "0xAF3794", VA = "0xAF3794")]
		private string ParseTranslationResult(string html, string OriginalText)
		{
			return null;
		}
	}
	[Token(Token = "0x20000FA")]
	public enum eLanguageDataFlags
	{
		[Token(Token = "0x4000695")]
		DISABLED = 1,
		[Token(Token = "0x4000696")]
		KEEP_LOADED = 2,
		[Token(Token = "0x4000697")]
		NOT_LOADED = 4
	}
	[Serializable]
	[Token(Token = "0x20000FB")]
	public class LanguageData
	{
		[Token(Token = "0x4000698")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string Name;

		[Token(Token = "0x4000699")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string Code;

		[Token(Token = "0x400069A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public byte Flags;

		[NonSerialized]
		[Token(Token = "0x400069B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool Compressed;

		[Token(Token = "0x6000B23")]
		[Address(RVA = "0xC49918", Offset = "0xC49918", VA = "0xC49918")]
		public bool IsEnabled()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B24")]
		[Address(RVA = "0xC49928", Offset = "0xC49928", VA = "0xC49928")]
		public void SetEnabled(bool bEnabled)
		{
		}

		[Token(Token = "0x6000B25")]
		[Address(RVA = "0xC49944", Offset = "0xC49944", VA = "0xC49944")]
		public bool IsLoaded()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B26")]
		[Address(RVA = "0xC49954", Offset = "0xC49954", VA = "0xC49954")]
		public bool CanBeUnloaded()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B27")]
		[Address(RVA = "0xC49964", Offset = "0xC49964", VA = "0xC49964")]
		public void SetLoaded(bool loaded)
		{
		}

		[Token(Token = "0x6000B28")]
		[Address(RVA = "0xC49980", Offset = "0xC49980", VA = "0xC49980")]
		public void SetCanBeUnLoaded(bool allowUnloading)
		{
		}

		[Token(Token = "0x6000B29")]
		[Address(RVA = "0xC4999C", Offset = "0xC4999C", VA = "0xC4999C")]
		public LanguageData()
		{
		}
	}
	[Token(Token = "0x20000FC")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x6F03A8", Offset = "0x6F03A8")]
	public class LanguageSource : MonoBehaviour, ISerializationCallbackReceiver, ILanguageSource
	{
		[Token(Token = "0x20000FD")]
		public delegate void fnOnSourceUpdated(LanguageSourceData source, bool ReceivedNewData, string errorMsg);

		[Token(Token = "0x400069C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LanguageSourceData mSource;

		[Token(Token = "0x400069D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int version;

		[Token(Token = "0x400069E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool NeverDestroy;

		[Token(Token = "0x400069F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		public bool UserAgreesToHaveItOnTheScene;

		[Token(Token = "0x40006A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
		public bool UserAgreesToHaveItInsideThePluginsFolder;

		[Token(Token = "0x40006A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x27")]
		public bool GoogleLiveSyncIsUptoDate;

		[Token(Token = "0x40006A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<UnityEngine.Object> Assets;

		[Token(Token = "0x40006A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string Google_WebServiceURL;

		[Token(Token = "0x40006A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string Google_SpreadsheetKey;

		[Token(Token = "0x40006A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string Google_SpreadsheetName;

		[Token(Token = "0x40006A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string Google_LastUpdatedVersion;

		[Token(Token = "0x40006A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public LanguageSourceData.eGoogleUpdateFrequency GoogleUpdateFrequency;

		[Token(Token = "0x40006A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float GoogleUpdateDelay;

		[Token(Token = "0x40006AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public List<LanguageData> mLanguages;

		[Token(Token = "0x40006AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public bool IgnoreDeviceLanguage;

		[Token(Token = "0x40006AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public LanguageSourceData.eAllowUnloadLanguages _AllowUnloadingLanguages;

		[Token(Token = "0x40006AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public List<TermData> mTerms;

		[Token(Token = "0x40006AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public bool CaseInsensitiveTerms;

		[Token(Token = "0x40006AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public LanguageSourceData.MissingTranslationAction OnMissingTranslation;

		[Token(Token = "0x40006B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public string mTerm_AppName;

		[Token(Token = "0x17000412")]
		public LanguageSourceData SourceData
		{
			[Token(Token = "0x6000B2A")]
			[Address(RVA = "0xC4B00C", Offset = "0xC4B00C", VA = "0xC4B00C", Slot = "6")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B2B")]
			[Address(RVA = "0xC4B014", Offset = "0xC4B014", VA = "0xC4B014", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x14000017")]
		public event fnOnSourceUpdated Event_OnSourceUpdateFromGoogle
		{
			[Token(Token = "0x6000B2C")]
			[Address(RVA = "0xC4B01C", Offset = "0xC4B01C", VA = "0xC4B01C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FA338", Offset = "0x6FA338")]
			add
			{
			}
			[Token(Token = "0x6000B2D")]
			[Address(RVA = "0xC4B0BC", Offset = "0xC4B0BC", VA = "0xC4B0BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FA348", Offset = "0x6FA348")]
			remove
			{
			}
		}

		[Token(Token = "0x6000B2E")]
		[Address(RVA = "0xC4B15C", Offset = "0xC4B15C", VA = "0xC4B15C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000B2F")]
		[Address(RVA = "0xC4B200", Offset = "0xC4B200", VA = "0xC4B200")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000B30")]
		[Address(RVA = "0xC4B280", Offset = "0xC4B280", VA = "0xC4B280")]
		public string GetSourceName()
		{
			return null;
		}

		[Token(Token = "0x6000B31")]
		[Address(RVA = "0xC4B37C", Offset = "0xC4B37C", VA = "0xC4B37C", Slot = "4")]
		public void OnBeforeSerialize()
		{
		}

		[Token(Token = "0x6000B32")]
		[Address(RVA = "0xC4B388", Offset = "0xC4B388", VA = "0xC4B388", Slot = "5")]
		public void OnAfterDeserialize()
		{
		}

		[Token(Token = "0x6000B33")]
		[Address(RVA = "0xC4B9F4", Offset = "0xC4B9F4", VA = "0xC4B9F4")]
		public LanguageSource()
		{
		}
	}
	[Token(Token = "0x20000FE")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x6F03F4", Offset = "0x6F03F4")]
	public class LanguageSourceAsset : ScriptableObject, ILanguageSource
	{
		[Token(Token = "0x40006B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LanguageSourceData mSource;

		[Token(Token = "0x17000413")]
		public LanguageSourceData SourceData
		{
			[Token(Token = "0x6000B38")]
			[Address(RVA = "0xC4BB34", Offset = "0xC4BB34", VA = "0xC4BB34", Slot = "4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B39")]
			[Address(RVA = "0xC4BB3C", Offset = "0xC4BB3C", VA = "0xC4BB3C", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x6000B3A")]
		[Address(RVA = "0xC4BB44", Offset = "0xC4BB44", VA = "0xC4BB44")]
		public LanguageSourceAsset()
		{
		}
	}
	[Token(Token = "0x20000FF")]
	public interface ILanguageSource
	{
		[Token(Token = "0x17000414")]
		LanguageSourceData SourceData
		{
			[Token(Token = "0x6000B3B")]
			get;
			[Token(Token = "0x6000B3C")]
			set;
		}
	}
	[Serializable]
	[Token(Token = "0x2000100")]
	[ExecuteInEditMode]
	public class LanguageSourceData
	{
		[Token(Token = "0x2000101")]
		public enum MissingTranslationAction
		{
			[Token(Token = "0x40006CE")]
			Empty,
			[Token(Token = "0x40006CF")]
			Fallback,
			[Token(Token = "0x40006D0")]
			ShowWarning,
			[Token(Token = "0x40006D1")]
			ShowTerm
		}

		[Token(Token = "0x2000102")]
		public enum eAllowUnloadLanguages
		{
			[Token(Token = "0x40006D3")]
			Never,
			[Token(Token = "0x40006D4")]
			OnlyInDevice,
			[Token(Token = "0x40006D5")]
			EditorAndDevice
		}

		[Token(Token = "0x2000103")]
		public enum eGoogleUpdateFrequency
		{
			[Token(Token = "0x40006D7")]
			Always,
			[Token(Token = "0x40006D8")]
			Never,
			[Token(Token = "0x40006D9")]
			Daily,
			[Token(Token = "0x40006DA")]
			Weekly,
			[Token(Token = "0x40006DB")]
			Monthly,
			[Token(Token = "0x40006DC")]
			OnlyOnce,
			[Token(Token = "0x40006DD")]
			EveryOtherDay
		}

		[Token(Token = "0x2000104")]
		public enum eGoogleUpdateSynchronization
		{
			[Token(Token = "0x40006DF")]
			Manual,
			[Token(Token = "0x40006E0")]
			OnSceneLoaded,
			[Token(Token = "0x40006E1")]
			AsSoonAsDownloaded
		}

		[Serializable]
		[Token(Token = "0x2000105")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F0458", Offset = "0x6F0458")]
		private sealed class <>c
		{
			[Token(Token = "0x40006E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40006E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<UnityEngine.Object> <>9__39_0;

			[Token(Token = "0x40006E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<UnityEngine.Object, string> <>9__39_1;

			[Token(Token = "0x40006E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<IGrouping<string, UnityEngine.Object>, string> <>9__39_2;

			[Token(Token = "0x40006E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Func<IGrouping<string, UnityEngine.Object>, UnityEngine.Object> <>9__39_3;

			[Token(Token = "0x40006E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public static Comparison<TermData> <>9__43_0;

			[Token(Token = "0x40006E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public static Comparison<TermData> <>9__47_0;

			[Token(Token = "0x6000B8D")]
			[Address(RVA = "0x9280EC", Offset = "0x9280EC", VA = "0x9280EC")]
			public <>c()
			{
			}

			[Token(Token = "0x6000B8E")]
			[Address(RVA = "0x9280F4", Offset = "0x9280F4", VA = "0x9280F4")]
			internal bool <UpdateAssetDictionary>b__39_0(UnityEngine.Object x)
			{
				return default(bool);
			}

			[Token(Token = "0x6000B8F")]
			[Address(RVA = "0x92815C", Offset = "0x92815C", VA = "0x92815C")]
			internal string <UpdateAssetDictionary>b__39_1(UnityEngine.Object o)
			{
				return null;
			}

			[Token(Token = "0x6000B90")]
			[Address(RVA = "0x928178", Offset = "0x928178", VA = "0x928178")]
			internal string <UpdateAssetDictionary>b__39_2(IGrouping<string, UnityEngine.Object> g)
			{
				return null;
			}

			[Token(Token = "0x6000B91")]
			[Address(RVA = "0x928220", Offset = "0x928220", VA = "0x928220")]
			internal UnityEngine.Object <UpdateAssetDictionary>b__39_3(IGrouping<string, UnityEngine.Object> g)
			{
				return null;
			}

			[Token(Token = "0x6000B92")]
			[Address(RVA = "0x92826C", Offset = "0x92826C", VA = "0x92826C")]
			internal int <Export_I2CSV>b__43_0(TermData a, TermData b)
			{
				return default(int);
			}

			[Token(Token = "0x6000B93")]
			[Address(RVA = "0x928294", Offset = "0x928294", VA = "0x928294")]
			internal int <Export_CSV>b__47_0(TermData a, TermData b)
			{
				return default(int);
			}
		}

		[Token(Token = "0x2000106")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F0468", Offset = "0x6F0468")]
		private sealed class <Import_Google_Coroutine>d__65 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40006E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40006EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40006EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LanguageSourceData <>4__this;

			[Token(Token = "0x40006EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool JustCheck;

			[Token(Token = "0x40006ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UnityWebRequest <www>5__2;

			[Token(Token = "0x17000416")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000B97")]
				[Address(RVA = "0x9285E0", Offset = "0x9285E0", VA = "0x9285E0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000417")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000B99")]
				[Address(RVA = "0x928628", Offset = "0x928628", VA = "0x928628", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000B94")]
			[Address(RVA = "0x9282BC", Offset = "0x9282BC", VA = "0x9282BC")]
			[DebuggerHidden]
			public <Import_Google_Coroutine>d__65(int <>1__state)
			{
			}

			[Token(Token = "0x6000B95")]
			[Address(RVA = "0x9282E8", Offset = "0x9282E8", VA = "0x9282E8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000B96")]
			[Address(RVA = "0x9282EC", Offset = "0x9282EC", VA = "0x9282EC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000B98")]
			[Address(RVA = "0x9285E8", Offset = "0x9285E8", VA = "0x9285E8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[NonSerialized]
		[Token(Token = "0x40006B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ILanguageSource owner;

		[Token(Token = "0x40006B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool UserAgreesToHaveItOnTheScene;

		[Token(Token = "0x40006B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool UserAgreesToHaveItInsideThePluginsFolder;

		[Token(Token = "0x40006B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		public bool GoogleLiveSyncIsUptoDate;

		[NonSerialized]
		[Token(Token = "0x40006B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
		public bool mIsGlobalSource;

		[Token(Token = "0x40006B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<TermData> mTerms;

		[Token(Token = "0x40006B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool CaseInsensitiveTerms;

		[NonSerialized]
		[Token(Token = "0x40006B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Dictionary<string, TermData> mDictionary;

		[Token(Token = "0x40006BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public MissingTranslationAction OnMissingTranslation;

		[Token(Token = "0x40006BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string mTerm_AppName;

		[Token(Token = "0x40006BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public List<LanguageData> mLanguages;

		[Token(Token = "0x40006BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool IgnoreDeviceLanguage;

		[Token(Token = "0x40006BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public eAllowUnloadLanguages _AllowUnloadingLanguages;

		[Token(Token = "0x40006BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public string Google_WebServiceURL;

		[Token(Token = "0x40006C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public string Google_SpreadsheetKey;

		[Token(Token = "0x40006C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public string Google_SpreadsheetName;

		[Token(Token = "0x40006C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public string Google_LastUpdatedVersion;

		[Token(Token = "0x40006C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public eGoogleUpdateFrequency GoogleUpdateFrequency;

		[Token(Token = "0x40006C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public eGoogleUpdateFrequency GoogleInEditorCheckFrequency;

		[Token(Token = "0x40006C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public eGoogleUpdateSynchronization GoogleUpdateSynchronization;

		[Token(Token = "0x40006C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public float GoogleUpdateDelay;

		[Token(Token = "0x40006C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public List<UnityEngine.Object> Assets;

		[NonSerialized]
		[Token(Token = "0x40006C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public Dictionary<string, UnityEngine.Object> mAssetDictionary;

		[Token(Token = "0x40006CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private string mDelayedGoogleData;

		[Token(Token = "0x40006CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static string EmptyCategory;

		[Token(Token = "0x40006CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static char[] CategorySeparators;

		[Token(Token = "0x17000415")]
		public UnityEngine.Object ownerObject
		{
			[Token(Token = "0x6000B3D")]
			[Address(RVA = "0xC4BBA4", Offset = "0xC4BBA4", VA = "0xC4BBA4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x14000018")]
		public event LanguageSource.fnOnSourceUpdated Event_OnSourceUpdateFromGoogle
		{
			[Token(Token = "0x6000B3E")]
			[Address(RVA = "0xC4B954", Offset = "0xC4B954", VA = "0xC4B954")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FA358", Offset = "0x6FA358")]
			add
			{
			}
			[Token(Token = "0x6000B3F")]
			[Address(RVA = "0xC4BC24", Offset = "0xC4BC24", VA = "0xC4BC24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FA368", Offset = "0x6FA368")]
			remove
			{
			}
		}

		[Token(Token = "0x6000B40")]
		[Address(RVA = "0xC4B184", Offset = "0xC4B184", VA = "0xC4B184")]
		public void Awake()
		{
		}

		[Token(Token = "0x6000B41")]
		[Address(RVA = "0xC4B220", Offset = "0xC4B220", VA = "0xC4B220")]
		public void OnDestroy()
		{
		}

		[Token(Token = "0x6000B42")]
		[Address(RVA = "0xC4C780", Offset = "0xC4C780", VA = "0xC4C780")]
		public bool IsEqualTo(LanguageSourceData Source)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B43")]
		[Address(RVA = "0xC4CD34", Offset = "0xC4CD34", VA = "0xC4CD34")]
		internal bool ManagerHasASimilarSource()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B44")]
		[Address(RVA = "0xC4CE5C", Offset = "0xC4CE5C", VA = "0xC4CE5C")]
		public void ClearAllData()
		{
		}

		[Token(Token = "0x6000B45")]
		[Address(RVA = "0xC4CF1C", Offset = "0xC4CF1C", VA = "0xC4CF1C")]
		public bool IsGlobalSource()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B46")]
		[Address(RVA = "0xC4CF24", Offset = "0xC4CF24", VA = "0xC4CF24")]
		public void Editor_SetDirty()
		{
		}

		[Token(Token = "0x6000B47")]
		[Address(RVA = "0xC4C230", Offset = "0xC4C230", VA = "0xC4C230")]
		public void UpdateAssetDictionary()
		{
		}

		[Token(Token = "0x6000B48")]
		[Address(RVA = "0xC4CF28", Offset = "0xC4CF28", VA = "0xC4CF28")]
		public UnityEngine.Object FindAsset(string Name)
		{
			return null;
		}

		[Token(Token = "0x6000B49")]
		[Address(RVA = "0xC4D000", Offset = "0xC4D000", VA = "0xC4D000")]
		public bool HasAsset(UnityEngine.Object Obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B4A")]
		[Address(RVA = "0xC4D064", Offset = "0xC4D064", VA = "0xC4D064")]
		public void AddAsset(UnityEngine.Object Obj)
		{
		}

		[Token(Token = "0x6000B4B")]
		[Address(RVA = "0xC4D10C", Offset = "0xC4D10C", VA = "0xC4D10C")]
		public string Export_I2CSV(string Category, char Separator = ',', bool specializationsAsRows = true)
		{
			return null;
		}

		[Token(Token = "0x6000B4C")]
		[Address(RVA = "0xC4D858", Offset = "0xC4D858", VA = "0xC4D858")]
		private static void AppendI2Term(StringBuilder Builder, int nLanguages, string Term, TermData termData, char Separator, string forceSpecialization)
		{
		}

		[Token(Token = "0x6000B4D")]
		[Address(RVA = "0xC4DAE0", Offset = "0xC4DAE0", VA = "0xC4DAE0")]
		private static void AppendI2Text(StringBuilder Builder, string text)
		{
		}

		[Token(Token = "0x6000B4E")]
		[Address(RVA = "0xC4DBBC", Offset = "0xC4DBBC", VA = "0xC4DBBC")]
		private string Export_Language_to_Cache(int langIndex, bool fillTermWithFallback)
		{
			return null;
		}

		[Token(Token = "0x6000B4F")]
		[Address(RVA = "0xC4E160", Offset = "0xC4E160", VA = "0xC4E160")]
		public string Export_CSV(string Category, char Separator = ',', bool specializationsAsRows = true)
		{
			return null;
		}

		[Token(Token = "0x6000B50")]
		[Address(RVA = "0xC4EAFC", Offset = "0xC4EAFC", VA = "0xC4EAFC")]
		private static void AppendTerm(StringBuilder Builder, int nLanguages, string Term, TermData termData, string specialization, char Separator)
		{
		}

		[Token(Token = "0x6000B51")]
		[Address(RVA = "0xC4E994", Offset = "0xC4E994", VA = "0xC4E994")]
		private static void AppendString(StringBuilder Builder, string Text, char Separator)
		{
		}

		[Token(Token = "0x6000B52")]
		[Address(RVA = "0xC4ED8C", Offset = "0xC4ED8C", VA = "0xC4ED8C")]
		private static void AppendTranslation(StringBuilder Builder, string Text, char Separator, string tags)
		{
		}

		[Token(Token = "0x6000B53")]
		[Address(RVA = "0xC4EF14", Offset = "0xC4EF14", VA = "0xC4EF14")]
		public UnityWebRequest Export_Google_CreateWWWcall(eSpreadsheetUpdateMode UpdateMode = eSpreadsheetUpdateMode.Replace)
		{
			return null;
		}

		[Token(Token = "0x6000B54")]
		[Address(RVA = "0xC4F0E4", Offset = "0xC4F0E4", VA = "0xC4F0E4")]
		private string Export_Google_CreateData()
		{
			return null;
		}

		[Token(Token = "0x6000B55")]
		[Address(RVA = "0xC4F734", Offset = "0xC4F734", VA = "0xC4F734")]
		public string Import_CSV(string Category, string CSVstring, eSpreadsheetUpdateMode UpdateMode = eSpreadsheetUpdateMode.Replace, char Separator = ',')
		{
			return null;
		}

		[Token(Token = "0x6000B56")]
		[Address(RVA = "0xC502F4", Offset = "0xC502F4", VA = "0xC502F4")]
		public string Import_I2CSV(string Category, string I2CSVstring, eSpreadsheetUpdateMode UpdateMode = eSpreadsheetUpdateMode.Replace)
		{
			return null;
		}

		[Token(Token = "0x6000B57")]
		[Address(RVA = "0xC4F780", Offset = "0xC4F780", VA = "0xC4F780")]
		public string Import_CSV(string Category, List<string[]> CSV, eSpreadsheetUpdateMode UpdateMode = eSpreadsheetUpdateMode.Replace)
		{
			return null;
		}

		[Token(Token = "0x6000B58")]
		[Address(RVA = "0xC5033C", Offset = "0xC5033C", VA = "0xC5033C")]
		private bool ArrayContains(string MainText, params string[] texts)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B59")]
		[Address(RVA = "0xC50748", Offset = "0xC50748", VA = "0xC50748")]
		public static eTermType GetTermType(string type)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6000B5A")]
		[Address(RVA = "0xC509DC", Offset = "0xC509DC", VA = "0xC509DC")]
		private void Import_Language_from_Cache(int langIndex, string langData, bool useFallback, bool onlyCurrentSpecialization)
		{
		}

		[Token(Token = "0x6000B5B")]
		[Address(RVA = "0xC50C1C", Offset = "0xC50C1C", VA = "0xC50C1C")]
		public static void FreeUnusedLanguages()
		{
		}

		[Token(Token = "0x6000B5C")]
		[Address(RVA = "0xC50D7C", Offset = "0xC50D7C", VA = "0xC50D7C")]
		public void Import_Google_FromCache()
		{
		}

		[Token(Token = "0x6000B5D")]
		[Address(RVA = "0xC511C8", Offset = "0xC511C8", VA = "0xC511C8")]
		private bool IsNewerVersion(string currentVersion, string newVersion)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B5E")]
		[Address(RVA = "0xC518C4", Offset = "0xC518C4", VA = "0xC518C4")]
		public void Import_Google(bool ForceUpdate, bool justCheck)
		{
		}

		[Token(Token = "0x6000B5F")]
		[Address(RVA = "0xC50FEC", Offset = "0xC50FEC", VA = "0xC50FEC")]
		private string GetSourcePlayerPrefName()
		{
			return null;
		}

		[Token(Token = "0x6000B60")]
		[Address(RVA = "0xC51B5C", Offset = "0xC51B5C", VA = "0xC51B5C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6FA378", Offset = "0x6FA378")]
		private IEnumerator Import_Google_Coroutine(bool JustCheck)
		{
			return null;
		}

		[Token(Token = "0x6000B61")]
		[Address(RVA = "0xC51BDC", Offset = "0xC51BDC", VA = "0xC51BDC")]
		private void ApplyDownloadedDataOnSceneLoaded(Scene scene, LoadSceneMode mode)
		{
		}

		[Token(Token = "0x6000B62")]
		[Address(RVA = "0xC51CA0", Offset = "0xC51CA0", VA = "0xC51CA0")]
		public void ApplyDownloadedDataFromGoogle()
		{
		}

		[Token(Token = "0x6000B63")]
		[Address(RVA = "0xC51E18", Offset = "0xC51E18", VA = "0xC51E18")]
		public UnityWebRequest Import_Google_CreateWWWcall(bool ForceUpdate, bool justCheck)
		{
			return null;
		}

		[Token(Token = "0x6000B64")]
		[Address(RVA = "0xC51F8C", Offset = "0xC51F8C", VA = "0xC51F8C")]
		public bool HasGoogleSpreadsheet()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B65")]
		[Address(RVA = "0xC51258", Offset = "0xC51258", VA = "0xC51258")]
		public string Import_Google_Result(string JsonString, eSpreadsheetUpdateMode UpdateMode, bool saveInPlayerPrefs = false)
		{
			return null;
		}

		[Token(Token = "0x6000B66")]
		[Address(RVA = "0xC4C900", Offset = "0xC4C900", VA = "0xC4C900")]
		public int GetLanguageIndex(string language, bool AllowDiscartingRegion = true, bool SkipDisabled = true)
		{
			return default(int);
		}

		[Token(Token = "0x6000B67")]
		[Address(RVA = "0xC52210", Offset = "0xC52210", VA = "0xC52210")]
		public LanguageData GetLanguageData(string language, bool AllowDiscartingRegion = true)
		{
			return null;
		}

		[Token(Token = "0x6000B68")]
		[Address(RVA = "0xC522AC", Offset = "0xC522AC", VA = "0xC522AC")]
		public bool IsCurrentLanguage(int languageIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B69")]
		[Address(RVA = "0xC503E0", Offset = "0xC503E0", VA = "0xC503E0")]
		public int GetLanguageIndexFromCode(string Code, bool exactMatch = true, bool ignoreDisabled = false)
		{
			return default(int);
		}

		[Token(Token = "0x6000B6A")]
		[Address(RVA = "0xC52030", Offset = "0xC52030", VA = "0xC52030")]
		public static int GetCommonWordInLanguageNames(string Language1, string Language2)
		{
			return default(int);
		}

		[Token(Token = "0x6000B6B")]
		[Address(RVA = "0xC52364", Offset = "0xC52364", VA = "0xC52364")]
		public static bool AreTheSameLanguage(string Language1, string Language2)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B6C")]
		[Address(RVA = "0xC523FC", Offset = "0xC523FC", VA = "0xC523FC")]
		public static string GetLanguageWithoutRegion(string Language)
		{
			return null;
		}

		[Token(Token = "0x6000B6D")]
		[Address(RVA = "0xC52498", Offset = "0xC52498", VA = "0xC52498")]
		public void AddLanguage(string LanguageName)
		{
		}

		[Token(Token = "0x6000B6E")]
		[Address(RVA = "0xC5251C", Offset = "0xC5251C", VA = "0xC5251C")]
		public void AddLanguage(string LanguageName, string LanguageCode)
		{
		}

		[Token(Token = "0x6000B6F")]
		[Address(RVA = "0xC526D8", Offset = "0xC526D8", VA = "0xC526D8")]
		public void RemoveLanguage(string LanguageName)
		{
		}

		[Token(Token = "0x6000B70")]
		[Address(RVA = "0xC52A00", Offset = "0xC52A00", VA = "0xC52A00")]
		public List<string> GetLanguages(bool skipDisabled = true)
		{
			return null;
		}

		[Token(Token = "0x6000B71")]
		[Address(RVA = "0xC52B58", Offset = "0xC52B58", VA = "0xC52B58")]
		public List<string> GetLanguagesCode(bool allowRegions = true, bool skipDisabled = true)
		{
			return null;
		}

		[Token(Token = "0x6000B72")]
		[Address(RVA = "0xC52D24", Offset = "0xC52D24", VA = "0xC52D24")]
		public bool IsLanguageEnabled(string Language)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B73")]
		[Address(RVA = "0xC52DCC", Offset = "0xC52DCC", VA = "0xC52DCC")]
		public void EnableLanguage(string Language, bool bEnabled)
		{
		}

		[Token(Token = "0x6000B74")]
		[Address(RVA = "0xC52E7C", Offset = "0xC52E7C", VA = "0xC52E7C")]
		public bool AllowUnloadingLanguages()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B75")]
		[Address(RVA = "0xC52E8C", Offset = "0xC52E8C", VA = "0xC52E8C")]
		private string GetSavedLanguageFileName(int languageIndex)
		{
			return null;
		}

		[Token(Token = "0x6000B76")]
		[Address(RVA = "0xC53080", Offset = "0xC53080", VA = "0xC53080")]
		public void LoadLanguage(int languageIndex, bool UnloadOtherLanguages, bool useFallback, bool onlyCurrentSpecialization, bool forceLoad)
		{
		}

		[Token(Token = "0x6000B77")]
		[Address(RVA = "0xC5346C", Offset = "0xC5346C", VA = "0xC5346C")]
		public void LoadAllLanguages(bool forceLoad = false)
		{
		}

		[Token(Token = "0x6000B78")]
		[Address(RVA = "0xC53210", Offset = "0xC53210", VA = "0xC53210")]
		public void UnloadLanguage(int languageIndex)
		{
		}

		[Token(Token = "0x6000B79")]
		[Address(RVA = "0xC508C0", Offset = "0xC508C0", VA = "0xC508C0")]
		public void SaveLanguages(bool unloadAll, PersistentStorage.eFileType fileLocation = PersistentStorage.eFileType.Temporal)
		{
		}

		[Token(Token = "0x6000B7A")]
		[Address(RVA = "0xC50814", Offset = "0xC50814", VA = "0xC50814")]
		public bool HasUnloadedLanguages()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B7B")]
		[Address(RVA = "0xC4F4E4", Offset = "0xC4F4E4", VA = "0xC4F4E4")]
		public List<string> GetCategories(bool OnlyMainCategory = false, [Optional] List<string> Categories)
		{
			return null;
		}

		[Token(Token = "0x6000B7C")]
		[Address(RVA = "0xC53600", Offset = "0xC53600", VA = "0xC53600")]
		public static string GetKeyFromFullTerm(string FullTerm, bool OnlyMainCategory = false)
		{
			return null;
		}

		[Token(Token = "0x6000B7D")]
		[Address(RVA = "0xC534FC", Offset = "0xC534FC", VA = "0xC534FC")]
		public static string GetCategoryFromFullTerm(string FullTerm, bool OnlyMainCategory = false)
		{
			return null;
		}

		[Token(Token = "0x6000B7E")]
		[Address(RVA = "0xC536E0", Offset = "0xC536E0", VA = "0xC536E0")]
		public static void DeserializeFullTerm(string FullTerm, out string Key, out string Category, bool OnlyMainCategory = false)
		{
		}

		[Token(Token = "0x6000B7F")]
		[Address(RVA = "0xC4BEF0", Offset = "0xC4BEF0", VA = "0xC4BEF0")]
		public void UpdateDictionary(bool force = false)
		{
		}

		[Token(Token = "0x6000B80")]
		[Address(RVA = "0xC53810", Offset = "0xC53810", VA = "0xC53810")]
		public string GetTranslation(string term, [Optional] string overrideLanguage, [Optional] string overrideSpecialization, bool skipDisabled = false, bool allowCategoryMistmatch = false)
		{
			return null;
		}

		[Token(Token = "0x6000B81")]
		[Address(RVA = "0xC538B8", Offset = "0xC538B8", VA = "0xC538B8")]
		public bool TryGetTranslation(string term, out string Translation, [Optional] string overrideLanguage, [Optional] string overrideSpecialization, bool skipDisabled = false, bool allowCategoryMistmatch = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B82")]
		[Address(RVA = "0xC4DE8C", Offset = "0xC4DE8C", VA = "0xC4DE8C")]
		private bool TryGetFallbackTranslation(TermData termData, out string Translation, int langIndex, [Optional] string overrideSpecialization, bool skipDisabled = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B83")]
		[Address(RVA = "0xC53AEC", Offset = "0xC53AEC", VA = "0xC53AEC")]
		public TermData AddTerm(string term)
		{
			return null;
		}

		[Token(Token = "0x6000B84")]
		[Address(RVA = "0xC4CB00", Offset = "0xC4CB00", VA = "0xC4CB00")]
		public TermData GetTermData(string term, bool allowCategoryMistmatch = false)
		{
			return null;
		}

		[Token(Token = "0x6000B85")]
		[Address(RVA = "0xC53CE0", Offset = "0xC53CE0", VA = "0xC53CE0")]
		public bool ContainsTerm(string term)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B86")]
		[Address(RVA = "0xC53D00", Offset = "0xC53D00", VA = "0xC53D00")]
		public List<string> GetTermsList([Optional] string Category)
		{
			return null;
		}

		[Token(Token = "0x6000B87")]
		[Address(RVA = "0xC53AF8", Offset = "0xC53AF8", VA = "0xC53AF8")]
		public TermData AddTerm(string NewTerm, eTermType termType, bool SaveSource = true)
		{
			return null;
		}

		[Token(Token = "0x6000B88")]
		[Address(RVA = "0xC53F18", Offset = "0xC53F18", VA = "0xC53F18")]
		public void RemoveTerm(string term)
		{
		}

		[Token(Token = "0x6000B89")]
		[Address(RVA = "0xC505A8", Offset = "0xC505A8", VA = "0xC505A8")]
		public static void ValidateFullTerm(ref string Term)
		{
		}

		[Token(Token = "0x6000B8A")]
		[Address(RVA = "0xC4B6F8", Offset = "0xC4B6F8", VA = "0xC4B6F8")]
		public LanguageSourceData()
		{
		}
	}
	[Token(Token = "0x2000107")]
	public enum eSpreadsheetUpdateMode
	{
		[Token(Token = "0x40006EF")]
		None,
		[Token(Token = "0x40006F0")]
		Replace,
		[Token(Token = "0x40006F1")]
		Merge,
		[Token(Token = "0x40006F2")]
		AddNewTerms
	}
	[Token(Token = "0x2000108")]
	public class LocalizationReader
	{
		[Token(Token = "0x6000B9A")]
		[Address(RVA = "0x9DADDC", Offset = "0x9DADDC", VA = "0x9DADDC")]
		public static Dictionary<string, string> ReadTextAsset(TextAsset asset)
		{
			return null;
		}

		[Token(Token = "0x6000B9B")]
		[Address(RVA = "0x9DB078", Offset = "0x9DB078", VA = "0x9DB078")]
		public static bool TextAsset_ReadLine(string line, out string key, out string value, out string category, out string comment, out string termType)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B9C")]
		[Address(RVA = "0x9DB45C", Offset = "0x9DB45C", VA = "0x9DB45C")]
		public static string ReadCSVfile(string Path, Encoding encoding)
		{
			return null;
		}

		[Token(Token = "0x6000B9D")]
		[Address(RVA = "0x9DB658", Offset = "0x9DB658", VA = "0x9DB658")]
		public static List<string[]> ReadCSV(string Text, char Separator = ',')
		{
			return null;
		}

		[Token(Token = "0x6000B9E")]
		[Address(RVA = "0x9DB740", Offset = "0x9DB740", VA = "0x9DB740")]
		private static string[] ParseCSVline(string Line, ref int iStart, char Separator)
		{
			return null;
		}

		[Token(Token = "0x6000B9F")]
		[Address(RVA = "0x9DB934", Offset = "0x9DB934", VA = "0x9DB934")]
		private static void AddCSVtoken(ref List<string> list, ref string Line, int iEnd, ref int iWordStart)
		{
		}

		[Token(Token = "0x6000BA0")]
		[Address(RVA = "0x9DBA70", Offset = "0x9DBA70", VA = "0x9DBA70")]
		public static List<string[]> ReadI2CSV(string Text)
		{
			return null;
		}

		[Token(Token = "0x6000BA1")]
		[Address(RVA = "0x9DB3CC", Offset = "0x9DB3CC", VA = "0x9DB3CC")]
		public static void ValidateFullTerm(ref string Term)
		{
		}

		[Token(Token = "0x6000BA2")]
		[Address(RVA = "0x9DBC4C", Offset = "0x9DBC4C", VA = "0x9DBC4C")]
		public static string EncodeString(string str)
		{
			return null;
		}

		[Token(Token = "0x6000BA3")]
		[Address(RVA = "0x9DB320", Offset = "0x9DB320", VA = "0x9DB320")]
		public static string DecodeString(string str)
		{
			return null;
		}

		[Token(Token = "0x6000BA4")]
		[Address(RVA = "0x9DBD48", Offset = "0x9DBD48", VA = "0x9DBD48")]
		public LocalizationReader()
		{
		}
	}
	[Token(Token = "0x2000109")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x6F0478", Offset = "0x6F0478")]
	public class Localize : MonoBehaviour
	{
		[Token(Token = "0x200010A")]
		public enum TermModification
		{
			[Token(Token = "0x4000713")]
			DontModify,
			[Token(Token = "0x4000714")]
			ToUpper,
			[Token(Token = "0x4000715")]
			ToLower,
			[Token(Token = "0x4000716")]
			ToUpperFirst,
			[Token(Token = "0x4000717")]
			ToTitle
		}

		[Serializable]
		[Token(Token = "0x200010B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F04B0", Offset = "0x6F04B0")]
		private sealed class <>c
		{
			[Token(Token = "0x4000718")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000719")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<UnityEngine.Object> <>9__49_0;

			[Token(Token = "0x400071A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<UnityEngine.Object, string> <>9__49_1;

			[Token(Token = "0x400071B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<IGrouping<string, UnityEngine.Object>, string> <>9__49_2;

			[Token(Token = "0x400071C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Func<IGrouping<string, UnityEngine.Object>, UnityEngine.Object> <>9__49_3;

			[Token(Token = "0x6000BBE")]
			[Address(RVA = "0x9293E0", Offset = "0x9293E0", VA = "0x9293E0")]
			public <>c()
			{
			}

			[Token(Token = "0x6000BBF")]
			[Address(RVA = "0x9293E8", Offset = "0x9293E8", VA = "0x9293E8")]
			internal bool <UpdateAssetDictionary>b__49_0(UnityEngine.Object x)
			{
				return default(bool);
			}

			[Token(Token = "0x6000BC0")]
			[Address(RVA = "0x929450", Offset = "0x929450", VA = "0x929450")]
			internal string <UpdateAssetDictionary>b__49_1(UnityEngine.Object o)
			{
				return null;
			}

			[Token(Token = "0x6000BC1")]
			[Address(RVA = "0x92946C", Offset = "0x92946C", VA = "0x92946C")]
			internal string <UpdateAssetDictionary>b__49_2(IGrouping<string, UnityEngine.Object> g)
			{
				return null;
			}

			[Token(Token = "0x6000BC2")]
			[Address(RVA = "0x929514", Offset = "0x929514", VA = "0x929514")]
			internal UnityEngine.Object <UpdateAssetDictionary>b__49_3(IGrouping<string, UnityEngine.Object> g)
			{
				return null;
			}
		}

		[Token(Token = "0x40006F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string mTerm;

		[Token(Token = "0x40006F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string mTermSecondary;

		[NonSerialized]
		[Token(Token = "0x40006F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string FinalTerm;

		[NonSerialized]
		[Token(Token = "0x40006F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string FinalSecondaryTerm;

		[Token(Token = "0x40006F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public TermModification PrimaryTermModifier;

		[Token(Token = "0x40006F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public TermModification SecondaryTermModifier;

		[Token(Token = "0x40006F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string TermPrefix;

		[Token(Token = "0x40006FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string TermSuffix;

		[Token(Token = "0x40006FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool LocalizeOnAwake;

		[Token(Token = "0x40006FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private string LastLocalizedLanguage;

		[Token(Token = "0x40006FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public bool IgnoreRTL;

		[Token(Token = "0x40006FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public int MaxCharactersInRTL;

		[Token(Token = "0x40006FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public bool IgnoreNumbersInRTL;

		[Token(Token = "0x4000700")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
		public bool CorrectAlignmentForRTL;

		[Token(Token = "0x4000701")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6A")]
		public bool AddSpacesToJoinedLanguages;

		[Token(Token = "0x4000702")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6B")]
		public bool AllowLocalizedParameters;

		[Token(Token = "0x4000703")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public List<UnityEngine.Object> TranslatedObjects;

		[NonSerialized]
		[Token(Token = "0x4000704")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Dictionary<string, UnityEngine.Object> mAssetDictionary;

		[Token(Token = "0x4000705")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public UnityEvent LocalizeEvent;

		[Token(Token = "0x4000706")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static string MainTranslation;

		[Token(Token = "0x4000707")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static string SecondaryTranslation;

		[Token(Token = "0x4000708")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static string CallBackTerm;

		[Token(Token = "0x4000709")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static string CallBackSecondaryTerm;

		[Token(Token = "0x400070A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static Localize CurrentLocalizeComponent;

		[Token(Token = "0x400070B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public bool AlwaysForceLocalize;

		[Token(Token = "0x400070C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		public EventCallback LocalizeCallBack;

		[Token(Token = "0x400070D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public bool mGUI_ShowReferences;

		[Token(Token = "0x400070E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
		public bool mGUI_ShowTems;

		[Token(Token = "0x400070F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9A")]
		public bool mGUI_ShowCallback;

		[Token(Token = "0x4000710")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public ILocalizeTarget mLocalizeTarget;

		[Token(Token = "0x4000711")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public string mLocalizeTargetName;

		[Token(Token = "0x17000418")]
		public string Term
		{
			[Token(Token = "0x6000BA5")]
			[Address(RVA = "0x9DBE40", Offset = "0x9DBE40", VA = "0x9DBE40")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000BA6")]
			[Address(RVA = "0x9DBE48", Offset = "0x9DBE48", VA = "0x9DBE48")]
			set
			{
			}
		}

		[Token(Token = "0x17000419")]
		public string SecondaryTerm
		{
			[Token(Token = "0x6000BA7")]
			[Address(RVA = "0x9DBE8C", Offset = "0x9DBE8C", VA = "0x9DBE8C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000BA8")]
			[Address(RVA = "0x9DBE94", Offset = "0x9DBE94", VA = "0x9DBE94")]
			set
			{
			}
		}

		[Token(Token = "0x6000BA9")]
		[Address(RVA = "0x9DBEF4", Offset = "0x9DBEF4", VA = "0x9DBEF4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000BAA")]
		[Address(RVA = "0x9DD130", Offset = "0x9DD130", VA = "0x9DD130")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000BAB")]
		[Address(RVA = "0x9DD138", Offset = "0x9DD138", VA = "0x9DD138")]
		public bool HasCallback()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BAC")]
		[Address(RVA = "0x9DC840", Offset = "0x9DC840", VA = "0x9DC840")]
		public void OnLocalize(bool Force = false)
		{
		}

		[Token(Token = "0x6000BAD")]
		[Address(RVA = "0x9DC2F8", Offset = "0x9DC2F8", VA = "0x9DC2F8")]
		public bool FindTarget()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BAE")]
		[Address(RVA = "0x9DD18C", Offset = "0x9DD18C", VA = "0x9DD18C")]
		public void GetFinalTerms(out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x6000BAF")]
		[Address(RVA = "0x9DD2F4", Offset = "0x9DD2F4", VA = "0x9DD2F4")]
		public string GetMainTargetsText()
		{
			return null;
		}

		[Token(Token = "0x6000BB0")]
		[Address(RVA = "0x9DD3C8", Offset = "0x9DD3C8", VA = "0x9DD3C8")]
		public void SetFinalTerms(string Main, string Secondary, out string primaryTerm, out string secondaryTerm, bool RemoveNonASCII)
		{
		}

		[Token(Token = "0x6000BB1")]
		[Address(RVA = "0x9DBE4C", Offset = "0x9DBE4C", VA = "0x9DBE4C")]
		public void SetTerm(string primary)
		{
		}

		[Token(Token = "0x6000BB2")]
		[Address(RVA = "0x9DBEA0", Offset = "0x9DBEA0", VA = "0x9DBEA0")]
		public void SetTerm(string primary, string secondary)
		{
		}

		[Token(Token = "0x6000BB3")]
		internal T GetSecondaryTranslatedObj<T>(ref string mainTranslation, ref string secondaryTranslation) where T : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x6000BB4")]
		[Address(RVA = "0x9DBF38", Offset = "0x9DBF38", VA = "0x9DBF38")]
		public void UpdateAssetDictionary()
		{
		}

		[Token(Token = "0x6000BB5")]
		internal T GetObject<T>(string Translation) where T : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x6000BB6")]
		private T GetTranslatedObject<T>(string Translation) where T : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x6000BB7")]
		[Address(RVA = "0x9DD410", Offset = "0x9DD410", VA = "0x9DD410")]
		private void DeserializeTranslation(string translation, out string value, out string secondary)
		{
		}

		[Token(Token = "0x6000BB8")]
		public T FindTranslatedObject<T>(string value) where T : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x6000BB9")]
		[Address(RVA = "0x9DD500", Offset = "0x9DD500", VA = "0x9DD500")]
		public bool HasTranslatedObject(UnityEngine.Object Obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BBA")]
		[Address(RVA = "0x9DD594", Offset = "0x9DD594", VA = "0x9DD594")]
		public void AddTranslatedObject(UnityEngine.Object Obj)
		{
		}

		[Token(Token = "0x6000BBB")]
		[Address(RVA = "0x9DD63C", Offset = "0x9DD63C", VA = "0x9DD63C")]
		public void SetGlobalLanguage(string Language)
		{
		}

		[Token(Token = "0x6000BBC")]
		[Address(RVA = "0x9DD6A0", Offset = "0x9DD6A0", VA = "0x9DD6A0")]
		public Localize()
		{
		}
	}
	[Token(Token = "0x200010C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x6F04C0", Offset = "0x6F04C0")]
	public class LocalizeDropdown : MonoBehaviour
	{
		[Token(Token = "0x400071D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<string> _Terms;

		[Token(Token = "0x6000BC3")]
		[Address(RVA = "0x9DD878", Offset = "0x9DD878", VA = "0x9DD878")]
		public void Start()
		{
		}

		[Token(Token = "0x6000BC4")]
		[Address(RVA = "0x9DDA2C", Offset = "0x9DDA2C", VA = "0x9DDA2C")]
		public void OnDestroy()
		{
		}

		[Token(Token = "0x6000BC5")]
		[Address(RVA = "0x9DDAD4", Offset = "0x9DDAD4", VA = "0x9DDAD4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000BC6")]
		[Address(RVA = "0x9DD928", Offset = "0x9DD928", VA = "0x9DD928")]
		public void OnLocalize()
		{
		}

		[Token(Token = "0x6000BC7")]
		[Address(RVA = "0x9DDB30", Offset = "0x9DDB30", VA = "0x9DDB30")]
		private void FillValues()
		{
		}

		[Token(Token = "0x6000BC8")]
		[Address(RVA = "0x9DDD04", Offset = "0x9DDD04", VA = "0x9DDD04")]
		public void UpdateLocalization()
		{
		}

		[Token(Token = "0x6000BC9")]
		[Address(RVA = "0x9DE158", Offset = "0x9DE158", VA = "0x9DE158")]
		public void UpdateLocalizationTMPro()
		{
		}

		[Token(Token = "0x6000BCA")]
		[Address(RVA = "0x9DDF9C", Offset = "0x9DDF9C", VA = "0x9DDF9C")]
		private void FillValuesTMPro()
		{
		}

		[Token(Token = "0x6000BCB")]
		[Address(RVA = "0x9DE3E4", Offset = "0x9DE3E4", VA = "0x9DE3E4")]
		public LocalizeDropdown()
		{
		}
	}
	[Token(Token = "0x200010D")]
	public static class LocalizationManager
	{
		[Token(Token = "0x200010E")]
		public delegate object _GetParam(string param);

		[Token(Token = "0x200010F")]
		public delegate void OnLocalizeCallback();

		[Token(Token = "0x2000110")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F04F8", Offset = "0x6F04F8")]
		private sealed class <>c__DisplayClass33_0
		{
			[Token(Token = "0x400072E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<string> Languages;

			[Token(Token = "0x400072F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Func<string, bool> <>9__0;

			[Token(Token = "0x6000C18")]
			[Address(RVA = "0x9288B8", Offset = "0x9288B8", VA = "0x9288B8")]
			public <>c__DisplayClass33_0()
			{
			}

			[Token(Token = "0x6000C19")]
			[Address(RVA = "0x9288C0", Offset = "0x9288C0", VA = "0x9288C0")]
			internal bool <GetAllLanguages>b__0(string x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000111")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F0508", Offset = "0x6F0508")]
		private sealed class <>c__DisplayClass34_0
		{
			[Token(Token = "0x4000730")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<string> Languages;

			[Token(Token = "0x4000731")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Func<string, bool> <>9__0;

			[Token(Token = "0x6000C1A")]
			[Address(RVA = "0x928930", Offset = "0x928930", VA = "0x928930")]
			public <>c__DisplayClass34_0()
			{
			}

			[Token(Token = "0x6000C1B")]
			[Address(RVA = "0x928938", Offset = "0x928938", VA = "0x928938")]
			internal bool <GetAllLanguagesCode>b__0(string x)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x2000112")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F0518", Offset = "0x6F0518")]
		private sealed class <>c
		{
			[Token(Token = "0x4000732")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000733")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static _GetParam <>9__41_0;

			[Token(Token = "0x6000C1D")]
			[Address(RVA = "0x928848", Offset = "0x928848", VA = "0x928848")]
			public <>c()
			{
			}

			[Token(Token = "0x6000C1E")]
			[Address(RVA = "0x928850", Offset = "0x928850", VA = "0x928850")]
			internal object <ApplyLocalizationParams>b__41_0(string p)
			{
				return null;
			}
		}

		[Token(Token = "0x2000113")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F0528", Offset = "0x6F0528")]
		private sealed class <>c__DisplayClass42_0
		{
			[Token(Token = "0x4000734")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject root;

			[Token(Token = "0x6000C1F")]
			[Address(RVA = "0x9289A8", Offset = "0x9289A8", VA = "0x9289A8")]
			public <>c__DisplayClass42_0()
			{
			}

			[Token(Token = "0x6000C20")]
			[Address(RVA = "0x9289B0", Offset = "0x9289B0", VA = "0x9289B0")]
			internal object <ApplyLocalizationParams>b__0(string p)
			{
				return null;
			}
		}

		[Token(Token = "0x2000114")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F0538", Offset = "0x6F0538")]
		private sealed class <>c__DisplayClass43_0
		{
			[Token(Token = "0x4000735")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Dictionary<string, object> parameters;

			[Token(Token = "0x6000C21")]
			[Address(RVA = "0x928A28", Offset = "0x928A28", VA = "0x928A28")]
			public <>c__DisplayClass43_0()
			{
			}

			[Token(Token = "0x6000C22")]
			[Address(RVA = "0x928A30", Offset = "0x928A30", VA = "0x928A30")]
			internal object <ApplyLocalizationParams>b__0(string p)
			{
				return null;
			}
		}

		[Token(Token = "0x2000115")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F0548", Offset = "0x6F0548")]
		private sealed class <Delayed_Import_Google>d__59 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000736")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000737")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000738")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delay;

			[Token(Token = "0x4000739")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public LanguageSourceData source;

			[Token(Token = "0x400073A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public bool justCheck;

			[Token(Token = "0x1700041F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000C26")]
				[Address(RVA = "0x928D20", Offset = "0x928D20", VA = "0x928D20", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000420")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000C28")]
				[Address(RVA = "0x928D68", Offset = "0x928D68", VA = "0x928D68", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000C23")]
			[Address(RVA = "0x928C3C", Offset = "0x928C3C", VA = "0x928C3C")]
			[DebuggerHidden]
			public <Delayed_Import_Google>d__59(int <>1__state)
			{
			}

			[Token(Token = "0x6000C24")]
			[Address(RVA = "0x928C68", Offset = "0x928C68", VA = "0x928C68", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000C25")]
			[Address(RVA = "0x928C6C", Offset = "0x928C6C", VA = "0x928C6C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000C27")]
			[Address(RVA = "0x928D28", Offset = "0x928D28", VA = "0x928D28", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000116")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F0558", Offset = "0x6F0558")]
		private sealed class <>c__DisplayClass69_0
		{
			[Token(Token = "0x400073B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ILocalizeTargetDescriptor desc;

			[Token(Token = "0x6000C29")]
			[Address(RVA = "0x928AAC", Offset = "0x928AAC", VA = "0x928AAC")]
			public <>c__DisplayClass69_0()
			{
			}

			[Token(Token = "0x6000C2A")]
			[Address(RVA = "0x928AB4", Offset = "0x928AB4", VA = "0x928AB4")]
			internal bool <RegisterTarget>b__0(ILocalizeTargetDescriptor x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000117")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F0568", Offset = "0x6F0568")]
		private sealed class <Coroutine_LocalizeAll>d__84 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400073C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400073D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x17000421")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000C2E")]
				[Address(RVA = "0x928BEC", Offset = "0x928BEC", VA = "0x928BEC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000422")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000C30")]
				[Address(RVA = "0x928C34", Offset = "0x928C34", VA = "0x928C34", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000C2B")]
			[Address(RVA = "0x928AE0", Offset = "0x928AE0", VA = "0x928AE0")]
			[DebuggerHidden]
			public <Coroutine_LocalizeAll>d__84(int <>1__state)
			{
			}

			[Token(Token = "0x6000C2C")]
			[Address(RVA = "0x928B0C", Offset = "0x928B0C", VA = "0x928B0C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000C2D")]
			[Address(RVA = "0x928B10", Offset = "0x928B10", VA = "0x928B10", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000C2F")]
			[Address(RVA = "0x928BF4", Offset = "0x928BF4", VA = "0x928BF4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400071E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static string mCurrentLanguage;

		[Token(Token = "0x400071F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static string mLanguageCode;

		[Token(Token = "0x4000720")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static CultureInfo mCurrentCulture;

		[Token(Token = "0x4000721")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static bool mChangeCultureInfo;

		[Token(Token = "0x4000722")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public static bool IsRight2Left;

		[Token(Token = "0x4000723")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		public static bool HasJoinedWords;

		[Token(Token = "0x4000724")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static List<ILocalizationParamsManager> ParamManagers;

		[Token(Token = "0x4000725")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static string[] LanguagesRTL;

		[Token(Token = "0x4000726")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static List<LanguageSourceData> Sources;

		[Token(Token = "0x4000727")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public static string[] GlobalSources;

		[Token(Token = "0x4000728")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static string mCurrentDeviceLanguage;

		[Token(Token = "0x4000729")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public static List<ILocalizeTargetDescriptor> mLocalizeTargets;

		[Token(Token = "0x400072B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private static bool mLocalizeIsScheduled;

		[Token(Token = "0x400072C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		private static bool mLocalizeIsScheduledWithForcedValue;

		[Token(Token = "0x400072D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
		public static bool HighlightLocalizedTargets;

		[Token(Token = "0x1700041A")]
		public static string CurrentLanguage
		{
			[Token(Token = "0x6000BD0")]
			[Address(RVA = "0xC49518", Offset = "0xC49518", VA = "0xC49518")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000BD1")]
			[Address(RVA = "0xC49824", Offset = "0xC49824", VA = "0xC49824")]
			set
			{
			}
		}

		[Token(Token = "0x1700041B")]
		public static string CurrentLanguageCode
		{
			[Token(Token = "0x6000BD2")]
			[Address(RVA = "0xC5823C", Offset = "0xC5823C", VA = "0xC5823C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000BD3")]
			[Address(RVA = "0xC582A4", Offset = "0xC582A4", VA = "0xC582A4")]
			set
			{
			}
		}

		[Token(Token = "0x1700041C")]
		public static string CurrentRegion
		{
			[Token(Token = "0x6000BD4")]
			[Address(RVA = "0xC585B4", Offset = "0xC585B4", VA = "0xC585B4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000BD5")]
			[Address(RVA = "0xC58734", Offset = "0xC58734", VA = "0xC58734")]
			set
			{
			}
		}

		[Token(Token = "0x1700041D")]
		public static string CurrentRegionCode
		{
			[Token(Token = "0x6000BD6")]
			[Address(RVA = "0xC58900", Offset = "0xC58900", VA = "0xC58900")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000BD7")]
			[Address(RVA = "0xC589DC", Offset = "0xC589DC", VA = "0xC589DC")]
			set
			{
			}
		}

		[Token(Token = "0x1700041E")]
		public static CultureInfo CurrentCulture
		{
			[Token(Token = "0x6000BD8")]
			[Address(RVA = "0xC58AF4", Offset = "0xC58AF4", VA = "0xC58AF4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x14000019")]
		public static event OnLocalizeCallback OnLocalizeEvent
		{
			[Token(Token = "0x6000C00")]
			[Address(RVA = "0xC5BBFC", Offset = "0xC5BBFC", VA = "0xC5BBFC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FA488", Offset = "0x6FA488")]
			add
			{
			}
			[Token(Token = "0x6000C01")]
			[Address(RVA = "0xC5BCF4", Offset = "0xC5BCF4", VA = "0xC5BCF4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FA498", Offset = "0x6FA498")]
			remove
			{
			}
		}

		[Token(Token = "0x6000BCC")]
		[Address(RVA = "0xC57120", Offset = "0xC57120", VA = "0xC57120")]
		public static void InitializeIfNeeded()
		{
		}

		[Token(Token = "0x6000BCD")]
		[Address(RVA = "0xC57924", Offset = "0xC57924", VA = "0xC57924")]
		public static string GetVersion()
		{
			return null;
		}

		[Token(Token = "0x6000BCE")]
		[Address(RVA = "0xC52028", Offset = "0xC52028", VA = "0xC52028")]
		public static int GetRequiredWebServiceVersion()
		{
			return default(int);
		}

		[Token(Token = "0x6000BCF")]
		[Address(RVA = "0xC4F2FC", Offset = "0xC4F2FC", VA = "0xC4F2FC")]
		public static string GetWebServiceURL([Optional] LanguageSourceData source)
		{
			return null;
		}

		[Token(Token = "0x6000BD9")]
		[Address(RVA = "0xC58028", Offset = "0xC58028", VA = "0xC58028")]
		public static void SetLanguageAndCode(string LanguageName, string LanguageCode, bool RememberLanguage = true, bool Force = false)
		{
		}

		[Token(Token = "0x6000BDA")]
		[Address(RVA = "0xC58B58", Offset = "0xC58B58", VA = "0xC58B58")]
		private static CultureInfo CreateCultureForCode(string code)
		{
			return null;
		}

		[Token(Token = "0x6000BDB")]
		[Address(RVA = "0xC58D8C", Offset = "0xC58D8C", VA = "0xC58D8C")]
		public static void EnableChangingCultureInfo(bool bEnable)
		{
		}

		[Token(Token = "0x6000BDC")]
		[Address(RVA = "0xC58C78", Offset = "0xC58C78", VA = "0xC58C78")]
		private static void SetCurrentCultureInfo()
		{
		}

		[Token(Token = "0x6000BDD")]
		[Address(RVA = "0xC57450", Offset = "0xC57450", VA = "0xC57450")]
		private static void SelectStartupLanguage()
		{
		}

		[Token(Token = "0x6000BDE")]
		[Address(RVA = "0xC58F04", Offset = "0xC58F04", VA = "0xC58F04")]
		public static bool HasLanguage(string Language, bool AllowDiscartingRegion = true, bool Initialize = true, bool SkipDisabled = true)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BDF")]
		[Address(RVA = "0xC57968", Offset = "0xC57968", VA = "0xC57968")]
		public static string GetSupportedLanguage(string Language, bool ignoreDisabled = false)
		{
			return null;
		}

		[Token(Token = "0x6000BE0")]
		[Address(RVA = "0xC57E18", Offset = "0xC57E18", VA = "0xC57E18")]
		public static string GetLanguageCode(string Language)
		{
			return null;
		}

		[Token(Token = "0x6000BE1")]
		[Address(RVA = "0xC58394", Offset = "0xC58394", VA = "0xC58394")]
		public static string GetLanguageFromCode(string Code, bool exactMatch = true)
		{
			return null;
		}

		[Token(Token = "0x6000BE2")]
		[Address(RVA = "0xC490B4", Offset = "0xC490B4", VA = "0xC490B4")]
		public static List<string> GetAllLanguages(bool SkipDisabled = true)
		{
			return null;
		}

		[Token(Token = "0x6000BE3")]
		[Address(RVA = "0xC59124", Offset = "0xC59124", VA = "0xC59124")]
		public static List<string> GetAllLanguagesCode(bool allowRegions = true, bool SkipDisabled = true)
		{
			return null;
		}

		[Token(Token = "0x6000BE4")]
		[Address(RVA = "0xC59398", Offset = "0xC59398", VA = "0xC59398")]
		public static bool IsLanguageEnabled(string Language)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BE5")]
		[Address(RVA = "0xC594B8", Offset = "0xC594B8", VA = "0xC594B8")]
		private static void LoadCurrentLanguage()
		{
		}

		[Token(Token = "0x6000BE6")]
		[Address(RVA = "0xC59618", Offset = "0xC59618", VA = "0xC59618")]
		public static void PreviewLanguage(string NewLanguage)
		{
		}

		[Token(Token = "0x6000BE7")]
		[Address(RVA = "0xC57200", Offset = "0xC57200", VA = "0xC57200")]
		public static void AutoLoadGlobalParamManagers()
		{
		}

		[Token(Token = "0x6000BE8")]
		[Address(RVA = "0xC59708", Offset = "0xC59708", VA = "0xC59708")]
		public static void ApplyLocalizationParams(ref string translation, bool allowLocalizedParameters = true)
		{
		}

		[Token(Token = "0x6000BE9")]
		[Address(RVA = "0xC59C68", Offset = "0xC59C68", VA = "0xC59C68")]
		public static void ApplyLocalizationParams(ref string translation, GameObject root, bool allowLocalizedParameters = true)
		{
		}

		[Token(Token = "0x6000BEA")]
		[Address(RVA = "0xC59D58", Offset = "0xC59D58", VA = "0xC59D58")]
		public static void ApplyLocalizationParams(ref string translation, Dictionary<string, object> parameters, bool allowLocalizedParameters = true)
		{
		}

		[Token(Token = "0x6000BEB")]
		[Address(RVA = "0xC59830", Offset = "0xC59830", VA = "0xC59830")]
		public static void ApplyLocalizationParams(ref string translation, _GetParam getParam, bool allowLocalizedParameters = true)
		{
		}

		[Token(Token = "0x6000BEC")]
		[Address(RVA = "0xC59FCC", Offset = "0xC59FCC", VA = "0xC59FCC")]
		internal static string GetLocalizationParam(string ParamName, GameObject root)
		{
			return null;
		}

		[Token(Token = "0x6000BED")]
		[Address(RVA = "0xC5A2B0", Offset = "0xC5A2B0", VA = "0xC5A2B0")]
		private static string GetPluralType(MatchCollection matches, string langCode, _GetParam getParam)
		{
			return null;
		}

		[Token(Token = "0x6000BEE")]
		[Address(RVA = "0xC5A494", Offset = "0xC5A494", VA = "0xC5A494")]
		public static string ApplyRTLfix(string line)
		{
			return null;
		}

		[Token(Token = "0x6000BEF")]
		[Address(RVA = "0xC5A4FC", Offset = "0xC5A4FC", VA = "0xC5A4FC")]
		public static string ApplyRTLfix(string line, int maxCharacters, bool ignoreNumbers)
		{
			return null;
		}

		[Token(Token = "0x6000BF0")]
		[Address(RVA = "0xC5A93C", Offset = "0xC5A93C", VA = "0xC5A93C")]
		public static string FixRTL_IfNeeded(string text, int maxCharacters = 0, bool ignoreNumber = false)
		{
			return null;
		}

		[Token(Token = "0x6000BF1")]
		[Address(RVA = "0xC58CFC", Offset = "0xC58CFC", VA = "0xC58CFC")]
		public static bool IsRTL(string Code)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BF2")]
		[Address(RVA = "0xC573C0", Offset = "0xC573C0", VA = "0xC573C0")]
		public static bool UpdateSources()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BF3")]
		[Address(RVA = "0xC5A9EC", Offset = "0xC5A9EC", VA = "0xC5A9EC")]
		private static void UnregisterDeletededSources()
		{
		}

		[Token(Token = "0x6000BF4")]
		[Address(RVA = "0xC5AD10", Offset = "0xC5AD10", VA = "0xC5AD10")]
		private static void RegisterSceneSources()
		{
		}

		[Token(Token = "0x6000BF5")]
		[Address(RVA = "0xC5AB3C", Offset = "0xC5AB3C", VA = "0xC5AB3C")]
		private static void RegisterSourceInResources()
		{
		}

		[Token(Token = "0x6000BF6")]
		[Address(RVA = "0xC4BCC4", Offset = "0xC4BCC4", VA = "0xC4BCC4")]
		internal static void AddSource(LanguageSourceData Source)
		{
		}

		[Token(Token = "0x6000BF7")]
		[Address(RVA = "0xC5AEBC", Offset = "0xC5AEBC", VA = "0xC5AEBC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6FA428", Offset = "0x6FA428")]
		private static IEnumerator Delayed_Import_Google(LanguageSourceData source, float delay, bool justCheck)
		{
			return null;
		}

		[Token(Token = "0x6000BF8")]
		[Address(RVA = "0xC4C6F4", Offset = "0xC4C6F4", VA = "0xC4C6F4")]
		internal static void RemoveSource(LanguageSourceData Source)
		{
		}

		[Token(Token = "0x6000BF9")]
		[Address(RVA = "0xC5AF4C", Offset = "0xC5AF4C", VA = "0xC5AF4C")]
		public static bool IsGlobalSource(string SourceName)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BFA")]
		[Address(RVA = "0xC5AFDC", Offset = "0xC5AFDC", VA = "0xC5AFDC")]
		public static LanguageSourceData GetSourceContaining(string term, bool fallbackToFirst = true)
		{
			return null;
		}

		[Token(Token = "0x6000BFB")]
		[Address(RVA = "0xC5B1DC", Offset = "0xC5B1DC", VA = "0xC5B1DC")]
		public static UnityEngine.Object FindAsset(string value)
		{
			return null;
		}

		[Token(Token = "0x6000BFC")]
		[Address(RVA = "0xC5B33C", Offset = "0xC5B33C", VA = "0xC5B33C")]
		public static void ApplyDownloadedDataFromGoogle()
		{
		}

		[Token(Token = "0x6000BFD")]
		[Address(RVA = "0xC58E3C", Offset = "0xC58E3C", VA = "0xC58E3C")]
		public static string GetCurrentDeviceLanguage(bool force = false)
		{
			return null;
		}

		[Token(Token = "0x6000BFE")]
		[Address(RVA = "0xC5B43C", Offset = "0xC5B43C", VA = "0xC5B43C")]
		private static void DetectDeviceLanguage()
		{
		}

		[Token(Token = "0x6000BFF")]
		[Address(RVA = "0xC5B970", Offset = "0xC5B970", VA = "0xC5B970")]
		public static void RegisterTarget(ILocalizeTargetDescriptor desc)
		{
		}

		[Token(Token = "0x6000C02")]
		[Address(RVA = "0xC4934C", Offset = "0xC4934C", VA = "0xC4934C")]
		public static string GetTranslation(string Term, bool FixForRTL = true, int maxLineLengthForRTL = 0, bool ignoreRTLnumbers = true, bool applyParameters = false, [Optional] GameObject localParametersRoot, [Optional] string overrideLanguage)
		{
			return null;
		}

		[Token(Token = "0x6000C03")]
		[Address(RVA = "0xC5C000", Offset = "0xC5C000", VA = "0xC5C000")]
		public static string GetTermTranslation(string Term, bool FixForRTL = true, int maxLineLengthForRTL = 0, bool ignoreRTLnumbers = true, bool applyParameters = false, [Optional] GameObject localParametersRoot, [Optional] string overrideLanguage)
		{
			return null;
		}

		[Token(Token = "0x6000C04")]
		[Address(RVA = "0xC5BDEC", Offset = "0xC5BDEC", VA = "0xC5BDEC")]
		public static bool TryGetTranslation(string Term, out string Translation, bool FixForRTL = true, int maxLineLengthForRTL = 0, bool ignoreRTLnumbers = true, bool applyParameters = false, [Optional] GameObject localParametersRoot, [Optional] string overrideLanguage)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C05")]
		public static T GetTranslatedObject<T>(string AssetName, [Optional] Localize optionalLocComp) where T : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x6000C06")]
		public static T GetTranslatedObjectByTermName<T>(string Term, [Optional] Localize optionalLocComp) where T : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x6000C07")]
		[Address(RVA = "0xC5C0A8", Offset = "0xC5C0A8", VA = "0xC5C0A8")]
		public static string GetAppName(string languageCode)
		{
			return null;
		}

		[Token(Token = "0x6000C08")]
		[Address(RVA = "0xC4C5F0", Offset = "0xC4C5F0", VA = "0xC4C5F0")]
		public static void LocalizeAll(bool Force = false)
		{
		}

		[Token(Token = "0x6000C09")]
		[Address(RVA = "0xC5C4A8", Offset = "0xC5C4A8", VA = "0xC5C4A8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6FA4A8", Offset = "0x6FA4A8")]
		private static IEnumerator Coroutine_LocalizeAll()
		{
			return null;
		}

		[Token(Token = "0x6000C0A")]
		[Address(RVA = "0xC5C30C", Offset = "0xC5C30C", VA = "0xC5C30C")]
		private static void DoLocalizeAll(bool Force = false)
		{
		}

		[Token(Token = "0x6000C0B")]
		[Address(RVA = "0xC5C504", Offset = "0xC5C504", VA = "0xC5C504")]
		public static List<string> GetCategories()
		{
			return null;
		}

		[Token(Token = "0x6000C0C")]
		[Address(RVA = "0xC5C654", Offset = "0xC5C654", VA = "0xC5C654")]
		public static List<string> GetTermsList([Optional] string Category)
		{
			return null;
		}

		[Token(Token = "0x6000C0D")]
		[Address(RVA = "0xC5C8EC", Offset = "0xC5C8EC", VA = "0xC5C8EC")]
		public static TermData GetTermData(string term)
		{
			return null;
		}

		[Token(Token = "0x6000C0E")]
		[Address(RVA = "0xC59E48", Offset = "0xC59E48", VA = "0xC59E48")]
		public static TermData GetTermData(string term, out LanguageSourceData source)
		{
			return null;
		}
	}
	[Token(Token = "0x2000118")]
	public abstract class ILocalizeTarget : ScriptableObject
	{
		[Token(Token = "0x6000C31")]
		public abstract bool IsValid(Localize cmp);

		[Token(Token = "0x6000C32")]
		public abstract void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm);

		[Token(Token = "0x6000C33")]
		public abstract void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation);

		[Token(Token = "0x6000C34")]
		public abstract bool CanUseSecondaryTerm();

		[Token(Token = "0x6000C35")]
		public abstract bool AllowMainTermToBeRTL();

		[Token(Token = "0x6000C36")]
		public abstract bool AllowSecondTermToBeRTL();

		[Token(Token = "0x6000C37")]
		public abstract eTermType GetPrimaryTermType(Localize cmp);

		[Token(Token = "0x6000C38")]
		public abstract eTermType GetSecondaryTermType(Localize cmp);

		[Token(Token = "0x6000C39")]
		[Address(RVA = "0xB187E0", Offset = "0xB187E0", VA = "0xB187E0")]
		protected ILocalizeTarget()
		{
		}
	}
	[Token(Token = "0x2000119")]
	public abstract class LocalizeTarget<T> : ILocalizeTarget where T : UnityEngine.Object
	{
		[Token(Token = "0x400073E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public T mTarget;

		[Token(Token = "0x6000C3A")]
		public override bool IsValid(Localize cmp)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C3B")]
		protected LocalizeTarget()
		{
		}
	}
	[Token(Token = "0x200011A")]
	public abstract class ILocalizeTargetDescriptor
	{
		[Token(Token = "0x400073F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string Name;

		[Token(Token = "0x4000740")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int Priority;

		[Token(Token = "0x6000C3C")]
		public abstract bool CanLocalize(Localize cmp);

		[Token(Token = "0x6000C3D")]
		public abstract ILocalizeTarget CreateTarget(Localize cmp);

		[Token(Token = "0x6000C3E")]
		public abstract Type GetTargetType();

		[Token(Token = "0x6000C3F")]
		[Address(RVA = "0xB187E8", Offset = "0xB187E8", VA = "0xB187E8")]
		protected ILocalizeTargetDescriptor()
		{
		}
	}
	[Token(Token = "0x200011B")]
	public abstract class LocalizeTargetDesc<T> : ILocalizeTargetDescriptor where T : ILocalizeTarget
	{
		[Token(Token = "0x6000C40")]
		public override ILocalizeTarget CreateTarget(Localize cmp)
		{
			return null;
		}

		[Token(Token = "0x6000C41")]
		public override Type GetTargetType()
		{
			return null;
		}

		[Token(Token = "0x6000C42")]
		protected LocalizeTargetDesc()
		{
		}
	}
	[Token(Token = "0x200011C")]
	public class LocalizeTargetDesc_Type<T, G> : LocalizeTargetDesc<G> where T : UnityEngine.Object where G : LocalizeTarget<T>
	{
		[Token(Token = "0x6000C43")]
		public override bool CanLocalize(Localize cmp)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C44")]
		public override ILocalizeTarget CreateTarget(Localize cmp)
		{
			return null;
		}

		[Token(Token = "0x6000C45")]
		public LocalizeTargetDesc_Type()
		{
		}
	}
	[Token(Token = "0x200011D")]
	public class LocalizeTarget_TextMeshPro_Label : LocalizeTarget<TextMeshPro>
	{
		[Token(Token = "0x4000741")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TextAlignmentOptions mAlignment_RTL;

		[Token(Token = "0x4000742")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private TextAlignmentOptions mAlignment_LTR;

		[Token(Token = "0x4000743")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool mAlignmentWasRTL;

		[Token(Token = "0x4000744")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		private bool mInitializeAlignment;

		[Token(Token = "0x6000C46")]
		[Address(RVA = "0x9DE6C4", Offset = "0x9DE6C4", VA = "0x9DE6C4")]
		static LocalizeTarget_TextMeshPro_Label()
		{
		}

		[Token(Token = "0x6000C47")]
		[Address(RVA = "0x9DE6C8", Offset = "0x9DE6C8", VA = "0x9DE6C8")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x6FA5A8", Offset = "0x6FA5A8")]
		private static void AutoRegister()
		{
		}

		[Token(Token = "0x6000C48")]
		[Address(RVA = "0x9DE790", Offset = "0x9DE790", VA = "0x9DE790", Slot = "10")]
		public override eTermType GetPrimaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6000C49")]
		[Address(RVA = "0x9DE798", Offset = "0x9DE798", VA = "0x9DE798", Slot = "11")]
		public override eTermType GetSecondaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6000C4A")]
		[Address(RVA = "0x9DE7A0", Offset = "0x9DE7A0", VA = "0x9DE7A0", Slot = "7")]
		public override bool CanUseSecondaryTerm()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C4B")]
		[Address(RVA = "0x9DE7A8", Offset = "0x9DE7A8", VA = "0x9DE7A8", Slot = "8")]
		public override bool AllowMainTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C4C")]
		[Address(RVA = "0x9DE7B0", Offset = "0x9DE7B0", VA = "0x9DE7B0", Slot = "9")]
		public override bool AllowSecondTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C4D")]
		[Address(RVA = "0x9DE7B8", Offset = "0x9DE7B8", VA = "0x9DE7B8", Slot = "5")]
		public override void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x6000C4E")]
		[Address(RVA = "0x9DE8E0", Offset = "0x9DE8E0", VA = "0x9DE8E0", Slot = "6")]
		public override void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation)
		{
		}

		[Token(Token = "0x6000C4F")]
		[Address(RVA = "0x9DEF4C", Offset = "0x9DEF4C", VA = "0x9DEF4C")]
		internal static TMP_FontAsset GetTMPFontFromMaterial(Localize cmp, string matName)
		{
			return null;
		}

		[Token(Token = "0x6000C50")]
		[Address(RVA = "0x9DF1EC", Offset = "0x9DF1EC", VA = "0x9DF1EC")]
		internal static void InitAlignment_TMPro(bool isRTL, TextAlignmentOptions alignment, out TextAlignmentOptions alignLTR, out TextAlignmentOptions alignRTL)
		{
		}

		[Token(Token = "0x6000C51")]
		[Address(RVA = "0x9DEE48", Offset = "0x9DEE48", VA = "0x9DEE48")]
		internal static void SetFont(TMP_Text label, TMP_FontAsset newFont)
		{
		}

		[Token(Token = "0x6000C52")]
		[Address(RVA = "0x9DF0C8", Offset = "0x9DF0C8", VA = "0x9DF0C8")]
		internal static void SetMaterial(TMP_Text label, Material newMat)
		{
		}

		[Token(Token = "0x6000C53")]
		[Address(RVA = "0x9DF400", Offset = "0x9DF400", VA = "0x9DF400")]
		public LocalizeTarget_TextMeshPro_Label()
		{
		}
	}
	[Token(Token = "0x200011E")]
	public class LocalizeTarget_TextMeshPro_UGUI : LocalizeTarget<TextMeshProUGUI>
	{
		[Token(Token = "0x4000745")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextAlignmentOptions mAlignment_RTL;

		[Token(Token = "0x4000746")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public TextAlignmentOptions mAlignment_LTR;

		[Token(Token = "0x4000747")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool mAlignmentWasRTL;

		[Token(Token = "0x4000748")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public bool mInitializeAlignment;

		[Token(Token = "0x6000C54")]
		[Address(RVA = "0x9DF460", Offset = "0x9DF460", VA = "0x9DF460")]
		static LocalizeTarget_TextMeshPro_UGUI()
		{
		}

		[Token(Token = "0x6000C55")]
		[Address(RVA = "0x9DF464", Offset = "0x9DF464", VA = "0x9DF464")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x6FA5BC", Offset = "0x6FA5BC")]
		private static void AutoRegister()
		{
		}

		[Token(Token = "0x6000C56")]
		[Address(RVA = "0x9DF52C", Offset = "0x9DF52C", VA = "0x9DF52C", Slot = "10")]
		public override eTermType GetPrimaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6000C57")]
		[Address(RVA = "0x9DF534", Offset = "0x9DF534", VA = "0x9DF534", Slot = "11")]
		public override eTermType GetSecondaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6000C58")]
		[Address(RVA = "0x9DF53C", Offset = "0x9DF53C", VA = "0x9DF53C", Slot = "7")]
		public override bool CanUseSecondaryTerm()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C59")]
		[Address(RVA = "0x9DF544", Offset = "0x9DF544", VA = "0x9DF544", Slot = "8")]
		public override bool AllowMainTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C5A")]
		[Address(RVA = "0x9DF54C", Offset = "0x9DF54C", VA = "0x9DF54C", Slot = "9")]
		public override bool AllowSecondTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C5B")]
		[Address(RVA = "0x9DF554", Offset = "0x9DF554", VA = "0x9DF554", Slot = "5")]
		public override void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x6000C5C")]
		[Address(RVA = "0x9DF67C", Offset = "0x9DF67C", VA = "0x9DF67C", Slot = "6")]
		public override void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation)
		{
		}

		[Token(Token = "0x6000C5D")]
		[Address(RVA = "0x9DFBE4", Offset = "0x9DFBE4", VA = "0x9DFBE4")]
		public LocalizeTarget_TextMeshPro_UGUI()
		{
		}
	}
	[Token(Token = "0x200011F")]
	public class LocalizeTarget_UnityStandard_AudioSource : LocalizeTarget<AudioSource>
	{
		[Token(Token = "0x6000C5E")]
		[Address(RVA = "0x9DFC44", Offset = "0x9DFC44", VA = "0x9DFC44")]
		static LocalizeTarget_UnityStandard_AudioSource()
		{
		}

		[Token(Token = "0x6000C5F")]
		[Address(RVA = "0x9DFC48", Offset = "0x9DFC48", VA = "0x9DFC48")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x6FA5D0", Offset = "0x6FA5D0")]
		private static void AutoRegister()
		{
		}

		[Token(Token = "0x6000C60")]
		[Address(RVA = "0x9DFD10", Offset = "0x9DFD10", VA = "0x9DFD10", Slot = "10")]
		public override eTermType GetPrimaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6000C61")]
		[Address(RVA = "0x9DFD18", Offset = "0x9DFD18", VA = "0x9DFD18", Slot = "11")]
		public override eTermType GetSecondaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6000C62")]
		[Address(RVA = "0x9DFD20", Offset = "0x9DFD20", VA = "0x9DFD20", Slot = "7")]
		public override bool CanUseSecondaryTerm()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C63")]
		[Address(RVA = "0x9DFD28", Offset = "0x9DFD28", VA = "0x9DFD28", Slot = "8")]
		public override bool AllowMainTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C64")]
		[Address(RVA = "0x9DFD30", Offset = "0x9DFD30", VA = "0x9DFD30", Slot = "9")]
		public override bool AllowSecondTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C65")]
		[Address(RVA = "0x9DFD38", Offset = "0x9DFD38", VA = "0x9DFD38", Slot = "5")]
		public override void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x6000C66")]
		[Address(RVA = "0x9DFE18", Offset = "0x9DFE18", VA = "0x9DFE18", Slot = "6")]
		public override void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation)
		{
		}

		[Token(Token = "0x6000C67")]
		[Address(RVA = "0x9DFF9C", Offset = "0x9DFF9C", VA = "0x9DFF9C")]
		public LocalizeTarget_UnityStandard_AudioSource()
		{
		}
	}
	[Token(Token = "0x2000120")]
	public class LocalizeTargetDesc_Child : LocalizeTargetDesc<LocalizeTarget_UnityStandard_Child>
	{
		[Token(Token = "0x6000C68")]
		[Address(RVA = "0x9DE5EC", Offset = "0x9DE5EC", VA = "0x9DE5EC", Slot = "4")]
		public override bool CanLocalize(Localize cmp)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C69")]
		[Address(RVA = "0x9DE624", Offset = "0x9DE624", VA = "0x9DE624")]
		public LocalizeTargetDesc_Child()
		{
		}
	}
	[Token(Token = "0x2000121")]
	public class LocalizeTarget_UnityStandard_Child : LocalizeTarget<GameObject>
	{
		[Token(Token = "0x6000C6A")]
		[Address(RVA = "0x9DFFE8", Offset = "0x9DFFE8", VA = "0x9DFFE8")]
		static LocalizeTarget_UnityStandard_Child()
		{
		}

		[Token(Token = "0x6000C6B")]
		[Address(RVA = "0x9DFFEC", Offset = "0x9DFFEC", VA = "0x9DFFEC")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x6FA5E4", Offset = "0x6FA5E4")]
		private static void AutoRegister()
		{
		}

		[Token(Token = "0x6000C6C")]
		[Address(RVA = "0x9E009C", Offset = "0x9E009C", VA = "0x9E009C", Slot = "4")]
		public override bool IsValid(Localize cmp)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C6D")]
		[Address(RVA = "0x9E00D4", Offset = "0x9E00D4", VA = "0x9E00D4", Slot = "10")]
		public override eTermType GetPrimaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6000C6E")]
		[Address(RVA = "0x9E00DC", Offset = "0x9E00DC", VA = "0x9E00DC", Slot = "11")]
		public override eTermType GetSecondaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6000C6F")]
		[Address(RVA = "0x9E00E4", Offset = "0x9E00E4", VA = "0x9E00E4", Slot = "7")]
		public override bool CanUseSecondaryTerm()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C70")]
		[Address(RVA = "0x9E00EC", Offset = "0x9E00EC", VA = "0x9E00EC", Slot = "8")]
		public override bool AllowMainTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C71")]
		[Address(RVA = "0x9E00F4", Offset = "0x9E00F4", VA = "0x9E00F4", Slot = "9")]
		public override bool AllowSecondTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C72")]
		[Address(RVA = "0x9E00FC", Offset = "0x9E00FC", VA = "0x9E00FC", Slot = "5")]
		public override void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x6000C73")]
		[Address(RVA = "0x9E0138", Offset = "0x9E0138", VA = "0x9E0138", Slot = "6")]
		public override void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation)
		{
		}

		[Token(Token = "0x6000C74")]
		[Address(RVA = "0x9E028C", Offset = "0x9E028C", VA = "0x9E028C")]
		public LocalizeTarget_UnityStandard_Child()
		{
		}
	}
	[Token(Token = "0x2000122")]
	public class LocalizeTarget_UnityStandard_MeshRenderer : LocalizeTarget<MeshRenderer>
	{
		[Token(Token = "0x6000C75")]
		[Address(RVA = "0x9E02D8", Offset = "0x9E02D8", VA = "0x9E02D8")]
		static LocalizeTarget_UnityStandard_MeshRenderer()
		{
		}

		[Token(Token = "0x6000C76")]
		[Address(RVA = "0x9E02DC", Offset = "0x9E02DC", VA = "0x9E02DC")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x6FA5F8", Offset = "0x6FA5F8")]
		private static void AutoRegister()
		{
		}

		[Token(Token = "0x6000C77")]
		[Address(RVA = "0x9E03A4", Offset = "0x9E03A4", VA = "0x9E03A4", Slot = "10")]
		public override eTermType GetPrimaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6000C78")]
		[Address(RVA = "0x9E03AC", Offset = "0x9E03AC", VA = "0x9E03AC", Slot = "11")]
		public override eTermType GetSecondaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6000C79")]
		[Address(RVA = "0x9E03B4", Offset = "0x9E03B4", VA = "0x9E03B4", Slot = "7")]
		public override bool CanUseSecondaryTerm()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C7A")]
		[Address(RVA = "0x9E03BC", Offset = "0x9E03BC", VA = "0x9E03BC", Slot = "8")]
		public override bool AllowMainTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C7B")]
		[Address(RVA = "0x9E03C4", Offset = "0x9E03C4", VA = "0x9E03C4", Slot = "9")]
		public override bool AllowSecondTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C7C")]
		[Address(RVA = "0x9E03CC", Offset = "0x9E03CC", VA = "0x9E03CC", Slot = "5")]
		public override void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x6000C7D")]
		[Address(RVA = "0x9E05D4", Offset = "0x9E05D4", VA = "0x9E05D4", Slot = "6")]
		public override void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation)
		{
		}

		[Token(Token = "0x6000C7E")]
		[Address(RVA = "0x9E07CC", Offset = "0x9E07CC", VA = "0x9E07CC")]
		public LocalizeTarget_UnityStandard_MeshRenderer()
		{
		}
	}
	[Token(Token = "0x2000123")]
	public class LocalizeTargetDesc_Prefab : LocalizeTargetDesc<LocalizeTarget_UnityStandard_Prefab>
	{
		[Token(Token = "0x6000C7F")]
		[Address(RVA = "0x9DE670", Offset = "0x9DE670", VA = "0x9DE670", Slot = "4")]
		public override bool CanLocalize(Localize cmp)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C80")]
		[Address(RVA = "0x9DE678", Offset = "0x9DE678", VA = "0x9DE678")]
		public LocalizeTargetDesc_Prefab()
		{
		}
	}
	[Token(Token = "0x2000124")]
	public class LocalizeTarget_UnityStandard_Prefab : LocalizeTarget<GameObject>
	{
		[Token(Token = "0x6000C81")]
		[Address(RVA = "0x9E0818", Offset = "0x9E0818", VA = "0x9E0818")]
		static LocalizeTarget_UnityStandard_Prefab()
		{
		}

		[Token(Token = "0x6000C82")]
		[Address(RVA = "0x9E081C", Offset = "0x9E081C", VA = "0x9E081C")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x6FA60C", Offset = "0x6FA60C")]
		private static void AutoRegister()
		{
		}

		[Token(Token = "0x6000C83")]
		[Address(RVA = "0x9E08CC", Offset = "0x9E08CC", VA = "0x9E08CC", Slot = "4")]
		public override bool IsValid(Localize cmp)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C84")]
		[Address(RVA = "0x9E08D4", Offset = "0x9E08D4", VA = "0x9E08D4", Slot = "10")]
		public override eTermType GetPrimaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6000C85")]
		[Address(RVA = "0x9E08DC", Offset = "0x9E08DC", VA = "0x9E08DC", Slot = "11")]
		public override eTermType GetSecondaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6000C86")]
		[Address(RVA = "0x9E08E4", Offset = "0x9E08E4", VA = "0x9E08E4", Slot = "7")]
		public override bool CanUseSecondaryTerm()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C87")]
		[Address(RVA = "0x9E08EC", Offset = "0x9E08EC", VA = "0x9E08EC", Slot = "8")]
		public override bool AllowMainTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C88")]
		[Address(RVA = "0x9E08F4", Offset = "0x9E08F4", VA = "0x9E08F4", Slot = "9")]
		public override bool AllowSecondTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C89")]
		[Address(RVA = "0x9E08FC", Offset = "0x9E08FC", VA = "0x9E08FC", Slot = "5")]
		public override void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x6000C8A")]
		[Address(RVA = "0x9E0938", Offset = "0x9E0938", VA = "0x9E0938", Slot = "6")]
		public override void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation)
		{
		}

		[Token(Token = "0x6000C8B")]
		[Address(RVA = "0x9E0B68", Offset = "0x9E0B68", VA = "0x9E0B68")]
		private Transform InstantiateNewPrefab(Localize cmp, string mainTranslation)
		{
			return null;
		}

		[Token(Token = "0x6000C8C")]
		[Address(RVA = "0x9E0D28", Offset = "0x9E0D28", VA = "0x9E0D28")]
		public LocalizeTarget_UnityStandard_Prefab()
		{
		}
	}
	[Token(Token = "0x2000125")]
	public class LocalizeTarget_UnityStandard_SpriteRenderer : LocalizeTarget<SpriteRenderer>
	{
		[Token(Token = "0x6000C8D")]
		[Address(RVA = "0x9E0D74", Offset = "0x9E0D74", VA = "0x9E0D74")]
		static LocalizeTarget_UnityStandard_SpriteRenderer()
		{
		}

		[Token(Token = "0x6000C8E")]
		[Address(RVA = "0x9E0D78", Offset = "0x9E0D78", VA = "0x9E0D78")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x6FA620", Offset = "0x6FA620")]
		private static void AutoRegister()
		{
		}

		[Token(Token = "0x6000C8F")]
		[Address(RVA = "0x9E0E40", Offset = "0x9E0E40", VA = "0x9E0E40", Slot = "10")]
		public override eTermType GetPrimaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6000C90")]
		[Address(RVA = "0x9E0E48", Offset = "0x9E0E48", VA = "0x9E0E48", Slot = "11")]
		public override eTermType GetSecondaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6000C91")]
		[Address(RVA = "0x9E0E50", Offset = "0x9E0E50", VA = "0x9E0E50", Slot = "7")]
		public override bool CanUseSecondaryTerm()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C92")]
		[Address(RVA = "0x9E0E58", Offset = "0x9E0E58", VA = "0x9E0E58", Slot = "8")]
		public override bool AllowMainTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C93")]
		[Address(RVA = "0x9E0E60", Offset = "0x9E0E60", VA = "0x9E0E60", Slot = "9")]
		public override bool AllowSecondTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C94")]
		[Address(RVA = "0x9E0E68", Offset = "0x9E0E68", VA = "0x9E0E68", Slot = "5")]
		public override void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x6000C95")]
		[Address(RVA = "0x9E0F4C", Offset = "0x9E0F4C", VA = "0x9E0F4C", Slot = "6")]
		public override void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation)
		{
		}

		[Token(Token = "0x6000C96")]
		[Address(RVA = "0x9E1054", Offset = "0x9E1054", VA = "0x9E1054")]
		public LocalizeTarget_UnityStandard_SpriteRenderer()
		{
		}
	}
	[Token(Token = "0x2000126")]
	public class LocalizeTarget_UnityStandard_TextMesh : LocalizeTarget<TextMesh>
	{
		[Token(Token = "0x4000749")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TextAlignment mAlignment_RTL;

		[Token(Token = "0x400074A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private TextAlignment mAlignment_LTR;

		[Token(Token = "0x400074B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool mAlignmentWasRTL;

		[Token(Token = "0x400074C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		private bool mInitializeAlignment;

		[Token(Token = "0x6000C97")]
		[Address(RVA = "0x9E10A0", Offset = "0x9E10A0", VA = "0x9E10A0")]
		static LocalizeTarget_UnityStandard_TextMesh()
		{
		}

		[Token(Token = "0x6000C98")]
		[Address(RVA = "0x9E10A4", Offset = "0x9E10A4", VA = "0x9E10A4")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x6FA634", Offset = "0x6FA634")]
		private static void AutoRegister()
		{
		}

		[Token(Token = "0x6000C99")]
		[Address(RVA = "0x9E116C", Offset = "0x9E116C", VA = "0x9E116C", Slot = "10")]
		public override eTermType GetPrimaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6000C9A")]
		[Address(RVA = "0x9E1174", Offset = "0x9E1174", VA = "0x9E1174", Slot = "11")]
		public override eTermType GetSecondaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6000C9B")]
		[Address(RVA = "0x9E117C", Offset = "0x9E117C", VA = "0x9E117C", Slot = "7")]
		public override bool CanUseSecondaryTerm()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C9C")]
		[Address(RVA = "0x9E1184", Offset = "0x9E1184", VA = "0x9E1184", Slot = "8")]
		public override bool AllowMainTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C9D")]
		[Address(RVA = "0x9E118C", Offset = "0x9E118C", VA = "0x9E118C", Slot = "9")]
		public override bool AllowSecondTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C9E")]
		[Address(RVA = "0x9E1194", Offset = "0x9E1194", VA = "0x9E1194", Slot = "5")]
		public override void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x6000C9F")]
		[Address(RVA = "0x9E12C4", Offset = "0x9E12C4", VA = "0x9E12C4", Slot = "6")]
		public override void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation)
		{
		}

		[Token(Token = "0x6000CA0")]
		[Address(RVA = "0x9E1554", Offset = "0x9E1554", VA = "0x9E1554")]
		public LocalizeTarget_UnityStandard_TextMesh()
		{
		}
	}
	[Token(Token = "0x2000127")]
	public class LocalizeTarget_UnityUI_Image : LocalizeTarget<Image>
	{
		[Token(Token = "0x6000CA1")]
		[Address(RVA = "0x9E15B0", Offset = "0x9E15B0", VA = "0x9E15B0")]
		static LocalizeTarget_UnityUI_Image()
		{
		}

		[Token(Token = "0x6000CA2")]
		[Address(RVA = "0x9E15B4", Offset = "0x9E15B4", VA = "0x9E15B4")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x6FA648", Offset = "0x6FA648")]
		private static void AutoRegister()
		{
		}

		[Token(Token = "0x6000CA3")]
		[Address(RVA = "0x9E167C", Offset = "0x9E167C", VA = "0x9E167C", Slot = "7")]
		public override bool CanUseSecondaryTerm()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CA4")]
		[Address(RVA = "0x9E1684", Offset = "0x9E1684", VA = "0x9E1684", Slot = "8")]
		public override bool AllowMainTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CA5")]
		[Address(RVA = "0x9E168C", Offset = "0x9E168C", VA = "0x9E168C", Slot = "9")]
		public override bool AllowSecondTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CA6")]
		[Address(RVA = "0x9E1694", Offset = "0x9E1694", VA = "0x9E1694", Slot = "10")]
		public override eTermType GetPrimaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6000CA7")]
		[Address(RVA = "0x9E1720", Offset = "0x9E1720", VA = "0x9E1720", Slot = "11")]
		public override eTermType GetSecondaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6000CA8")]
		[Address(RVA = "0x9E1728", Offset = "0x9E1728", VA = "0x9E1728", Slot = "5")]
		public override void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x6000CA9")]
		[Address(RVA = "0x9E18C0", Offset = "0x9E18C0", VA = "0x9E18C0", Slot = "6")]
		public override void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation)
		{
		}

		[Token(Token = "0x6000CAA")]
		[Address(RVA = "0x9E19BC", Offset = "0x9E19BC", VA = "0x9E19BC")]
		public LocalizeTarget_UnityUI_Image()
		{
		}
	}
	[Token(Token = "0x2000128")]
	public class LocalizeTarget_UnityUI_RawImage : LocalizeTarget<RawImage>
	{
		[Token(Token = "0x6000CAB")]
		[Address(RVA = "0x9E1A08", Offset = "0x9E1A08", VA = "0x9E1A08")]
		static LocalizeTarget_UnityUI_RawImage()
		{
		}

		[Token(Token = "0x6000CAC")]
		[Address(RVA = "0x9E1A0C", Offset = "0x9E1A0C", VA = "0x9E1A0C")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x6FA65C", Offset = "0x6FA65C")]
		private static void AutoRegister()
		{
		}

		[Token(Token = "0x6000CAD")]
		[Address(RVA = "0x9E1AD4", Offset = "0x9E1AD4", VA = "0x9E1AD4", Slot = "10")]
		public override eTermType GetPrimaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6000CAE")]
		[Address(RVA = "0x9E1ADC", Offset = "0x9E1ADC", VA = "0x9E1ADC", Slot = "11")]
		public override eTermType GetSecondaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6000CAF")]
		[Address(RVA = "0x9E1AE4", Offset = "0x9E1AE4", VA = "0x9E1AE4", Slot = "7")]
		public override bool CanUseSecondaryTerm()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CB0")]
		[Address(RVA = "0x9E1AEC", Offset = "0x9E1AEC", VA = "0x9E1AEC", Slot = "8")]
		public override bool AllowMainTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CB1")]
		[Address(RVA = "0x9E1AF4", Offset = "0x9E1AF4", VA = "0x9E1AF4", Slot = "9")]
		public override bool AllowSecondTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CB2")]
		[Address(RVA = "0x9E1AFC", Offset = "0x9E1AFC", VA = "0x9E1AFC", Slot = "5")]
		public override void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x6000CB3")]
		[Address(RVA = "0x9E1BE4", Offset = "0x9E1BE4", VA = "0x9E1BE4", Slot = "6")]
		public override void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation)
		{
		}

		[Token(Token = "0x6000CB4")]
		[Address(RVA = "0x9E1CE0", Offset = "0x9E1CE0", VA = "0x9E1CE0")]
		public LocalizeTarget_UnityUI_RawImage()
		{
		}
	}
	[Token(Token = "0x2000129")]
	public class LocalizeTarget_UnityUI_Text : LocalizeTarget<Text>
	{
		[Token(Token = "0x400074D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TextAnchor mAlignment_RTL;

		[Token(Token = "0x400074E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private TextAnchor mAlignment_LTR;

		[Token(Token = "0x400074F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool mAlignmentWasRTL;

		[Token(Token = "0x4000750")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		private bool mInitializeAlignment;

		[Token(Token = "0x6000CB5")]
		[Address(RVA = "0x9E1D2C", Offset = "0x9E1D2C", VA = "0x9E1D2C")]
		static LocalizeTarget_UnityUI_Text()
		{
		}

		[Token(Token = "0x6000CB6")]
		[Address(RVA = "0x9E1D30", Offset = "0x9E1D30", VA = "0x9E1D30")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x6FA670", Offset = "0x6FA670")]
		private static void AutoRegister()
		{
		}

		[Token(Token = "0x6000CB7")]
		[Address(RVA = "0x9E1DF8", Offset = "0x9E1DF8", VA = "0x9E1DF8", Slot = "10")]
		public override eTermType GetPrimaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6000CB8")]
		[Address(RVA = "0x9E1E00", Offset = "0x9E1E00", VA = "0x9E1E00", Slot = "11")]
		public override eTermType GetSecondaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6000CB9")]
		[Address(RVA = "0x9E1E08", Offset = "0x9E1E08", VA = "0x9E1E08", Slot = "7")]
		public override bool CanUseSecondaryTerm()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CBA")]
		[Address(RVA = "0x9E1E10", Offset = "0x9E1E10", VA = "0x9E1E10", Slot = "8")]
		public override bool AllowMainTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CBB")]
		[Address(RVA = "0x9E1E18", Offset = "0x9E1E18", VA = "0x9E1E18", Slot = "9")]
		public override bool AllowSecondTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CBC")]
		[Address(RVA = "0x9E1E20", Offset = "0x9E1E20", VA = "0x9E1E20", Slot = "5")]
		public override void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x6000CBD")]
		[Address(RVA = "0x9E1F58", Offset = "0x9E1F58", VA = "0x9E1F58", Slot = "6")]
		public override void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation)
		{
		}

		[Token(Token = "0x6000CBE")]
		[Address(RVA = "0x9E2250", Offset = "0x9E2250", VA = "0x9E2250")]
		private void InitAlignment(bool isRTL, TextAnchor alignment, out TextAnchor alignLTR, out TextAnchor alignRTL)
		{
		}

		[Token(Token = "0x6000CBF")]
		[Address(RVA = "0x9E2310", Offset = "0x9E2310", VA = "0x9E2310")]
		public LocalizeTarget_UnityUI_Text()
		{
		}
	}
	[Token(Token = "0x200012A")]
	public enum eTermType
	{
		[Token(Token = "0x4000752")]
		Text,
		[Token(Token = "0x4000753")]
		Font,
		[Token(Token = "0x4000754")]
		Texture,
		[Token(Token = "0x4000755")]
		AudioClip,
		[Token(Token = "0x4000756")]
		GameObject,
		[Token(Token = "0x4000757")]
		Sprite,
		[Token(Token = "0x4000758")]
		Material,
		[Token(Token = "0x4000759")]
		Child,
		[Token(Token = "0x400075A")]
		Mesh,
		[Token(Token = "0x400075B")]
		TextMeshPFont,
		[Token(Token = "0x400075C")]
		Object
	}
	[Token(Token = "0x200012B")]
	public enum TranslationFlag : byte
	{
		[Token(Token = "0x400075E")]
		Normal = 1,
		[Token(Token = "0x400075F")]
		AutoTranslated
	}
	[Serializable]
	[Token(Token = "0x200012C")]
	public class TermData
	{
		[Token(Token = "0x4000760")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string Term;

		[Token(Token = "0x4000761")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public eTermType TermType;

		[NonSerialized]
		[Token(Token = "0x4000762")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string Description;

		[Token(Token = "0x4000763")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string[] Languages;

		[Token(Token = "0x4000764")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public byte[] Flags;

		[Token(Token = "0x4000765")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private string[] Languages_Touch;

		[Token(Token = "0x6000CC0")]
		[Address(RVA = "0xAEBE48", Offset = "0xAEBE48", VA = "0xAEBE48")]
		public string GetTranslation(int idx, [Optional] string specialization, bool editMode = false)
		{
			return null;
		}

		[Token(Token = "0x6000CC1")]
		[Address(RVA = "0xAEBF78", Offset = "0xAEBF78", VA = "0xAEBF78")]
		public void SetTranslation(int idx, string translation, [Optional] string specialization)
		{
		}

		[Token(Token = "0x6000CC2")]
		[Address(RVA = "0xAEC064", Offset = "0xAEC064", VA = "0xAEC064")]
		public void RemoveSpecialization(string specialization)
		{
		}

		[Token(Token = "0x6000CC3")]
		[Address(RVA = "0xAEC0C4", Offset = "0xAEC0C4", VA = "0xAEC0C4")]
		public void RemoveSpecialization(int idx, string specialization)
		{
		}

		[Token(Token = "0x6000CC4")]
		[Address(RVA = "0xAEC264", Offset = "0xAEC264", VA = "0xAEC264")]
		public bool IsAutoTranslated(int idx, bool IsTouch)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CC5")]
		[Address(RVA = "0xAEC2A4", Offset = "0xAEC2A4", VA = "0xAEC2A4")]
		public void Validate()
		{
		}

		[Token(Token = "0x6000CC6")]
		[Address(RVA = "0xAEC484", Offset = "0xAEC484", VA = "0xAEC484")]
		public bool IsTerm(string name, bool allowCategoryMistmatch)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CC7")]
		[Address(RVA = "0xAEC518", Offset = "0xAEC518", VA = "0xAEC518")]
		public bool HasSpecializations()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CC8")]
		[Address(RVA = "0xAEC5EC", Offset = "0xAEC5EC", VA = "0xAEC5EC")]
		public List<string> GetAllSpecializations()
		{
			return null;
		}

		[Token(Token = "0x6000CC9")]
		[Address(RVA = "0xAEC6E8", Offset = "0xAEC6E8", VA = "0xAEC6E8")]
		public TermData()
		{
		}
	}
	[Token(Token = "0x200012D")]
	public class TermsPopup : PropertyAttribute
	{
		[Token(Token = "0x4000766")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F5BF8", Offset = "0x6F5BF8")]
		private string <Filter>k__BackingField;

		[Token(Token = "0x17000423")]
		public string Filter
		{
			[Token(Token = "0x6000CCB")]
			[Address(RVA = "0xAEC7B8", Offset = "0xAEC7B8", VA = "0xAEC7B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FA684", Offset = "0x6FA684")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000CCC")]
			[Address(RVA = "0xAEC7C0", Offset = "0xAEC7C0", VA = "0xAEC7C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FA694", Offset = "0x6FA694")]
			private set
			{
			}
		}

		[Token(Token = "0x6000CCA")]
		[Address(RVA = "0xAEC78C", Offset = "0xAEC78C", VA = "0xAEC78C")]
		public TermsPopup(string filter = "")
		{
		}
	}
	[Token(Token = "0x200012E")]
	public class AutoChangeCultureInfo : MonoBehaviour
	{
		[Token(Token = "0x6000CCD")]
		[Address(RVA = "0xFA76A0", Offset = "0xFA76A0", VA = "0xFA76A0")]
		public void Start()
		{
		}

		[Token(Token = "0x6000CCE")]
		[Address(RVA = "0xFA7700", Offset = "0xFA7700", VA = "0xFA7700")]
		public AutoChangeCultureInfo()
		{
		}
	}
	[Token(Token = "0x200012F")]
	public class CoroutineManager : MonoBehaviour
	{
		[Token(Token = "0x4000767")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static CoroutineManager mInstance;

		[Token(Token = "0x17000424")]
		private static CoroutineManager pInstance
		{
			[Token(Token = "0x6000CCF")]
			[Address(RVA = "0xB33FF4", Offset = "0xB33FF4", VA = "0xB33FF4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CD0")]
		[Address(RVA = "0xB34148", Offset = "0xB34148", VA = "0xB34148")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000CD1")]
		[Address(RVA = "0xB341D8", Offset = "0xB341D8", VA = "0xB341D8")]
		public static Coroutine Start(IEnumerator coroutine)
		{
			return null;
		}

		[Token(Token = "0x6000CD2")]
		[Address(RVA = "0xB34208", Offset = "0xB34208", VA = "0xB34208")]
		public CoroutineManager()
		{
		}
	}
	[Token(Token = "0x2000130")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x6F0578", Offset = "0x6F0578")]
	public class CustomLocalizeCallback : MonoBehaviour
	{
		[Token(Token = "0x4000768")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UnityEvent _OnLocalize;

		[Token(Token = "0x6000CD3")]
		[Address(RVA = "0xB38E84", Offset = "0xB38E84", VA = "0xB38E84")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x6000CD4")]
		[Address(RVA = "0xB38F5C", Offset = "0xB38F5C", VA = "0xB38F5C")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x6000CD5")]
		[Address(RVA = "0xB39004", Offset = "0xB39004", VA = "0xB39004")]
		public void OnLocalize()
		{
		}

		[Token(Token = "0x6000CD6")]
		[Address(RVA = "0xB39020", Offset = "0xB39020", VA = "0xB39020")]
		public CustomLocalizeCallback()
		{
		}
	}
	[Token(Token = "0x2000131")]
	public class HindiFixer
	{
		[Serializable]
		[Token(Token = "0x2000132")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F05B0", Offset = "0x6F05B0")]
		private sealed class <>c
		{
			[Token(Token = "0x4000769")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400076A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<char, bool> <>9__0_0;

			[Token(Token = "0x6000CDA")]
			[Address(RVA = "0x925CCC", Offset = "0x925CCC", VA = "0x925CCC")]
			public <>c()
			{
			}

			[Token(Token = "0x6000CDB")]
			[Address(RVA = "0x925CD4", Offset = "0x925CD4", VA = "0x925CD4")]
			internal bool <Fix>b__0_0(char x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000CD7")]
		[Address(RVA = "0xB122C4", Offset = "0xB122C4", VA = "0xB122C4")]
		internal static string Fix(string text)
		{
			return null;
		}

		[Token(Token = "0x6000CD8")]
		[Address(RVA = "0xB12758", Offset = "0xB12758", VA = "0xB12758")]
		public HindiFixer()
		{
		}
	}
	[Token(Token = "0x2000133")]
	public static class I2Utils
	{
		[Serializable]
		[Token(Token = "0x2000134")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F05D0", Offset = "0x6F05D0")]
		private sealed class <>c
		{
			[Token(Token = "0x400076E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400076F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<char, bool> <>9__6_0;

			[Token(Token = "0x6000CEC")]
			[Address(RVA = "0x925D40", Offset = "0x925D40", VA = "0x925D40")]
			public <>c()
			{
			}

			[Token(Token = "0x6000CED")]
			[Address(RVA = "0x925D48", Offset = "0x925D48", VA = "0x925D48")]
			internal bool <SplitLine>b__6_0(char c)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x400076B")]
		public const string ValidChars = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789_";

		[Token(Token = "0x400076C")]
		public const string NumberChars = "0123456789";

		[Token(Token = "0x400076D")]
		public const string ValidNameSymbols = ".-_$#@*()[]{}+:?!&',^=<>~`";

		[Token(Token = "0x6000CDC")]
		[Address(RVA = "0xB17898", Offset = "0xB17898", VA = "0xB17898")]
		public static string ReverseText(string source)
		{
			return null;
		}

		[Token(Token = "0x6000CDD")]
		[Address(RVA = "0xB1796C", Offset = "0xB1796C", VA = "0xB1796C")]
		public static string RemoveNonASCII(string text, bool allowCategory = false)
		{
			return null;
		}

		[Token(Token = "0x6000CDE")]
		[Address(RVA = "0xB17BB0", Offset = "0xB17BB0", VA = "0xB17BB0")]
		public static string GetValidTermName(string text, bool allowCategory = false)
		{
			return null;
		}

		[Token(Token = "0x6000CDF")]
		[Address(RVA = "0xB17C70", Offset = "0xB17C70", VA = "0xB17C70")]
		public static string SplitLine(string line, int maxCharacters)
		{
			return null;
		}

		[Token(Token = "0x6000CE0")]
		[Address(RVA = "0xB17F54", Offset = "0xB17F54", VA = "0xB17F54")]
		public static bool FindNextTag(string line, int iStart, out int tagStart, out int tagEnd)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CE1")]
		[Address(RVA = "0xB17BDC", Offset = "0xB17BDC", VA = "0xB17BDC")]
		public static string RemoveTags(string text)
		{
			return null;
		}

		[Token(Token = "0x6000CE2")]
		[Address(RVA = "0xB180DC", Offset = "0xB180DC", VA = "0xB180DC")]
		public static bool RemoveResourcesPath(ref string sPath)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CE3")]
		[Address(RVA = "0xB18350", Offset = "0xB18350", VA = "0xB18350")]
		public static bool IsPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CE4")]
		[Address(RVA = "0xB18358", Offset = "0xB18358", VA = "0xB18358")]
		public static string GetPath(this Transform tr)
		{
			return null;
		}

		[Token(Token = "0x6000CE5")]
		[Address(RVA = "0xB18434", Offset = "0xB18434", VA = "0xB18434")]
		public static Transform FindObject(string objectPath)
		{
			return null;
		}

		[Token(Token = "0x6000CE6")]
		[Address(RVA = "0xB184A0", Offset = "0xB184A0", VA = "0xB184A0")]
		public static Transform FindObject(Scene scene, string objectPath)
		{
			return null;
		}

		[Token(Token = "0x6000CE7")]
		[Address(RVA = "0xB185E8", Offset = "0xB185E8", VA = "0xB185E8")]
		public static Transform FindObject(Transform root, string objectPath)
		{
			return null;
		}

		[Token(Token = "0x6000CE8")]
		public static H FindInParents<H>(Transform tr) where H : Component
		{
			return null;
		}

		[Token(Token = "0x6000CE9")]
		[Address(RVA = "0xB18718", Offset = "0xB18718", VA = "0xB18718")]
		public static string GetCaptureMatch(Match match)
		{
			return null;
		}

		[Token(Token = "0x6000CEA")]
		[Address(RVA = "0xB187C8", Offset = "0xB187C8", VA = "0xB187C8")]
		public static void SendWebRequest(UnityWebRequest www)
		{
		}
	}
	[Token(Token = "0x2000135")]
	public interface ILocalizationParamsManager
	{
		[Token(Token = "0x6000CEE")]
		string GetParameterValue(string Param);
	}
	[Token(Token = "0x2000136")]
	public class LocalizationParamsManager : MonoBehaviour, ILocalizationParamsManager
	{
		[Serializable]
		[Token(Token = "0x2000137")]
		public struct ParamValue
		{
			[Token(Token = "0x4000772")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string Name;

			[Token(Token = "0x4000773")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public string Value;
		}

		[Token(Token = "0x4000770")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public List<ParamValue> _Params;

		[Token(Token = "0x4000771")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool _IsGlobalManager;

		[Token(Token = "0x6000CEF")]
		[Address(RVA = "0xC5D158", Offset = "0xC5D158", VA = "0xC5D158", Slot = "4")]
		public string GetParameterValue(string ParamName)
		{
			return null;
		}

		[Token(Token = "0x6000CF0")]
		[Address(RVA = "0xC5D24C", Offset = "0xC5D24C", VA = "0xC5D24C")]
		public void SetParameterValue(string ParamName, string ParamValue, bool localize = true)
		{
		}

		[Token(Token = "0x6000CF1")]
		[Address(RVA = "0xC5D3CC", Offset = "0xC5D3CC", VA = "0xC5D3CC")]
		public void OnLocalize()
		{
		}

		[Token(Token = "0x6000CF2")]
		[Address(RVA = "0xC5D484", Offset = "0xC5D484", VA = "0xC5D484", Slot = "5")]
		public virtual void OnEnable()
		{
		}

		[Token(Token = "0x6000CF3")]
		[Address(RVA = "0xC5D494", Offset = "0xC5D494", VA = "0xC5D494")]
		public void DoAutoRegister()
		{
		}

		[Token(Token = "0x6000CF4")]
		[Address(RVA = "0xC5D580", Offset = "0xC5D580", VA = "0xC5D580")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x6000CF5")]
		[Address(RVA = "0xC5D60C", Offset = "0xC5D60C", VA = "0xC5D60C")]
		public LocalizationParamsManager()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000138")]
	public struct LocalizedString
	{
		[Token(Token = "0x4000774")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string mTerm;

		[Token(Token = "0x4000775")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool mRTL_IgnoreArabicFix;

		[Token(Token = "0x4000776")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int mRTL_MaxLineLength;

		[Token(Token = "0x4000777")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool mRTL_ConvertNumbers;

		[Token(Token = "0x4000778")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool m_DontLocalizeParameters;

		[Token(Token = "0x6000CF6")]
		[Address(RVA = "0x9E236C", Offset = "0x9E236C", VA = "0x9E236C")]
		public static implicit operator string(LocalizedString s)
		{
			return null;
		}

		[Token(Token = "0x6000CF7")]
		[Address(RVA = "0x9E243C", Offset = "0x9E243C", VA = "0x9E243C")]
		public static implicit operator LocalizedString(string term)
		{
			return default(LocalizedString);
		}

		[Token(Token = "0x6000CF8")]
		[Address(RVA = "0x9E2448", Offset = "0x9E2448", VA = "0x9E2448")]
		public LocalizedString(LocalizedString str)
		{
		}

		[Token(Token = "0x6000CF9")]
		[Address(RVA = "0x9E2370", Offset = "0x9E2370", VA = "0x9E2370", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000139")]
	public class RTLFixer
	{
		[Token(Token = "0x6000CFA")]
		[Address(RVA = "0xD994E8", Offset = "0xD994E8", VA = "0xD994E8")]
		public static string Fix(string str)
		{
			return null;
		}

		[Token(Token = "0x6000CFB")]
		[Address(RVA = "0xD9979C", Offset = "0xD9979C", VA = "0xD9979C")]
		public static string Fix(string str, bool rtl)
		{
			return null;
		}

		[Token(Token = "0x6000CFC")]
		[Address(RVA = "0xD994F4", Offset = "0xD994F4", VA = "0xD994F4")]
		public static string Fix(string str, bool showTashkeel, bool useHinduNumbers)
		{
			return null;
		}

		[Token(Token = "0x6000CFD")]
		[Address(RVA = "0xD9A77C", Offset = "0xD9A77C", VA = "0xD9A77C")]
		public RTLFixer()
		{
		}
	}
	[Token(Token = "0x200013A")]
	internal enum IsolatedArabicLetters
	{
		[Token(Token = "0x400077A")]
		Hamza = 65152,
		[Token(Token = "0x400077B")]
		Alef = 65165,
		[Token(Token = "0x400077C")]
		AlefHamza = 65155,
		[Token(Token = "0x400077D")]
		WawHamza = 65157,
		[Token(Token = "0x400077E")]
		AlefMaksoor = 65159,
		[Token(Token = "0x400077F")]
		AlefMaksora = 64508,
		[Token(Token = "0x4000780")]
		HamzaNabera = 65161,
		[Token(Token = "0x4000781")]
		Ba = 65167,
		[Token(Token = "0x4000782")]
		Ta = 65173,
		[Token(Token = "0x4000783")]
		Tha2 = 65177,
		[Token(Token = "0x4000784")]
		Jeem = 65181,
		[Token(Token = "0x4000785")]
		H7aa = 65185,
		[Token(Token = "0x4000786")]
		Khaa2 = 65189,
		[Token(Token = "0x4000787")]
		Dal = 65193,
		[Token(Token = "0x4000788")]
		Thal = 65195,
		[Token(Token = "0x4000789")]
		Ra2 = 65197,
		[Token(Token = "0x400078A")]
		Zeen = 65199,
		[Token(Token = "0x400078B")]
		Seen = 65201,
		[Token(Token = "0x400078C")]
		Sheen = 65205,
		[Token(Token = "0x400078D")]
		S9a = 65209,
		[Token(Token = "0x400078E")]
		Dha = 65213,
		[Token(Token = "0x400078F")]
		T6a = 65217,
		[Token(Token = "0x4000790")]
		T6ha = 65221,
		[Token(Token = "0x4000791")]
		Ain = 65225,
		[Token(Token = "0x4000792")]
		Gain = 65229,
		[Token(Token = "0x4000793")]
		Fa = 65233,
		[Token(Token = "0x4000794")]
		Gaf = 65237,
		[Token(Token = "0x4000795")]
		Kaf = 65241,
		[Token(Token = "0x4000796")]
		Lam = 65245,
		[Token(Token = "0x4000797")]
		Meem = 65249,
		[Token(Token = "0x4000798")]
		Noon = 65253,
		[Token(Token = "0x4000799")]
		Ha = 65257,
		[Token(Token = "0x400079A")]
		Waw = 65261,
		[Token(Token = "0x400079B")]
		Ya = 65265,
		[Token(Token = "0x400079C")]
		AlefMad = 65153,
		[Token(Token = "0x400079D")]
		TaMarboota = 65171,
		[Token(Token = "0x400079E")]
		PersianPe = 64342,
		[Token(Token = "0x400079F")]
		PersianChe = 64378,
		[Token(Token = "0x40007A0")]
		PersianZe = 64394,
		[Token(Token = "0x40007A1")]
		PersianGaf = 64402,
		[Token(Token = "0x40007A2")]
		PersianGaf2 = 64398
	}
	[Token(Token = "0x200013B")]
	internal enum GeneralArabicLetters
	{
		[Token(Token = "0x40007A4")]
		Hamza = 1569,
		[Token(Token = "0x40007A5")]
		Alef = 1575,
		[Token(Token = "0x40007A6")]
		AlefHamza = 1571,
		[Token(Token = "0x40007A7")]
		WawHamza = 1572,
		[Token(Token = "0x40007A8")]
		AlefMaksoor = 1573,
		[Token(Token = "0x40007A9")]
		AlefMagsora = 1609,
		[Token(Token = "0x40007AA")]
		HamzaNabera = 1574,
		[Token(Token = "0x40007AB")]
		Ba = 1576,
		[Token(Token = "0x40007AC")]
		Ta = 1578,
		[Token(Token = "0x40007AD")]
		Tha2 = 1579,
		[Token(Token = "0x40007AE")]
		Jeem = 1580,
		[Token(Token = "0x40007AF")]
		H7aa = 1581,
		[Token(Token = "0x40007B0")]
		Khaa2 = 1582,
		[Token(Token = "0x40007B1")]
		Dal = 1583,
		[Token(Token = "0x40007B2")]
		Thal = 1584,
		[Token(Token = "0x40007B3")]
		Ra2 = 1585,
		[Token(Token = "0x40007B4")]
		Zeen = 1586,
		[Token(Token = "0x40007B5")]
		Seen = 1587,
		[Token(Token = "0x40007B6")]
		Sheen = 1588,
		[Token(Token = "0x40007B7")]
		S9a = 1589,
		[Token(Token = "0x40007B8")]
		Dha = 1590,
		[Token(Token = "0x40007B9")]
		T6a = 1591,
		[Token(Token = "0x40007BA")]
		T6ha = 1592,
		[Token(Token = "0x40007BB")]
		Ain = 1593,
		[Token(Token = "0x40007BC")]
		Gain = 1594,
		[Token(Token = "0x40007BD")]
		Fa = 1601,
		[Token(Token = "0x40007BE")]
		Gaf = 1602,
		[Token(Token = "0x40007BF")]
		Kaf = 1603,
		[Token(Token = "0x40007C0")]
		Lam = 1604,
		[Token(Token = "0x40007C1")]
		Meem = 1605,
		[Token(Token = "0x40007C2")]
		Noon = 1606,
		[Token(Token = "0x40007C3")]
		Ha = 1607,
		[Token(Token = "0x40007C4")]
		Waw = 1608,
		[Token(Token = "0x40007C5")]
		Ya = 1610,
		[Token(Token = "0x40007C6")]
		AlefMad = 1570,
		[Token(Token = "0x40007C7")]
		TaMarboota = 1577,
		[Token(Token = "0x40007C8")]
		PersianPe = 1662,
		[Token(Token = "0x40007C9")]
		PersianChe = 1670,
		[Token(Token = "0x40007CA")]
		PersianZe = 1688,
		[Token(Token = "0x40007CB")]
		PersianGaf = 1711,
		[Token(Token = "0x40007CC")]
		PersianGaf2 = 1705
	}
	[Token(Token = "0x200013C")]
	internal class ArabicMapping
	{
		[Token(Token = "0x40007CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int from;

		[Token(Token = "0x40007CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int to;

		[Token(Token = "0x6000CFE")]
		[Address(RVA = "0xFA666C", Offset = "0xFA666C", VA = "0xFA666C")]
		public ArabicMapping(int from, int to)
		{
		}
	}
	[Token(Token = "0x200013D")]
	internal class ArabicTable
	{
		[Token(Token = "0x40007CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<ArabicMapping> mapList;

		[Token(Token = "0x40007D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static ArabicTable arabicMapper;

		[Token(Token = "0x17000425")]
		internal static ArabicTable ArabicMapper
		{
			[Token(Token = "0x6000D00")]
			[Address(RVA = "0xFA71B4", Offset = "0xFA71B4", VA = "0xFA71B4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CFF")]
		[Address(RVA = "0xFA66A4", Offset = "0xFA66A4", VA = "0xFA66A4")]
		private ArabicTable()
		{
		}

		[Token(Token = "0x6000D01")]
		[Address(RVA = "0xFA7228", Offset = "0xFA7228", VA = "0xFA7228")]
		internal int Convert(int toBeConverted)
		{
			return default(int);
		}
	}
	[Token(Token = "0x200013E")]
	internal class TashkeelLocation
	{
		[Token(Token = "0x40007D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public char tashkeel;

		[Token(Token = "0x40007D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int position;

		[Token(Token = "0x6000D02")]
		[Address(RVA = "0xAEB680", Offset = "0xAEB680", VA = "0xAEB680")]
		public TashkeelLocation(char tashkeel, int position)
		{
		}
	}
	[Token(Token = "0x200013F")]
	internal class RTLFixerTool
	{
		[Token(Token = "0x40007D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal static bool showTashkeel;

		[Token(Token = "0x40007D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		internal static bool useHinduNumbers;

		[Token(Token = "0x6000D03")]
		[Address(RVA = "0xD9A784", Offset = "0xD9A784", VA = "0xD9A784")]
		internal static string RemoveTashkeel(string str, out List<TashkeelLocation> tashkeelLocation)
		{
			return null;
		}

		[Token(Token = "0x6000D04")]
		[Address(RVA = "0xD9AD2C", Offset = "0xD9AD2C", VA = "0xD9AD2C")]
		internal static char[] ReturnTashkeel(char[] letters, List<TashkeelLocation> tashkeelLocation)
		{
			return null;
		}

		[Token(Token = "0x6000D05")]
		[Address(RVA = "0xD999F0", Offset = "0xD999F0", VA = "0xD999F0")]
		internal static string FixLine(string str)
		{
			return null;
		}

		[Token(Token = "0x6000D06")]
		[Address(RVA = "0xD9AF80", Offset = "0xD9AF80", VA = "0xD9AF80")]
		internal static bool IsIgnoredCharacter(char ch)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D07")]
		[Address(RVA = "0xD9B5D4", Offset = "0xD9B5D4", VA = "0xD9B5D4")]
		internal static bool IsLeadingLetter(char[] letters, int index)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D08")]
		[Address(RVA = "0xD9B474", Offset = "0xD9B474", VA = "0xD9B474")]
		internal static bool IsFinishingLetter(char[] letters, int index)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D09")]
		[Address(RVA = "0xD9B0F8", Offset = "0xD9B0F8", VA = "0xD9B0F8")]
		internal static bool IsMiddleLetter(char[] letters, int index)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D0A")]
		[Address(RVA = "0xD9B90C", Offset = "0xD9B90C", VA = "0xD9B90C")]
		public RTLFixerTool()
		{
		}
	}
	[Token(Token = "0x2000140")]
	public class RegisterGlobalParameters : MonoBehaviour, ILocalizationParamsManager
	{
		[Token(Token = "0x6000D0C")]
		[Address(RVA = "0xD9C894", Offset = "0xD9C894", VA = "0xD9C894", Slot = "5")]
		public virtual void OnEnable()
		{
		}

		[Token(Token = "0x6000D0D")]
		[Address(RVA = "0xD9C984", Offset = "0xD9C984", VA = "0xD9C984", Slot = "6")]
		public virtual void OnDisable()
		{
		}

		[Token(Token = "0x6000D0E")]
		[Address(RVA = "0xD9CA10", Offset = "0xD9CA10", VA = "0xD9CA10", Slot = "7")]
		public virtual string GetParameterValue(string ParamName)
		{
			return null;
		}

		[Token(Token = "0x6000D0F")]
		[Address(RVA = "0xD9CA18", Offset = "0xD9CA18", VA = "0xD9CA18")]
		public RegisterGlobalParameters()
		{
		}
	}
	[Token(Token = "0x2000141")]
	public interface IResourceManager_Bundles
	{
		[Token(Token = "0x6000D10")]
		UnityEngine.Object LoadFromBundle(string path, Type assetType);
	}
	[Token(Token = "0x2000142")]
	public class ResourceManager : MonoBehaviour
	{
		[Token(Token = "0x40007D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static ResourceManager mInstance;

		[Token(Token = "0x40007D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<IResourceManager_Bundles> mBundleManagers;

		[Token(Token = "0x40007D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnityEngine.Object[] Assets;

		[Token(Token = "0x40007D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly Dictionary<string, UnityEngine.Object> mResourcesCache;

		[Token(Token = "0x17000426")]
		public static ResourceManager pInstance
		{
			[Token(Token = "0x6000D11")]
			[Address(RVA = "0xD9CA20", Offset = "0xD9CA20", VA = "0xD9CA20")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D12")]
		[Address(RVA = "0xD9CDF8", Offset = "0xD9CDF8", VA = "0xD9CDF8")]
		public static void MyOnLevelWasLoaded(Scene scene, LoadSceneMode mode)
		{
		}

		[Token(Token = "0x6000D13")]
		public T GetAsset<T>(string Name) where T : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x6000D14")]
		[Address(RVA = "0xD9CECC", Offset = "0xD9CECC", VA = "0xD9CECC")]
		private UnityEngine.Object FindAsset(string Name)
		{
			return null;
		}

		[Token(Token = "0x6000D15")]
		[Address(RVA = "0xD9D008", Offset = "0xD9D008", VA = "0xD9D008")]
		public bool HasAsset(UnityEngine.Object Obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D16")]
		public T LoadFromResources<T>(string Path) where T : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x6000D17")]
		public T LoadFromBundle<T>(string path) where T : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x6000D18")]
		[Address(RVA = "0xD9CE64", Offset = "0xD9CE64", VA = "0xD9CE64")]
		public void CleanResourceCache()
		{
		}

		[Token(Token = "0x6000D19")]
		[Address(RVA = "0xD9D074", Offset = "0xD9D074", VA = "0xD9D074")]
		public ResourceManager()
		{
		}
	}
	[Token(Token = "0x2000143")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x6F05E0", Offset = "0x6F05E0")]
	public class SetLanguage : MonoBehaviour
	{
		[Token(Token = "0x40007D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string _Language;

		[Token(Token = "0x6000D1A")]
		[Address(RVA = "0x10A6624", Offset = "0x10A6624", VA = "0x10A6624")]
		private void OnClick()
		{
		}

		[Token(Token = "0x6000D1B")]
		[Address(RVA = "0x10A6628", Offset = "0x10A6628", VA = "0x10A6628")]
		public void ApplyLanguage()
		{
		}

		[Token(Token = "0x6000D1C")]
		[Address(RVA = "0x10A66E0", Offset = "0x10A66E0", VA = "0x10A66E0")]
		public SetLanguage()
		{
		}
	}
	[Token(Token = "0x2000144")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x6F0618", Offset = "0x6F0618")]
	public class SetLanguageDropdown : MonoBehaviour
	{
		[Token(Token = "0x6000D1D")]
		[Address(RVA = "0x10A66E8", Offset = "0x10A66E8", VA = "0x10A66E8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000D1E")]
		[Address(RVA = "0x10A697C", Offset = "0x10A697C", VA = "0x10A697C")]
		private void OnValueChanged(int index)
		{
		}

		[Token(Token = "0x6000D1F")]
		[Address(RVA = "0x10A6A80", Offset = "0x10A6A80", VA = "0x10A6A80")]
		public SetLanguageDropdown()
		{
		}
	}
	[Token(Token = "0x2000145")]
	public class StringObfucator
	{
		[Token(Token = "0x40007DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static char[] StringObfuscatorPassword;

		[Token(Token = "0x6000D20")]
		[Address(RVA = "0xAE8D98", Offset = "0xAE8D98", VA = "0xAE8D98")]
		public static string Encode(string NormalString)
		{
			return null;
		}

		[Token(Token = "0x6000D21")]
		[Address(RVA = "0xAE90CC", Offset = "0xAE90CC", VA = "0xAE90CC")]
		public static string Decode(string ObfucatedString)
		{
			return null;
		}

		[Token(Token = "0x6000D22")]
		[Address(RVA = "0xAE903C", Offset = "0xAE903C", VA = "0xAE903C")]
		private static string ToBase64(string regularString)
		{
			return null;
		}

		[Token(Token = "0x6000D23")]
		[Address(RVA = "0xAE91B0", Offset = "0xAE91B0", VA = "0xAE91B0")]
		private static string FromBase64(string base64string)
		{
			return null;
		}

		[Token(Token = "0x6000D24")]
		[Address(RVA = "0xAE8E7C", Offset = "0xAE8E7C", VA = "0xAE8E7C")]
		private static string XoREncode(string NormalString)
		{
			return null;
		}

		[Token(Token = "0x6000D25")]
		[Address(RVA = "0xAE9248", Offset = "0xAE9248", VA = "0xAE9248")]
		public StringObfucator()
		{
		}
	}
}
namespace I2.Loc.SimpleJSON
{
	[Token(Token = "0x2000146")]
	public enum JSONBinaryTag
	{
		[Token(Token = "0x40007DC")]
		Array = 1,
		[Token(Token = "0x40007DD")]
		Class,
		[Token(Token = "0x40007DE")]
		Value,
		[Token(Token = "0x40007DF")]
		IntValue,
		[Token(Token = "0x40007E0")]
		DoubleValue,
		[Token(Token = "0x40007E1")]
		BoolValue,
		[Token(Token = "0x40007E2")]
		FloatValue
	}
	[Token(Token = "0x2000147")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x6F0650", Offset = "0x6F0650")]
	public class JSONNode
	{
		[Token(Token = "0x2000148")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F0688", Offset = "0x6F0688")]
		private sealed class <get_Childs>d__17 : IEnumerable<JSONNode>, IEnumerable, IEnumerator<JSONNode>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40007E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40007E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private JSONNode <>2__current;

			[Token(Token = "0x40007E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x17000433")]
			private JSONNode System.Collections.Generic.IEnumerator<I2.Loc.SimpleJSON.JSONNode>.Current
			{
				[Token(Token = "0x6000D5B")]
				[Address(RVA = "0x926ED0", Offset = "0x926ED0", VA = "0x926ED0", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000434")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000D5D")]
				[Address(RVA = "0x926F18", Offset = "0x926F18", VA = "0x926F18", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000D58")]
			[Address(RVA = "0x926E7C", Offset = "0x926E7C", VA = "0x926E7C")]
			[DebuggerHidden]
			public <get_Childs>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x6000D59")]
			[Address(RVA = "0x926EB4", Offset = "0x926EB4", VA = "0x926EB4", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000D5A")]
			[Address(RVA = "0x926EB8", Offset = "0x926EB8", VA = "0x926EB8", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000D5C")]
			[Address(RVA = "0x926ED8", Offset = "0x926ED8", VA = "0x926ED8", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6000D5E")]
			[Address(RVA = "0x926F20", Offset = "0x926F20", VA = "0x926F20", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<JSONNode> System.Collections.Generic.IEnumerable<I2.Loc.SimpleJSON.JSONNode>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6000D5F")]
			[Address(RVA = "0x926FB4", Offset = "0x926FB4", VA = "0x926FB4", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x2000149")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F0698", Offset = "0x6F0698")]
		private sealed class <get_DeepChilds>d__19 : IEnumerable<JSONNode>, IEnumerable, IEnumerator<JSONNode>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40007E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40007E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private JSONNode <>2__current;

			[Token(Token = "0x40007E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x40007E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public JSONNode <>4__this;

			[Token(Token = "0x40007EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private IEnumerator<JSONNode> <>7__wrap1;

			[Token(Token = "0x40007EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private IEnumerator<JSONNode> <>7__wrap2;

			[Token(Token = "0x17000435")]
			private JSONNode System.Collections.Generic.IEnumerator<I2.Loc.SimpleJSON.JSONNode>.Current
			{
				[Token(Token = "0x6000D65")]
				[Address(RVA = "0x927630", Offset = "0x927630", VA = "0x927630", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000436")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000D67")]
				[Address(RVA = "0x927678", Offset = "0x927678", VA = "0x927678", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000D60")]
			[Address(RVA = "0x926FB8", Offset = "0x926FB8", VA = "0x926FB8")]
			[DebuggerHidden]
			public <get_DeepChilds>d__19(int <>1__state)
			{
			}

			[Token(Token = "0x6000D61")]
			[Address(RVA = "0x926FF0", Offset = "0x926FF0", VA = "0x926FF0", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000D62")]
			[Address(RVA = "0x9271F8", Offset = "0x9271F8", VA = "0x9271F8", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000D63")]
			[Address(RVA = "0x92713C", Offset = "0x92713C", VA = "0x92713C")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6000D64")]
			[Address(RVA = "0x927080", Offset = "0x927080", VA = "0x927080")]
			private void <>m__Finally2()
			{
			}

			[Token(Token = "0x6000D66")]
			[Address(RVA = "0x927638", Offset = "0x927638", VA = "0x927638", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6000D68")]
			[Address(RVA = "0x927680", Offset = "0x927680", VA = "0x927680", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<JSONNode> System.Collections.Generic.IEnumerable<I2.Loc.SimpleJSON.JSONNode>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6000D69")]
			[Address(RVA = "0x927728", Offset = "0x927728", VA = "0x927728", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x17000427")]
		public virtual JSONNode Item
		{
			[Token(Token = "0x6000D28")]
			[Address(RVA = "0xB20C70", Offset = "0xB20C70", VA = "0xB20C70", Slot = "5")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D29")]
			[Address(RVA = "0xB20C78", Offset = "0xB20C78", VA = "0xB20C78", Slot = "6")]
			set
			{
			}
		}

		[Token(Token = "0x17000428")]
		public virtual JSONNode Item
		{
			[Token(Token = "0x6000D2A")]
			[Address(RVA = "0xB20C7C", Offset = "0xB20C7C", VA = "0xB20C7C", Slot = "7")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D2B")]
			[Address(RVA = "0xB20C84", Offset = "0xB20C84", VA = "0xB20C84", Slot = "8")]
			set
			{
			}
		}

		[Token(Token = "0x17000429")]
		public virtual string Value
		{
			[Token(Token = "0x6000D2C")]
			[Address(RVA = "0xB20C88", Offset = "0xB20C88", VA = "0xB20C88", Slot = "9")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D2D")]
			[Address(RVA = "0xB20CCC", Offset = "0xB20CCC", VA = "0xB20CCC", Slot = "10")]
			set
			{
			}
		}

		[Token(Token = "0x1700042A")]
		public virtual int Count
		{
			[Token(Token = "0x6000D2E")]
			[Address(RVA = "0xB20CD0", Offset = "0xB20CD0", VA = "0xB20CD0", Slot = "11")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700042B")]
		public virtual IEnumerable<JSONNode> Childs
		{
			[Token(Token = "0x6000D33")]
			[Address(RVA = "0xB20D54", Offset = "0xB20D54", VA = "0xB20D54", Slot = "16")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6FA6B4", Offset = "0x6FA6B4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700042C")]
		public IEnumerable<JSONNode> DeepChilds
		{
			[Token(Token = "0x6000D34")]
			[Address(RVA = "0xB20DB0", Offset = "0xB20DB0", VA = "0xB20DB0")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6FA714", Offset = "0x6FA714")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700042D")]
		public virtual int AsInt
		{
			[Token(Token = "0x6000D37")]
			[Address(RVA = "0xB20EA4", Offset = "0xB20EA4", VA = "0xB20EA4", Slot = "18")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000D38")]
			[Address(RVA = "0xB20EE4", Offset = "0xB20EE4", VA = "0xB20EE4", Slot = "19")]
			set
			{
			}
		}

		[Token(Token = "0x1700042E")]
		public virtual float AsFloat
		{
			[Token(Token = "0x6000D39")]
			[Address(RVA = "0xB20F24", Offset = "0xB20F24", VA = "0xB20F24", Slot = "20")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000D3A")]
			[Address(RVA = "0xB20F68", Offset = "0xB20F68", VA = "0xB20F68", Slot = "21")]
			set
			{
			}
		}

		[Token(Token = "0x1700042F")]
		public virtual double AsDouble
		{
			[Token(Token = "0x6000D3B")]
			[Address(RVA = "0xB20FA8", Offset = "0xB20FA8", VA = "0xB20FA8", Slot = "22")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x6000D3C")]
			[Address(RVA = "0xB21048", Offset = "0xB21048", VA = "0xB21048", Slot = "23")]
			set
			{
			}
		}

		[Token(Token = "0x17000430")]
		public virtual bool AsBool
		{
			[Token(Token = "0x6000D3D")]
			[Address(RVA = "0xB21088", Offset = "0xB21088", VA = "0xB21088", Slot = "24")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000D3E")]
			[Address(RVA = "0xB2114C", Offset = "0xB2114C", VA = "0xB2114C", Slot = "25")]
			set
			{
			}
		}

		[Token(Token = "0x17000431")]
		public virtual JSONArray AsArray
		{
			[Token(Token = "0x6000D3F")]
			[Address(RVA = "0xB211D0", Offset = "0xB211D0", VA = "0xB211D0", Slot = "26")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000432")]
		public virtual JSONClass AsObject
		{
			[Token(Token = "0x6000D40")]
			[Address(RVA = "0xB2124C", Offset = "0xB2124C", VA = "0xB2124C", Slot = "27")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D27")]
		[Address(RVA = "0xB20C6C", Offset = "0xB20C6C", VA = "0xB20C6C", Slot = "4")]
		public virtual void Add(string aKey, JSONNode aItem)
		{
		}

		[Token(Token = "0x6000D2F")]
		[Address(RVA = "0xB20CD8", Offset = "0xB20CD8", VA = "0xB20CD8", Slot = "12")]
		public virtual void Add(JSONNode aItem)
		{
		}

		[Token(Token = "0x6000D30")]
		[Address(RVA = "0xB20D3C", Offset = "0xB20D3C", VA = "0xB20D3C", Slot = "13")]
		public virtual JSONNode Remove(string aKey)
		{
			return null;
		}

		[Token(Token = "0x6000D31")]
		[Address(RVA = "0xB20D44", Offset = "0xB20D44", VA = "0xB20D44", Slot = "14")]
		public virtual JSONNode Remove(int aIndex)
		{
			return null;
		}

		[Token(Token = "0x6000D32")]
		[Address(RVA = "0xB20D4C", Offset = "0xB20D4C", VA = "0xB20D4C", Slot = "15")]
		public virtual JSONNode Remove(JSONNode aNode)
		{
			return null;
		}

		[Token(Token = "0x6000D35")]
		[Address(RVA = "0xB20E1C", Offset = "0xB20E1C", VA = "0xB20E1C", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6000D36")]
		[Address(RVA = "0xB20E60", Offset = "0xB20E60", VA = "0xB20E60", Slot = "17")]
		public virtual string ToString(string aPrefix)
		{
			return null;
		}

		[Token(Token = "0x6000D41")]
		[Address(RVA = "0xB212C8", Offset = "0xB212C8", VA = "0xB212C8")]
		public static implicit operator JSONNode(string s)
		{
			return null;
		}

		[Token(Token = "0x6000D42")]
		[Address(RVA = "0xB21328", Offset = "0xB21328", VA = "0xB21328")]
		public static implicit operator string(JSONNode d)
		{
			return null;
		}

		[Token(Token = "0x6000D43")]
		[Address(RVA = "0xB21374", Offset = "0xB21374", VA = "0xB21374")]
		public static bool operator ==(JSONNode a, object b)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D44")]
		[Address(RVA = "0xB21408", Offset = "0xB21408", VA = "0xB21408")]
		public static bool operator !=(JSONNode a, object b)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D45")]
		[Address(RVA = "0xB21424", Offset = "0xB21424", VA = "0xB21424", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D46")]
		[Address(RVA = "0xB20704", Offset = "0xB20704", VA = "0xB20704", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6000D47")]
		[Address(RVA = "0xB1F59C", Offset = "0xB1F59C", VA = "0xB1F59C")]
		internal static string Escape(string aText)
		{
			return null;
		}

		[Token(Token = "0x6000D48")]
		[Address(RVA = "0xB1D670", Offset = "0xB1D670", VA = "0xB1D670")]
		public static JSONNode Parse(string aJSON)
		{
			return null;
		}

		[Token(Token = "0x6000D49")]
		[Address(RVA = "0xB21430", Offset = "0xB21430", VA = "0xB21430", Slot = "28")]
		public virtual void Serialize(BinaryWriter aWriter)
		{
		}

		[Token(Token = "0x6000D4A")]
		[Address(RVA = "0xB21434", Offset = "0xB21434", VA = "0xB21434")]
		public void SaveToStream(Stream aData)
		{
		}

		[Token(Token = "0x6000D4B")]
		[Address(RVA = "0xB214B0", Offset = "0xB214B0", VA = "0xB214B0")]
		public void SaveToCompressedStream(Stream aData)
		{
		}

		[Token(Token = "0x6000D4C")]
		[Address(RVA = "0xB21504", Offset = "0xB21504", VA = "0xB21504")]
		public void SaveToCompressedFile(string aFileName)
		{
		}

		[Token(Token = "0x6000D4D")]
		[Address(RVA = "0xB21558", Offset = "0xB21558", VA = "0xB21558")]
		public string SaveToCompressedBase64()
		{
			return null;
		}

		[Token(Token = "0x6000D4E")]
		[Address(RVA = "0xB215AC", Offset = "0xB215AC", VA = "0xB215AC")]
		public void SaveToFile(string aFileName)
		{
		}

		[Token(Token = "0x6000D4F")]
		[Address(RVA = "0xB2173C", Offset = "0xB2173C", VA = "0xB2173C")]
		public string SaveToBase64()
		{
			return null;
		}

		[Token(Token = "0x6000D50")]
		[Address(RVA = "0xB21910", Offset = "0xB21910", VA = "0xB21910")]
		public static JSONNode Deserialize(BinaryReader aReader)
		{
			return null;
		}

		[Token(Token = "0x6000D51")]
		[Address(RVA = "0xB21CD8", Offset = "0xB21CD8", VA = "0xB21CD8")]
		public static JSONNode LoadFromCompressedFile(string aFileName)
		{
			return null;
		}

		[Token(Token = "0x6000D52")]
		[Address(RVA = "0xB21D2C", Offset = "0xB21D2C", VA = "0xB21D2C")]
		public static JSONNode LoadFromCompressedStream(Stream aData)
		{
			return null;
		}

		[Token(Token = "0x6000D53")]
		[Address(RVA = "0xB21D80", Offset = "0xB21D80", VA = "0xB21D80")]
		public static JSONNode LoadFromCompressedBase64(string aBase64)
		{
			return null;
		}

		[Token(Token = "0x6000D54")]
		[Address(RVA = "0xB21DD4", Offset = "0xB21DD4", VA = "0xB21DD4")]
		public static JSONNode LoadFromStream(Stream aData)
		{
			return null;
		}

		[Token(Token = "0x6000D55")]
		[Address(RVA = "0xB21F34", Offset = "0xB21F34", VA = "0xB21F34")]
		public static JSONNode LoadFromFile(string aFileName)
		{
			return null;
		}

		[Token(Token = "0x6000D56")]
		[Address(RVA = "0xB22074", Offset = "0xB22074", VA = "0xB22074")]
		public static JSONNode LoadFromBase64(string aBase64)
		{
			return null;
		}

		[Token(Token = "0x6000D57")]
		[Address(RVA = "0xB1E84C", Offset = "0xB1E84C", VA = "0xB1E84C")]
		public JSONNode()
		{
		}
	}
	[Token(Token = "0x200014A")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x6F06A8", Offset = "0x6F06A8")]
	public class JSONArray : JSONNode, IEnumerable
	{
		[Token(Token = "0x200014B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F06E0", Offset = "0x6F06E0")]
		private sealed class <get_Childs>d__13 : IEnumerable<JSONNode>, IEnumerable, IEnumerator<JSONNode>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40007ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40007EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private JSONNode <>2__current;

			[Token(Token = "0x40007EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x40007F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public JSONArray <>4__this;

			[Token(Token = "0x40007F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private List<JSONNode>.Enumerator <>7__wrap1;

			[Token(Token = "0x1700043B")]
			private JSONNode System.Collections.Generic.IEnumerator<I2.Loc.SimpleJSON.JSONNode>.Current
			{
				[Token(Token = "0x6000D7C")]
				[Address(RVA = "0x926764", Offset = "0x926764", VA = "0x926764", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700043C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000D7E")]
				[Address(RVA = "0x9267AC", Offset = "0x9267AC", VA = "0x9267AC", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000D78")]
			[Address(RVA = "0x926548", Offset = "0x926548", VA = "0x926548")]
			[DebuggerHidden]
			public <get_Childs>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6000D79")]
			[Address(RVA = "0x926580", Offset = "0x926580", VA = "0x926580", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000D7A")]
			[Address(RVA = "0x9265F0", Offset = "0x9265F0", VA = "0x9265F0", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000D7B")]
			[Address(RVA = "0x92659C", Offset = "0x92659C", VA = "0x92659C")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6000D7D")]
			[Address(RVA = "0x92676C", Offset = "0x92676C", VA = "0x92676C", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6000D7F")]
			[Address(RVA = "0x9267B4", Offset = "0x9267B4", VA = "0x9267B4", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<JSONNode> System.Collections.Generic.IEnumerable<I2.Loc.SimpleJSON.JSONNode>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6000D80")]
			[Address(RVA = "0x92685C", Offset = "0x92685C", VA = "0x92685C", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x200014C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F06F0", Offset = "0x6F06F0")]
		private sealed class <GetEnumerator>d__14 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40007F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40007F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40007F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public JSONArray <>4__this;

			[Token(Token = "0x40007F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private List<JSONNode>.Enumerator <>7__wrap1;

			[Token(Token = "0x1700043D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000D85")]
				[Address(RVA = "0x9264F8", Offset = "0x9264F8", VA = "0x9264F8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700043E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000D87")]
				[Address(RVA = "0x926540", Offset = "0x926540", VA = "0x926540", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000D81")]
			[Address(RVA = "0x9262E8", Offset = "0x9262E8", VA = "0x9262E8")]
			[DebuggerHidden]
			public <GetEnumerator>d__14(int <>1__state)
			{
			}

			[Token(Token = "0x6000D82")]
			[Address(RVA = "0x926314", Offset = "0x926314", VA = "0x926314", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000D83")]
			[Address(RVA = "0x926384", Offset = "0x926384", VA = "0x926384", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000D84")]
			[Address(RVA = "0x926330", Offset = "0x926330", VA = "0x926330")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6000D86")]
			[Address(RVA = "0x926500", Offset = "0x926500", VA = "0x926500", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40007EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<JSONNode> m_List;

		[Token(Token = "0x17000437")]
		public override JSONNode Item
		{
			[Token(Token = "0x6000D6A")]
			[Address(RVA = "0xB1DDA0", Offset = "0xB1DDA0", VA = "0xB1DDA0", Slot = "5")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D6B")]
			[Address(RVA = "0xB1DE88", Offset = "0xB1DE88", VA = "0xB1DE88", Slot = "6")]
			set
			{
			}
		}

		[Token(Token = "0x17000438")]
		public override JSONNode Item
		{
			[Token(Token = "0x6000D6C")]
			[Address(RVA = "0xB1DF40", Offset = "0xB1DF40", VA = "0xB1DF40", Slot = "7")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D6D")]
			[Address(RVA = "0xB1DFA0", Offset = "0xB1DFA0", VA = "0xB1DFA0", Slot = "8")]
			set
			{
			}
		}

		[Token(Token = "0x17000439")]
		public override int Count
		{
			[Token(Token = "0x6000D6E")]
			[Address(RVA = "0xB1E004", Offset = "0xB1E004", VA = "0xB1E004", Slot = "11")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700043A")]
		public override IEnumerable<JSONNode> Childs
		{
			[Token(Token = "0x6000D72")]
			[Address(RVA = "0xB1E1E0", Offset = "0xB1E1E0", VA = "0xB1E1E0", Slot = "16")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6FA854", Offset = "0x6FA854")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D6F")]
		[Address(RVA = "0xB1E050", Offset = "0xB1E050", VA = "0xB1E050", Slot = "4")]
		public override void Add(string aKey, JSONNode aItem)
		{
		}

		[Token(Token = "0x6000D70")]
		[Address(RVA = "0xB1E0B4", Offset = "0xB1E0B4", VA = "0xB1E0B4", Slot = "14")]
		public override JSONNode Remove(int aIndex)
		{
			return null;
		}

		[Token(Token = "0x6000D71")]
		[Address(RVA = "0xB1E174", Offset = "0xB1E174", VA = "0xB1E174", Slot = "15")]
		public override JSONNode Remove(JSONNode aNode)
		{
			return null;
		}

		[Token(Token = "0x6000D73")]
		[Address(RVA = "0xB1E24C", Offset = "0xB1E24C", VA = "0xB1E24C", Slot = "29")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6FA8B4", Offset = "0x6FA8B4")]
		public IEnumerator GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6000D74")]
		[Address(RVA = "0xB1E2B8", Offset = "0xB1E2B8", VA = "0xB1E2B8", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6000D75")]
		[Address(RVA = "0xB1E494", Offset = "0xB1E494", VA = "0xB1E494", Slot = "17")]
		public override string ToString(string aPrefix)
		{
			return null;
		}

		[Token(Token = "0x6000D76")]
		[Address(RVA = "0xB1E6EC", Offset = "0xB1E6EC", VA = "0xB1E6EC", Slot = "28")]
		public override void Serialize(BinaryWriter aWriter)
		{
		}

		[Token(Token = "0x6000D77")]
		[Address(RVA = "0xB1E7D4", Offset = "0xB1E7D4", VA = "0xB1E7D4")]
		public JSONArray()
		{
		}
	}
	[Token(Token = "0x200014D")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x6F0700", Offset = "0x6F0700")]
	public class JSONClass : JSONNode, IEnumerable
	{
		[Token(Token = "0x200014E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F0738", Offset = "0x6F0738")]
		private sealed class <>c__DisplayClass12_0
		{
			[Token(Token = "0x40007F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public JSONNode aNode;

			[Token(Token = "0x6000D97")]
			[Address(RVA = "0x926860", Offset = "0x926860", VA = "0x926860")]
			public <>c__DisplayClass12_0()
			{
			}

			[Token(Token = "0x6000D98")]
			[Address(RVA = "0x926868", Offset = "0x926868", VA = "0x926868")]
			internal bool <Remove>b__0(KeyValuePair<string, JSONNode> k)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x200014F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F0748", Offset = "0x6F0748")]
		private sealed class <get_Childs>d__14 : IEnumerable<JSONNode>, IEnumerable, IEnumerator<JSONNode>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40007F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40007F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private JSONNode <>2__current;

			[Token(Token = "0x40007FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x40007FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public JSONClass <>4__this;

			[Token(Token = "0x40007FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Dictionary<string, JSONNode>.Enumerator <>7__wrap1;

			[Token(Token = "0x17000443")]
			private JSONNode System.Collections.Generic.IEnumerator<I2.Loc.SimpleJSON.JSONNode>.Current
			{
				[Token(Token = "0x6000D9D")]
				[Address(RVA = "0x926D80", Offset = "0x926D80", VA = "0x926D80", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000444")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000D9F")]
				[Address(RVA = "0x926DC8", Offset = "0x926DC8", VA = "0x926DC8", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000D99")]
			[Address(RVA = "0x926B50", Offset = "0x926B50", VA = "0x926B50")]
			[DebuggerHidden]
			public <get_Childs>d__14(int <>1__state)
			{
			}

			[Token(Token = "0x6000D9A")]
			[Address(RVA = "0x926B88", Offset = "0x926B88", VA = "0x926B88", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000D9B")]
			[Address(RVA = "0x926BF8", Offset = "0x926BF8", VA = "0x926BF8", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000D9C")]
			[Address(RVA = "0x926BA4", Offset = "0x926BA4", VA = "0x926BA4")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6000D9E")]
			[Address(RVA = "0x926D88", Offset = "0x926D88", VA = "0x926D88", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6000DA0")]
			[Address(RVA = "0x926DD0", Offset = "0x926DD0", VA = "0x926DD0", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<JSONNode> System.Collections.Generic.IEnumerable<I2.Loc.SimpleJSON.JSONNode>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6000DA1")]
			[Address(RVA = "0x926E78", Offset = "0x926E78", VA = "0x926E78", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x2000150")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F0758", Offset = "0x6F0758")]
		private sealed class <GetEnumerator>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40007FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40007FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40007FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public JSONClass <>4__this;

			[Token(Token = "0x4000800")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Dictionary<string, JSONNode>.Enumerator <>7__wrap1;

			[Token(Token = "0x17000445")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000DA6")]
				[Address(RVA = "0x926B00", Offset = "0x926B00", VA = "0x926B00", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000446")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000DA8")]
				[Address(RVA = "0x926B48", Offset = "0x926B48", VA = "0x926B48", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000DA2")]
			[Address(RVA = "0x9268BC", Offset = "0x9268BC", VA = "0x9268BC")]
			[DebuggerHidden]
			public <GetEnumerator>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x6000DA3")]
			[Address(RVA = "0x9268E8", Offset = "0x9268E8", VA = "0x9268E8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000DA4")]
			[Address(RVA = "0x926958", Offset = "0x926958", VA = "0x926958", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000DA5")]
			[Address(RVA = "0x926904", Offset = "0x926904", VA = "0x926904")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6000DA7")]
			[Address(RVA = "0x926B08", Offset = "0x926B08", VA = "0x926B08", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40007F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Dictionary<string, JSONNode> m_Dict;

		[Token(Token = "0x1700043F")]
		public override JSONNode Item
		{
			[Token(Token = "0x6000D88")]
			[Address(RVA = "0xB1E854", Offset = "0xB1E854", VA = "0xB1E854", Slot = "7")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D89")]
			[Address(RVA = "0xB1E95C", Offset = "0xB1E95C", VA = "0xB1E95C", Slot = "8")]
			set
			{
			}
		}

		[Token(Token = "0x17000440")]
		public override JSONNode Item
		{
			[Token(Token = "0x6000D8A")]
			[Address(RVA = "0xB1EA2C", Offset = "0xB1EA2C", VA = "0xB1EA2C", Slot = "5")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D8B")]
			[Address(RVA = "0xB1EAD8", Offset = "0xB1EAD8", VA = "0xB1EAD8", Slot = "6")]
			set
			{
			}
		}

		[Token(Token = "0x17000441")]
		public override int Count
		{
			[Token(Token = "0x6000D8C")]
			[Address(RVA = "0xB1EBB8", Offset = "0xB1EBB8", VA = "0xB1EBB8", Slot = "11")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000442")]
		public override IEnumerable<JSONNode> Childs
		{
			[Token(Token = "0x6000D91")]
			[Address(RVA = "0xB1F0DC", Offset = "0xB1F0DC", VA = "0xB1F0DC", Slot = "16")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6FA9D4", Offset = "0x6FA9D4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D8D")]
		[Address(RVA = "0xB1EC0C", Offset = "0xB1EC0C", VA = "0xB1EC0C", Slot = "4")]
		public override void Add(string aKey, JSONNode aItem)
		{
		}

		[Token(Token = "0x6000D8E")]
		[Address(RVA = "0xB1ED58", Offset = "0xB1ED58", VA = "0xB1ED58", Slot = "13")]
		public override JSONNode Remove(string aKey)
		{
			return null;
		}

		[Token(Token = "0x6000D8F")]
		[Address(RVA = "0xB1EE28", Offset = "0xB1EE28", VA = "0xB1EE28", Slot = "14")]
		public override JSONNode Remove(int aIndex)
		{
			return null;
		}

		[Token(Token = "0x6000D90")]
		[Address(RVA = "0xB1EF10", Offset = "0xB1EF10", VA = "0xB1EF10", Slot = "15")]
		public override JSONNode Remove(JSONNode aNode)
		{
			return null;
		}

		[Token(Token = "0x6000D92")]
		[Address(RVA = "0xB1F148", Offset = "0xB1F148", VA = "0xB1F148", Slot = "29")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6FAA34", Offset = "0x6FAA34")]
		public IEnumerator GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6000D93")]
		[Address(RVA = "0xB1F1B4", Offset = "0xB1F1B4", VA = "0xB1F1B4", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6000D94")]
		[Address(RVA = "0xB1F768", Offset = "0xB1F768", VA = "0xB1F768", Slot = "17")]
		public override string ToString(string aPrefix)
		{
			return null;
		}

		[Token(Token = "0x6000D95")]
		[Address(RVA = "0xB1FBC0", Offset = "0xB1FBC0", VA = "0xB1FBC0", Slot = "28")]
		public override void Serialize(BinaryWriter aWriter)
		{
		}

		[Token(Token = "0x6000D96")]
		[Address(RVA = "0xB1FDBC", Offset = "0xB1FDBC", VA = "0xB1FDBC")]
		public JSONClass()
		{
		}
	}
	[Token(Token = "0x2000151")]
	public class JSONData : JSONNode
	{
		[Token(Token = "0x4000801")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private string m_Data;

		[Token(Token = "0x17000447")]
		public override string Value
		{
			[Token(Token = "0x6000DA9")]
			[Address(RVA = "0xB1FEB0", Offset = "0xB1FEB0", VA = "0xB1FEB0", Slot = "9")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000DAA")]
			[Address(RVA = "0xB1FEB8", Offset = "0xB1FEB8", VA = "0xB1FEB8", Slot = "10")]
			set
			{
			}
		}

		[Token(Token = "0x6000DAB")]
		[Address(RVA = "0xB1FEC0", Offset = "0xB1FEC0", VA = "0xB1FEC0")]
		public JSONData(string aData)
		{
		}

		[Token(Token = "0x6000DAC")]
		[Address(RVA = "0xB1FEEC", Offset = "0xB1FEEC", VA = "0xB1FEEC")]
		public JSONData(float aData)
		{
		}

		[Token(Token = "0x6000DAD")]
		[Address(RVA = "0xB1FF30", Offset = "0xB1FF30", VA = "0xB1FF30")]
		public JSONData(double aData)
		{
		}

		[Token(Token = "0x6000DAE")]
		[Address(RVA = "0xB1FF74", Offset = "0xB1FF74", VA = "0xB1FF74")]
		public JSONData(bool aData)
		{
		}

		[Token(Token = "0x6000DAF")]
		[Address(RVA = "0xB1FFB0", Offset = "0xB1FFB0", VA = "0xB1FFB0")]
		public JSONData(int aData)
		{
		}

		[Token(Token = "0x6000DB0")]
		[Address(RVA = "0xB1FFEC", Offset = "0xB1FFEC", VA = "0xB1FFEC", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6000DB1")]
		[Address(RVA = "0xB20048", Offset = "0xB20048", VA = "0xB20048", Slot = "17")]
		public override string ToString(string aPrefix)
		{
			return null;
		}

		[Token(Token = "0x6000DB2")]
		[Address(RVA = "0xB200A4", Offset = "0xB200A4", VA = "0xB200A4", Slot = "28")]
		public override void Serialize(BinaryWriter aWriter)
		{
		}
	}
	[Token(Token = "0x2000152")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x6F0768", Offset = "0x6F0768")]
	internal class JSONLazyCreator : JSONNode
	{
		[Token(Token = "0x4000802")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private JSONNode m_Node;

		[Token(Token = "0x4000803")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string m_Key;

		[Token(Token = "0x17000448")]
		public override JSONNode Item
		{
			[Token(Token = "0x6000DB6")]
			[Address(RVA = "0xB203C8", Offset = "0xB203C8", VA = "0xB203C8", Slot = "5")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000DB7")]
			[Address(RVA = "0xB20428", Offset = "0xB20428", VA = "0xB20428", Slot = "6")]
			set
			{
			}
		}

		[Token(Token = "0x17000449")]
		public override JSONNode Item
		{
			[Token(Token = "0x6000DB8")]
			[Address(RVA = "0xB204AC", Offset = "0xB204AC", VA = "0xB204AC", Slot = "7")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000DB9")]
			[Address(RVA = "0xB20518", Offset = "0xB20518", VA = "0xB20518", Slot = "8")]
			set
			{
			}
		}

		[Token(Token = "0x1700044A")]
		public override int AsInt
		{
			[Token(Token = "0x6000DC2")]
			[Address(RVA = "0xB20794", Offset = "0xB20794", VA = "0xB20794", Slot = "18")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000DC3")]
			[Address(RVA = "0xB20814", Offset = "0xB20814", VA = "0xB20814", Slot = "19")]
			set
			{
			}
		}

		[Token(Token = "0x1700044B")]
		public override float AsFloat
		{
			[Token(Token = "0x6000DC4")]
			[Address(RVA = "0xB20898", Offset = "0xB20898", VA = "0xB20898", Slot = "20")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000DC5")]
			[Address(RVA = "0xB20918", Offset = "0xB20918", VA = "0xB20918", Slot = "21")]
			set
			{
			}
		}

		[Token(Token = "0x1700044C")]
		public override double AsDouble
		{
			[Token(Token = "0x6000DC6")]
			[Address(RVA = "0xB2099C", Offset = "0xB2099C", VA = "0xB2099C", Slot = "22")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x6000DC7")]
			[Address(RVA = "0xB20A1C", Offset = "0xB20A1C", VA = "0xB20A1C", Slot = "23")]
			set
			{
			}
		}

		[Token(Token = "0x1700044D")]
		public override bool AsBool
		{
			[Token(Token = "0x6000DC8")]
			[Address(RVA = "0xB20AA0", Offset = "0xB20AA0", VA = "0xB20AA0", Slot = "24")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000DC9")]
			[Address(RVA = "0xB20B20", Offset = "0xB20B20", VA = "0xB20B20", Slot = "25")]
			set
			{
			}
		}

		[Token(Token = "0x1700044E")]
		public override JSONArray AsArray
		{
			[Token(Token = "0x6000DCA")]
			[Address(RVA = "0xB20BA4", Offset = "0xB20BA4", VA = "0xB20BA4", Slot = "26")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700044F")]
		public override JSONClass AsObject
		{
			[Token(Token = "0x6000DCB")]
			[Address(RVA = "0xB20C08", Offset = "0xB20C08", VA = "0xB20C08", Slot = "27")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000DB3")]
		[Address(RVA = "0xB1DE5C", Offset = "0xB1DE5C", VA = "0xB1DE5C")]
		public JSONLazyCreator(JSONNode aNode)
		{
		}

		[Token(Token = "0x6000DB4")]
		[Address(RVA = "0xB1E924", Offset = "0xB1E924", VA = "0xB1E924")]
		public JSONLazyCreator(JSONNode aNode, string aKey)
		{
		}

		[Token(Token = "0x6000DB5")]
		[Address(RVA = "0xB20368", Offset = "0xB20368", VA = "0xB20368")]
		private void Set(JSONNode aVal)
		{
		}

		[Token(Token = "0x6000DBA")]
		[Address(RVA = "0xB205A4", Offset = "0xB205A4", VA = "0xB205A4", Slot = "12")]
		public override void Add(JSONNode aItem)
		{
		}

		[Token(Token = "0x6000DBB")]
		[Address(RVA = "0xB20628", Offset = "0xB20628", VA = "0xB20628", Slot = "4")]
		public override void Add(string aKey, JSONNode aItem)
		{
		}

		[Token(Token = "0x6000DBC")]
		[Address(RVA = "0xB206B4", Offset = "0xB206B4", VA = "0xB206B4")]
		public static bool operator ==(JSONLazyCreator a, object b)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DBD")]
		[Address(RVA = "0xB206CC", Offset = "0xB206CC", VA = "0xB206CC")]
		public static bool operator !=(JSONLazyCreator a, object b)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DBE")]
		[Address(RVA = "0xB206E4", Offset = "0xB206E4", VA = "0xB206E4", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DBF")]
		[Address(RVA = "0xB206FC", Offset = "0xB206FC", VA = "0xB206FC", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6000DC0")]
		[Address(RVA = "0xB2070C", Offset = "0xB2070C", VA = "0xB2070C", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6000DC1")]
		[Address(RVA = "0xB20750", Offset = "0xB20750", VA = "0xB20750", Slot = "17")]
		public override string ToString(string aPrefix)
		{
			return null;
		}
	}
	[Token(Token = "0x2000153")]
	public static class JSON
	{
		[Token(Token = "0x6000DCC")]
		[Address(RVA = "0xB1D66C", Offset = "0xB1D66C", VA = "0xB1D66C")]
		public static JSONNode Parse(string aJSON)
		{
			return null;
		}
	}
}
namespace Placemaker
{
	[Token(Token = "0x2000154")]
	public class AoBaker : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000155")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F07A0", Offset = "0x6F07A0")]
		private sealed class <>c
		{
			[Token(Token = "0x4000822")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x6000DD7")]
			[Address(RVA = "0xBAEA10", Offset = "0xBAEA10", VA = "0xBAEA10")]
			public <>c()
			{
			}

			[Token(Token = "0x6000DD8")]
			[Address(RVA = "0xBAEA18", Offset = "0xBAEA18", VA = "0xBAEA18")]
			internal void <.cctor>b__38_0(RenderTexture <p0>, RenderTexture <p1>)
			{
			}
		}

		[Token(Token = "0x4000804")]
		public const int shadowMeshMaxVertCount = 65532;

		[Token(Token = "0x4000805")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private WorldMaster master;

		[Token(Token = "0x4000806")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		public List<ShadowMesh> shadowMeshes;

		[Token(Token = "0x4000807")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Shader shader;

		[Token(Token = "0x4000808")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Shader spreaderShader;

		[Token(Token = "0x4000809")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Shader marchingSquaresShader;

		[Token(Token = "0x400080A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Material material;

		[Token(Token = "0x400080B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Material spreaderMaterial;

		[Token(Token = "0x400080C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Material marchingSquaresMaterial;

		[Token(Token = "0x400080D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Material stackMaterial;

		[Token(Token = "0x400080E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		public RenderTexture renderTexture0;

		[Token(Token = "0x400080F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		public RenderTexture renderTexture1;

		[Token(Token = "0x4000810")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		public RenderTexture coloredMarchingSquaresTex;

		[Token(Token = "0x4000811")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		public Texture2D marchingSquaresTex;

		[Token(Token = "0x4000812")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		public float2 size;

		[Token(Token = "0x4000813")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		public Vector4 texParams;

		[Token(Token = "0x4000814")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		public int countX;

		[Token(Token = "0x4000815")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[SerializeField]
		public int countY;

		[Token(Token = "0x4000816")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		public int totalCount;

		[Token(Token = "0x4000817")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private Camera cam;

		[Token(Token = "0x4000818")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private Shader stackShader;

		[Token(Token = "0x4000819")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Color uncoveredCol;

		[Token(Token = "0x400081A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly Color32 uncoveredCol32;

		[Token(Token = "0x400081B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Action<RenderTexture, RenderTexture> onTextures;

		[Token(Token = "0x400081C")]
		public const int texSize = 512;

		[Token(Token = "0x400081D")]
		public const float texelSize = 0.001953125f;

		[Token(Token = "0x400081E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public int4 powers;

		[Token(Token = "0x400081F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static readonly int tex3dUvSize;

		[Token(Token = "0x4000820")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public static readonly int tex3dUvInvSize;

		[Token(Token = "0x4000821")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static readonly int tex3dWorldBounds;

		[Token(Token = "0x6000DCD")]
		[Address(RVA = "0xFA5240", Offset = "0xFA5240", VA = "0xFA5240")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000DCE")]
		[Address(RVA = "0xFA5390", Offset = "0xFA5390", VA = "0xFA5390")]
		public void OnStart()
		{
		}

		[Token(Token = "0x6000DCF")]
		[Address(RVA = "0xFA59D8", Offset = "0xFA59D8", VA = "0xFA59D8")]
		public (ShadowMesh, int) GetShadowMesh(int shadowIndex)
		{
			return default((ShadowMesh, int));
		}

		[Token(Token = "0x6000DD0")]
		[Address(RVA = "0xFA52C0", Offset = "0xFA52C0", VA = "0xFA52C0")]
		private void Restore()
		{
		}

		[Token(Token = "0x6000DD1")]
		[Address(RVA = "0xFA5D28", Offset = "0xFA5D28", VA = "0xFA5D28")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x6FAB54", Offset = "0x6FAB54")]
		public void ApplyMaterialColors()
		{
		}

		[Token(Token = "0x6000DD2")]
		[Address(RVA = "0xFA5E54", Offset = "0xFA5E54", VA = "0xFA5E54")]
		public void BakeAo()
		{
		}

		[Token(Token = "0x6000DD3")]
		[Address(RVA = "0xFA6324", Offset = "0xFA6324", VA = "0xFA6324")]
		private void OnPostRender()
		{
		}

		[Token(Token = "0x6000DD4")]
		[Address(RVA = "0xFA6430", Offset = "0xFA6430", VA = "0xFA6430")]
		public AoBaker()
		{
		}
	}
	[Token(Token = "0x2000156")]
	public class AmbientSound : MonoBehaviour
	{
		[Token(Token = "0x4000823")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioSource audioSource;

		[Token(Token = "0x6000DD9")]
		[Address(RVA = "0xFA5174", Offset = "0xFA5174", VA = "0xFA5174")]
		private void Update()
		{
		}

		[Token(Token = "0x6000DDA")]
		[Address(RVA = "0xFA522C", Offset = "0xFA522C", VA = "0xFA522C")]
		private void OnApplicationFocus(bool focus)
		{
		}

		[Token(Token = "0x6000DDB")]
		[Address(RVA = "0xFA5238", Offset = "0xFA5238", VA = "0xFA5238")]
		public AmbientSound()
		{
		}
	}
	[Token(Token = "0x2000157")]
	public class AudioSnapshotManager : MonoBehaviour, UiMaster.IUiSetup
	{
		[Token(Token = "0x4000824")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioMixerSnapshot inFocusSnapshot;

		[Token(Token = "0x4000825")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioMixerSnapshot outOfFocusSnapshot;

		[Token(Token = "0x4000826")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool windowFocused;

		[Token(Token = "0x4000827")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		private bool alphaDim;

		[Token(Token = "0x6000DDC")]
		[Address(RVA = "0xFA7384", Offset = "0xFA7384", VA = "0xFA7384", Slot = "5")]
		private void Placemaker.Ui.UiMaster.IUiSetup.OnSetup(UiMaster master)
		{
		}

		[Token(Token = "0x6000DDD")]
		[Address(RVA = "0xFA743C", Offset = "0xFA743C", VA = "0xFA743C", Slot = "4")]
		private void Placemaker.Ui.UiMaster.IUiSetup.OnStart(UiMaster master)
		{
		}

		[Token(Token = "0x6000DDE")]
		[Address(RVA = "0xFA7440", Offset = "0xFA7440", VA = "0xFA7440")]
		private void OnApplicationFocus(bool focus)
		{
		}

		[Token(Token = "0x6000DDF")]
		[Address(RVA = "0xFA7454", Offset = "0xFA7454", VA = "0xFA7454")]
		private void Update()
		{
		}

		[Token(Token = "0x6000DE0")]
		[Address(RVA = "0xFA74AC", Offset = "0xFA74AC", VA = "0xFA74AC")]
		public AudioSnapshotManager()
		{
		}

		[Token(Token = "0x6000DE1")]
		[Address(RVA = "0xFA74BC", Offset = "0xFA74BC", VA = "0xFA74BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FAB8C", Offset = "0x6FAB8C")]
		private void <Placemaker.Ui.UiMaster.IUiSetup.OnSetup>b__4_0(float x)
		{
		}
	}
	[Token(Token = "0x2000158")]
	public class AudioSourcePool : MonoBehaviour
	{
		[Token(Token = "0x4000828")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int index;

		[Token(Token = "0x4000829")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private int count;

		[Token(Token = "0x6000DE2")]
		[Address(RVA = "0xFA74D4", Offset = "0xFA74D4", VA = "0xFA74D4")]
		private void Start()
		{
		}

		[Token(Token = "0x6000DE3")]
		[Address(RVA = "0xFA75BC", Offset = "0xFA75BC", VA = "0xFA75BC")]
		public AudioSource GetAudioSource()
		{
			return null;
		}

		[Token(Token = "0x6000DE4")]
		[Address(RVA = "0xFA7690", Offset = "0xFA7690", VA = "0xFA7690")]
		public AudioSourcePool()
		{
		}
	}
	[Token(Token = "0x2000159")]
	public class BigMesh : MonoBehaviour
	{
		[Token(Token = "0x400082A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public BigMeshGroup bigMeshGroup;

		[Token(Token = "0x400082B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int createdCount;

		[Token(Token = "0x400082C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool dirty;

		[Token(Token = "0x400082D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		public bool superDirty;

		[Token(Token = "0x400082E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
		public bool needsTrimming;

		[Token(Token = "0x400082F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<PropMeshReference> meshRenderers;

		[Token(Token = "0x4000830")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Mesh mesh;

		[Token(Token = "0x4000831")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public List<ushort> availableIndexes;

		[Token(Token = "0x4000832")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public List<int> availableTris;

		[Token(Token = "0x4000833")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public List<Vector3> verts;

		[Token(Token = "0x4000834")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public List<Vector3> normals;

		[Token(Token = "0x4000835")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public List<Vector4> tangents;

		[Token(Token = "0x4000836")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public List<Vector2> uvs;

		[Token(Token = "0x4000837")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public List<int> tris;

		[Token(Token = "0x17000450")]
		public int availableCount
		{
			[Token(Token = "0x6000DE5")]
			[Address(RVA = "0xFA9B24", Offset = "0xFA9B24", VA = "0xFA9B24")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000451")]
		public int remainingCount
		{
			[Token(Token = "0x6000DE6")]
			[Address(RVA = "0xFA9B80", Offset = "0xFA9B80", VA = "0xFA9B80")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6000DE7")]
		[Address(RVA = "0xFA9B90", Offset = "0xFA9B90", VA = "0xFA9B90")]
		public void Clear()
		{
		}

		[Token(Token = "0x6000DE8")]
		[Address(RVA = "0xFA9C9C", Offset = "0xFA9C9C", VA = "0xFA9C9C")]
		public void SetDirty()
		{
		}

		[Token(Token = "0x6000DE9")]
		[Address(RVA = "0xFA9CA8", Offset = "0xFA9CA8", VA = "0xFA9CA8")]
		public BigMesh()
		{
		}
	}
	[Token(Token = "0x200015A")]
	public class BigMeshGroup : MonoBehaviour
	{
		[Token(Token = "0x4000838")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material material;

		[Token(Token = "0x4000839")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<BigMesh> bigMeshes;

		[Token(Token = "0x400083A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool isObjExportable;

		[Token(Token = "0x6000DEA")]
		[Address(RVA = "0xFA9EA0", Offset = "0xFA9EA0", VA = "0xFA9EA0")]
		public BigMeshGroup()
		{
		}
	}
	[Token(Token = "0x200015B")]
	public class BigMeshMaster : MonoBehaviour
	{
		[Token(Token = "0x400083B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private WorldMaster master;

		[Token(Token = "0x400083C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		public List<BigMeshGroup> bigMeshGroups;

		[Token(Token = "0x400083D")]
		private const int INITIAL_VERT_CAPACITY = 65536;

		[Token(Token = "0x400083E")]
		private const int INITIAL_TRIS_CAPACITY = 65536;

		[Token(Token = "0x6000DEB")]
		[Address(RVA = "0xFAA508", Offset = "0xFAA508", VA = "0xFAA508")]
		public BigMesh GetBigMesh(Material material, int vertCount)
		{
			return null;
		}

		[Token(Token = "0x6000DEC")]
		[Address(RVA = "0xFAA8D4", Offset = "0xFAA8D4", VA = "0xFAA8D4")]
		public bool OnLateUpdate(Func<bool> keepGoing)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DED")]
		[Address(RVA = "0xFAAD94", Offset = "0xFAAD94", VA = "0xFAAD94")]
		public bool TrimIterate()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DEE")]
		[Address(RVA = "0xFAB098", Offset = "0xFAB098", VA = "0xFAB098")]
		public void OnStart()
		{
		}

		[Token(Token = "0x6000DEF")]
		[Address(RVA = "0xFAAA6C", Offset = "0xFAAA6C", VA = "0xFAAA6C")]
		private void MaybeApply(BigMesh bigMesh)
		{
		}

		[Token(Token = "0x6000DF0")]
		[Address(RVA = "0xFAB20C", Offset = "0xFAB20C", VA = "0xFAB20C")]
		public void AddMesh(BigMeshPart bigMeshPart, Material material, BigMeshList lists, bool superDirty = false)
		{
		}

		[Token(Token = "0x6000DF1")]
		[Address(RVA = "0xFAB244", Offset = "0xFAB244", VA = "0xFAB244")]
		public void AddMesh(BigMeshPart bigMeshPart, Material material, List<Vector3> verts, List<Vector3> normals, List<Vector4> tangents, List<Vector2> uvs, List<int> tris, bool superDirty = false)
		{
		}

		[Token(Token = "0x6000DF2")]
		[Address(RVA = "0xFAB0E8", Offset = "0xFAB0E8", VA = "0xFAB0E8")]
		private void ExpandBigMesh(BigMesh bigMesh, bool hasNormals, bool hasTangents, bool hasUvs)
		{
		}

		[Token(Token = "0x6000DF3")]
		private void ExpandList<T>(List<T> list, int desiredCapacity, int minimumCapacity, [Optional] T zero)
		{
		}

		[Token(Token = "0x6000DF4")]
		private void EnsureCapacity<T>(List<T> list, int desiredCapacity, int minimumCapacity)
		{
		}

		[Token(Token = "0x6000DF5")]
		[Address(RVA = "0xFABC90", Offset = "0xFABC90", VA = "0xFABC90")]
		public void ReturnMesh(BigMeshPart bigMeshPart, bool superDirty = false)
		{
		}

		[Token(Token = "0x6000DF6")]
		[Address(RVA = "0xFABEA4", Offset = "0xFABEA4", VA = "0xFABEA4")]
		public BigMeshMaster()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200015C")]
	public class BigMeshPart
	{
		[Token(Token = "0x400083F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public BigMesh bigMesh;

		[Token(Token = "0x4000840")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<ushort> vertIndexes;

		[Token(Token = "0x4000841")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<int> triIndexes;

		[Token(Token = "0x6000DF7")]
		[Address(RVA = "0xFABF1C", Offset = "0xFABF1C", VA = "0xFABF1C")]
		public BigMeshPart()
		{
		}
	}
	[Token(Token = "0x200015D")]
	public struct BigMeshList
	{
		[Token(Token = "0x4000842")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public List<Vector3> verts;

		[Token(Token = "0x4000843")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public List<Vector3> normals;

		[Token(Token = "0x4000844")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<Vector4> tangents;

		[Token(Token = "0x4000845")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<Vector2> uvs;

		[Token(Token = "0x4000846")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<int> tris;

		[Token(Token = "0x6000DF8")]
		[Address(RVA = "0xFA9F18", Offset = "0xFA9F18", VA = "0xFA9F18")]
		public static BigMeshList Get()
		{
			return default(BigMeshList);
		}

		[Token(Token = "0x6000DF9")]
		[Address(RVA = "0xFAA0AC", Offset = "0xFAA0AC", VA = "0xFAA0AC")]
		public void ReturnToPool()
		{
		}

		[Token(Token = "0x6000DFA")]
		[Address(RVA = "0xFAA164", Offset = "0xFAA164", VA = "0xFAA164")]
		public void Populate(MeshFilter mf)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200015E")]
	public struct BitMeshQuadChange : IComparable<BitMeshQuadChange>
	{
		[Token(Token = "0x4000847")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public byte quadIndex;

		[Token(Token = "0x4000848")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int2 hexPos;

		[Token(Token = "0x4000849")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public bool state;

		[Token(Token = "0x6000DFB")]
		[Address(RVA = "0xFB1974", Offset = "0xFB1974", VA = "0xFB1974", Slot = "4")]
		private int System.IComparable<Placemaker.BitMeshQuadChange>.CompareTo(BitMeshQuadChange other)
		{
			return default(int);
		}
	}
	[Token(Token = "0x200015F")]
	public class BootGameCore : MonoBehaviour
	{
		[Token(Token = "0x2000160")]
		public enum State
		{
			[Token(Token = "0x4000855")]
			None,
			[Token(Token = "0x4000856")]
			WaitingForSignIn,
			[Token(Token = "0x4000857")]
			SignedIn,
			[Token(Token = "0x4000858")]
			SignedOut
		}

		[Token(Token = "0x400084A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private FuryStudios.FurySDK.Settings.PlatformSettings settings;

		[Token(Token = "0x400084B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool _userPrompted;

		[Token(Token = "0x400084C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		private bool _signInFailedOnce;

		[Token(Token = "0x400084D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Player _selectedPlayer;

		[Token(Token = "0x400084E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private IAsyncRequest _signInReq;

		[Token(Token = "0x400084F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool firstSignIn;

		[Token(Token = "0x4000850")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public BootMaster bootMaster;

		[Token(Token = "0x4000851")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public UpdateState promptState;

		[Token(Token = "0x4000852")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public CanvasGroup promptCanvasGroup;

		[Token(Token = "0x4000853")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public State state;

		[Token(Token = "0x6000DFC")]
		[Address(RVA = "0xFB1AA8", Offset = "0xFB1AA8", VA = "0xFB1AA8")]
		public void StartNewSignIn()
		{
		}

		[Token(Token = "0x6000DFD")]
		[Address(RVA = "0xFB1BB8", Offset = "0xFB1BB8", VA = "0xFB1BB8")]
		private void Update()
		{
		}

		[Token(Token = "0x6000DFE")]
		[Address(RVA = "0xFB2474", Offset = "0xFB2474", VA = "0xFB2474")]
		private void BootGameCore_OnComplete()
		{
		}

		[Token(Token = "0x6000DFF")]
		[Address(RVA = "0xFB2808", Offset = "0xFB2808", VA = "0xFB2808")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000E00")]
		[Address(RVA = "0xFB2888", Offset = "0xFB2888", VA = "0xFB2888")]
		public BootGameCore()
		{
		}
	}
	[Token(Token = "0x2000161")]
	public class BootMaster : MonoBehaviour
	{
		[Token(Token = "0x2000162")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F07B0", Offset = "0x6F07B0")]
		private sealed class <FirstBootWrapper>d__15 : IEnumerator<bool>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000866")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000867")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private bool <>2__current;

			[Token(Token = "0x4000868")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public BootMaster <>4__this;

			[Token(Token = "0x4000869")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private IEnumerator<bool> <gameBootRoutine>5__2;

			[Token(Token = "0x400086A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private IEnumerator<bool> <userBootRoutine>5__3;

			[Token(Token = "0x17000452")]
			private bool System.Collections.Generic.IEnumerator<System.Boolean>.Current
			{
				[Token(Token = "0x6000E0F")]
				[Address(RVA = "0xBAF098", Offset = "0xBAF098", VA = "0xBAF098", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x17000453")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000E11")]
				[Address(RVA = "0xBAF0E0", Offset = "0xBAF0E0", VA = "0xBAF0E0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000E0C")]
			[Address(RVA = "0xBAED88", Offset = "0xBAED88", VA = "0xBAED88")]
			[DebuggerHidden]
			public <FirstBootWrapper>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x6000E0D")]
			[Address(RVA = "0xBAEDB4", Offset = "0xBAEDB4", VA = "0xBAEDB4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000E0E")]
			[Address(RVA = "0xBAEDB8", Offset = "0xBAEDB8", VA = "0xBAEDB8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000E10")]
			[Address(RVA = "0xBAF0A0", Offset = "0xBAF0A0", VA = "0xBAF0A0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000163")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F07C0", Offset = "0x6F07C0")]
		private sealed class <GameBootRoutine>d__16 : IEnumerator<bool>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400086B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400086C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private bool <>2__current;

			[Token(Token = "0x400086D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public BootMaster <>4__this;

			[Token(Token = "0x400086E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private Scene <mainScene>5__2;

			[Token(Token = "0x400086F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private AsyncOperation <mainSceneOperation>5__3;

			[Token(Token = "0x4000870")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private AsyncOperation <flatscreenUiOperation>5__4;

			[Token(Token = "0x17000454")]
			private bool System.Collections.Generic.IEnumerator<System.Boolean>.Current
			{
				[Token(Token = "0x6000E15")]
				[Address(RVA = "0xBAF6A8", Offset = "0xBAF6A8", VA = "0xBAF6A8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x17000455")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000E17")]
				[Address(RVA = "0xBAF6F0", Offset = "0xBAF6F0", VA = "0xBAF6F0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000E12")]
			[Address(RVA = "0xBAF140", Offset = "0xBAF140", VA = "0xBAF140")]
			[DebuggerHidden]
			public <GameBootRoutine>d__16(int <>1__state)
			{
			}

			[Token(Token = "0x6000E13")]
			[Address(RVA = "0xBAF16C", Offset = "0xBAF16C", VA = "0xBAF16C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000E14")]
			[Address(RVA = "0xBAF170", Offset = "0xBAF170", VA = "0xBAF170", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000E16")]
			[Address(RVA = "0xBAF6B0", Offset = "0xBAF6B0", VA = "0xBAF6B0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000164")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F07D0", Offset = "0x6F07D0")]
		private sealed class <UserBootRoutine>d__17 : IEnumerator<bool>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000871")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000872")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private bool <>2__current;

			[Token(Token = "0x4000873")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public BootMaster <>4__this;

			[Token(Token = "0x4000874")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private SaveSystem <saveSystem>5__2;

			[Token(Token = "0x17000456")]
			private bool System.Collections.Generic.IEnumerator<System.Boolean>.Current
			{
				[Token(Token = "0x6000E1B")]
				[Address(RVA = "0x91AB24", Offset = "0x91AB24", VA = "0x91AB24", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x17000457")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000E1D")]
				[Address(RVA = "0x91AB6C", Offset = "0x91AB6C", VA = "0x91AB6C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000E18")]
			[Address(RVA = "0x91A8BC", Offset = "0x91A8BC", VA = "0x91A8BC")]
			[DebuggerHidden]
			public <UserBootRoutine>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x6000E19")]
			[Address(RVA = "0x91A8E8", Offset = "0x91A8E8", VA = "0x91A8E8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000E1A")]
			[Address(RVA = "0x91A8EC", Offset = "0x91A8EC", VA = "0x91A8EC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000E1C")]
			[Address(RVA = "0x91AB2C", Offset = "0x91AB2C", VA = "0x91AB2C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000165")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F07E0", Offset = "0x6F07E0")]
		private sealed class <SignedOutBootWrapper>d__19 : IEnumerator<bool>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000875")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000876")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private bool <>2__current;

			[Token(Token = "0x4000877")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public BootMaster <>4__this;

			[Token(Token = "0x4000878")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private IEnumerator<bool> <userBootRoutine>5__2;

			[Token(Token = "0x17000458")]
			private bool System.Collections.Generic.IEnumerator<System.Boolean>.Current
			{
				[Token(Token = "0x6000E21")]
				[Address(RVA = "0xBAF9C0", Offset = "0xBAF9C0", VA = "0xBAF9C0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x17000459")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000E23")]
				[Address(RVA = "0xBAFA08", Offset = "0xBAFA08", VA = "0xBAFA08", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000E1E")]
			[Address(RVA = "0xBAF750", Offset = "0xBAF750", VA = "0xBAF750")]
			[DebuggerHidden]
			public <SignedOutBootWrapper>d__19(int <>1__state)
			{
			}

			[Token(Token = "0x6000E1F")]
			[Address(RVA = "0xBAF77C", Offset = "0xBAF77C", VA = "0xBAF77C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000E20")]
			[Address(RVA = "0xBAF780", Offset = "0xBAF780", VA = "0xBAF780", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000E22")]
			[Address(RVA = "0xBAF9C8", Offset = "0xBAF9C8", VA = "0xBAF9C8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000859")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static BootMaster instance;

		[Token(Token = "0x400085A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Dim dim;

		[Token(Token = "0x400085B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LoadingUi loadingUi;

		[Token(Token = "0x400085C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AudioListener audioListener;

		[Token(Token = "0x400085D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public WorldMaster worldMaster;

		[Token(Token = "0x400085E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public UiMaster uiMaster;

		[Token(Token = "0x400085F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public PlatformManager platformManager;

		[Token(Token = "0x4000860")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public BootGameCore bootGameCore;

		[Token(Token = "0x4000861")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public GameObject vrLoadCamera;

		[Token(Token = "0x4000862")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Transform vrLoadCanvas;

		[Token(Token = "0x4000863")]
		private const string mainSceneName = "Placemaker";

		[Token(Token = "0x4000864")]
		private const string flatscreenUiSceneName = "FlatscreenUi";

		[Token(Token = "0x4000865")]
		private const string flatscreenUiVRSceneName = "FlatscreenUi";

		[Token(Token = "0x6000E02")]
		[Address(RVA = "0xFB2940", Offset = "0xFB2940", VA = "0xFB2940")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000E03")]
		[Address(RVA = "0xFB2944", Offset = "0xFB2944", VA = "0xFB2944")]
		private void Start()
		{
		}

		[Token(Token = "0x6000E04")]
		[Address(RVA = "0xFB29C0", Offset = "0xFB29C0", VA = "0xFB29C0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6FAB9C", Offset = "0x6FAB9C")]
		private IEnumerator<bool> FirstBootWrapper()
		{
			return null;
		}

		[Token(Token = "0x6000E05")]
		[Address(RVA = "0xFB2A2C", Offset = "0xFB2A2C", VA = "0xFB2A2C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6FABFC", Offset = "0x6FABFC")]
		private IEnumerator<bool> GameBootRoutine()
		{
			return null;
		}

		[Token(Token = "0x6000E06")]
		[Address(RVA = "0xFB2A98", Offset = "0xFB2A98", VA = "0xFB2A98")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6FAC5C", Offset = "0x6FAC5C")]
		private IEnumerator<bool> UserBootRoutine()
		{
			return null;
		}

		[Token(Token = "0x6000E07")]
		[Address(RVA = "0xFB23F8", Offset = "0xFB23F8", VA = "0xFB23F8")]
		public void OnSignedOut()
		{
		}

		[Token(Token = "0x6000E08")]
		[Address(RVA = "0xFB2B04", Offset = "0xFB2B04", VA = "0xFB2B04")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6FACBC", Offset = "0x6FACBC")]
		private IEnumerator<bool> SignedOutBootWrapper()
		{
			return null;
		}

		[Token(Token = "0x6000E09")]
		[Address(RVA = "0xFB2B70", Offset = "0xFB2B70", VA = "0xFB2B70")]
		public static void DoFullscreen()
		{
		}

		[Token(Token = "0x6000E0A")]
		[Address(RVA = "0xFB2C44", Offset = "0xFB2C44", VA = "0xFB2C44")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000E0B")]
		[Address(RVA = "0xFB2DAC", Offset = "0xFB2DAC", VA = "0xFB2DAC")]
		public BootMaster()
		{
		}
	}
	[Token(Token = "0x2000166")]
	public class BorderDrawer : MonoBehaviour
	{
		[Token(Token = "0x4000879")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private WorldMaster master;

		[Token(Token = "0x400087A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Mesh mesh;

		[Token(Token = "0x400087B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Material material;

		[Token(Token = "0x400087C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private MaterialPropertyBlock block;

		[Token(Token = "0x6000E24")]
		[Address(RVA = "0xFB2DB4", Offset = "0xFB2DB4", VA = "0xFB2DB4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000E25")]
		[Address(RVA = "0xFB2E48", Offset = "0xFB2E48", VA = "0xFB2E48")]
		private void SetupBlock()
		{
		}

		[Token(Token = "0x6000E26")]
		[Address(RVA = "0xFB2EE0", Offset = "0xFB2EE0", VA = "0xFB2EE0")]
		public void OnStart()
		{
		}

		[Token(Token = "0x6000E27")]
		[Address(RVA = "0xFB2F40", Offset = "0xFB2F40", VA = "0xFB2F40")]
		public void BoundsUpdated()
		{
		}

		[Token(Token = "0x6000E28")]
		[Address(RVA = "0xFB2F44", Offset = "0xFB2F44", VA = "0xFB2F44")]
		public void Draw()
		{
		}

		[Token(Token = "0x6000E29")]
		[Address(RVA = "0xFB307C", Offset = "0xFB307C", VA = "0xFB307C")]
		public BorderDrawer()
		{
		}
	}
	[Token(Token = "0x2000167")]
	public class CellHighlightMaster : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000168")]
		public struct Highlight
		{
			[Token(Token = "0x4000881")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float time;
		}

		[Token(Token = "0x400087D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public WorldMaster master;

		[Token(Token = "0x400087E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<Highlight> highlights;

		[Token(Token = "0x400087F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AnimationCurve alpha;

		[Token(Token = "0x4000880")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private MaterialPropertyBlock block;

		[Token(Token = "0x6000E2A")]
		[Address(RVA = "0x8E546C", Offset = "0x8E546C", VA = "0x8E546C")]
		public void FlashHighlight(Vert vert, int height)
		{
		}

		[Token(Token = "0x6000E2B")]
		[Address(RVA = "0x8E5EB8", Offset = "0x8E5EB8", VA = "0x8E5EB8")]
		private void Update()
		{
		}

		[Token(Token = "0x6000E2C")]
		[Address(RVA = "0x8E5678", Offset = "0x8E5678", VA = "0x8E5678")]
		public static void PopulateMesh(Vert vert, Mesh mesh)
		{
		}

		[Token(Token = "0x6000E2D")]
		[Address(RVA = "0x8E61F4", Offset = "0x8E61F4", VA = "0x8E61F4")]
		public CellHighlightMaster()
		{
		}
	}
	[Token(Token = "0x2000169")]
	public class ClickEffect : MonoBehaviour
	{
		[Token(Token = "0x4000882")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private WorldMaster master;

		[Token(Token = "0x4000883")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private ParticleSystem particle;

		[Token(Token = "0x4000884")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ParticleSystem voxelSplash;

		[Token(Token = "0x4000885")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private ParticleSystem dust;

		[Token(Token = "0x4000886")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private ParticleSystem colorPickEffect;

		[Token(Token = "0x4000887")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private VoxelType lastVoxelType;

		[Token(Token = "0x4000888")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		private VoxelType lastColorPickType;

		[Token(Token = "0x4000889")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private List<AudioClip> addClips;

		[Token(Token = "0x400088A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private List<AudioClip> removeClips;

		[Token(Token = "0x400088B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private List<AudioClip> addClips1;

		[Token(Token = "0x400088C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private List<AudioClip> removeClips1;

		[Token(Token = "0x400088D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private List<AudioClip> splashClips;

		[Token(Token = "0x400088E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private List<AudioClip> colorPickClips;

		[Token(Token = "0x400088F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public float lastClick;

		[Token(Token = "0x4000890")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private float lastPitch;

		[Token(Token = "0x6000E2E")]
		[Address(RVA = "0x8E626C", Offset = "0x8E626C", VA = "0x8E626C")]
		public void ColorPick(Voxel voxel)
		{
		}

		[Token(Token = "0x6000E2F")]
		[Address(RVA = "0x8E65C0", Offset = "0x8E65C0", VA = "0x8E65C0")]
		public void Click(bool add, Vector2 planePos, int height, VoxelType voxelType)
		{
		}

		[Token(Token = "0x6000E30")]
		[Address(RVA = "0x8E6D9C", Offset = "0x8E6D9C", VA = "0x8E6D9C")]
		public void Click(HoverData hover, bool add, Voxel voxel)
		{
		}

		[Token(Token = "0x6000E31")]
		[Address(RVA = "0x8E6E20", Offset = "0x8E6E20", VA = "0x8E6E20")]
		public void ClickBig(VoxelType voxelType)
		{
		}

		[Token(Token = "0x6000E32")]
		[Address(RVA = "0x8E6BFC", Offset = "0x8E6BFC", VA = "0x8E6BFC")]
		private void SetColor(VoxelType voxelType)
		{
		}

		[Token(Token = "0x6000E33")]
		[Address(RVA = "0x8E64A4", Offset = "0x8E64A4", VA = "0x8E64A4")]
		private void SetColorPickColor(VoxelType voxelType)
		{
		}

		[Token(Token = "0x6000E34")]
		[Address(RVA = "0x8E71AC", Offset = "0x8E71AC", VA = "0x8E71AC")]
		public ClickEffect()
		{
		}
	}
	[Token(Token = "0x200016A")]
	public class ClickParticleSound : MonoBehaviour
	{
		[Token(Token = "0x4000891")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private WorldMaster master;

		[Token(Token = "0x4000892")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private ParticleSystem particles;

		[Token(Token = "0x4000893")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float lowestSpeed;

		[Token(Token = "0x4000894")]
		private const float volumeModifier = 0.1f;

		[Token(Token = "0x6000E35")]
		[Address(RVA = "0x8E72B4", Offset = "0x8E72B4", VA = "0x8E72B4")]
		public void OnParticleCollision(GameObject other)
		{
		}

		[Token(Token = "0x6000E36")]
		[Address(RVA = "0x8E75A0", Offset = "0x8E75A0", VA = "0x8E75A0")]
		private void OnParticleTrigger()
		{
		}

		[Token(Token = "0x6000E37")]
		[Address(RVA = "0x8E77C0", Offset = "0x8E77C0", VA = "0x8E77C0")]
		public ClickParticleSound()
		{
		}
	}
	[Token(Token = "0x200016B")]
	public class Voxel : MonoBehaviour, IComparable<Voxel>
	{
		[Token(Token = "0x4000895")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public VoxelType type;

		[Token(Token = "0x4000896")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[SerializeField]
		public byte height;

		[Token(Token = "0x4000897")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		public int cost;

		[Token(Token = "0x6000E38")]
		[Address(RVA = "0x1BDDC60", Offset = "0x1BDDC60", VA = "0x1BDDC60", Slot = "4")]
		private int System.IComparable<Placemaker.Voxel>.CompareTo(Voxel other)
		{
			return default(int);
		}

		[Token(Token = "0x6000E39")]
		[Address(RVA = "0x1BDDC80", Offset = "0x1BDDC80", VA = "0x1BDDC80")]
		public Voxel()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200016C")]
	public class GridBit : MonoBehaviour
	{
		[Token(Token = "0x200016D")]
		public enum State : byte
		{
			[Token(Token = "0x40008A0")]
			Verts,
			[Token(Token = "0x40008A1")]
			Relax,
			[Token(Token = "0x40008A2")]
			Clusters,
			[Token(Token = "0x40008A3")]
			Compose,
			[Token(Token = "0x40008A4")]
			Mesh,
			[Token(Token = "0x40008A5")]
			Done
		}

		[Token(Token = "0x4000898")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int2 hexPos;

		[Token(Token = "0x4000899")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public byte motivations;

		[Token(Token = "0x400089A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public byte relaxationSteps;

		[Token(Token = "0x400089B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
		public byte clusterCount;

		[Token(Token = "0x400089C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
		public bool patchDone;

		[Token(Token = "0x400089D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public State state;

		[Token(Token = "0x400089E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<float2> verts;

		[Token(Token = "0x1700045A")]
		public bool done
		{
			[Token(Token = "0x6000E3A")]
			[Address(RVA = "0x16C0518", Offset = "0x16C0518", VA = "0x16C0518")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000E3B")]
		[Address(RVA = "0x16C0528", Offset = "0x16C0528", VA = "0x16C0528")]
		public GridBit()
		{
		}
	}
	[Token(Token = "0x200016E")]
	public class GridGenerator : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200016F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F07F0", Offset = "0x6F07F0")]
		private sealed class <>c
		{
			[Token(Token = "0x40008B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40008B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<bool> <>9__46_0;

			[Token(Token = "0x6000E6A")]
			[Address(RVA = "0x925C5C", Offset = "0x925C5C", VA = "0x925C5C")]
			public <>c()
			{
			}

			[Token(Token = "0x6000E6B")]
			[Address(RVA = "0x925C64", Offset = "0x925C64", VA = "0x925C64")]
			internal bool <SceneProcessIteration>b__46_0()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40008A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private WorldMaster master;

		[Token(Token = "0x40008A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		public Transform bitContainer;

		[Token(Token = "0x40008A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private CustomGridLibrary customGridLibrary;

		[Token(Token = "0x40008A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private List<GridBit> bits;

		[Token(Token = "0x40008AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Dictionary<int2, GridBit> bitDict;

		[Token(Token = "0x40008AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		public List<HexPatch> patches;

		[Token(Token = "0x40008AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Dictionary<int2, HexPatch> patchDict;

		[Token(Token = "0x40008AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private List<HexCluster> clusters;

		[Token(Token = "0x40008AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Dictionary<int2, HexCluster> clusterDict;

		[Token(Token = "0x40008AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private ushort bitProcessIndex;

		[Token(Token = "0x40008B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private List<float2> deltas;

		[Token(Token = "0x40008B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		public bool focusUpdated;

		[Token(Token = "0x40008B2")]
		private const float bitRadius = 10.510949f;

		[Token(Token = "0x40008B3")]
		private const int bitExtent = 84;

		[Token(Token = "0x40008B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly float diagonal;

		[Token(Token = "0x40008B5")]
		private const int relaxIterations = 64;

		[Token(Token = "0x40008B6")]
		private const int bitMeshVertCount = 300;

		[Token(Token = "0x40008B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private int2 hexOrigo;

		[Token(Token = "0x6000E3C")]
		[Address(RVA = "0x16C0B5C", Offset = "0x16C0B5C", VA = "0x16C0B5C")]
		public static float2 HexToPlane(float3 hexPos)
		{
			return default(float2);
		}

		[Token(Token = "0x6000E3D")]
		[Address(RVA = "0x16C0BF4", Offset = "0x16C0BF4", VA = "0x16C0BF4")]
		public static float2 HexToPlane(float2 hexPos)
		{
			return default(float2);
		}

		[Token(Token = "0x6000E3E")]
		[Address(RVA = "0x16C0C7C", Offset = "0x16C0C7C", VA = "0x16C0C7C")]
		public static float2 HexToPlane(int2 hexPos)
		{
			return default(float2);
		}

		[Token(Token = "0x6000E3F")]
		[Address(RVA = "0x16C0D0C", Offset = "0x16C0D0C", VA = "0x16C0D0C")]
		public static float2 HexToPlane(int3 hexPos)
		{
			return default(float2);
		}

		[Token(Token = "0x6000E40")]
		[Address(RVA = "0x16C0DB8", Offset = "0x16C0DB8", VA = "0x16C0DB8")]
		public static float3 PlaneToHex(float2 planePos)
		{
			return default(float3);
		}

		[Token(Token = "0x6000E41")]
		[Address(RVA = "0x16C0E3C", Offset = "0x16C0E3C", VA = "0x16C0E3C")]
		private int3 HexToPatchHex(float3 hexPos)
		{
			return default(int3);
		}

		[Token(Token = "0x6000E42")]
		[Address(RVA = "0x16C0F74", Offset = "0x16C0F74", VA = "0x16C0F74")]
		public int2 HexToPatchHex(int2 hexPos)
		{
			return default(int2);
		}

		[Token(Token = "0x6000E43")]
		[Address(RVA = "0x16C0FF8", Offset = "0x16C0FF8", VA = "0x16C0FF8")]
		public float GetVertCost(float2 hexPos)
		{
			return default(float);
		}

		[Token(Token = "0x6000E44")]
		[Address(RVA = "0x16C1070", Offset = "0x16C1070", VA = "0x16C1070")]
		public void PopulateBorderMesh(Vert vert, Mesh mesh)
		{
		}

		[Token(Token = "0x6000E45")]
		[Address(RVA = "0x16C1D94", Offset = "0x16C1D94", VA = "0x16C1D94")]
		private int3 GetClosestClusterPos(int3 hexPos)
		{
			return default(int3);
		}

		[Token(Token = "0x6000E46")]
		[Address(RVA = "0x16C2098", Offset = "0x16C2098", VA = "0x16C2098")]
		public void HexToPatchHexes(int3 hexPos, out int3x3 patchPositions, out byte mask)
		{
		}

		[Token(Token = "0x6000E47")]
		[Address(RVA = "0x16C2538", Offset = "0x16C2538", VA = "0x16C2538")]
		public int3 HexToGridCentroid(int3 hexPos)
		{
			return default(int3);
		}

		[Token(Token = "0x6000E48")]
		[Address(RVA = "0x16C2784", Offset = "0x16C2784", VA = "0x16C2784")]
		private bool IsNewGrid(int3 hexPos)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E49")]
		[Address(RVA = "0x16C2868", Offset = "0x16C2868", VA = "0x16C2868")]
		private int GetSubdivisions(int2 hexPos)
		{
			return default(int);
		}

		[Token(Token = "0x6000E4A")]
		[Address(RVA = "0x16C28D8", Offset = "0x16C28D8", VA = "0x16C28D8")]
		private bool IsBorder(int2 hexPos)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E4B")]
		[Address(RVA = "0x16C2B3C", Offset = "0x16C2B3C", VA = "0x16C2B3C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000E4C")]
		[Address(RVA = "0x16C1F54", Offset = "0x16C1F54", VA = "0x16C1F54")]
		public int2 GetPatchOffset(int2 clusterPos)
		{
			return default(int2);
		}

		[Token(Token = "0x6000E4D")]
		[Address(RVA = "0x16C30A4", Offset = "0x16C30A4", VA = "0x16C30A4")]
		public static int2 GetClusterOffset()
		{
			return default(int2);
		}

		[Token(Token = "0x6000E4E")]
		[Address(RVA = "0x16C30B4", Offset = "0x16C30B4", VA = "0x16C30B4")]
		private GridBit MotivateBit(int2 bitPos)
		{
			return null;
		}

		[Token(Token = "0x6000E4F")]
		[Address(RVA = "0x16C3A80", Offset = "0x16C3A80", VA = "0x16C3A80")]
		private void UnmotivateBit(GridBit bit)
		{
		}

		[Token(Token = "0x6000E50")]
		[Address(RVA = "0x16C3B08", Offset = "0x16C3B08", VA = "0x16C3B08")]
		private void UnmotivateBitChildren(GridBit bit)
		{
		}

		[Token(Token = "0x6000E51")]
		[Address(RVA = "0x16C37C0", Offset = "0x16C37C0", VA = "0x16C37C0")]
		private HexCluster MotivateCluster(int2 clusterPos, int2 sourcePos)
		{
			return null;
		}

		[Token(Token = "0x6000E52")]
		[Address(RVA = "0x16C3C74", Offset = "0x16C3C74", VA = "0x16C3C74")]
		private void UnmotivateCluster(HexCluster cluster, int2 sourcePos)
		{
		}

		[Token(Token = "0x6000E53")]
		[Address(RVA = "0x16C3CCC", Offset = "0x16C3CCC", VA = "0x16C3CCC")]
		private void UnmotivateClusterChildren(HexCluster cluster)
		{
		}

		[Token(Token = "0x6000E54")]
		[Address(RVA = "0x16C35A0", Offset = "0x16C35A0", VA = "0x16C35A0")]
		private HexPatch MotivatePatch(int2 patchPos, int2 sourcePos)
		{
			return null;
		}

		[Token(Token = "0x6000E55")]
		[Address(RVA = "0x16C3BF8", Offset = "0x16C3BF8", VA = "0x16C3BF8")]
		private void UnmotivatePatch(int2 patchPos, int2 sourcePos)
		{
		}

		[Token(Token = "0x6000E56")]
		[Address(RVA = "0x16C3D90", Offset = "0x16C3D90", VA = "0x16C3D90")]
		private void IteratePatch(HexPatch patch)
		{
		}

		[Token(Token = "0x6000E57")]
		[Address(RVA = "0x16C6070", Offset = "0x16C6070", VA = "0x16C6070")]
		private void IterateCluster(HexCluster cluster, Func<bool> keepGoing)
		{
		}

		[Token(Token = "0x6000E58")]
		[Address(RVA = "0x16C6FE0", Offset = "0x16C6FE0", VA = "0x16C6FE0")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x6FAE5C", Offset = "0x6FAE5C")]
		public void SceneProcessIteration()
		{
		}

		[Token(Token = "0x6000E59")]
		[Address(RVA = "0x16C7238", Offset = "0x16C7238", VA = "0x16C7238")]
		public void IterateBit(GridBit bit, Func<bool> keepGoing)
		{
		}

		[Token(Token = "0x6000E5A")]
		[Address(RVA = "0x16C9448", Offset = "0x16C9448", VA = "0x16C9448")]
		public bool IterateFocus()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E5B")]
		[Address(RVA = "0x16C9890", Offset = "0x16C9890", VA = "0x16C9890")]
		public bool IterateGenerateCenter()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E5C")]
		[Address(RVA = "0x16C996C", Offset = "0x16C996C", VA = "0x16C996C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x6FAE94", Offset = "0x6FAE94")]
		private void Measure()
		{
		}

		[Token(Token = "0x6000E5D")]
		[Address(RVA = "0x16CAAF4", Offset = "0x16CAAF4", VA = "0x16CAAF4")]
		public bool IterateBits(Func<bool> keepGoing)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E5E")]
		[Address(RVA = "0x16CABC4", Offset = "0x16CABC4", VA = "0x16CABC4")]
		public void SetQuadMesh(List<BitMeshQuadChange> changes)
		{
		}

		[Token(Token = "0x6000E5F")]
		[Address(RVA = "0x16CB010", Offset = "0x16CB010", VA = "0x16CB010")]
		public Quad GetQuad(int2 hexWithinPatch, int2 corner0, int2 corner1)
		{
			return default(Quad);
		}

		[Token(Token = "0x6000E60")]
		[Address(RVA = "0x16CB680", Offset = "0x16CB680", VA = "0x16CB680")]
		public Quad GetAdjecentQuad(Quad quad)
		{
			return default(Quad);
		}

		[Token(Token = "0x6000E61")]
		[Address(RVA = "0x16CBCCC", Offset = "0x16CBCCC", VA = "0x16CBCCC")]
		public bool AppendQuadList(List<Quad> nodes, Vector2 planeCameraDir, ref int hoverIndex, int steps)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E62")]
		[Address(RVA = "0x16CCCF0", Offset = "0x16CCCF0", VA = "0x16CCCF0")]
		public Quad GetQuad(float2 planePos)
		{
			return default(Quad);
		}

		[Token(Token = "0x6000E63")]
		[Address(RVA = "0x16CDB8C", Offset = "0x16CDB8C", VA = "0x16CDB8C")]
		public Vert GetClostestVertPosition(float2 planePos)
		{
			return default(Vert);
		}

		[Token(Token = "0x6000E64")]
		[Address(RVA = "0x16CDDD8", Offset = "0x16CDDD8", VA = "0x16CDDD8")]
		public Vert GetVertOrIterate(int2 hexPos, [Optional] Func<bool> keepGoing)
		{
			return default(Vert);
		}

		[Token(Token = "0x6000E65")]
		[Address(RVA = "0x16CE7A0", Offset = "0x16CE7A0", VA = "0x16CE7A0")]
		public static int2 GetStartingHex(int onionIndex)
		{
			return default(int2);
		}

		[Token(Token = "0x6000E66")]
		[Address(RVA = "0x16CE814", Offset = "0x16CE814", VA = "0x16CE814")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6000E67")]
		[Address(RVA = "0x16D0280", Offset = "0x16D0280", VA = "0x16D0280")]
		public GridGenerator()
		{
		}
	}
	[Token(Token = "0x2000170")]
	public class HoverHightlight : MonoBehaviour
	{
		[StructLayout(3)]
		[Token(Token = "0x2000171")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F0800", Offset = "0x6F0800")]
		private struct <>c__DisplayClass6_0
		{
			[Token(Token = "0x40008BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float zOffset;

			[Token(Token = "0x40008C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public List<Vector3> verts;

			[Token(Token = "0x40008C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<Vector3> normals;

			[Token(Token = "0x40008C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public List<Vector2> uvs;

			[Token(Token = "0x40008C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public List<Vector2> uv2s;

			[Token(Token = "0x40008C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public List<int> tris;

			[Token(Token = "0x40008C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public int startVertIndex;
		}

		[Token(Token = "0x40008BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private WorldMaster master;

		[Token(Token = "0x40008BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Mesh mesh;

		[Token(Token = "0x40008BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int hoverPosId;

		[Token(Token = "0x40008BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int lastDrawFrame;

		[Token(Token = "0x40008BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int lastUpdateFrame;

		[Token(Token = "0x6000E6C")]
		[Address(RVA = "0xB15060", Offset = "0xB15060", VA = "0xB15060")]
		public void OnStart()
		{
		}

		[Token(Token = "0x6000E6D")]
		[Address(RVA = "0xB150E0", Offset = "0xB150E0", VA = "0xB150E0")]
		public void Draw()
		{
		}

		[Token(Token = "0x6000E6E")]
		[Address(RVA = "0xB1692C", Offset = "0xB1692C", VA = "0xB1692C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000E6F")]
		[Address(RVA = "0xB16984", Offset = "0xB16984", VA = "0xB16984")]
		public HoverHightlight()
		{
		}

		[Token(Token = "0x6000E71")]
		[Address(RVA = "0xB15CD4", Offset = "0xB15CD4", VA = "0xB15CD4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FAECC", Offset = "0x6FAECC")]
		private void <Draw>g__AddQube|6_0(Qube qube, Square square, int corner, int oppositeCorner, int upCorner, ref <>c__DisplayClass6_0 P_5)
		{
		}
	}
	[Token(Token = "0x2000172")]
	public static class LayerMaster
	{
		[Token(Token = "0x40008C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int defaultLayer;

		[Token(Token = "0x40008C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static int voxelLayer;

		[Token(Token = "0x40008C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static int groundLayer;

		[Token(Token = "0x40008C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public static int gridLayer;

		[Token(Token = "0x40008CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static int aoLayer;

		[Token(Token = "0x40008CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public static int aoStackLayer;

		[Token(Token = "0x40008CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static int onlyShadowsLayer;

		[Token(Token = "0x40008CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public static int noShadowsLayer;

		[Token(Token = "0x40008CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static int vrClickablesLayer;

		[Token(Token = "0x40008CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public static int clickMask;

		[Token(Token = "0x40008D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static int propMask;

		[Token(Token = "0x40008D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public static int gridMask;

		[Token(Token = "0x40008D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static int voxelMask;

		[Token(Token = "0x40008D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public static int vrBlockerMask;

		[Token(Token = "0x40008D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public static int vrClickablesMask;

		[Token(Token = "0x40008D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public static int vrLoadingMask;

		[Token(Token = "0x40008D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public static int onlyShadowsMask;

		[Token(Token = "0x40008D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public static int noShadowsMask;
	}
	[Token(Token = "0x2000173")]
	public class DrawPlane : MonoBehaviour
	{
		[Token(Token = "0x40008D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private WorldMaster worldMaster;

		[Token(Token = "0x40008D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private int2 lastHexPos;

		[Token(Token = "0x40008DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private List<Quad> nodes;

		[Token(Token = "0x40008DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private int hoverIndex;

		[Token(Token = "0x40008DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private MeshFilter meshFilter;

		[Token(Token = "0x40008DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Mesh mesh;

		[Token(Token = "0x40008DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float2 camDir;

		[Token(Token = "0x6000E73")]
		[Address(RVA = "0xB3CE00", Offset = "0xB3CE00", VA = "0xB3CE00")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000E74")]
		[Address(RVA = "0xB3CE60", Offset = "0xB3CE60", VA = "0xB3CE60")]
		private void Update()
		{
		}

		[Token(Token = "0x6000E75")]
		[Address(RVA = "0xB3D9E8", Offset = "0xB3D9E8", VA = "0xB3D9E8")]
		private bool AllowedQuad(Quad quad)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E76")]
		[Address(RVA = "0xB3D6E8", Offset = "0xB3D6E8", VA = "0xB3D6E8")]
		public void SetToHoverData()
		{
		}

		[Token(Token = "0x6000E77")]
		[Address(RVA = "0xB3CF54", Offset = "0xB3CF54", VA = "0xB3CF54")]
		private void IterateUpdate()
		{
		}

		[Token(Token = "0x6000E78")]
		[Address(RVA = "0xB3DA4C", Offset = "0xB3DA4C", VA = "0xB3DA4C")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6000E79")]
		[Address(RVA = "0xB3DF10", Offset = "0xB3DF10", VA = "0xB3DF10")]
		public DrawPlane()
		{
		}
	}
	[Token(Token = "0x2000174")]
	public class GroundClicker : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler, IPointerClickHandler, IBeginDragHandler, IDragHandler, IEndDragHandler, IPointerDownHandler, IPointerUpHandler, UiMaster.IUiSetup
	{
		[Token(Token = "0x2000175")]
		public enum DragMode
		{
			[Token(Token = "0x40008F1")]
			NotDragging,
			[Token(Token = "0x40008F2")]
			Undecided,
			[Token(Token = "0x40008F3")]
			Spinning,
			[Token(Token = "0x40008F4")]
			Panning,
			[Token(Token = "0x40008F5")]
			TouchZooming,
			[Token(Token = "0x40008F6")]
			TouchPanning
		}

		[Token(Token = "0x40008DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private UiMaster master;

		[Token(Token = "0x40008E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VoxelType currentVoxelType;

		[Token(Token = "0x40008E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool hovered;

		[Token(Token = "0x40008E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
		public bool pressed;

		[Token(Token = "0x40008E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
		public bool pressUsed;

		[Token(Token = "0x40008E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool bobbing;

		[Token(Token = "0x40008E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		public bool aboutToRemove;

		[Token(Token = "0x40008E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float pressTime;

		[Token(Token = "0x40008E7")]
		public const float removeClickThreshold = 0.32f;

		[Token(Token = "0x40008E8")]
		public const float colorPickClickThreshold = 2f;

		[Token(Token = "0x40008E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AudioSource pressSource;

		[Token(Token = "0x40008EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public DragMode dragMode;

		[Token(Token = "0x40008EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int clickFrame;

		[Token(Token = "0x40008EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int hoverFrame;

		[Token(Token = "0x40008ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3[] drags;

		[Token(Token = "0x40008EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int dragIndex;

		[Token(Token = "0x40008EF")]
		private const int dragCount = 5;

		[Token(Token = "0x1700045B")]
		private Maker maker
		{
			[Token(Token = "0x6000E7A")]
			[Address(RVA = "0x16D0514", Offset = "0x16D0514", VA = "0x16D0514")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E7B")]
		[Address(RVA = "0x16D053C", Offset = "0x16D053C", VA = "0x16D053C", Slot = "13")]
		private void Placemaker.Ui.UiMaster.IUiSetup.OnSetup(UiMaster master)
		{
		}

		[Token(Token = "0x6000E7C")]
		[Address(RVA = "0x16D0548", Offset = "0x16D0548", VA = "0x16D0548", Slot = "12")]
		private void Placemaker.Ui.UiMaster.IUiSetup.OnStart(UiMaster master)
		{
		}

		[Token(Token = "0x6000E7D")]
		[Address(RVA = "0x16D054C", Offset = "0x16D054C", VA = "0x16D054C", Slot = "4")]
		private void UnityEngine.EventSystems.IPointerEnterHandler.OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000E7E")]
		[Address(RVA = "0x16D0558", Offset = "0x16D0558", VA = "0x16D0558", Slot = "5")]
		private void UnityEngine.EventSystems.IPointerExitHandler.OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000E7F")]
		[Address(RVA = "0x16D058C", Offset = "0x16D058C", VA = "0x16D058C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000E80")]
		[Address(RVA = "0x16D0680", Offset = "0x16D0680", VA = "0x16D0680")]
		private void MaybeUpdateHover(Vector2 pos)
		{
		}

		[Token(Token = "0x6000E81")]
		[Address(RVA = "0x16D0718", Offset = "0x16D0718", VA = "0x16D0718", Slot = "6")]
		private void UnityEngine.EventSystems.IPointerClickHandler.OnPointerClick(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000E82")]
		[Address(RVA = "0x16D097C", Offset = "0x16D097C", VA = "0x16D097C")]
		private void AddClick()
		{
		}

		[Token(Token = "0x6000E83")]
		[Address(RVA = "0x16D08B4", Offset = "0x16D08B4", VA = "0x16D08B4")]
		private void RemoveClick()
		{
		}

		[Token(Token = "0x6000E84")]
		[Address(RVA = "0x16D0BB8", Offset = "0x16D0BB8", VA = "0x16D0BB8")]
		private void PaintClick()
		{
		}

		[Token(Token = "0x6000E85")]
		[Address(RVA = "0x16D0C60", Offset = "0x16D0C60", VA = "0x16D0C60")]
		private void BucketClick()
		{
		}

		[Token(Token = "0x6000E86")]
		[Address(RVA = "0x16D0E8C", Offset = "0x16D0E8C", VA = "0x16D0E8C")]
		private void BulldozeClick()
		{
		}

		[Token(Token = "0x6000E87")]
		[Address(RVA = "0x16D0A80", Offset = "0x16D0A80", VA = "0x16D0A80")]
		private void ColorPick()
		{
		}

		[Token(Token = "0x6000E88")]
		[Address(RVA = "0x16D1058", Offset = "0x16D1058", VA = "0x16D1058", Slot = "7")]
		private void UnityEngine.EventSystems.IBeginDragHandler.OnBeginDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000E89")]
		[Address(RVA = "0x16D1130", Offset = "0x16D1130", VA = "0x16D1130", Slot = "8")]
		private void UnityEngine.EventSystems.IDragHandler.OnDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000E8A")]
		[Address(RVA = "0x16D1484", Offset = "0x16D1484", VA = "0x16D1484", Slot = "9")]
		private void UnityEngine.EventSystems.IEndDragHandler.OnEndDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000E8B")]
		[Address(RVA = "0x16D15D4", Offset = "0x16D15D4", VA = "0x16D15D4", Slot = "10")]
		private void UnityEngine.EventSystems.IPointerDownHandler.OnPointerDown(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000E8C")]
		[Address(RVA = "0x16D1664", Offset = "0x16D1664", VA = "0x16D1664", Slot = "11")]
		private void UnityEngine.EventSystems.IPointerUpHandler.OnPointerUp(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000E8D")]
		[Address(RVA = "0x16D16D4", Offset = "0x16D16D4", VA = "0x16D16D4")]
		private void Update()
		{
		}

		[Token(Token = "0x6000E8E")]
		[Address(RVA = "0x16D1840", Offset = "0x16D1840", VA = "0x16D1840")]
		public GroundClicker()
		{
		}

		[Token(Token = "0x6000E8F")]
		[Address(RVA = "0x16D189C", Offset = "0x16D189C", VA = "0x16D189C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FAEDC", Offset = "0x6FAEDC")]
		private void <Placemaker.Ui.UiMaster.IUiSetup.OnSetup>b__20_0(float x)
		{
		}
	}
	[Token(Token = "0x2000176")]
	public class HoverData : MonoBehaviour
	{
		[StructLayout(3)]
		[Token(Token = "0x2000177")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F0810", Offset = "0x6F0810")]
		private struct <>c__DisplayClass39_0
		{
			[Token(Token = "0x400090D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int minH;

			[Token(Token = "0x400090E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public HoverData <>4__this;

			[Token(Token = "0x400090F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3 hitPos;

			[Token(Token = "0x4000910")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public Plane plane;

			[Token(Token = "0x4000911")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float lowestCost;

			[Token(Token = "0x4000912")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public int bestHeight;

			[Token(Token = "0x4000913")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public int2 bestHexPos;

			[Token(Token = "0x4000914")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public int maxH;
		}

		[Token(Token = "0x40008F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private WorldMaster master;

		[Token(Token = "0x40008F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private int lastId;

		[Token(Token = "0x40008F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Ray ray;

		[Token(Token = "0x40008FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Vert srcVert;

		[Token(Token = "0x40008FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1EC")]
		public Vert dstVert;

		[Token(Token = "0x40008FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A0")]
		public Voxel voxel;

		[Token(Token = "0x40008FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A8")]
		public int srcHeight;

		[Token(Token = "0x40008FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3AC")]
		public int dstHeight;

		[Token(Token = "0x40008FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3B0")]
		public int lastHash;

		[Token(Token = "0x4000900")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3B4")]
		public Vector3 pointerHitPos;

		[Token(Token = "0x4000901")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C0")]
		public Vector3 pointerHitDir;

		[Token(Token = "0x4000902")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3CC")]
		public sbyte side;

		[Token(Token = "0x4000903")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3CD")]
		public bool occupied;

		[Token(Token = "0x4000904")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3CE")]
		public bool insideBorders;

		[Token(Token = "0x4000905")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3CF")]
		public bool valid;

		[Token(Token = "0x4000906")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D0")]
		public bool validPaint;

		[Token(Token = "0x4000907")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D1")]
		public bool validAdd;

		[Token(Token = "0x4000908")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D2")]
		public bool validRemove;

		[Token(Token = "0x4000909")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D3")]
		public bool validBucket;

		[Token(Token = "0x400090A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D4")]
		private Plane gamepadPlane;

		[Token(Token = "0x400090B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3E4")]
		[SerializeField]
		private int floodIndex;

		[Token(Token = "0x400090C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3E8")]
		public List<Voxel> floodVoxels;

		[Token(Token = "0x1700045C")]
		public int2 srcHexPos
		{
			[Token(Token = "0x6000E90")]
			[Address(RVA = "0xB12760", Offset = "0xB12760", VA = "0xB12760")]
			get
			{
				return default(int2);
			}
		}

		[Token(Token = "0x1700045D")]
		public int2 dstHexPos
		{
			[Token(Token = "0x6000E91")]
			[Address(RVA = "0xB12768", Offset = "0xB12768", VA = "0xB12768")]
			get
			{
				return default(int2);
			}
		}

		[Token(Token = "0x1700045E")]
		public int3 srcHexPosHeight
		{
			[Token(Token = "0x6000E92")]
			[Address(RVA = "0xB12774", Offset = "0xB12774", VA = "0xB12774")]
			get
			{
				return default(int3);
			}
		}

		[Token(Token = "0x1700045F")]
		public int3 dstHexPosHeight
		{
			[Token(Token = "0x6000E93")]
			[Address(RVA = "0xB12784", Offset = "0xB12784", VA = "0xB12784")]
			get
			{
				return default(int3);
			}
		}

		[Token(Token = "0x17000460")]
		public bool vertical
		{
			[Token(Token = "0x6000E96")]
			[Address(RVA = "0xB128B4", Offset = "0xB128B4", VA = "0xB128B4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000E94")]
		[Address(RVA = "0xB12798", Offset = "0xB12798", VA = "0xB12798")]
		public Vector3 GetSrcPos()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000E95")]
		[Address(RVA = "0xB12824", Offset = "0xB12824", VA = "0xB12824")]
		public Vector3 GetDstPos()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000E97")]
		[Address(RVA = "0xB128C4", Offset = "0xB128C4", VA = "0xB128C4")]
		public void ClearHover()
		{
		}

		[Token(Token = "0x6000E98")]
		[Address(RVA = "0xB128D4", Offset = "0xB128D4", VA = "0xB128D4")]
		public void SetHover(Vector2 position, int actionId)
		{
		}

		[Token(Token = "0x6000E99")]
		[Address(RVA = "0xB134FC", Offset = "0xB134FC", VA = "0xB134FC")]
		private Vert TryGetVert(float2 planePos)
		{
			return default(Vert);
		}

		[Token(Token = "0x6000E9A")]
		[Address(RVA = "0xB13620", Offset = "0xB13620", VA = "0xB13620")]
		public void JumpForwardOnAdd()
		{
		}

		[Token(Token = "0x6000E9B")]
		[Address(RVA = "0xB13810", Offset = "0xB13810", VA = "0xB13810")]
		private bool IsOccupied(int2 hexPos, int height)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E9C")]
		[Address(RVA = "0xB13908", Offset = "0xB13908", VA = "0xB13908")]
		public void GamepadAddMove(Vector2 position, Vector2 delta, float actionT)
		{
		}

		[Token(Token = "0x6000E9D")]
		[Address(RVA = "0xB14A2C", Offset = "0xB14A2C", VA = "0xB14A2C")]
		public void OnGamepadMoveAdd()
		{
		}

		[Token(Token = "0x6000E9E")]
		[Address(RVA = "0xB14A6C", Offset = "0xB14A6C", VA = "0xB14A6C")]
		public void OnGamepadRemove()
		{
		}

		[Token(Token = "0x6000E9F")]
		[Address(RVA = "0xB14A78", Offset = "0xB14A78", VA = "0xB14A78")]
		public void Finish()
		{
		}

		[Token(Token = "0x6000EA0")]
		[Address(RVA = "0xB14A7C", Offset = "0xB14A7C", VA = "0xB14A7C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000EA1")]
		[Address(RVA = "0xB14A80", Offset = "0xB14A80", VA = "0xB14A80")]
		private bool Iterate()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EA2")]
		[Address(RVA = "0xB14FF0", Offset = "0xB14FF0", VA = "0xB14FF0")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6000EA3")]
		[Address(RVA = "0xB15058", Offset = "0xB15058", VA = "0xB15058")]
		public HoverData()
		{
		}

		[Token(Token = "0x6000EA4")]
		[Address(RVA = "0xB147F8", Offset = "0xB147F8", VA = "0xB147F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FAEEC", Offset = "0x6FAEEC")]
		private void <GamepadAddMove>g__Compare|39_0(int2 hexPos, float2 planePos, ref <>c__DisplayClass39_0 P_2)
		{
		}
	}
	[Token(Token = "0x2000178")]
	public class Maker : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000179")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F0820", Offset = "0x6F0820")]
		private sealed class <>c
		{
			[Token(Token = "0x4000922")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000923")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action<int, int> <>9__38_0;

			[Token(Token = "0x6000EBE")]
			[Address(RVA = "0x9295C0", Offset = "0x9295C0", VA = "0x9295C0")]
			public <>c()
			{
			}

			[Token(Token = "0x6000EBF")]
			[Address(RVA = "0x9295C8", Offset = "0x9295C8", VA = "0x9295C8")]
			internal void <.ctor>b__38_0(int <p0>, int <p1>)
			{
			}
		}

		[Token(Token = "0x4000915")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private WorldMaster master;

		[Token(Token = "0x4000916")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		public List<Placemaker.Graphs.Action> actions;

		[Token(Token = "0x4000917")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		public int actionIndex;

		[Token(Token = "0x4000918")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private int actionCount;

		[Token(Token = "0x4000919")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private int actionRedoMax;

		[Token(Token = "0x400091A")]
		private const int maxActionCount = 999;

		[Token(Token = "0x400091B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		public int actionId;

		[Token(Token = "0x400091C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Action<int, int> onQueueChange;

		[Token(Token = "0x400091D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		public Voxel lastAddedVoxel;

		[Token(Token = "0x400091E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		public Vector3 lastActionPos;

		[NonSerialized]
		[Token(Token = "0x400091F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public RapidButton rapidButton;

		[Token(Token = "0x4000920")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private AudioClip undoClip;

		[Token(Token = "0x4000921")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private AudioClip redoClip;

		[Token(Token = "0x17000461")]
		private GridGenerator grid
		{
			[Token(Token = "0x6000EA5")]
			[Address(RVA = "0x9E248C", Offset = "0x9E248C", VA = "0x9E248C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000462")]
		private Graph graph
		{
			[Token(Token = "0x6000EA6")]
			[Address(RVA = "0x9E24A8", Offset = "0x9E24A8", VA = "0x9E24A8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000EA7")]
		[Address(RVA = "0x9E24C4", Offset = "0x9E24C4", VA = "0x9E24C4")]
		public void ActionQueueChanged()
		{
		}

		[Token(Token = "0x6000EA8")]
		[Address(RVA = "0x9E2520", Offset = "0x9E2520", VA = "0x9E2520")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x6000EA9")]
		[Address(RVA = "0x9E2524", Offset = "0x9E2524", VA = "0x9E2524")]
		public void PaintClick(HoverData hover, VoxelType voxelType)
		{
		}

		[Token(Token = "0x6000EAA")]
		[Address(RVA = "0x9E272C", Offset = "0x9E272C", VA = "0x9E272C")]
		public Voxel AddClick(Vert vert, int height, VoxelType voxelType)
		{
			return null;
		}

		[Token(Token = "0x6000EAB")]
		[Address(RVA = "0x9E28F8", Offset = "0x9E28F8", VA = "0x9E28F8")]
		public Voxel RemoveClick(Voxel voxel, int2 hexPos)
		{
			return null;
		}

		[Token(Token = "0x6000EAC")]
		[Address(RVA = "0x9E29AC", Offset = "0x9E29AC", VA = "0x9E29AC")]
		public void ClearUndoQueue()
		{
		}

		[Token(Token = "0x6000EAD")]
		[Address(RVA = "0x9E2A10", Offset = "0x9E2A10", VA = "0x9E2A10")]
		public void TrimActionList()
		{
		}

		[Token(Token = "0x6000EAE")]
		[Address(RVA = "0x9E2658", Offset = "0x9E2658", VA = "0x9E2658")]
		public Placemaker.Graphs.Action AddAction(int2 hexPos, byte height, VoxelType inType, VoxelType outType)
		{
			return default(Placemaker.Graphs.Action);
		}

		[Token(Token = "0x6000EAF")]
		[Address(RVA = "0x9E25F0", Offset = "0x9E25F0", VA = "0x9E25F0")]
		public void BeginNewAction()
		{
		}

		[Token(Token = "0x6000EB0")]
		[Address(RVA = "0x9E2710", Offset = "0x9E2710", VA = "0x9E2710")]
		public void EndAction()
		{
		}

		[Token(Token = "0x6000EB1")]
		[Address(RVA = "0x9E2B84", Offset = "0x9E2B84", VA = "0x9E2B84")]
		public bool CanUndo()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EB2")]
		[Address(RVA = "0x9E2B94", Offset = "0x9E2B94", VA = "0x9E2B94")]
		public bool CanRedo()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EB3")]
		[Address(RVA = "0x9E2BEC", Offset = "0x9E2BEC", VA = "0x9E2BEC")]
		public bool CanClear()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EB4")]
		[Address(RVA = "0x9E2C14", Offset = "0x9E2C14", VA = "0x9E2C14")]
		public Voxel RedoCommand()
		{
			return null;
		}

		[Token(Token = "0x6000EB5")]
		[Address(RVA = "0x9E2E4C", Offset = "0x9E2E4C", VA = "0x9E2E4C")]
		public Voxel UndoCommand()
		{
			return null;
		}

		[Token(Token = "0x6000EB6")]
		[Address(RVA = "0x9E308C", Offset = "0x9E308C", VA = "0x9E308C")]
		public void ClearCommand()
		{
		}

		[Token(Token = "0x6000EB7")]
		[Address(RVA = "0x9E3270", Offset = "0x9E3270", VA = "0x9E3270")]
		public Voxel HoldUndo()
		{
			return null;
		}

		[Token(Token = "0x6000EB8")]
		[Address(RVA = "0x9E32B4", Offset = "0x9E32B4", VA = "0x9E32B4")]
		public Voxel HoldRedo()
		{
			return null;
		}

		[Token(Token = "0x6000EB9")]
		[Address(RVA = "0x9E2EF0", Offset = "0x9E2EF0", VA = "0x9E2EF0")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x6FAEFC", Offset = "0x6FAEFC")]
		public Voxel Undo()
		{
			return null;
		}

		[Token(Token = "0x6000EBA")]
		[Address(RVA = "0x9E2CB8", Offset = "0x9E2CB8", VA = "0x9E2CB8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x6FAF34", Offset = "0x6FAF34")]
		public Voxel Redo()
		{
			return null;
		}

		[Token(Token = "0x6000EBB")]
		[Address(RVA = "0x9E3090", Offset = "0x9E3090", VA = "0x9E3090")]
		public bool Clear()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EBC")]
		[Address(RVA = "0x9E32F8", Offset = "0x9E32F8", VA = "0x9E32F8")]
		public Maker()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200017A")]
	public struct RapidButton
	{
		[Token(Token = "0x4000924")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int lastFrame;

		[Token(Token = "0x4000925")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int count;

		[Token(Token = "0x4000926")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float t;

		[Token(Token = "0x4000927")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int countThreshold;

		[Token(Token = "0x4000928")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float slowSpeed;

		[Token(Token = "0x4000929")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float fastSpeed;

		[Token(Token = "0x400092A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static RapidButton undoRedo;

		[Token(Token = "0x400092B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static RapidButton palette;

		[Token(Token = "0x400092C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static RapidButton uiNavigation;

		[Token(Token = "0x6000EC0")]
		[Address(RVA = "0xD9C718", Offset = "0xD9C718", VA = "0xD9C718")]
		public RapidButton(float slowSpeed, float fastSpeed, int countThreshold)
		{
		}

		[Token(Token = "0x6000EC1")]
		[Address(RVA = "0xD9C728", Offset = "0xD9C728", VA = "0xD9C728")]
		public bool Press(float intensity = 1f)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200017B")]
	public class MaterialMaster : MonoBehaviour, WorldMaster.IOnOnEnable
	{
		[Serializable]
		[Token(Token = "0x200017C")]
		public class VoxelMaterial
		{
			[Token(Token = "0x4000943")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			public Color32 color;

			[Token(Token = "0x6000EC7")]
			[Address(RVA = "0x9295CC", Offset = "0x9295CC", VA = "0x9295CC")]
			public VoxelMaterial()
			{
			}
		}

		[Token(Token = "0x400092D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private WorldMaster master;

		[Token(Token = "0x400092E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		public Material windowMaterial;

		[Token(Token = "0x400092F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		public Material groundMaterial;

		[Token(Token = "0x4000930")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		public Material houseMaterial;

		[Token(Token = "0x4000931")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		public Material waterMaterial;

		[Token(Token = "0x4000932")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		public Material hole0;

		[Token(Token = "0x4000933")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		public Material propMaterial;

		[Token(Token = "0x4000934")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		public Material doorMaterial;

		[Token(Token = "0x4000935")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		public Material mirrorHouseMaterial;

		[Token(Token = "0x4000936")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		public Material fenceMaterial;

		[Token(Token = "0x4000937")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		public Material gridMaterial;

		[Token(Token = "0x4000938")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		public Material voxelMaterial;

		[Token(Token = "0x4000939")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		public Material borderMaterial;

		[Token(Token = "0x400093A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		public Material lineMaterial;

		[Token(Token = "0x400093B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		public Material sandMaterial;

		[Token(Token = "0x400093C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		public Material vrHoverMaterial;

		[Token(Token = "0x400093D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public Color backgroundColor;

		[Token(Token = "0x400093E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public Color grassColor;

		[Token(Token = "0x400093F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public Color roofColor;

		[Token(Token = "0x4000940")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public Color plateColor;

		[Token(Token = "0x4000941")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public Color stoneColor;

		[Token(Token = "0x4000942")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public Texture2D materialTexture;

		[Token(Token = "0x6000EC3")]
		[Address(RVA = "0x9E59B8", Offset = "0x9E59B8", VA = "0x9E59B8")]
		public Texture2D CreatePaletteTexture()
		{
			return null;
		}

		[Token(Token = "0x6000EC4")]
		[Address(RVA = "0x9E5B20", Offset = "0x9E5B20", VA = "0x9E5B20", Slot = "4")]
		private void Placemaker.WorldMaster.IOnOnEnable.OnOnEnable(WorldMaster worldMaster)
		{
		}

		[Token(Token = "0x6000EC5")]
		[Address(RVA = "0x9E5C78", Offset = "0x9E5C78", VA = "0x9E5C78")]
		public void OnStart()
		{
		}

		[Token(Token = "0x6000EC6")]
		[Address(RVA = "0x9E5D38", Offset = "0x9E5D38", VA = "0x9E5D38")]
		public MaterialMaster()
		{
		}
	}
	[Token(Token = "0x200017D")]
	public class ModuleBuilder : MonoBehaviour
	{
		[StructLayout(3)]
		[Token(Token = "0x200017E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F0830", Offset = "0x6F0830")]
		private struct <>c__DisplayClass8_0
		{
			[Token(Token = "0x4000948")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int bigMeshPartIndex;

			[Token(Token = "0x4000949")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int bigMeshPartCount;

			[Token(Token = "0x400094A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public ModuleContainer moduleContainer;
		}

		[StructLayout(3)]
		[Token(Token = "0x200017F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F0840", Offset = "0x6F0840")]
		private struct <>c__DisplayClass9_0
		{
			[Token(Token = "0x400094B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int bigMeshPartIndex;

			[Token(Token = "0x400094C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int bigMeshPartCount;

			[Token(Token = "0x400094D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public ModuleContainer moduleContainer;
		}

		[Token(Token = "0x4000944")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private WorldMaster master;

		[Token(Token = "0x4000945")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		public Transform moduleContainerPool;

		[Token(Token = "0x4000946")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		public Transform moduleContainersToDeconstruct;

		[Token(Token = "0x4000947")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<Qube> qubesToGrass;

		[Token(Token = "0x6000EC8")]
		[Address(RVA = "0x9E6694", Offset = "0x9E6694", VA = "0x9E6694")]
		public static Vector4 GetTs(Vector3 srcVert)
		{
			return default(Vector4);
		}

		[Token(Token = "0x6000EC9")]
		[Address(RVA = "0x9E66F4", Offset = "0x9E66F4", VA = "0x9E66F4")]
		public static Vector3 MultiplyVector(Square square, Vector4 ts, Vector3 vector)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000ECA")]
		[Address(RVA = "0x9E680C", Offset = "0x9E680C", VA = "0x9E680C")]
		public static Vector3 MultiplyPoint(Square square, Vector4 ts, Vector3 vector)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000ECB")]
		[Address(RVA = "0x9E6918", Offset = "0x9E6918", VA = "0x9E6918")]
		private ModuleContainer GetModuleContainer()
		{
			return null;
		}

		[Token(Token = "0x6000ECC")]
		[Address(RVA = "0x9E69E4", Offset = "0x9E69E4", VA = "0x9E69E4")]
		public void ApplyModule(Qube qube, OrientedModuleSides possibleModule)
		{
		}

		[Token(Token = "0x6000ECD")]
		[Address(RVA = "0x9E857C", Offset = "0x9E857C", VA = "0x9E857C")]
		public void ApplyDecor(Qube qube)
		{
		}

		[Token(Token = "0x6000ECE")]
		[Address(RVA = "0x9E9A1C", Offset = "0x9E9A1C", VA = "0x9E9A1C")]
		public bool Iterate()
		{
			return default(bool);
		}

		[Token(Token = "0x6000ECF")]
		[Address(RVA = "0x9E8358", Offset = "0x9E8358", VA = "0x9E8358")]
		public void MaybeAddToGrassQueue(Qube qube)
		{
		}

		[Token(Token = "0x6000ED0")]
		[Address(RVA = "0x9E9B18", Offset = "0x9E9B18", VA = "0x9E9B18")]
		public void OnStart()
		{
		}

		[Token(Token = "0x6000ED1")]
		[Address(RVA = "0x9E9C08", Offset = "0x9E9C08", VA = "0x9E9C08")]
		public void MarkQubeForDeconstruction(Qube qube)
		{
		}

		[Token(Token = "0x6000ED2")]
		[Address(RVA = "0x9E8250", Offset = "0x9E8250", VA = "0x9E8250")]
		public void MarkModuleContainerForDeconstruction(ModuleContainer container)
		{
		}

		[Token(Token = "0x6000ED3")]
		[Address(RVA = "0x9E9CFC", Offset = "0x9E9CFC", VA = "0x9E9CFC")]
		public void DeconstructModuleContainer(ModuleContainer container)
		{
		}

		[Token(Token = "0x6000ED4")]
		[Address(RVA = "0x9E9ECC", Offset = "0x9E9ECC", VA = "0x9E9ECC")]
		public bool IterateDeconstructQubes()
		{
			return default(bool);
		}

		[Token(Token = "0x6000ED5")]
		[Address(RVA = "0x9E9FA8", Offset = "0x9E9FA8", VA = "0x9E9FA8")]
		public ModuleBuilder()
		{
		}

		[Token(Token = "0x6000ED6")]
		[Address(RVA = "0x9E848C", Offset = "0x9E848C", VA = "0x9E848C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FAF6C", Offset = "0x6FAF6C")]
		internal static BigMeshPart <ApplyModule>g__GetNewBigMeshPart|8_0(ref <>c__DisplayClass8_0 P_0)
		{
			return null;
		}

		[Token(Token = "0x6000ED7")]
		[Address(RVA = "0x9E992C", Offset = "0x9E992C", VA = "0x9E992C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FAF7C", Offset = "0x6FAF7C")]
		internal static BigMeshPart <ApplyDecor>g__GetNewBigMeshPart|9_0(ref <>c__DisplayClass9_0 P_0)
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x2000180")]
	public class BaseModule
	{
		[Token(Token = "0x400094E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public short cost;

		[Token(Token = "0x400094F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<ushort> profileIndexes;

		[Token(Token = "0x4000950")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<OrientedModule> orientedModuleMeshes;

		[Token(Token = "0x4000951")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<PropPlacement> propPlacements;

		[Token(Token = "0x6000ED8")]
		[Address(RVA = "0xFA7F24", Offset = "0xFA7F24", VA = "0xFA7F24")]
		public BaseModule()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000181")]
	public class DecorModule : BaseModule
	{
		[Token(Token = "0x6000ED9")]
		[Address(RVA = "0xB3A924", Offset = "0xB3A924", VA = "0xB3A924")]
		public DecorModule()
		{
		}
	}
	[Token(Token = "0x2000182")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x6F0850", Offset = "0x6F0850")]
	public class MiscReferences : ScriptableObject
	{
		[Token(Token = "0x4000952")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Mesh[] italianMeshes;

		[Token(Token = "0x6000EDA")]
		[Address(RVA = "0x9E6614", Offset = "0x9E6614", VA = "0x9E6614")]
		public MiscReferences()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000183")]
	public class Module : BaseModule
	{
		[Token(Token = "0x4000953")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<OrientedModule> decorModules;

		[Token(Token = "0x4000954")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int cornerLinks;

		[Token(Token = "0x6000EDB")]
		[Address(RVA = "0x9E661C", Offset = "0x9E661C", VA = "0x9E661C")]
		public Module()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000184")]
	public class ModuleMesh
	{
		[Token(Token = "0x4000955")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Material material;

		[Token(Token = "0x4000956")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<SbyteFloat3> verts;

		[Token(Token = "0x4000957")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<SbyteFloat3> normals;

		[Token(Token = "0x4000958")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<SbyteFloat3> tangents;

		[Token(Token = "0x4000959")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<ByteFloat> concavity;

		[Token(Token = "0x400095A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public List<ByteFloat2> uvs;

		[Token(Token = "0x400095B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public List<OutlineUv> outlineUvs;

		[Token(Token = "0x400095C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public List<byte> tris;

		[Token(Token = "0x400095D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public MaterialType materialType;

		[Token(Token = "0x400095E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		public byte corner;

		[Token(Token = "0x6000EDC")]
		[Address(RVA = "0x9ED774", Offset = "0x9ED774", VA = "0x9ED774")]
		public ModuleMesh()
		{
		}
	}
	[Token(Token = "0x2000185")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x6F0860", Offset = "0x6F0860")]
	public class Palette : ScriptableObject
	{
		[Token(Token = "0x400095F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Color32[] voxelColors;

		[Token(Token = "0x6000EDD")]
		[Address(RVA = "0xE0561C", Offset = "0xE0561C", VA = "0xE0561C")]
		public Palette()
		{
		}
	}
	[Token(Token = "0x2000186")]
	public class PaletteHolder : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000187")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F0870", Offset = "0x6F0870")]
		private sealed class <>c
		{
			[Token(Token = "0x4000964")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000965")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action<int> <>9__7_0;

			[Token(Token = "0x6000EE3")]
			[Address(RVA = "0x92AFC4", Offset = "0x92AFC4", VA = "0x92AFC4")]
			public <>c()
			{
			}

			[Token(Token = "0x6000EE4")]
			[Address(RVA = "0x92AFCC", Offset = "0x92AFCC", VA = "0x92AFCC")]
			internal void <.ctor>b__7_0(int <p0>)
			{
			}
		}

		[Token(Token = "0x4000960")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public WorldMaster master;

		[Token(Token = "0x4000961")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Palette palette;

		[Token(Token = "0x4000962")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int selectedColorIndex;

		[Token(Token = "0x4000963")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Action<int> onNewColor;

		[Token(Token = "0x6000EDE")]
		[Address(RVA = "0xE05678", Offset = "0xE05678", VA = "0xE05678")]
		public void OnStart()
		{
		}

		[Token(Token = "0x6000EDF")]
		[Address(RVA = "0xE0567C", Offset = "0xE0567C", VA = "0xE0567C")]
		public void SelectNextPicker(int delta = 1)
		{
		}

		[Token(Token = "0x6000EE0")]
		[Address(RVA = "0xE056B8", Offset = "0xE056B8", VA = "0xE056B8")]
		public void SelectPicker(int i)
		{
		}

		[Token(Token = "0x6000EE1")]
		[Address(RVA = "0xE05720", Offset = "0xE05720", VA = "0xE05720")]
		public PaletteHolder()
		{
		}
	}
	[Token(Token = "0x2000188")]
	public class Prop : MonoBehaviour
	{
		[Token(Token = "0x4000966")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Prop srcProp;

		[Token(Token = "0x4000967")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public byte voxelTypeMask;

		[Token(Token = "0x6000EE5")]
		[Address(RVA = "0xE0C98C", Offset = "0xE0C98C", VA = "0xE0C98C")]
		public Prop()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000189")]
	public struct PropPlacement
	{
		[Token(Token = "0x4000968")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public SbyteFloat3 pos;

		[Token(Token = "0x4000969")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3")]
		public ByteFloat3 scale;

		[Token(Token = "0x400096A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6")]
		public ByteFloat3 rotationByte;

		[Token(Token = "0x400096B")]
		private const float byteToAngle = 1.40625f;

		[Token(Token = "0x400096C")]
		private const float angleToByte = 32f / 45f;

		[Token(Token = "0x400096D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Prop prop;

		[Token(Token = "0x400096E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public sbyte corner;

		[Token(Token = "0x400096F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public byte prioAdd;

		[Token(Token = "0x17000463")]
		public Vector3 rotation
		{
			[Token(Token = "0x6000EE6")]
			[Address(RVA = "0xE0F6A0", Offset = "0xE0F6A0", VA = "0xE0F6A0")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000EE7")]
			[Address(RVA = "0xE0F6D0", Offset = "0xE0F6D0", VA = "0xE0F6D0")]
			set
			{
			}
		}

		[Token(Token = "0x6000EE8")]
		[Address(RVA = "0xE0F78C", Offset = "0xE0F78C", VA = "0xE0F78C")]
		public Matrix4x4 GetMatrix()
		{
			return default(Matrix4x4);
		}
	}
	[Token(Token = "0x200018A")]
	public class PropPlacer : MonoBehaviour
	{
		[Token(Token = "0x4000970")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private WorldMaster master;

		[Token(Token = "0x4000971")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private List<Prop> srcProps;

		[Token(Token = "0x4000972")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Dictionary<Prop, Transform> propPools;

		[Token(Token = "0x4000973")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Transform propPoolContainer;

		[Token(Token = "0x4000974")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Transform secondaryPropsContainer;

		[Token(Token = "0x4000975")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Transform deconstructionContainer;

		[Token(Token = "0x4000976")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public readonly Dictionary<int3, List<PropCollider>> colliderDict;

		[Token(Token = "0x4000977")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private List<Mesh> materialMeshes;

		[Token(Token = "0x4000978")]
		public const float chunkSize = 2f;

		[Token(Token = "0x4000979")]
		public const float chunkHalfSize = 1f;

		[Token(Token = "0x400097A")]
		public const float chunkInvSize = 0.5f;

		[Token(Token = "0x6000EE9")]
		[Address(RVA = "0xE0F898", Offset = "0xE0F898", VA = "0xE0F898")]
		private Matrix4x4 GetChunkMatrix(int3 coordinate)
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x6000EEA")]
		[Address(RVA = "0xE0F9D4", Offset = "0xE0F9D4", VA = "0xE0F9D4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000EEB")]
		[Address(RVA = "0xE0FC14", Offset = "0xE0FC14", VA = "0xE0FC14")]
		private void AddColliderToDict(PropNode node0)
		{
		}

		[Token(Token = "0x6000EEC")]
		[Address(RVA = "0xE10700", Offset = "0xE10700", VA = "0xE10700")]
		private void RemoveColliderFromDict(PropNode node0)
		{
		}

		[Token(Token = "0x6000EED")]
		public PropRadiusIterator<T> GetPropIterator<T>(Vector3 pos, float radius) where T : Component
		{
			return default(PropRadiusIterator<T>);
		}

		[Token(Token = "0x6000EEE")]
		[Address(RVA = "0xE11770", Offset = "0xE11770", VA = "0xE11770")]
		private void HideCountMinus(PropNode node)
		{
		}

		[Token(Token = "0x6000EEF")]
		[Address(RVA = "0xE106F8", Offset = "0xE106F8", VA = "0xE106F8")]
		private void HideCountPlus(PropNode node)
		{
		}

		[Token(Token = "0x6000EF0")]
		[Address(RVA = "0xE11778", Offset = "0xE11778", VA = "0xE11778")]
		private void ChangeHideCount(PropNode node, bool add)
		{
		}

		[Token(Token = "0x6000EF1")]
		[Address(RVA = "0xE10DF8", Offset = "0xE10DF8", VA = "0xE10DF8")]
		private bool RecursiveCheck(PropNode node0, [Optional] PropNode inNode)
		{
			return default(bool);
		}

		[Token(Token = "0x6000EF2")]
		[Address(RVA = "0xE11894", Offset = "0xE11894", VA = "0xE11894")]
		public Mesh GetMeshWithVoxelType(Mesh srcMesh, byte voxelType)
		{
			return null;
		}

		[Token(Token = "0x6000EF3")]
		[Address(RVA = "0xE11C0C", Offset = "0xE11C0C", VA = "0xE11C0C")]
		private Prop GetProp(Prop srcProp, Transform parent)
		{
			return null;
		}

		[Token(Token = "0x6000EF4")]
		[Address(RVA = "0xE12114", Offset = "0xE12114", VA = "0xE12114")]
		private void FirstTurnOn(PropNode node)
		{
		}

		[Token(Token = "0x6000EF5")]
		[Address(RVA = "0xE12130", Offset = "0xE12130", VA = "0xE12130")]
		public void ReturnProp(Prop prop)
		{
		}

		[Token(Token = "0x6000EF6")]
		[Address(RVA = "0xE11E14", Offset = "0xE11E14", VA = "0xE11E14")]
		private void RecursivePropNodeSetup(PropNode parentNode, Transform srcT, Transform dstT)
		{
		}

		[Token(Token = "0x6000EF7")]
		[Address(RVA = "0xE129B4", Offset = "0xE129B4", VA = "0xE129B4")]
		public void RemovePropsFromContainer(ModuleContainer moduleContainer)
		{
		}

		[Token(Token = "0x6000EF8")]
		[Address(RVA = "0xE12AA4", Offset = "0xE12AA4", VA = "0xE12AA4")]
		public bool IterateDeconstructProps()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EF9")]
		[Address(RVA = "0xE12B68", Offset = "0xE12B68", VA = "0xE12B68")]
		public void PlacePropsInQube(Qube qube)
		{
		}

		[Token(Token = "0x6000EFA")]
		[Address(RVA = "0xE1539C", Offset = "0xE1539C", VA = "0xE1539C")]
		public void OnReset()
		{
		}

		[Token(Token = "0x6000EFB")]
		[Address(RVA = "0xE153CC", Offset = "0xE153CC", VA = "0xE153CC")]
		public void OnDoneResetting()
		{
		}

		[Token(Token = "0x6000EFC")]
		[Address(RVA = "0xE153FC", Offset = "0xE153FC", VA = "0xE153FC")]
		private void AddSmoothTangentsToMesh(Mesh mesh)
		{
		}

		[Token(Token = "0x6000EFD")]
		[Address(RVA = "0xE160B8", Offset = "0xE160B8", VA = "0xE160B8")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6000EFE")]
		[Address(RVA = "0xE16400", Offset = "0xE16400", VA = "0xE16400")]
		public PropPlacer()
		{
		}

		[Token(Token = "0x6000EFF")]
		[Address(RVA = "0xE1286C", Offset = "0xE1286C", VA = "0xE1286C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FAF8C", Offset = "0x6FAF8C")]
		private bool <RecursivePropNodeSetup>g__ShouldBeBatched|24_0(MeshFilter mf)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200018B")]
	public class Sandbanker : MonoBehaviour
	{
		[Token(Token = "0x200018C")]
		private enum State : byte
		{
			[Token(Token = "0x4000990")]
			Reset,
			[Token(Token = "0x4000991")]
			Gather,
			[Token(Token = "0x4000992")]
			Smooth0,
			[Token(Token = "0x4000993")]
			Smooth1,
			[Token(Token = "0x4000994")]
			Smooth2,
			[Token(Token = "0x4000995")]
			Smooth3,
			[Token(Token = "0x4000996")]
			Smooth4,
			[Token(Token = "0x4000997")]
			Smooth5,
			[Token(Token = "0x4000998")]
			Smooth6,
			[Token(Token = "0x4000999")]
			Smooth7,
			[Token(Token = "0x400099A")]
			ApplyWater0,
			[Token(Token = "0x400099B")]
			ApplyWater1,
			[Token(Token = "0x400099C")]
			ApplyWater2,
			[Token(Token = "0x400099D")]
			ApplyWater3,
			[Token(Token = "0x400099E")]
			ApplyWater4,
			[Token(Token = "0x400099F")]
			ApplySand0,
			[Token(Token = "0x40009A0")]
			ApplySand1,
			[Token(Token = "0x40009A1")]
			Done
		}

		[Token(Token = "0x400097B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private WorldMaster master;

		[Token(Token = "0x400097C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<float> coverage;

		[Token(Token = "0x400097D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<Vector3> verts;

		[Token(Token = "0x400097E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<int> tris;

		[Token(Token = "0x400097F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private List<Vector3> normals;

		[Token(Token = "0x4000980")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private List<Vector3> delta;

		[Token(Token = "0x4000981")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private List<Vector3> vs;

		[Token(Token = "0x4000982")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private List<Vector2> uvs;

		[Token(Token = "0x4000983")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private List<int> ts;

		[Token(Token = "0x4000984")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private State state;

		[Token(Token = "0x4000985")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		public MeshFilter sandMf;

		[Token(Token = "0x4000986")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		public MeshFilter waterMf;

		[Token(Token = "0x4000987")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		public ByteFloat2 uvPos;

		[Token(Token = "0x4000988")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7A")]
		[SerializeField]
		public ByteFloat2 uvSize;

		[Token(Token = "0x4000989")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private int index;

		[Token(Token = "0x400098A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int vertCount;

		[Token(Token = "0x400098B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private int triCount;

		[Token(Token = "0x400098C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private int halfVertCount;

		[Token(Token = "0x400098D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Dictionary<int, int> dict;

		[Token(Token = "0x400098E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private Bounds bounds;

		[Token(Token = "0x6000F00")]
		[Address(RVA = "0xDA6590", Offset = "0xDA6590", VA = "0xDA6590")]
		public void Reset()
		{
		}

		[Token(Token = "0x6000F01")]
		[Address(RVA = "0xDA6598", Offset = "0xDA6598", VA = "0xDA6598")]
		public void Clear()
		{
		}

		[Token(Token = "0x6000F02")]
		[Address(RVA = "0xDA65F4", Offset = "0xDA65F4", VA = "0xDA65F4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000F03")]
		[Address(RVA = "0xDA65FC", Offset = "0xDA65FC", VA = "0xDA65FC")]
		private void UpdateShadeUvs()
		{
		}

		[Token(Token = "0x6000F04")]
		[Address(RVA = "0xDA66B0", Offset = "0xDA66B0", VA = "0xDA66B0")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6000F05")]
		[Address(RVA = "0xDA66B4", Offset = "0xDA66B4", VA = "0xDA66B4")]
		public void OnStart()
		{
		}

		[Token(Token = "0x6000F06")]
		[Address(RVA = "0xDA6730", Offset = "0xDA6730", VA = "0xDA6730")]
		public bool Iterate()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F07")]
		[Address(RVA = "0xDAB0C8", Offset = "0xDAB0C8", VA = "0xDAB0C8")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6000F08")]
		[Address(RVA = "0xDAB578", Offset = "0xDAB578", VA = "0xDAB578")]
		public Sandbanker()
		{
		}
	}
	[Token(Token = "0x200018D")]
	public class SaveCamera : MonoBehaviour
	{
		[Token(Token = "0x200018E")]
		private enum State
		{
			[Token(Token = "0x40009AC")]
			Begin,
			[Token(Token = "0x40009AD")]
			Middle,
			[Token(Token = "0x40009AE")]
			Done
		}

		[Token(Token = "0x40009A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private WorldMaster master;

		[Token(Token = "0x40009A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Camera cam;

		[Token(Token = "0x40009A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Texture2D bigTex;

		[Token(Token = "0x40009A5")]
		public const int saveTexSize = 512;

		[Token(Token = "0x40009A6")]
		private const int jpgQuality = 80;

		[Token(Token = "0x40009A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private State state;

		[Token(Token = "0x40009A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private MetaSave currentMetaSave;

		[Token(Token = "0x40009A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private RenderTexture renderTexture;

		[Token(Token = "0x40009AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private RenderTexture targetTexture;

		[Token(Token = "0x6000F09")]
		[Address(RVA = "0x109B740", Offset = "0x109B740", VA = "0x109B740")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000F0A")]
		[Address(RVA = "0x109B74C", Offset = "0x109B74C", VA = "0x109B74C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000F0B")]
		[Address(RVA = "0x109C110", Offset = "0x109C110", VA = "0x109C110")]
		public void Save(MetaSave metaSave)
		{
		}

		[Token(Token = "0x6000F0C")]
		[Address(RVA = "0x109C11C", Offset = "0x109C11C", VA = "0x109C11C")]
		public SaveCamera()
		{
		}
	}
	[Token(Token = "0x200018F")]
	public class FastCoroutineUpdater : MonoBehaviour
	{
		[Token(Token = "0x6000F0D")]
		[Address(RVA = "0xE7D844", Offset = "0xE7D844", VA = "0xE7D844")]
		private void Update()
		{
		}

		[Token(Token = "0x6000F0E")]
		[Address(RVA = "0xE7DB3C", Offset = "0xE7DB3C", VA = "0xE7DB3C")]
		public FastCoroutineUpdater()
		{
		}
	}
	[Token(Token = "0x2000190")]
	public static class FastCoroutines
	{
		[Token(Token = "0x2000191")]
		public struct Item
		{
			[Token(Token = "0x40009B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool isAction;

			[Token(Token = "0x40009B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public IEnumerator enumerator;

			[Token(Token = "0x40009B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public System.Action action;
		}

		[Token(Token = "0x2000192")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F0890", Offset = "0x6F0890")]
		private sealed class <FastCoroutine>d__9 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40009B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40009B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40009B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int milliseconds;

			[Token(Token = "0x40009B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public IEnumerator<bool> enumerator;

			[Token(Token = "0x17000464")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000F19")]
				[Address(RVA = "0x924670", Offset = "0x924670", VA = "0x924670", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000465")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000F1B")]
				[Address(RVA = "0x9246B8", Offset = "0x9246B8", VA = "0x9246B8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000F16")]
			[Address(RVA = "0x92445C", Offset = "0x92445C", VA = "0x92445C")]
			[DebuggerHidden]
			public <FastCoroutine>d__9(int <>1__state)
			{
			}

			[Token(Token = "0x6000F17")]
			[Address(RVA = "0x924488", Offset = "0x924488", VA = "0x924488", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000F18")]
			[Address(RVA = "0x92448C", Offset = "0x92448C", VA = "0x92448C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000F1A")]
			[Address(RVA = "0x924678", Offset = "0x924678", VA = "0x924678", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40009AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static List<Item> items;

		[Token(Token = "0x40009B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Stopwatch stopwatch;

		[Token(Token = "0x40009B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static int staticMilliseconds;

		[Token(Token = "0x6000F0F")]
		[Address(RVA = "0xE7D8A0", Offset = "0xE7D8A0", VA = "0xE7D8A0")]
		public static bool FastIterate(int milliseconds)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F10")]
		[Address(RVA = "0xE7DB44", Offset = "0xE7DB44", VA = "0xE7DB44")]
		public static void Queue(this IEnumerator enumerator)
		{
		}

		[Token(Token = "0x6000F11")]
		[Address(RVA = "0xE7DC08", Offset = "0xE7DC08", VA = "0xE7DC08")]
		public static void Queue(this System.Action action)
		{
		}

		[Token(Token = "0x6000F12")]
		[Address(RVA = "0xE7DCC0", Offset = "0xE7DCC0", VA = "0xE7DCC0")]
		public static void StartFastCoroutine(this MonoBehaviour monoBehaviour, IEnumerator<bool> enumerator, int milliseconds = 6)
		{
		}

		[Token(Token = "0x6000F13")]
		[Address(RVA = "0xE7DDC8", Offset = "0xE7DDC8", VA = "0xE7DDC8")]
		public static bool KeepGoing()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F14")]
		[Address(RVA = "0xE7DD4C", Offset = "0xE7DD4C", VA = "0xE7DD4C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6FAFCC", Offset = "0x6FAFCC")]
		private static IEnumerator FastCoroutine(IEnumerator<bool> enumerator, int milliseconds)
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x2000193")]
	public class MetaSave : MonoBehaviour, IComparable<MetaSave>
	{
		[Token(Token = "0x2000194")]
		public enum State
		{
			[Token(Token = "0x40009C9")]
			Unclear = 1,
			[Token(Token = "0x40009CA")]
			NeedsUpdating = 2,
			[Token(Token = "0x40009CB")]
			UpToDate = 4,
			[Token(Token = "0x40009CC")]
			NotYetSaved = 8,
			[Token(Token = "0x40009CD")]
			NewFromDuplicate = 16,
			[Token(Token = "0x40009CE")]
			FailedToLoad = 32,
			[Token(Token = "0x40009CF")]
			DidNotExistOnDisk = 64,
			[Token(Token = "0x40009D0")]
			Deleted = 128,
			[Token(Token = "0x40009D1")]
			ReturnedToPool = 256,
			[Token(Token = "0x40009D2")]
			BrokenMask = 480,
			[Token(Token = "0x40009D3")]
			InvisibleMask = 483,
			[Token(Token = "0x40009D4")]
			ShouldBeInPoolMask = 448
		}

		[Serializable]
		[Token(Token = "0x2000195")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F08A0", Offset = "0x6F08A0")]
		private sealed class <>c
		{
			[Token(Token = "0x40009D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40009D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static System.Action <>9__32_0;

			[Token(Token = "0x40009D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Action<int> <>9__32_1;

			[Token(Token = "0x6000F28")]
			[Address(RVA = "0x929634", Offset = "0x929634", VA = "0x929634")]
			public <>c()
			{
			}

			[Token(Token = "0x6000F29")]
			[Address(RVA = "0x92963C", Offset = "0x92963C", VA = "0x92963C")]
			internal void <.ctor>b__32_0()
			{
			}

			[Token(Token = "0x6000F2A")]
			[Address(RVA = "0x929640", Offset = "0x929640", VA = "0x929640")]
			internal void <.ctor>b__32_1(int <p0>)
			{
			}
		}

		[Token(Token = "0x40009B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string path;

		[Token(Token = "0x40009BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string fileName;

		[Token(Token = "0x40009BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool isBin;

		[Token(Token = "0x40009BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Texture2D texture;

		[Token(Token = "0x40009BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public long lastFileWriteTime;

		[Token(Token = "0x40009BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public SaveData saveData;

		[Token(Token = "0x40009BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float lastDiskSyncTime;

		[Token(Token = "0x40009C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float lastTextureLoadTime;

		[Token(Token = "0x40009C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float lastSaveDataTime;

		[Token(Token = "0x40009C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public bool existsOnDisk;

		[Token(Token = "0x40009C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public IAsyncRequest<byte[]> loadRequest;

		[Token(Token = "0x40009C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public IAsyncRequest saveRequest;

		[Token(Token = "0x40009C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public System.Action onStateChange;

		[Token(Token = "0x40009C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Action<int> onIndexChange;

		[Token(Token = "0x40009C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public State state;

		[Token(Token = "0x17000466")]
		public bool isXml
		{
			[Token(Token = "0x6000F1C")]
			[Address(RVA = "0x9E61C8", Offset = "0x9E61C8", VA = "0x9E61C8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000467")]
		public bool isSaving
		{
			[Token(Token = "0x6000F1D")]
			[Address(RVA = "0x9E61D8", Offset = "0x9E61D8", VA = "0x9E61D8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000468")]
		public bool isLoading
		{
			[Token(Token = "0x6000F1E")]
			[Address(RVA = "0x9E61E8", Offset = "0x9E61E8", VA = "0x9E61E8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000469")]
		public bool isBroken
		{
			[Token(Token = "0x6000F1F")]
			[Address(RVA = "0x9E61F8", Offset = "0x9E61F8", VA = "0x9E61F8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700046A")]
		public bool shouldBeVisible
		{
			[Token(Token = "0x6000F20")]
			[Address(RVA = "0x9E6208", Offset = "0x9E6208", VA = "0x9E6208")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700046B")]
		public bool shouldBeInPool
		{
			[Token(Token = "0x6000F21")]
			[Address(RVA = "0x9E621C", Offset = "0x9E621C", VA = "0x9E621C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000F22")]
		[Address(RVA = "0x9E622C", Offset = "0x9E622C", VA = "0x9E622C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x6FC07C", Offset = "0x6FC07C")]
		private void SaveThis()
		{
		}

		[Token(Token = "0x6000F23")]
		[Address(RVA = "0x9E6290", Offset = "0x9E6290", VA = "0x9E6290", Slot = "4")]
		private int System.IComparable<Placemaker.MetaSave>.CompareTo(MetaSave other)
		{
			return default(int);
		}

		[Token(Token = "0x6000F24")]
		[Address(RVA = "0x9E6334", Offset = "0x9E6334", VA = "0x9E6334")]
		public void SetPathAsName()
		{
		}

		[Token(Token = "0x6000F25")]
		[Address(RVA = "0x9E6338", Offset = "0x9E6338", VA = "0x9E6338")]
		public void ResetPooledObject()
		{
		}

		[Token(Token = "0x6000F26")]
		[Address(RVA = "0x9E6468", Offset = "0x9E6468", VA = "0x9E6468")]
		public MetaSave()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000196")]
	public class SaveData
	{
		[Serializable]
		[Token(Token = "0x2000197")]
		public struct C
		{
			[Token(Token = "0x40009DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int x;

			[Token(Token = "0x40009E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int y;

			[Token(Token = "0x40009E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int count;

			[Token(Token = "0x6000F2F")]
			[Address(RVA = "0x92BF90", Offset = "0x92BF90", VA = "0x92BF90", Slot = "3")]
			public override string ToString()
			{
				return null;
			}
		}

		[Serializable]
		[Token(Token = "0x2000198")]
		public struct V
		{
			[Token(Token = "0x40009E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public byte t;

			[Token(Token = "0x40009E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
			public byte h;
		}

		[Serializable]
		[Token(Token = "0x2000199")]
		public struct Cam
		{
			[Token(Token = "0x40009E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public byte x;

			[Token(Token = "0x40009E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
			public byte y;

			[Token(Token = "0x40009E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
			public byte z;
		}

		[Serializable]
		[Token(Token = "0x200019A")]
		public struct Sun
		{
			[Token(Token = "0x40009E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public byte h;

			[Token(Token = "0x40009E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
			public byte r;
		}

		[Token(Token = "0x40009D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string saveString;

		[Token(Token = "0x40009D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public long lastWriteTime;

		[Token(Token = "0x40009DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Cam cam;

		[Token(Token = "0x40009DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
		public Sun sun;

		[Token(Token = "0x40009DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<C> corners;

		[Token(Token = "0x40009DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<V> voxels;

		[Token(Token = "0x40009DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public byte[] bigJpg;

		[Token(Token = "0x6000F2B")]
		[Address(RVA = "0x109C260", Offset = "0x109C260", VA = "0x109C260")]
		public void Clear()
		{
		}

		[Token(Token = "0x6000F2C")]
		[Address(RVA = "0x109C2EC", Offset = "0x109C2EC", VA = "0x109C2EC")]
		public void ReadNonImageDataFrom(SaveData other)
		{
		}

		[Token(Token = "0x6000F2D")]
		[Address(RVA = "0x109C3E0", Offset = "0x109C3E0", VA = "0x109C3E0")]
		public void CopyFrom(SaveData other)
		{
		}

		[Token(Token = "0x6000F2E")]
		[Address(RVA = "0x109C498", Offset = "0x109C498", VA = "0x109C498")]
		public SaveData()
		{
		}
	}
	[Token(Token = "0x200019B")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x6F08B0", Offset = "0x6F08B0")]
	public class SaveDataScripableObject : ScriptableObject
	{
		[Token(Token = "0x40009E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SaveData defaultSaveData;

		[Token(Token = "0x6000F30")]
		[Address(RVA = "0x109C580", Offset = "0x109C580", VA = "0x109C580")]
		public SaveDataScripableObject()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200019C")]
	public class SaveSystem : MonoBehaviour
	{
		[Token(Token = "0x200019D")]
		public enum BootState
		{
			[Token(Token = "0x4000A11")]
			MoveAllCurrentToPool,
			[Token(Token = "0x4000A12")]
			BeginLoadSettings,
			[Token(Token = "0x4000A13")]
			LoadSettingsBytes,
			[Token(Token = "0x4000A14")]
			CreateNewSettings,
			[Token(Token = "0x4000A15")]
			TryLoadLastSave,
			[Token(Token = "0x4000A16")]
			IterateLastMetaSave,
			[Token(Token = "0x4000A17")]
			LoadSaveList,
			[Token(Token = "0x4000A18")]
			IterateAllSaves,
			[Token(Token = "0x4000A19")]
			ValidLastSave,
			[Token(Token = "0x4000A1A")]
			NoValidLastSave,
			[Token(Token = "0x4000A1B")]
			NewFromDefaultSave
		}

		[Token(Token = "0x200019E")]
		public enum State
		{
			[Token(Token = "0x4000A1D")]
			DoNothing,
			[Token(Token = "0x4000A1E")]
			BeginRefreshSaves,
			[Token(Token = "0x4000A1F")]
			ListFiles,
			[Token(Token = "0x4000A20")]
			ProcessStrings,
			[Token(Token = "0x4000A21")]
			CheckExistingMetaSaves,
			[Token(Token = "0x4000A22")]
			CreateNewMetaFiles,
			[Token(Token = "0x4000A23")]
			ProcessAllMetaFiles,
			[Token(Token = "0x4000A24")]
			Done
		}

		[StructLayout(3)]
		[Token(Token = "0x200019F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F08C0", Offset = "0x6F08C0")]
		private struct <>c__DisplayClass50_0
		{
			[Token(Token = "0x4000A25")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string fileName;
		}

		[Token(Token = "0x20001A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F08D0", Offset = "0x6F08D0")]
		private sealed class <>c__DisplayClass53_0
		{
			[Token(Token = "0x4000A26")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public IAsyncRequest<byte[]> request;

			[Token(Token = "0x4000A27")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public MetaSave metaSave;

			[Token(Token = "0x4000A28")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SaveSystem <>4__this;

			[Token(Token = "0x6000F59")]
			[Address(RVA = "0x92CFD4", Offset = "0x92CFD4", VA = "0x92CFD4")]
			public <>c__DisplayClass53_0()
			{
			}

			[Token(Token = "0x6000F5A")]
			[Address(RVA = "0x92CFDC", Offset = "0x92CFDC", VA = "0x92CFDC")]
			internal void <LoadMetaSaveFromDisk>b__0()
			{
			}
		}

		[Token(Token = "0x20001A1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F08E0", Offset = "0x6F08E0")]
		private sealed class <>c__DisplayClass54_0
		{
			[Token(Token = "0x20001A2")]
			private sealed class <<SaveMetaSaveToDisk>g__NoPathRoutine|1>d : IEnumerator<object>, IEnumerator, IDisposable
			{
				[Token(Token = "0x4000A2C")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				private int <>1__state;

				[Token(Token = "0x4000A2D")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				private object <>2__current;

				[Token(Token = "0x4000A2E")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				public <>c__DisplayClass54_0 <>4__this;

				[Token(Token = "0x4000A2F")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
				private Unity.Mathematics.Random <random>5__2;

				[Token(Token = "0x4000A30")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
				private string <fileName>5__3;

				[Token(Token = "0x4000A31")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
				private string <path>5__4;

				[Token(Token = "0x4000A32")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
				private IAsyncRequest<bool> <request>5__5;

				[Token(Token = "0x1700046D")]
				private object System.Collections.Generic.IEnumerator<System.Object>.Current
				{
					[Token(Token = "0x6000F61")]
					[Address(RVA = "0x1083ECC", Offset = "0x1083ECC", VA = "0x1083ECC", Slot = "4")]
					[DebuggerHidden]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x1700046E")]
				private object System.Collections.IEnumerator.Current
				{
					[Token(Token = "0x6000F63")]
					[Address(RVA = "0x1083F14", Offset = "0x1083F14", VA = "0x1083F14", Slot = "7")]
					[DebuggerHidden]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x6000F5E")]
				[Address(RVA = "0x1083AAC", Offset = "0x1083AAC", VA = "0x1083AAC")]
				[DebuggerHidden]
				public <<SaveMetaSaveToDisk>g__NoPathRoutine|1>d(int <>1__state)
				{
				}

				[Token(Token = "0x6000F5F")]
				[Address(RVA = "0x1083AD8", Offset = "0x1083AD8", VA = "0x1083AD8", Slot = "5")]
				[DebuggerHidden]
				private void System.IDisposable.Dispose()
				{
				}

				[Token(Token = "0x6000F60")]
				[Address(RVA = "0x1083ADC", Offset = "0x1083ADC", VA = "0x1083ADC", Slot = "6")]
				private bool MoveNext()
				{
					return default(bool);
				}

				[Token(Token = "0x6000F62")]
				[Address(RVA = "0x1083ED4", Offset = "0x1083ED4", VA = "0x1083ED4", Slot = "8")]
				[DebuggerHidden]
				private void System.Collections.IEnumerator.Reset()
				{
				}
			}

			[Token(Token = "0x4000A29")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public MetaSave metaSave;

			[Token(Token = "0x4000A2A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public SaveSystem <>4__this;

			[Token(Token = "0x4000A2B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool setAsLastSave;

			[Token(Token = "0x6000F5B")]
			[Address(RVA = "0x92D510", Offset = "0x92D510", VA = "0x92D510")]
			public <>c__DisplayClass54_0()
			{
			}

			[Token(Token = "0x6000F5C")]
			[Address(RVA = "0x92D518", Offset = "0x92D518", VA = "0x92D518")]
			internal void <SaveMetaSaveToDisk>g__SaveSave|0(bool isNewSave)
			{
			}

			[Token(Token = "0x6000F5D")]
			[Address(RVA = "0x92D9BC", Offset = "0x92D9BC", VA = "0x92D9BC")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6FC1A4", Offset = "0x6FC1A4")]
			internal IEnumerator <SaveMetaSaveToDisk>g__NoPathRoutine|1()
			{
				return null;
			}
		}

		[Token(Token = "0x20001A3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F08F0", Offset = "0x6F08F0")]
		private sealed class <>c__DisplayClass54_1
		{
			[Token(Token = "0x4000A33")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool isNewSave;

			[Token(Token = "0x4000A34")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public IAsyncRequest request;

			[Token(Token = "0x4000A35")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public <>c__DisplayClass54_0 CS$<>8__locals1;

			[Token(Token = "0x6000F64")]
			[Address(RVA = "0x92D9B4", Offset = "0x92D9B4", VA = "0x92D9B4")]
			public <>c__DisplayClass54_1()
			{
			}

			[Token(Token = "0x6000F65")]
			[Address(RVA = "0x92DA28", Offset = "0x92DA28", VA = "0x92DA28")]
			internal void <SaveMetaSaveToDisk>b__2()
			{
			}
		}

		[Token(Token = "0x20001A4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F0900", Offset = "0x6F0900")]
		private sealed class <>c__DisplayClass65_0
		{
			[Token(Token = "0x4000A36")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public IAsyncRequest request;

			[Token(Token = "0x4000A37")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public SaveSystem <>4__this;

			[Token(Token = "0x6000F66")]
			[Address(RVA = "0x92DD34", Offset = "0x92DD34", VA = "0x92DD34")]
			public <>c__DisplayClass65_0()
			{
			}

			[Token(Token = "0x6000F67")]
			[Address(RVA = "0x92DD3C", Offset = "0x92DD3C", VA = "0x92DD3C")]
			internal void <DeleteMetaSaveFromDisk>b__0()
			{
			}
		}

		[Token(Token = "0x20001A5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F0910", Offset = "0x6F0910")]
		private sealed class <SaveAndQuit>d__72 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000A38")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000A39")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000A3A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SaveSystem <>4__this;

			[Token(Token = "0x4000A3B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public System.Action callback;

			[Token(Token = "0x4000A3C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private bool <saveSettings>5__2;

			[Token(Token = "0x1700046F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000F6B")]
				[Address(RVA = "0x92DFA8", Offset = "0x92DFA8", VA = "0x92DFA8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000470")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000F6D")]
				[Address(RVA = "0x92DFF0", Offset = "0x92DFF0", VA = "0x92DFF0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000F68")]
			[Address(RVA = "0x92DE84", Offset = "0x92DE84", VA = "0x92DE84")]
			[DebuggerHidden]
			public <SaveAndQuit>d__72(int <>1__state)
			{
			}

			[Token(Token = "0x6000F69")]
			[Address(RVA = "0x92DEB0", Offset = "0x92DEB0", VA = "0x92DEB0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000F6A")]
			[Address(RVA = "0x92DEB4", Offset = "0x92DEB4", VA = "0x92DEB4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000F6C")]
			[Address(RVA = "0x92DFB0", Offset = "0x92DFB0", VA = "0x92DFB0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20001A6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F0920", Offset = "0x6F0920")]
		private sealed class <>c
		{
			[Token(Token = "0x4000A3D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000A3E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action<MetaSave> <>9__78_0;

			[Token(Token = "0x4000A3F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Action<int, int> <>9__78_1;

			[Token(Token = "0x6000F6F")]
			[Address(RVA = "0x92CFC4", Offset = "0x92CFC4", VA = "0x92CFC4")]
			public <>c()
			{
			}

			[Token(Token = "0x6000F70")]
			[Address(RVA = "0x92CFCC", Offset = "0x92CFCC", VA = "0x92CFCC")]
			internal void <.ctor>b__78_0(MetaSave <p0>)
			{
			}

			[Token(Token = "0x6000F71")]
			[Address(RVA = "0x92CFD0", Offset = "0x92CFD0", VA = "0x92CFD0")]
			internal void <.ctor>b__78_1(int <p0>, int <p1>)
			{
			}
		}

		[Token(Token = "0x40009EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private WorldMaster worldMaster;

		[Token(Token = "0x40009EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool anyChangeWhenRefreshing;

		[Token(Token = "0x40009EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public BootState bootState;

		[Token(Token = "0x40009ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public State state;

		[Token(Token = "0x40009EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform metaSavePool;

		[Token(Token = "0x40009EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform metaSaveContainer;

		[Token(Token = "0x40009F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public SettingsData settingsData;

		[Token(Token = "0x40009F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float settingsChangeTime;

		[Token(Token = "0x40009F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float settingsSaveTime;

		[Token(Token = "0x40009F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float settingsStartChangeTime;

		[Token(Token = "0x40009F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public MetaSave currentMetaSave;

		[Token(Token = "0x40009F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public List<string> fileList;

		[Token(Token = "0x40009F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Action<MetaSave> onNewMetaSave;

		[Token(Token = "0x40009F7")]
		private const string settingsFileName = "Sett.ings";

		[Token(Token = "0x40009F8")]
		private const string saveFilePrefix = "Town";

		[Token(Token = "0x40009F9")]
		private const string xmlExtension = ".scape";

		[Token(Token = "0x40009FA")]
		private const string binExtension = ".binscape";

		[Token(Token = "0x40009FB")]
		private const string saveFileDirectoryName = "Saves";

		[Token(Token = "0x40009FC")]
		private const string preferedSaveExension = ".binscape";

		[Token(Token = "0x40009FD")]
		private const bool shouldBeBin = true;

		[Token(Token = "0x40009FE")]
		private const string containerID = "storage";

		[Token(Token = "0x40009FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public float startRefreshTime;

		[Token(Token = "0x4000A00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private char[] charArray;

		[Token(Token = "0x4000A01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private string saveChars;

		[Token(Token = "0x4000A02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private XmlSerializer settingsXmlSerializer;

		[Token(Token = "0x4000A03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private XmlSerializer saveXmlSerializer;

		[Token(Token = "0x4000A04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private BinaryFormatter binaryFormatter;

		[Token(Token = "0x4000A05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private int index;

		[Token(Token = "0x4000A06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[SerializeField]
		private int count;

		[Token(Token = "0x4000A07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public int validMetaSaveCount;

		[Token(Token = "0x4000A08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private IAsyncRequest<IList<string>> listRequest;

		[Token(Token = "0x4000A09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private IAsyncRequest<byte[]> byteRequest;

		[Token(Token = "0x4000A0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private IAsyncRequest<bool> boolRequest;

		[Token(Token = "0x4000A0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private IAsyncRequest saveSettingsRequest;

		[Token(Token = "0x4000A0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public Action<int, int> onSaveRequestCountChange;

		[Token(Token = "0x4000A0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public int activeRequestsCounter;

		[Token(Token = "0x4000A0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		public readonly int maxSaveGameCount;

		[Token(Token = "0x4000A0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public int totalSaveGameCount;

		[Token(Token = "0x1700046C")]
		private IStorageContainer storageContainer
		{
			[Token(Token = "0x6000F31")]
			[Address(RVA = "0x10A0294", Offset = "0x10A0294", VA = "0x10A0294")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F32")]
		[Address(RVA = "0x10A0398", Offset = "0x10A0398", VA = "0x10A0398")]
		private string GetSaveFilePath(string fileName)
		{
			return null;
		}

		[Token(Token = "0x6000F33")]
		[Address(RVA = "0x10A03A0", Offset = "0x10A03A0", VA = "0x10A03A0")]
		public string GetUniqueSaveName()
		{
			return null;
		}

		[Token(Token = "0x6000F34")]
		[Address(RVA = "0x10A0514", Offset = "0x10A0514", VA = "0x10A0514")]
		public MetaSave GetMetaSave(int index)
		{
			return null;
		}

		[Token(Token = "0x6000F35")]
		[Address(RVA = "0x109F158", Offset = "0x109F158", VA = "0x109F158")]
		public int GetMetaSaveCount()
		{
			return default(int);
		}

		[Token(Token = "0x6000F36")]
		[Address(RVA = "0x10A0584", Offset = "0x10A0584", VA = "0x10A0584")]
		public MetaSave GetNewMetaSave(MetaSave.State state, string path = "no path")
		{
			return null;
		}

		[Token(Token = "0x6000F37")]
		[Address(RVA = "0x10A08FC", Offset = "0x10A08FC", VA = "0x10A08FC")]
		public void ResetBoot()
		{
		}

		[Token(Token = "0x6000F38")]
		[Address(RVA = "0x10A0910", Offset = "0x10A0910", VA = "0x10A0910")]
		public bool IterateBoot(Func<bool> keepGoing)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F39")]
		[Address(RVA = "0x10A14FC", Offset = "0x10A14FC", VA = "0x10A14FC")]
		private void MaybeUpdateOldSettings()
		{
		}

		[Token(Token = "0x6000F3A")]
		[Address(RVA = "0x109EA80", Offset = "0x109EA80", VA = "0x109EA80")]
		public bool IterateRefresh(Func<bool> keepGoing)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F3B")]
		[Address(RVA = "0x10A1B10", Offset = "0x10A1B10", VA = "0x10A1B10")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x6FC0B4", Offset = "0x6FC0B4")]
		public void StartRefreshSaves()
		{
		}

		[Token(Token = "0x6000F3C")]
		[Address(RVA = "0x10A1B28", Offset = "0x10A1B28", VA = "0x10A1B28")]
		public void StartMaybeSaveSaves()
		{
		}

		[Token(Token = "0x6000F3D")]
		[Address(RVA = "0x10A15DC", Offset = "0x10A15DC", VA = "0x10A15DC")]
		private void LoadMetaSaveFromDisk(MetaSave metaSave)
		{
		}

		[Token(Token = "0x6000F3E")]
		[Address(RVA = "0x10A1B74", Offset = "0x10A1B74", VA = "0x10A1B74")]
		public void SaveMetaSaveToDisk(MetaSave metaSave, bool setAsLastSave = false)
		{
		}

		[Token(Token = "0x6000F3F")]
		[Address(RVA = "0x10A1CF4", Offset = "0x10A1CF4", VA = "0x10A1CF4")]
		public void SaveSettings()
		{
		}

		[Token(Token = "0x6000F40")]
		[Address(RVA = "0x10A204C", Offset = "0x10A204C", VA = "0x10A204C")]
		public bool MaybeSaveSettings(float margin = 0f)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F41")]
		[Address(RVA = "0x10A14BC", Offset = "0x10A14BC", VA = "0x10A14BC")]
		public void SetSettingsDirty()
		{
		}

		[Token(Token = "0x6000F42")]
		[Address(RVA = "0x10A20A8", Offset = "0x10A20A8", VA = "0x10A20A8")]
		public bool MaybeSaveCurrent()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F43")]
		[Address(RVA = "0x109D5F4", Offset = "0x109D5F4", VA = "0x109D5F4")]
		public void OnSaveMenuOpen()
		{
		}

		[Token(Token = "0x6000F44")]
		[Address(RVA = "0x10A21BC", Offset = "0x10A21BC", VA = "0x10A21BC")]
		public void PopulateSaveData(MetaSave metaSave)
		{
		}

		[Token(Token = "0x6000F45")]
		[Address(RVA = "0x10A21FC", Offset = "0x10A21FC", VA = "0x10A21FC")]
		public void MaybeSaveAndUnloadCurrent()
		{
		}

		[Token(Token = "0x6000F46")]
		[Address(RVA = "0x10A22AC", Offset = "0x10A22AC", VA = "0x10A22AC")]
		public void SetCurrentMetaSave(MetaSave metaSave)
		{
		}

		[Token(Token = "0x6000F47")]
		[Address(RVA = "0x10A2118", Offset = "0x10A2118", VA = "0x10A2118")]
		public MetaSave GetAndMaybeCreateCurrent()
		{
			return null;
		}

		[Token(Token = "0x6000F48")]
		[Address(RVA = "0x10A237C", Offset = "0x10A237C", VA = "0x10A237C")]
		public bool GetAllowed(SimpleMessage infoMessageElement)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F49")]
		[Address(RVA = "0x109F8A4", Offset = "0x109F8A4", VA = "0x109F8A4")]
		public bool DeleteMetaSaveFromDisk(MetaSave metaSave, out bool wasCurrent)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F4A")]
		[Address(RVA = "0x10A2548", Offset = "0x10A2548", VA = "0x10A2548")]
		public bool IsMetaSaveLoading(MetaSave metaSave)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F4B")]
		[Address(RVA = "0x10A1894", Offset = "0x10A1894", VA = "0x10A1894")]
		public bool LoadSave(MetaSave metaSave)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F4C")]
		[Address(RVA = "0x10A01C4", Offset = "0x10A01C4", VA = "0x10A01C4")]
		public void DuplicateSave(MetaSave oldMetaSave)
		{
		}

		[Token(Token = "0x6000F4D")]
		[Address(RVA = "0x10A19EC", Offset = "0x10A19EC", VA = "0x10A19EC")]
		private void LogTime()
		{
		}

		[Token(Token = "0x6000F4E")]
		[Address(RVA = "0x10A25B8", Offset = "0x10A25B8", VA = "0x10A25B8")]
		public static long GetDateTimeLong(DateTime dateTime)
		{
			return default(long);
		}

		[Token(Token = "0x6000F4F")]
		[Address(RVA = "0x10A2614", Offset = "0x10A2614", VA = "0x10A2614")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x6000F50")]
		[Address(RVA = "0x10A263C", Offset = "0x10A263C", VA = "0x10A263C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6FC0EC", Offset = "0x6FC0EC")]
		public IEnumerator SaveAndQuit([Optional] System.Action callback)
		{
			return null;
		}

		[Token(Token = "0x6000F51")]
		[Address(RVA = "0x10A26B4", Offset = "0x10A26B4", VA = "0x10A26B4")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x6FC14C", Offset = "0x6FC14C")]
		public void SortAll()
		{
		}

		[Token(Token = "0x6000F52")]
		[Address(RVA = "0x10A2890", Offset = "0x10A2890", VA = "0x10A2890")]
		public void UpdateAllTextures()
		{
		}

		[Token(Token = "0x6000F53")]
		[Address(RVA = "0x109C0B0", Offset = "0x109C0B0", VA = "0x109C0B0")]
		public bool MaybeUpdateTexture(MetaSave metaSave)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F54")]
		[Address(RVA = "0x10A1A88", Offset = "0x10A1A88", VA = "0x10A1A88")]
		private void SetSiblingIndex(MetaSave metaSave, int index)
		{
		}

		[Token(Token = "0x6000F55")]
		[Address(RVA = "0x10A07D8", Offset = "0x10A07D8", VA = "0x10A07D8")]
		private void ChangeState(MetaSave metaSave, MetaSave.State state)
		{
		}

		[Token(Token = "0x6000F56")]
		[Address(RVA = "0x10A2988", Offset = "0x10A2988", VA = "0x10A2988")]
		public SaveSystem()
		{
		}

		[Token(Token = "0x6000F57")]
		[Address(RVA = "0x10A19F0", Offset = "0x10A19F0", VA = "0x10A19F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FC184", Offset = "0x6FC184")]
		internal static bool <IterateRefresh>g__IsValid|50_0(ref <>c__DisplayClass50_0 P_0)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F58")]
		[Address(RVA = "0x10A2CCC", Offset = "0x10A2CCC", VA = "0x10A2CCC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FC194", Offset = "0x6FC194")]
		private void <SaveSettings>b__55_0()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001A7")]
	public class SettingsData
	{
		[Serializable]
		[Token(Token = "0x20001A8")]
		public struct Screenshot
		{
			[Token(Token = "0x4000A4D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string path;

			[Token(Token = "0x4000A4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int x;

			[Token(Token = "0x4000A4F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public int y;
		}

		[Serializable]
		[Token(Token = "0x20001A9")]
		public struct ObjExport
		{
			[Token(Token = "0x4000A50")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string path;
		}

		[Serializable]
		[Token(Token = "0x20001AA")]
		public struct Axis
		{
			[Token(Token = "0x4000A51")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool rotationXInverted;

			[Token(Token = "0x4000A52")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
			public bool rotationYInverted;
		}

		[Token(Token = "0x4000A40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		public int version;

		[Token(Token = "0x4000A41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public string lastSave;

		[Token(Token = "0x4000A42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		public byte currentColor;

		[Token(Token = "0x4000A43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[SerializeField]
		public byte currentColorRightController;

		[Token(Token = "0x4000A44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
		[SerializeField]
		public byte audioVolume;

		[Token(Token = "0x4000A45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
		[SerializeField]
		public bool antiAliasing;

		[Token(Token = "0x4000A46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		public Axis axis;

		[Token(Token = "0x4000A47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
		[SerializeField]
		public bool vSync;

		[Token(Token = "0x4000A48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x27")]
		[SerializeField]
		public bool fullscreen;

		[Token(Token = "0x4000A49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string language;

		[Token(Token = "0x4000A4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string lastSystemLanguage;

		[Token(Token = "0x4000A4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Screenshot screenshot;

		[Token(Token = "0x4000A4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public ObjExport objExport;

		[Token(Token = "0x6000F72")]
		[Address(RVA = "0x10A1540", Offset = "0x10A1540", VA = "0x10A1540")]
		public SettingsData()
		{
		}
	}
	[Token(Token = "0x20001AB")]
	public static class TextSaveAlphabet
	{
		[Token(Token = "0x4000A53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly string alphabet;

		[Token(Token = "0x4000A54")]
		public const int baseLength = 64;

		[Token(Token = "0x4000A55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly Dictionary<char, int> alphabetDict;

		[Token(Token = "0x6000F73")]
		[Address(RVA = "0xAEC930", Offset = "0xAEC930", VA = "0xAEC930")]
		static TextSaveAlphabet()
		{
		}
	}
	[Token(Token = "0x20001AC")]
	public class TextSaveSystem : MonoBehaviour
	{
		[Token(Token = "0x20001AD")]
		public interface ITextSaver
		{
			[Token(Token = "0x6000F7E")]
			void SaveToText(List<int> values);

			[Token(Token = "0x6000F7F")]
			void LoadFromText(BitArray bitArray, ref int bitIndex);
		}

		[Token(Token = "0x4000A56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private WorldMaster master;

		[Token(Token = "0x4000A57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static BitArray bitArray;

		[Token(Token = "0x4000A58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static char[] chars;

		[Token(Token = "0x4000A59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static readonly int bitsPerCharacter;

		[Token(Token = "0x4000A5A")]
		private const int bitCountBitCount = 5;

		[Token(Token = "0x4000A5B")]
		private const int typeCountBitCount = 4;

		[Token(Token = "0x6000F74")]
		[Address(RVA = "0xAECD1C", Offset = "0xAECD1C", VA = "0xAECD1C")]
		public static string GetSpacedString(string srcString)
		{
			return null;
		}

		[Token(Token = "0x6000F75")]
		[Address(RVA = "0xAECF08", Offset = "0xAECF08", VA = "0xAECF08")]
		private static int GetBitsPerCharacter()
		{
			return default(int);
		}

		[Token(Token = "0x6000F76")]
		[Address(RVA = "0xAECF10", Offset = "0xAECF10", VA = "0xAECF10")]
		public static void AddValue(List<int> values, int value, int bitCount)
		{
		}

		[Token(Token = "0x6000F77")]
		[Address(RVA = "0xAECF88", Offset = "0xAECF88", VA = "0xAECF88")]
		public static int ReadValue(BitArray bitArray, ref int index, int bitCount)
		{
			return default(int);
		}

		[Token(Token = "0x6000F78")]
		[Address(RVA = "0xAED280", Offset = "0xAED280", VA = "0xAED280")]
		private static int GetBitCount(int biggestValue)
		{
			return default(int);
		}

		[Token(Token = "0x6000F79")]
		[Address(RVA = "0xAED2A0", Offset = "0xAED2A0", VA = "0xAED2A0")]
		public static string SaveToString(List<SaveData.C> corners, List<SaveData.V> voxels)
		{
			return null;
		}

		[Token(Token = "0x6000F7A")]
		[Address(RVA = "0xAEDFC0", Offset = "0xAEDFC0", VA = "0xAEDFC0")]
		public static bool LoadFromString(string saveString, List<SaveData.C> corners, List<SaveData.V> voxels)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F7B")]
		[Address(RVA = "0xAEEAB0", Offset = "0xAEEAB0", VA = "0xAEEAB0")]
		private void LogBitArray(int bitCount)
		{
		}

		[Token(Token = "0x6000F7C")]
		[Address(RVA = "0xAEEBE4", Offset = "0xAEEBE4", VA = "0xAEEBE4")]
		public TextSaveSystem()
		{
		}
	}
	[Token(Token = "0x20001AE")]
	public static class UniversalStopwatch
	{
		[Token(Token = "0x4000A5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Stopwatch stopwatch;

		[Token(Token = "0x4000A5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static int lastCountFrame;

		[Token(Token = "0x4000A5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public static int milliseconds;

		[Token(Token = "0x6000F80")]
		[Address(RVA = "0x1BD3D64", Offset = "0x1BD3D64", VA = "0x1BD3D64")]
		public static bool StartCounting()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F81")]
		[Address(RVA = "0x1BD3E2C", Offset = "0x1BD3E2C", VA = "0x1BD3E2C")]
		public static bool KeepGoing()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20001AF")]
	public class ScreenshotCamera : MonoBehaviour
	{
		[Token(Token = "0x4000A5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private WorldMaster master;

		[Token(Token = "0x4000A60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Camera cam;

		[Token(Token = "0x4000A61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Camera skyboxCam;

		[Token(Token = "0x4000A62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Material noAlphaBlit;

		[Token(Token = "0x4000A63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Material vignetteMaterial;

		[Token(Token = "0x4000A64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Texture vignetteTexture;

		[Token(Token = "0x4000A65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Material flipVertically;

		[Token(Token = "0x4000A66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private RenderTexture bigTex;

		[Token(Token = "0x4000A67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private RenderTexture smallTex;

		[Token(Token = "0x6000F83")]
		[Address(RVA = "0x10A518C", Offset = "0x10A518C", VA = "0x10A518C")]
		public void OnStart()
		{
		}

		[Token(Token = "0x6000F84")]
		[Address(RVA = "0x10A3CF4", Offset = "0x10A3CF4", VA = "0x10A3CF4")]
		public Texture2D Capture(RectTransform rt, int width, int height, int screenWidth, int screenHeight, Camera refCamera, Camera refSkyboxCam)
		{
			return null;
		}

		[Token(Token = "0x6000F85")]
		[Address(RVA = "0x10A492C", Offset = "0x10A492C", VA = "0x10A492C")]
		public void SaveImageToPath(Texture2D image, string path)
		{
		}

		[Token(Token = "0x6000F86")]
		[Address(RVA = "0x10A524C", Offset = "0x10A524C", VA = "0x10A524C")]
		public ScreenshotCamera()
		{
		}
	}
	[Token(Token = "0x20001B0")]
	public static class ShaderIds
	{
		[Token(Token = "0x4000A68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly int color;

		[Token(Token = "0x4000A69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static readonly int rect;

		[Token(Token = "0x4000A6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly int aaLineBoth;

		[Token(Token = "0x4000A6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public static readonly int dim;

		[Token(Token = "0x4000A6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly int shadingTexLightStack;
	}
	[Token(Token = "0x20001B1")]
	public class ShadowBaker : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20001B2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F0930", Offset = "0x6F0930")]
		private sealed class <>c
		{
			[Token(Token = "0x4000A8B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000A8C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static System.Action <>9__45_0;

			[Token(Token = "0x6000F9A")]
			[Address(RVA = "0x92E844", Offset = "0x92E844", VA = "0x92E844")]
			public <>c()
			{
			}

			[Token(Token = "0x6000F9B")]
			[Address(RVA = "0x92E84C", Offset = "0x92E84C", VA = "0x92E84C")]
			internal void <.ctor>b__45_0()
			{
			}
		}

		[Token(Token = "0x4000A6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private WorldMaster master;

		[Token(Token = "0x4000A6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private RenderTexture tex0;

		[Token(Token = "0x4000A6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Texture noiseTex;

		[Token(Token = "0x4000A70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Camera cam;

		[Token(Token = "0x4000A71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Transform shadowPlane;

		[Token(Token = "0x4000A72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int resolution;

		[Token(Token = "0x4000A73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly int worldToShadowId;

		[Token(Token = "0x4000A74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static readonly int shadowToWorldId;

		[Token(Token = "0x4000A75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly int shadowRangeId;

		[Token(Token = "0x4000A76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public static readonly int sunDirId;

		[Token(Token = "0x4000A77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly int sunColorId;

		[Token(Token = "0x4000A78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public static readonly int shadowColorId;

		[Token(Token = "0x4000A79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static readonly int bgColorId;

		[Token(Token = "0x4000A7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public static readonly int lampId;

		[Token(Token = "0x4000A7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public int count;

		[Token(Token = "0x4000A7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Shader shader;

		[Token(Token = "0x4000A7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Vector2 current;

		[Token(Token = "0x4000A7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Vector2 target;

		[Token(Token = "0x4000A7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Gradient sunColor;

		[Token(Token = "0x4000A80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Gradient shadowColor;

		[Token(Token = "0x4000A81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Gradient bgColor;

		[Token(Token = "0x4000A82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private Texture2D lampTex;

		[Token(Token = "0x4000A83")]
		private const int windowSizeX = 32;

		[Token(Token = "0x4000A84")]
		private const int windowSizeY = 32;

		[Token(Token = "0x4000A85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private bool framingDirty;

		[Token(Token = "0x4000A86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
		private bool angleDirty;

		[Token(Token = "0x4000A87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x82")]
		private bool snap;

		[Token(Token = "0x4000A88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x83")]
		private bool shouldBake;

		[Token(Token = "0x4000A89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public System.Action onNewSunAngle;

		[Token(Token = "0x4000A8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private float lamps;

		[Token(Token = "0x6000F88")]
		[Address(RVA = "0x10A7C3C", Offset = "0x10A7C3C", VA = "0x10A7C3C")]
		public void OnStart()
		{
		}

		[Token(Token = "0x6000F89")]
		[Address(RVA = "0x10A800C", Offset = "0x10A800C", VA = "0x10A800C")]
		public void MaybeUpdateFraming()
		{
		}

		[Token(Token = "0x6000F8A")]
		[Address(RVA = "0x10A8884", Offset = "0x10A8884", VA = "0x10A8884")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x6FC2A4", Offset = "0x6FC2A4")]
		public void BakeShadow()
		{
		}

		[Token(Token = "0x6000F8B")]
		[Address(RVA = "0x10A88B4", Offset = "0x10A88B4", VA = "0x10A88B4")]
		public void SetFramingDirty()
		{
		}

		[Token(Token = "0x6000F8C")]
		[Address(RVA = "0x10A88C0", Offset = "0x10A88C0", VA = "0x10A88C0")]
		public void OnBuilt()
		{
		}

		[Token(Token = "0x6000F8D")]
		[Address(RVA = "0x10A88D4", Offset = "0x10A88D4", VA = "0x10A88D4")]
		public void LateUpdate()
		{
		}

		[Token(Token = "0x6000F8E")]
		[Address(RVA = "0x10A8BE4", Offset = "0x10A8BE4", VA = "0x10A8BE4")]
		private void UpdateLamps()
		{
		}

		[Token(Token = "0x6000F8F")]
		[Address(RVA = "0x10A8CF8", Offset = "0x10A8CF8", VA = "0x10A8CF8")]
		private static Quaternion GetQuaternion(Vector2 value)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000F90")]
		[Address(RVA = "0x10A8A1C", Offset = "0x10A8A1C", VA = "0x10A8A1C")]
		public void MaybeUpdateAngle()
		{
		}

		[Token(Token = "0x6000F91")]
		[Address(RVA = "0x10A8D40", Offset = "0x10A8D40", VA = "0x10A8D40")]
		public void RotateAngle(Vector2 delta)
		{
		}

		[Token(Token = "0x6000F92")]
		[Address(RVA = "0x10A8DC0", Offset = "0x10A8DC0", VA = "0x10A8DC0")]
		public void SetAngle(Vector2 newTarget)
		{
		}

		[Token(Token = "0x6000F93")]
		[Address(RVA = "0x10A8E10", Offset = "0x10A8E10", VA = "0x10A8E10")]
		public void SetX(float x)
		{
		}

		[Token(Token = "0x6000F94")]
		[Address(RVA = "0x10A8E60", Offset = "0x10A8E60", VA = "0x10A8E60")]
		public void SetY(float y)
		{
		}

		[Token(Token = "0x6000F95")]
		[Address(RVA = "0x10A8EB0", Offset = "0x10A8EB0", VA = "0x10A8EB0")]
		public void Load(SaveData saveData)
		{
		}

		[Token(Token = "0x6000F96")]
		[Address(RVA = "0x10A8F3C", Offset = "0x10A8F3C", VA = "0x10A8F3C")]
		public void Save(SaveData saveData)
		{
		}

		[Token(Token = "0x6000F97")]
		[Address(RVA = "0x10A8F88", Offset = "0x10A8F88", VA = "0x10A8F88")]
		public ShadowBaker()
		{
		}
	}
	[Token(Token = "0x20001B3")]
	public class ShadowBakerCamera : MonoBehaviour
	{
		[Token(Token = "0x4000A8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Camera cam;

		[Token(Token = "0x6000F9C")]
		[Address(RVA = "0x10A9220", Offset = "0x10A9220", VA = "0x10A9220")]
		private void OnPostRender()
		{
		}

		[Token(Token = "0x6000F9D")]
		[Address(RVA = "0x10A9240", Offset = "0x10A9240", VA = "0x10A9240")]
		public ShadowBakerCamera()
		{
		}
	}
	[Token(Token = "0x20001B4")]
	public class TexturePngMaster : MonoBehaviour, WorldMaster.IOnOnEnable, IOnScenePostProcess
	{
		[Serializable]
		[Token(Token = "0x20001B5")]
		public class PngTexture
		{
			[Token(Token = "0x4000A96")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Texture2D srcTex;

			[Token(Token = "0x4000A97")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Texture2D gameTex;

			[Token(Token = "0x4000A98")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public DateTime lastReadTime;

			[Token(Token = "0x4000A99")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string diskName;

			[Token(Token = "0x4000A9A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public string shaderName;

			[Token(Token = "0x17000471")]
			public Texture2D tex
			{
				[Token(Token = "0x6000FA4")]
				[Address(RVA = "0x107D094", Offset = "0x107D094", VA = "0x107D094")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000FA5")]
			[Address(RVA = "0x107D114", Offset = "0x107D114", VA = "0x107D114")]
			public PngTexture()
			{
			}
		}

		[Token(Token = "0x4000A8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private WorldMaster master;

		[Token(Token = "0x4000A8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		public PngTexture houseTex;

		[Token(Token = "0x4000A90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		public PngTexture typeTex;

		[Token(Token = "0x4000A91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		public PngTexture paletteTex;

		[Token(Token = "0x4000A92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		public Shader bakeShader;

		[Token(Token = "0x4000A93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public RenderTexture bakedTex;

		[Token(Token = "0x4000A94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Material bakeMaterial;

		[Token(Token = "0x4000A95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool bakeDirty;

		[Token(Token = "0x6000F9E")]
		[Address(RVA = "0xAEEC9C", Offset = "0xAEEC9C", VA = "0xAEEC9C")]
		private void BakePalette()
		{
		}

		[Token(Token = "0x6000F9F")]
		[Address(RVA = "0xAEEE88", Offset = "0xAEEE88", VA = "0xAEEE88", Slot = "4")]
		private void Placemaker.WorldMaster.IOnOnEnable.OnOnEnable(WorldMaster worldMaster)
		{
		}

		[Token(Token = "0x6000FA0")]
		[Address(RVA = "0xAEEEB4", Offset = "0xAEEEB4", VA = "0xAEEEB4")]
		private void SetAllShaderVariables()
		{
		}

		[Token(Token = "0x6000FA1")]
		[Address(RVA = "0xAEEF14", Offset = "0xAEEF14", VA = "0xAEEF14")]
		private void SetShaderVariables(PngTexture pngTexture)
		{
		}

		[Token(Token = "0x6000FA2")]
		[Address(RVA = "0xAEEF34", Offset = "0xAEEF34", VA = "0xAEEF34", Slot = "5")]
		private void Placemaker.SceneProcessing.IOnScenePostProcess.OnScenePostProcess(bool isBuild, TargetPlatformFlags platform)
		{
		}

		[Token(Token = "0x6000FA3")]
		[Address(RVA = "0xAEEF40", Offset = "0xAEEF40", VA = "0xAEEF40")]
		public TexturePngMaster()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001B6")]
	public static class TimeManager
	{
		[Token(Token = "0x4000A9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static float _dimScale;

		[Token(Token = "0x4000A9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static bool _slowmo;

		[Token(Token = "0x17000472")]
		public static float slowmoScale
		{
			[Token(Token = "0x6000FA6")]
			[Address(RVA = "0xAEFFB0", Offset = "0xAEFFB0", VA = "0xAEFFB0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000473")]
		public static float dimScale
		{
			[Token(Token = "0x6000FA7")]
			[Address(RVA = "0xAF0024", Offset = "0xAF0024", VA = "0xAF0024")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000FA8")]
			[Address(RVA = "0xAF0088", Offset = "0xAF0088", VA = "0xAF0088")]
			set
			{
			}
		}

		[Token(Token = "0x17000474")]
		public static bool slowmo
		{
			[Token(Token = "0x6000FA9")]
			[Address(RVA = "0xAF0170", Offset = "0xAF0170", VA = "0xAF0170")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000FAA")]
			[Address(RVA = "0xAF01D4", Offset = "0xAF01D4", VA = "0xAF01D4")]
			set
			{
			}
		}

		[Token(Token = "0x6000FAB")]
		[Address(RVA = "0xAF0240", Offset = "0xAF0240", VA = "0xAF0240")]
		public static void SetDimScale(float scale)
		{
		}

		[Token(Token = "0x6000FAC")]
		[Address(RVA = "0xAF02A8", Offset = "0xAF02A8", VA = "0xAF02A8")]
		public static void SetRecordingScale(float scale)
		{
		}

		[Token(Token = "0x6000FAD")]
		[Address(RVA = "0xAF00F8", Offset = "0xAF00F8", VA = "0xAF00F8")]
		private static void UpdateTime()
		{
		}
	}
	[Token(Token = "0x20001B7")]
	public class UiAudio : MonoBehaviour
	{
		[Token(Token = "0x4000A9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int index;

		[Token(Token = "0x4000A9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioClip buttonDown;

		[Token(Token = "0x4000A9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AudioClip buttonUp;

		[Token(Token = "0x6000FAF")]
		[Address(RVA = "0x1BCFA90", Offset = "0x1BCFA90", VA = "0x1BCFA90")]
		private void Start()
		{
		}

		[Token(Token = "0x6000FB0")]
		[Address(RVA = "0x1BCFB64", Offset = "0x1BCFB64", VA = "0x1BCFB64")]
		public AudioSource GetAudioSource()
		{
			return null;
		}

		[Token(Token = "0x6000FB1")]
		[Address(RVA = "0x1BCFBFC", Offset = "0x1BCFBFC", VA = "0x1BCFBFC")]
		public AudioSource Play(AudioClip clip, bool randomizePitch = true)
		{
			return null;
		}

		[Token(Token = "0x6000FB2")]
		[Address(RVA = "0x1BCFC88", Offset = "0x1BCFC88", VA = "0x1BCFC88")]
		public UiAudio()
		{
		}
	}
	[Token(Token = "0x20001B8")]
	public class VoxelBobEffect : MonoBehaviour
	{
		[Token(Token = "0x4000AA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 bobPos;

		[Token(Token = "0x4000AA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float bobCurrent;

		[Token(Token = "0x4000AA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float bobVelocity;

		[Token(Token = "0x4000AA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float bobTime;

		[Token(Token = "0x4000AA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int pressPosAmountId;

		[Token(Token = "0x6000FB3")]
		[Address(RVA = "0x1BDDC88", Offset = "0x1BDDC88", VA = "0x1BDDC88")]
		public void SetPressed(Vector3 pos)
		{
		}

		[Token(Token = "0x6000FB4")]
		[Address(RVA = "0x1BDDDA4", Offset = "0x1BDDDA4", VA = "0x1BDDDA4")]
		public void StopPressing(float velocity)
		{
		}

		[Token(Token = "0x6000FB5")]
		[Address(RVA = "0x1BDDDDC", Offset = "0x1BDDDDC", VA = "0x1BDDDDC")]
		public void StopPressingNoVelocity()
		{
		}

		[Token(Token = "0x6000FB6")]
		[Address(RVA = "0x1BDDE10", Offset = "0x1BDDE10", VA = "0x1BDDE10")]
		public void ClickBobEffect(Vector3 position, bool add)
		{
		}

		[Token(Token = "0x6000FB7")]
		[Address(RVA = "0x1BDDE74", Offset = "0x1BDDE74", VA = "0x1BDDE74")]
		private void Update()
		{
		}

		[Token(Token = "0x6000FB8")]
		[Address(RVA = "0x1BDDCD8", Offset = "0x1BDDCD8", VA = "0x1BDDCD8")]
		public void UpdateShader()
		{
		}

		[Token(Token = "0x6000FB9")]
		[Address(RVA = "0x1BDDF38", Offset = "0x1BDDF38", VA = "0x1BDDF38")]
		public VoxelBobEffect()
		{
		}
	}
	[Token(Token = "0x20001B9")]
	public class VoxelBounceEffect : MonoBehaviour
	{
		[Token(Token = "0x4000AA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshFilter mf;

		[Token(Token = "0x4000AA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Shader shader;

		[Token(Token = "0x4000AA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x6F6618", Offset = "0x6F6618")]
		[SerializeField]
		private Material material;

		[Token(Token = "0x4000AA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private RenderTexture tex;

		[Token(Token = "0x4000AA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private int count;

		[Token(Token = "0x4000AAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int voxelBounceTimeId;

		[Token(Token = "0x4000AAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static readonly int voxelBounceTexId;

		[Token(Token = "0x4000AAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private List<Vector3> verts;

		[Token(Token = "0x4000AAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private List<Color32> colors;

		[Token(Token = "0x4000AAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private List<int> tris;

		[Token(Token = "0x4000AAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Mesh voxelBounceMesh;

		[Token(Token = "0x6000FBB")]
		[Address(RVA = "0x1BDDFAC", Offset = "0x1BDDFAC", VA = "0x1BDDFAC")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x6000FBC")]
		[Address(RVA = "0x1BDDFB0", Offset = "0x1BDDFB0", VA = "0x1BDDFB0")]
		public void OnStart()
		{
		}

		[Token(Token = "0x6000FBD")]
		[Address(RVA = "0x1BDE104", Offset = "0x1BDE104", VA = "0x1BDE104")]
		public void VoxelPainted(Voxel voxel, Corner corner)
		{
		}

		[Token(Token = "0x6000FBE")]
		[Address(RVA = "0x1BDE4A8", Offset = "0x1BDE4A8", VA = "0x1BDE4A8")]
		public void VoxelAdded(Voxel voxel, Corner corner)
		{
		}

		[Token(Token = "0x6000FBF")]
		[Address(RVA = "0x1BDE4D8", Offset = "0x1BDE4D8", VA = "0x1BDE4D8")]
		public void VoxelRemoved(Voxel voxel, Corner corner)
		{
		}

		[Token(Token = "0x6000FC0")]
		[Address(RVA = "0x1BDE134", Offset = "0x1BDE134", VA = "0x1BDE134")]
		private void AddVoxel(Voxel voxel, Corner corner, bool sign)
		{
		}

		[Token(Token = "0x6000FC1")]
		[Address(RVA = "0x1BDE508", Offset = "0x1BDE508", VA = "0x1BDE508")]
		public void Begin()
		{
		}

		[Token(Token = "0x6000FC2")]
		[Address(RVA = "0x1BDE5F0", Offset = "0x1BDE5F0", VA = "0x1BDE5F0")]
		public void MaybeExecute()
		{
		}

		[Token(Token = "0x6000FC3")]
		[Address(RVA = "0x1BDE678", Offset = "0x1BDE678", VA = "0x1BDE678")]
		public void AppendBuffer(CommandBuffer buffer)
		{
		}

		[Token(Token = "0x6000FC4")]
		[Address(RVA = "0x1BDE754", Offset = "0x1BDE754", VA = "0x1BDE754")]
		public VoxelBounceEffect()
		{
		}
	}
	[Token(Token = "0x20001BA")]
	public class LineMesh : MonoBehaviour
	{
		[Token(Token = "0x4000AB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Mesh lineMesh;

		[Token(Token = "0x4000AB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MaterialPropertyBlock block;

		[Token(Token = "0x6000FC6")]
		[Address(RVA = "0xC54CEC", Offset = "0xC54CEC", VA = "0xC54CEC")]
		public void OnStart()
		{
		}

		[Token(Token = "0x6000FC7")]
		[Address(RVA = "0xC54A68", Offset = "0xC54A68", VA = "0xC54A68")]
		public static Matrix4x4 GetLineMatrix(Vector3 start, Vector3 end)
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x6000FC8")]
		[Address(RVA = "0xC550CC", Offset = "0xC550CC", VA = "0xC550CC")]
		public LineMesh()
		{
		}
	}
	[Token(Token = "0x20001BB")]
	public class WaterSound : MonoBehaviour
	{
		[Token(Token = "0x4000AB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private WorldMaster master;

		[Token(Token = "0x6000FC9")]
		[Address(RVA = "0xBA54CC", Offset = "0xBA54CC", VA = "0xBA54CC")]
		public void Update()
		{
		}

		[Token(Token = "0x6000FCA")]
		[Address(RVA = "0xBA5674", Offset = "0xBA5674", VA = "0xBA5674")]
		public WaterSound()
		{
		}
	}
	[Token(Token = "0x20001BC")]
	public class WaveFunctionCollapse : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20001BD")]
		private struct LastRemovedStruct
		{
			[Token(Token = "0x4000AC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Qube qube;

			[Token(Token = "0x4000AC5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public ushort side;

			[Token(Token = "0x4000AC6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA")]
			public sbyte sideIndex;

			[Token(Token = "0x4000AC7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public ushort propagationIndex;
		}

		[Serializable]
		[Token(Token = "0x20001BE")]
		private struct Propagation : IComparable<Propagation>
		{
			[Token(Token = "0x4000AC8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Qube qube;

			[Token(Token = "0x4000AC9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public ushort propagationIndex;

			[Token(Token = "0x4000ACA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public uint existanceIndex;

			[Token(Token = "0x4000ACB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public byte sideVariationMask;

			[Token(Token = "0x6000FDE")]
			[Address(RVA = "0x1081AF8", Offset = "0x1081AF8", VA = "0x1081AF8", Slot = "4")]
			private int System.IComparable<Placemaker.WaveFunctionCollapse.Propagation>.CompareTo(Propagation p1)
			{
				return default(int);
			}
		}

		[Token(Token = "0x4000AB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private WorldMaster master;

		[Token(Token = "0x4000AB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private ushort propagationCounter;

		[Token(Token = "0x4000AB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
		[SerializeField]
		private ushort lastStartedPropagation;

		[Token(Token = "0x4000AB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private List<Propagation> removeNeighbors;

		[Token(Token = "0x4000AB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private List<Propagation> updates;

		[Token(Token = "0x4000AB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private List<Propagation> propagations;

		[Token(Token = "0x4000AB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private List<Propagation> validations;

		[Token(Token = "0x4000ABA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private List<Propagation> toCollapse;

		[Token(Token = "0x4000ABB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private List<Propagation> decorUpdates;

		[Token(Token = "0x4000ABC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private List<Propagation> decorPropagations;

		[Token(Token = "0x4000ABD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private List<Propagation> decorToCollapse;

		[Token(Token = "0x4000ABE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private List<Propagation> decorToBuild;

		[Token(Token = "0x4000ABF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private List<LastRemovedStruct> lastRemovals;

		[Token(Token = "0x4000AC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private List<LastRemovedStruct> lastDecorRemovals;

		[Token(Token = "0x4000AC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private List<Qube> qubesToRebuild;

		[Token(Token = "0x4000AC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private HashSet<int> hashset;

		[Token(Token = "0x4000AC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private bool doDebugBreak;

		[Token(Token = "0x6000FCB")]
		[Address(RVA = "0xBA567C", Offset = "0xBA567C", VA = "0xBA567C")]
		public void QubeRemoved(Qube qube, byte sideMask)
		{
		}

		[Token(Token = "0x6000FCC")]
		[Address(RVA = "0xBA5894", Offset = "0xBA5894", VA = "0xBA5894")]
		public void IteratePropagationCount()
		{
		}

		[Token(Token = "0x6000FCD")]
		[Address(RVA = "0xBA58B0", Offset = "0xBA58B0", VA = "0xBA58B0")]
		public void QubeUpdated(Qube qube)
		{
		}

		[Token(Token = "0x6000FCE")]
		[Address(RVA = "0xBA5984", Offset = "0xBA5984", VA = "0xBA5984")]
		public void LaterUpdate()
		{
		}

		[Token(Token = "0x6000FCF")]
		[Address(RVA = "0xBA5F88", Offset = "0xBA5F88", VA = "0xBA5F88")]
		public bool IterateApplyModules()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FD0")]
		[Address(RVA = "0xBA615C", Offset = "0xBA615C", VA = "0xBA615C")]
		public bool Iterate0()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FD1")]
		[Address(RVA = "0xBA75D8", Offset = "0xBA75D8", VA = "0xBA75D8")]
		public bool Iterate1()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FD2")]
		[Address(RVA = "0xBA740C", Offset = "0xBA740C", VA = "0xBA740C")]
		private void AddSplitPropagation(Propagation propagation)
		{
		}

		[Token(Token = "0x6000FD3")]
		[Address(RVA = "0xBA80D8", Offset = "0xBA80D8", VA = "0xBA80D8")]
		public bool IterateDecor()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FD4")]
		[Address(RVA = "0xBA9944", Offset = "0xBA9944", VA = "0xBA9944")]
		public void ResetPropagationCounter()
		{
		}

		[Token(Token = "0x6000FD5")]
		[Address(RVA = "0xBA72FC", Offset = "0xBA72FC", VA = "0xBA72FC")]
		private bool MaybeQueueQubeForRebuilding(Qube qube)
		{
			return default(bool);
		}

		[Token(Token = "0x6000FD6")]
		[Address(RVA = "0xBA7C60", Offset = "0xBA7C60", VA = "0xBA7C60")]
		private bool RemovePossibleModule(Qube qube, OrientedModuleSides possibleModule, int index, Qube.Relation6 relations)
		{
			return default(bool);
		}

		[Token(Token = "0x6000FD7")]
		[Address(RVA = "0xBA9738", Offset = "0xBA9738", VA = "0xBA9738")]
		private void RemovePossibleDecor(Qube qube, OrientedModuleSides possibleModule, int index, Qube.Relation6 relations)
		{
		}

		[Token(Token = "0x6000FD8")]
		[Address(RVA = "0xBA665C", Offset = "0xBA665C", VA = "0xBA665C")]
		private byte FillQubePossibilities(Qube qube)
		{
			return default(byte);
		}

		[Token(Token = "0x6000FD9")]
		[Address(RVA = "0xBA8994", Offset = "0xBA8994", VA = "0xBA8994")]
		private byte FillDecorPossibilities(Qube qube)
		{
			return default(byte);
		}

		[Token(Token = "0x6000FDA")]
		[Address(RVA = "0xBA9A40", Offset = "0xBA9A40", VA = "0xBA9A40")]
		private void LastRemoved(Qube qube, ushort side, sbyte sideIndex)
		{
		}

		[Token(Token = "0x6000FDB")]
		[Address(RVA = "0xBA9CAC", Offset = "0xBA9CAC", VA = "0xBA9CAC")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6000FDC")]
		[Address(RVA = "0xBAA0F4", Offset = "0xBAA0F4", VA = "0xBAA0F4")]
		private void DrawPropagationGizmo(Propagation propagation)
		{
		}

		[Token(Token = "0x6000FDD")]
		[Address(RVA = "0xBAA548", Offset = "0xBAA548", VA = "0xBAA548")]
		public WaveFunctionCollapse()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001BF")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x6F0940", Offset = "0x6F0940")]
	public struct ByteQube
	{
		[Token(Token = "0x4000ACC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public byte v0;

		[Token(Token = "0x4000ACD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		public byte v1;

		[Token(Token = "0x4000ACE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
		public byte v2;

		[Token(Token = "0x4000ACF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3")]
		public byte v3;

		[Token(Token = "0x4000AD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public byte v4;

		[Token(Token = "0x4000AD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5")]
		public byte v5;

		[Token(Token = "0x4000AD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6")]
		public byte v6;

		[Token(Token = "0x4000AD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7")]
		public byte v7;

		[Token(Token = "0x4000AD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly ByteQube identity;

		[Token(Token = "0x4000AD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly ByteQube rotateForward;

		[Token(Token = "0x4000AD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly ByteQube rotateBackward;

		[Token(Token = "0x4000AD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static readonly ByteQube mirror;

		[Token(Token = "0x4000AD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static readonly ByteQube tipForward;

		[Token(Token = "0x4000AD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static readonly ByteQube tipBackward;

		[Token(Token = "0x4000ADA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static readonly ByteQube upsideDown;

		[Token(Token = "0x4000ADB")]
		public const byte uniqueOrientationCount = 48;

		[Token(Token = "0x4000ADC")]
		public const byte uprightOrientationCount = 8;

		[Token(Token = "0x17000475")]
		public int cost
		{
			[Token(Token = "0x6000FDF")]
			[Address(RVA = "0x8E0520", Offset = "0x8E0520", VA = "0x8E0520")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000476")]
		public byte Item
		{
			[Token(Token = "0x6000FE2")]
			[Address(RVA = "0x8E05D4", Offset = "0x8E05D4", VA = "0x8E05D4")]
			get
			{
				return default(byte);
			}
			[Token(Token = "0x6000FE3")]
			[Address(RVA = "0x8E0670", Offset = "0x8E0670", VA = "0x8E0670")]
			set
			{
			}
		}

		[Token(Token = "0x6000FE0")]
		[Address(RVA = "0x8E0598", Offset = "0x8E0598", VA = "0x8E0598")]
		public ByteQube(byte v0, byte v1, byte v2, byte v3, byte v4, byte v5, byte v6, byte v7)
		{
		}

		[Token(Token = "0x6000FE1")]
		[Address(RVA = "0x8E05C0", Offset = "0x8E05C0", VA = "0x8E05C0")]
		public ByteQube(byte value)
		{
		}

		[Token(Token = "0x6000FE4")]
		[Address(RVA = "0x8E070C", Offset = "0x8E070C", VA = "0x8E070C")]
		public ByteQube GetOriented(ByteQube orientation)
		{
			return default(ByteQube);
		}

		[Token(Token = "0x6000FE5")]
		[Address(RVA = "0x8E0800", Offset = "0x8E0800", VA = "0x8E0800")]
		public ByteQube GetOrientedForward(byte orientation)
		{
			return default(ByteQube);
		}

		[Token(Token = "0x6000FE6")]
		[Address(RVA = "0x8E09D8", Offset = "0x8E09D8", VA = "0x8E09D8")]
		public ByteQube GetOrientedBackward(byte orientation)
		{
			return default(ByteQube);
		}

		[Token(Token = "0x6000FE7")]
		[Address(RVA = "0x8E0BB0", Offset = "0x8E0BB0", VA = "0x8E0BB0")]
		public void GetOptimalOrientation(out ByteQube optimalByteQube, out byte optimalOrientation)
		{
		}

		[Token(Token = "0x6000FE8")]
		[Address(RVA = "0x8E0E24", Offset = "0x8E0E24", VA = "0x8E0E24", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6000FE9")]
		[Address(RVA = "0x8E10DC", Offset = "0x8E10DC", VA = "0x8E10DC", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6000FEA")]
		[Address(RVA = "0x8E10E0", Offset = "0x8E10E0", VA = "0x8E10E0")]
		public static int GetWrappedIndex(int corner, int height)
		{
			return default(int);
		}

		[Token(Token = "0x6000FEB")]
		[Address(RVA = "0x8E1100", Offset = "0x8E1100", VA = "0x8E1100", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000FEC")]
		[Address(RVA = "0x8E11C4", Offset = "0x8E11C4", VA = "0x8E11C4")]
		public static bool operator ==(ByteQube a, ByteQube b)
		{
			return default(bool);
		}

		[Token(Token = "0x6000FED")]
		[Address(RVA = "0x8E1248", Offset = "0x8E1248", VA = "0x8E1248")]
		public static bool operator !=(ByteQube a, ByteQube b)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20001C0")]
	public static class ModuleMath
	{
		[Token(Token = "0x4000ADD")]
		public const byte uprightOrientationCount = 8;

		[Token(Token = "0x4000ADE")]
		public const int voxelMaterialCount = 15;

		[Token(Token = "0x4000ADF")]
		public const float arbitraryGroundOffset = 0.2f;

		[Token(Token = "0x4000AE0")]
		public const float arbitraryWaterOffset = -0.1f;

		[Token(Token = "0x4000AE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly SbyteFloat3[] corners;

		[Token(Token = "0x4000AE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly ByteQube qubeForward;

		[Token(Token = "0x4000AE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly ByteQube qubeBackward;

		[Token(Token = "0x4000AE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static readonly ByteQube qubeUpsideDown;

		[Token(Token = "0x4000AE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static readonly List<Orientation> orientations;

		[Token(Token = "0x4000AE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static readonly byte[,] orientationMulLookup;

		[Token(Token = "0x4000AE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static readonly byte[] orientationInverseLookup;

		[Token(Token = "0x4000AE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public static readonly int4x4[] sideMatrices;

		[Token(Token = "0x4000AE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public static readonly int4x4[] invSideMatrices;

		[Token(Token = "0x4000AEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public static readonly int[,] cornerLinkLookup;

		[Token(Token = "0x4000AEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public static readonly float2[] baryVectors;

		[Token(Token = "0x4000AEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public static readonly ByteQube groundByteQube;

		[Token(Token = "0x4000AED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public static readonly ByteQube anyByteQube;

		[Token(Token = "0x4000AEE")]
		public const byte emptyByte = 18;

		[Token(Token = "0x4000AEF")]
		public const byte waterByte = 17;

		[Token(Token = "0x4000AF0")]
		public const byte groundByte = 15;

		[Token(Token = "0x4000AF1")]
		public const byte anyByte = 16;

		[Token(Token = "0x6000FEF")]
		[Address(RVA = "0x9EA610", Offset = "0x9EA610", VA = "0x9EA610")]
		static ModuleMath()
		{
		}

		[Token(Token = "0x6000FF0")]
		[Address(RVA = "0x9ECAE4", Offset = "0x9ECAE4", VA = "0x9ECAE4")]
		public static int GetCornerLinkIndex(int cornerA, int cornerB)
		{
			return default(int);
		}

		[Token(Token = "0x6000FF1")]
		[Address(RVA = "0x9ECB9C", Offset = "0x9ECB9C", VA = "0x9ECB9C")]
		public static bool AreCornersLinked(int cornerA, int cornerB, int link)
		{
			return default(bool);
		}

		[Token(Token = "0x6000FF2")]
		[Address(RVA = "0x9ECC6C", Offset = "0x9ECC6C", VA = "0x9ECC6C")]
		public static Orientation Mul(Orientation parent, Orientation child)
		{
			return default(Orientation);
		}

		[Token(Token = "0x6000FF3")]
		[Address(RVA = "0x9ECF40", Offset = "0x9ECF40", VA = "0x9ECF40")]
		public static byte MulOrientations(byte orientationIndex0, byte orientationIndex1)
		{
			return default(byte);
		}

		[Token(Token = "0x6000FF4")]
		[Address(RVA = "0x9E83D4", Offset = "0x9E83D4", VA = "0x9E83D4")]
		public static byte MulOrientations(int orientationIndex0, int orientationIndex1)
		{
			return default(byte);
		}

		[Token(Token = "0x6000FF5")]
		[Address(RVA = "0x9ED000", Offset = "0x9ED000", VA = "0x9ED000")]
		public static byte InvertOrientation(int orientationIndex0)
		{
			return default(byte);
		}

		[Token(Token = "0x6000FF6")]
		[Address(RVA = "0x9ED090", Offset = "0x9ED090", VA = "0x9ED090")]
		public static ByteQube MarkHiddenCornersAmbigous(ByteQube byteQube)
		{
			return default(ByteQube);
		}

		[Token(Token = "0x6000FF7")]
		[Address(RVA = "0x9ED1E8", Offset = "0x9ED1E8", VA = "0x9ED1E8")]
		public static ByteQube GetIndexedMaterials(ByteQube materials)
		{
			return default(ByteQube);
		}

		[Token(Token = "0x6000FF8")]
		[Address(RVA = "0x9ED30C", Offset = "0x9ED30C", VA = "0x9ED30C")]
		public static int GetMaterialCount(ByteQube materials)
		{
			return default(int);
		}

		[Token(Token = "0x6000FF9")]
		[Address(RVA = "0x9ED398", Offset = "0x9ED398", VA = "0x9ED398")]
		public static int3 MultiplyPoint(int4x4 m, int3 p)
		{
			return default(int3);
		}

		[Token(Token = "0x6000FFA")]
		[Address(RVA = "0x9ED424", Offset = "0x9ED424", VA = "0x9ED424")]
		public static SbyteFloat3 MultiplyPoint(int4x4 m, SbyteFloat3 p)
		{
			return default(SbyteFloat3);
		}

		[Token(Token = "0x6000FFB")]
		[Address(RVA = "0x9ED518", Offset = "0x9ED518", VA = "0x9ED518")]
		public static int3 MultiplyVector(int4x4 m, int3 p)
		{
			return default(int3);
		}

		[Token(Token = "0x6000FFC")]
		[Address(RVA = "0x9ED580", Offset = "0x9ED580", VA = "0x9ED580")]
		public static SbyteFloat3 MultiplyVector(int4x4 m, SbyteFloat3 p)
		{
			return default(SbyteFloat3);
		}

		[Token(Token = "0x6000FFD")]
		[Address(RVA = "0x9ED608", Offset = "0x9ED608", VA = "0x9ED608")]
		public static int3x2 MultiplyBounds(int4x4 m, int3x2 bounds)
		{
			return default(int3x2);
		}

		[Token(Token = "0x6000FFE")]
		[Address(RVA = "0x9EA400", Offset = "0x9EA400", VA = "0x9EA400")]
		public static int GetBidirectionalHash(this OrientedModule orientedModule0, OrientedModule orientedModule1)
		{
			return default(int);
		}

		[Token(Token = "0x6000FFF")]
		[Address(RVA = "0x9ED728", Offset = "0x9ED728", VA = "0x9ED728")]
		public static int GetDoubleHash(this OrientedModule orientedModule0, OrientedModule orientedModule1)
		{
			return default(int);
		}
	}
	[Token(Token = "0x20001C1")]
	public enum VoxelType : sbyte
	{
		[Token(Token = "0x4000AF3")]
		Red,
		[Token(Token = "0x4000AF4")]
		Green,
		[Token(Token = "0x4000AF5")]
		Blue,
		[Token(Token = "0x4000AF6")]
		Yellow,
		[Token(Token = "0x4000AF7")]
		Color4,
		[Token(Token = "0x4000AF8")]
		Color5,
		[Token(Token = "0x4000AF9")]
		Color6,
		[Token(Token = "0x4000AFA")]
		Color7,
		[Token(Token = "0x4000AFB")]
		Color8,
		[Token(Token = "0x4000AFC")]
		Color9,
		[Token(Token = "0x4000AFD")]
		Color10,
		[Token(Token = "0x4000AFE")]
		Color11,
		[Token(Token = "0x4000AFF")]
		Color12,
		[Token(Token = "0x4000B00")]
		Color13,
		[Token(Token = "0x4000B01")]
		Color14,
		[Token(Token = "0x4000B02")]
		Ground,
		[Token(Token = "0x4000B03")]
		Any,
		[Token(Token = "0x4000B04")]
		Water,
		[Token(Token = "0x4000B05")]
		Empty
	}
	[Token(Token = "0x20001C2")]
	public enum MaterialType : byte
	{
		[Token(Token = "0x4000B07")]
		None,
		[Token(Token = "0x4000B08")]
		Ground,
		[Token(Token = "0x4000B09")]
		Dirt,
		[Token(Token = "0x4000B0A")]
		Water
	}
	[Token(Token = "0x20001C3")]
	public enum ToolType : sbyte
	{
		[Token(Token = "0x4000B0C")]
		Throwel,
		[Token(Token = "0x4000B0D")]
		Paintbrush,
		[Token(Token = "0x4000B0E")]
		Bucket,
		[Token(Token = "0x4000B0F")]
		Bulldozer
	}
	[Serializable]
	[Token(Token = "0x20001C4")]
	public struct Orientation
	{
		[Token(Token = "0x4000B10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int4x4 int4x4;

		[Token(Token = "0x4000B11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public ByteQube cornerTransform0;

		[Token(Token = "0x4000B12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public ByteQube cornerTransform1;

		[Token(Token = "0x4000B13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public ByteQube sideTransform;

		[Token(Token = "0x4000B14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public bool inverted;

		[Token(Token = "0x17000477")]
		public Matrix4x4 matrix
		{
			[Token(Token = "0x6001000")]
			[Address(RVA = "0xE04CA0", Offset = "0xE04CA0", VA = "0xE04CA0")]
			get
			{
				return default(Matrix4x4);
			}
		}

		[Token(Token = "0x6001001")]
		[Address(RVA = "0xE04DD4", Offset = "0xE04DD4", VA = "0xE04DD4")]
		public byte GetSideTransform0(int index)
		{
			return default(byte);
		}

		[Token(Token = "0x6001002")]
		[Address(RVA = "0xE04E64", Offset = "0xE04E64", VA = "0xE04E64")]
		public byte GetSideTransform1(int index)
		{
			return default(byte);
		}

		[Token(Token = "0x6001003")]
		[Address(RVA = "0xE04EF4", Offset = "0xE04EF4", VA = "0xE04EF4")]
		public SbyteFloat3 MultiplyPoint(SbyteFloat3 point)
		{
			return default(SbyteFloat3);
		}

		[Token(Token = "0x6001004")]
		[Address(RVA = "0xE04F98", Offset = "0xE04F98", VA = "0xE04F98")]
		public SbyteFloat3 MultiplyVector(SbyteFloat3 vector)
		{
			return default(SbyteFloat3);
		}

		[Token(Token = "0x6001005")]
		[Address(RVA = "0xE0503C", Offset = "0xE0503C", VA = "0xE0503C")]
		public int3x2 MultiplyBounds(int3x2 bounds)
		{
			return default(int3x2);
		}
	}
	[Serializable]
	[Token(Token = "0x20001C5")]
	public struct SideProfile
	{
		[Token(Token = "0x4000B15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ushort v00;

		[Token(Token = "0x4000B16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
		public ushort v01;

		[Token(Token = "0x4000B17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public ushort v10;

		[Token(Token = "0x4000B18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6")]
		public ushort v11;

		[Token(Token = "0x4000B19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ushort v20;

		[Token(Token = "0x4000B1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA")]
		public ushort v21;

		[Token(Token = "0x4000B1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public ushort v30;

		[Token(Token = "0x4000B1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE")]
		public ushort v31;

		[Token(Token = "0x4000B1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ushort v4;

		[Token(Token = "0x4000B1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		public ushort v5;

		[Token(Token = "0x6001006")]
		[Address(RVA = "0x10AAB44", Offset = "0x10AAB44", VA = "0x10AAB44")]
		public void Set(int index, ushort value0, ushort value1)
		{
		}

		[Token(Token = "0x6001007")]
		[Address(RVA = "0x10AABE4", Offset = "0x10AABE4", VA = "0x10AABE4")]
		public void Add(SideProfile s)
		{
		}

		[Token(Token = "0x6001008")]
		[Address(RVA = "0x10AAC88", Offset = "0x10AAC88", VA = "0x10AAC88")]
		public ushort Get0(int index)
		{
			return default(ushort);
		}

		[Token(Token = "0x6001009")]
		[Address(RVA = "0x10AAD14", Offset = "0x10AAD14", VA = "0x10AAD14")]
		public ushort Get1(int index)
		{
			return default(ushort);
		}

		[Token(Token = "0x600100A")]
		[Address(RVA = "0x10AADA8", Offset = "0x10AADA8", VA = "0x10AADA8")]
		public bool IsEmtpy()
		{
			return default(bool);
		}

		[Token(Token = "0x600100B")]
		[Address(RVA = "0x10AADE8", Offset = "0x10AADE8", VA = "0x10AADE8", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x600100C")]
		[Address(RVA = "0x10AB020", Offset = "0x10AB020", VA = "0x10AB020", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}
	}
	[Token(Token = "0x20001C6")]
	public class WorldMaster : MonoBehaviour, IOnScenePostProcess
	{
		[Token(Token = "0x20001C7")]
		public enum YieldType : byte
		{
			[Token(Token = "0x4000B5D")]
			KeepGoing,
			[Token(Token = "0x4000B5E")]
			SkipFrame
		}

		[Token(Token = "0x20001C8")]
		public enum State : byte
		{
			[Token(Token = "0x4000B60")]
			DoNothing,
			[Token(Token = "0x4000B61")]
			StartLoad,
			[Token(Token = "0x4000B62")]
			PreLoad,
			[Token(Token = "0x4000B63")]
			LoadCleanupQubes0,
			[Token(Token = "0x4000B64")]
			LoadCleanupProps0,
			[Token(Token = "0x4000B65")]
			ResetPropAnimator,
			[Token(Token = "0x4000B66")]
			AwaitDim,
			[Token(Token = "0x4000B67")]
			BeginLoadGraph,
			[Token(Token = "0x4000B68")]
			LoadGraph,
			[Token(Token = "0x4000B69")]
			LoadGraphFocus,
			[Token(Token = "0x4000B6A")]
			LoadOthers,
			[Token(Token = "0x4000B6B")]
			LoadCleanupQubes1,
			[Token(Token = "0x4000B6C")]
			LoadCleanupProps1,
			[Token(Token = "0x4000B6D")]
			LoadGraph1,
			[Token(Token = "0x4000B6E")]
			LoadGridFocus,
			[Token(Token = "0x4000B6F")]
			LoadCentralGridBit,
			[Token(Token = "0x4000B70")]
			LoadWaveFunctionCollapse0,
			[Token(Token = "0x4000B71")]
			LoadApplyModules,
			[Token(Token = "0x4000B72")]
			LoadBakeShadows0,
			[Token(Token = "0x4000B73")]
			NormalStart,
			[Token(Token = "0x4000B74")]
			GraphFocus,
			[Token(Token = "0x4000B75")]
			GridFocus,
			[Token(Token = "0x4000B76")]
			Graph,
			[Token(Token = "0x4000B77")]
			BakeShadow0,
			[Token(Token = "0x4000B78")]
			WaveFunctionCollapse0,
			[Token(Token = "0x4000B79")]
			WaveFunctionCollapse1,
			[Token(Token = "0x4000B7A")]
			BakeShadow1,
			[Token(Token = "0x4000B7B")]
			WaveFunctionCollapseDecor,
			[Token(Token = "0x4000B7C")]
			BakeShadow2,
			[Token(Token = "0x4000B7D")]
			WaveFunctionCollapseReset,
			[Token(Token = "0x4000B7E")]
			Sandbanker,
			[Token(Token = "0x4000B7F")]
			GraphRefillPools,
			[Token(Token = "0x4000B80")]
			FinishBigMesh0,
			[Token(Token = "0x4000B81")]
			Props,
			[Token(Token = "0x4000B82")]
			PropAchievements,
			[Token(Token = "0x4000B83")]
			FinishBigMesh1,
			[Token(Token = "0x4000B84")]
			BakeShadow3,
			[Token(Token = "0x4000B85")]
			SpawnBirds,
			[Token(Token = "0x4000B86")]
			CleanupRemovedQubes,
			[Token(Token = "0x4000B87")]
			CleanupProps,
			[Token(Token = "0x4000B88")]
			ResetPropPlacer,
			[Token(Token = "0x4000B89")]
			TrimBigMeshTris,
			[Token(Token = "0x4000B8A")]
			IterateRefillWorldMeshPools,
			[Token(Token = "0x4000B8B")]
			SaveToUrl,
			[Token(Token = "0x4000B8C")]
			GridBits,
			[Token(Token = "0x4000B8D")]
			RefreshSaveSystem,
			[Token(Token = "0x4000B8E")]
			Done
		}

		[Token(Token = "0x20001C9")]
		public interface IOnOnEnable
		{
			[Token(Token = "0x6001023")]
			void OnOnEnable(WorldMaster worldMaster);
		}

		[Serializable]
		[Token(Token = "0x20001CA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F0988", Offset = "0x6F0988")]
		private sealed class <>c
		{
			[Token(Token = "0x4000B8F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000B90")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action<SaveData> <>9__88_0;

			[Token(Token = "0x4000B91")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Action<SaveData> <>9__88_1;

			[Token(Token = "0x6001025")]
			[Address(RVA = "0x10820C0", Offset = "0x10820C0", VA = "0x10820C0")]
			public <>c()
			{
			}

			[Token(Token = "0x6001026")]
			[Address(RVA = "0x10820C8", Offset = "0x10820C8", VA = "0x10820C8")]
			internal void <.ctor>b__88_0(SaveData <p0>)
			{
			}

			[Token(Token = "0x6001027")]
			[Address(RVA = "0x10820CC", Offset = "0x10820CC", VA = "0x10820CC")]
			internal void <.ctor>b__88_1(SaveData <p0>)
			{
			}
		}

		[Token(Token = "0x4000B1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UiMaster uiMaster;

		[Token(Token = "0x4000B20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GridGenerator grid;

		[Token(Token = "0x4000B21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Maker maker;

		[Token(Token = "0x4000B22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Graph graph;

		[Token(Token = "0x4000B23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public ModuleLibrary moduleLibrary;

		[Token(Token = "0x4000B24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public WorldMeshes worldMeshes;

		[Token(Token = "0x4000B25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public WaveFunctionCollapse waveFunctionCollapse;

		[Token(Token = "0x4000B26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public AoBaker aoBaker;

		[Token(Token = "0x4000B27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public HoverHightlight hoverHightlight;

		[Token(Token = "0x4000B28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public MaterialMaster materialMaster;

		[Token(Token = "0x4000B29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public ClickEffect clickEffect;

		[Token(Token = "0x4000B2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public VoxelBobEffect voxelBobEffect;

		[Token(Token = "0x4000B2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public ModuleBuilder moduleBuilder;

		[Token(Token = "0x4000B2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public TextSaveSystem textSaveSystem;

		[Token(Token = "0x4000B2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public HoverData hoverData;

		[Token(Token = "0x4000B2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public PropPlacer propPlacer;

		[Token(Token = "0x4000B2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public BorderDrawer borderDrawer;

		[Token(Token = "0x4000B30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public BirdFlock flock;

		[Token(Token = "0x4000B31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public Sandbanker sandbanker;

		[Token(Token = "0x4000B32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public AudioSourcePool audioSourcePool;

		[Token(Token = "0x4000B33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public UiAudio uiAudioSourcePool;

		[Token(Token = "0x4000B34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public SaveCamera saveCamera;

		[Token(Token = "0x4000B35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public ScreenshotCamera screenshotCamera;

		[Token(Token = "0x4000B36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public SaveDataScripableObject defaultSaveData;

		[Token(Token = "0x4000B37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public PropMeshAnimator propMeshAnimator;

		[Token(Token = "0x4000B38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public MiscReferences miscReferences;

		[Token(Token = "0x4000B39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public ButterflyFlock butterflyFlock;

		[Token(Token = "0x4000B3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public ShadowBaker shadowBaker;

		[Token(Token = "0x4000B3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public ManySoundsManager manySoundsManager;

		[Token(Token = "0x4000B3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public Palette palette;

		[Token(Token = "0x4000B3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public TexturePngMaster texturePngMaster;

		[Token(Token = "0x4000B3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public SaveSystem saveSystem;

		[Token(Token = "0x4000B3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public BigMeshMaster bigMeshMaster;

		[Token(Token = "0x4000B40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public ObjExporter objExporter;

		[Token(Token = "0x4000B41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public PropAchievements propAchievements;

		[Token(Token = "0x4000B42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public LineMesh lineMesh;

		[Token(Token = "0x4000B43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public CellHighlightMaster cellHighlightMaster;

		[Token(Token = "0x4000B44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[SerializeField]
		private string lastSaveString;

		[Token(Token = "0x4000B45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x6F67D0", Offset = "0x6F67D0")]
		public bool stopFrame;

		[Token(Token = "0x4000B46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		public Stopwatch stopwatch;

		[Token(Token = "0x4000B47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		public bool startedCounting;

		[Token(Token = "0x4000B48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		public SaveData saveData;

		[Token(Token = "0x4000B49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static WorldMaster instance;

		[Token(Token = "0x4000B4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static float expTSlow;

		[Token(Token = "0x4000B4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public static float expTMid;

		[Token(Token = "0x4000B4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static float expTFast;

		[Token(Token = "0x4000B4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public static float expTFaster;

		[Token(Token = "0x4000B4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private float saveCurrentTime;

		[Token(Token = "0x4000B4F")]
		private const float saveEverySeconds = 10f;

		[Token(Token = "0x4000B50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
		private bool doGo;

		[Token(Token = "0x4000B51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16D")]
		private bool pause;

		[Token(Token = "0x4000B52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		public Action<SaveData> onCameraLoad;

		[Token(Token = "0x4000B53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		public Action<SaveData> onCameraSave;

		[Token(Token = "0x4000B54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		[SerializeField]
		private float milliseconds;

		[Token(Token = "0x4000B55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
		public bool isDimmed;

		[Token(Token = "0x4000B56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x185")]
		public bool awaitingDim;

		[Token(Token = "0x4000B57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x186")]
		public State state;

		[Token(Token = "0x4000B58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		private List<string> stateStrings;

		[Token(Token = "0x4000B59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		public bool anyChange;

		[Token(Token = "0x4000B5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
		public float lastChangeTime;

		[Token(Token = "0x4000B5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		public float lastStartChangeTime;

		[Token(Token = "0x17000478")]
		public SettingsData settingsData
		{
			[Token(Token = "0x600100D")]
			[Address(RVA = "0xBACD70", Offset = "0xBACD70", VA = "0xBACD70")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000479")]
		public bool keeepGoing
		{
			[Token(Token = "0x600100E")]
			[Address(RVA = "0xBACD8C", Offset = "0xBACD8C", VA = "0xBACD8C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700047A")]
		public bool shouldBeLoading
		{
			[Token(Token = "0x6001012")]
			[Address(RVA = "0xBAD030", Offset = "0xBAD030", VA = "0xBAD030")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600100F")]
		[Address(RVA = "0xBA6100", Offset = "0xBA6100", VA = "0xBA6100")]
		public bool KeepGoing()
		{
			return default(bool);
		}

		[Token(Token = "0x6001010")]
		[Address(RVA = "0xBACD90", Offset = "0xBACD90", VA = "0xBACD90")]
		public void StartCounting()
		{
		}

		[Token(Token = "0x6001011")]
		[Address(RVA = "0xBACDEC", Offset = "0xBACDEC", VA = "0xBACDEC")]
		public void OnOnEnable()
		{
		}

		[Token(Token = "0x6001013")]
		[Address(RVA = "0xBAD040", Offset = "0xBAD040", VA = "0xBAD040")]
		public void SetDirty()
		{
		}

		[Token(Token = "0x6001014")]
		[Address(RVA = "0xBA163C", Offset = "0xBA163C", VA = "0xBA163C")]
		public void ResetState()
		{
		}

		[Token(Token = "0x6001015")]
		[Address(RVA = "0xBAD084", Offset = "0xBAD084", VA = "0xBAD084")]
		public void OnStart()
		{
		}

		[Token(Token = "0x6001016")]
		[Address(RVA = "0xBAD168", Offset = "0xBAD168", VA = "0xBAD168")]
		private void Update()
		{
		}

		[Token(Token = "0x6001017")]
		[Address(RVA = "0xBAD44C", Offset = "0xBAD44C", VA = "0xBAD44C")]
		private bool Iterate()
		{
			return default(bool);
		}

		[Token(Token = "0x6001018")]
		[Address(RVA = "0xBADA1C", Offset = "0xBADA1C", VA = "0xBADA1C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001019")]
		[Address(RVA = "0xBADAD4", Offset = "0xBADAD4", VA = "0xBADAD4")]
		public void PopulateSaveData(MetaSave metaSave)
		{
		}

		[Token(Token = "0x600101A")]
		[Address(RVA = "0xBADC20", Offset = "0xBADC20", VA = "0xBADC20")]
		public string GetSaveString()
		{
			return null;
		}

		[Token(Token = "0x600101B")]
		[Address(RVA = "0xBADCCC", Offset = "0xBADCCC", VA = "0xBADCCC")]
		public void Load(SaveData saveData)
		{
		}

		[Token(Token = "0x600101C")]
		[Address(RVA = "0xBADD18", Offset = "0xBADD18", VA = "0xBADD18")]
		public void NothingToLoadAtStartup()
		{
		}

		[Token(Token = "0x600101D")]
		[Address(RVA = "0xBADDA0", Offset = "0xBADDA0", VA = "0xBADDA0")]
		public bool Load(string saveString)
		{
			return default(bool);
		}

		[Token(Token = "0x600101E")]
		[Address(RVA = "0xBADE58", Offset = "0xBADE58", VA = "0xBADE58")]
		public void New()
		{
		}

		[Token(Token = "0x600101F")]
		[Address(RVA = "0xBADE60", Offset = "0xBADE60", VA = "0xBADE60")]
		public void New(SaveData saveData)
		{
		}

		[Token(Token = "0x6001020")]
		[Address(RVA = "0xBADF5C", Offset = "0xBADF5C", VA = "0xBADF5C", Slot = "4")]
		private void Placemaker.SceneProcessing.IOnScenePostProcess.OnScenePostProcess(bool isBuild, TargetPlatformFlags platform)
		{
		}

		[Token(Token = "0x6001021")]
		[Address(RVA = "0xBADF84", Offset = "0xBADF84", VA = "0xBADF84")]
		public void ResetSaveCurrentTimer()
		{
		}

		[Token(Token = "0x6001022")]
		[Address(RVA = "0xBADFB4", Offset = "0xBADFB4", VA = "0xBADFB4")]
		public WorldMaster()
		{
		}
	}
	[Token(Token = "0x20001CB")]
	public class WorldMeshes : MonoBehaviour
	{
		[Token(Token = "0x4000B92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private int mfIterator;

		[Token(Token = "0x4000B93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private int meshIterator;

		[Token(Token = "0x4000B94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private List<Mesh> meshStack;

		[Token(Token = "0x6001028")]
		[Address(RVA = "0xBAE1E4", Offset = "0xBAE1E4", VA = "0xBAE1E4")]
		private Mesh GetNewMesh()
		{
			return null;
		}

		[Token(Token = "0x6001029")]
		[Address(RVA = "0xBAE250", Offset = "0xBAE250", VA = "0xBAE250")]
		public Mesh GetMesh()
		{
			return null;
		}

		[Token(Token = "0x600102A")]
		[Address(RVA = "0xBAE2E8", Offset = "0xBAE2E8", VA = "0xBAE2E8")]
		private MeshFilter GetNewMeshFilter(Transform parent)
		{
			return null;
		}

		[Token(Token = "0x600102B")]
		[Address(RVA = "0xBAE380", Offset = "0xBAE380", VA = "0xBAE380")]
		public MeshFilter GetMeshFilterOnly(Transform parent)
		{
			return null;
		}

		[Token(Token = "0x600102C")]
		[Address(RVA = "0xBAE494", Offset = "0xBAE494", VA = "0xBAE494")]
		public MeshFilter GetMeshFilter(Transform parent)
		{
			return null;
		}

		[Token(Token = "0x600102D")]
		[Address(RVA = "0xBAE4DC", Offset = "0xBAE4DC", VA = "0xBAE4DC")]
		public void ReturnMesh(Mesh mesh)
		{
		}

		[Token(Token = "0x600102E")]
		[Address(RVA = "0xBAE550", Offset = "0xBAE550", VA = "0xBAE550")]
		public void ReturnMeshFilterOnly(MeshFilter mf)
		{
		}

		[Token(Token = "0x600102F")]
		[Address(RVA = "0xBAE678", Offset = "0xBAE678", VA = "0xBAE678")]
		public void ReturnMeshFilter(MeshFilter mf)
		{
		}

		[Token(Token = "0x6001030")]
		[Address(RVA = "0xBAE73C", Offset = "0xBAE73C", VA = "0xBAE73C")]
		public void ReturnMeshFilters(Transform container)
		{
		}

		[Token(Token = "0x6001031")]
		[Address(RVA = "0xBAD900", Offset = "0xBAD900", VA = "0xBAD900")]
		public bool IterateRefillPools(WorldMaster master)
		{
			return default(bool);
		}

		[Token(Token = "0x6001032")]
		[Address(RVA = "0xBAE824", Offset = "0xBAE824", VA = "0xBAE824")]
		public WorldMeshes()
		{
		}
	}
}
namespace Placemaker.Vr
{
	[Token(Token = "0x20001CC")]
	public class VrSaveMenu : UIBehaviour, UiMaster.IUiSetup
	{
		[Token(Token = "0x20001CD")]
		public enum StatusUIState : byte
		{
			[Token(Token = "0x4000BB1")]
			Closed,
			[Token(Token = "0x4000BB2")]
			Open,
			[Token(Token = "0x4000BB3")]
			Focus
		}

		[Token(Token = "0x20001CE")]
		private enum MenuInitState : byte
		{
			[Token(Token = "0x4000BB5")]
			Begin,
			[Token(Token = "0x4000BB6")]
			RefreshFiles,
			[Token(Token = "0x4000BB7")]
			Done
		}

		[Token(Token = "0x20001CF")]
		private enum OpenSaveMenuState : byte
		{
			[Token(Token = "0x4000BB9")]
			Begin,
			[Token(Token = "0x4000BBA")]
			StartSavingGame,
			[Token(Token = "0x4000BBB")]
			SavingGame,
			[Token(Token = "0x4000BBC")]
			SetLastCard,
			[Token(Token = "0x4000BBD")]
			SortCards,
			[Token(Token = "0x4000BBE")]
			OpenUI,
			[Token(Token = "0x4000BBF")]
			Done
		}

		[Token(Token = "0x20001D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F0998", Offset = "0x6F0998")]
		private sealed class <>c__DisplayClass35_0
		{
			[Token(Token = "0x4000BC0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public VrSaveMenu <>4__this;

			[Token(Token = "0x4000BC1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public UiMaster master;

			[Token(Token = "0x6001048")]
			[Address(RVA = "0x1080F08", Offset = "0x1080F08", VA = "0x1080F08")]
			public <>c__DisplayClass35_0()
			{
			}

			[Token(Token = "0x6001049")]
			[Address(RVA = "0x1080F10", Offset = "0x1080F10", VA = "0x1080F10")]
			internal void <Placemaker.Ui.UiMaster.IUiSetup.OnSetup>b__1(float x)
			{
			}

			[Token(Token = "0x600104A")]
			[Address(RVA = "0x1080F38", Offset = "0x1080F38", VA = "0x1080F38")]
			internal void <Placemaker.Ui.UiMaster.IUiSetup.OnSetup>b__2(float x)
			{
			}

			[Token(Token = "0x600104B")]
			[Address(RVA = "0x1080FEC", Offset = "0x1080FEC", VA = "0x1080FEC")]
			internal void <Placemaker.Ui.UiMaster.IUiSetup.OnSetup>g__SetupCard|0(SaveCard saveCard)
			{
			}

			[Token(Token = "0x600104C")]
			[Address(RVA = "0x108159C", Offset = "0x108159C", VA = "0x108159C")]
			internal void <Placemaker.Ui.UiMaster.IUiSetup.OnSetup>g__SetIndex|4(int index)
			{
			}

			[Token(Token = "0x600104D")]
			[Address(RVA = "0x10815B8", Offset = "0x10815B8", VA = "0x10815B8")]
			internal void <Placemaker.Ui.UiMaster.IUiSetup.OnSetup>b__6(int x)
			{
			}

			[Token(Token = "0x600104E")]
			[Address(RVA = "0x10815D4", Offset = "0x10815D4", VA = "0x10815D4")]
			internal void <Placemaker.Ui.UiMaster.IUiSetup.OnSetup>b__8(MetaSave metaSave)
			{
			}
		}

		[Token(Token = "0x20001D1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F09A8", Offset = "0x6F09A8")]
		private sealed class <>c__DisplayClass35_1
		{
			[Token(Token = "0x4000BC2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SaveCard saveCard;

			[Token(Token = "0x4000BC3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public <>c__DisplayClass35_0 CS$<>8__locals1;

			[Token(Token = "0x600104F")]
			[Address(RVA = "0x108158C", Offset = "0x108158C", VA = "0x108158C")]
			public <>c__DisplayClass35_1()
			{
			}

			[Token(Token = "0x6001050")]
			[Address(RVA = "0x1081718", Offset = "0x1081718", VA = "0x1081718")]
			internal void <Placemaker.Ui.UiMaster.IUiSetup.OnSetup>b__3(BaseButton.State state)
			{
			}

			[Token(Token = "0x6001051")]
			[Address(RVA = "0x1081948", Offset = "0x1081948", VA = "0x1081948")]
			internal void <Placemaker.Ui.UiMaster.IUiSetup.OnSetup>b__7()
			{
			}
		}

		[Token(Token = "0x20001D2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F09B8", Offset = "0x6F09B8")]
		private sealed class <>c__DisplayClass35_2
		{
			[Token(Token = "0x4000BC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public MetaSave metaSave;

			[Token(Token = "0x4000BC5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public <>c__DisplayClass35_1 CS$<>8__locals2;

			[Token(Token = "0x6001052")]
			[Address(RVA = "0x1081594", Offset = "0x1081594", VA = "0x1081594")]
			public <>c__DisplayClass35_2()
			{
			}

			[Token(Token = "0x6001053")]
			[Address(RVA = "0x1081978", Offset = "0x1081978", VA = "0x1081978")]
			internal void <Placemaker.Ui.UiMaster.IUiSetup.OnSetup>b__5()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20001D3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F09C8", Offset = "0x6F09C8")]
		private sealed class <>c
		{
			[Token(Token = "0x4000BC6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000BC7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action<int, int, int> <>9__50_0;

			[Token(Token = "0x6001055")]
			[Address(RVA = "0x1080EFC", Offset = "0x1080EFC", VA = "0x1080EFC")]
			public <>c()
			{
			}

			[Token(Token = "0x6001056")]
			[Address(RVA = "0x1080F04", Offset = "0x1080F04", VA = "0x1080F04")]
			internal void <.ctor>b__50_0(int <p0>, int <p1>, int <p2>)
			{
			}
		}

		[Token(Token = "0x4000B95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public UiMaster master;

		[Token(Token = "0x4000B96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform scaleAnim;

		[Token(Token = "0x4000B97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private CanvasGroup canvasGroup;

		[Token(Token = "0x4000B98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x6F6850", Offset = "0x6F6850")]
		[SerializeField]
		private SaveCard srcSaveCard;

		[Token(Token = "0x4000B99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		public MenuMusic menuMusic;

		[Token(Token = "0x4000B9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Transform pageContainer;

		[Token(Token = "0x4000B9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Transform pagePool;

		[Token(Token = "0x4000B9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private VrSavePage srcPage;

		[Token(Token = "0x4000B9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		public RectTransform bigCollider;

		[Token(Token = "0x4000B9E")]
		private const int cardsPerRow = 2;

		[Token(Token = "0x4000B9F")]
		private const int cardsPerColumn = 4;

		[Token(Token = "0x4000BA0")]
		private const int cardsPerPage = 8;

		[Token(Token = "0x4000BA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private List<SaveCard> saveCards;

		[Token(Token = "0x4000BA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public UpdateState visibleState;

		[Token(Token = "0x4000BA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public UpdateState openState;

		[Token(Token = "0x4000BA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public UpdateState menuScaleState;

		[Token(Token = "0x4000BA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public int currentPageIndex;

		[Token(Token = "0x4000BA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private bool orderDirty;

		[Token(Token = "0x4000BA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x85")]
		private bool pageCountDirty;

		[Token(Token = "0x4000BA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Action<int, int, int> onPageChange;

		[Token(Token = "0x4000BA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public List<VrSavePage> pages;

		[Token(Token = "0x4000BAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public TextMeshProUGUI pageCountText;

		[Token(Token = "0x4000BAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private List<SaveCard> hoveredCards;

		[Token(Token = "0x4000BAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private MenuInitState menuInitState;

		[Token(Token = "0x4000BAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private SimpleMessage focusedCardDuplicateMessage;

		[Token(Token = "0x4000BAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Stopwatch stopwatch;

		[Token(Token = "0x4000BAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private MaxSavesCounter maxSavesCounter;

		[Token(Token = "0x6001033")]
		[Address(RVA = "0xBA2B50", Offset = "0xBA2B50", VA = "0xBA2B50")]
		public void ChangePage(int delta)
		{
		}

		[Token(Token = "0x6001034")]
		[Address(RVA = "0xBA2BF0", Offset = "0xBA2BF0", VA = "0xBA2BF0")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x6FC2FC", Offset = "0x6FC2FC")]
		public void IncrementPage()
		{
		}

		[Token(Token = "0x6001035")]
		[Address(RVA = "0xBA2BF8", Offset = "0xBA2BF8", VA = "0xBA2BF8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x6FC334", Offset = "0x6FC334")]
		public void DecrementPage()
		{
		}

		[Token(Token = "0x6001036")]
		[Address(RVA = "0xBA2C00", Offset = "0xBA2C00", VA = "0xBA2C00")]
		private void SetOrderDirty()
		{
		}

		[Token(Token = "0x6001037")]
		[Address(RVA = "0xBA2C30", Offset = "0xBA2C30", VA = "0xBA2C30", Slot = "17")]
		private void Placemaker.Ui.UiMaster.IUiSetup.OnStart(UiMaster master)
		{
		}

		[Token(Token = "0x6001038")]
		[Address(RVA = "0xBA2CA4", Offset = "0xBA2CA4", VA = "0xBA2CA4", Slot = "18")]
		private void Placemaker.Ui.UiMaster.IUiSetup.OnSetup(UiMaster master)
		{
		}

		[Token(Token = "0x6001039")]
		[Address(RVA = "0xBA2FE8", Offset = "0xBA2FE8", VA = "0xBA2FE8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x6FC36C", Offset = "0x6FC36C")]
		public void Toggle()
		{
		}

		[Token(Token = "0x600103A")]
		[Address(RVA = "0xBA18B8", Offset = "0xBA18B8", VA = "0xBA18B8")]
		public void Open()
		{
		}

		[Token(Token = "0x600103B")]
		[Address(RVA = "0xBA18C0", Offset = "0xBA18C0", VA = "0xBA18C0")]
		public void Close()
		{
		}

		[Token(Token = "0x600103C")]
		[Address(RVA = "0xBA3030", Offset = "0xBA3030", VA = "0xBA3030")]
		public void SetUIState(StatusUIState state)
		{
		}

		[Token(Token = "0x600103D")]
		[Address(RVA = "0xBA30F8", Offset = "0xBA30F8", VA = "0xBA30F8")]
		private void Update()
		{
		}

		[Token(Token = "0x600103E")]
		[Address(RVA = "0xBA32A0", Offset = "0xBA32A0", VA = "0xBA32A0")]
		private bool KeepGoing()
		{
			return default(bool);
		}

		[Token(Token = "0x600103F")]
		[Address(RVA = "0xBA3208", Offset = "0xBA3208", VA = "0xBA3208")]
		private bool MenuInit(Func<bool> keepGoing)
		{
			return default(bool);
		}

		[Token(Token = "0x6001040")]
		[Address(RVA = "0xBA32CC", Offset = "0xBA32CC", VA = "0xBA32CC")]
		private void UpdatePages()
		{
		}

		[Token(Token = "0x6001041")]
		[Address(RVA = "0xBA39A4", Offset = "0xBA39A4", VA = "0xBA39A4")]
		private void UpdatePageCounter()
		{
		}

		[Token(Token = "0x6001042")]
		[Address(RVA = "0xBA3A94", Offset = "0xBA3A94", VA = "0xBA3A94")]
		private void UpdateContextButtons()
		{
		}

		[Token(Token = "0x6001043")]
		[Address(RVA = "0xBA3F1C", Offset = "0xBA3F1C", VA = "0xBA3F1C")]
		public void Clicked(SaveCard card)
		{
		}

		[Token(Token = "0x6001044")]
		[Address(RVA = "0xBA3F44", Offset = "0xBA3F44", VA = "0xBA3F44")]
		public void Button_SideCancel(BaseButton button)
		{
		}

		[Token(Token = "0x6001045")]
		[Address(RVA = "0xBA3FBC", Offset = "0xBA3FBC", VA = "0xBA3FBC")]
		public void Button_Delete(SaveCard saveCard)
		{
		}

		[Token(Token = "0x6001046")]
		[Address(RVA = "0xBA402C", Offset = "0xBA402C", VA = "0xBA402C")]
		public void Button_Duplicate(SaveCard saveCard)
		{
		}

		[Token(Token = "0x6001047")]
		[Address(RVA = "0xBA40B8", Offset = "0xBA40B8", VA = "0xBA40B8")]
		public VrSaveMenu()
		{
		}
	}
	[Token(Token = "0x20001D4")]
	public class LineFeedbacker : MonoBehaviour, UiMaster.IUiSetup
	{
		[Token(Token = "0x4000BC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private UiMaster master;

		[Token(Token = "0x4000BC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<Transform> nodes;

		[Token(Token = "0x4000BCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float alpha;

		[Token(Token = "0x4000BCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector3 endPoint;

		[Token(Token = "0x4000BCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private MaterialPropertyBlock block;

		[Token(Token = "0x6001057")]
		[Address(RVA = "0xC54664", Offset = "0xC54664", VA = "0xC54664", Slot = "5")]
		private void Placemaker.Ui.UiMaster.IUiSetup.OnSetup(UiMaster master)
		{
		}

		[Token(Token = "0x6001058")]
		[Address(RVA = "0xC546C0", Offset = "0xC546C0", VA = "0xC546C0", Slot = "4")]
		private void Placemaker.Ui.UiMaster.IUiSetup.OnStart(UiMaster master)
		{
		}

		[Token(Token = "0x6001059")]
		[Address(RVA = "0xC546C8", Offset = "0xC546C8", VA = "0xC546C8")]
		public void Flash(Vector3 pos)
		{
		}

		[Token(Token = "0x600105A")]
		[Address(RVA = "0xC546E4", Offset = "0xC546E4", VA = "0xC546E4")]
		private void Update()
		{
		}

		[Token(Token = "0x600105B")]
		[Address(RVA = "0xC54B38", Offset = "0xC54B38", VA = "0xC54B38")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x600105C")]
		[Address(RVA = "0xC54C74", Offset = "0xC54C74", VA = "0xC54C74")]
		public LineFeedbacker()
		{
		}
	}
	[Token(Token = "0x20001D5")]
	public class VrArmMenu : MonoBehaviour, UiMaster.IUiSetup
	{
		[Token(Token = "0x4000BCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public VrController vrController;

		[Token(Token = "0x4000BCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VrRig vrRig;

		[Token(Token = "0x600105D")]
		[Address(RVA = "0x1BDE8EC", Offset = "0x1BDE8EC", VA = "0x1BDE8EC")]
		public void Update()
		{
		}

		[Token(Token = "0x600105E")]
		[Address(RVA = "0x1BDEB40", Offset = "0x1BDEB40", VA = "0x1BDEB40", Slot = "5")]
		private void Placemaker.Ui.UiMaster.IUiSetup.OnSetup(UiMaster master)
		{
		}

		[Token(Token = "0x600105F")]
		[Address(RVA = "0x1BDEB44", Offset = "0x1BDEB44", VA = "0x1BDEB44", Slot = "4")]
		private void Placemaker.Ui.UiMaster.IUiSetup.OnStart(UiMaster master)
		{
		}

		[Token(Token = "0x6001060")]
		[Address(RVA = "0x1BDEB48", Offset = "0x1BDEB48", VA = "0x1BDEB48")]
		public VrArmMenu()
		{
		}
	}
	[Token(Token = "0x20001D6")]
	public class VrController : MonoBehaviour, UiMaster.IUiSetup
	{
		[Token(Token = "0x20001D7")]
		public enum ClawState
		{
			[Token(Token = "0x4000C15")]
			Idle,
			[Token(Token = "0x4000C16")]
			Ui,
			[Token(Token = "0x4000C17")]
			Grab
		}

		[Token(Token = "0x20001D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F09D8", Offset = "0x6F09D8")]
		private sealed class <>c__DisplayClass81_0
		{
			[Token(Token = "0x4000C18")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public VrController <>4__this;

			[Token(Token = "0x4000C19")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int clawCount;

			[Token(Token = "0x6001074")]
			[Address(RVA = "0x10805D8", Offset = "0x10805D8", VA = "0x10805D8")]
			public <>c__DisplayClass81_0()
			{
			}

			[Token(Token = "0x6001075")]
			[Address(RVA = "0x10805E0", Offset = "0x10805E0", VA = "0x10805E0")]
			internal void <Placemaker.Ui.UiMaster.IUiSetup.OnSetup>b__0(float x)
			{
			}

			[Token(Token = "0x6001076")]
			[Address(RVA = "0x10806A4", Offset = "0x10806A4", VA = "0x10806A4")]
			internal void <Placemaker.Ui.UiMaster.IUiSetup.OnSetup>b__6(float x)
			{
			}

			[Token(Token = "0x6001077")]
			[Address(RVA = "0x1080718", Offset = "0x1080718", VA = "0x1080718")]
			internal void <Placemaker.Ui.UiMaster.IUiSetup.OnSetup>b__7()
			{
			}

			[Token(Token = "0x6001078")]
			[Address(RVA = "0x1080744", Offset = "0x1080744", VA = "0x1080744")]
			internal void <Placemaker.Ui.UiMaster.IUiSetup.OnSetup>b__8(float x)
			{
			}

			[Token(Token = "0x6001079")]
			[Address(RVA = "0x10807B8", Offset = "0x10807B8", VA = "0x10807B8")]
			internal void <Placemaker.Ui.UiMaster.IUiSetup.OnSetup>b__9()
			{
			}

			[Token(Token = "0x600107A")]
			[Address(RVA = "0x10807E4", Offset = "0x10807E4", VA = "0x10807E4")]
			internal void <Placemaker.Ui.UiMaster.IUiSetup.OnSetup>b__1(float x)
			{
			}

			[Token(Token = "0x600107B")]
			[Address(RVA = "0x1080858", Offset = "0x1080858", VA = "0x1080858")]
			internal void <Placemaker.Ui.UiMaster.IUiSetup.OnSetup>b__2(float x)
			{
			}

			[Token(Token = "0x600107C")]
			[Address(RVA = "0x10808CC", Offset = "0x10808CC", VA = "0x10808CC")]
			internal void <Placemaker.Ui.UiMaster.IUiSetup.OnSetup>b__3(float x)
			{
			}

			[Token(Token = "0x600107D")]
			[Address(RVA = "0x10809C4", Offset = "0x10809C4", VA = "0x10809C4")]
			internal void <Placemaker.Ui.UiMaster.IUiSetup.OnSetup>b__4(float x)
			{
			}

			[Token(Token = "0x600107E")]
			[Address(RVA = "0x1080A18", Offset = "0x1080A18", VA = "0x1080A18")]
			internal void <Placemaker.Ui.UiMaster.IUiSetup.OnSetup>b__5(float x)
			{
			}
		}

		[Token(Token = "0x4000BCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private UiMaster master;

		[Token(Token = "0x4000BD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ControllerDeviceType currentController;

		[Token(Token = "0x4000BD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private List<VrControllerData> vrControllers;

		[Token(Token = "0x4000BD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public VrStickPalette stickPalette;

		[Token(Token = "0x4000BD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public XRController xRController;

		[Token(Token = "0x4000BD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public XRRayInteractor rayInteractor;

		[Token(Token = "0x4000BD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Transform interactionPoint;

		[Token(Token = "0x4000BD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Transform stick;

		[Token(Token = "0x4000BD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Transform smoother;

		[Token(Token = "0x4000BD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public VrControllerData controllerData;

		[Token(Token = "0x4000BD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Transform clawHandTransform;

		[Token(Token = "0x4000BDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Transform uiDotTransform;

		[Token(Token = "0x4000BDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Transform stickStuff;

		[Token(Token = "0x4000BDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Vector3 targetPos;

		[Token(Token = "0x4000BDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public Vector3 currentPos;

		[Token(Token = "0x4000BDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public VrRig.TransformData lastData;

		[Token(Token = "0x4000BDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public bool addMode;

		[Token(Token = "0x4000BE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public Collider[] colliders;

		[Token(Token = "0x4000BE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public Mesh mesh;

		[Token(Token = "0x4000BE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public UpdateState uiState;

		[Token(Token = "0x4000BE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public UpdateState buildState;

		[Token(Token = "0x4000BE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public bool validAdd;

		[Token(Token = "0x4000BE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE9")]
		public bool validRemove;

		[Token(Token = "0x4000BE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public VrInteractionData oldData;

		[Token(Token = "0x4000BE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x570")]
		public VrInteractionData newData;

		[Token(Token = "0x4000BE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9F0")]
		public VrInteractionData startGripData;

		[Token(Token = "0x4000BE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE70")]
		public VrGrabbable grabbable;

		[Token(Token = "0x4000BEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE78")]
		public List<Transform> claws;

		[Token(Token = "0x4000BEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE80")]
		public VrRig vrRig;

		[Token(Token = "0x4000BEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE88")]
		private MaterialPropertyBlock block;

		[Token(Token = "0x4000BED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE90")]
		public AudioClip nextColorClip;

		[Token(Token = "0x4000BEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE98")]
		public AudioClip previousColorClip;

		[NonSerialized]
		[Token(Token = "0x4000BEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEA0")]
		public float maxInteractionDist;

		[Token(Token = "0x4000BF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEA4")]
		public float minInteractionDist;

		[NonSerialized]
		[Token(Token = "0x4000BF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEA8")]
		public float interactionDistGap;

		[Token(Token = "0x4000BF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEB0")]
		public AudioClip errorClip;

		[Token(Token = "0x4000BF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEB8")]
		public Transform arrowUndoContainer;

		[Token(Token = "0x4000BF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC0")]
		public Transform arrowRedoContainer;

		[Token(Token = "0x4000BF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC8")]
		public Transform arrowNextColorContainer;

		[Token(Token = "0x4000BF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xED0")]
		public Transform arrowPreviousColorContainer;

		[Token(Token = "0x4000BF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xED8")]
		private UpdateState arrowStateNextColor;

		[Token(Token = "0x4000BF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEE0")]
		private UpdateState arrowStatePreviousColor;

		[Token(Token = "0x4000BF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEE8")]
		private UpdateState arrowStateUndo;

		[Token(Token = "0x4000BFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEF0")]
		private UpdateState arrowStateRedo;

		[Token(Token = "0x4000BFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEF8")]
		private UpdateState gripState;

		[Token(Token = "0x4000BFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF00")]
		private UpdateState upsideDownState;

		[Token(Token = "0x4000BFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF08")]
		private UpdateState clawAngleState;

		[Token(Token = "0x4000BFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF10")]
		public UpdateState stickLengthState;

		[Token(Token = "0x4000BFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF18")]
		private UpdateState uiDotState;

		[Token(Token = "0x4000C00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF20")]
		public VrHandMenu handMenu;

		[Token(Token = "0x4000C01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF28")]
		public Vector3 linePos;

		[Token(Token = "0x4000C02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF34")]
		public float lineAlpha;

		[Token(Token = "0x4000C03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF38")]
		public LineFeedbacker undoLine;

		[Token(Token = "0x4000C04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF40")]
		public LineFeedbacker redoLine;

		[Token(Token = "0x4000C05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF48")]
		public Transform handLabel;

		[Token(Token = "0x4000C06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF50")]
		public Transform downTransform;

		[Token(Token = "0x4000C07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF58")]
		public CanvasGroup handLabelCanvasGroup;

		[Token(Token = "0x4000C08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF60")]
		public CanvasGroup labelPlateCanvasGroup;

		[Token(Token = "0x4000C09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF68")]
		public RectTransform nextColor;

		[Token(Token = "0x4000C0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF70")]
		public RectTransform previousColor;

		[Token(Token = "0x4000C0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF78")]
		public RectTransform redo;

		[Token(Token = "0x4000C0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF80")]
		public RectTransform undo;

		[Token(Token = "0x4000C0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF88")]
		public RectTransform pickColor;

		[Token(Token = "0x4000C0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF90")]
		public RectTransform remove;

		[Token(Token = "0x4000C0F")]
		private const float triggerThreshold = 0.92f;

		[Token(Token = "0x4000C10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF98")]
		private Vector3 onTouchJoystickScale;

		[Token(Token = "0x4000C11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFA4")]
		private Vector3 onTouchButtonScale;

		[Token(Token = "0x4000C12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFB0")]
		private Matrix4x4 lastSmooth;

		[Token(Token = "0x4000C13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFF0")]
		private bool snapSmooth;

		[Token(Token = "0x1700047B")]
		public bool removeMode
		{
			[Token(Token = "0x6001061")]
			[Address(RVA = "0x1BDEB50", Offset = "0x1BDEB50", VA = "0x1BDEB50")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001062")]
		[Address(RVA = "0x1BDEB60", Offset = "0x1BDEB60", VA = "0x1BDEB60")]
		public void SnapSmooth()
		{
		}

		[Token(Token = "0x6001063")]
		[Address(RVA = "0x1BDEB6C", Offset = "0x1BDEB6C", VA = "0x1BDEB6C")]
		public void UpdateHover(Matrix4x4 toLocal, Matrix4x4 toWorld, VrRig vrRig, VrController otherController)
		{
		}

		[Token(Token = "0x6001064")]
		[Address(RVA = "0x1BE1108", Offset = "0x1BE1108", VA = "0x1BE1108")]
		private void Grab(VrGrabbable grabbable, VrController newController)
		{
		}

		[Token(Token = "0x6001065")]
		[Address(RVA = "0x1BE2310", Offset = "0x1BE2310", VA = "0x1BE2310")]
		public void UpdateScale()
		{
		}

		[Token(Token = "0x6001066")]
		[Address(RVA = "0x1BE128C", Offset = "0x1BE128C", VA = "0x1BE128C")]
		private void UpdateRemoveVoxel()
		{
		}

		[Token(Token = "0x6001067")]
		[Address(RVA = "0x1BE1578", Offset = "0x1BE1578", VA = "0x1BE1578")]
		private void UpdateAddVoxel()
		{
		}

		[Token(Token = "0x6001068")]
		[Address(RVA = "0x1BE207C", Offset = "0x1BE207C", VA = "0x1BE207C")]
		private void UpdateVertMesh()
		{
		}

		[Token(Token = "0x6001069")]
		[Address(RVA = "0x1BE20C0", Offset = "0x1BE20C0", VA = "0x1BE20C0")]
		public void DrawHover()
		{
		}

		[Token(Token = "0x600106A")]
		[Address(RVA = "0x1BE238C", Offset = "0x1BE238C", VA = "0x1BE238C", Slot = "4")]
		private void Placemaker.Ui.UiMaster.IUiSetup.OnStart(UiMaster master)
		{
		}

		[Token(Token = "0x600106B")]
		[Address(RVA = "0x1BE29B4", Offset = "0x1BE29B4", VA = "0x1BE29B4", Slot = "5")]
		private void Placemaker.Ui.UiMaster.IUiSetup.OnSetup(UiMaster master)
		{
		}

		[Token(Token = "0x600106C")]
		[Address(RVA = "0x1BE3098", Offset = "0x1BE3098", VA = "0x1BE3098")]
		private void OnFocusStateAcquired()
		{
		}

		[Token(Token = "0x600106D")]
		[Address(RVA = "0x1BE30C0", Offset = "0x1BE30C0", VA = "0x1BE30C0")]
		private void OnFocusStateLost()
		{
		}

		[Token(Token = "0x600106E")]
		[Address(RVA = "0x1BE2974", Offset = "0x1BE2974", VA = "0x1BE2974")]
		private ControllerDeviceType GetCurrentController()
		{
			return default(ControllerDeviceType);
		}

		[Token(Token = "0x600106F")]
		[Address(RVA = "0x1BE30E8", Offset = "0x1BE30E8", VA = "0x1BE30E8")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6001070")]
		[Address(RVA = "0x1BE1E98", Offset = "0x1BE1E98", VA = "0x1BE1E98")]
		private void SendHapticImpulse(float amplitude, float duration, int frequency = 170)
		{
		}

		[Token(Token = "0x6001071")]
		[Address(RVA = "0x1BE31BC", Offset = "0x1BE31BC", VA = "0x1BE31BC")]
		public VrController()
		{
		}

		[Token(Token = "0x6001072")]
		[Address(RVA = "0x1BE1C8C", Offset = "0x1BE1C8C", VA = "0x1BE1C8C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FC3A4", Offset = "0x6FC3A4")]
		private void <UpdateHover>g__PlayFailSound|73_0(float pitch)
		{
		}

		[Token(Token = "0x6001073")]
		[Address(RVA = "0x1BE1F50", Offset = "0x1BE1F50", VA = "0x1BE1F50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FC3B4", Offset = "0x6FC3B4")]
		private VoxelData <UpdateHover>g__UpdateVoxelDrawData|73_1(VoxelData data)
		{
			return default(VoxelData);
		}
	}
	[Serializable]
	[Token(Token = "0x20001D9")]
	public struct VrInteractionData
	{
		[Token(Token = "0x4000C1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VrController controller;

		[Token(Token = "0x4000C1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool grip;

		[Token(Token = "0x4000C1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
		public bool trigger;

		[Token(Token = "0x4000C1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA")]
		public bool primary;

		[Token(Token = "0x4000C1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB")]
		public bool secondary;

		[Token(Token = "0x4000C1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public bool stickClick;

		[Token(Token = "0x4000C20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD")]
		public bool menu;

		[Token(Token = "0x4000C21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 pos;

		[Token(Token = "0x4000C22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 grabPos;

		[Token(Token = "0x4000C23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 delta;

		[Token(Token = "0x4000C24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public VrHapticUnit vrHapticUnit;

		[Token(Token = "0x4000C25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool triggerUi;

		[Token(Token = "0x4000C26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		public bool triggerWorld;

		[Token(Token = "0x4000C27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
		public bool gripUi;

		[Token(Token = "0x4000C28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x43")]
		public bool gripWorld;

		[Token(Token = "0x4000C29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public bool menuMode;

		[Token(Token = "0x4000C2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
		public bool shouldShowHover;

		[Token(Token = "0x4000C2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float triggerFloat;

		[Token(Token = "0x4000C2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public Vector2 stickVector;

		[Token(Token = "0x4000C2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public Vector2Int stickInt;

		[Token(Token = "0x4000C2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public Vector2Int stickLeanInt;

		[Token(Token = "0x4000C2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public bool stickXBool;

		[Token(Token = "0x4000C30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
		public bool stickYBool;

		[Token(Token = "0x4000C31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float interactionDist;

		[Token(Token = "0x4000C32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public bool validDraw;

		[Token(Token = "0x4000C33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6D")]
		public bool hoveringUi;

		[Token(Token = "0x4000C34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public RaycastResult raycastResults;

		[Token(Token = "0x4000C35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public VoxelData addData;

		[Token(Token = "0x4000C36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
		public VoxelData removeData;

		[Token(Token = "0x4000C37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x478")]
		public bool touchPrimary;

		[Token(Token = "0x4000C38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x479")]
		public bool touchSecondary;

		[Token(Token = "0x4000C39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x47A")]
		public bool primary2DAxisTouch;

		[Token(Token = "0x1700047C")]
		public bool claimed
		{
			[Token(Token = "0x600107F")]
			[Address(RVA = "0xBA0634", Offset = "0xBA0634", VA = "0xBA0634")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700047D")]
		public bool claimedUi
		{
			[Token(Token = "0x6001080")]
			[Address(RVA = "0xBA066C", Offset = "0xBA066C", VA = "0xBA066C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700047E")]
		public bool claimedWorld
		{
			[Token(Token = "0x6001081")]
			[Address(RVA = "0xBA0694", Offset = "0xBA0694", VA = "0xBA0694")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700047F")]
		public bool uiMode
		{
			[Token(Token = "0x6001082")]
			[Address(RVA = "0xBA06A4", Offset = "0xBA06A4", VA = "0xBA06A4")]
			get
			{
				return default(bool);
			}
		}
	}
	[Serializable]
	[Token(Token = "0x20001DA")]
	public struct VoxelData
	{
		[Token(Token = "0x4000C3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Voxel voxel;

		[Token(Token = "0x4000C3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int height;

		[Token(Token = "0x4000C3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Vert vert;

		[Token(Token = "0x4000C3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1BC")]
		public float scale;

		[Token(Token = "0x4000C3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		public float alpha;

		[Token(Token = "0x4000C3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
		public Vector3 lazyPos;

		[Token(Token = "0x4000C40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		public Vector3 targetPos;

		[Token(Token = "0x4000C41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1DC")]
		public int frame;
	}
	[Token(Token = "0x20001DB")]
	public enum ControllerDeviceType
	{
		[Token(Token = "0x4000C43")]
		Default,
		[Token(Token = "0x4000C44")]
		PicoNeo3,
		[Token(Token = "0x4000C45")]
		PicoPhoenix
	}
	[Token(Token = "0x20001DC")]
	public class VrControllerData : MonoBehaviour
	{
		[Token(Token = "0x4000C46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ControllerDeviceType device;

		[Token(Token = "0x4000C47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x6F6928", Offset = "0x6F6928")]
		public Transform joystickTransform;

		[Token(Token = "0x4000C48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform triggerTransform;

		[Token(Token = "0x4000C49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform gripTransform;

		[Token(Token = "0x4000C4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform primaryButtonTransform;

		[Token(Token = "0x4000C4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Transform secondaryButtonTransform;

		[Token(Token = "0x4000C4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Transform menuButtonTransform;

		[Token(Token = "0x4000C4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x6F6938", Offset = "0x6F6938")]
		public Transform plateLabelsPoint;

		[Token(Token = "0x4000C4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public RectTransform nextColorPoint;

		[Token(Token = "0x4000C4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public RectTransform previousColorPoint;

		[Token(Token = "0x4000C50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public RectTransform redoPoint;

		[Token(Token = "0x4000C51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public RectTransform undoPoint;

		[Token(Token = "0x4000C52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public RectTransform pickColorPoint;

		[Token(Token = "0x4000C53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public RectTransform removePoint;

		[Token(Token = "0x4000C54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Transform stickPoint;

		[Token(Token = "0x6001083")]
		[Address(RVA = "0xB9F838", Offset = "0xB9F838", VA = "0xB9F838")]
		public VrControllerData()
		{
		}
	}
	[Token(Token = "0x20001DD")]
	public class VrControllerDependable : MonoBehaviour, VrRig.IOnVrControllerSceneProcess
	{
		[Token(Token = "0x20001DE")]
		public enum Flip
		{
			[Token(Token = "0x4000C59")]
			None = 0,
			[Token(Token = "0x4000C5A")]
			X = 1,
			[Token(Token = "0x4000C5B")]
			Y = 2,
			[Token(Token = "0x4000C5C")]
			Z = 4,
			[Token(Token = "0x4000C5D")]
			XY = 7
		}

		[Token(Token = "0x4000C55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Hand hand;

		[Token(Token = "0x4000C56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Flip flipOnRight;

		[Token(Token = "0x4000C57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string termOnRight;

		[Token(Token = "0x6001084")]
		[Address(RVA = "0xB9F840", Offset = "0xB9F840", VA = "0xB9F840", Slot = "4")]
		private void Placemaker.Vr.VrRig.IOnVrControllerSceneProcess.Process(VrRig vrRig, VrController vrController, Hand hand)
		{
		}

		[Token(Token = "0x6001085")]
		[Address(RVA = "0xB9FA34", Offset = "0xB9FA34", VA = "0xB9FA34")]
		public VrControllerDependable()
		{
		}
	}
	[Token(Token = "0x20001DF")]
	public enum Hand
	{
		[Token(Token = "0x4000C5F")]
		Left = 1,
		[Token(Token = "0x4000C60")]
		Right,
		[Token(Token = "0x4000C61")]
		Both
	}
	[Token(Token = "0x20001E0")]
	public class VrGrabbable : MonoBehaviour, UiMaster.IUiSetup
	{
		[Token(Token = "0x4000C62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public VrController controller;

		[Token(Token = "0x4000C63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform naturalParent;

		[Token(Token = "0x6001086")]
		[Address(RVA = "0xB9FED8", Offset = "0xB9FED8", VA = "0xB9FED8", Slot = "5")]
		public void OnSetup(UiMaster master)
		{
		}

		[Token(Token = "0x6001087")]
		[Address(RVA = "0xB9FEDC", Offset = "0xB9FEDC", VA = "0xB9FEDC", Slot = "4")]
		public void OnStart(UiMaster master)
		{
		}

		[Token(Token = "0x6001088")]
		[Address(RVA = "0xB9FF14", Offset = "0xB9FF14", VA = "0xB9FF14")]
		public VrGrabbable()
		{
		}
	}
	[Token(Token = "0x20001E1")]
	public class VrHandMenu : MonoBehaviour, UiMaster.IUiSetup
	{
		[Token(Token = "0x4000C64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public VrController vrController;

		[Token(Token = "0x4000C65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VrRig vrRig;

		[Token(Token = "0x4000C66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private UpdateState visibleState;

		[Token(Token = "0x4000C67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform forwardTransform;

		[Token(Token = "0x4000C68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform saveMenuTransform;

		[Token(Token = "0x4000C69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Transform newOpenAltTransform;

		[Token(Token = "0x4000C6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject newOpenMenu;

		[Token(Token = "0x4000C6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public SoundButton soundButton;

		[Token(Token = "0x4000C6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public ShadingButtons shadingButtons;

		[Token(Token = "0x6001089")]
		[Address(RVA = "0xB9FF1C", Offset = "0xB9FF1C", VA = "0xB9FF1C")]
		public void Update()
		{
		}

		[Token(Token = "0x600108A")]
		[Address(RVA = "0xBA0374", Offset = "0xBA0374", VA = "0xBA0374", Slot = "5")]
		private void Placemaker.Ui.UiMaster.IUiSetup.OnSetup(UiMaster master)
		{
		}

		[Token(Token = "0x600108B")]
		[Address(RVA = "0xBA041C", Offset = "0xBA041C", VA = "0xBA041C", Slot = "4")]
		private void Placemaker.Ui.UiMaster.IUiSetup.OnStart(UiMaster master)
		{
		}

		[Token(Token = "0x600108C")]
		[Address(RVA = "0xBA04E8", Offset = "0xBA04E8", VA = "0xBA04E8")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x600108D")]
		[Address(RVA = "0xBA05C8", Offset = "0xBA05C8", VA = "0xBA05C8")]
		public VrHandMenu()
		{
		}
	}
	[Token(Token = "0x20001E2")]
	public class VrHapticUnit : MonoBehaviour
	{
		[Token(Token = "0x600108E")]
		[Address(RVA = "0xBA062C", Offset = "0xBA062C", VA = "0xBA062C")]
		public VrHapticUnit()
		{
		}
	}
	[Token(Token = "0x20001E3")]
	public class VrLoading : MonoBehaviour
	{
		[Token(Token = "0x600108F")]
		[Address(RVA = "0xBA06F4", Offset = "0xBA06F4", VA = "0xBA06F4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001090")]
		[Address(RVA = "0xBA0758", Offset = "0xBA0758", VA = "0xBA0758")]
		public VrLoading()
		{
		}
	}
	[Token(Token = "0x20001E4")]
	public class VrManager : MonoBehaviour, UiMaster.IUiSetup
	{
		[Token(Token = "0x4000C6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private UiMaster master;

		[Token(Token = "0x4000C6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VrRig vrRig;

		[Token(Token = "0x4000C6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UnityEngine.XR.InputDevice inputDevice;

		[Token(Token = "0x6001091")]
		[Address(RVA = "0xBA0760", Offset = "0xBA0760", VA = "0xBA0760", Slot = "5")]
		private void Placemaker.Ui.UiMaster.IUiSetup.OnSetup(UiMaster master)
		{
		}

		[Token(Token = "0x6001092")]
		[Address(RVA = "0xBA07C4", Offset = "0xBA07C4", VA = "0xBA07C4", Slot = "4")]
		private void Placemaker.Ui.UiMaster.IUiSetup.OnStart(UiMaster master)
		{
		}

		[Token(Token = "0x6001093")]
		[Address(RVA = "0xBA07C8", Offset = "0xBA07C8", VA = "0xBA07C8")]
		public VrManager()
		{
		}
	}
	[Token(Token = "0x20001E5")]
	public class VrPalette : MonoBehaviour, UiMaster.IUiSetup
	{
		[Token(Token = "0x20001E6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F09E8", Offset = "0x6F09E8")]
		private sealed class <>c__DisplayClass5_0
		{
			[Token(Token = "0x4000C74")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public VrController other;

			[Token(Token = "0x4000C75")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public UiMaster master;

			[Token(Token = "0x4000C76")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VrPalette <>4__this;

			[Token(Token = "0x4000C77")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public VrRig vrRig;

			[Token(Token = "0x6001097")]
			[Address(RVA = "0x1080BA4", Offset = "0x1080BA4", VA = "0x1080BA4")]
			public <>c__DisplayClass5_0()
			{
			}

			[Token(Token = "0x6001098")]
			[Address(RVA = "0x1080BAC", Offset = "0x1080BAC", VA = "0x1080BAC")]
			internal void <Placemaker.Ui.UiMaster.IUiSetup.OnSetup>b__1()
			{
			}
		}

		[Token(Token = "0x20001E7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F09F8", Offset = "0x6F09F8")]
		private sealed class <>c__DisplayClass5_1
		{
			[Token(Token = "0x4000C78")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public VrPalettePicker picker;

			[Token(Token = "0x4000C79")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public <>c__DisplayClass5_0 CS$<>8__locals1;

			[Token(Token = "0x6001099")]
			[Address(RVA = "0x1080CD4", Offset = "0x1080CD4", VA = "0x1080CD4")]
			public <>c__DisplayClass5_1()
			{
			}

			[Token(Token = "0x600109A")]
			[Address(RVA = "0x1080CDC", Offset = "0x1080CDC", VA = "0x1080CDC")]
			internal void <Placemaker.Ui.UiMaster.IUiSetup.OnSetup>b__0()
			{
			}
		}

		[Token(Token = "0x4000C70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private UiMaster master;

		[Token(Token = "0x4000C71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<VrPalettePicker> pickers;

		[Token(Token = "0x4000C72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public VoxelType currentVoxelType;

		[Token(Token = "0x4000C73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public VrController vrController;

		[Token(Token = "0x6001094")]
		[Address(RVA = "0xBA07D0", Offset = "0xBA07D0", VA = "0xBA07D0", Slot = "4")]
		private void Placemaker.Ui.UiMaster.IUiSetup.OnStart(UiMaster master)
		{
		}

		[Token(Token = "0x6001095")]
		[Address(RVA = "0xBA0824", Offset = "0xBA0824", VA = "0xBA0824", Slot = "5")]
		private void Placemaker.Ui.UiMaster.IUiSetup.OnSetup(UiMaster master)
		{
		}

		[Token(Token = "0x6001096")]
		[Address(RVA = "0xBA0B84", Offset = "0xBA0B84", VA = "0xBA0B84")]
		public VrPalette()
		{
		}
	}
	[Token(Token = "0x20001E8")]
	public class VrPalettePicker : MonoBehaviour, UiMaster.IUiSetup
	{
		[Token(Token = "0x4000C7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private UiMaster master;

		[Token(Token = "0x4000C7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeReference]
		public UiCornerMesh coloredMesh0;

		[Token(Token = "0x4000C7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeReference]
		public UiCornerMesh coloredMesh1;

		[Token(Token = "0x4000C7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeReference]
		public UiCornerMesh selectedIndicator;

		[Token(Token = "0x4000C7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public VoxelType voxelType;

		[Token(Token = "0x600109B")]
		[Address(RVA = "0xBA0BFC", Offset = "0xBA0BFC", VA = "0xBA0BFC", Slot = "5")]
		private void Placemaker.Ui.UiMaster.IUiSetup.OnSetup(UiMaster master)
		{
		}

		[Token(Token = "0x600109C")]
		[Address(RVA = "0xBA0C00", Offset = "0xBA0C00", VA = "0xBA0C00", Slot = "4")]
		private void Placemaker.Ui.UiMaster.IUiSetup.OnStart(UiMaster master)
		{
		}

		[Token(Token = "0x600109D")]
		[Address(RVA = "0xBA0C04", Offset = "0xBA0C04", VA = "0xBA0C04")]
		public VrPalettePicker()
		{
		}
	}
	[Token(Token = "0x20001E9")]
	public class VrRig : MonoBehaviour, UiMaster.IUiSetup, IOnScenePostProcess
	{
		[Token(Token = "0x20001EA")]
		public enum GripState
		{
			[Token(Token = "0x4000C93")]
			Left = 1,
			[Token(Token = "0x4000C94")]
			Right,
			[Token(Token = "0x4000C95")]
			Both
		}

		[Serializable]
		[Token(Token = "0x20001EB")]
		public struct TransformData
		{
			[Token(Token = "0x4000C96")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3 pos;

			[Token(Token = "0x4000C97")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Quaternion q;

			[Token(Token = "0x4000C98")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public Vector3 scale;

			[Token(Token = "0x60010A8")]
			[Address(RVA = "0x1080E3C", Offset = "0x1080E3C", VA = "0x1080E3C")]
			public Matrix4x4 GetMatrix()
			{
				return default(Matrix4x4);
			}
		}

		[Token(Token = "0x20001EC")]
		public interface IOnVrControllerSceneProcess
		{
			[Token(Token = "0x60010A9")]
			void Process(VrRig vrRig, VrController vrController, Hand hand);
		}

		[Token(Token = "0x20001ED")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F0A08", Offset = "0x6F0A08")]
		private sealed class <>c__DisplayClass26_0
		{
			[Token(Token = "0x4000C99")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Camera cam;

			[Token(Token = "0x4000C9A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public VrRig <>4__this;

			[Token(Token = "0x60010AA")]
			[Address(RVA = "0x1080D18", Offset = "0x1080D18", VA = "0x1080D18")]
			public <>c__DisplayClass26_0()
			{
			}

			[Token(Token = "0x60010AB")]
			[Address(RVA = "0x1080D20", Offset = "0x1080D20", VA = "0x1080D20")]
			internal void <Placemaker.Ui.UiMaster.IUiSetup.OnSetup>b__0(float x)
			{
			}
		}

		[Token(Token = "0x4000C7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public UiMaster master;

		[Token(Token = "0x4000C80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		public VrController left;

		[Token(Token = "0x4000C81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		public VrController right;

		[Token(Token = "0x4000C82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private TransformData current;

		[Token(Token = "0x4000C83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private TransformData target;

		[Token(Token = "0x4000C84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		public Transform head;

		[Token(Token = "0x4000C85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		public CommandFeedbacker undoFeedbacker;

		[Token(Token = "0x4000C86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		public CommandFeedbacker redoFeedbacker;

		[Token(Token = "0x4000C87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private Transform dummy;

		[Token(Token = "0x4000C88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public GripState oldGripState;

		[Token(Token = "0x4000C89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		public GripState newGripState;

		[Token(Token = "0x4000C8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Matrix4x4 startGripMatrix;

		[Token(Token = "0x4000C8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private Matrix4x4 lerpRefMatrix;

		[Token(Token = "0x4000C8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public VrSideMenu menu;

		[Token(Token = "0x4000C8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public VrSaveMenu saveMenu;

		[Token(Token = "0x4000C8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public XROrigin xrOrigin;

		[Token(Token = "0x4000C8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public LayerMask defaultCullingMask;

		[Token(Token = "0x4000C90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[SerializeField]
		private Transform sideSaveMenuTransform;

		[Token(Token = "0x4000C91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly InputFeatureUsage<bool>[] k_Vec2UsageBoolList;

		[Token(Token = "0x600109E")]
		[Address(RVA = "0xBA0C0C", Offset = "0xBA0C0C", VA = "0xBA0C0C")]
		private TransformData Lerp(TransformData t0, TransformData t1, float t)
		{
			return default(TransformData);
		}

		[Token(Token = "0x600109F")]
		[Address(RVA = "0xBA0D08", Offset = "0xBA0D08", VA = "0xBA0D08")]
		private void Update()
		{
		}

		[Token(Token = "0x60010A0")]
		[Address(RVA = "0xBA1648", Offset = "0xBA1648", VA = "0xBA1648", Slot = "4")]
		private void Placemaker.Ui.UiMaster.IUiSetup.OnStart(UiMaster master)
		{
		}

		[Token(Token = "0x60010A1")]
		[Address(RVA = "0xBA16B8", Offset = "0xBA16B8", VA = "0xBA16B8")]
		public void ToggleSideSaveMenu()
		{
		}

		[Token(Token = "0x60010A2")]
		[Address(RVA = "0xBA16C0", Offset = "0xBA16C0", VA = "0xBA16C0")]
		public void ToggleSaveMenu(VrController vrController)
		{
		}

		[Token(Token = "0x60010A3")]
		[Address(RVA = "0xBA18C8", Offset = "0xBA18C8", VA = "0xBA18C8", Slot = "5")]
		private void Placemaker.Ui.UiMaster.IUiSetup.OnSetup(UiMaster master)
		{
		}

		[Token(Token = "0x60010A4")]
		[Address(RVA = "0xBA1B40", Offset = "0xBA1B40", VA = "0xBA1B40")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x6FC3C4", Offset = "0x6FC3C4")]
		private void OnBoundsLoaded()
		{
		}

		[Token(Token = "0x60010A5")]
		[Address(RVA = "0xBA21A4", Offset = "0xBA21A4", VA = "0xBA21A4", Slot = "6")]
		private void Placemaker.SceneProcessing.IOnScenePostProcess.OnScenePostProcess(bool isBuild, TargetPlatformFlags platform)
		{
		}

		[Token(Token = "0x60010A6")]
		[Address(RVA = "0xBA2A64", Offset = "0xBA2A64", VA = "0xBA2A64")]
		public VrRig()
		{
		}
	}
	[Token(Token = "0x20001EE")]
	public class VrSavePage : MonoBehaviour
	{
		[Token(Token = "0x4000C9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public VrSaveMenu vrSaveMenu;

		[Token(Token = "0x4000C9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UpdateState shift;

		[Token(Token = "0x4000C9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UpdateState visible;

		[NonSerialized]
		[Token(Token = "0x4000C9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool isSetup;

		[Token(Token = "0x4000C9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public int index;

		[Token(Token = "0x60010AC")]
		[Address(RVA = "0xBA3D08", Offset = "0xBA3D08", VA = "0xBA3D08")]
		public void Setup()
		{
		}

		[Token(Token = "0x60010AD")]
		[Address(RVA = "0xBA42F4", Offset = "0xBA42F4", VA = "0xBA42F4")]
		public VrSavePage()
		{
		}

		[Token(Token = "0x60010AE")]
		[Address(RVA = "0xBA42FC", Offset = "0xBA42FC", VA = "0xBA42FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FC3FC", Offset = "0x6FC3FC")]
		private void <Setup>b__5_0(float x)
		{
		}

		[Token(Token = "0x60010AF")]
		[Address(RVA = "0xBA4384", Offset = "0xBA4384", VA = "0xBA4384")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FC40C", Offset = "0x6FC40C")]
		private void <Setup>b__5_1(int oldIndex, int newIndex, int indexDelta)
		{
		}
	}
	[Token(Token = "0x20001EF")]
	public class VrSideMenu : MonoBehaviour, UiMaster.IUiSetup
	{
		[Token(Token = "0x4000CA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private UiMaster master;

		[Token(Token = "0x4000CA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UpdateState visible;

		[Token(Token = "0x60010B0")]
		[Address(RVA = "0xBA44A0", Offset = "0xBA44A0", VA = "0xBA44A0", Slot = "5")]
		private void Placemaker.Ui.UiMaster.IUiSetup.OnSetup(UiMaster master)
		{
		}

		[Token(Token = "0x60010B1")]
		[Address(RVA = "0xBA457C", Offset = "0xBA457C", VA = "0xBA457C", Slot = "4")]
		private void Placemaker.Ui.UiMaster.IUiSetup.OnStart(UiMaster master)
		{
		}

		[Token(Token = "0x60010B2")]
		[Address(RVA = "0xBA4584", Offset = "0xBA4584", VA = "0xBA4584")]
		public VrSideMenu()
		{
		}
	}
	[Token(Token = "0x20001F0")]
	public class VrStickPalette : MonoBehaviour, UiMaster.IUiSetup
	{
		[Token(Token = "0x4000CA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private UiMaster master;

		[Token(Token = "0x4000CA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VoxelType currentVoxelType;

		[Token(Token = "0x4000CA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private int currentIndex;

		[Token(Token = "0x4000CA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UpdateState offset;

		[Token(Token = "0x4000CA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int count;

		[Token(Token = "0x4000CA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int doubleCount;

		[Token(Token = "0x4000CA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public List<VrStickPaletteBall> balls;

		[Token(Token = "0x4000CA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public VrController vrController;

		[Token(Token = "0x4000CAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public RapidButton rapidButton;

		[Token(Token = "0x60010B3")]
		[Address(RVA = "0xBA458C", Offset = "0xBA458C", VA = "0xBA458C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x6FC41C", Offset = "0x6FC41C")]
		public void Increment()
		{
		}

		[Token(Token = "0x60010B4")]
		[Address(RVA = "0xBA4650", Offset = "0xBA4650", VA = "0xBA4650")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x6FC454", Offset = "0x6FC454")]
		public void Decrement()
		{
		}

		[Token(Token = "0x60010B5")]
		[Address(RVA = "0xBA4594", Offset = "0xBA4594", VA = "0xBA4594")]
		public void Change(int delta)
		{
		}

		[Token(Token = "0x60010B6")]
		[Address(RVA = "0xBA47E8", Offset = "0xBA47E8", VA = "0xBA47E8", Slot = "5")]
		private void Placemaker.Ui.UiMaster.IUiSetup.OnSetup(UiMaster master)
		{
		}

		[Token(Token = "0x60010B7")]
		[Address(RVA = "0xBA49BC", Offset = "0xBA49BC", VA = "0xBA49BC", Slot = "4")]
		private void Placemaker.Ui.UiMaster.IUiSetup.OnStart(UiMaster master)
		{
		}

		[Token(Token = "0x60010B8")]
		[Address(RVA = "0xBA4BFC", Offset = "0xBA4BFC", VA = "0xBA4BFC")]
		public void PickColor(VoxelType voxelType)
		{
		}

		[Token(Token = "0x60010B9")]
		[Address(RVA = "0xBA4658", Offset = "0xBA4658", VA = "0xBA4658")]
		private void MaybeSaveColor(VoxelType voxelType)
		{
		}

		[Token(Token = "0x60010BA")]
		[Address(RVA = "0xBA4D38", Offset = "0xBA4D38", VA = "0xBA4D38")]
		public VrStickPalette()
		{
		}

		[Token(Token = "0x60010BB")]
		[Address(RVA = "0xBA4DF4", Offset = "0xBA4DF4", VA = "0xBA4DF4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FC48C", Offset = "0x6FC48C")]
		private void <Placemaker.Ui.UiMaster.IUiSetup.OnSetup>b__12_0(float target)
		{
		}

		[Token(Token = "0x60010BC")]
		[Address(RVA = "0xBA4E48", Offset = "0xBA4E48", VA = "0xBA4E48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FC49C", Offset = "0x6FC49C")]
		private void <Placemaker.Ui.UiMaster.IUiSetup.OnSetup>g__PosFunction|12_1(float x)
		{
		}
	}
	[Token(Token = "0x20001F1")]
	public class VrStickPaletteBall : MonoBehaviour, UiMaster.IUiSetup
	{
		[Token(Token = "0x4000CAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public VoxelType voxelType;

		[Token(Token = "0x4000CAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UpdateState scaleState;

		[Token(Token = "0x60010BD")]
		[Address(RVA = "0xBA51BC", Offset = "0xBA51BC", VA = "0xBA51BC", Slot = "5")]
		private void Placemaker.Ui.UiMaster.IUiSetup.OnSetup(UiMaster master)
		{
		}

		[Token(Token = "0x60010BE")]
		[Address(RVA = "0xBA51C0", Offset = "0xBA51C0", VA = "0xBA51C0", Slot = "4")]
		private void Placemaker.Ui.UiMaster.IUiSetup.OnStart(UiMaster master)
		{
		}

		[Token(Token = "0x60010BF")]
		[Address(RVA = "0xBA51C4", Offset = "0xBA51C4", VA = "0xBA51C4")]
		public VrStickPaletteBall()
		{
		}
	}
	[Token(Token = "0x20001F2")]
	public class VrUiButton : MonoBehaviour, UiMaster.IUiSetup, IPointerDownHandler, IEventSystemHandler, IPointerUpHandler, IPointerEnterHandler, IPointerExitHandler, IPointerClickHandler
	{
		[Token(Token = "0x20001F3")]
		public enum State
		{
			[Token(Token = "0x4000CB3")]
			Hovered = 1,
			[Token(Token = "0x4000CB4")]
			Down = 2,
			[Token(Token = "0x4000CB5")]
			Disabled = 4
		}

		[Serializable]
		[Token(Token = "0x20001F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F0A18", Offset = "0x6F0A18")]
		private sealed class <>c
		{
			[Token(Token = "0x4000CB6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000CB7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static System.Action <>9__16_0;

			[Token(Token = "0x60010CC")]
			[Address(RVA = "0x1081AEC", Offset = "0x1081AEC", VA = "0x1081AEC")]
			public <>c()
			{
			}

			[Token(Token = "0x60010CD")]
			[Address(RVA = "0x1081AF4", Offset = "0x1081AF4", VA = "0x1081AF4")]
			internal void <.ctor>b__16_0()
			{
			}
		}

		[Token(Token = "0x4000CAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private UiMaster master;

		[Token(Token = "0x4000CAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int hoverMask;

		[Token(Token = "0x4000CAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int downMask;

		[Token(Token = "0x4000CB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public System.Action onClick;

		[Token(Token = "0x4000CB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public State state;

		[Token(Token = "0x60010C0")]
		[Address(RVA = "0xBA51CC", Offset = "0xBA51CC", VA = "0xBA51CC", Slot = "5")]
		private void Placemaker.Ui.UiMaster.IUiSetup.OnSetup(UiMaster master)
		{
		}

		[Token(Token = "0x60010C1")]
		[Address(RVA = "0xBA51D4", Offset = "0xBA51D4", VA = "0xBA51D4", Slot = "4")]
		private void Placemaker.Ui.UiMaster.IUiSetup.OnStart(UiMaster master)
		{
		}

		[Token(Token = "0x60010C2")]
		[Address(RVA = "0xBA51D8", Offset = "0xBA51D8", VA = "0xBA51D8", Slot = "8")]
		private void UnityEngine.EventSystems.IPointerEnterHandler.OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60010C3")]
		[Address(RVA = "0xBA52A4", Offset = "0xBA52A4", VA = "0xBA52A4", Slot = "9")]
		private void UnityEngine.EventSystems.IPointerExitHandler.OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60010C4")]
		[Address(RVA = "0xBA52F4", Offset = "0xBA52F4", VA = "0xBA52F4", Slot = "6")]
		private void UnityEngine.EventSystems.IPointerDownHandler.OnPointerDown(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60010C5")]
		[Address(RVA = "0xBA5340", Offset = "0xBA5340", VA = "0xBA5340", Slot = "7")]
		private void UnityEngine.EventSystems.IPointerUpHandler.OnPointerUp(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60010C6")]
		[Address(RVA = "0xBA53B4", Offset = "0xBA53B4", VA = "0xBA53B4", Slot = "10")]
		private void UnityEngine.EventSystems.IPointerClickHandler.OnPointerClick(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60010C7")]
		[Address(RVA = "0xBA5274", Offset = "0xBA5274", VA = "0xBA5274")]
		private bool ChangeState(State stateToChange, bool add)
		{
			return default(bool);
		}

		[Token(Token = "0x60010C8")]
		[Address(RVA = "0xBA5224", Offset = "0xBA5224", VA = "0xBA5224")]
		private bool ChangeMask(ref int mask, PointerEventData eventData, bool add)
		{
			return default(bool);
		}

		[Token(Token = "0x60010C9")]
		[Address(RVA = "0xBA53B8", Offset = "0xBA53B8", VA = "0xBA53B8")]
		public void Click()
		{
		}

		[Token(Token = "0x60010CA")]
		[Address(RVA = "0xBA53D4", Offset = "0xBA53D4", VA = "0xBA53D4")]
		public VrUiButton()
		{
		}
	}
}
namespace Placemaker.Quads
{
	[Serializable]
	[Token(Token = "0x20001F5")]
	public struct Quad
	{
		[Token(Token = "0x4000CB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		public byte quadIndex;

		[Token(Token = "0x4000CB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		[SerializeField]
		public int2 v0;

		[Token(Token = "0x4000CBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[SerializeField]
		public int2 v1;

		[Token(Token = "0x4000CBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		public int2 v2;

		[Token(Token = "0x4000CBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		public int2 v3;

		[Token(Token = "0x4000CBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		public float2 p0;

		[Token(Token = "0x4000CBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		public float2 p1;

		[Token(Token = "0x4000CBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		public float2 p2;

		[Token(Token = "0x4000CC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		public float2 p3;

		[Token(Token = "0x17000480")]
		public int2 hexPosSum
		{
			[Token(Token = "0x60010CE")]
			[Address(RVA = "0xD97538", Offset = "0xD97538", VA = "0xD97538")]
			get
			{
				return default(int2);
			}
		}

		[Token(Token = "0x17000481")]
		public float2 planePos
		{
			[Token(Token = "0x60010CF")]
			[Address(RVA = "0xD97580", Offset = "0xD97580", VA = "0xD97580")]
			get
			{
				return default(float2);
			}
		}

		[Token(Token = "0x60010D0")]
		[Address(RVA = "0xD975AC", Offset = "0xD975AC", VA = "0xD975AC")]
		public int2 GetVert(int index)
		{
			return default(int2);
		}

		[Token(Token = "0x60010D1")]
		[Address(RVA = "0xD97630", Offset = "0xD97630", VA = "0xD97630")]
		public float2 GetPlanePos(int index)
		{
			return default(float2);
		}

		[Token(Token = "0x60010D2")]
		[Address(RVA = "0xD976C8", Offset = "0xD976C8", VA = "0xD976C8")]
		public bool ContainsVert(int2 v)
		{
			return default(bool);
		}

		[Token(Token = "0x60010D3")]
		[Address(RVA = "0xD97740", Offset = "0xD97740", VA = "0xD97740")]
		public bool IsValid()
		{
			return default(bool);
		}

		[Token(Token = "0x60010D4")]
		[Address(RVA = "0xD9776C", Offset = "0xD9776C", VA = "0xD9776C")]
		public void Rotate()
		{
		}

		[Token(Token = "0x60010D5")]
		[Address(RVA = "0xD977A0", Offset = "0xD977A0", VA = "0xD977A0")]
		public void Rotate2()
		{
		}

		[Token(Token = "0x60010D6")]
		[Address(RVA = "0xD977C4", Offset = "0xD977C4", VA = "0xD977C4")]
		public void Rotate3()
		{
		}

		[Token(Token = "0x60010D7")]
		[Address(RVA = "0xD977F8", Offset = "0xD977F8", VA = "0xD977F8", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x20001F6")]
	public struct Vert
	{
		[Token(Token = "0x4000CC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		public int2 hexPos;

		[Token(Token = "0x4000CC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[SerializeField]
		public float2 planePos;

		[Token(Token = "0x4000CC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		public Quad q0;

		[Token(Token = "0x4000CC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		public Quad q1;

		[Token(Token = "0x4000CC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		public Quad q2;

		[Token(Token = "0x4000CC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[SerializeField]
		public Quad q3;

		[Token(Token = "0x4000CC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[SerializeField]
		public Quad q4;

		[Token(Token = "0x4000CC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
		[SerializeField]
		public Quad q5;

		[Token(Token = "0x4000CC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		[SerializeField]
		public sbyte quadCount;

		[Token(Token = "0x4000CCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
		[SerializeField]
		public float angle;

		[Token(Token = "0x17000482")]
		public float3 worldPos
		{
			[Token(Token = "0x60010D8")]
			[Address(RVA = "0x1BDD5F0", Offset = "0x1BDD5F0", VA = "0x1BDD5F0")]
			get
			{
				return default(float3);
			}
		}

		[Token(Token = "0x17000483")]
		public bool full
		{
			[Token(Token = "0x60010D9")]
			[Address(RVA = "0x1BDD668", Offset = "0x1BDD668", VA = "0x1BDD668")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000484")]
		public bool validPosition
		{
			[Token(Token = "0x60010DA")]
			[Address(RVA = "0x1BDD680", Offset = "0x1BDD680", VA = "0x1BDD680")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60010DB")]
		[Address(RVA = "0x1BDD690", Offset = "0x1BDD690", VA = "0x1BDD690")]
		public void AddQuad(Quad quad)
		{
		}

		[Token(Token = "0x60010DC")]
		[Address(RVA = "0x1BDDA38", Offset = "0x1BDDA38", VA = "0x1BDDA38")]
		public void SetQuad(int index, Quad quad)
		{
		}

		[Token(Token = "0x60010DD")]
		[Address(RVA = "0x1BDD9C8", Offset = "0x1BDD9C8", VA = "0x1BDD9C8")]
		public Quad GetQuad(int index)
		{
			return default(Quad);
		}

		[Token(Token = "0x60010DE")]
		[Address(RVA = "0x1BDDAA4", Offset = "0x1BDDAA4", VA = "0x1BDDAA4")]
		public bool ContainsVert(int2 v)
		{
			return default(bool);
		}
	}
}
namespace Placemaker.Quads.GridGeneration
{
	[Serializable]
	[Token(Token = "0x20001F7")]
	public class CustomGridPatch
	{
		[Token(Token = "0x4000CCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<int2> verts;

		[Token(Token = "0x4000CCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<byte> quads;

		[Token(Token = "0x4000CCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ushort quadTriCutoff;

		[Token(Token = "0x4000CCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
		public byte subdivisions;

		[Token(Token = "0x60010DF")]
		[Address(RVA = "0xB38DCC", Offset = "0xB38DCC", VA = "0xB38DCC")]
		public CustomGridPatch()
		{
		}
	}
	[Token(Token = "0x20001F8")]
	public class CustomGridImporter : MonoBehaviour
	{
		[Token(Token = "0x60010E0")]
		[Address(RVA = "0xB38BD8", Offset = "0xB38BD8", VA = "0xB38BD8")]
		public CustomGridImporter()
		{
		}
	}
	[Token(Token = "0x20001F9")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x6F0A28", Offset = "0x6F0A28")]
	public class CustomGridLibrary : ScriptableObject
	{
		[Token(Token = "0x4000CCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public List<CustomGridPatch> allCustomPatches;

		[Token(Token = "0x4000CD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<byte> genericPatches;

		[Token(Token = "0x4000CD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<byte> straightPatches;

		[Token(Token = "0x4000CD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<byte> centroidPatches;

		[Token(Token = "0x4000CD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public List<byte> centroidCurvePatches;

		[Token(Token = "0x60010E1")]
		[Address(RVA = "0xB38BE0", Offset = "0xB38BE0", VA = "0xB38BE0")]
		public CustomGridPatch GetRandom(List<byte> list, ref Unity.Mathematics.Random random)
		{
			return null;
		}

		[Token(Token = "0x60010E2")]
		[Address(RVA = "0xB38CC4", Offset = "0xB38CC4", VA = "0xB38CC4")]
		public CustomGridLibrary()
		{
		}
	}
	[Token(Token = "0x20001FA")]
	public static class GridConstants
	{
		[Token(Token = "0x4000CD4")]
		public const ushort hexScale = 12;

		[Token(Token = "0x4000CD5")]
		public const float hexInvScale = 1f / 12f;

		[Token(Token = "0x4000CD6")]
		public const float planeToHex = 8.22f;

		[Token(Token = "0x4000CD7")]
		public const float hexToPlane = 0.121654496f;

		[Token(Token = "0x4000CD8")]
		public const ushort hexDistance = 72;

		[Token(Token = "0x4000CD9")]
		public const ushort centroidScale = 32;
	}
	[Serializable]
	[Token(Token = "0x20001FB")]
	public class HexCluster
	{
		[Token(Token = "0x4000CDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int2 hexPos;

		[Token(Token = "0x4000CDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MotivationCounter motivations;

		[Token(Token = "0x4000CDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public byte relaxationSteps;

		[Token(Token = "0x4000CDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		public byte patchCount;

		[Token(Token = "0x4000CDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
		public bool done;

		[Token(Token = "0x4000CDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int3 patchVertOffsets;

		[Token(Token = "0x4000CE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<short> vertIndexes;

		[Token(Token = "0x4000CE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<float2> relaxedVerts;

		[Token(Token = "0x60010E3")]
		[Address(RVA = "0xB10AFC", Offset = "0xB10AFC", VA = "0xB10AFC")]
		public HexCluster()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001FC")]
	public class HexPatch
	{
		[Token(Token = "0x20001FD")]
		public enum State : byte
		{
			[Token(Token = "0x4000CEA")]
			Verts,
			[Token(Token = "0x4000CEB")]
			Triangulate,
			[Token(Token = "0x4000CEC")]
			Quadrangulate,
			[Token(Token = "0x4000CED")]
			Subdivide,
			[Token(Token = "0x4000CEE")]
			Sort,
			[Token(Token = "0x4000CEF")]
			Done
		}

		[Token(Token = "0x4000CE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int2 hexPos;

		[Token(Token = "0x4000CE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ushort quadTriCutoff;

		[Token(Token = "0x4000CE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<byte> quads;

		[Token(Token = "0x4000CE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<int2> verts;

		[Token(Token = "0x4000CE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public MotivationCounter motivations;

		[Token(Token = "0x4000CE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		public State state;

		[Token(Token = "0x4000CE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		public byte subdivisions;

		[Token(Token = "0x17000485")]
		public bool done
		{
			[Token(Token = "0x60010E4")]
			[Address(RVA = "0xB121F4", Offset = "0xB121F4", VA = "0xB121F4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60010E5")]
		[Address(RVA = "0xB12204", Offset = "0xB12204", VA = "0xB12204")]
		public HexPatch()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001FE")]
	public struct MotivationCounter : IEnumerable<int2>, IEnumerable
	{
		[Token(Token = "0x20001FF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F0A38", Offset = "0x6F0A38")]
		private sealed class <GetEnumerator>d__3 : IEnumerator<int2>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000CF1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000CF2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private int2 <>2__current;

			[Token(Token = "0x4000CF3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public MotivationCounter <>4__this;

			[Token(Token = "0x17000486")]
			private int2 System.Collections.Generic.IEnumerator<Unity.Mathematics.int2>.Current
			{
				[Token(Token = "0x60010ED")]
				[Address(RVA = "0x92968C", Offset = "0x92968C", VA = "0x92968C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return default(int2);
				}
			}

			[Token(Token = "0x17000487")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60010EF")]
				[Address(RVA = "0x9296D4", Offset = "0x9296D4", VA = "0x9296D4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60010EA")]
			[Address(RVA = "0x929644", Offset = "0x929644", VA = "0x929644")]
			[DebuggerHidden]
			public <GetEnumerator>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x60010EB")]
			[Address(RVA = "0x929670", Offset = "0x929670", VA = "0x929670", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60010EC")]
			[Address(RVA = "0x929674", Offset = "0x929674", VA = "0x929674", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60010EE")]
			[Address(RVA = "0x929694", Offset = "0x929694", VA = "0x929694", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000CF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public byte count;

		[Token(Token = "0x60010E6")]
		[Address(RVA = "0x9ED924", Offset = "0x9ED924", VA = "0x9ED924")]
		public int AddMotivation(int2 source)
		{
			return default(int);
		}

		[Token(Token = "0x60010E7")]
		[Address(RVA = "0x9ED93C", Offset = "0x9ED93C", VA = "0x9ED93C")]
		public int RemoveMotivation(int2 source)
		{
			return default(int);
		}

		[Token(Token = "0x60010E8")]
		[Address(RVA = "0x9ED954", Offset = "0x9ED954", VA = "0x9ED954", Slot = "4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6FC4AC", Offset = "0x6FC4AC")]
		public IEnumerator<int2> GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x60010E9")]
		[Address(RVA = "0x9ED9C4", Offset = "0x9ED9C4", VA = "0x9ED9C4", Slot = "5")]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}
	}
}
namespace Placemaker.Props
{
	[Token(Token = "0x2000200")]
	public struct PropModifierStruct
	{
		[Token(Token = "0x4000CF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Square square;

		[Token(Token = "0x4000CF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Qube qube;

		[Token(Token = "0x4000CF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector4 ts;

		[Token(Token = "0x4000CF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public byte cornerIndex;

		[Token(Token = "0x4000CF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public OrientedModuleSides orientedModule;

		[Token(Token = "0x4000CF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public byte cornerValue;
	}
	[Token(Token = "0x2000201")]
	public interface IPropModifier
	{
		[Token(Token = "0x60010F0")]
		void Apply(WorldMaster master, ref Unity.Mathematics.Random random, PropModifierStruct propModifierStruct);

		[Token(Token = "0x60010F1")]
		void Reset(WorldMaster master, Transform srcT);
	}
	[Token(Token = "0x2000202")]
	public interface IPropEnable
	{
		[Token(Token = "0x60010F2")]
		void OnFirstEnable(WorldMaster master);

		[Token(Token = "0x60010F3")]
		void OnEnable(WorldMaster master);

		[Token(Token = "0x60010F4")]
		void OnDisable(WorldMaster master);
	}
	[Token(Token = "0x2000203")]
	public class PropAchievements : MonoBehaviour
	{
		[Token(Token = "0x2000204")]
		public enum Achievement : byte
		{
			[Token(Token = "0x4000CFC")]
			None,
			[Token(Token = "0x4000CFD")]
			Garden,
			[Token(Token = "0x4000CFE")]
			Propeller,
			[Token(Token = "0x4000CFF")]
			Lighthouse,
			[Token(Token = "0x4000D00")]
			Spire,
			[Token(Token = "0x4000D01")]
			GardenSculpture,
			[Token(Token = "0x4000D02")]
			Hook,
			[Token(Token = "0x4000D03")]
			ChurchDoor,
			[Token(Token = "0x4000D04")]
			Count
		}

		[Token(Token = "0x4000CFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<int> propCounts;

		[Token(Token = "0x60010F5")]
		[Address(RVA = "0xE0C99C", Offset = "0xE0C99C", VA = "0xE0C99C")]
		public void OnStart()
		{
		}

		[Token(Token = "0x60010F6")]
		[Address(RVA = "0xE0CA30", Offset = "0xE0CA30", VA = "0xE0CA30")]
		public void PropEnabled(Achievement achievement)
		{
		}

		[Token(Token = "0x60010F7")]
		[Address(RVA = "0xE0CACC", Offset = "0xE0CACC", VA = "0xE0CACC")]
		public void PropDisabled(Achievement achievement)
		{
		}

		[Token(Token = "0x60010F8")]
		[Address(RVA = "0xE0CB68", Offset = "0xE0CB68", VA = "0xE0CB68")]
		public void TriggerAchievements()
		{
		}

		[Token(Token = "0x60010F9")]
		[Address(RVA = "0xE0CDD4", Offset = "0xE0CDD4", VA = "0xE0CDD4")]
		public PropAchievements()
		{
		}
	}
	[Token(Token = "0x2000205")]
	public class PropClock : MonoBehaviour
	{
		[Token(Token = "0x4000D05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform hour;

		[Token(Token = "0x4000D06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform minute;

		[Token(Token = "0x4000D07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int frame;

		[Token(Token = "0x4000D08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static Quaternion hourQ;

		[Token(Token = "0x4000D09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private static Quaternion minuteQ;

		[Token(Token = "0x60010FA")]
		[Address(RVA = "0xE0CE50", Offset = "0xE0CE50", VA = "0xE0CE50")]
		private void Update()
		{
		}

		[Token(Token = "0x60010FB")]
		[Address(RVA = "0xE0D040", Offset = "0xE0D040", VA = "0xE0D040")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x60010FC")]
		[Address(RVA = "0xE0D130", Offset = "0xE0D130", VA = "0xE0D130")]
		public PropClock()
		{
		}
	}
	[Token(Token = "0x2000206")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x6F0A48", Offset = "0x6F0A48")]
	public class PropCollider : MonoBehaviour
	{
		[Token(Token = "0x2000207")]
		public enum Layer : byte
		{
			[Token(Token = "0x4000D0E")]
			Object,
			[Token(Token = "0x4000D0F")]
			Door,
			[Token(Token = "0x4000D10")]
			Path,
			[Token(Token = "0x4000D11")]
			Anchor,
			[Token(Token = "0x4000D12")]
			InWall,
			[Token(Token = "0x4000D13")]
			Step,
			[Token(Token = "0x4000D14")]
			Unclear6,
			[Token(Token = "0x4000D15")]
			Self
		}

		[Token(Token = "0x4000D0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Layer layer;

		[Token(Token = "0x4000D0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Bounds localBounds;

		[Token(Token = "0x4000D0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Bounds worldBounds;

		[Token(Token = "0x60010FE")]
		[Address(RVA = "0xE0D188", Offset = "0xE0D188", VA = "0xE0D188")]
		public static bool Collides(Layer layer0, Layer layer1)
		{
			return default(bool);
		}

		[Token(Token = "0x60010FF")]
		[Address(RVA = "0xE0D220", Offset = "0xE0D220", VA = "0xE0D220")]
		public Matrix4x4 GetMatrix()
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x6001100")]
		[Address(RVA = "0xE0D4A0", Offset = "0xE0D4A0", VA = "0xE0D4A0")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x6FC55C", Offset = "0x6FC55C")]
		public void CalculateWorldBounds()
		{
		}

		[Token(Token = "0x6001101")]
		[Address(RVA = "0xE0D610", Offset = "0xE0D610", VA = "0xE0D610")]
		public PropCollider()
		{
		}
	}
	[Token(Token = "0x2000208")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x6F0AA8", Offset = "0x6F0AA8")]
	public class PropColoredMesh : MonoBehaviour
	{
		[Token(Token = "0x4000D16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Vector3 samplePos;

		[Token(Token = "0x6001102")]
		[Address(RVA = "0xE0D618", Offset = "0xE0D618", VA = "0xE0D618")]
		public PropColoredMesh()
		{
		}
	}
	[Token(Token = "0x2000209")]
	public struct PropRadiusIterator<T> : IEnumerator<T>, IEnumerator, IDisposable, IEnumerable<T>, IEnumerable where T : Component
	{
		[Token(Token = "0x4000D17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private PropPlacer propPlacer;

		[Token(Token = "0x4000D18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float sqRadius;

		[Token(Token = "0x4000D19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Vector3 pos;

		[Token(Token = "0x4000D1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int x;

		[Token(Token = "0x4000D1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int y;

		[Token(Token = "0x4000D1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int z;

		[Token(Token = "0x4000D1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int i;

		[Token(Token = "0x4000D1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private List<PropCollider> propColliders;

		[Token(Token = "0x4000D1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int3 min;

		[Token(Token = "0x4000D20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int3 max;

		[Token(Token = "0x4000D21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T current;

		[Token(Token = "0x17000488")]
		private T System.Collections.Generic.IEnumerator<T>.Current
		{
			[Token(Token = "0x6001103")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000489")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001104")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001105")]
		public PropRadiusIterator(Vector3 pos, float radius, PropPlacer propPlacer)
		{
		}

		[Token(Token = "0x6001106")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001107")]
		private bool System.Collections.IEnumerator.MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001108")]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001109")]
		private IEnumerator<T> System.Collections.Generic.IEnumerable<T>.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x600110A")]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x600110B")]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}
	[Token(Token = "0x200020A")]
	public class PropMeshAnimator : MonoBehaviour
	{
		[Token(Token = "0x4000D22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private WorldMaster master;

		[Token(Token = "0x600110C")]
		[Address(RVA = "0xE0D620", Offset = "0xE0D620", VA = "0xE0D620")]
		public void OnLateUpdate()
		{
		}

		[Token(Token = "0x600110D")]
		[Address(RVA = "0xE0D7F8", Offset = "0xE0D7F8", VA = "0xE0D7F8")]
		public void OnReset()
		{
		}

		[Token(Token = "0x600110E")]
		[Address(RVA = "0xE0D94C", Offset = "0xE0D94C", VA = "0xE0D94C")]
		public void OnTurnedOff(PropMeshReference propMeshReference)
		{
		}

		[Token(Token = "0x600110F")]
		[Address(RVA = "0xE0DF18", Offset = "0xE0DF18", VA = "0xE0DF18")]
		private bool PosInView(PropMeshReference propMeshReference)
		{
			return default(bool);
		}

		[Token(Token = "0x6001110")]
		[Address(RVA = "0xE0E008", Offset = "0xE0E008", VA = "0xE0E008")]
		public void OnTurnedOn(PropMeshReference propMeshReference)
		{
		}

		[Token(Token = "0x6001111")]
		[Address(RVA = "0xE0E6B8", Offset = "0xE0E6B8", VA = "0xE0E6B8")]
		public void OnDone(PropMeshReference propMeshReference)
		{
		}

		[Token(Token = "0x6001112")]
		[Address(RVA = "0xE0E904", Offset = "0xE0E904", VA = "0xE0E904")]
		public PropMeshAnimator()
		{
		}
	}
	[Token(Token = "0x200020B")]
	public class PropMeshOutline : MonoBehaviour
	{
		[Token(Token = "0x6001113")]
		[Address(RVA = "0xE0E90C", Offset = "0xE0E90C", VA = "0xE0E90C")]
		public PropMeshOutline()
		{
		}
	}
	[Token(Token = "0x200020C")]
	[DisallowMultipleComponent]
	public class PropMeshReference : MonoBehaviour, IPropEnable
	{
		[Serializable]
		[Token(Token = "0x200020D")]
		public class Item
		{
			[Token(Token = "0x4000D26")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public MeshFilter mf;

			[Token(Token = "0x4000D27")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public BigMeshPart bigMeshPart;

			[Token(Token = "0x4000D28")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool shouldBeBatched;

			[Token(Token = "0x6001119")]
			[Address(RVA = "0x92B428", Offset = "0x92B428", VA = "0x92B428")]
			public Item()
			{
			}
		}

		[Token(Token = "0x4000D23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<Item> items;

		[Token(Token = "0x4000D24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WorldMaster worldMaster;

		[Token(Token = "0x4000D25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float time;

		[Token(Token = "0x6001114")]
		[Address(RVA = "0xE0E914", Offset = "0xE0E914", VA = "0xE0E914", Slot = "4")]
		private void Placemaker.Props.IPropEnable.OnFirstEnable(WorldMaster master)
		{
		}

		[Token(Token = "0x6001115")]
		[Address(RVA = "0xE0E91C", Offset = "0xE0E91C", VA = "0xE0E91C", Slot = "5")]
		private void Placemaker.Props.IPropEnable.OnEnable(WorldMaster master)
		{
		}

		[Token(Token = "0x6001116")]
		[Address(RVA = "0xE0E944", Offset = "0xE0E944", VA = "0xE0E944", Slot = "6")]
		private void Placemaker.Props.IPropEnable.OnDisable(WorldMaster master)
		{
		}

		[Token(Token = "0x6001117")]
		[Address(RVA = "0xE0E96C", Offset = "0xE0E96C", VA = "0xE0E96C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001118")]
		[Address(RVA = "0xE0EBC8", Offset = "0xE0EBC8", VA = "0xE0EBC8")]
		public PropMeshReference()
		{
		}
	}
	[Token(Token = "0x200020E")]
	public class PropNgonScaler : MonoBehaviour, IPropModifier
	{
		[Token(Token = "0x600111A")]
		[Address(RVA = "0xE0EC40", Offset = "0xE0EC40", VA = "0xE0EC40", Slot = "4")]
		private void Placemaker.Props.IPropModifier.Apply(WorldMaster master, ref Unity.Mathematics.Random random, PropModifierStruct propModifierStruct)
		{
		}

		[Token(Token = "0x600111B")]
		[Address(RVA = "0xE0EF14", Offset = "0xE0EF14", VA = "0xE0EF14", Slot = "5")]
		private void Placemaker.Props.IPropModifier.Reset(WorldMaster master, Transform srcT)
		{
		}

		[Token(Token = "0x600111C")]
		[Address(RVA = "0xE0EFC0", Offset = "0xE0EFC0", VA = "0xE0EFC0")]
		public PropNgonScaler()
		{
		}
	}
	[Token(Token = "0x200020F")]
	public class PropNode : MonoBehaviour, IComparable<PropNode>, IComparer<PropNode>
	{
		[Token(Token = "0x4000D29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6F6BA8", Offset = "0x6F6BA8")]
		public float priority;

		[Token(Token = "0x4000D2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public ManySoundsManager.SoundType appearanceSound;

		[Token(Token = "0x4000D2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PropAchievements.Achievement achievement;

		[Token(Token = "0x4000D2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6F6BE0", Offset = "0x6F6BE0")]
		public bool turnedOn;

		[Token(Token = "0x4000D2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
		public bool inDict;

		[Token(Token = "0x4000D2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
		public bool hasBeenTurnedOn;

		[Token(Token = "0x4000D2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public short hideCount;

		[Token(Token = "0x4000D30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
		public short motivations;

		[Token(Token = "0x4000D31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<PropNode> relations;

		[Token(Token = "0x4000D32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public byte parentCount;

		[Token(Token = "0x4000D33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		public byte childCount;

		[Token(Token = "0x4000D34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		public byte overlapCount;

		[Token(Token = "0x4000D35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
		public byte moteveeCount;

		[Token(Token = "0x4000D36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public byte anchorCount;

		[Token(Token = "0x1700048A")]
		public int parentIndex
		{
			[Token(Token = "0x600111D")]
			[Address(RVA = "0xE0EFC8", Offset = "0xE0EFC8", VA = "0xE0EFC8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700048B")]
		public int childIndex
		{
			[Token(Token = "0x600111E")]
			[Address(RVA = "0xE0EFD0", Offset = "0xE0EFD0", VA = "0xE0EFD0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700048C")]
		public int overlapIndex
		{
			[Token(Token = "0x600111F")]
			[Address(RVA = "0xE0EFD8", Offset = "0xE0EFD8", VA = "0xE0EFD8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700048D")]
		public int moteveeIndex
		{
			[Token(Token = "0x6001120")]
			[Address(RVA = "0xE0EFE8", Offset = "0xE0EFE8", VA = "0xE0EFE8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700048E")]
		public int anchorIndex
		{
			[Token(Token = "0x6001121")]
			[Address(RVA = "0xE0F000", Offset = "0xE0F000", VA = "0xE0F000")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6001122")]
		[Address(RVA = "0xE0F020", Offset = "0xE0F020", VA = "0xE0F020", Slot = "4")]
		private int System.IComparable<Placemaker.Props.PropNode>.CompareTo(PropNode other)
		{
			return default(int);
		}

		[Token(Token = "0x6001123")]
		[Address(RVA = "0xE0F040", Offset = "0xE0F040", VA = "0xE0F040")]
		public void AddParent(PropNode node)
		{
		}

		[Token(Token = "0x6001124")]
		[Address(RVA = "0xE0F0B8", Offset = "0xE0F0B8", VA = "0xE0F0B8")]
		public void AddChild(PropNode node)
		{
		}

		[Token(Token = "0x6001125")]
		[Address(RVA = "0xE0F138", Offset = "0xE0F138", VA = "0xE0F138")]
		public void AddOverlap(PropNode node)
		{
		}

		[Token(Token = "0x6001126")]
		[Address(RVA = "0xE0F1C0", Offset = "0xE0F1C0", VA = "0xE0F1C0")]
		public void AddMotevee(PropNode node)
		{
		}

		[Token(Token = "0x6001127")]
		[Address(RVA = "0xE0F250", Offset = "0xE0F250", VA = "0xE0F250")]
		public void AddAnchor(PropNode node)
		{
		}

		[Token(Token = "0x6001128")]
		[Address(RVA = "0xE0F2E8", Offset = "0xE0F2E8", VA = "0xE0F2E8")]
		public void RemoveParent(PropNode node)
		{
		}

		[Token(Token = "0x6001129")]
		[Address(RVA = "0xE0F360", Offset = "0xE0F360", VA = "0xE0F360")]
		public void RemoveChild(PropNode node)
		{
		}

		[Token(Token = "0x600112A")]
		[Address(RVA = "0xE0F3D8", Offset = "0xE0F3D8", VA = "0xE0F3D8")]
		public void RemoveOverlap(PropNode node)
		{
		}

		[Token(Token = "0x600112B")]
		[Address(RVA = "0xE0F450", Offset = "0xE0F450", VA = "0xE0F450")]
		public void RemoveMotevee(PropNode node)
		{
		}

		[Token(Token = "0x600112C")]
		[Address(RVA = "0xE0F4C8", Offset = "0xE0F4C8", VA = "0xE0F4C8")]
		public void RemoveAnchor(PropNode node)
		{
		}

		[Token(Token = "0x600112D")]
		[Address(RVA = "0xE0F540", Offset = "0xE0F540", VA = "0xE0F540", Slot = "5")]
		private int System.Collections.Generic.IComparer<Placemaker.Props.PropNode>.Compare(PropNode x, PropNode y)
		{
			return default(int);
		}

		[Token(Token = "0x600112E")]
		[Address(RVA = "0xE0F568", Offset = "0xE0F568", VA = "0xE0F568")]
		public void InserOverlap(PropNode node)
		{
		}

		[Token(Token = "0x600112F")]
		[Address(RVA = "0xE0F620", Offset = "0xE0F620", VA = "0xE0F620")]
		public PropNode()
		{
		}
	}
	[Token(Token = "0x2000210")]
	public class PropPropeller : MonoBehaviour, IPropModifier
	{
		[Token(Token = "0x4000D37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool forward;

		[Token(Token = "0x4000D38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject waterSplashEffect;

		[Token(Token = "0x6001130")]
		[Address(RVA = "0xD9585C", Offset = "0xD9585C", VA = "0xD9585C", Slot = "4")]
		private void Placemaker.Props.IPropModifier.Apply(WorldMaster master, ref Unity.Mathematics.Random random, PropModifierStruct propModifierStruct)
		{
		}

		[Token(Token = "0x6001131")]
		[Address(RVA = "0xD9597C", Offset = "0xD9597C", VA = "0xD9597C", Slot = "5")]
		private void Placemaker.Props.IPropModifier.Reset(WorldMaster master, Transform srcT)
		{
		}

		[Token(Token = "0x6001132")]
		[Address(RVA = "0xD95980", Offset = "0xD95980", VA = "0xD95980")]
		private void Update()
		{
		}

		[Token(Token = "0x6001133")]
		[Address(RVA = "0xD959FC", Offset = "0xD959FC", VA = "0xD959FC")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6001134")]
		[Address(RVA = "0xD95AEC", Offset = "0xD95AEC", VA = "0xD95AEC")]
		public PropPropeller()
		{
		}
	}
	[Token(Token = "0x2000211")]
	public class PropReference : MonoBehaviour
	{
		[Token(Token = "0x4000D39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Prop prop;

		[Token(Token = "0x4000D3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public byte prioAdd;

		[Token(Token = "0x6001135")]
		[Address(RVA = "0xD95AF4", Offset = "0xD95AF4", VA = "0xD95AF4")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x6FC594", Offset = "0x6FC594")]
		private void NameAfterProps()
		{
		}

		[Token(Token = "0x6001136")]
		[Address(RVA = "0xD95B90", Offset = "0xD95B90", VA = "0xD95B90")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6001137")]
		[Address(RVA = "0xD960B4", Offset = "0xD960B4", VA = "0xD960B4")]
		private void RecursiveDraw(Transform t)
		{
		}

		[Token(Token = "0x6001138")]
		[Address(RVA = "0xD960B8", Offset = "0xD960B8", VA = "0xD960B8")]
		public PropReference()
		{
		}
	}
	[Token(Token = "0x2000212")]
	public class PropTransformer : MonoBehaviour, IPropModifier
	{
		[Token(Token = "0x4000D3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool fitInSquare;

		[Token(Token = "0x4000D3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float scaleVariance;

		[Token(Token = "0x4000D3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float rotationVariance;

		[Token(Token = "0x4000D3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float3 posVariance;

		[Token(Token = "0x6001139")]
		[Address(RVA = "0xD960C0", Offset = "0xD960C0", VA = "0xD960C0", Slot = "4")]
		private void Placemaker.Props.IPropModifier.Apply(WorldMaster master, ref Unity.Mathematics.Random random, PropModifierStruct propModifierStruct)
		{
		}

		[Token(Token = "0x600113A")]
		[Address(RVA = "0xD963B0", Offset = "0xD963B0", VA = "0xD963B0", Slot = "5")]
		private void Placemaker.Props.IPropModifier.Reset(WorldMaster master, Transform srcT)
		{
		}

		[Token(Token = "0x600113B")]
		[Address(RVA = "0xD9645C", Offset = "0xD9645C", VA = "0xD9645C")]
		public PropTransformer()
		{
		}
	}
	[Token(Token = "0x2000213")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x6F0B18", Offset = "0x6F0B18")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x6F0B18", Offset = "0x6F0B18")]
	public class PropWire : MonoBehaviour
	{
		[Token(Token = "0x4000D3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PropWireAnchor anchor0;

		[Token(Token = "0x4000D40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PropWireAnchor anchor1;

		[Token(Token = "0x600113C")]
		[Address(RVA = "0xD9646C", Offset = "0xD9646C", VA = "0xD9646C")]
		public void Setup()
		{
		}

		[Token(Token = "0x600113D")]
		[Address(RVA = "0xD96470", Offset = "0xD96470", VA = "0xD96470")]
		public PropWire()
		{
		}
	}
	[Token(Token = "0x2000214")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x6F0BAC", Offset = "0x6F0BAC")]
	public class PropWireAnchor : MonoBehaviour
	{
		[Token(Token = "0x4000D41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PropWire srcWire;

		[Token(Token = "0x4000D42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<PropWire> propWires;

		[Token(Token = "0x4000D43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public byte voxelType;

		[Token(Token = "0x4000D44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public PropNode wireConnectorNode;

		[Token(Token = "0x4000D45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector3 connectPos;

		[Token(Token = "0x600113E")]
		[Address(RVA = "0xD96478", Offset = "0xD96478", VA = "0xD96478")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x600113F")]
		[Address(RVA = "0xD965D8", Offset = "0xD965D8", VA = "0xD965D8")]
		public PropWireAnchor()
		{
		}
	}
	[Token(Token = "0x2000215")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x6F0C0C", Offset = "0x6F0C0C")]
	public class PropWireFlagMesh : MonoBehaviour, IPropModifier
	{
		[Token(Token = "0x4000D46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Vector4 uv;

		[Token(Token = "0x6001140")]
		[Address(RVA = "0xD96650", Offset = "0xD96650", VA = "0xD96650")]
		public void Setup(WorldMaster master, PropWire wire, float length)
		{
		}

		[Token(Token = "0x6001141")]
		[Address(RVA = "0xD96D5C", Offset = "0xD96D5C", VA = "0xD96D5C", Slot = "4")]
		private void Placemaker.Props.IPropModifier.Apply(WorldMaster master, ref Unity.Mathematics.Random random, PropModifierStruct propModifierStruct)
		{
		}

		[Token(Token = "0x6001142")]
		[Address(RVA = "0xD96D60", Offset = "0xD96D60", VA = "0xD96D60", Slot = "5")]
		private void Placemaker.Props.IPropModifier.Reset(WorldMaster master, Transform srcT)
		{
		}

		[Token(Token = "0x6001143")]
		[Address(RVA = "0xD96DFC", Offset = "0xD96DFC", VA = "0xD96DFC")]
		public PropWireFlagMesh()
		{
		}
	}
	[Token(Token = "0x2000216")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x6F0C6C", Offset = "0x6F0C6C")]
	public class PropWireItalianMesh : MonoBehaviour, IPropModifier
	{
		[Token(Token = "0x6001144")]
		[Address(RVA = "0xD96E30", Offset = "0xD96E30", VA = "0xD96E30")]
		public void Setup(WorldMaster master, PropWire wire, float length)
		{
		}

		[Token(Token = "0x6001145")]
		[Address(RVA = "0xD97080", Offset = "0xD97080", VA = "0xD97080", Slot = "4")]
		private void Placemaker.Props.IPropModifier.Apply(WorldMaster master, ref Unity.Mathematics.Random random, PropModifierStruct propModifierStruct)
		{
		}

		[Token(Token = "0x6001146")]
		[Address(RVA = "0xD97084", Offset = "0xD97084", VA = "0xD97084", Slot = "5")]
		private void Placemaker.Props.IPropModifier.Reset(WorldMaster master, Transform srcT)
		{
		}

		[Token(Token = "0x6001147")]
		[Address(RVA = "0xD97088", Offset = "0xD97088", VA = "0xD97088")]
		public PropWireItalianMesh()
		{
		}
	}
	[Token(Token = "0x2000217")]
	public class ShiftingMesh : MonoBehaviour, IComparable<Vector3>, IComparable<ShiftingMesh>
	{
		[Token(Token = "0x4000D47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MeshFilter targetMeshFilter;

		[Token(Token = "0x6001148")]
		[Address(RVA = "0x10A9340", Offset = "0x10A9340", VA = "0x10A9340", Slot = "4")]
		private int System.IComparable<UnityEngine.Vector3>.CompareTo(Vector3 other)
		{
			return default(int);
		}

		[Token(Token = "0x6001149")]
		[Address(RVA = "0x10A939C", Offset = "0x10A939C", VA = "0x10A939C", Slot = "5")]
		private int System.IComparable<Placemaker.Props.ShiftingMesh>.CompareTo(ShiftingMesh other)
		{
			return default(int);
		}

		[Token(Token = "0x600114A")]
		[Address(RVA = "0x10A9410", Offset = "0x10A9410", VA = "0x10A9410")]
		public ShiftingMesh()
		{
		}
	}
	[Token(Token = "0x2000218")]
	public class WindVane : MonoBehaviour, IPropModifier
	{
		[Token(Token = "0x4000D48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform compass;

		[Token(Token = "0x4000D49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform rotator;

		[Token(Token = "0x600114B")]
		[Address(RVA = "0xBAA9E8", Offset = "0xBAA9E8", VA = "0xBAA9E8", Slot = "4")]
		private void Placemaker.Props.IPropModifier.Apply(WorldMaster master, ref Unity.Mathematics.Random random, PropModifierStruct propModifierStruct)
		{
		}

		[Token(Token = "0x600114C")]
		[Address(RVA = "0xBAAA4C", Offset = "0xBAAA4C", VA = "0xBAAA4C", Slot = "5")]
		private void Placemaker.Props.IPropModifier.Reset(WorldMaster master, Transform srcT)
		{
		}

		[Token(Token = "0x600114D")]
		[Address(RVA = "0xBAAA50", Offset = "0xBAAA50", VA = "0xBAAA50")]
		public WindVane()
		{
		}
	}
	[Token(Token = "0x2000219")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x6F0CCC", Offset = "0x6F0CCC")]
	public class Window : MonoBehaviour, IPropModifier
	{
		[Token(Token = "0x4000D4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Vector3 samplePos;

		[Token(Token = "0x4000D4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<Mesh> materialMeshes;

		[Token(Token = "0x4000D4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private MeshFilter mf0;

		[Token(Token = "0x4000D4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private MeshFilter mf1;

		[Token(Token = "0x600114E")]
		[Address(RVA = "0xBAAA58", Offset = "0xBAAA58", VA = "0xBAAA58")]
		public Mesh GetMeshWithVoxelType(Mesh srcMesh, byte voxelType, int variation)
		{
			return null;
		}

		[Token(Token = "0x600114F")]
		[Address(RVA = "0xBAAECC", Offset = "0xBAAECC", VA = "0xBAAECC", Slot = "4")]
		private void Placemaker.Props.IPropModifier.Apply(WorldMaster master, ref Unity.Mathematics.Random random, PropModifierStruct propModifierStruct)
		{
		}

		[Token(Token = "0x6001150")]
		[Address(RVA = "0xBAB19C", Offset = "0xBAB19C", VA = "0xBAB19C", Slot = "5")]
		private void Placemaker.Props.IPropModifier.Reset(WorldMaster master, Transform srcT)
		{
		}

		[Token(Token = "0x6001151")]
		[Address(RVA = "0xBAB1A0", Offset = "0xBAB1A0", VA = "0xBAB1A0")]
		public Window()
		{
		}
	}
}
namespace Placemaker.Modules
{
	[Token(Token = "0x200021A")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x6F0D2C", Offset = "0x6F0D2C")]
	public class ModuleLibrary : ScriptableObject
	{
		[Token(Token = "0x4000D4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<uint> waterSides;

		[Token(Token = "0x4000D4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<Module> modules;

		[Token(Token = "0x4000D50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<DecorModule> decorModules;

		[Token(Token = "0x4000D51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<CornerLookup> cornerLookups;

		[Token(Token = "0x4000D52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public List<SideProfile> sideLookups;

		[Token(Token = "0x4000D53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public List<ModuleMesh> moduleMeshes;

		[Token(Token = "0x4000D54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public List<int> decorOverlaps;

		[Token(Token = "0x4000D55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public ByteFloat2 groundUv0;

		[Token(Token = "0x4000D56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
		public ByteFloat2 groundUv1;

		[Token(Token = "0x4000D57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Dictionary<ByteQube, int> cornerDict;

		[Token(Token = "0x6001153")]
		[Address(RVA = "0x9EA214", Offset = "0x9EA214", VA = "0x9EA214")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001154")]
		[Address(RVA = "0x9EA218", Offset = "0x9EA218", VA = "0x9EA218")]
		public void Setup()
		{
		}

		[Token(Token = "0x6001155")]
		[Address(RVA = "0x9EA350", Offset = "0x9EA350", VA = "0x9EA350")]
		public bool GetDecorOverlap(OrientedModule decor0, OrientedModule decor1)
		{
			return default(bool);
		}

		[Token(Token = "0x6001156")]
		[Address(RVA = "0x9EA458", Offset = "0x9EA458", VA = "0x9EA458")]
		public ModuleLibrary()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200021B")]
	public class CornerLookup
	{
		[Token(Token = "0x4000D58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ByteQube values;

		[Token(Token = "0x4000D59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<OrientedModule> orientedModules;

		[Token(Token = "0x6001157")]
		[Address(RVA = "0xB33F7C", Offset = "0xB33F7C", VA = "0xB33F7C")]
		public CornerLookup()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200021C")]
	public struct OrientedModule
	{
		[Token(Token = "0x4000D5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ushort moduleIndex;

		[Token(Token = "0x4000D5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
		[SerializeField]
		private byte flags;

		[Token(Token = "0x4000D5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly OrientedModule empty;

		[Token(Token = "0x1700048F")]
		public int orientation
		{
			[Token(Token = "0x6001158")]
			[Address(RVA = "0xE0511C", Offset = "0xE0511C", VA = "0xE0511C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001159")]
			[Address(RVA = "0xE05128", Offset = "0xE05128", VA = "0xE05128")]
			set
			{
			}
		}

		[Token(Token = "0x17000490")]
		public bool isDecor
		{
			[Token(Token = "0x600115A")]
			[Address(RVA = "0xE0513C", Offset = "0xE0513C", VA = "0xE0513C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600115B")]
			[Address(RVA = "0xE0514C", Offset = "0xE0514C", VA = "0xE0514C")]
			set
			{
			}
		}

		[Token(Token = "0x17000491")]
		public bool isEmpty
		{
			[Token(Token = "0x600115C")]
			[Address(RVA = "0xE05160", Offset = "0xE05160", VA = "0xE05160")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600115D")]
			[Address(RVA = "0xE05170", Offset = "0xE05170", VA = "0xE05170")]
			set
			{
			}
		}

		[Token(Token = "0x600115E")]
		[Address(RVA = "0xE05184", Offset = "0xE05184", VA = "0xE05184")]
		public static bool operator ==(OrientedModule a, OrientedModule b)
		{
			return default(bool);
		}

		[Token(Token = "0x600115F")]
		[Address(RVA = "0xE051AC", Offset = "0xE051AC", VA = "0xE051AC")]
		public static bool operator !=(OrientedModule a, OrientedModule b)
		{
			return default(bool);
		}

		[Token(Token = "0x6001160")]
		[Address(RVA = "0xE05238", Offset = "0xE05238", VA = "0xE05238", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6001161")]
		[Address(RVA = "0xE05308", Offset = "0xE05308", VA = "0xE05308", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6001162")]
		[Address(RVA = "0xE05324", Offset = "0xE05324", VA = "0xE05324", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x200021D")]
	public class OutlineUv
	{
		[Token(Token = "0x4000D5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public byte b;

		[Token(Token = "0x17000492")]
		public int x
		{
			[Token(Token = "0x6001164")]
			[Address(RVA = "0xE05478", Offset = "0xE05478", VA = "0xE05478")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001165")]
			[Address(RVA = "0xE0549C", Offset = "0xE0549C", VA = "0xE0549C")]
			set
			{
			}
		}

		[Token(Token = "0x17000493")]
		public int y
		{
			[Token(Token = "0x6001166")]
			[Address(RVA = "0xE05520", Offset = "0xE05520", VA = "0xE05520")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001167")]
			[Address(RVA = "0xE05544", Offset = "0xE05544", VA = "0xE05544")]
			set
			{
			}
		}

		[Token(Token = "0x17000494")]
		public Vector2 uv
		{
			[Token(Token = "0x6001168")]
			[Address(RVA = "0xE055C8", Offset = "0xE055C8", VA = "0xE055C8")]
			get
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x17000495")]
		public bool border
		{
			[Token(Token = "0x6001169")]
			[Address(RVA = "0xE05604", Offset = "0xE05604", VA = "0xE05604")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600116A")]
		[Address(RVA = "0xE05614", Offset = "0xE05614", VA = "0xE05614")]
		public OutlineUv()
		{
		}
	}
}
namespace Placemaker.Modules.Processing
{
	[Token(Token = "0x200021E")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x6F0D3C", Offset = "0x6F0D3C")]
	public class MappedMaterialSettings : ScriptableObject
	{
		[Token(Token = "0x4000D5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<MappedMaterial> mappedMaterials;

		[Token(Token = "0x600116B")]
		[Address(RVA = "0x9E426C", Offset = "0x9E426C", VA = "0x9E426C")]
		public MappedMaterialSettings()
		{
		}
	}
	[Token(Token = "0x200021F")]
	[SelectionBase]
	public class ModuleImporter : MonoBehaviour
	{
		[Token(Token = "0x4000D5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject input;

		[Token(Token = "0x4000D60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject toDisable;

		[Token(Token = "0x4000D61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ModuleLibrary moduleLibrary;

		[Token(Token = "0x4000D62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public MappedMaterialSettings mappedMaterialSettings;

		[Token(Token = "0x4000D63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public MeshFilter debugMeshFilter;

		[Token(Token = "0x4000D64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Transform prefabContainer;

		[Token(Token = "0x4000D65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x6F6C78", Offset = "0x6F6C78")]
		public int3 waterModule;

		[Token(Token = "0x4000D66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6F6C88", Offset = "0x6F6C88")]
		public int srcModuleCount;

		[Token(Token = "0x4000D67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public uint sideHashCount;

		[Token(Token = "0x4000D68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public List<ProtoModuleMesh> protoModuleMeshes;

		[Token(Token = "0x4000D69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public List<ProtoModule> protoModules;

		[Token(Token = "0x4000D6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public ProtoModule selectedProtoModule;

		[Token(Token = "0x4000D6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Module selectedModule;

		[Token(Token = "0x4000D6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public DecorModule selectedDecor;

		[Token(Token = "0x600116C")]
		[Address(RVA = "0x9EA098", Offset = "0x9EA098", VA = "0x9EA098")]
		private void Awake()
		{
		}

		[Token(Token = "0x600116D")]
		[Address(RVA = "0x9EA19C", Offset = "0x9EA19C", VA = "0x9EA19C")]
		public ModuleImporter()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000220")]
	public class ProtoModule
	{
		[Token(Token = "0x4000D6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int3 coordinate;

		[Token(Token = "0x4000D6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int cost;

		[Token(Token = "0x4000D6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool isDecor;

		[Token(Token = "0x4000D70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool canBeJoined;

		[Token(Token = "0x4000D71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
		public ushort moduleIndex;

		[Token(Token = "0x4000D72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int totalHash;

		[Token(Token = "0x4000D73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int3x2 bounds;

		[Token(Token = "0x4000D74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public ByteQube cornerStates;

		[Token(Token = "0x4000D75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public List<int> anyCorners;

		[Token(Token = "0x4000D76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public List<SbyteFloat3> cornerTouches;

		[Token(Token = "0x4000D77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public int unknownCount;

		[Token(Token = "0x4000D78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public int insideCount;

		[Token(Token = "0x4000D79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public int outsideCount;

		[Token(Token = "0x4000D7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public int cornerLinks;

		[Token(Token = "0x4000D7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public List<ProtoModuleMesh> moduleMeshes;

		[Token(Token = "0x4000D7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public List<MaterialCluster> materialClusters;

		[Token(Token = "0x4000D7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public List<OrientedModule> decorModules;

		[Token(Token = "0x4000D7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public List<DecorPoint> decorPoints;

		[Token(Token = "0x4000D7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public List<SideProfile> sideProfiles;

		[Token(Token = "0x4000D80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public List<PropPlacement> propPlacements;

		[Token(Token = "0x4000D81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public List<int2> colorsThatCantBeTheSame;

		[Token(Token = "0x4000D82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public List<OrientedModule> orientedProtoMeshes;

		[Token(Token = "0x4000D83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public int permutationCount;

		[Token(Token = "0x4000D84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		public ByteQube defaultQube;

		[Token(Token = "0x17000496")]
		public Vector3 worldPos
		{
			[Token(Token = "0x600116E")]
			[Address(RVA = "0xD97090", Offset = "0xD97090", VA = "0xD97090")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x600116F")]
		[Address(RVA = "0xD970FC", Offset = "0xD970FC", VA = "0xD970FC")]
		public ProtoModule()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000221")]
	public class ProtoModuleMesh
	{
		[Token(Token = "0x4000D85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ModuleMesh moduleMesh;

		[NonSerialized]
		[Token(Token = "0x4000D86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MappedMaterial mappedMaterial;

		[Token(Token = "0x4000D87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int3x2 bounds;

		[Token(Token = "0x4000D88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public List<int3> corners;

		[Token(Token = "0x4000D89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public List<int3> looseEdges;

		[Token(Token = "0x4000D8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public List<CornerTouch> cornerTouches;

		[Token(Token = "0x4000D8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public List<SideProfile> sideProfiles;

		[Token(Token = "0x4000D8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public List<DecorPoint> decorPoints;

		[Token(Token = "0x4000D8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public int decorPointMaskTarget;

		[Token(Token = "0x4000D8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public ushort realMeshIndex;

		[Token(Token = "0x6001170")]
		[Address(RVA = "0xD97394", Offset = "0xD97394", VA = "0xD97394")]
		public ProtoModuleMesh()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000222")]
	public struct CornerTouch
	{
		[Token(Token = "0x4000D8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public SbyteFloat3 pos;

		[Token(Token = "0x4000D90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3")]
		public byte cornerIndex;

		[Token(Token = "0x4000D91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public byte axis;

		[Token(Token = "0x4000D92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5")]
		public bool inside;

		[Token(Token = "0x4000D93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6")]
		public byte distance;
	}
	[Serializable]
	[Token(Token = "0x2000223")]
	public struct MappedMaterial
	{
		[Token(Token = "0x4000D94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string srcName;

		[Token(Token = "0x4000D95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Material targetMaterial;

		[Token(Token = "0x4000D96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool replaceableColor;

		[Token(Token = "0x4000D97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool cantTouchOtherColor;

		[Token(Token = "0x4000D98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		public bool reallyCantTouchOtherColor;

		[Token(Token = "0x4000D99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13")]
		public bool softNormalsInTangent;

		[Token(Token = "0x4000D9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public bool edgeProfile;

		[Token(Token = "0x4000D9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
		public bool onlyMergeAdjecent;

		[Token(Token = "0x4000D9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16")]
		public bool attachment;

		[Token(Token = "0x4000D9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17")]
		public bool attachee;

		[Token(Token = "0x4000D9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool outputMesh;

		[Token(Token = "0x4000D9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool blocker;

		[Token(Token = "0x4000DA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		public bool combineBlocker;

		[Token(Token = "0x4000DA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
		public bool outlineUvs;

		[Token(Token = "0x4000DA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float normalSideMultiplier;

		[Token(Token = "0x4000DA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MaterialType materialType;
	}
	[Serializable]
	[Token(Token = "0x2000224")]
	public class DecorProfile
	{
		[Token(Token = "0x4000DA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<DecorPoint> points;

		[Token(Token = "0x6001171")]
		[Address(RVA = "0xB3A92C", Offset = "0xB3A92C", VA = "0xB3A92C")]
		public DecorProfile()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000225")]
	public struct DecorPoint
	{
		[Token(Token = "0x4000DA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int3 v;

		[Token(Token = "0x4000DA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Vector3 pos;

		[Token(Token = "0x4000DA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 normal;
	}
	[Serializable]
	[Token(Token = "0x2000226")]
	public class MaterialCluster
	{
		[Token(Token = "0x4000DA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<int> meshes;

		[Token(Token = "0x4000DA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<int> corners;

		[Token(Token = "0x4000DAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool cantTouchOtherColor;

		[Token(Token = "0x6001172")]
		[Address(RVA = "0x9E5920", Offset = "0x9E5920", VA = "0x9E5920")]
		public MaterialCluster()
		{
		}
	}
	[Token(Token = "0x2000227")]
	public enum CornerState
	{
		[Token(Token = "0x4000DAC")]
		Unknown,
		[Token(Token = "0x4000DAD")]
		Outside,
		[Token(Token = "0x4000DAE")]
		Inside
	}
}
namespace Placemaker.Life
{
	[Token(Token = "0x2000228")]
	public class Bird : MonoBehaviour, IComparable<Bird>, IComparable<Vector3>
	{
		[Token(Token = "0x4000DAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform body;

		[Token(Token = "0x4000DB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform shade;

		[Token(Token = "0x4000DB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public MeshFilter mf0;

		[Token(Token = "0x4000DB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public MeshFilter mf1;

		[Token(Token = "0x4000DB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x6F6CC0", Offset = "0x6F6CC0")]
		public BirdFlock flock;

		[Token(Token = "0x4000DB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Quaternion rotation0;

		[Token(Token = "0x4000DB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Quaternion rotation1;

		[Token(Token = "0x4000DB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Vector3 posMid;

		[Token(Token = "0x4000DB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public Vector3 velocityPrev;

		[Token(Token = "0x4000DB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Vector3 velocityNext;

		[Token(Token = "0x4000DB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public Vector3 pos;

		[Token(Token = "0x4000DBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float time;

		[Token(Token = "0x4000DBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public byte preferredNeighbourCount;

		[Token(Token = "0x4000DBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x95")]
		public BirdFlock.State statePrev;

		[Token(Token = "0x4000DBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x96")]
		public BirdFlock.State stateNext;

		[Token(Token = "0x4000DBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public float lastActionTime;

		[Token(Token = "0x4000DBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public BirdLanding landing;

		[Token(Token = "0x6001173")]
		[Address(RVA = "0xFAC140", Offset = "0xFAC140", VA = "0xFAC140", Slot = "4")]
		private int System.IComparable<Placemaker.Life.Bird>.CompareTo(Bird other)
		{
			return default(int);
		}

		[Token(Token = "0x6001174")]
		[Address(RVA = "0xFAC160", Offset = "0xFAC160", VA = "0xFAC160", Slot = "5")]
		private int System.IComparable<UnityEngine.Vector3>.CompareTo(Vector3 other)
		{
			return default(int);
		}

		[Token(Token = "0x6001175")]
		[Address(RVA = "0xFAC16C", Offset = "0xFAC16C", VA = "0xFAC16C")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6001176")]
		[Address(RVA = "0xFAC2FC", Offset = "0xFAC2FC", VA = "0xFAC2FC")]
		public Bird()
		{
		}
	}
	[Token(Token = "0x2000229")]
	public class BirdFlock : MonoBehaviour
	{
		[Token(Token = "0x200022A")]
		public enum State : byte
		{
			[Token(Token = "0x4000DE6")]
			Boiding,
			[Token(Token = "0x4000DE7")]
			Landing,
			[Token(Token = "0x4000DE8")]
			Stopping,
			[Token(Token = "0x4000DE9")]
			Stopped,
			[Token(Token = "0x4000DEA")]
			Leaving
		}

		[Token(Token = "0x4000DC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private WorldMaster master;

		[Token(Token = "0x4000DC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Mesh sitMesh;

		[Token(Token = "0x4000DC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Mesh halfSitMesh;

		[Token(Token = "0x4000DC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Mesh standMesh;

		[Token(Token = "0x4000DC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Mesh landMesh;

		[Token(Token = "0x4000DC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Mesh flapMesh;

		[Token(Token = "0x4000DC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Mesh flyMesh;

		[Token(Token = "0x4000DC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Mesh glideMesh;

		[Token(Token = "0x4000DC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private ParticleSystem featherEffect;

		[Token(Token = "0x4000DC9")]
		private const int absoluteMaxBirdCount = 32;

		[Token(Token = "0x4000DCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Bird srcBird;

		[Token(Token = "0x4000DCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Transform activeBirds;

		[Token(Token = "0x4000DCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Transform disabledBirds;

		[Token(Token = "0x4000DCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		public List<Bird> birds;

		[Token(Token = "0x4000DCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		public int birdLandingCount;

		[Token(Token = "0x4000DCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public byte assignedBirdsCount;

		[Token(Token = "0x4000DD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x85")]
		public byte activeBirdsCount;

		[Token(Token = "0x4000DD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x86")]
		public byte totalBirdCount;

		[Token(Token = "0x4000DD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x87")]
		public byte maxBirdCount;

		[Token(Token = "0x4000DD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public byte minBirdCount;

		[Token(Token = "0x4000DD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
		public byte idealBirdCount;

		[Token(Token = "0x4000DD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8A")]
		public bool optimalBirdCountDirty;

		[Token(Token = "0x4000DD6")]
		private const float dt = 0.3f;

		[Token(Token = "0x4000DD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[SerializeField]
		private int takeOffCount;

		[Token(Token = "0x4000DD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Vector3 takeOffPos;

		[Token(Token = "0x4000DD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private AudioClip[] flapAudioClips;

		[Token(Token = "0x4000DDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private AudioSource audioSource0;

		[Token(Token = "0x4000DDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private AudioSource audioSource1;

		[Token(Token = "0x4000DDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private float lastAudioTime;

		[Token(Token = "0x4000DDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private Vector3 orbitPos;

		[Token(Token = "0x4000DDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Vector3 orbitTarget;

		[Token(Token = "0x4000DDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private float lastOrbitTime;

		[Token(Token = "0x4000DE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private float sqrShakeDetectionThreshold;

		[Token(Token = "0x4000DE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[SerializeField]
		private float minShakeInterval;

		[Token(Token = "0x4000DE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private float timeSinceLastShake;

		[Token(Token = "0x4000DE3")]
		private const float landingNeigbourRadius = 1.1f;

		[Token(Token = "0x4000DE4")]
		private const float landingNeigbourSqRadius = 1.21f;

		[Token(Token = "0x6001177")]
		[Address(RVA = "0xFAC340", Offset = "0xFAC340", VA = "0xFAC340")]
		public void CalculateOptimalLandings()
		{
		}

		[Token(Token = "0x6001178")]
		[Address(RVA = "0xFAC42C", Offset = "0xFAC42C", VA = "0xFAC42C")]
		public void OnReset()
		{
		}

		[Token(Token = "0x6001179")]
		[Address(RVA = "0xFAC678", Offset = "0xFAC678", VA = "0xFAC678")]
		public bool IterateBirdCreation()
		{
			return default(bool);
		}

		[Token(Token = "0x600117A")]
		[Address(RVA = "0xFACF7C", Offset = "0xFACF7C", VA = "0xFACF7C")]
		private bool TryGetRandomLanding(out BirdLanding landing)
		{
			return default(bool);
		}

		[Token(Token = "0x600117B")]
		[Address(RVA = "0xFAD460", Offset = "0xFAD460", VA = "0xFAD460")]
		public void OnUpdate()
		{
		}

		[Token(Token = "0x600117C")]
		[Address(RVA = "0xFB064C", Offset = "0xFB064C", VA = "0xFB064C")]
		public void UprootRadius(Vector3 pos, float radius = 1f, float speed = 1f)
		{
		}

		[Token(Token = "0x600117D")]
		[Address(RVA = "0xFAFF0C", Offset = "0xFAFF0C", VA = "0xFAFF0C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x6FC5CC", Offset = "0x6FC5CC")]
		private void UprootAllBirds()
		{
		}

		[Token(Token = "0x600117E")]
		[Address(RVA = "0xFAD3F0", Offset = "0xFAD3F0", VA = "0xFAD3F0")]
		private Vector3 GetLandingPos(Bird bird)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600117F")]
		[Address(RVA = "0xFAD2E4", Offset = "0xFAD2E4", VA = "0xFAD2E4")]
		private void SetState(Bird bird, State state)
		{
		}

		[Token(Token = "0x6001180")]
		[Address(RVA = "0xFB07E4", Offset = "0xFB07E4", VA = "0xFB07E4")]
		public void UprootBird(Bird bird, float speed = 1f)
		{
		}

		[Token(Token = "0x6001181")]
		[Address(RVA = "0xFB00D8", Offset = "0xFB00D8", VA = "0xFB00D8")]
		private BirdLanding GetLanding(Bird bird)
		{
			return null;
		}

		[Token(Token = "0x6001182")]
		[Address(RVA = "0xFAD1A0", Offset = "0xFAD1A0", VA = "0xFAD1A0")]
		private (int3, int3) GetSearchCoordinates(Vector3 pos, float radius)
		{
			return default((int3, int3));
		}

		[Token(Token = "0x6001183")]
		[Address(RVA = "0xFB09D8", Offset = "0xFB09D8", VA = "0xFB09D8")]
		private void SetBird(BirdLanding landing, Bird bird)
		{
		}

		[Token(Token = "0x6001184")]
		[Address(RVA = "0xFB0E54", Offset = "0xFB0E54", VA = "0xFB0E54")]
		public void AddOrRemoveLanding(BirdLanding landing, bool landingAdded)
		{
		}

		[Token(Token = "0x6001185")]
		[Address(RVA = "0xFAC560", Offset = "0xFAC560", VA = "0xFAC560")]
		private void SetLanding(Bird bird, BirdLanding landing)
		{
		}

		[Token(Token = "0x6001186")]
		[Address(RVA = "0xFB1380", Offset = "0xFB1380", VA = "0xFB1380")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6001187")]
		[Address(RVA = "0xFB1668", Offset = "0xFB1668", VA = "0xFB1668")]
		public BirdFlock()
		{
		}
	}
	[Token(Token = "0x200022B")]
	public class BirdLanding : MonoBehaviour, IPropEnable, IComparable<BirdLanding>, IComparable<Vector3>
	{
		[Token(Token = "0x4000DEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Bird bird;

		[Token(Token = "0x4000DEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public byte neighbourCount;

		[Token(Token = "0x4000DED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 normal;

		[Token(Token = "0x17000497")]
		public Vector3 pos
		{
			[Token(Token = "0x6001188")]
			[Address(RVA = "0xFB0628", Offset = "0xFB0628", VA = "0xFB0628")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000498")]
		public Vector3 sortPos
		{
			[Token(Token = "0x6001189")]
			[Address(RVA = "0xFAD158", Offset = "0xFAD158", VA = "0xFAD158")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000499")]
		public Vector3 targetPos
		{
			[Token(Token = "0x600118A")]
			[Address(RVA = "0xFB0090", Offset = "0xFB0090", VA = "0xFB0090")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x600118B")]
		[Address(RVA = "0xFB16E0", Offset = "0xFB16E0", VA = "0xFB16E0", Slot = "7")]
		private int System.IComparable<Placemaker.Life.BirdLanding>.CompareTo(BirdLanding other)
		{
			return default(int);
		}

		[Token(Token = "0x600118C")]
		[Address(RVA = "0xFB172C", Offset = "0xFB172C", VA = "0xFB172C", Slot = "8")]
		private int System.IComparable<UnityEngine.Vector3>.CompareTo(Vector3 other)
		{
			return default(int);
		}

		[Token(Token = "0x600118D")]
		[Address(RVA = "0xFB176C", Offset = "0xFB176C", VA = "0xFB176C", Slot = "6")]
		private void Placemaker.Props.IPropEnable.OnDisable(WorldMaster master)
		{
		}

		[Token(Token = "0x600118E")]
		[Address(RVA = "0xFB1798", Offset = "0xFB1798", VA = "0xFB1798", Slot = "5")]
		private void Placemaker.Props.IPropEnable.OnEnable(WorldMaster master)
		{
		}

		[Token(Token = "0x600118F")]
		[Address(RVA = "0xFB17C4", Offset = "0xFB17C4", VA = "0xFB17C4", Slot = "4")]
		private void Placemaker.Props.IPropEnable.OnFirstEnable(WorldMaster master)
		{
		}

		[Token(Token = "0x6001190")]
		[Address(RVA = "0xFB18C0", Offset = "0xFB18C0", VA = "0xFB18C0")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6001191")]
		[Address(RVA = "0xFB0E34", Offset = "0xFB0E34", VA = "0xFB0E34")]
		public void AddNeighbour(BirdLanding landing)
		{
		}

		[Token(Token = "0x6001192")]
		[Address(RVA = "0xFB0E44", Offset = "0xFB0E44", VA = "0xFB0E44")]
		public void RemoveNeighbour(BirdLanding landing)
		{
		}

		[Token(Token = "0x6001193")]
		[Address(RVA = "0xFB1378", Offset = "0xFB1378", VA = "0xFB1378")]
		public void ClearNeighbours()
		{
		}

		[Token(Token = "0x6001194")]
		[Address(RVA = "0xFB196C", Offset = "0xFB196C", VA = "0xFB196C")]
		public BirdLanding()
		{
		}
	}
	[Token(Token = "0x200022C")]
	public struct BirdSpot
	{
		[Token(Token = "0x4000DEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 pos;

		[Token(Token = "0x4000DEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Bird bird;
	}
	[Token(Token = "0x200022D")]
	public class Butterfly : MonoBehaviour
	{
		[Token(Token = "0x4000DF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Quaternion rotation0;

		[Token(Token = "0x4000DF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Quaternion rotation1;

		[Token(Token = "0x4000DF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector3 posMid;

		[Token(Token = "0x4000DF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Vector3 velocityPrev;

		[Token(Token = "0x4000DF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Vector3 velocityNext;

		[Token(Token = "0x4000DF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public Vector3 pos;

		[Token(Token = "0x4000DF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float time;

		[Token(Token = "0x4000DF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public ButterflyFlock.State state;

		[Token(Token = "0x4000DF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public ButterflyLanding landing;

		[Token(Token = "0x6001195")]
		[Address(RVA = "0xFB3178", Offset = "0xFB3178", VA = "0xFB3178")]
		public Butterfly()
		{
		}
	}
	[Token(Token = "0x200022E")]
	public class ButterflyFlock : MonoBehaviour
	{
		[Token(Token = "0x200022F")]
		public enum State : byte
		{
			[Token(Token = "0x4000E04")]
			Flying,
			[Token(Token = "0x4000E05")]
			Stopping,
			[Token(Token = "0x4000E06")]
			Stopped
		}

		[Token(Token = "0x4000DF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private WorldMaster master;

		[Token(Token = "0x4000DFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Butterfly srcButterfly;

		[Token(Token = "0x4000DFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Mesh flapMesh;

		[Token(Token = "0x4000DFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Mesh sitMesh;

		[Token(Token = "0x4000DFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Mesh sitFlapMesh;

		[Token(Token = "0x4000DFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Transform activeButterflies;

		[Token(Token = "0x4000DFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Transform disabledButterflies;

		[Token(Token = "0x4000E00")]
		private const int absoluteMaxButterflyCount = 16;

		[Token(Token = "0x4000E01")]
		private const float dt = 0.3f;

		[Token(Token = "0x4000E02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public int landingCount;

		[Token(Token = "0x6001196")]
		[Address(RVA = "0xFB31BC", Offset = "0xFB31BC", VA = "0xFB31BC")]
		public void OnReset()
		{
		}

		[Token(Token = "0x6001197")]
		[Address(RVA = "0xFB322C", Offset = "0xFB322C", VA = "0xFB322C")]
		public void OnUpdate()
		{
		}

		[Token(Token = "0x6001198")]
		[Address(RVA = "0xFB4A0C", Offset = "0xFB4A0C", VA = "0xFB4A0C")]
		private void SetButterfly(ButterflyLanding landing, Butterfly butterfly)
		{
		}

		[Token(Token = "0x6001199")]
		[Address(RVA = "0xFB4914", Offset = "0xFB4914", VA = "0xFB4914")]
		private void SetLanding(Butterfly butterfly, ButterflyLanding landing)
		{
		}

		[Token(Token = "0x600119A")]
		[Address(RVA = "0xFB4B38", Offset = "0xFB4B38", VA = "0xFB4B38")]
		public void AddLanding(ButterflyLanding landing)
		{
		}

		[Token(Token = "0x600119B")]
		[Address(RVA = "0xFB4EE4", Offset = "0xFB4EE4", VA = "0xFB4EE4")]
		public void RemoveLanding(ButterflyLanding landing)
		{
		}

		[Token(Token = "0x600119C")]
		[Address(RVA = "0xFB5094", Offset = "0xFB5094", VA = "0xFB5094")]
		public ButterflyFlock()
		{
		}
	}
	[Token(Token = "0x2000230")]
	public class ButterflyLanding : MonoBehaviour, IPropEnable
	{
		[Token(Token = "0x4000E07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Butterfly butterfly;

		[Token(Token = "0x600119D")]
		[Address(RVA = "0x8DF5B4", Offset = "0x8DF5B4", VA = "0x8DF5B4", Slot = "5")]
		private void Placemaker.Props.IPropEnable.OnEnable(WorldMaster master)
		{
		}

		[Token(Token = "0x600119E")]
		[Address(RVA = "0x8DF5E0", Offset = "0x8DF5E0", VA = "0x8DF5E0", Slot = "4")]
		private void Placemaker.Props.IPropEnable.OnFirstEnable(WorldMaster master)
		{
		}

		[Token(Token = "0x600119F")]
		[Address(RVA = "0x8DF5E4", Offset = "0x8DF5E4", VA = "0x8DF5E4", Slot = "6")]
		private void Placemaker.Props.IPropEnable.OnDisable(WorldMaster master)
		{
		}

		[Token(Token = "0x60011A0")]
		[Address(RVA = "0x8DF610", Offset = "0x8DF610", VA = "0x8DF610")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x60011A1")]
		[Address(RVA = "0x8DF7E0", Offset = "0x8DF7E0", VA = "0x8DF7E0")]
		public ButterflyLanding()
		{
		}
	}
}
namespace Placemaker.SceneProcessing
{
	[Token(Token = "0x2000231")]
	public interface IOnScenePostProcess
	{
		[Token(Token = "0x60011A2")]
		void OnScenePostProcess(bool isBuild, TargetPlatformFlags platform);
	}
	[Token(Token = "0x2000232")]
	[Flags]
	public enum TargetPlatformFlags
	{
		[Token(Token = "0x4000E09")]
		Unknown = 0,
		[Token(Token = "0x4000E0A")]
		Web = 2,
		[Token(Token = "0x4000E0B")]
		Stadia = 4,
		[Token(Token = "0x4000E0C")]
		Windows = 0x20,
		[Token(Token = "0x4000E0D")]
		Mac = 0x40,
		[Token(Token = "0x4000E0E")]
		Linux = 0x80,
		[Token(Token = "0x4000E0F")]
		Android = 0x400,
		[Token(Token = "0x4000E10")]
		IOS = 0x800,
		[Token(Token = "0x4000E11")]
		WindowsGameCore = 0x4000,
		[Token(Token = "0x4000E12")]
		XboxOne = 0x8000,
		[Token(Token = "0x4000E13")]
		XboxSeries = 0x10000,
		[Token(Token = "0x4000E14")]
		Playstation5 = 0x20000,
		[Token(Token = "0x4000E15")]
		Switch = 0x40000,
		[Token(Token = "0x4000E16")]
		Vr = 0x400000,
		[Token(Token = "0x4000E17")]
		Editor = 0x40000000
	}
	[Token(Token = "0x2000233")]
	public class PlatformDependent : MonoBehaviour, IOnScenePostProcess
	{
		[Token(Token = "0x4000E18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TargetPlatformFlags targetPlatformFlags;

		[Token(Token = "0x60011A3")]
		[Address(RVA = "0xE08488", Offset = "0xE08488", VA = "0xE08488", Slot = "4")]
		private void Placemaker.SceneProcessing.IOnScenePostProcess.OnScenePostProcess(bool isBuild, TargetPlatformFlags platform)
		{
		}

		[Token(Token = "0x60011A4")]
		[Address(RVA = "0xE08538", Offset = "0xE08538", VA = "0xE08538")]
		public PlatformDependent()
		{
		}
	}
}
namespace Placemaker.Graphs
{
	[Serializable]
	[Token(Token = "0x2000234")]
	public class Flow : MonoBehaviour
	{
		[Token(Token = "0x2000235")]
		private struct FlowCalcData
		{
			[Token(Token = "0x4000E1C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public FlowData flowData;

			[Token(Token = "0x4000E1D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Corner corner;

			[Token(Token = "0x4000E1E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public int count;

			[Token(Token = "0x4000E1F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public int index;

			[Token(Token = "0x4000E20")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public bool availale;

			[Token(Token = "0x4000E21")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
			public bool open;

			[Token(Token = "0x4000E22")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			public Vector3 pos;
		}

		[Token(Token = "0x4000E19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private WorldMaster master;

		[Token(Token = "0x4000E1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform test;

		[Token(Token = "0x4000E1B")]
		private const float amountAdd = 1000000f;

		[Token(Token = "0x60011A5")]
		[Address(RVA = "0xE7F05C", Offset = "0xE7F05C", VA = "0xE7F05C")]
		private void Update()
		{
		}

		[Token(Token = "0x60011A6")]
		[Address(RVA = "0xE8111C", Offset = "0xE8111C", VA = "0xE8111C")]
		private void FlowTwoFlows(ref FlowCalcData flow0, ref FlowCalcData flow1, float spaceDist)
		{
		}

		[Token(Token = "0x60011A7")]
		[Address(RVA = "0xE80FB8", Offset = "0xE80FB8", VA = "0xE80FB8")]
		private void SetupFlowData(ref FlowCalcData flow0)
		{
		}

		[Token(Token = "0x60011A8")]
		[Address(RVA = "0xE804C8", Offset = "0xE804C8", VA = "0xE804C8")]
		public void AddFlowTarget(float3 worldPos)
		{
		}

		[Token(Token = "0x60011A9")]
		[Address(RVA = "0xE8123C", Offset = "0xE8123C", VA = "0xE8123C")]
		public (Vector3, Vector3, float, float) SampleFlow(Vector3 worldPos)
		{
			return default((Vector3, Vector3, float, float));
		}

		[Token(Token = "0x60011AA")]
		[Address(RVA = "0xE82AE4", Offset = "0xE82AE4", VA = "0xE82AE4")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x60011AB")]
		[Address(RVA = "0xE82C54", Offset = "0xE82C54", VA = "0xE82C54")]
		public Flow()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000236")]
	public struct FlowData
	{
		[Token(Token = "0x4000E23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Voxel voxel;

		[Token(Token = "0x4000E24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public byte neighbourCount;

		[Token(Token = "0x4000E25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float dist;

		[Token(Token = "0x4000E26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float newDist;

		[Token(Token = "0x4000E27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float denom;

		[Token(Token = "0x4000E28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 dir;

		[Token(Token = "0x4000E29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 newDir;

		[Token(Token = "0x4000E2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool target;

		[Token(Token = "0x4000E2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly FlowData empty;
	}
	[Serializable]
	[Token(Token = "0x2000237")]
	public class FlowTarget : MonoBehaviour
	{
		[Token(Token = "0x60011AD")]
		[Address(RVA = "0xE82CCC", Offset = "0xE82CCC", VA = "0xE82CCC")]
		public FlowTarget()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000238")]
	public struct Action
	{
		[Token(Token = "0x4000E2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		public int2 hexPos;

		[Token(Token = "0x4000E2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[SerializeField]
		public byte height;

		[Token(Token = "0x4000E2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
		[SerializeField]
		public VoxelType inType;

		[Token(Token = "0x4000E2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA")]
		[SerializeField]
		public VoxelType outType;

		[Token(Token = "0x4000E30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[SerializeField]
		public int actionId;

		[Token(Token = "0x60011AE")]
		[Address(RVA = "0xFA43F4", Offset = "0xFA43F4", VA = "0xFA43F4")]
		public Action(int2 hexPos, byte height, VoxelType inType, VoxelType outType, int actionId)
		{
		}

		[Token(Token = "0x60011AF")]
		[Address(RVA = "0xFA440C", Offset = "0xFA440C", VA = "0xFA440C")]
		public Action GetReverse()
		{
			return default(Action);
		}

		[Token(Token = "0x60011B0")]
		[Address(RVA = "0xFA4428", Offset = "0xFA4428", VA = "0xFA4428", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x2000239")]
	public class Corner : MonoBehaviour
	{
		[Token(Token = "0x4000E31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int2 hexPos;

		[Token(Token = "0x4000E32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<Square> squares;

		[Token(Token = "0x4000E33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Mesh colliderMesh;

		[Token(Token = "0x4000E34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<Vector2> blitVerts;

		[Token(Token = "0x4000E35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public List<FlowData> flowDatas;

		[Token(Token = "0x4000E36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool inFlowUpdateQueue;

		[Token(Token = "0x4000E37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float angle;

		[Token(Token = "0x4000E38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public byte groundCoverage;

		[Token(Token = "0x60011B1")]
		[Address(RVA = "0xB31B38", Offset = "0xB31B38", VA = "0xB31B38")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x60011B2")]
		[Address(RVA = "0xB31F34", Offset = "0xB31F34", VA = "0xB31F34")]
		public void AddSquare(Square quad0)
		{
		}

		[Token(Token = "0x60011B3")]
		[Address(RVA = "0xB32170", Offset = "0xB32170", VA = "0xB32170")]
		public Corner()
		{
		}
	}
	[Token(Token = "0x200023A")]
	public class Graph : MonoBehaviour
	{
		[Token(Token = "0x200023B")]
		private enum LoadState
		{
			[Token(Token = "0x4000E69")]
			Begin,
			[Token(Token = "0x4000E6A")]
			RemoveExistingVoxels,
			[Token(Token = "0x4000E6B")]
			ClearQubes,
			[Token(Token = "0x4000E6C")]
			LoadNewVoxels,
			[Token(Token = "0x4000E6D")]
			ApplyActions
		}

		[Serializable]
		[Token(Token = "0x200023C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F0D6C", Offset = "0x6F0D6C")]
		private sealed class <>c
		{
			[Token(Token = "0x4000E6E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000E6F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static System.Action <>9__90_0;

			[Token(Token = "0x4000E70")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static System.Action <>9__90_1;

			[Token(Token = "0x4000E71")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static System.Action <>9__90_2;

			[Token(Token = "0x60011E1")]
			[Address(RVA = "0x925ABC", Offset = "0x925ABC", VA = "0x925ABC")]
			public <>c()
			{
			}

			[Token(Token = "0x60011E2")]
			[Address(RVA = "0x925AC4", Offset = "0x925AC4", VA = "0x925AC4")]
			internal void <.ctor>b__90_0()
			{
			}

			[Token(Token = "0x60011E3")]
			[Address(RVA = "0x925AC8", Offset = "0x925AC8", VA = "0x925AC8")]
			internal void <.ctor>b__90_1()
			{
			}

			[Token(Token = "0x60011E4")]
			[Address(RVA = "0x925ACC", Offset = "0x925ACC", VA = "0x925ACC")]
			internal void <.ctor>b__90_2()
			{
			}
		}

		[Token(Token = "0x4000E39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private WorldMaster master;

		[Token(Token = "0x4000E3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[HideInInspector]
		public Transform qubePool;

		[Token(Token = "0x4000E3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[HideInInspector]
		public Transform corners;

		[Token(Token = "0x4000E3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		[SerializeField]
		public Transform cornerPool;

		[Token(Token = "0x4000E3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		[SerializeField]
		public Transform squares;

		[Token(Token = "0x4000E3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[HideInInspector]
		public Transform squarePool;

		[Token(Token = "0x4000E3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[HideInInspector]
		[SerializeField]
		public Transform looseVoxels;

		[Token(Token = "0x4000E40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[HideInInspector]
		public Transform voxelPool;

		[Token(Token = "0x4000E41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private uint qubeIterator;

		[Token(Token = "0x4000E42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[SerializeField]
		private uint cornerIterator;

		[Token(Token = "0x4000E43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private uint squareIterator;

		[Token(Token = "0x4000E44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[SerializeField]
		private uint voxelIterator;

		[Token(Token = "0x4000E45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private uint totalVoxelCount;

		[Token(Token = "0x4000E46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Dictionary<int2, Corner> cornerDict;

		[Token(Token = "0x4000E47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Dictionary<int2, Square> squareDict;

		[Token(Token = "0x4000E48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Dictionary<int2x2, Square.Relation> edgeDict;

		[Token(Token = "0x4000E49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private List<Corner> cornerIntegrationQueue;

		[Token(Token = "0x4000E4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private List<Corner> cornerFlowQueue;

		[Token(Token = "0x4000E4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private List<Qube> qubeUpdateQueue;

		[Token(Token = "0x4000E4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		public Bounds shadowMeshBounds;

		[Token(Token = "0x4000E4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private List<int> shadowMeshIndexes;

		[Token(Token = "0x4000E4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private int shadowMeshIndexIterator;

		[Token(Token = "0x4000E4F")]
		public const int maxVertsCount = 65535;

		[Token(Token = "0x4000E50")]
		public const int quadPerShadowMeshCount = 16383;

		[Token(Token = "0x4000E51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x6F7148", Offset = "0x6F7148")]
		[SerializeField]
		public int boundsHeight;

		[Token(Token = "0x4000E52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		public int3x2 bounds;

		[Token(Token = "0x4000E53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		public int3x2 border;

		[Token(Token = "0x4000E54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		public int3x2 genBounds;

		[Token(Token = "0x4000E55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[SerializeField]
		public int3x2 viewBounds;

		[Token(Token = "0x4000E56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public int maxHeight;

		[Token(Token = "0x4000E57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[SerializeField]
		public BoxCollider groundCollider;

		[Token(Token = "0x4000E58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public System.Action onBoundsUpdated;

		[Token(Token = "0x4000E59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public System.Action onEmptyBoundsLoaded;

		[Token(Token = "0x4000E5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		public System.Action onBoundsLoaded;

		[Token(Token = "0x4000E5B")]
		public const int maxHeightMin = 8;

		[Token(Token = "0x4000E5C")]
		public const int maxHeightMax = 24;

		[Token(Token = "0x4000E5D")]
		public const ushort borderExtentMin = 64;

		[Token(Token = "0x4000E5E")]
		public const ushort borderExtentMax = 196;

		[Token(Token = "0x4000E5F")]
		public const ushort genExtent = 96;

		[Token(Token = "0x4000E60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[SerializeField]
		private bool boundsUpdated;

		[Token(Token = "0x4000E61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x151")]
		[SerializeField]
		private bool recalculateHexBounds;

		[Token(Token = "0x4000E62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x152")]
		[SerializeField]
		private bool recalculateHeightBounds;

		[Token(Token = "0x4000E63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
		private LoadState loadState;

		[Token(Token = "0x4000E64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int gridViewMinId;

		[Token(Token = "0x4000E65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static readonly int gridViewMaxId;

		[Token(Token = "0x4000E66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly int gridBorderMinId;

		[Token(Token = "0x4000E67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private static readonly int gridBorderMaxId;

		[Token(Token = "0x1700049A")]
		public bool anyVoxels
		{
			[Token(Token = "0x60011B4")]
			[Address(RVA = "0x17631C8", Offset = "0x17631C8", VA = "0x17631C8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60011B5")]
		[Address(RVA = "0x176325C", Offset = "0x176325C", VA = "0x176325C")]
		public void OnStart()
		{
		}

		[Token(Token = "0x60011B6")]
		[Address(RVA = "0x1763504", Offset = "0x1763504", VA = "0x1763504")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60011B7")]
		[Address(RVA = "0x1763868", Offset = "0x1763868", VA = "0x1763868")]
		public Qube.Relation6 GetQubeRelation6(Qube qube, byte mask)
		{
			return default(Qube.Relation6);
		}

		[Token(Token = "0x60011B8")]
		[Address(RVA = "0x1763DD8", Offset = "0x1763DD8", VA = "0x1763DD8")]
		public Qube.Relation GetQubeRelation(Qube qube, sbyte index)
		{
			return default(Qube.Relation);
		}

		[Token(Token = "0x60011B9")]
		[Address(RVA = "0x17641B4", Offset = "0x17641B4", VA = "0x17641B4")]
		public bool IterateFocus()
		{
			return default(bool);
		}

		[Token(Token = "0x60011BA")]
		[Address(RVA = "0x1764DD8", Offset = "0x1764DD8", VA = "0x1764DD8")]
		private static (int, int) GetMaxExtents(int3x2 bounds, int height)
		{
			return default((int, int));
		}

		[Token(Token = "0x60011BB")]
		[Address(RVA = "0x1764F24", Offset = "0x1764F24", VA = "0x1764F24")]
		public void SetEmptyBoundsCenter(int2 centerPos)
		{
		}

		[Token(Token = "0x60011BC")]
		[Address(RVA = "0x1764FB0", Offset = "0x1764FB0", VA = "0x1764FB0")]
		public bool Iterate()
		{
			return default(bool);
		}

		[Token(Token = "0x60011BD")]
		[Address(RVA = "0x176714C", Offset = "0x176714C", VA = "0x176714C")]
		public bool IterateRefillPools()
		{
			return default(bool);
		}

		[Token(Token = "0x60011BE")]
		[Address(RVA = "0x1767448", Offset = "0x1767448", VA = "0x1767448")]
		private Corner GetNewCorner(Transform parent)
		{
			return null;
		}

		[Token(Token = "0x60011BF")]
		[Address(RVA = "0x1767540", Offset = "0x1767540", VA = "0x1767540")]
		private Corner GetOrCreateCorner(int2 hexPos)
		{
			return null;
		}

		[Token(Token = "0x60011C0")]
		[Address(RVA = "0x17677C8", Offset = "0x17677C8", VA = "0x17677C8")]
		public bool CheckVoxel(int2 hexPos, int height)
		{
			return default(bool);
		}

		[Token(Token = "0x60011C1")]
		[Address(RVA = "0x176794C", Offset = "0x176794C", VA = "0x176794C")]
		public (Voxel, Corner) TryGetVoxel(int2 hexPos, int height)
		{
			return default((Voxel, Corner));
		}

		[Token(Token = "0x60011C2")]
		[Address(RVA = "0x1767A28", Offset = "0x1767A28", VA = "0x1767A28")]
		public Voxel TryGetVoxel(Corner corner, int height)
		{
			return null;
		}

		[Token(Token = "0x60011C3")]
		[Address(RVA = "0x176727C", Offset = "0x176727C", VA = "0x176727C")]
		private Voxel GetNewVoxel(Transform parent)
		{
			return null;
		}

		[Token(Token = "0x60011C4")]
		[Address(RVA = "0x17673FC", Offset = "0x17673FC", VA = "0x17673FC")]
		private Qube GetNewQube(Transform parent)
		{
			return null;
		}

		[Token(Token = "0x60011C5")]
		[Address(RVA = "0x1767494", Offset = "0x1767494", VA = "0x1767494")]
		private Square GetNewSquare(Transform parent)
		{
			return null;
		}

		[Token(Token = "0x60011C6")]
		[Address(RVA = "0x1765D5C", Offset = "0x1765D5C", VA = "0x1765D5C")]
		private bool IntegrateCorner(Corner voxelCorner)
		{
			return default(bool);
		}

		[Token(Token = "0x60011C7")]
		[Address(RVA = "0x1769928", Offset = "0x1769928", VA = "0x1769928")]
		public Voxel ApplyAction(Action action, bool playEffect)
		{
			return null;
		}

		[Token(Token = "0x60011C8")]
		[Address(RVA = "0x176A774", Offset = "0x176A774", VA = "0x176A774")]
		public bool IsCoordinateAllowed(int2 hexPos, int height)
		{
			return default(bool);
		}

		[Token(Token = "0x60011C9")]
		[Address(RVA = "0x1769CC8", Offset = "0x1769CC8", VA = "0x1769CC8")]
		public Voxel AddVoxel(int2 hexPos, byte height, VoxelType voxelType, bool instantIntegration)
		{
			return null;
		}

		[Token(Token = "0x60011CA")]
		[Address(RVA = "0x1768D58", Offset = "0x1768D58", VA = "0x1768D58")]
		private void IntegrateVoxel(Voxel voxel, Corner corner)
		{
		}

		[Token(Token = "0x60011CB")]
		[Address(RVA = "0x1767AD0", Offset = "0x1767AD0", VA = "0x1767AD0")]
		public void RemoveVoxel(Voxel voxel)
		{
		}

		[Token(Token = "0x60011CC")]
		[Address(RVA = "0x176A484", Offset = "0x176A484", VA = "0x176A484")]
		public void PaintVoxel(Voxel voxel, VoxelType newType, [Optional] Corner corner)
		{
		}

		[Token(Token = "0x60011CD")]
		[Address(RVA = "0x176AA1C", Offset = "0x176AA1C", VA = "0x176AA1C")]
		public void QubeUpdated(Qube qube)
		{
		}

		[Token(Token = "0x60011CE")]
		[Address(RVA = "0x1767874", Offset = "0x1767874", VA = "0x1767874")]
		public int BinaryTreeSearchVoxel(Transform cornerTransform, int height)
		{
			return default(int);
		}

		[Token(Token = "0x60011CF")]
		[Address(RVA = "0x17676C0", Offset = "0x17676C0", VA = "0x17676C0")]
		public int BinaryTreeSearchCorner(int2 hexPos0)
		{
			return default(int);
		}

		[Token(Token = "0x60011D0")]
		[Address(RVA = "0x1768C84", Offset = "0x1768C84", VA = "0x1768C84")]
		public int BinaryTreeSearchSquare(Vector3 pos)
		{
			return default(int);
		}

		[Token(Token = "0x60011D1")]
		[Address(RVA = "0x176AA98", Offset = "0x176AA98", VA = "0x176AA98")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x6FC604", Offset = "0x6FC604")]
		public void Test()
		{
		}

		[Token(Token = "0x60011D2")]
		[Address(RVA = "0x176AB8C", Offset = "0x176AB8C", VA = "0x176AB8C")]
		public void Save(SaveData saveData)
		{
		}

		[Token(Token = "0x60011D3")]
		[Address(RVA = "0x176AEE4", Offset = "0x176AEE4", VA = "0x176AEE4")]
		public void BeginLoad(SaveData saveData)
		{
		}

		[Token(Token = "0x60011D4")]
		[Address(RVA = "0x176AEEC", Offset = "0x176AEEC", VA = "0x176AEEC")]
		public bool IterateLoad(SaveData saveData)
		{
			return default(bool);
		}

		[Token(Token = "0x60011D5")]
		[Address(RVA = "0x176B960", Offset = "0x176B960", VA = "0x176B960")]
		public (Qube, Square, Vector2, Vector2, Vector2, Vector2, int) GetQubeWithContext(Vector3 worldPos)
		{
			return default((Qube, Square, Vector2, Vector2, Vector2, Vector2, int));
		}

		[Token(Token = "0x60011D6")]
		[Address(RVA = "0x176C34C", Offset = "0x176C34C", VA = "0x176C34C")]
		public Vector3 SampleNormal(Vector3 worldPos)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60011D7")]
		[Address(RVA = "0x176C36C", Offset = "0x176C36C", VA = "0x176C36C")]
		public (Vector3, float) SampleNormalCoverage(Vector3 worldPos)
		{
			return default((Vector3, float));
		}

		[Token(Token = "0x60011D8")]
		[Address(RVA = "0x176C674", Offset = "0x176C674", VA = "0x176C674")]
		public (Vector3, float) SampleNormalCoverage(Vector3 worldPos, Transform qubeChild)
		{
			return default((Vector3, float));
		}

		[Token(Token = "0x60011D9")]
		[Address(RVA = "0x176C7A4", Offset = "0x176C7A4", VA = "0x176C7A4")]
		public (Vector3, float) SampleNormalCoverage(Vector3 worldPos, Qube qube)
		{
			return default((Vector3, float));
		}

		[Token(Token = "0x60011DA")]
		[Address(RVA = "0x176CC18", Offset = "0x176CC18", VA = "0x176CC18")]
		public (Vector3, float) SampleNormalDistance(Vector3 worldPos)
		{
			return default((Vector3, float));
		}

		[Token(Token = "0x60011DB")]
		[Address(RVA = "0x176DC84", Offset = "0x176DC84", VA = "0x176DC84")]
		public (Vector3, float) SampleNormalDistance2(Vector3 worldPos)
		{
			return default((Vector3, float));
		}

		[Token(Token = "0x60011DC")]
		[Address(RVA = "0x176E3D8", Offset = "0x176E3D8", VA = "0x176E3D8")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x60011DD")]
		[Address(RVA = "0x176EFCC", Offset = "0x176EFCC", VA = "0x176EFCC")]
		public Graph()
		{
		}

		[Token(Token = "0x60011DF")]
		[Address(RVA = "0x176E498", Offset = "0x176E498", VA = "0x176E498")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FC63C", Offset = "0x6FC63C")]
		internal static void <OnDrawGizmos>g__DrawBoundsGizmo|89_0(int3x2 bounds, int boundsHeight)
		{
		}
	}
	[Token(Token = "0x200023D")]
	public class ModuleContainer : MonoBehaviour
	{
		[Token(Token = "0x4000E72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public OrientedModule orientedModule;

		[Token(Token = "0x4000E73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool hasProps;

		[Token(Token = "0x4000E74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int propIndex;

		[Token(Token = "0x4000E75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<BigMeshPart> bigMeshParts;

		[Token(Token = "0x60011E5")]
		[Address(RVA = "0x9EA020", Offset = "0x9EA020", VA = "0x9EA020")]
		public ModuleContainer()
		{
		}
	}
	[Token(Token = "0x200023E")]
	[SelectionBase]
	public class Qube : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200023F")]
		public struct Relation
		{
			[Token(Token = "0x4000E85")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Qube qube;

			[Token(Token = "0x4000E86")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public sbyte indexInOther;

			[Token(Token = "0x4000E87")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly Relation empty;

			[Token(Token = "0x60011F0")]
			[Address(RVA = "0x92B430", Offset = "0x92B430", VA = "0x92B430")]
			public Relation(Qube qube, sbyte indexInOther)
			{
			}

			[Token(Token = "0x60011F1")]
			[Address(RVA = "0x92B43C", Offset = "0x92B43C", VA = "0x92B43C", Slot = "2")]
			public override int GetHashCode()
			{
				return default(int);
			}
		}

		[Serializable]
		[Token(Token = "0x2000240")]
		[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x6F0D8C", Offset = "0x6F0D8C")]
		public struct Relation6
		{
			[Token(Token = "0x4000E88")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Relation r0;

			[Token(Token = "0x4000E89")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Relation r1;

			[Token(Token = "0x4000E8A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Relation r2;

			[Token(Token = "0x4000E8B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Relation r3;

			[Token(Token = "0x4000E8C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public Relation r4;

			[Token(Token = "0x4000E8D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public Relation r5;

			[Token(Token = "0x1700049D")]
			public Relation Item
			{
				[Token(Token = "0x60011F3")]
				[Address(RVA = "0x92B548", Offset = "0x92B548", VA = "0x92B548")]
				get
				{
					return default(Relation);
				}
				[Token(Token = "0x60011F4")]
				[Address(RVA = "0x92B5F8", Offset = "0x92B5F8", VA = "0x92B5F8")]
				set
				{
				}
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000241")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F0DC4", Offset = "0x6F0DC4")]
		private struct <>c__DisplayClass25_0
		{
			[Token(Token = "0x4000E8E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool shouldBeInside;

			[Token(Token = "0x4000E8F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "TupleElementNamesAttribute", RVA = "0x6F7200", Offset = "0x6F7200")]
			public (Corner, int, float) best;
		}

		[Token(Token = "0x4000E76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public byte voxelCount;

		[Token(Token = "0x4000E77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public byte sideVariationMask;

		[Token(Token = "0x4000E78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		public byte decorSideVariationMask;

		[Token(Token = "0x4000E79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int shadowIndex;

		[Token(Token = "0x4000E7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int possibleModuleListIndex;

		[Token(Token = "0x4000E7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public uint existanceIndex;

		[Token(Token = "0x4000E7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ushort lastFillIndex;

		[Token(Token = "0x4000E7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		public ushort lastPropagation;

		[Token(Token = "0x4000E7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float cost;

		[Token(Token = "0x4000E7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ByteQube cornerValues;

		[Token(Token = "0x4000E80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool awaitingRebuilding;

		[Token(Token = "0x4000E81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		public bool awaitingGrass;

		[Token(Token = "0x4000E82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
		public bool awaitingGraphUpdate;

		[Token(Token = "0x4000E83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3B")]
		public bool awaitingModuleClearing;

		[Token(Token = "0x4000E84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public List<OrientedModuleSides> possibleModules;

		[Token(Token = "0x1700049B")]
		public bool empty
		{
			[Token(Token = "0x60011E6")]
			[Address(RVA = "0xD97AC4", Offset = "0xD97AC4", VA = "0xD97AC4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700049C")]
		public bool fullyCovered
		{
			[Token(Token = "0x60011E7")]
			[Address(RVA = "0xD97AD4", Offset = "0xD97AD4", VA = "0xD97AD4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60011E8")]
		[Address(RVA = "0xD97AE4", Offset = "0xD97AE4", VA = "0xD97AE4")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x60011E9")]
		[Address(RVA = "0xD98704", Offset = "0xD98704", VA = "0xD98704")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x60011EA")]
		[Address(RVA = "0xD98708", Offset = "0xD98708", VA = "0xD98708")]
		public Vector3 GetNormal()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60011EB")]
		[Address(RVA = "0xD98718", Offset = "0xD98718", VA = "0xD98718")]
		public (Vector3, float) SampleNormalCoverage(Vector3 ts)
		{
			return default((Vector3, float));
		}

		[Token(Token = "0x60011EC")]
		[Address(RVA = "0xD98F60", Offset = "0xD98F60", VA = "0xD98F60")]
		public (Corner, int) GetClosest(Square square, Vector3 ts, bool shouldBeInside)
		{
			return default((Corner, int));
		}

		[Token(Token = "0x60011ED")]
		[Address(RVA = "0xD99228", Offset = "0xD99228", VA = "0xD99228")]
		private void Test()
		{
		}

		[Token(Token = "0x60011EE")]
		[Address(RVA = "0xD99440", Offset = "0xD99440", VA = "0xD99440")]
		public Qube()
		{
		}

		[Token(Token = "0x60011EF")]
		[Address(RVA = "0xD99154", Offset = "0xD99154", VA = "0xD99154")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FC64C", Offset = "0x6FC64C")]
		internal static void <GetClosest>g__Compare|25_0(Corner corner, int height, byte voxelByte, float t, ref <>c__DisplayClass25_0 P_4)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000242")]
	public struct OrientedModuleSides : IComparable<OrientedModuleSides>
	{
		[Token(Token = "0x4000E90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public SideProfile sides;

		[Token(Token = "0x4000E91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public OrientedModule orientedModule;

		[Token(Token = "0x4000E92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float cost;

		[Token(Token = "0x60011F5")]
		[Address(RVA = "0xE05468", Offset = "0xE05468", VA = "0xE05468", Slot = "4")]
		private int System.IComparable<Placemaker.Graphs.OrientedModuleSides>.CompareTo(OrientedModuleSides other)
		{
			return default(int);
		}
	}
	[Serializable]
	[Token(Token = "0x2000243")]
	public struct SideCounts
	{
		[Token(Token = "0x4000E93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ushort side;

		[Token(Token = "0x4000E94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public uint count;
	}
	[Token(Token = "0x2000244")]
	[SelectionBase]
	public class ShadowMesh : MonoBehaviour
	{
		[Token(Token = "0x4000E95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<Vector3> shadowMeshVerts;

		[Token(Token = "0x4000E96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<Vector2> shadowMeshUvs;

		[Token(Token = "0x4000E97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<int> shadowMeshTris;

		[Token(Token = "0x4000E98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool dirty;

		[Token(Token = "0x4000E99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Mesh mesh;

		[Token(Token = "0x60011F6")]
		[Address(RVA = "0x10A9248", Offset = "0x10A9248", VA = "0x10A9248")]
		public ShadowMesh()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000245")]
	public class Square : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000246")]
		public struct Relation
		{
			[Token(Token = "0x4000EA8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Square square;

			[Token(Token = "0x4000EA9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public sbyte indexInOther;

			[Token(Token = "0x4000EAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly Relation empty;

			[Token(Token = "0x60011FE")]
			[Address(RVA = "0x107C478", Offset = "0x107C478", VA = "0x107C478")]
			public Relation(Square qube, sbyte indexInOther)
			{
			}

			[Token(Token = "0x60011FF")]
			[Address(RVA = "0x107C484", Offset = "0x107C484", VA = "0x107C484", Slot = "2")]
			public override int GetHashCode()
			{
				return default(int);
			}
		}

		[Token(Token = "0x4000E9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Relation q0;

		[Token(Token = "0x4000E9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Relation q1;

		[Token(Token = "0x4000E9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Relation q2;

		[Token(Token = "0x4000E9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Relation q3;

		[Token(Token = "0x4000E9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Corner c0;

		[Token(Token = "0x4000E9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Corner c1;

		[Token(Token = "0x4000EA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Corner c2;

		[Token(Token = "0x4000EA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Corner c3;

		[Token(Token = "0x4000EA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Matrix4x4 m0;

		[Token(Token = "0x4000EA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public Matrix4x4 m1;

		[Token(Token = "0x4000EA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public Matrix4x4 m2;

		[Token(Token = "0x4000EA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public Matrix4x4 m3;

		[Token(Token = "0x4000EA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		public byte motivations;

		[Token(Token = "0x4000EA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x179")]
		public byte quadIndex;

		[Token(Token = "0x1700049E")]
		public int3 bitQuadId
		{
			[Token(Token = "0x60011F7")]
			[Address(RVA = "0xAE77E8", Offset = "0xAE77E8", VA = "0xAE77E8")]
			get
			{
				return default(int3);
			}
		}

		[Token(Token = "0x60011F8")]
		[Address(RVA = "0xAE7810", Offset = "0xAE7810", VA = "0xAE7810")]
		public Corner GetCorner(sbyte index)
		{
			return null;
		}

		[Token(Token = "0x60011F9")]
		[Address(RVA = "0xAE7894", Offset = "0xAE7894", VA = "0xAE7894")]
		public void SetCorner(sbyte index, Corner value)
		{
		}

		[Token(Token = "0x60011FA")]
		[Address(RVA = "0xAE7918", Offset = "0xAE7918", VA = "0xAE7918")]
		public Relation GetRelation(sbyte index)
		{
			return default(Relation);
		}

		[Token(Token = "0x60011FB")]
		[Address(RVA = "0xAE79B0", Offset = "0xAE79B0", VA = "0xAE79B0")]
		public void SetRelation(sbyte index, sbyte indexInOther, Square value)
		{
		}

		[Token(Token = "0x60011FC")]
		[Address(RVA = "0xAE7AA4", Offset = "0xAE7AA4", VA = "0xAE7AA4")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x60011FD")]
		[Address(RVA = "0xAE7DA0", Offset = "0xAE7DA0", VA = "0xAE7DA0")]
		public Square()
		{
		}
	}
	[Token(Token = "0x2000247")]
	public class VoxelMesh
	{
		[Token(Token = "0x4000EAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		public int2 hexPos;

		[Token(Token = "0x4000EAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public byte uses;

		[Token(Token = "0x4000EAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		public Mesh mesh;

		[Token(Token = "0x6001201")]
		[Address(RVA = "0x1BDE8E4", Offset = "0x1BDE8E4", VA = "0x1BDE8E4")]
		public VoxelMesh()
		{
		}
	}
}
namespace Placemaker.Audio
{
	[Token(Token = "0x2000248")]
	public class ManySound : MonoBehaviour
	{
		[Token(Token = "0x4000EAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6F72C4", Offset = "0x6F72C4")]
		public AudioSourcePool audioSourcePool;

		[Token(Token = "0x4000EAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioClip[] clips;

		[Token(Token = "0x4000EB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x6F72FC", Offset = "0x6F72FC")]
		public float timeSpacing;

		[Token(Token = "0x4000EB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float clickSoundSpacing;

		[Token(Token = "0x4000EB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float attenuator;

		[Token(Token = "0x4000EB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float usePropPitch;

		[Token(Token = "0x4000EB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6F730C", Offset = "0x6F730C")]
		public Vector3 pos;

		[Token(Token = "0x4000EB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float denom;

		[Token(Token = "0x4000EB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float volume;

		[Token(Token = "0x4000EB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float pan;

		[Token(Token = "0x4000EB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float pitch;

		[Token(Token = "0x4000EB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float lastTimePlayed;

		[Token(Token = "0x4000EBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float attenuation;

		[Token(Token = "0x6001202")]
		[Address(RVA = "0x9E3490", Offset = "0x9E3490", VA = "0x9E3490")]
		public ManySound()
		{
		}
	}
	[Token(Token = "0x2000249")]
	public class ManySoundsManager : MonoBehaviour
	{
		[Token(Token = "0x200024A")]
		public enum SoundType
		{
			[Token(Token = "0x4000EC0")]
			None,
			[Token(Token = "0x4000EC1")]
			Prop,
			[Token(Token = "0x4000EC2")]
			Plant,
			[Token(Token = "0x4000EC3")]
			Tile,
			[Token(Token = "0x4000EC4")]
			Propeller,
			[Token(Token = "0x4000EC5")]
			ItalianWire,
			[Token(Token = "0x4000EC6")]
			Lighthouse,
			[Token(Token = "0x4000EC7")]
			BirdAppear,
			[Token(Token = "0x4000EC8")]
			BirdTakeoff,
			[Token(Token = "0x4000EC9")]
			BirdTakeoff1,
			[Token(Token = "0x4000ECA")]
			Window,
			[Token(Token = "0x4000ECB")]
			Debris,
			[Token(Token = "0x4000ECC")]
			DebrisSplash,
			[Token(Token = "0x4000ECD")]
			Spire
		}

		[Token(Token = "0x200024B")]
		public struct SingleSound
		{
			[Token(Token = "0x4000ECE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string audioClip;

			[Token(Token = "0x4000ECF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Vector3 pos;
		}

		[Token(Token = "0x4000EBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private WorldMaster master;

		[Token(Token = "0x4000EBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private List<SingleSound> soundQueue;

		[Token(Token = "0x4000EBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Dictionary<SoundType, ManySound> soundDict;

		[Token(Token = "0x4000EBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int counter;

		[Token(Token = "0x6001203")]
		[Address(RVA = "0x9E34A4", Offset = "0x9E34A4", VA = "0x9E34A4")]
		public void PlaySound(SoundType soundType, Vector3 pos, float pitch = 0f, float volume = 1f)
		{
		}

		[Token(Token = "0x6001204")]
		[Address(RVA = "0x9E3790", Offset = "0x9E3790", VA = "0x9E3790")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001205")]
		[Address(RVA = "0x9E3BF8", Offset = "0x9E3BF8", VA = "0x9E3BF8")]
		public void OnUpdate()
		{
		}

		[Token(Token = "0x6001206")]
		[Address(RVA = "0x9E41B4", Offset = "0x9E41B4", VA = "0x9E41B4")]
		public ManySoundsManager()
		{
		}
	}
}
namespace Placemaker.Ui
{
	[Token(Token = "0x200024C")]
	public class VRControllerScreenCursor : MonoBehaviour, UiMaster.IUiSetup
	{
		[Token(Token = "0x200024D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F0DE4", Offset = "0x6F0DE4")]
		private sealed class <>c__DisplayClass19_0
		{
			[Token(Token = "0x4000EDD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public VRControllerScreenCursor <>4__this;

			[Token(Token = "0x4000EDE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public UiMaster master;

			[Token(Token = "0x6001210")]
			[Address(RVA = "0x1080430", Offset = "0x1080430", VA = "0x1080430")]
			public <>c__DisplayClass19_0()
			{
			}

			[Token(Token = "0x6001211")]
			[Address(RVA = "0x1080438", Offset = "0x1080438", VA = "0x1080438")]
			internal void <Placemaker.Ui.UiMaster.IUiSetup.OnSetup>b__0(UiMaster.MenuState oldState, UiMaster.MenuState newState)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200024E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F0DF4", Offset = "0x6F0DF4")]
		private sealed class <>c
		{
			[Token(Token = "0x4000EDF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000EE0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action<float> <>9__19_1;

			[Token(Token = "0x6001213")]
			[Address(RVA = "0x1080424", Offset = "0x1080424", VA = "0x1080424")]
			public <>c()
			{
			}

			[Token(Token = "0x6001214")]
			[Address(RVA = "0x108042C", Offset = "0x108042C", VA = "0x108042C")]
			internal void <Placemaker.Ui.UiMaster.IUiSetup.OnSetup>b__19_1(float x)
			{
			}
		}

		[Token(Token = "0x4000ED0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private UiMaster master;

		[Token(Token = "0x4000ED1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private UpdateState visibleState;

		[Token(Token = "0x4000ED2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int actionCount;

		[Token(Token = "0x4000ED3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float actionT;

		[Token(Token = "0x4000ED4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float disappearTime;

		[Token(Token = "0x4000ED5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private float deadZone;

		[Token(Token = "0x4000ED6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool isAdding;

		[Token(Token = "0x4000ED7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		public bool isUndoOrRedo;

		[Token(Token = "0x4000ED8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private XROrigin xrOrigin;

		[Token(Token = "0x4000ED9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private XRController leftHandController;

		[Token(Token = "0x4000EDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private XRController rightHandController;

		[Token(Token = "0x4000EDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F73C4", Offset = "0x6F73C4")]
		private bool <removePressed>k__BackingField;

		[Token(Token = "0x4000EDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F73D4", Offset = "0x6F73D4")]
		private bool <addPressed>k__BackingField;

		[Token(Token = "0x1700049F")]
		private bool removePressed
		{
			[Token(Token = "0x6001207")]
			[Address(RVA = "0x1BDC5F8", Offset = "0x1BDC5F8", VA = "0x1BDC5F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FC65C", Offset = "0x6FC65C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001208")]
			[Address(RVA = "0x1BDC600", Offset = "0x1BDC600", VA = "0x1BDC600")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FC66C", Offset = "0x6FC66C")]
			set
			{
			}
		}

		[Token(Token = "0x170004A0")]
		private bool addPressed
		{
			[Token(Token = "0x6001209")]
			[Address(RVA = "0x1BDC60C", Offset = "0x1BDC60C", VA = "0x1BDC60C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FC67C", Offset = "0x6FC67C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600120A")]
			[Address(RVA = "0x1BDC614", Offset = "0x1BDC614", VA = "0x1BDC614")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FC68C", Offset = "0x6FC68C")]
			set
			{
			}
		}

		[Token(Token = "0x600120B")]
		[Address(RVA = "0x1BDC620", Offset = "0x1BDC620", VA = "0x1BDC620", Slot = "5")]
		private void Placemaker.Ui.UiMaster.IUiSetup.OnSetup(UiMaster master)
		{
		}

		[Token(Token = "0x600120C")]
		[Address(RVA = "0x1BDC824", Offset = "0x1BDC824", VA = "0x1BDC824", Slot = "4")]
		private void Placemaker.Ui.UiMaster.IUiSetup.OnStart(UiMaster master)
		{
		}

		[Token(Token = "0x600120D")]
		[Address(RVA = "0x1BDC828", Offset = "0x1BDC828", VA = "0x1BDC828")]
		private void Update()
		{
		}

		[Token(Token = "0x600120E")]
		[Address(RVA = "0x1BDD4DC", Offset = "0x1BDD4DC", VA = "0x1BDD4DC")]
		private bool IsControllerActive(XRController controller)
		{
			return default(bool);
		}

		[Token(Token = "0x600120F")]
		[Address(RVA = "0x1BDD584", Offset = "0x1BDD584", VA = "0x1BDD584")]
		public VRControllerScreenCursor()
		{
		}
	}
	[Token(Token = "0x200024F")]
	public class MenuMusic : MonoBehaviour, UiMaster.IUiSetup
	{
		[Token(Token = "0x4000EE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private AudioSource audioSource;

		[Token(Token = "0x4000EE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float targetVolume;

		[Token(Token = "0x4000EE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float speed;

		[Token(Token = "0x4000EE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private List<AudioClip> audioClips;

		[Token(Token = "0x6001215")]
		[Address(RVA = "0x9E5EA4", Offset = "0x9E5EA4", VA = "0x9E5EA4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001216")]
		[Address(RVA = "0x9E5F70", Offset = "0x9E5F70", VA = "0x9E5F70")]
		public void StopPlaying(float timer = 1f)
		{
		}

		[Token(Token = "0x6001217")]
		[Address(RVA = "0x9E5FB4", Offset = "0x9E5FB4", VA = "0x9E5FB4")]
		public void StartPlaying()
		{
		}

		[Token(Token = "0x6001218")]
		[Address(RVA = "0x9E60BC", Offset = "0x9E60BC", VA = "0x9E60BC")]
		public void StartPlaying(AudioClip clip)
		{
		}

		[Token(Token = "0x6001219")]
		[Address(RVA = "0x9E60F0", Offset = "0x9E60F0", VA = "0x9E60F0", Slot = "4")]
		public void OnStart(UiMaster master)
		{
		}

		[Token(Token = "0x600121A")]
		[Address(RVA = "0x9E60F4", Offset = "0x9E60F4", VA = "0x9E60F4", Slot = "5")]
		public void OnSetup(UiMaster master)
		{
		}

		[Token(Token = "0x600121B")]
		[Address(RVA = "0x9E6148", Offset = "0x9E6148", VA = "0x9E6148")]
		public MenuMusic()
		{
		}
	}
	[Token(Token = "0x2000250")]
	public class ControlBinding : UIBehaviour, UiMaster.IUiSetup
	{
		[Token(Token = "0x2000251")]
		public enum ControllerTypeGroup
		{
			[Token(Token = "0x4000EFA")]
			KeyboardAndMouse,
			[Token(Token = "0x4000EFB")]
			Joystick
		}

		[Token(Token = "0x2000252")]
		private struct TargetMapping
		{
			[Token(Token = "0x4000EFC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ControllerMap controllerMap;

			[Token(Token = "0x4000EFD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int actionElementMapId;
		}

		[Token(Token = "0x2000253")]
		public enum RowVisibilityCategory
		{
			[Token(Token = "0x4000EFF")]
			KeyboardAndMouse,
			[Token(Token = "0x4000F00")]
			Joystick,
			[Token(Token = "0x4000F01")]
			All
		}

		[Token(Token = "0x2000254")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F0E04", Offset = "0x6F0E04")]
		private sealed class <>c__DisplayClass44_0
		{
			[Token(Token = "0x4000F02")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string CharacterName;

			[Token(Token = "0x6001236")]
			[Address(RVA = "0x91AC04", Offset = "0x91AC04", VA = "0x91AC04")]
			public <>c__DisplayClass44_0()
			{
			}

			[Token(Token = "0x6001237")]
			[Address(RVA = "0x91AC0C", Offset = "0x91AC0C", VA = "0x91AC0C")]
			internal bool <CanKeyBeMapped>b__0(string x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000EE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private UiMaster master;

		[Token(Token = "0x4000EE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private BindingRow srcBindingRow;

		[Token(Token = "0x4000EE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform rowsLayout;

		[Token(Token = "0x4000EE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private TextMeshProUGUI statusText;

		[Token(Token = "0x4000EE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private List<BindingRow> bindingRows;

		[Token(Token = "0x4000EEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private List<BindingRow> bindingRowsPool;

		[Token(Token = "0x4000EEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public UpdateState openState;

		[Token(Token = "0x4000EEC")]
		private const string category = "Default";

		[Token(Token = "0x4000EED")]
		private const string uiCategory = "UI";

		[Token(Token = "0x4000EEE")]
		private const string layout = "Default";

		[Token(Token = "0x4000EEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool conflictFound;

		[Token(Token = "0x4000EF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		[SerializeField]
		private bool buttonMapState;

		[Token(Token = "0x4000EF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<string> bindingActions;

		[Token(Token = "0x4000EF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static List<string> possibleBindingCharacters;

		[Token(Token = "0x4000EF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private InputMapper inputMapperJoystickKeyboard;

		[Token(Token = "0x4000EF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private InputMapper inputMapperMouse;

		[Token(Token = "0x4000EF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private ControllerTypeGroup selectedControllerGroupType;

		[Token(Token = "0x4000EF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private int selectedControllerGroupId;

		[Token(Token = "0x4000EF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private TargetMapping replaceTargetMapping;

		[Token(Token = "0x4000EF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public GameObject rebindingDialogPanel;

		[Token(Token = "0x600121C")]
		[Address(RVA = "0x8E7BC8", Offset = "0x8E7BC8", VA = "0x8E7BC8", Slot = "18")]
		public void OnSetup(UiMaster master)
		{
		}

		[Token(Token = "0x600121D")]
		[Address(RVA = "0x8E7CDC", Offset = "0x8E7CDC", VA = "0x8E7CDC", Slot = "17")]
		public void OnStart(UiMaster master)
		{
		}

		[Token(Token = "0x600121E")]
		[Address(RVA = "0x8E7D0C", Offset = "0x8E7D0C", VA = "0x8E7D0C")]
		public void Open()
		{
		}

		[Token(Token = "0x600121F")]
		[Address(RVA = "0x8E7D74", Offset = "0x8E7D74", VA = "0x8E7D74")]
		public void Close(bool openSettings)
		{
		}

		[Token(Token = "0x6001220")]
		[Address(RVA = "0x8E7DFC", Offset = "0x8E7DFC", VA = "0x8E7DFC")]
		private void SetupMenu()
		{
		}

		[Token(Token = "0x6001221")]
		[Address(RVA = "0x8E8E00", Offset = "0x8E8E00", VA = "0x8E8E00")]
		private new void OnEnable()
		{
		}

		[Token(Token = "0x6001222")]
		[Address(RVA = "0x8E8EE8", Offset = "0x8E8EE8", VA = "0x8E8EE8")]
		private new void OnDisable()
		{
		}

		[Token(Token = "0x6001223")]
		[Address(RVA = "0x8E900C", Offset = "0x8E900C", VA = "0x8E900C")]
		public void Confirm()
		{
		}

		[Token(Token = "0x6001224")]
		[Address(RVA = "0x8E9134", Offset = "0x8E9134", VA = "0x8E9134")]
		public void LoadDefaultControls()
		{
		}

		[Token(Token = "0x6001225")]
		[Address(RVA = "0x8E8BE8", Offset = "0x8E8BE8", VA = "0x8E8BE8")]
		private void SetRowButtons()
		{
		}

		[Token(Token = "0x6001226")]
		[Address(RVA = "0x8E8A68", Offset = "0x8E8A68", VA = "0x8E8A68")]
		private void SetRow(Rewired.InputAction action, AxisRange actionRange, string label, RowVisibilityCategory visibility, int index)
		{
		}

		[Token(Token = "0x6001227")]
		[Address(RVA = "0x8E97EC", Offset = "0x8E97EC", VA = "0x8E97EC")]
		private void OnInputMapped(InputMapper.InputMappedEventData data)
		{
		}

		[Token(Token = "0x6001228")]
		[Address(RVA = "0x8E9874", Offset = "0x8E9874", VA = "0x8E9874")]
		private void OnConflictFound(InputMapper.ConflictFoundEventData data)
		{
		}

		[Token(Token = "0x6001229")]
		[Address(RVA = "0x8E990C", Offset = "0x8E990C", VA = "0x8E990C")]
		private void OnStopped(InputMapper.StoppedEventData data)
		{
		}

		[Token(Token = "0x600122A")]
		[Address(RVA = "0x8E9960", Offset = "0x8E9960", VA = "0x8E9960")]
		private bool OnIsElementAllowed(ControllerPollingInfo info)
		{
			return default(bool);
		}

		[Token(Token = "0x600122B")]
		[Address(RVA = "0x8E9B8C", Offset = "0x8E9B8C", VA = "0x8E9B8C")]
		private void OnInputFieldClicked(int index, int actionElementMapToReplaceId, bool isAltField)
		{
		}

		[Token(Token = "0x600122C")]
		[Address(RVA = "0x8E9DA8", Offset = "0x8E9DA8", VA = "0x8E9DA8")]
		private void StartListeningDelayedMouseAndKeyboard(int index, ControllerMap keyboardMap, ControllerMap mouseMap, int actionElementMapToReplaceId, bool isAltField)
		{
		}

		[Token(Token = "0x600122D")]
		[Address(RVA = "0x8EA070", Offset = "0x8EA070", VA = "0x8EA070")]
		private void StartListeningDelayedJoystick(int index, int actionElementMapToReplaceId)
		{
		}

		[Token(Token = "0x600122E")]
		[Address(RVA = "0x8EA2A4", Offset = "0x8EA2A4", VA = "0x8EA2A4")]
		public void OnControllerSelected(int controllerType)
		{
		}

		[Token(Token = "0x600122F")]
		[Address(RVA = "0x8EA2A8", Offset = "0x8EA2A8", VA = "0x8EA2A8")]
		private void SetSelectedController(ControllerTypeGroup controllerTypeGroup)
		{
		}

		[Token(Token = "0x6001230")]
		[Address(RVA = "0x8E9108", Offset = "0x8E9108", VA = "0x8E9108")]
		public bool AreAllActionsMapped()
		{
			return default(bool);
		}

		[Token(Token = "0x6001231")]
		[Address(RVA = "0x8E9A60", Offset = "0x8E9A60", VA = "0x8E9A60")]
		public bool CanKeyBeMapped(string CharacterName)
		{
			return default(bool);
		}

		[Token(Token = "0x6001232")]
		[Address(RVA = "0x8E9110", Offset = "0x8E9110", VA = "0x8E9110")]
		private void SetStatusText(string text)
		{
		}

		[Token(Token = "0x6001233")]
		[Address(RVA = "0x8EA420", Offset = "0x8EA420", VA = "0x8EA420")]
		public ControlBinding()
		{
		}

		[Token(Token = "0x6001235")]
		[Address(RVA = "0x8E92B4", Offset = "0x8E92B4", VA = "0x8E92B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FC69C", Offset = "0x6FC69C")]
		private void <SetRowButtons>g__SetActionElement|32_0(BindingRow row, int index, int selectedControllerGroupId, ControllerType[] controllerTypes)
		{
		}
	}
	[Token(Token = "0x2000255")]
	public class ControlBindingKey : MonoBehaviour
	{
		[Token(Token = "0x2000256")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F0E14", Offset = "0x6F0E14")]
		private sealed class <>c__DisplayClass7_0
		{
			[Token(Token = "0x4000F09")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Action<ControlBindingKey> onClickCall;

			[Token(Token = "0x4000F0A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public ControlBindingKey <>4__this;

			[Token(Token = "0x600123B")]
			[Address(RVA = "0x91AC20", Offset = "0x91AC20", VA = "0x91AC20")]
			public <>c__DisplayClass7_0()
			{
			}

			[Token(Token = "0x600123C")]
			[Address(RVA = "0x91AC28", Offset = "0x91AC28", VA = "0x91AC28")]
			internal void <SetOnClickListener>b__0()
			{
			}
		}

		[Token(Token = "0x4000F03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string actionName;

		[Token(Token = "0x4000F04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Rewired.InputAction inputAction;

		[Token(Token = "0x4000F05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AxisRange axisRange;

		[Token(Token = "0x4000F06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int actionElementMapId;

		[Token(Token = "0x4000F07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public TextMeshProUGUI buttonText;

		[Token(Token = "0x4000F08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private BaseButton baseButton;

		[Token(Token = "0x6001238")]
		[Address(RVA = "0x8EB10C", Offset = "0x8EB10C", VA = "0x8EB10C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001239")]
		[Address(RVA = "0x8EB160", Offset = "0x8EB160", VA = "0x8EB160")]
		public void SetOnClickListener(int actionElementMapId, Action<ControlBindingKey> onClickCall)
		{
		}

		[Token(Token = "0x600123A")]
		[Address(RVA = "0x8EB250", Offset = "0x8EB250", VA = "0x8EB250")]
		public ControlBindingKey()
		{
		}
	}
	[Token(Token = "0x2000257")]
	public class KeyboardAndMouseControlRemap : UIBehaviour, UiMaster.IUiSetup, IOnScenePostProcess
	{
		[Token(Token = "0x2000258")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F0E24", Offset = "0x6F0E24")]
		private sealed class <>c__DisplayClass29_0
		{
			[Token(Token = "0x4000F1C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string CharacterName;

			[Token(Token = "0x6001253")]
			[Address(RVA = "0x92772C", Offset = "0x92772C", VA = "0x92772C")]
			public <>c__DisplayClass29_0()
			{
			}

			[Token(Token = "0x6001254")]
			[Address(RVA = "0x927734", Offset = "0x927734", VA = "0x927734")]
			internal bool <CanKeyBeMapped>b__0(string x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000F0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private UiMaster master;

		[Token(Token = "0x4000F0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GenericControlsMenu genericControlsMenu;

		[Token(Token = "0x4000F0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform keyParent;

		[Token(Token = "0x4000F0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Transform keyLayout;

		[Token(Token = "0x4000F0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GenericControlsMenu controlsMenu;

		[Token(Token = "0x4000F10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private CanvasGroup darkener;

		[Token(Token = "0x4000F11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public UpdateState darkenState;

		[Token(Token = "0x4000F12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private InputMapper inputMapper;

		[Token(Token = "0x4000F13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<string> possibleBindingCharacters;

		[Token(Token = "0x4000F14")]
		private const string category = "Default";

		[Token(Token = "0x4000F15")]
		private const string uiCategory = "UI";

		[Token(Token = "0x4000F16")]
		private const string layout = "Default";

		[Token(Token = "0x4000F17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private bool buttonMapState;

		[Token(Token = "0x4000F18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		[SerializeField]
		private bool conflictFound;

		[Token(Token = "0x4000F19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public ControlBindingKey currentKey;

		[Token(Token = "0x4000F1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private List<ControlBindingKey> controlBindingKeys;

		[Token(Token = "0x4000F1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private bool hasSetup;

		[Token(Token = "0x600123D")]
		[Address(RVA = "0xB22130", Offset = "0xB22130", VA = "0xB22130", Slot = "18")]
		public void OnSetup(UiMaster master)
		{
		}

		[Token(Token = "0x600123E")]
		[Address(RVA = "0xB22350", Offset = "0xB22350", VA = "0xB22350", Slot = "17")]
		public void OnStart(UiMaster master)
		{
		}

		[Token(Token = "0x600123F")]
		[Address(RVA = "0xB22354", Offset = "0xB22354", VA = "0xB22354")]
		private void Update()
		{
		}

		[Token(Token = "0x6001240")]
		[Address(RVA = "0xB22364", Offset = "0xB22364", VA = "0xB22364")]
		private void Setup()
		{
		}

		[Token(Token = "0x6001241")]
		[Address(RVA = "0xB233F8", Offset = "0xB233F8", VA = "0xB233F8")]
		private void OnInputFieldClicked(ControlBindingKey controlBindingKey)
		{
		}

		[Token(Token = "0x6001242")]
		[Address(RVA = "0xB22A28", Offset = "0xB22A28", VA = "0xB22A28")]
		private void RefreshControls()
		{
		}

		[Token(Token = "0x6001243")]
		[Address(RVA = "0xB23738", Offset = "0xB23738", VA = "0xB23738")]
		private new void OnEnable()
		{
		}

		[Token(Token = "0x6001244")]
		[Address(RVA = "0xB23B5C", Offset = "0xB23B5C", VA = "0xB23B5C")]
		private new void OnDisable()
		{
		}

		[Token(Token = "0x6001245")]
		[Address(RVA = "0xB23C24", Offset = "0xB23C24", VA = "0xB23C24")]
		private void OnInputMapped(InputMapper.InputMappedEventData data)
		{
		}

		[Token(Token = "0x6001246")]
		[Address(RVA = "0xB23C60", Offset = "0xB23C60", VA = "0xB23C60")]
		private void OnConflictFound(InputMapper.ConflictFoundEventData data)
		{
		}

		[Token(Token = "0x6001247")]
		[Address(RVA = "0xB23CBC", Offset = "0xB23CBC", VA = "0xB23CBC")]
		private void OnStopped(InputMapper.StoppedEventData data)
		{
		}

		[Token(Token = "0x6001248")]
		[Address(RVA = "0xB23D14", Offset = "0xB23D14", VA = "0xB23D14")]
		private bool OnIsElementAllowed(ControllerPollingInfo info)
		{
			return default(bool);
		}

		[Token(Token = "0x6001249")]
		[Address(RVA = "0xB23DC0", Offset = "0xB23DC0", VA = "0xB23DC0")]
		public bool CanKeyBeMapped(string CharacterName)
		{
			return default(bool);
		}

		[Token(Token = "0x600124A")]
		[Address(RVA = "0xB23EEC", Offset = "0xB23EEC", VA = "0xB23EEC", Slot = "19")]
		public void OnScenePostProcess(bool isBuild, TargetPlatformFlags platform)
		{
		}

		[Token(Token = "0x600124B")]
		[Address(RVA = "0xB23FD4", Offset = "0xB23FD4", VA = "0xB23FD4")]
		public void DarkenerClicked()
		{
		}

		[Token(Token = "0x600124C")]
		[Address(RVA = "0xB24008", Offset = "0xB24008", VA = "0xB24008")]
		public void LeaveControlRemapButton()
		{
		}

		[Token(Token = "0x600124D")]
		[Address(RVA = "0xB240E4", Offset = "0xB240E4", VA = "0xB240E4")]
		public void ResetControlsButton()
		{
		}

		[Token(Token = "0x600124E")]
		[Address(RVA = "0xB2420C", Offset = "0xB2420C", VA = "0xB2420C")]
		public KeyboardAndMouseControlRemap()
		{
		}

		[Token(Token = "0x6001250")]
		[Address(RVA = "0xB25108", Offset = "0xB25108", VA = "0xB25108")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FC6AC", Offset = "0x6FC6AC")]
		private void <OnSetup>b__17_0(float x)
		{
		}

		[Token(Token = "0x6001251")]
		[Address(RVA = "0xB25134", Offset = "0xB25134", VA = "0xB25134")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FC6BC", Offset = "0x6FC6BC")]
		private void <OnSetup>b__17_1(float x)
		{
		}

		[Token(Token = "0x6001252")]
		[Address(RVA = "0xB25144", Offset = "0xB25144", VA = "0xB25144")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FC6CC", Offset = "0x6FC6CC")]
		private void <OnSetup>b__17_2(float x)
		{
		}
	}
	[Token(Token = "0x2000259")]
	public class KeyboardControlsMenu : UIBehaviour, UiMaster.IUiSetup, IOnScenePostProcess
	{
		[Token(Token = "0x200025A")]
		public enum ControllerTypeGroup
		{
			[Token(Token = "0x4000F30")]
			KeyboardAndMouse,
			[Token(Token = "0x4000F31")]
			Joystick
		}

		[Token(Token = "0x200025B")]
		private struct TargetMapping
		{
			[Token(Token = "0x4000F32")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ControllerMap controllerMap;

			[Token(Token = "0x4000F33")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int actionElementMapId;
		}

		[Token(Token = "0x200025C")]
		public enum RowVisibilityCategory
		{
			[Token(Token = "0x4000F35")]
			KeyboardAndMouse,
			[Token(Token = "0x4000F36")]
			Joystick,
			[Token(Token = "0x4000F37")]
			All
		}

		[Token(Token = "0x200025D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F0E34", Offset = "0x6F0E34")]
		private sealed class <>c__DisplayClass21_0
		{
			[Token(Token = "0x4000F38")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ControlBindingKey key;

			[Token(Token = "0x4000F39")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public KeyboardControlsMenu <>4__this;

			[Token(Token = "0x600126B")]
			[Address(RVA = "0x927748", Offset = "0x927748", VA = "0x927748")]
			public <>c__DisplayClass21_0()
			{
			}

			[Token(Token = "0x600126C")]
			[Address(RVA = "0x927750", Offset = "0x927750", VA = "0x927750")]
			internal void <OnSetup>b__2()
			{
			}

			[Token(Token = "0x600126D")]
			[Address(RVA = "0x927774", Offset = "0x927774", VA = "0x927774")]
			internal bool <OnSetup>b__3(ActionElementMap x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x200025E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F0E44", Offset = "0x6F0E44")]
		private sealed class <>c__DisplayClass37_0
		{
			[Token(Token = "0x4000F3A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string CharacterName;

			[Token(Token = "0x600126E")]
			[Address(RVA = "0x9277A0", Offset = "0x9277A0", VA = "0x9277A0")]
			public <>c__DisplayClass37_0()
			{
			}

			[Token(Token = "0x600126F")]
			[Address(RVA = "0x9277A8", Offset = "0x9277A8", VA = "0x9277A8")]
			internal bool <CanKeyBeMapped>b__0(string x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000F1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private UiMaster master;

		[Token(Token = "0x4000F1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private CanvasGroup darkener;

		[Token(Token = "0x4000F1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform keyParent;

		[Token(Token = "0x4000F20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GenericControlsMenu controlsMenu;

		[Token(Token = "0x4000F21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public UpdateState darkenState;

		[Token(Token = "0x4000F22")]
		private const string category = "Default";

		[Token(Token = "0x4000F23")]
		private const string uiCategory = "UI";

		[Token(Token = "0x4000F24")]
		private const string layout = "Default";

		[Token(Token = "0x4000F25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool conflictFound;

		[Token(Token = "0x4000F26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<string> bindingActions;

		[Token(Token = "0x4000F27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static List<string> possibleBindingCharacters;

		[Token(Token = "0x4000F28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private InputMapper inputMapperJoystickKeyboard;

		[Token(Token = "0x4000F29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private InputMapper inputMapperMouse;

		[Token(Token = "0x4000F2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private ControllerTypeGroup selectedControllerGroupType;

		[Token(Token = "0x4000F2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int selectedControllerGroupId;

		[Token(Token = "0x4000F2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private TargetMapping replaceTargetMapping;

		[Token(Token = "0x4000F2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public GameObject rebindingDialogPanel;

		[Token(Token = "0x4000F2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public ControlBindingKey currentKey;

		[Token(Token = "0x6001255")]
		[Address(RVA = "0xC46AE4", Offset = "0xC46AE4", VA = "0xC46AE4", Slot = "18")]
		public void OnSetup(UiMaster master)
		{
		}

		[Token(Token = "0x6001256")]
		[Address(RVA = "0xC46EE0", Offset = "0xC46EE0", VA = "0xC46EE0")]
		public void OnControlBindingClicked(ControlBindingKey controlBindingKey)
		{
		}

		[Token(Token = "0x6001257")]
		[Address(RVA = "0xC470B8", Offset = "0xC470B8", VA = "0xC470B8")]
		public void DarkenerClicked()
		{
		}

		[Token(Token = "0x6001258")]
		[Address(RVA = "0xC470D8", Offset = "0xC470D8", VA = "0xC470D8", Slot = "17")]
		public void OnStart(UiMaster master)
		{
		}

		[Token(Token = "0x6001259")]
		[Address(RVA = "0xC470DC", Offset = "0xC470DC", VA = "0xC470DC")]
		private void SetupMenu()
		{
		}

		[Token(Token = "0x600125A")]
		[Address(RVA = "0xC475D0", Offset = "0xC475D0", VA = "0xC475D0")]
		private void OnInputMapped(InputMapper.InputMappedEventData obj)
		{
		}

		[Token(Token = "0x600125B")]
		[Address(RVA = "0xC47610", Offset = "0xC47610", VA = "0xC47610")]
		private bool OnIsElementAllowed(ControllerPollingInfo obj)
		{
			return default(bool);
		}

		[Token(Token = "0x600125C")]
		[Address(RVA = "0xC47650", Offset = "0xC47650", VA = "0xC47650")]
		private new void OnEnable()
		{
		}

		[Token(Token = "0x600125D")]
		[Address(RVA = "0xC477C4", Offset = "0xC477C4", VA = "0xC477C4")]
		private new void OnDisable()
		{
		}

		[Token(Token = "0x600125E")]
		[Address(RVA = "0xC478E8", Offset = "0xC478E8", VA = "0xC478E8")]
		public void Confirm()
		{
		}

		[Token(Token = "0x600125F")]
		[Address(RVA = "0xC479D4", Offset = "0xC479D4", VA = "0xC479D4")]
		public void LoadDefaultControls()
		{
		}

		[Token(Token = "0x6001260")]
		[Address(RVA = "0xC47B38", Offset = "0xC47B38", VA = "0xC47B38")]
		private void OnConflictFound(InputMapper.ConflictFoundEventData data)
		{
		}

		[Token(Token = "0x6001261")]
		[Address(RVA = "0xC47B3C", Offset = "0xC47B3C", VA = "0xC47B3C")]
		private void OnStopped(InputMapper.StoppedEventData data)
		{
		}

		[Token(Token = "0x6001262")]
		[Address(RVA = "0xC47B40", Offset = "0xC47B40", VA = "0xC47B40")]
		public void OnControllerSelected(int controllerType)
		{
		}

		[Token(Token = "0x6001263")]
		[Address(RVA = "0xC47B44", Offset = "0xC47B44", VA = "0xC47B44")]
		private void SetSelectedController(ControllerTypeGroup controllerTypeGroup)
		{
		}

		[Token(Token = "0x6001264")]
		[Address(RVA = "0xC479CC", Offset = "0xC479CC", VA = "0xC479CC")]
		public bool AreAllActionsMapped()
		{
			return default(bool);
		}

		[Token(Token = "0x6001265")]
		[Address(RVA = "0xC47CBC", Offset = "0xC47CBC", VA = "0xC47CBC")]
		public bool CanKeyBeMapped(string CharacterName)
		{
			return default(bool);
		}

		[Token(Token = "0x6001266")]
		[Address(RVA = "0xC47DE8", Offset = "0xC47DE8", VA = "0xC47DE8", Slot = "19")]
		private void Placemaker.SceneProcessing.IOnScenePostProcess.OnScenePostProcess(bool isBuild, TargetPlatformFlags platform)
		{
		}

		[Token(Token = "0x6001267")]
		[Address(RVA = "0xC47ED0", Offset = "0xC47ED0", VA = "0xC47ED0")]
		public KeyboardControlsMenu()
		{
		}

		[Token(Token = "0x6001269")]
		[Address(RVA = "0xC48BBC", Offset = "0xC48BBC", VA = "0xC48BBC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FC6DC", Offset = "0x6FC6DC")]
		private void <OnSetup>b__21_0(float x)
		{
		}

		[Token(Token = "0x600126A")]
		[Address(RVA = "0xC48BE8", Offset = "0xC48BE8", VA = "0xC48BE8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FC6EC", Offset = "0x6FC6EC")]
		private void <OnSetup>b__21_1(float x)
		{
		}
	}
	[Token(Token = "0x200025F")]
	public class ActionInputManager : MonoBehaviour, UiMaster.IUiSetup
	{
		[Token(Token = "0x4000F3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private UiMaster master;

		[Token(Token = "0x6001270")]
		[Address(RVA = "0xFA4648", Offset = "0xFA4648", VA = "0xFA4648", Slot = "5")]
		private void Placemaker.Ui.UiMaster.IUiSetup.OnSetup(UiMaster master)
		{
		}

		[Token(Token = "0x6001271")]
		[Address(RVA = "0xFA46F0", Offset = "0xFA46F0", VA = "0xFA46F0", Slot = "4")]
		private void Placemaker.Ui.UiMaster.IUiSetup.OnStart(UiMaster master)
		{
		}

		[Token(Token = "0x6001272")]
		[Address(RVA = "0xFA46F4", Offset = "0xFA46F4", VA = "0xFA46F4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001273")]
		[Address(RVA = "0xFA5134", Offset = "0xFA5134", VA = "0xFA5134")]
		public ActionInputManager()
		{
		}

		[Token(Token = "0x6001274")]
		[Address(RVA = "0xFA513C", Offset = "0xFA513C", VA = "0xFA513C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FC6FC", Offset = "0x6FC6FC")]
		private void <Placemaker.Ui.UiMaster.IUiSetup.OnSetup>b__1_0(UiMaster.MenuState oldState, UiMaster.MenuState newState)
		{
		}
	}
	[Token(Token = "0x2000260")]
	public class GamepadScreenCursor : MonoBehaviour, UiMaster.IUiSetup
	{
		[Token(Token = "0x2000261")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F0E54", Offset = "0x6F0E54")]
		private sealed class <>c__DisplayClass12_0
		{
			[Token(Token = "0x4000F48")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GamepadScreenCursor <>4__this;

			[Token(Token = "0x4000F49")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public UiMaster master;

			[Token(Token = "0x4000F4A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CanvasGroup cursorCanvas;

			[Token(Token = "0x4000F4B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public CanvasGroup arrowCanvas;

			[Token(Token = "0x600127B")]
			[Address(RVA = "0x92472C", Offset = "0x92472C", VA = "0x92472C")]
			public <>c__DisplayClass12_0()
			{
			}

			[Token(Token = "0x600127C")]
			[Address(RVA = "0x924734", Offset = "0x924734", VA = "0x924734")]
			internal void <Placemaker.Ui.UiMaster.IUiSetup.OnSetup>b__0(UiMaster.MenuState oldState, UiMaster.MenuState newState)
			{
			}

			[Token(Token = "0x600127D")]
			[Address(RVA = "0x9249C4", Offset = "0x9249C4", VA = "0x9249C4")]
			internal void <Placemaker.Ui.UiMaster.IUiSetup.OnSetup>b__1(float x)
			{
			}

			[Token(Token = "0x600127E")]
			[Address(RVA = "0x924A7C", Offset = "0x924A7C", VA = "0x924A7C")]
			internal void <Placemaker.Ui.UiMaster.IUiSetup.OnSetup>b__3(float x)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000262")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F0E64", Offset = "0x6F0E64")]
		private sealed class <>c
		{
			[Token(Token = "0x4000F4C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000F4D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action<float> <>9__12_2;

			[Token(Token = "0x6001280")]
			[Address(RVA = "0x924720", Offset = "0x924720", VA = "0x924720")]
			public <>c()
			{
			}

			[Token(Token = "0x6001281")]
			[Address(RVA = "0x924728", Offset = "0x924728", VA = "0x924728")]
			internal void <Placemaker.Ui.UiMaster.IUiSetup.OnSetup>b__12_2(float x)
			{
			}
		}

		[Token(Token = "0x4000F3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private UiMaster master;

		[Token(Token = "0x4000F3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private RectTransform field;

		[Token(Token = "0x4000F3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private RectTransform cursor;

		[Token(Token = "0x4000F3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private RectTransform arrow;

		[Token(Token = "0x4000F40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private RectTransform arrowScale;

		[Token(Token = "0x4000F41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private UpdateState openState;

		[Token(Token = "0x4000F42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private UpdateState visibleState;

		[Token(Token = "0x4000F43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private UpdateState arrowState;

		[Token(Token = "0x4000F44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int actionCount;

		[Token(Token = "0x4000F45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float actionT;

		[Token(Token = "0x4000F46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float disappearTime;

		[Token(Token = "0x4000F47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public bool isAdding;

		[Token(Token = "0x6001275")]
		[Address(RVA = "0xE833EC", Offset = "0xE833EC", VA = "0xE833EC", Slot = "5")]
		private void Placemaker.Ui.UiMaster.IUiSetup.OnSetup(UiMaster master)
		{
		}

		[Token(Token = "0x6001276")]
		[Address(RVA = "0xE836F0", Offset = "0xE836F0", VA = "0xE836F0", Slot = "4")]
		private void Placemaker.Ui.UiMaster.IUiSetup.OnStart(UiMaster master)
		{
		}

		[Token(Token = "0x6001277")]
		[Address(RVA = "0xE836F4", Offset = "0xE836F4", VA = "0xE836F4")]
		public void OnCameraRotate()
		{
		}

		[Token(Token = "0x6001278")]
		[Address(RVA = "0xE836FC", Offset = "0xE836FC", VA = "0xE836FC")]
		public void Pan()
		{
		}

		[Token(Token = "0x6001279")]
		[Address(RVA = "0xE83834", Offset = "0xE83834", VA = "0xE83834")]
		private void Update()
		{
		}

		[Token(Token = "0x600127A")]
		[Address(RVA = "0xE843F4", Offset = "0xE843F4", VA = "0xE843F4")]
		public GamepadScreenCursor()
		{
		}
	}
	[Token(Token = "0x2000263")]
	public class MasterClicker : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler, IPointerUpHandler, IPointerDownHandler, IPointerClickHandler, IEndDragHandler, IDragHandler, IBeginDragHandler, UiMaster.IUiSetup
	{
		[Token(Token = "0x4000F4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GraphicRaycaster graphicRaycaster;

		[Token(Token = "0x4000F4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private EventSystem eventSystem;

		[Token(Token = "0x4000F50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private PointerEventData pointerEventData;

		[Token(Token = "0x4000F51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private UiMaster master;

		[Token(Token = "0x4000F52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public VoxelType currentVoxelType;

		[Token(Token = "0x4000F53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		public bool hovered;

		[Token(Token = "0x4000F54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
		public bool bobbing;

		[Token(Token = "0x4000F55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3B")]
		public bool aboutToRemove;

		[Token(Token = "0x4000F56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool dragging;

		[Token(Token = "0x4000F57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
		public bool pointerPressed;

		[Token(Token = "0x4000F58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3E")]
		public bool pointerPressUsed;

		[Token(Token = "0x4000F59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float pointerPressTime;

		[Token(Token = "0x4000F5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Vector2 pointerPosition;

		[Token(Token = "0x4000F5B")]
		public const float removeVoxelThreshold = 0.25f;

		[Token(Token = "0x4000F5C")]
		public const float bobbingStartThreshold = 0.35f;

		[Token(Token = "0x4000F5D")]
		public const float colorPickThreshold = 1.5f;

		[Token(Token = "0x4000F5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public AudioSource pressSource;

		[Token(Token = "0x4000F5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int clickFrame;

		[Token(Token = "0x4000F60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int hoverFrame;

		[Token(Token = "0x4000F61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Vector3[] drags;

		[Token(Token = "0x4000F62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private int dragIndex;

		[Token(Token = "0x4000F63")]
		private const int dragCount = 5;

		[Token(Token = "0x4000F64")]
		[SerializeField]
		private const float sameTouchDistanceValue = 0.022f;

		[Token(Token = "0x4000F65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[SerializeField]
		private float touchLocationThreshold;

		[Token(Token = "0x4000F66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected bool m_AddPressed;

		[Token(Token = "0x4000F67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		protected bool m_RemovePressed;

		[Token(Token = "0x4000F68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x72")]
		protected bool isLeftArm;

		[Token(Token = "0x170004A1")]
		private Maker maker
		{
			[Token(Token = "0x6001282")]
			[Address(RVA = "0x9E4274", Offset = "0x9E4274", VA = "0x9E4274")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001283")]
		[Address(RVA = "0x9E4290", Offset = "0x9E4290", VA = "0x9E4290", Slot = "4")]
		private void UnityEngine.EventSystems.IPointerEnterHandler.OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001284")]
		[Address(RVA = "0x9E42D4", Offset = "0x9E42D4", VA = "0x9E42D4", Slot = "5")]
		private void UnityEngine.EventSystems.IPointerExitHandler.OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001285")]
		[Address(RVA = "0x9E4320", Offset = "0x9E4320", VA = "0x9E4320")]
		private void RemoveHover()
		{
		}

		[Token(Token = "0x6001286")]
		[Address(RVA = "0x9E4354", Offset = "0x9E4354", VA = "0x9E4354")]
		private void Update()
		{
		}

		[Token(Token = "0x6001287")]
		[Address(RVA = "0x9E4638", Offset = "0x9E4638", VA = "0x9E4638")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001288")]
		[Address(RVA = "0x9E47A4", Offset = "0x9E47A4", VA = "0x9E47A4")]
		private void MaybeUpdateHover(Vector2 position)
		{
		}

		[Token(Token = "0x6001289")]
		[Address(RVA = "0x9E484C", Offset = "0x9E484C", VA = "0x9E484C")]
		public void TouchDown(Vector2 position)
		{
		}

		[Token(Token = "0x600128A")]
		[Address(RVA = "0x9E498C", Offset = "0x9E498C", VA = "0x9E498C")]
		public void TouchUp(bool couldAct)
		{
		}

		[Token(Token = "0x600128B")]
		[Address(RVA = "0x9E4CF0", Offset = "0x9E4CF0", VA = "0x9E4CF0", Slot = "7")]
		private void UnityEngine.EventSystems.IPointerDownHandler.OnPointerDown(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600128C")]
		[Address(RVA = "0x9E4E00", Offset = "0x9E4E00", VA = "0x9E4E00", Slot = "6")]
		private void UnityEngine.EventSystems.IPointerUpHandler.OnPointerUp(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600128D")]
		[Address(RVA = "0x9E4E78", Offset = "0x9E4E78", VA = "0x9E4E78", Slot = "8")]
		private void UnityEngine.EventSystems.IPointerClickHandler.OnPointerClick(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600128E")]
		[Address(RVA = "0x9E4B64", Offset = "0x9E4B64", VA = "0x9E4B64")]
		public Voxel AddClick()
		{
			return null;
		}

		[Token(Token = "0x600128F")]
		[Address(RVA = "0x9E4A48", Offset = "0x9E4A48", VA = "0x9E4A48")]
		public bool RemoveClick()
		{
			return default(bool);
		}

		[Token(Token = "0x6001290")]
		[Address(RVA = "0x9E4504", Offset = "0x9E4504", VA = "0x9E4504")]
		public bool ColorPick()
		{
			return default(bool);
		}

		[Token(Token = "0x6001291")]
		[Address(RVA = "0x9E4F48", Offset = "0x9E4F48", VA = "0x9E4F48")]
		private void PaintClick()
		{
		}

		[Token(Token = "0x6001292")]
		[Address(RVA = "0x9E5028", Offset = "0x9E5028", VA = "0x9E5028")]
		private void BucketClick()
		{
		}

		[Token(Token = "0x6001293")]
		[Address(RVA = "0x9E524C", Offset = "0x9E524C", VA = "0x9E524C")]
		private void BulldozeClick()
		{
		}

		[Token(Token = "0x6001294")]
		[Address(RVA = "0x9E5410", Offset = "0x9E5410", VA = "0x9E5410", Slot = "11")]
		private void UnityEngine.EventSystems.IBeginDragHandler.OnBeginDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001295")]
		[Address(RVA = "0x9E54B8", Offset = "0x9E54B8", VA = "0x9E54B8", Slot = "10")]
		private void UnityEngine.EventSystems.IDragHandler.OnDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001296")]
		[Address(RVA = "0x9E5628", Offset = "0x9E5628", VA = "0x9E5628", Slot = "9")]
		private void UnityEngine.EventSystems.IEndDragHandler.OnEndDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001297")]
		[Address(RVA = "0x9E5780", Offset = "0x9E5780", VA = "0x9E5780")]
		private bool InputReady()
		{
			return default(bool);
		}

		[Token(Token = "0x6001298")]
		[Address(RVA = "0x9E5788", Offset = "0x9E5788", VA = "0x9E5788", Slot = "12")]
		private void Placemaker.Ui.UiMaster.IUiSetup.OnStart(UiMaster master)
		{
		}

		[Token(Token = "0x6001299")]
		[Address(RVA = "0x9E578C", Offset = "0x9E578C", VA = "0x9E578C", Slot = "13")]
		private void Placemaker.Ui.UiMaster.IUiSetup.OnSetup(UiMaster master)
		{
		}

		[Token(Token = "0x600129A")]
		[Address(RVA = "0x9E58B0", Offset = "0x9E58B0", VA = "0x9E58B0")]
		public MasterClicker()
		{
		}

		[Token(Token = "0x600129B")]
		[Address(RVA = "0x9E590C", Offset = "0x9E590C", VA = "0x9E590C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FC70C", Offset = "0x6FC70C")]
		private void <Placemaker.Ui.UiMaster.IUiSetup.OnSetup>b__51_0(UiMaster.MenuState oldState, UiMaster.MenuState newState)
		{
		}
	}
	[Token(Token = "0x2000264")]
	public class ObjExporter : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000265")]
		private class MaterialToExport
		{
			[Token(Token = "0x4000F6E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string exportName;

			[Token(Token = "0x4000F6F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public bool canBeProp;

			[Token(Token = "0x4000F70")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
			public bool canBeModule;

			[Token(Token = "0x4000F71")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public List<Material> materials;

			[Token(Token = "0x60012A1")]
			[Address(RVA = "0x92AF5C", Offset = "0x92AF5C", VA = "0x92AF5C")]
			public MaterialToExport()
			{
			}
		}

		[Token(Token = "0x4000F69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private WorldMaster master;

		[Token(Token = "0x4000F6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MaterialToExport[] materialsToExport;

		[Token(Token = "0x4000F6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string outputString;

		[Token(Token = "0x4000F6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string mtlString;

		[Token(Token = "0x4000F6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Texture2D textureToExport;

		[Token(Token = "0x600129C")]
		[Address(RVA = "0x9EE1C8", Offset = "0x9EE1C8", VA = "0x9EE1C8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x6FC71C", Offset = "0x6FC71C")]
		public void Export()
		{
		}

		[Token(Token = "0x600129D")]
		[Address(RVA = "0x9EE354", Offset = "0x9EE354", VA = "0x9EE354")]
		private void Action(string objPath)
		{
		}

		[Token(Token = "0x600129E")]
		[Address(RVA = "0x9EE850", Offset = "0x9EE850", VA = "0x9EE850")]
		private void Do(string mtlName)
		{
		}

		[Token(Token = "0x600129F")]
		[Address(RVA = "0x9F32BC", Offset = "0x9F32BC", VA = "0x9F32BC")]
		private void AddMesh(string materialName, MeshFilter mf, Matrix4x4 matrix, List<Vector3> srcVerts, List<Vector2> srcUvs, List<Vector3> srcNormals, List<Vector4> srcTangents, List<int> srcTris, List<int> dstTris, List<string> vertStrings, List<string> uvStrings, List<string> normalstrings, Dictionary<Vector3, int> vertDict, Dictionary<Vector2, int> uvDict, Dictionary<Vector3, int> normalDict, ref int vertCount, ref int normalCount, ref int uvCount, ref string outputString, CultureInfo format)
		{
		}

		[Token(Token = "0x60012A0")]
		[Address(RVA = "0x9F40F0", Offset = "0x9F40F0", VA = "0x9F40F0")]
		public ObjExporter()
		{
		}
	}
	[Token(Token = "0x2000266")]
	public class OrbitalCamera : MonoBehaviour, UiMaster.IUiSetup
	{
		[Token(Token = "0x4000F72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private UiMaster master;

		[Token(Token = "0x4000F73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		public Camera cam;

		[Token(Token = "0x4000F74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		public Camera skyBoxCam;

		[Token(Token = "0x4000F75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		public Camera mirrorCam;

		[Token(Token = "0x4000F76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6F76A4", Offset = "0x6F76A4")]
		public float zoomTarget;

		[Token(Token = "0x4000F77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6F76E4", Offset = "0x6F76E4")]
		public float zoomCurrent;

		[Token(Token = "0x4000F78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6F7724", Offset = "0x6F7724")]
		[SerializeField]
		public float rotationY;

		[Token(Token = "0x4000F79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6F7764", Offset = "0x6F7764")]
		[SerializeField]
		public float rotationX;

		[Token(Token = "0x4000F7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6F77A4", Offset = "0x6F77A4")]
		[SerializeField]
		public float panHexCurrentX;

		[Token(Token = "0x4000F7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6F77E4", Offset = "0x6F77E4")]
		[SerializeField]
		public float panHexCurrentY;

		[Token(Token = "0x4000F7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6F7824", Offset = "0x6F7824")]
		[SerializeField]
		public float panHeightCurrent;

		[Token(Token = "0x4000F7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6F7864", Offset = "0x6F7864")]
		public float panHexTargetX;

		[Token(Token = "0x4000F7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6F78A4", Offset = "0x6F78A4")]
		public float panHexTargetY;

		[Token(Token = "0x4000F7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6F78E4", Offset = "0x6F78E4")]
		public float panHeightTarget;

		[Token(Token = "0x4000F80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private float rotationSpeedX;

		[Token(Token = "0x4000F81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[SerializeField]
		private float rotationSpeedY;

		[Token(Token = "0x4000F82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float3x2 boundsCurrent;

		[Token(Token = "0x4000F83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public float3x2 boundsTarget;

		[Token(Token = "0x4000F84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public float heightCurrent;

		[Token(Token = "0x4000F85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public float heightTarget;

		[Token(Token = "0x4000F86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float anyVoxelsCurrent;

		[Token(Token = "0x4000F87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private float minRadius;

		[Token(Token = "0x4000F88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private bool snap;

		[Token(Token = "0x4000F89")]
		public const float maxAngle = 88f;

		[Token(Token = "0x4000F8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		public float currentDist;

		[Token(Token = "0x4000F8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public float nonDollyDist;

		[Token(Token = "0x4000F8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		public float lastBoundsChangeTime;

		[Token(Token = "0x4000F8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private float distMin;

		[Token(Token = "0x4000F8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private float distMax;

		[Token(Token = "0x60012A2")]
		[Address(RVA = "0xE01F98", Offset = "0xE01F98", VA = "0xE01F98", Slot = "4")]
		private void Placemaker.Ui.UiMaster.IUiSetup.OnStart(UiMaster master)
		{
		}

		[Token(Token = "0x60012A3")]
		[Address(RVA = "0xE01FB8", Offset = "0xE01FB8", VA = "0xE01FB8", Slot = "5")]
		private void Placemaker.Ui.UiMaster.IUiSetup.OnSetup(UiMaster master)
		{
		}

		[Token(Token = "0x60012A4")]
		[Address(RVA = "0xE02408", Offset = "0xE02408", VA = "0xE02408")]
		private float GetMinAngle(float dist)
		{
			return default(float);
		}

		[Token(Token = "0x60012A5")]
		[Address(RVA = "0xE02448", Offset = "0xE02448", VA = "0xE02448")]
		private void RemapPans(float3x2 oldBounds, float3x2 newBounts, float oldHeight, float newHeight)
		{
		}

		[Token(Token = "0x60012A6")]
		[Address(RVA = "0xE027A0", Offset = "0xE027A0", VA = "0xE027A0")]
		public void SetBounds()
		{
		}

		[Token(Token = "0x60012A7")]
		[Address(RVA = "0xE02270", Offset = "0xE02270", VA = "0xE02270")]
		public void BoundsUpdated()
		{
		}

		[Token(Token = "0x60012A8")]
		[Address(RVA = "0xE02810", Offset = "0xE02810", VA = "0xE02810")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60012A9")]
		[Address(RVA = "0xE03294", Offset = "0xE03294", VA = "0xE03294")]
		public void StopRotation()
		{
		}

		[Token(Token = "0x60012AA")]
		[Address(RVA = "0xE0329C", Offset = "0xE0329C", VA = "0xE0329C")]
		public void SetRotationSpeed(float2 delta)
		{
		}

		[Token(Token = "0x60012AB")]
		[Address(RVA = "0xE03344", Offset = "0xE03344", VA = "0xE03344")]
		public void RotateCamera(float2 delta)
		{
		}

		[Token(Token = "0x60012AC")]
		[Address(RVA = "0xE024C4", Offset = "0xE024C4", VA = "0xE024C4")]
		public static Vector3 GetWorldPos(float panHexX, float panHexY, float panHeight, float3x2 bounds, float height)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60012AD")]
		[Address(RVA = "0xE02630", Offset = "0xE02630", VA = "0xE02630")]
		public static (float, float, float) GetRelativePos(Vector3 worldPos, float3x2 bounds, float height)
		{
			return default((float, float, float));
		}

		[Token(Token = "0x60012AE")]
		[Address(RVA = "0xE03418", Offset = "0xE03418", VA = "0xE03418")]
		public void Focus(Vector3 pos)
		{
		}

		[Token(Token = "0x60012AF")]
		[Address(RVA = "0xE03554", Offset = "0xE03554", VA = "0xE03554")]
		public void WASDCamera(Vector3 delta)
		{
		}

		[Token(Token = "0x60012B0")]
		[Address(RVA = "0xE03A1C", Offset = "0xE03A1C", VA = "0xE03A1C")]
		public void PanCamera(Vector2 pos, Vector2 delta2)
		{
		}

		[Token(Token = "0x60012B1")]
		[Address(RVA = "0xE04244", Offset = "0xE04244", VA = "0xE04244")]
		public void PinchZoom(float multiplier)
		{
		}

		[Token(Token = "0x60012B2")]
		[Address(RVA = "0xE0427C", Offset = "0xE0427C", VA = "0xE0427C")]
		public void ScrollZoom(float delta)
		{
		}

		[Token(Token = "0x60012B3")]
		[Address(RVA = "0xE042C8", Offset = "0xE042C8", VA = "0xE042C8")]
		public void GamepadZoom(float delta)
		{
		}

		[Token(Token = "0x60012B4")]
		[Address(RVA = "0xE04338", Offset = "0xE04338", VA = "0xE04338")]
		public void Save(SaveData saveData)
		{
		}

		[Token(Token = "0x60012B5")]
		[Address(RVA = "0xE043E8", Offset = "0xE043E8", VA = "0xE043E8")]
		public void Load(SaveData saveData)
		{
		}

		[Token(Token = "0x60012B6")]
		[Address(RVA = "0xE04480", Offset = "0xE04480", VA = "0xE04480")]
		public void OnDrawGizmos()
		{
		}

		[Token(Token = "0x60012B7")]
		[Address(RVA = "0xE04C30", Offset = "0xE04C30", VA = "0xE04C30")]
		public OrbitalCamera()
		{
		}

		[Token(Token = "0x60012B8")]
		[Address(RVA = "0xE04C68", Offset = "0xE04C68", VA = "0xE04C68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FC754", Offset = "0x6FC754")]
		private void <Placemaker.Ui.UiMaster.IUiSetup.OnSetup>b__30_0(float x)
		{
		}

		[Token(Token = "0x60012B9")]
		[Address(RVA = "0xE04ADC", Offset = "0xE04ADC", VA = "0xE04ADC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FC764", Offset = "0x6FC764")]
		private Vector3 <OnDrawGizmos>g__GetPanPos|49_0(float panHexX, float panHexY, float panHeight)
		{
			return default(Vector3);
		}
	}
	[Token(Token = "0x2000267")]
	public class BaseButton : MonoBehaviour, IPointerDownHandler, IEventSystemHandler, IPointerUpHandler, IPointerEnterHandler, IPointerExitHandler, IPointerClickHandler
	{
		[Token(Token = "0x2000268")]
		public enum State : byte
		{
			[Token(Token = "0x4000F9C")]
			None,
			[Token(Token = "0x4000F9D")]
			Hover,
			[Token(Token = "0x4000F9E")]
			Pressed,
			[Token(Token = "0x4000F9F")]
			Disabled
		}

		[Serializable]
		[Token(Token = "0x2000269")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F0E74", Offset = "0x6F0E74")]
		private sealed class <>c
		{
			[Token(Token = "0x4000FA0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000FA1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action<State> <>9__32_0;

			[Token(Token = "0x4000FA2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static System.Action <>9__32_1;

			[Token(Token = "0x4000FA3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Action<bool> <>9__32_2;

			[Token(Token = "0x60012CC")]
			[Address(RVA = "0xBAEA7C", Offset = "0xBAEA7C", VA = "0xBAEA7C")]
			public <>c()
			{
			}

			[Token(Token = "0x60012CD")]
			[Address(RVA = "0xBAEA84", Offset = "0xBAEA84", VA = "0xBAEA84")]
			internal void <.ctor>b__32_0(State <p0>)
			{
			}

			[Token(Token = "0x60012CE")]
			[Address(RVA = "0xBAEA88", Offset = "0xBAEA88", VA = "0xBAEA88")]
			internal void <.ctor>b__32_1()
			{
			}

			[Token(Token = "0x60012CF")]
			[Address(RVA = "0xBAEA8C", Offset = "0xBAEA8C", VA = "0xBAEA8C")]
			internal void <.ctor>b__32_2(bool <p0>)
			{
			}
		}

		[Token(Token = "0x4000F8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public UnityEvent onClick;

		[Token(Token = "0x4000F90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float holdTime;

		[Token(Token = "0x4000F91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int buttonDownMask;

		[Token(Token = "0x4000F92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int insideMask;

		[Token(Token = "0x4000F93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int insideNotDraggingMask;

		[Token(Token = "0x4000F94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int dragMask;

		[Token(Token = "0x4000F95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public PointerEventData eventData;

		[Token(Token = "0x4000F96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private bool _disabled;

		[Token(Token = "0x4000F97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Action<State> onStateChange;

		[Token(Token = "0x4000F98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public System.Action onClickAction;

		[Token(Token = "0x4000F99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Action<bool> onButtonDownChange;

		[Token(Token = "0x4000F9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public State state;

		[Token(Token = "0x170004A2")]
		public float timeHeld
		{
			[Token(Token = "0x60012BA")]
			[Address(RVA = "0xFA7708", Offset = "0xFA7708", VA = "0xFA7708")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170004A3")]
		public bool isVr
		{
			[Token(Token = "0x60012BB")]
			[Address(RVA = "0xFA7734", Offset = "0xFA7734", VA = "0xFA7734")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170004A4")]
		public bool disabled
		{
			[Token(Token = "0x60012BD")]
			[Address(RVA = "0xFA77EC", Offset = "0xFA77EC", VA = "0xFA77EC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60012BE")]
			[Address(RVA = "0xFA77F4", Offset = "0xFA77F4", VA = "0xFA77F4")]
			set
			{
			}
		}

		[Token(Token = "0x60012BC")]
		[Address(RVA = "0xFA77C8", Offset = "0xFA77C8", VA = "0xFA77C8")]
		private int GetMask(PointerEventData pointerEventData)
		{
			return default(int);
		}

		[Token(Token = "0x60012BF")]
		[Address(RVA = "0xFA7870", Offset = "0xFA7870", VA = "0xFA7870")]
		public void UpdateState()
		{
		}

		[Token(Token = "0x60012C0")]
		[Address(RVA = "0xFA78C4", Offset = "0xFA78C4", VA = "0xFA78C4")]
		public void SetState(State state)
		{
		}

		[Token(Token = "0x60012C1")]
		[Address(RVA = "0xFA78DC", Offset = "0xFA78DC", VA = "0xFA78DC")]
		public void Subscribe(Action<State> onStateChangeFunc)
		{
		}

		[Token(Token = "0x60012C2")]
		[Address(RVA = "0xFA7818", Offset = "0xFA7818", VA = "0xFA7818")]
		public void PushState()
		{
		}

		[Token(Token = "0x60012C3")]
		[Address(RVA = "0xFA7984", Offset = "0xFA7984", VA = "0xFA7984", Slot = "6")]
		private void UnityEngine.EventSystems.IPointerEnterHandler.OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60012C4")]
		[Address(RVA = "0xFA7A0C", Offset = "0xFA7A0C", VA = "0xFA7A0C", Slot = "7")]
		private void UnityEngine.EventSystems.IPointerExitHandler.OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60012C5")]
		[Address(RVA = "0xFA7AB0", Offset = "0xFA7AB0", VA = "0xFA7AB0", Slot = "4")]
		private void UnityEngine.EventSystems.IPointerDownHandler.OnPointerDown(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60012C6")]
		[Address(RVA = "0xFA7BC4", Offset = "0xFA7BC4", VA = "0xFA7BC4", Slot = "5")]
		private void UnityEngine.EventSystems.IPointerUpHandler.OnPointerUp(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60012C7")]
		[Address(RVA = "0xFA7C70", Offset = "0xFA7C70", VA = "0xFA7C70", Slot = "8")]
		private void UnityEngine.EventSystems.IPointerClickHandler.OnPointerClick(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60012C8")]
		[Address(RVA = "0xFA7B64", Offset = "0xFA7B64", VA = "0xFA7B64")]
		public void Click()
		{
		}

		[Token(Token = "0x60012C9")]
		[Address(RVA = "0xFA7CC8", Offset = "0xFA7CC8", VA = "0xFA7CC8")]
		public void ResetMasks()
		{
		}

		[Token(Token = "0x60012CA")]
		[Address(RVA = "0xFA7CD4", Offset = "0xFA7CD4", VA = "0xFA7CD4")]
		public BaseButton()
		{
		}
	}
	[Token(Token = "0x200026A")]
	public class BetterScrollRect : UIBehaviour, IDragHandler, IEventSystemHandler, IBeginDragHandler, IEndDragHandler, IPointerEnterHandler, IPointerExitHandler
	{
		[Token(Token = "0x200026B")]
		public enum Mode
		{
			[Token(Token = "0x4000FB2")]
			None,
			[Token(Token = "0x4000FB3")]
			Horizontal,
			[Token(Token = "0x4000FB4")]
			Vertical,
			[Token(Token = "0x4000FB5")]
			Both
		}

		[Token(Token = "0x200026C")]
		private struct Context
		{
			[Token(Token = "0x4000FB6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public RectTransform contentRt;

			[Token(Token = "0x4000FB7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public RectTransform parentRt;

			[Token(Token = "0x4000FB8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Rect contentRect;

			[Token(Token = "0x4000FB9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Rect parentRect;

			[Token(Token = "0x4000FBA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public bool horizontalNow;

			[Token(Token = "0x4000FBB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
			public bool verticalNow;

			[Token(Token = "0x60012DC")]
			[Address(RVA = "0xBAEB04", Offset = "0xBAEB04", VA = "0xBAEB04")]
			public Context(BetterScrollRect betterScrollRect)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200026D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F0E84", Offset = "0x6F0E84")]
		private sealed class <>c
		{
			[Token(Token = "0x4000FBC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000FBD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static System.Action <>9__26_0;

			[Token(Token = "0x4000FBE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static System.Action <>9__26_1;

			[Token(Token = "0x4000FBF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static System.Action <>9__26_2;

			[Token(Token = "0x60012DE")]
			[Address(RVA = "0xBAEAF0", Offset = "0xBAEAF0", VA = "0xBAEAF0")]
			public <>c()
			{
			}

			[Token(Token = "0x60012DF")]
			[Address(RVA = "0xBAEAF8", Offset = "0xBAEAF8", VA = "0xBAEAF8")]
			internal void <.ctor>b__26_0()
			{
			}

			[Token(Token = "0x60012E0")]
			[Address(RVA = "0xBAEAFC", Offset = "0xBAEAFC", VA = "0xBAEAFC")]
			internal void <.ctor>b__26_1()
			{
			}

			[Token(Token = "0x60012E1")]
			[Address(RVA = "0xBAEB00", Offset = "0xBAEB00", VA = "0xBAEB00")]
			internal void <.ctor>b__26_2()
			{
			}
		}

		[Token(Token = "0x4000FA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Mode mode;

		[Token(Token = "0x4000FA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool snap;

		[Token(Token = "0x4000FA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector2 unclampedAnchor;

		[Token(Token = "0x4000FA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector2 normPosCurrent;

		[Token(Token = "0x4000FA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector2 normPosTarget;

		[Token(Token = "0x4000FA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector2 velocity;

		[NonSerialized]
		[Token(Token = "0x4000FAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<Vector3> drags;

		[Token(Token = "0x4000FAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool dragging;

		[Token(Token = "0x4000FAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		private bool hovered;

		[Token(Token = "0x4000FAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private int dragPointerId;

		[Token(Token = "0x4000FAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public System.Action onBeginDrag;

		[Token(Token = "0x4000FAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public System.Action onEndDrag;

		[Token(Token = "0x4000FB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public System.Action onScroll;

		[Token(Token = "0x60012D0")]
		[Address(RVA = "0xFA8678", Offset = "0xFA8678", VA = "0xFA8678", Slot = "18")]
		private void UnityEngine.EventSystems.IBeginDragHandler.OnBeginDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60012D1")]
		[Address(RVA = "0xFA873C", Offset = "0xFA873C", VA = "0xFA873C", Slot = "17")]
		private void UnityEngine.EventSystems.IDragHandler.OnDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60012D2")]
		[Address(RVA = "0xFA893C", Offset = "0xFA893C", VA = "0xFA893C", Slot = "19")]
		private void UnityEngine.EventSystems.IEndDragHandler.OnEndDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60012D3")]
		[Address(RVA = "0xFA8DB4", Offset = "0xFA8DB4", VA = "0xFA8DB4", Slot = "20")]
		private void UnityEngine.EventSystems.IPointerEnterHandler.OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60012D4")]
		[Address(RVA = "0xFA8DC0", Offset = "0xFA8DC0", VA = "0xFA8DC0", Slot = "21")]
		private void UnityEngine.EventSystems.IPointerExitHandler.OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60012D5")]
		[Address(RVA = "0xFA8C20", Offset = "0xFA8C20", VA = "0xFA8C20")]
		private void GetNormalizedPos(Vector3 worldPos, ref Vector2 normalizedPos, Context context)
		{
		}

		[Token(Token = "0x60012D6")]
		[Address(RVA = "0xFA8DC8", Offset = "0xFA8DC8", VA = "0xFA8DC8")]
		private void GetWorldPos(Vector2 normalizedPos, ref Vector3 worldPos, Context context)
		{
		}

		[Token(Token = "0x60012D7")]
		[Address(RVA = "0xFA8FC8", Offset = "0xFA8FC8", VA = "0xFA8FC8")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x60012D8")]
		[Address(RVA = "0xFA9468", Offset = "0xFA9468", VA = "0xFA9468", Slot = "7")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x60012D9")]
		[Address(RVA = "0xFA9498", Offset = "0xFA9498", VA = "0xFA9498")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60012DA")]
		[Address(RVA = "0xFA9850", Offset = "0xFA9850", VA = "0xFA9850")]
		public Vector2 GetScrollableSize()
		{
			return default(Vector2);
		}

		[Token(Token = "0x60012DB")]
		[Address(RVA = "0xFA98F8", Offset = "0xFA98F8", VA = "0xFA98F8")]
		public BetterScrollRect()
		{
		}
	}
	[Token(Token = "0x200026E")]
	public static class ButtonAudio
	{
		[Token(Token = "0x200026F")]
		public struct AudioData
		{
			[Token(Token = "0x4000FC0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public AudioClip clip;

			[Token(Token = "0x4000FC1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public float pitch;

			[Token(Token = "0x4000FC2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public float volume;
		}

		[Token(Token = "0x2000270")]
		public enum SoundType
		{
			[Token(Token = "0x4000FC4")]
			disabled,
			[Token(Token = "0x4000FC5")]
			buttonDown,
			[Token(Token = "0x4000FC6")]
			click,
			[Token(Token = "0x4000FC7")]
			all,
			[Token(Token = "0x4000FC8")]
			gamepadSelected,
			[Token(Token = "0x4000FC9")]
			mouseOver
		}

		[Token(Token = "0x2000271")]
		public interface IButtonAudioModifier
		{
			[Token(Token = "0x60012E3")]
			void ModifyAudioData(ref AudioData audioData, SoundType soundType);
		}

		[Token(Token = "0x60012E2")]
		[Address(RVA = "0x8DF7E8", Offset = "0x8DF7E8", VA = "0x8DF7E8")]
		public static void Play(Transform t, SoundType soundType, float volume = 1f)
		{
		}
	}
	[Token(Token = "0x2000272")]
	public class ButtonAudio_Clip : MonoBehaviour, ButtonAudio.IButtonAudioModifier
	{
		[Token(Token = "0x4000FCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioClip clip;

		[Token(Token = "0x4000FCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ButtonAudio.SoundType soundType;

		[Token(Token = "0x60012E4")]
		[Address(RVA = "0x8DFBA0", Offset = "0x8DFBA0", VA = "0x8DFBA0", Slot = "4")]
		private void Placemaker.Ui.ButtonAudio.IButtonAudioModifier.ModifyAudioData(ref ButtonAudio.AudioData audioData, ButtonAudio.SoundType soundType)
		{
		}

		[Token(Token = "0x60012E5")]
		[Address(RVA = "0x8DFBC4", Offset = "0x8DFBC4", VA = "0x8DFBC4")]
		public ButtonAudio_Clip()
		{
		}
	}
	[Token(Token = "0x2000273")]
	public class ButtonAudio_Pitch : MonoBehaviour, ButtonAudio.IButtonAudioModifier
	{
		[Token(Token = "0x2000274")]
		private enum Mode
		{
			[Token(Token = "0x4000FD1")]
			Add,
			[Token(Token = "0x4000FD2")]
			Set
		}

		[Token(Token = "0x4000FCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ButtonAudio.SoundType soundType;

		[Token(Token = "0x4000FCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x6F7964", Offset = "0x6F7964")]
		[SerializeField]
		private Mode mode;

		[Token(Token = "0x4000FCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float min;

		[Token(Token = "0x4000FCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float max;

		[Token(Token = "0x60012E6")]
		[Address(RVA = "0x8DFBCC", Offset = "0x8DFBCC", VA = "0x8DFBCC", Slot = "4")]
		private void Placemaker.Ui.ButtonAudio.IButtonAudioModifier.ModifyAudioData(ref ButtonAudio.AudioData audioData, ButtonAudio.SoundType soundType)
		{
		}

		[Token(Token = "0x60012E7")]
		[Address(RVA = "0x8DFC34", Offset = "0x8DFC34", VA = "0x8DFC34")]
		public ButtonAudio_Pitch()
		{
		}
	}
	[Token(Token = "0x2000275")]
	public class ButtonNavigator : UIBehaviour
	{
		[Token(Token = "0x60012E8")]
		[Address(RVA = "0x8DFC58", Offset = "0x8DFC58", VA = "0x8DFC58")]
		public ButtonNavigator()
		{
		}
	}
	[Token(Token = "0x2000276")]
	public class CloseSymbol : MonoBehaviour, UiMaster.IUiSetup
	{
		[Token(Token = "0x4000FD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private UiMaster master;

		[Token(Token = "0x60012E9")]
		[Address(RVA = "0x8E77D0", Offset = "0x8E77D0", VA = "0x8E77D0", Slot = "5")]
		public void OnSetup(UiMaster master)
		{
		}

		[Token(Token = "0x60012EA")]
		[Address(RVA = "0x8E7934", Offset = "0x8E7934", VA = "0x8E7934", Slot = "4")]
		public void OnStart(UiMaster master)
		{
		}

		[Token(Token = "0x60012EB")]
		[Address(RVA = "0x8E7938", Offset = "0x8E7938", VA = "0x8E7938")]
		private void OnUpdate()
		{
		}

		[Token(Token = "0x60012EC")]
		[Address(RVA = "0x8E7998", Offset = "0x8E7998", VA = "0x8E7998")]
		public CloseSymbol()
		{
		}
	}
	[Token(Token = "0x2000277")]
	public class CommandFeedbacker : UIBehaviour, UiMaster.IUiSetup
	{
		[Token(Token = "0x4000FD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private UiMaster master;

		[Token(Token = "0x4000FD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float lastFeedbackTime;

		[Token(Token = "0x4000FD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float enableTime;

		[Token(Token = "0x4000FD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private CanvasGroup canvasGroup;

		[Token(Token = "0x4000FD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Transform scaler;

		[Token(Token = "0x4000FD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float scaleAmount;

		[Token(Token = "0x4000FDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float alphaAmount;

		[Token(Token = "0x60012ED")]
		[Address(RVA = "0x8E79A0", Offset = "0x8E79A0", VA = "0x8E79A0", Slot = "17")]
		private void Placemaker.Ui.UiMaster.IUiSetup.OnStart(UiMaster master)
		{
		}

		[Token(Token = "0x60012EE")]
		[Address(RVA = "0x8E79F4", Offset = "0x8E79F4", VA = "0x8E79F4", Slot = "18")]
		private void Placemaker.Ui.UiMaster.IUiSetup.OnSetup(UiMaster master)
		{
		}

		[Token(Token = "0x60012EF")]
		[Address(RVA = "0x8E79F8", Offset = "0x8E79F8", VA = "0x8E79F8")]
		private void Update()
		{
		}

		[Token(Token = "0x60012F0")]
		[Address(RVA = "0x8E7B40", Offset = "0x8E7B40", VA = "0x8E7B40")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x6FC774", Offset = "0x6FC774")]
		public void Feedback()
		{
		}

		[Token(Token = "0x60012F1")]
		[Address(RVA = "0x8E7BC0", Offset = "0x8E7BC0", VA = "0x8E7BC0")]
		public CommandFeedbacker()
		{
		}
	}
	[Token(Token = "0x2000278")]
	public class ControlLegend : MonoBehaviour, UiMaster.IUiSetup
	{
		[Token(Token = "0x4000FDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private UiMaster master;

		[Token(Token = "0x4000FDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UpdateState openState;

		[Token(Token = "0x4000FDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool wasSideMenuOpen;

		[Token(Token = "0x4000FDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		[SerializeField]
		private bool wasSettingsMenuOpen;

		[Token(Token = "0x4000FDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		private bool firstFrame;

		[Token(Token = "0x60012F2")]
		[Address(RVA = "0x8EB258", Offset = "0x8EB258", VA = "0x8EB258")]
		public void Open()
		{
		}

		[Token(Token = "0x60012F3")]
		[Address(RVA = "0x8EB30C", Offset = "0x8EB30C", VA = "0x8EB30C")]
		public void Close()
		{
		}

		[Token(Token = "0x60012F4")]
		[Address(RVA = "0x8EB398", Offset = "0x8EB398", VA = "0x8EB398", Slot = "5")]
		private void Placemaker.Ui.UiMaster.IUiSetup.OnSetup(UiMaster master)
		{
		}

		[Token(Token = "0x60012F5")]
		[Address(RVA = "0x8EB58C", Offset = "0x8EB58C", VA = "0x8EB58C", Slot = "4")]
		private void Placemaker.Ui.UiMaster.IUiSetup.OnStart(UiMaster master)
		{
		}

		[Token(Token = "0x60012F6")]
		[Address(RVA = "0x8EB590", Offset = "0x8EB590", VA = "0x8EB590")]
		private void Update()
		{
		}

		[Token(Token = "0x60012F7")]
		[Address(RVA = "0x8EB6C8", Offset = "0x8EB6C8", VA = "0x8EB6C8")]
		public ControlLegend()
		{
		}

		[Token(Token = "0x60012F8")]
		[Address(RVA = "0x8EB6D8", Offset = "0x8EB6D8", VA = "0x8EB6D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FC7AC", Offset = "0x6FC7AC")]
		private void <Placemaker.Ui.UiMaster.IUiSetup.OnSetup>b__7_0(float x)
		{
		}

		[Token(Token = "0x60012F9")]
		[Address(RVA = "0x8EB6EC", Offset = "0x8EB6EC", VA = "0x8EB6EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FC7BC", Offset = "0x6FC7BC")]
		private void <Placemaker.Ui.UiMaster.IUiSetup.OnSetup>b__7_1(UiMaster.MenuState oldState, UiMaster.MenuState newState)
		{
		}
	}
	[Token(Token = "0x2000279")]
	public static class CreditsData
	{
		[Token(Token = "0x4000FE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static string[] firstNames;

		[Token(Token = "0x4000FE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static string[] rawFury;

		[Token(Token = "0x4000FE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static string[] specialThanks;
	}
	[Token(Token = "0x200027A")]
	public class CreditsMenu : MonoBehaviour, UiMaster.IUiSetup, IOnScenePostProcess
	{
		[Serializable]
		[Token(Token = "0x200027B")]
		private struct AutoScroll
		{
			[Token(Token = "0x4000FED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F7A5C", Offset = "0x6F7A5C")]
			private bool <isActive>k__BackingField;

			[Token(Token = "0x4000FEE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F7A6C", Offset = "0x6F7A6C")]
			private bool <speedIsSet>k__BackingField;

			[Token(Token = "0x4000FEF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F7A7C", Offset = "0x6F7A7C")]
			private float <speed>k__BackingField;

			[Token(Token = "0x4000FF0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F7A8C", Offset = "0x6F7A8C")]
			private float <time>k__BackingField;

			[Token(Token = "0x4000FF1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F7A9C", Offset = "0x6F7A9C")]
			private float <targetPosition>k__BackingField;

			[Token(Token = "0x4000FF2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F7AAC", Offset = "0x6F7AAC")]
			private float <direction>k__BackingField;

			[Token(Token = "0x170004A5")]
			public bool isActive
			{
				[Token(Token = "0x6001308")]
				[Address(RVA = "0x92334C", Offset = "0x92334C", VA = "0x92334C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FC834", Offset = "0x6FC834")]
				readonly get
				{
					return default(bool);
				}
				[Token(Token = "0x6001309")]
				[Address(RVA = "0x923354", Offset = "0x923354", VA = "0x923354")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FC86C", Offset = "0x6FC86C")]
				set
				{
				}
			}

			[Token(Token = "0x170004A6")]
			public bool speedIsSet
			{
				[Token(Token = "0x600130A")]
				[Address(RVA = "0x923360", Offset = "0x923360", VA = "0x923360")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FC87C", Offset = "0x6FC87C")]
				readonly get
				{
					return default(bool);
				}
				[Token(Token = "0x600130B")]
				[Address(RVA = "0x923368", Offset = "0x923368", VA = "0x923368")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FC8B4", Offset = "0x6FC8B4")]
				set
				{
				}
			}

			[Token(Token = "0x170004A7")]
			public float speed
			{
				[Token(Token = "0x600130C")]
				[Address(RVA = "0x923374", Offset = "0x923374", VA = "0x923374")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FC8C4", Offset = "0x6FC8C4")]
				readonly get
				{
					return default(float);
				}
				[Token(Token = "0x600130D")]
				[Address(RVA = "0x92337C", Offset = "0x92337C", VA = "0x92337C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FC8FC", Offset = "0x6FC8FC")]
				set
				{
				}
			}

			[Token(Token = "0x170004A8")]
			public float time
			{
				[Token(Token = "0x600130E")]
				[Address(RVA = "0x923384", Offset = "0x923384", VA = "0x923384")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FC90C", Offset = "0x6FC90C")]
				readonly get
				{
					return default(float);
				}
				[Token(Token = "0x600130F")]
				[Address(RVA = "0x92338C", Offset = "0x92338C", VA = "0x92338C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FC944", Offset = "0x6FC944")]
				private set
				{
				}
			}

			[Token(Token = "0x170004A9")]
			public float targetPosition
			{
				[Token(Token = "0x6001310")]
				[Address(RVA = "0x923394", Offset = "0x923394", VA = "0x923394")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FC954", Offset = "0x6FC954")]
				readonly get
				{
					return default(float);
				}
				[Token(Token = "0x6001311")]
				[Address(RVA = "0x92339C", Offset = "0x92339C", VA = "0x92339C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FC98C", Offset = "0x6FC98C")]
				private set
				{
				}
			}

			[Token(Token = "0x170004AA")]
			public float direction
			{
				[Token(Token = "0x6001312")]
				[Address(RVA = "0x9233A4", Offset = "0x9233A4", VA = "0x9233A4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FC99C", Offset = "0x6FC99C")]
				readonly get
				{
					return default(float);
				}
				[Token(Token = "0x6001313")]
				[Address(RVA = "0x9233AC", Offset = "0x9233AC", VA = "0x9233AC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FC9D4", Offset = "0x6FC9D4")]
				private set
				{
				}
			}

			[Token(Token = "0x6001314")]
			[Address(RVA = "0x9233B4", Offset = "0x9233B4", VA = "0x9233B4")]
			public void OnOpen()
			{
			}

			[Token(Token = "0x6001315")]
			[Address(RVA = "0x923430", Offset = "0x923430", VA = "0x923430")]
			public void ChangeDirection()
			{
			}

			[Token(Token = "0x6001316")]
			[Address(RVA = "0x9233F8", Offset = "0x9233F8", VA = "0x9233F8")]
			public void ResetTimer(float value)
			{
			}
		}

		[Token(Token = "0x4000FE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private UiMaster master;

		[Token(Token = "0x4000FE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UpdateState openState;

		[Token(Token = "0x4000FE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private BetterScrollRect scrollRect;

		[Token(Token = "0x4000FE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private TMP_Text rawFuryText;

		[Token(Token = "0x4000FE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private TMP_Text specialThanksText;

		[Token(Token = "0x4000FE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private TMP_Text firstNamesText;

		[Token(Token = "0x4000FE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private AutoScroll autoScroll;

		[Token(Token = "0x4000FEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[SerializeField]
		private int openingFrame;

		[Token(Token = "0x4000FEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Vector2 oldScreenSize;

		[Token(Token = "0x4000FEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private MenuMusic menuMusic;

		[Token(Token = "0x60012FB")]
		[Address(RVA = "0xB354E8", Offset = "0xB354E8", VA = "0xB354E8", Slot = "5")]
		private void Placemaker.Ui.UiMaster.IUiSetup.OnSetup(UiMaster master)
		{
		}

		[Token(Token = "0x60012FC")]
		[Address(RVA = "0xB357EC", Offset = "0xB357EC", VA = "0xB357EC", Slot = "4")]
		private void Placemaker.Ui.UiMaster.IUiSetup.OnStart(UiMaster master)
		{
		}

		[Token(Token = "0x60012FD")]
		[Address(RVA = "0xB357F0", Offset = "0xB357F0", VA = "0xB357F0")]
		private void Open()
		{
		}

		[Token(Token = "0x60012FE")]
		[Address(RVA = "0xB35A10", Offset = "0xB35A10", VA = "0xB35A10")]
		private void Close()
		{
		}

		[Token(Token = "0x60012FF")]
		[Address(RVA = "0xB35A90", Offset = "0xB35A90", VA = "0xB35A90")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x6FC7CC", Offset = "0x6FC7CC")]
		public void Toggle()
		{
		}

		[Token(Token = "0x6001300")]
		[Address(RVA = "0xB3573C", Offset = "0xB3573C", VA = "0xB3573C")]
		private bool MaybeUpdateScreenSize()
		{
			return default(bool);
		}

		[Token(Token = "0x6001301")]
		[Address(RVA = "0xB35AD8", Offset = "0xB35AD8", VA = "0xB35AD8")]
		private void MaybeAdaptAutoScrollSpeed()
		{
		}

		[Token(Token = "0x6001302")]
		[Address(RVA = "0xB35C04", Offset = "0xB35C04", VA = "0xB35C04")]
		private void Update()
		{
		}

		[Token(Token = "0x6001303")]
		[Address(RVA = "0xB35EDC", Offset = "0xB35EDC", VA = "0xB35EDC", Slot = "6")]
		private void Placemaker.SceneProcessing.IOnScenePostProcess.OnScenePostProcess(bool isBuild, TargetPlatformFlags platform)
		{
		}

		[Token(Token = "0x6001304")]
		[Address(RVA = "0xB36354", Offset = "0xB36354", VA = "0xB36354")]
		public CreditsMenu()
		{
		}

		[Token(Token = "0x6001305")]
		[Address(RVA = "0xB363B8", Offset = "0xB363B8", VA = "0xB363B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FC804", Offset = "0x6FC804")]
		private void <Placemaker.Ui.UiMaster.IUiSetup.OnSetup>b__11_0()
		{
		}

		[Token(Token = "0x6001306")]
		[Address(RVA = "0xB363C0", Offset = "0xB363C0", VA = "0xB363C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FC814", Offset = "0x6FC814")]
		private void <Placemaker.Ui.UiMaster.IUiSetup.OnSetup>b__11_1()
		{
		}

		[Token(Token = "0x6001307")]
		[Address(RVA = "0xB363D4", Offset = "0xB363D4", VA = "0xB363D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FC824", Offset = "0x6FC824")]
		private void <Placemaker.Ui.UiMaster.IUiSetup.OnSetup>b__11_2()
		{
		}
	}
	[Token(Token = "0x200027C")]
	public class DialogSystem : MonoBehaviour, UiMaster.IUiSetup
	{
		[Token(Token = "0x200027D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F0E94", Offset = "0x6F0E94")]
		private sealed class <>c__DisplayClass15_0
		{
			[Token(Token = "0x4000FF9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public System.Action callback;

			[Token(Token = "0x6001326")]
			[Address(RVA = "0x923598", Offset = "0x923598", VA = "0x923598")]
			public <>c__DisplayClass15_0()
			{
			}

			[Token(Token = "0x6001327")]
			[Address(RVA = "0x9235A0", Offset = "0x9235A0", VA = "0x9235A0")]
			internal void <GameSuspendedDialog>g__Affirmative|0()
			{
			}
		}

		[Token(Token = "0x4000FF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private UiMaster master;

		[Token(Token = "0x4000FF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private DialogWindow srcDialogWindow;

		[Token(Token = "0x4000FF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Dim dialogDim;

		[Token(Token = "0x4000FF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Transform dialogsContainer;

		[Token(Token = "0x4000FF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private List<DialogWindow> dialogPool;

		[Token(Token = "0x4000FF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private List<DialogWindow> activeDialogs;

		[Token(Token = "0x6001317")]
		[Address(RVA = "0xB3A934", Offset = "0xB3A934", VA = "0xB3A934", Slot = "5")]
		public void OnSetup(UiMaster master)
		{
		}

		[Token(Token = "0x6001318")]
		[Address(RVA = "0xB3AAEC", Offset = "0xB3AAEC", VA = "0xB3AAEC", Slot = "4")]
		public void OnStart(UiMaster master)
		{
		}

		[Token(Token = "0x6001319")]
		[Address(RVA = "0xB3AAF0", Offset = "0xB3AAF0", VA = "0xB3AAF0")]
		private DialogWindow GetDialogFromPool()
		{
			return null;
		}

		[Token(Token = "0x600131A")]
		[Address(RVA = "0xB3AA00", Offset = "0xB3AA00", VA = "0xB3AA00")]
		private DialogWindow CreateNewDialog()
		{
			return null;
		}

		[Token(Token = "0x600131B")]
		[Address(RVA = "0xB3AD30", Offset = "0xB3AD30", VA = "0xB3AD30")]
		private void AddNewActiveDialog(DialogWindow dialog)
		{
		}

		[Token(Token = "0x600131C")]
		[Address(RVA = "0xB3AE30", Offset = "0xB3AE30", VA = "0xB3AE30")]
		public void DisableActiveDialog(DialogWindow dialog)
		{
		}

		[Token(Token = "0x600131D")]
		[Address(RVA = "0xB3AF78", Offset = "0xB3AF78", VA = "0xB3AF78")]
		public void ShowGameCoreDialog()
		{
		}

		[Token(Token = "0x600131E")]
		[Address(RVA = "0xB3B5C0", Offset = "0xB3B5C0", VA = "0xB3B5C0")]
		public void ShowGamepadDisconnectedDialog()
		{
		}

		[Token(Token = "0x600131F")]
		[Address(RVA = "0xB3B778", Offset = "0xB3B778", VA = "0xB3B778")]
		public void CloseGamepadDisconnectedDialog()
		{
		}

		[Token(Token = "0x6001320")]
		[Address(RVA = "0xB3B864", Offset = "0xB3B864", VA = "0xB3B864")]
		public void GameSuspendedDialog(System.Action callback)
		{
		}

		[Token(Token = "0x6001321")]
		[Address(RVA = "0xB3BA78", Offset = "0xB3BA78", VA = "0xB3BA78")]
		public void UserLoggedOutDialog()
		{
		}

		[Token(Token = "0x6001322")]
		[Address(RVA = "0xB3BC50", Offset = "0xB3BC50", VA = "0xB3BC50")]
		public DialogSystem()
		{
		}

		[Token(Token = "0x6001323")]
		[Address(RVA = "0xB3BC58", Offset = "0xB3BC58", VA = "0xB3BC58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FC9E4", Offset = "0x6FC9E4")]
		internal static void <ShowGameCoreDialog>g__Affirmative|12_0()
		{
		}

		[Token(Token = "0x6001324")]
		[Address(RVA = "0xB3BD34", Offset = "0xB3BD34", VA = "0xB3BD34")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FC9F4", Offset = "0x6FC9F4")]
		internal static void <ShowGameCoreDialog>g__Negative|12_1()
		{
		}

		[Token(Token = "0x6001325")]
		[Address(RVA = "0xB3BD38", Offset = "0xB3BD38", VA = "0xB3BD38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FCA04", Offset = "0x6FCA04")]
		internal static void <UserLoggedOutDialog>g__Affirmative|16_0()
		{
		}
	}
	[Token(Token = "0x200027E")]
	public class DialogWindow : MonoBehaviour, GenericMenuNavigator.INavigableMenu, IComparable<DialogWindow>
	{
		[Token(Token = "0x200027F")]
		public enum OrderPriority
		{
			[Token(Token = "0x4001008")]
			Info = 0,
			[Token(Token = "0x4001009")]
			GameCoreSignOut = 1,
			[Token(Token = "0x400100A")]
			GameCoreSuspend = 9,
			[Token(Token = "0x400100B")]
			GameCoreGamepadDisconnected = 10
		}

		[Token(Token = "0x4000FFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private UiMaster master;

		[Token(Token = "0x4000FFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private DialogSystem dialogSystem;

		[Token(Token = "0x4000FFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UpdateState openState;

		[NonSerialized]
		[Token(Token = "0x4000FFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		private bool hasBeenEnabled;

		[Token(Token = "0x4000FFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GameObject buttonsGO;

		[Token(Token = "0x4000FFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private TextMeshProUGUI titleText;

		[Token(Token = "0x4001000")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private TextMeshProUGUI descriptionText;

		[Token(Token = "0x4001001")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private TextMeshProUGUI affirmativeButtonText;

		[Token(Token = "0x4001002")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private TextMeshProUGUI negativeButtonText;

		[Token(Token = "0x4001003")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private BaseButton affirmativeButton;

		[Token(Token = "0x4001004")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private BaseButton negativeButton;

		[Token(Token = "0x4001005")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private BaseButton cancelClicker;

		[Token(Token = "0x4001006")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F7B9C", Offset = "0x6F7B9C")]
		private OrderPriority <priority>k__BackingField;

		[Token(Token = "0x170004AB")]
		public OrderPriority priority
		{
			[Token(Token = "0x6001328")]
			[Address(RVA = "0xB3BD3C", Offset = "0xB3BD3C", VA = "0xB3BD3C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FCA14", Offset = "0x6FCA14")]
			get
			{
				return default(OrderPriority);
			}
			[Token(Token = "0x6001329")]
			[Address(RVA = "0xB3BD44", Offset = "0xB3BD44", VA = "0xB3BD44")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FCA24", Offset = "0x6FCA24")]
			private set
			{
			}
		}

		[Token(Token = "0x600132A")]
		[Address(RVA = "0xB3AC10", Offset = "0xB3AC10", VA = "0xB3AC10")]
		public void Setup(UiMaster master)
		{
		}

		[Token(Token = "0x600132B")]
		[Address(RVA = "0xB3B5A0", Offset = "0xB3B5A0", VA = "0xB3B5A0")]
		public void Open()
		{
		}

		[Token(Token = "0x600132C")]
		[Address(RVA = "0xB3B824", Offset = "0xB3B824", VA = "0xB3B824", Slot = "4")]
		public void Close(bool openSideMenu)
		{
		}

		[Token(Token = "0x600132D")]
		[Address(RVA = "0xB3BD4C", Offset = "0xB3BD4C", VA = "0xB3BD4C", Slot = "5")]
		private UpdateState Placemaker.Ui.GenericMenuNavigator.INavigableMenu.GetMainUpdateState()
		{
			return null;
		}

		[Token(Token = "0x600132E")]
		[Address(RVA = "0xB3B1B4", Offset = "0xB3B1B4", VA = "0xB3B1B4")]
		public void SetDialog(OrderPriority priority, string title = "", string description = "", string affirmativeButtonText = "", string negativeButtonText = "", [Optional] System.Action affirmativeCallback, [Optional] System.Action negativeCallback)
		{
		}

		[Token(Token = "0x600132F")]
		[Address(RVA = "0xB3BD54", Offset = "0xB3BD54", VA = "0xB3BD54", Slot = "6")]
		public int CompareTo(DialogWindow other)
		{
			return default(int);
		}

		[Token(Token = "0x6001330")]
		[Address(RVA = "0xB3BE00", Offset = "0xB3BE00", VA = "0xB3BE00")]
		public DialogWindow()
		{
		}

		[Token(Token = "0x6001331")]
		[Address(RVA = "0xB3BE64", Offset = "0xB3BE64", VA = "0xB3BE64")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FCA34", Offset = "0x6FCA34")]
		private void <SetDialog>b__21_0()
		{
		}

		[Token(Token = "0x6001332")]
		[Address(RVA = "0xB3BE6C", Offset = "0xB3BE6C", VA = "0xB3BE6C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FCA44", Offset = "0x6FCA44")]
		private void <SetDialog>b__21_1()
		{
		}

		[Token(Token = "0x6001333")]
		[Address(RVA = "0xB3BE74", Offset = "0xB3BE74", VA = "0xB3BE74")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FCA54", Offset = "0x6FCA54")]
		private void <SetDialog>b__21_2()
		{
		}
	}
	[Token(Token = "0x2000280")]
	public class Dim : MonoBehaviour, UiMaster.IUiSetup
	{
		[Token(Token = "0x2000281")]
		public enum State
		{
			[Token(Token = "0x4001014")]
			Clear,
			[Token(Token = "0x4001015")]
			Dim,
			[Token(Token = "0x4001016")]
			Dark
		}

		[Token(Token = "0x2000282")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F0EA4", Offset = "0x6F0EA4")]
		private sealed class <>c__DisplayClass12_0
		{
			[Token(Token = "0x4001017")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Graphic graphic;

			[Token(Token = "0x4001018")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Dim <>4__this;

			[Token(Token = "0x4001019")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UiMaster master;

			[Token(Token = "0x6001339")]
			[Address(RVA = "0x923728", Offset = "0x923728", VA = "0x923728")]
			public <>c__DisplayClass12_0()
			{
			}

			[Token(Token = "0x600133A")]
			[Address(RVA = "0x923730", Offset = "0x923730", VA = "0x923730")]
			internal void <Placemaker.Ui.UiMaster.IUiSetup.OnSetup>b__1(float x)
			{
			}

			[Token(Token = "0x600133B")]
			[Address(RVA = "0x923794", Offset = "0x923794", VA = "0x923794")]
			internal void <Placemaker.Ui.UiMaster.IUiSetup.OnSetup>g__CamSettings|2(float x)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000283")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F0EB4", Offset = "0x6F0EB4")]
		private sealed class <>c
		{
			[Token(Token = "0x400101A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400101B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action<float> <>9__12_0;

			[Token(Token = "0x600133D")]
			[Address(RVA = "0x92361C", Offset = "0x92361C", VA = "0x92361C")]
			public <>c()
			{
			}

			[Token(Token = "0x600133E")]
			[Address(RVA = "0x923624", Offset = "0x923624", VA = "0x923624")]
			internal void <Placemaker.Ui.UiMaster.IUiSetup.OnSetup>b__12_0(float x)
			{
			}
		}

		[Token(Token = "0x400100C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private UiMaster master;

		[Token(Token = "0x400100D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		public UpdateState alphaState;

		[Token(Token = "0x400100E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		public UpdateState dimOrDark;

		[Token(Token = "0x400100F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		public UpdateState blurState;

		[Token(Token = "0x4001010")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Color dimColor;

		[Token(Token = "0x4001011")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Color darkColor;

		[Token(Token = "0x4001012")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public CanvasGroup vrCanvasGroup;

		[Token(Token = "0x170004AC")]
		public bool awaitingDarkDim
		{
			[Token(Token = "0x6001334")]
			[Address(RVA = "0xB3BE7C", Offset = "0xB3BE7C", VA = "0xB3BE7C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001335")]
		[Address(RVA = "0xB358A8", Offset = "0xB358A8", VA = "0xB358A8")]
		public void SetState(State state)
		{
		}

		[Token(Token = "0x6001336")]
		[Address(RVA = "0xB3BEF8", Offset = "0xB3BEF8", VA = "0xB3BEF8", Slot = "4")]
		private void Placemaker.Ui.UiMaster.IUiSetup.OnStart(UiMaster master)
		{
		}

		[Token(Token = "0x6001337")]
		[Address(RVA = "0xB3BEFC", Offset = "0xB3BEFC", VA = "0xB3BEFC", Slot = "5")]
		private void Placemaker.Ui.UiMaster.IUiSetup.OnSetup(UiMaster master)
		{
		}

		[Token(Token = "0x6001338")]
		[Address(RVA = "0xB3C270", Offset = "0xB3C270", VA = "0xB3C270")]
		public Dim()
		{
		}
	}
	[Token(Token = "0x2000284")]
	public class DisableableButton : MonoBehaviour, UiMaster.IUiSetup
	{
		[Token(Token = "0x2000285")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F0EC4", Offset = "0x6F0EC4")]
		private sealed class <>c__DisplayClass7_0
		{
			[Token(Token = "0x4001022")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public DisableableButton <>4__this;

			[Token(Token = "0x4001023")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public BaseButton baseButton;

			[Token(Token = "0x6001342")]
			[Address(RVA = "0x923880", Offset = "0x923880", VA = "0x923880")]
			public <>c__DisplayClass7_0()
			{
			}

			[Token(Token = "0x6001343")]
			[Address(RVA = "0x923888", Offset = "0x923888", VA = "0x923888")]
			internal void <Placemaker.Ui.UiMaster.IUiSetup.OnSetup>b__0(float x0)
			{
			}

			[Token(Token = "0x6001344")]
			[Address(RVA = "0x923920", Offset = "0x923920", VA = "0x923920")]
			internal void <Placemaker.Ui.UiMaster.IUiSetup.OnSetup>b__1(float x0)
			{
			}

			[Token(Token = "0x6001345")]
			[Address(RVA = "0x923A68", Offset = "0x923A68", VA = "0x923A68")]
			internal void <Placemaker.Ui.UiMaster.IUiSetup.OnSetup>b__2(float x0)
			{
			}

			[Token(Token = "0x6001346")]
			[Address(RVA = "0x923ACC", Offset = "0x923ACC", VA = "0x923ACC")]
			internal void <Placemaker.Ui.UiMaster.IUiSetup.OnSetup>b__3(BaseButton.State s)
			{
			}
		}

		[Token(Token = "0x400101C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private DistanceFieldSettings icon;

		[Token(Token = "0x400101D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Graphic text;

		[Token(Token = "0x400101E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Graphic background;

		[Token(Token = "0x400101F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public UpdateState disabledState;

		[Token(Token = "0x4001020")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Color bgColor0;

		[Token(Token = "0x4001021")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Color bgColor1;

		[Token(Token = "0x600133F")]
		[Address(RVA = "0xB3C344", Offset = "0xB3C344", VA = "0xB3C344", Slot = "4")]
		private void Placemaker.Ui.UiMaster.IUiSetup.OnStart(UiMaster master)
		{
		}

		[Token(Token = "0x6001340")]
		[Address(RVA = "0xB3C42C", Offset = "0xB3C42C", VA = "0xB3C42C", Slot = "5")]
		private void Placemaker.Ui.UiMaster.IUiSetup.OnSetup(UiMaster master)
		{
		}

		[Token(Token = "0x6001341")]
		[Address(RVA = "0xB3C724", Offset = "0xB3C724", VA = "0xB3C724")]
		public DisableableButton()
		{
		}
	}
	[Token(Token = "0x2000286")]
	public class DistanceFieldMask : BaseMeshEffect
	{
		[Token(Token = "0x4001024")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Vector4 offset;

		[Token(Token = "0x4001025")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Vector4 anchor;

		[Token(Token = "0x6001347")]
		[Address(RVA = "0xB3C78C", Offset = "0xB3C78C", VA = "0xB3C78C")]
		public void SetDirty()
		{
		}

		[Token(Token = "0x6001348")]
		[Address(RVA = "0xB3C7B8", Offset = "0xB3C7B8", VA = "0xB3C7B8", Slot = "20")]
		public override void ModifyMesh(VertexHelper vh)
		{
		}

		[Token(Token = "0x6001349")]
		[Address(RVA = "0xB3C99C", Offset = "0xB3C99C", VA = "0xB3C99C")]
		public DistanceFieldMask()
		{
		}
	}
	[Token(Token = "0x2000287")]
	public class DistanceFieldSettings : BaseMeshEffect
	{
		[Token(Token = "0x4001026")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6F7C5C", Offset = "0x6F7C5C")]
		private float _cutoff;

		[Token(Token = "0x4001027")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6F7C9C", Offset = "0x6F7C9C")]
		private float _outline;

		[Token(Token = "0x4001028")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6F7CDC", Offset = "0x6F7CDC")]
		[SerializeField]
		private float _shadow;

		[Token(Token = "0x4001029")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6F7D1C", Offset = "0x6F7D1C")]
		private float _fill;

		[Token(Token = "0x170004AD")]
		public float cutoff
		{
			[Token(Token = "0x600134A")]
			[Address(RVA = "0xB3C9F4", Offset = "0xB3C9F4", VA = "0xB3C9F4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600134B")]
			[Address(RVA = "0xB3C9FC", Offset = "0xB3C9FC", VA = "0xB3C9FC")]
			set
			{
			}
		}

		[Token(Token = "0x170004AE")]
		public float outline
		{
			[Token(Token = "0x600134C")]
			[Address(RVA = "0xB3CA40", Offset = "0xB3CA40", VA = "0xB3CA40")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600134D")]
			[Address(RVA = "0xB3CA48", Offset = "0xB3CA48", VA = "0xB3CA48")]
			set
			{
			}
		}

		[Token(Token = "0x170004AF")]
		public float shadow
		{
			[Token(Token = "0x600134E")]
			[Address(RVA = "0xB3CA8C", Offset = "0xB3CA8C", VA = "0xB3CA8C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600134F")]
			[Address(RVA = "0xB3CA94", Offset = "0xB3CA94", VA = "0xB3CA94")]
			set
			{
			}
		}

		[Token(Token = "0x170004B0")]
		public float fill
		{
			[Token(Token = "0x6001350")]
			[Address(RVA = "0xB3CAD8", Offset = "0xB3CAD8", VA = "0xB3CAD8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001351")]
			[Address(RVA = "0xB3CAE0", Offset = "0xB3CAE0", VA = "0xB3CAE0")]
			set
			{
			}
		}

		[Token(Token = "0x6001352")]
		[Address(RVA = "0xB3CB24", Offset = "0xB3CB24", VA = "0xB3CB24")]
		public void SetDirty()
		{
		}

		[Token(Token = "0x6001353")]
		[Address(RVA = "0xB3CB50", Offset = "0xB3CB50", VA = "0xB3CB50", Slot = "20")]
		public override void ModifyMesh(VertexHelper vh)
		{
		}

		[Token(Token = "0x6001354")]
		[Address(RVA = "0xB3CC6C", Offset = "0xB3CC6C", VA = "0xB3CC6C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x6FCA64", Offset = "0x6FCA64")]
		private void NameAfterSprite()
		{
		}

		[Token(Token = "0x6001355")]
		[Address(RVA = "0xB3CDEC", Offset = "0xB3CDEC", VA = "0xB3CDEC")]
		public DistanceFieldSettings()
		{
		}
	}
	[Token(Token = "0x2000288")]
	public class EmptyGraphic : Graphic
	{
		[Token(Token = "0x6001356")]
		[Address(RVA = "0xE795DC", Offset = "0xE795DC", VA = "0xE795DC", Slot = "44")]
		protected override void OnPopulateMesh(VertexHelper vh)
		{
		}

		[Token(Token = "0x6001357")]
		[Address(RVA = "0xE795F8", Offset = "0xE795F8", VA = "0xE795F8")]
		public EmptyGraphic()
		{
		}
	}
	[Token(Token = "0x2000289")]
	public class FocusedSaveCard : MonoBehaviour
	{
		[Token(Token = "0x400102A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public RawImage image;

		[Token(Token = "0x400102B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CanvasGroup canvasGroup;

		[Token(Token = "0x6001358")]
		[Address(RVA = "0xE82CD4", Offset = "0xE82CD4", VA = "0xE82CD4")]
		public FocusedSaveCard()
		{
		}
	}
	[Token(Token = "0x200028A")]
	public class FullscreenButton : UIBehaviour, UiMaster.IUiSetup
	{
		[Token(Token = "0x400102C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private UiMaster master;

		[Token(Token = "0x400102D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private CanvasGroup tick;

		[Token(Token = "0x400102E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private UpdateState state;

		[Token(Token = "0x6001359")]
		[Address(RVA = "0xE82CDC", Offset = "0xE82CDC", VA = "0xE82CDC", Slot = "17")]
		private void Placemaker.Ui.UiMaster.IUiSetup.OnStart(UiMaster master)
		{
		}

		[Token(Token = "0x600135A")]
		[Address(RVA = "0xE82CE4", Offset = "0xE82CE4", VA = "0xE82CE4", Slot = "18")]
		private void Placemaker.Ui.UiMaster.IUiSetup.OnSetup(UiMaster master)
		{
		}

		[Token(Token = "0x600135B")]
		[Address(RVA = "0xE82E38", Offset = "0xE82E38", VA = "0xE82E38")]
		public void Button_Toggle0()
		{
		}

		[Token(Token = "0x600135C")]
		[Address(RVA = "0xE82E94", Offset = "0xE82E94", VA = "0xE82E94")]
		public FullscreenButton()
		{
		}

		[Token(Token = "0x600135D")]
		[Address(RVA = "0xE82EFC", Offset = "0xE82EFC", VA = "0xE82EFC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FCA9C", Offset = "0x6FCA9C")]
		private void <Placemaker.Ui.UiMaster.IUiSetup.OnSetup>b__4_0(float x)
		{
		}
	}
	[Token(Token = "0x200028B")]
	public class GameViewRect : UIBehaviour
	{
		[Token(Token = "0x400102F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private UiMaster uiMaster;

		[Token(Token = "0x4001030")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		public RectTransform sliding;

		[Token(Token = "0x170004B1")]
		public float left
		{
			[Token(Token = "0x600135E")]
			[Address(RVA = "0xE82FF0", Offset = "0xE82FF0", VA = "0xE82FF0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600135F")]
			[Address(RVA = "0xE8300C", Offset = "0xE8300C", VA = "0xE8300C")]
			set
			{
			}
		}

		[Token(Token = "0x170004B2")]
		public float bottom
		{
			[Token(Token = "0x6001360")]
			[Address(RVA = "0xE830A0", Offset = "0xE830A0", VA = "0xE830A0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001361")]
			[Address(RVA = "0xE830C8", Offset = "0xE830C8", VA = "0xE830C8")]
			set
			{
			}
		}

		[Token(Token = "0x170004B3")]
		public float right
		{
			[Token(Token = "0x6001362")]
			[Address(RVA = "0xE8315C", Offset = "0xE8315C", VA = "0xE8315C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001363")]
			[Address(RVA = "0xE83184", Offset = "0xE83184", VA = "0xE83184")]
			set
			{
			}
		}

		[Token(Token = "0x170004B4")]
		public float top
		{
			[Token(Token = "0x6001364")]
			[Address(RVA = "0xE83218", Offset = "0xE83218", VA = "0xE83218")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001365")]
			[Address(RVA = "0xE83240", Offset = "0xE83240", VA = "0xE83240")]
			set
			{
			}
		}

		[Token(Token = "0x6001366")]
		[Address(RVA = "0xE832D4", Offset = "0xE832D4", VA = "0xE832D4")]
		public Rect GetRelativeRect()
		{
			return default(Rect);
		}

		[Token(Token = "0x6001367")]
		[Address(RVA = "0xE833D0", Offset = "0xE833D0", VA = "0xE833D0")]
		public GameViewRect()
		{
		}
	}
	[Token(Token = "0x200028C")]
	public class GamepadControlsRow : MonoBehaviour, UiMaster.IUiSetup
	{
		[Token(Token = "0x4001031")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private UiMaster master;

		[Token(Token = "0x4001032")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string buttonName;

		[Token(Token = "0x4001033")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TMP_Text buttonText;

		[Token(Token = "0x6001368")]
		[Address(RVA = "0xE833D8", Offset = "0xE833D8", VA = "0xE833D8", Slot = "5")]
		private void Placemaker.Ui.UiMaster.IUiSetup.OnSetup(UiMaster master)
		{
		}

		[Token(Token = "0x6001369")]
		[Address(RVA = "0xE833E0", Offset = "0xE833E0", VA = "0xE833E0", Slot = "4")]
		private void Placemaker.Ui.UiMaster.IUiSetup.OnStart(UiMaster master)
		{
		}

		[Token(Token = "0x600136A")]
		[Address(RVA = "0xE833E4", Offset = "0xE833E4", VA = "0xE833E4")]
		public GamepadControlsRow()
		{
		}
	}
	[Token(Token = "0x200028D")]
	public class GamepadStepper : MonoBehaviour
	{
		[Token(Token = "0x200028E")]
		public enum Mode
		{
			[Token(Token = "0x400103F")]
			none = 0,
			[Token(Token = "0x4001040")]
			left = 1,
			[Token(Token = "0x4001041")]
			right = 2,
			[Token(Token = "0x4001042")]
			up = 4,
			[Token(Token = "0x4001043")]
			down = 8,
			[Token(Token = "0x4001044")]
			horizontal = 3,
			[Token(Token = "0x4001045")]
			vertical = 12,
			[Token(Token = "0x4001046")]
			free = 15
		}

		[Token(Token = "0x4001034")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private UiMaster uiMaster;

		[Token(Token = "0x4001035")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Mode mode;

		[Token(Token = "0x4001036")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private int steps;

		[Token(Token = "0x4001037")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector2 stepper;

		[Token(Token = "0x4001038")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool stepLeft;

		[Token(Token = "0x4001039")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		public bool stepRight;

		[Token(Token = "0x400103A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		public bool stepUp;

		[Token(Token = "0x400103B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
		public bool stepDown;

		[Token(Token = "0x400103C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Vector2 stepVector;

		[Token(Token = "0x400103D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Vector2 axis;

		[Token(Token = "0x600136B")]
		[Address(RVA = "0xE84490", Offset = "0xE84490", VA = "0xE84490")]
		private void Update()
		{
		}

		[Token(Token = "0x600136C")]
		[Address(RVA = "0xE8494C", Offset = "0xE8494C", VA = "0xE8494C")]
		private void StartMoving()
		{
		}

		[Token(Token = "0x600136D")]
		[Address(RVA = "0xE84950", Offset = "0xE84950", VA = "0xE84950")]
		private void StopMoving()
		{
		}

		[Token(Token = "0x600136E")]
		[Address(RVA = "0xE84980", Offset = "0xE84980", VA = "0xE84980")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600136F")]
		[Address(RVA = "0xE849B0", Offset = "0xE849B0", VA = "0xE849B0")]
		public GamepadStepper()
		{
		}
	}
	[Token(Token = "0x200028F")]
	public class GamepadXboxDialog : MonoBehaviour, UiMaster.IUiSetup
	{
		[Token(Token = "0x4001047")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private UiMaster master;

		[Token(Token = "0x4001048")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UpdateState openState;

		[Token(Token = "0x4001049")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool isCloseable;

		[Token(Token = "0x6001370")]
		[Address(RVA = "0xE8733C", Offset = "0xE8733C", VA = "0xE8733C", Slot = "5")]
		private void Placemaker.Ui.UiMaster.IUiSetup.OnSetup(UiMaster master)
		{
		}

		[Token(Token = "0x6001371")]
		[Address(RVA = "0xE87424", Offset = "0xE87424", VA = "0xE87424", Slot = "4")]
		private void Placemaker.Ui.UiMaster.IUiSetup.OnStart(UiMaster master)
		{
		}

		[Token(Token = "0x6001372")]
		[Address(RVA = "0xE87428", Offset = "0xE87428", VA = "0xE87428")]
		private void Update()
		{
		}

		[Token(Token = "0x6001373")]
		[Address(RVA = "0xE8749C", Offset = "0xE8749C", VA = "0xE8749C")]
		public GamepadXboxDialog()
		{
		}
	}
	[Token(Token = "0x2000290")]
	public class GenericControlsMenu : MonoBehaviour, UiMaster.IUiSetup, GenericMenuNavigator.INavigableMenu
	{
		[Token(Token = "0x400104A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private UiMaster master;

		[Token(Token = "0x400104B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UpdateState openState;

		[Token(Token = "0x400104C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UiMaster.MenuState menuState;

		[Token(Token = "0x6001374")]
		[Address(RVA = "0xE87500", Offset = "0xE87500", VA = "0xE87500", Slot = "5")]
		private void Placemaker.Ui.UiMaster.IUiSetup.OnSetup(UiMaster master)
		{
		}

		[Token(Token = "0x6001375")]
		[Address(RVA = "0xE87614", Offset = "0xE87614", VA = "0xE87614", Slot = "4")]
		private void Placemaker.Ui.UiMaster.IUiSetup.OnStart(UiMaster master)
		{
		}

		[Token(Token = "0x6001376")]
		[Address(RVA = "0xE87618", Offset = "0xE87618", VA = "0xE87618")]
		public void Open()
		{
		}

		[Token(Token = "0x6001377")]
		[Address(RVA = "0xE87680", Offset = "0xE87680", VA = "0xE87680", Slot = "6")]
		public void Close(bool openSettingsMenu)
		{
		}

		[Token(Token = "0x6001378")]
		[Address(RVA = "0xE87700", Offset = "0xE87700", VA = "0xE87700")]
		private void Update()
		{
		}

		[Token(Token = "0x6001379")]
		[Address(RVA = "0xE87744", Offset = "0xE87744", VA = "0xE87744")]
		private void UpdateControls()
		{
		}

		[Token(Token = "0x600137A")]
		[Address(RVA = "0xE87808", Offset = "0xE87808", VA = "0xE87808", Slot = "7")]
		private UpdateState Placemaker.Ui.GenericMenuNavigator.INavigableMenu.GetMainUpdateState()
		{
			return null;
		}

		[Token(Token = "0x600137B")]
		[Address(RVA = "0xE87810", Offset = "0xE87810", VA = "0xE87810")]
		public GenericControlsMenu()
		{
		}
	}
	[Token(Token = "0x2000291")]
	public class GenericMenuNavigator : MonoBehaviour, UiMaster.IUiSetup
	{
		[Token(Token = "0x2000292")]
		private enum Mode
		{
			[Token(Token = "0x4001057")]
			Vertical,
			[Token(Token = "0x4001058")]
			Horizontal
		}

		[Token(Token = "0x2000293")]
		public interface INavigableMenu
		{
			[Token(Token = "0x6001385")]
			void Close(bool openLastMenu);

			[Token(Token = "0x6001386")]
			UpdateState GetMainUpdateState();
		}

		[Token(Token = "0x400104D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private UiMaster master;

		[Token(Token = "0x400104E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private INavigableMenu navigableMenu;

		[Token(Token = "0x400104F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private BetterScrollRect scrollRect;

		[Token(Token = "0x4001050")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private List<NavigableButton> navigableButtons;

		[Token(Token = "0x4001051")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private NavigableButton selectedButton;

		[Token(Token = "0x4001052")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private RapidButton rapidX;

		[Token(Token = "0x4001053")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private RapidButton rapidY;

		[Token(Token = "0x4001054")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeReference]
		private Transform selectorTransform;

		[Token(Token = "0x4001055")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private Mode mode;

		[Token(Token = "0x600137C")]
		[Address(RVA = "0xE8787C", Offset = "0xE8787C", VA = "0xE8787C", Slot = "5")]
		private void Placemaker.Ui.UiMaster.IUiSetup.OnSetup(UiMaster master)
		{
		}

		[Token(Token = "0x600137D")]
		[Address(RVA = "0xE87DF8", Offset = "0xE87DF8", VA = "0xE87DF8", Slot = "4")]
		private void Placemaker.Ui.UiMaster.IUiSetup.OnStart(UiMaster master)
		{
		}

		[Token(Token = "0x600137E")]
		[Address(RVA = "0xE87DFC", Offset = "0xE87DFC", VA = "0xE87DFC")]
		private void Update()
		{
		}

		[Token(Token = "0x600137F")]
		[Address(RVA = "0xE881C0", Offset = "0xE881C0", VA = "0xE881C0")]
		private void UpdateScroll()
		{
		}

		[Token(Token = "0x6001380")]
		[Address(RVA = "0xE87E54", Offset = "0xE87E54", VA = "0xE87E54")]
		private void UpdateControls()
		{
		}

		[Token(Token = "0x6001381")]
		[Address(RVA = "0xE886A4", Offset = "0xE886A4", VA = "0xE886A4")]
		private void SelectButton(NavigableButton button)
		{
		}

		[Token(Token = "0x6001382")]
		[Address(RVA = "0xE87D74", Offset = "0xE87D74", VA = "0xE87D74")]
		public void ResetNavigation()
		{
		}

		[Token(Token = "0x6001383")]
		[Address(RVA = "0xE887B4", Offset = "0xE887B4", VA = "0xE887B4")]
		public GenericMenuNavigator()
		{
		}

		[Token(Token = "0x6001384")]
		[Address(RVA = "0xE88590", Offset = "0xE88590", VA = "0xE88590")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FCAAC", Offset = "0x6FCAAC")]
		private void <UpdateControls>g__Move|14_0(int delta)
		{
		}
	}
	[Token(Token = "0x2000294")]
	public class GridButtons : UIBehaviour, UiMaster.IUiSetup, ButtonAudio.IButtonAudioModifier
	{
		[Token(Token = "0x2000295")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F0ED4", Offset = "0x6F0ED4")]
		private sealed class <>c__DisplayClass9_0
		{
			[Token(Token = "0x4001061")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Camera camera;

			[Token(Token = "0x4001062")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int mask;

			[Token(Token = "0x600138F")]
			[Address(RVA = "0x925AD0", Offset = "0x925AD0", VA = "0x925AD0")]
			public <>c__DisplayClass9_0()
			{
			}

			[Token(Token = "0x6001390")]
			[Address(RVA = "0x925AD8", Offset = "0x925AD8", VA = "0x925AD8")]
			internal void <Placemaker.Ui.UiMaster.IUiSetup.OnSetup>b__0(float x)
			{
			}
		}

		[Token(Token = "0x4001059")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private UiMaster master;

		[Token(Token = "0x400105A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private CanvasGroup tick0;

		[Token(Token = "0x400105B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private static UpdateState gridState0;

		[Token(Token = "0x400105C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[SerializeField]
		private static UpdateState gridState1;

		[Token(Token = "0x400105D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static bool stateIsSetUp;

		[Token(Token = "0x400105E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AudioClip onClip;

		[Token(Token = "0x400105F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AudioClip offClip;

		[Token(Token = "0x4001060")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public static int showGrid;

		[Token(Token = "0x6001387")]
		[Address(RVA = "0x16C05A4", Offset = "0x16C05A4", VA = "0x16C05A4", Slot = "17")]
		private void Placemaker.Ui.UiMaster.IUiSetup.OnStart(UiMaster master)
		{
		}

		[Token(Token = "0x6001388")]
		[Address(RVA = "0x16C05AC", Offset = "0x16C05AC", VA = "0x16C05AC", Slot = "18")]
		private void Placemaker.Ui.UiMaster.IUiSetup.OnSetup(UiMaster master)
		{
		}

		[Token(Token = "0x6001389")]
		[Address(RVA = "0x16C0858", Offset = "0x16C0858", VA = "0x16C0858")]
		public void Button_Toggle0()
		{
		}

		[Token(Token = "0x600138A")]
		[Address(RVA = "0x16C08E0", Offset = "0x16C08E0", VA = "0x16C08E0")]
		public void Button_Toggle1()
		{
		}

		[Token(Token = "0x600138B")]
		[Address(RVA = "0x16C0968", Offset = "0x16C0968", VA = "0x16C0968", Slot = "19")]
		private void Placemaker.Ui.ButtonAudio.IButtonAudioModifier.ModifyAudioData(ref ButtonAudio.AudioData audioData, ButtonAudio.SoundType soundType)
		{
		}

		[Token(Token = "0x600138C")]
		[Address(RVA = "0x16C0A10", Offset = "0x16C0A10", VA = "0x16C0A10")]
		public void DisableGrid()
		{
		}

		[Token(Token = "0x600138D")]
		[Address(RVA = "0x16C0A84", Offset = "0x16C0A84", VA = "0x16C0A84")]
		public GridButtons()
		{
		}
	}
	[Token(Token = "0x2000296")]
	public class InputModeManager : MonoBehaviour, UiMaster.IUiSetup
	{
		[Token(Token = "0x2000297")]
		public enum Mode
		{
			[Token(Token = "0x400106A")]
			None,
			[Token(Token = "0x400106B")]
			Gamepad,
			[Token(Token = "0x400106C")]
			TouchAndMouse,
			[Token(Token = "0x400106D")]
			VRController
		}

		[StructLayout(3)]
		[Token(Token = "0x2000298")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F0EE4", Offset = "0x6F0EE4")]
		private struct <>c__DisplayClass9_0
		{
			[Token(Token = "0x400106E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Player player;
		}

		[Token(Token = "0x4001063")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private UiMaster master;

		[Token(Token = "0x4001064")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject mouseBlocker;

		[Token(Token = "0x4001065")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UpdateState gamepadState;

		[Token(Token = "0x4001066")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public UpdateState touchAndMouseState;

		[Token(Token = "0x4001067")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public UpdateState vrControllerState;

		[Token(Token = "0x4001068")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Mode mode;

		[Token(Token = "0x6001391")]
		[Address(RVA = "0xB19EE4", Offset = "0xB19EE4", VA = "0xB19EE4", Slot = "5")]
		private void Placemaker.Ui.UiMaster.IUiSetup.OnSetup(UiMaster master)
		{
		}

		[Token(Token = "0x6001392")]
		[Address(RVA = "0xB1A0C0", Offset = "0xB1A0C0", VA = "0xB1A0C0", Slot = "4")]
		private void Placemaker.Ui.UiMaster.IUiSetup.OnStart(UiMaster master)
		{
		}

		[Token(Token = "0x6001393")]
		[Address(RVA = "0xB1A0C4", Offset = "0xB1A0C4", VA = "0xB1A0C4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001394")]
		[Address(RVA = "0xB19FC4", Offset = "0xB19FC4", VA = "0xB19FC4")]
		public void SetState(Mode newMode)
		{
		}

		[Token(Token = "0x6001395")]
		[Address(RVA = "0xB1ACF0", Offset = "0xB1ACF0", VA = "0xB1ACF0")]
		public InputModeManager()
		{
		}

		[Token(Token = "0x6001396")]
		[Address(RVA = "0xB1A2A8", Offset = "0xB1A2A8", VA = "0xB1A2A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FCABC", Offset = "0x6FCABC")]
		internal static bool <Update>g__ShouldChange|9_0(ref <>c__DisplayClass9_0 P_0)
		{
			return default(bool);
		}

		[Token(Token = "0x6001397")]
		[Address(RVA = "0xB1ABB8", Offset = "0xB1ABB8", VA = "0xB1ABB8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FCACC", Offset = "0x6FCACC")]
		internal static bool <Update>g__ShouldChange|9_1()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000299")]
	public class LanguageButtons : UIBehaviour, UiMaster.IUiSetup
	{
		[Token(Token = "0x200029A")]
		private struct S : IComparable<S>
		{
			[Token(Token = "0x4001073")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string englishName;

			[Token(Token = "0x4001074")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public string nativeName;

			[Token(Token = "0x600139F")]
			[Address(RVA = "0x9278F0", Offset = "0x9278F0", VA = "0x9278F0", Slot = "4")]
			private int System.IComparable<Placemaker.Ui.LanguageButtons.S>.CompareTo(S other)
			{
				return default(int);
			}
		}

		[Token(Token = "0x200029B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F0EF4", Offset = "0x6F0EF4")]
		private sealed class <>c__DisplayClass5_0
		{
			[Token(Token = "0x4001075")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LanguageButtons <>4__this;

			[Token(Token = "0x4001076")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public StandardButton rightStandard;

			[Token(Token = "0x4001077")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public StandardButton leftStandard;

			[Token(Token = "0x4001078")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public UiMaster master;

			[Token(Token = "0x60013A0")]
			[Address(RVA = "0x9277BC", Offset = "0x9277BC", VA = "0x9277BC")]
			public <>c__DisplayClass5_0()
			{
			}

			[Token(Token = "0x60013A1")]
			[Address(RVA = "0x9277C4", Offset = "0x9277C4", VA = "0x9277C4")]
			internal void <Placemaker.Ui.UiMaster.IUiSetup.OnSetup>b__0(int step, float axis)
			{
			}

			[Token(Token = "0x60013A2")]
			[Address(RVA = "0x927858", Offset = "0x927858", VA = "0x927858")]
			internal void <Placemaker.Ui.UiMaster.IUiSetup.OnSetup>b__1()
			{
			}

			[Token(Token = "0x60013A3")]
			[Address(RVA = "0x9278AC", Offset = "0x9278AC", VA = "0x9278AC")]
			internal void <Placemaker.Ui.UiMaster.IUiSetup.OnSetup>b__2()
			{
			}
		}

		[Token(Token = "0x400106F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private UiMaster master;

		[Token(Token = "0x4001070")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<string> languages;

		[Token(Token = "0x4001071")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private BaseButton leftArrow;

		[Token(Token = "0x4001072")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private BaseButton rightArrow;

		[Token(Token = "0x6001398")]
		[Address(RVA = "0xC48BF8", Offset = "0xC48BF8", VA = "0xC48BF8", Slot = "17")]
		private void Placemaker.Ui.UiMaster.IUiSetup.OnStart(UiMaster master)
		{
		}

		[Token(Token = "0x6001399")]
		[Address(RVA = "0xC48C00", Offset = "0xC48C00", VA = "0xC48C00", Slot = "18")]
		private void Placemaker.Ui.UiMaster.IUiSetup.OnSetup(UiMaster master)
		{
		}

		[Token(Token = "0x600139A")]
		[Address(RVA = "0xC4940C", Offset = "0xC4940C", VA = "0xC4940C")]
		public void Button_Left()
		{
		}

		[Token(Token = "0x600139B")]
		[Address(RVA = "0xC49510", Offset = "0xC49510", VA = "0xC49510")]
		public void Button_Right()
		{
		}

		[Token(Token = "0x600139C")]
		[Address(RVA = "0xC49414", Offset = "0xC49414", VA = "0xC49414")]
		private void ChangeLanguage(bool left)
		{
		}

		[Token(Token = "0x600139D")]
		[Address(RVA = "0xC49580", Offset = "0xC49580", VA = "0xC49580")]
		private void SetLanguage(string language)
		{
		}

		[Token(Token = "0x600139E")]
		[Address(RVA = "0xC49910", Offset = "0xC49910", VA = "0xC49910")]
		public LanguageButtons()
		{
		}
	}
	[Token(Token = "0x200029C")]
	public class LoadingUi : MonoBehaviour, UiMaster.IUiSetup, IOnScenePostProcess
	{
		[Token(Token = "0x200029D")]
		private enum State
		{
			[Token(Token = "0x400108D")]
			Loading,
			[Token(Token = "0x400108E")]
			LoadingDone,
			[Token(Token = "0x400108F")]
			Done,
			[Token(Token = "0x4001090")]
			Gone,
			[Token(Token = "0x4001091")]
			ReallyGone,
			[Token(Token = "0x4001092")]
			IdleShowLogo
		}

		[Token(Token = "0x200029E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F0F04", Offset = "0x6F0F04")]
		private sealed class <>c__DisplayClass23_0
		{
			[Token(Token = "0x4001093")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Graphic graphic0;

			[Token(Token = "0x4001094")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Graphic graphic1;

			[Token(Token = "0x4001095")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LoadingUi <>4__this;

			[Token(Token = "0x60013B2")]
			[Address(RVA = "0x928630", Offset = "0x928630", VA = "0x928630")]
			public <>c__DisplayClass23_0()
			{
			}

			[Token(Token = "0x60013B3")]
			[Address(RVA = "0x928638", Offset = "0x928638", VA = "0x928638")]
			internal void <Placemaker.Ui.UiMaster.IUiSetup.OnSetup>b__0(float x)
			{
			}
		}

		[Token(Token = "0x4001079")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private UiMaster master;

		[Token(Token = "0x400107A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		public UpdateState openState;

		[Token(Token = "0x400107B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		public UpdateState vrSubLogoState;

		[Token(Token = "0x400107C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Transform logoContainer;

		[Token(Token = "0x400107D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Transform vrLogoContainer;

		[Token(Token = "0x400107E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private DistanceFieldSettings vrSubLogo0;

		[Token(Token = "0x400107F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private DistanceFieldSettings vrSubLogo1;

		[Token(Token = "0x4001080")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private AudioSource audioSource;

		[Token(Token = "0x4001081")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private AudioSource audioJuiceSource;

		[Token(Token = "0x4001082")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private AudioSource doneLoadingSource;

		[Token(Token = "0x4001083")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private List<Color> targetColors;

		[Token(Token = "0x4001084")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public int counter;

		[Token(Token = "0x4001085")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public float timer;

		[Token(Token = "0x4001086")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private bool first;

		[Token(Token = "0x4001087")]
		private const float fullValue = 0.55f;

		[Token(Token = "0x4001088")]
		private const float invisibleValue = 0.15f;

		[Token(Token = "0x4001089")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[SerializeField]
		private State state;

		[Token(Token = "0x400108A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private int pitcher;

		[Token(Token = "0x400108B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[SerializeField]
		private float minWidth;

		[Token(Token = "0x170004B5")]
		public bool isLoading
		{
			[Token(Token = "0x60013A4")]
			[Address(RVA = "0xC550D4", Offset = "0xC550D4", VA = "0xC550D4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60013A5")]
		[Address(RVA = "0xC550E4", Offset = "0xC550E4", VA = "0xC550E4")]
		private void Awake()
		{
		}

		[Token(Token = "0x60013A6")]
		[Address(RVA = "0xC55244", Offset = "0xC55244", VA = "0xC55244", Slot = "5")]
		private void Placemaker.Ui.UiMaster.IUiSetup.OnSetup(UiMaster master)
		{
		}

		[Token(Token = "0x60013A7")]
		[Address(RVA = "0xC5559C", Offset = "0xC5559C", VA = "0xC5559C", Slot = "4")]
		private void Placemaker.Ui.UiMaster.IUiSetup.OnStart(UiMaster master)
		{
		}

		[Token(Token = "0x60013A8")]
		[Address(RVA = "0xC555A0", Offset = "0xC555A0", VA = "0xC555A0")]
		private void Update()
		{
		}

		[Token(Token = "0x60013A9")]
		[Address(RVA = "0xC55D9C", Offset = "0xC55D9C", VA = "0xC55D9C")]
		public void ShowLogo()
		{
		}

		[Token(Token = "0x60013AA")]
		[Address(RVA = "0xC56084", Offset = "0xC56084", VA = "0xC56084")]
		public void StartLoading()
		{
		}

		[Token(Token = "0x60013AB")]
		[Address(RVA = "0xC56348", Offset = "0xC56348", VA = "0xC56348")]
		public void StopLoading()
		{
		}

		[Token(Token = "0x60013AC")]
		[Address(RVA = "0xC56360", Offset = "0xC56360", VA = "0xC56360")]
		public void StopLoadingNow()
		{
		}

		[Token(Token = "0x60013AD")]
		[Address(RVA = "0xC5638C", Offset = "0xC5638C", VA = "0xC5638C", Slot = "6")]
		private void Placemaker.SceneProcessing.IOnScenePostProcess.OnScenePostProcess(bool isBuild, TargetPlatformFlags platform)
		{
		}

		[Token(Token = "0x60013AE")]
		[Address(RVA = "0xC566F8", Offset = "0xC566F8", VA = "0xC566F8")]
		private void OnRectTransformDimensionsChange()
		{
		}

		[Token(Token = "0x60013AF")]
		[Address(RVA = "0xC56888", Offset = "0xC56888", VA = "0xC56888")]
		public LoadingUi()
		{
		}

		[Token(Token = "0x60013B0")]
		[Address(RVA = "0xC5695C", Offset = "0xC5695C", VA = "0xC5695C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FCADC", Offset = "0x6FCADC")]
		private void <Placemaker.Ui.UiMaster.IUiSetup.OnSetup>b__23_1(float x)
		{
		}

		[Token(Token = "0x60013B1")]
		[Address(RVA = "0xC569A4", Offset = "0xC569A4", VA = "0xC569A4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FCAEC", Offset = "0x6FCAEC")]
		private void <Placemaker.Ui.UiMaster.IUiSetup.OnSetup>b__23_2(float x)
		{
		}
	}
	[Token(Token = "0x200029F")]
	public static class Localization
	{
		[Token(Token = "0x4001096")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Dictionary<SystemLanguage, string> systemToPlacemakerLanguages;
	}
	[Token(Token = "0x20002A0")]
	public class LocalizeRTLFlipper : MonoBehaviour
	{
		[Token(Token = "0x60013B5")]
		[Address(RVA = "0x9DE45C", Offset = "0x9DE45C", VA = "0x9DE45C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60013B6")]
		[Address(RVA = "0x9DE464", Offset = "0x9DE464", VA = "0x9DE464")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x60013B7")]
		[Address(RVA = "0x9DE53C", Offset = "0x9DE53C", VA = "0x9DE53C")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x60013B8")]
		[Address(RVA = "0x9DE460", Offset = "0x9DE460", VA = "0x9DE460")]
		public void OnLocalize()
		{
		}

		[Token(Token = "0x60013B9")]
		[Address(RVA = "0x9DE5E4", Offset = "0x9DE5E4", VA = "0x9DE5E4")]
		public LocalizeRTLFlipper()
		{
		}
	}
	[Token(Token = "0x20002A1")]
	public class MaxSavesCounter : UIBehaviour
	{
		[Token(Token = "0x4001097")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private LocalizationParamsManager localizationParamsManagerTop;

		[Token(Token = "0x4001098")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Localize localizeTop;

		[Token(Token = "0x4001099")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private LocalizationParamsManager localizationParamsManagerChild;

		[Token(Token = "0x400109A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Localize localizeChild;

		[Token(Token = "0x60013BA")]
		[Address(RVA = "0x9E5DAC", Offset = "0x9E5DAC", VA = "0x9E5DAC")]
		public void UpdateCountText(string current, string max)
		{
		}

		[Token(Token = "0x60013BB")]
		[Address(RVA = "0x9E5E9C", Offset = "0x9E5E9C", VA = "0x9E5E9C")]
		public MaxSavesCounter()
		{
		}
	}
	[Token(Token = "0x20002A2")]
	public class NavigableButton : MonoBehaviour, UiMaster.IUiSetup
	{
		[Serializable]
		[Token(Token = "0x20002A3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F0F14", Offset = "0x6F0F14")]
		private sealed class <>c
		{
			[Token(Token = "0x40010A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40010A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static System.Action <>9__10_0;

			[Token(Token = "0x40010A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static System.Action <>9__10_1;

			[Token(Token = "0x40010A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Action<int, float> <>9__10_2;

			[Token(Token = "0x60013C3")]
			[Address(RVA = "0x929794", Offset = "0x929794", VA = "0x929794")]
			public <>c()
			{
			}

			[Token(Token = "0x60013C4")]
			[Address(RVA = "0x92979C", Offset = "0x92979C", VA = "0x92979C")]
			internal void <.ctor>b__10_0()
			{
			}

			[Token(Token = "0x60013C5")]
			[Address(RVA = "0x9297A0", Offset = "0x9297A0", VA = "0x9297A0")]
			internal void <.ctor>b__10_1()
			{
			}

			[Token(Token = "0x60013C6")]
			[Address(RVA = "0x9297A4", Offset = "0x9297A4", VA = "0x9297A4")]
			internal void <.ctor>b__10_2(int <p0>, float <p1>)
			{
			}
		}

		[Token(Token = "0x400109B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public BaseButton baseButton;

		[Token(Token = "0x400109C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public System.Action onSubmit;

		[Token(Token = "0x400109D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UpdateState selectedState;

		[Token(Token = "0x400109E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public System.Action onSelectedUpdate;

		[Token(Token = "0x400109F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Action<int, float> onHorizontal;

		[Token(Token = "0x60013BC")]
		[Address(RVA = "0x9ED9C8", Offset = "0x9ED9C8", VA = "0x9ED9C8", Slot = "5")]
		private void Placemaker.Ui.UiMaster.IUiSetup.OnSetup(UiMaster master)
		{
		}

		[Token(Token = "0x60013BD")]
		[Address(RVA = "0x9EDA30", Offset = "0x9EDA30", VA = "0x9EDA30", Slot = "4")]
		private void Placemaker.Ui.UiMaster.IUiSetup.OnStart(UiMaster master)
		{
		}

		[Token(Token = "0x60013BE")]
		[Address(RVA = "0x9EDA34", Offset = "0x9EDA34", VA = "0x9EDA34")]
		public void OnSelectedUpdate()
		{
		}

		[Token(Token = "0x60013BF")]
		[Address(RVA = "0x9EDA50", Offset = "0x9EDA50", VA = "0x9EDA50")]
		public void OnHorizontal(int step, float axis)
		{
		}

		[Token(Token = "0x60013C0")]
		[Address(RVA = "0x9EDAC4", Offset = "0x9EDAC4", VA = "0x9EDAC4")]
		public void OnSubmit()
		{
		}

		[Token(Token = "0x60013C1")]
		[Address(RVA = "0x9EDB4C", Offset = "0x9EDB4C", VA = "0x9EDB4C")]
		public NavigableButton()
		{
		}
	}
	[Token(Token = "0x20002A4")]
	public class NewTownButton : UIBehaviour, UiMaster.IUiSetup
	{
		[Token(Token = "0x40010A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private SimpleMessage message;

		[Token(Token = "0x40010A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private UiMaster master;

		[Token(Token = "0x60013C7")]
		[Address(RVA = "0x9EDDAC", Offset = "0x9EDDAC", VA = "0x9EDDAC", Slot = "18")]
		private void Placemaker.Ui.UiMaster.IUiSetup.OnSetup(UiMaster master)
		{
		}

		[Token(Token = "0x60013C8")]
		[Address(RVA = "0x9EDEBC", Offset = "0x9EDEBC", VA = "0x9EDEBC")]
		private void OnClick()
		{
		}

		[Token(Token = "0x60013C9")]
		[Address(RVA = "0x9EDF1C", Offset = "0x9EDF1C", VA = "0x9EDF1C", Slot = "17")]
		private void Placemaker.Ui.UiMaster.IUiSetup.OnStart(UiMaster master)
		{
		}

		[Token(Token = "0x60013CA")]
		[Address(RVA = "0x9EDF20", Offset = "0x9EDF20", VA = "0x9EDF20")]
		public NewTownButton()
		{
		}
	}
	[Token(Token = "0x20002A5")]
	public class PaletteMenu : UIBehaviour, UiMaster.IUiSetup, IDragHandler, IEventSystemHandler, IEndDragHandler, IBeginDragHandler
	{
		[Token(Token = "0x20002A6")]
		public interface IPaletteSetup
		{
			[Token(Token = "0x60013E0")]
			void OnSetup();
		}

		[Token(Token = "0x20002A7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F0F24", Offset = "0x6F0F24")]
		private sealed class <>c__DisplayClass30_0
		{
			[Token(Token = "0x40010BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public CanvasGroup canvasGroup;

			[Token(Token = "0x40010BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public PaletteMenu <>4__this;

			[Token(Token = "0x40010BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RectTransform rt;

			[Token(Token = "0x40010C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public UiMaster master;

			[Token(Token = "0x60013E1")]
			[Address(RVA = "0x92AFD0", Offset = "0x92AFD0", VA = "0x92AFD0")]
			public <>c__DisplayClass30_0()
			{
			}

			[Token(Token = "0x60013E2")]
			[Address(RVA = "0x92AFD8", Offset = "0x92AFD8", VA = "0x92AFD8")]
			internal void <Placemaker.Ui.UiMaster.IUiSetup.OnSetup>b__0(float x)
			{
			}

			[Token(Token = "0x60013E3")]
			[Address(RVA = "0x92B03C", Offset = "0x92B03C", VA = "0x92B03C")]
			internal void <Placemaker.Ui.UiMaster.IUiSetup.OnSetup>b__1(float x)
			{
			}

			[Token(Token = "0x60013E4")]
			[Address(RVA = "0x92B064", Offset = "0x92B064", VA = "0x92B064")]
			internal void <Placemaker.Ui.UiMaster.IUiSetup.OnSetup>b__2()
			{
			}

			[Token(Token = "0x60013E5")]
			[Address(RVA = "0x92B088", Offset = "0x92B088", VA = "0x92B088")]
			internal void <Placemaker.Ui.UiMaster.IUiSetup.OnSetup>b__3()
			{
			}
		}

		[Token(Token = "0x40010A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private UiMaster master;

		[Token(Token = "0x40010A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Palette palette;

		[Token(Token = "0x40010A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public sbyte selectedPickerIndex;

		[Token(Token = "0x40010A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		public List<PalettePicker> palettePickers;

		[Token(Token = "0x40010AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private float targetScroll;

		[Token(Token = "0x40010AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private float currentScroll;

		[Token(Token = "0x40010AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private RectTransform t0;

		[Token(Token = "0x40010AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private RectTransform t1;

		[Token(Token = "0x40010AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private RectTransform verticalAnchor0;

		[Token(Token = "0x40010AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private RectTransform verticalAnchor1;

		[Token(Token = "0x40010B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private RectTransform horizontalAnchor0;

		[Token(Token = "0x40010B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private RectTransform horizontalAnchor1;

		[Token(Token = "0x40010B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private RectTransform toucher;

		[Token(Token = "0x40010B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector2 p0;

		[Token(Token = "0x40010B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Vector2 p1;

		[Token(Token = "0x40010B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Vector2 dir;

		[Token(Token = "0x40010B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private float dist;

		[Token(Token = "0x40010B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private float pickerSize;

		[Token(Token = "0x40010B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float lossyScale;

		[Token(Token = "0x40010B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private float invLossyScale;

		[Token(Token = "0x40010BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private RapidButton rapidButton;

		[Token(Token = "0x40010BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private bool updating;

		[Token(Token = "0x40010BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB9")]
		[SerializeField]
		private bool snap;

		[Token(Token = "0x60013CB")]
		[Address(RVA = "0xE0582C", Offset = "0xE0582C", VA = "0xE0582C")]
		private void Update()
		{
		}

		[Token(Token = "0x60013CC")]
		[Address(RVA = "0xE05DCC", Offset = "0xE05DCC", VA = "0xE05DCC")]
		private void SetNewTargetScroll(float newTargetScroll)
		{
		}

		[Token(Token = "0x60013CD")]
		[Address(RVA = "0xE05DE8", Offset = "0xE05DE8", VA = "0xE05DE8")]
		public void PushColor(PalettePicker picker)
		{
		}

		[Token(Token = "0x60013CE")]
		[Address(RVA = "0xE05DEC", Offset = "0xE05DEC", VA = "0xE05DEC")]
		public void ColorPick(Voxel voxel)
		{
		}

		[Token(Token = "0x60013CF")]
		[Address(RVA = "0xE05E70", Offset = "0xE05E70", VA = "0xE05E70")]
		private void SelectPicker(PalettePicker picker)
		{
		}

		[Token(Token = "0x60013D0")]
		[Address(RVA = "0xE06050", Offset = "0xE06050", VA = "0xE06050")]
		private void FramePicker(PalettePicker picker)
		{
		}

		[Token(Token = "0x60013D1")]
		[Address(RVA = "0xE0614C", Offset = "0xE0614C", VA = "0xE0614C", Slot = "17")]
		private void Placemaker.Ui.UiMaster.IUiSetup.OnStart(UiMaster master)
		{
		}

		[Token(Token = "0x60013D2")]
		[Address(RVA = "0xE06318", Offset = "0xE06318", VA = "0xE06318", Slot = "18")]
		private void Placemaker.Ui.UiMaster.IUiSetup.OnSetup(UiMaster master)
		{
		}

		[Token(Token = "0x60013D3")]
		[Address(RVA = "0xE066E8", Offset = "0xE066E8", VA = "0xE066E8")]
		private void OnDimensionsChange(RectTransform rt)
		{
		}

		[Token(Token = "0x60013D4")]
		[Address(RVA = "0xE06808", Offset = "0xE06808", VA = "0xE06808")]
		public void SelectPicker(int index)
		{
		}

		[Token(Token = "0x60013D5")]
		[Address(RVA = "0xE068A4", Offset = "0xE068A4", VA = "0xE068A4")]
		public void SelectNextPicker(int delta = 1)
		{
		}

		[Token(Token = "0x60013D6")]
		[Address(RVA = "0xE06914", Offset = "0xE06914", VA = "0xE06914")]
		public void HoldSelectNextPicker(int delta = 1)
		{
		}

		[Token(Token = "0x60013D7")]
		[Address(RVA = "0xE0695C", Offset = "0xE0695C", VA = "0xE0695C")]
		public void PickerClicked(PalettePicker picker)
		{
		}

		[Token(Token = "0x60013D8")]
		[Address(RVA = "0xE06960", Offset = "0xE06960", VA = "0xE06960")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x60013D9")]
		[Address(RVA = "0xE06978", Offset = "0xE06978", VA = "0xE06978", Slot = "19")]
		private void UnityEngine.EventSystems.IDragHandler.OnDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60013DA")]
		[Address(RVA = "0xE069B8", Offset = "0xE069B8", VA = "0xE069B8", Slot = "20")]
		private void UnityEngine.EventSystems.IEndDragHandler.OnEndDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60013DB")]
		[Address(RVA = "0xE069BC", Offset = "0xE069BC", VA = "0xE069BC", Slot = "21")]
		private void UnityEngine.EventSystems.IBeginDragHandler.OnBeginDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60013DC")]
		[Address(RVA = "0xE05D30", Offset = "0xE05D30", VA = "0xE05D30")]
		private void ClampTargetScroll()
		{
		}

		[Token(Token = "0x60013DD")]
		[Address(RVA = "0xE05C58", Offset = "0xE05C58", VA = "0xE05C58")]
		private void UpdateAnchors()
		{
		}

		[Token(Token = "0x60013DE")]
		[Address(RVA = "0xE069C0", Offset = "0xE069C0", VA = "0xE069C0")]
		public void ResetPickers()
		{
		}

		[Token(Token = "0x60013DF")]
		[Address(RVA = "0xE06AF0", Offset = "0xE06AF0", VA = "0xE06AF0")]
		public PaletteMenu()
		{
		}
	}
	[Token(Token = "0x20002A8")]
	public class PalettePicker : MonoBehaviour, PaletteMenu.IPaletteSetup, ButtonAudio.IButtonAudioModifier
	{
		[Token(Token = "0x40010C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public Graphic fg;

		[Token(Token = "0x40010C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		public Graphic bg;

		[Token(Token = "0x40010C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		public UpdateState selectedState;

		[Token(Token = "0x40010C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float pitch;

		[Token(Token = "0x60013E6")]
		[Address(RVA = "0xE06BC8", Offset = "0xE06BC8", VA = "0xE06BC8", Slot = "4")]
		private void Placemaker.Ui.PaletteMenu.IPaletteSetup.OnSetup()
		{
		}

		[Token(Token = "0x60013E7")]
		[Address(RVA = "0xE06D50", Offset = "0xE06D50", VA = "0xE06D50")]
		public void OnClicked()
		{
		}

		[Token(Token = "0x60013E8")]
		[Address(RVA = "0xE06DAC", Offset = "0xE06DAC", VA = "0xE06DAC", Slot = "5")]
		private void Placemaker.Ui.ButtonAudio.IButtonAudioModifier.ModifyAudioData(ref ButtonAudio.AudioData audioData, ButtonAudio.SoundType soundType)
		{
		}

		[Token(Token = "0x60013E9")]
		[Address(RVA = "0xE06DB8", Offset = "0xE06DB8", VA = "0xE06DB8")]
		public PalettePicker()
		{
		}

		[Token(Token = "0x60013EA")]
		[Address(RVA = "0xE06E20", Offset = "0xE06E20", VA = "0xE06E20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FCAFC", Offset = "0x6FCAFC")]
		private void <Placemaker.Ui.PaletteMenu.IPaletteSetup.OnSetup>b__4_0(float x)
		{
		}

		[Token(Token = "0x60013EB")]
		[Address(RVA = "0xE06F50", Offset = "0xE06F50", VA = "0xE06F50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FCB0C", Offset = "0x6FCB0C")]
		private void <Placemaker.Ui.PaletteMenu.IPaletteSetup.OnSetup>b__4_1()
		{
		}
	}
	[Token(Token = "0x20002A9")]
	public class PinUiButton : UIBehaviour, UiMaster.IUiSetup
	{
		[Token(Token = "0x20002AA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F0F34", Offset = "0x6F0F34")]
		private sealed class <>c__DisplayClass7_0
		{
			[Token(Token = "0x40010CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public PinnedUi palettePin;

			[Token(Token = "0x40010CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public PinUiButton <>4__this;

			[Token(Token = "0x40010CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PinnedUi sidePin;

			[Token(Token = "0x40010CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public UiMaster master;

			[Token(Token = "0x60013F0")]
			[Address(RVA = "0x92B1EC", Offset = "0x92B1EC", VA = "0x92B1EC")]
			public <>c__DisplayClass7_0()
			{
			}

			[Token(Token = "0x60013F1")]
			[Address(RVA = "0x92B1F4", Offset = "0x92B1F4", VA = "0x92B1F4")]
			internal void <Placemaker.Ui.UiMaster.IUiSetup.OnSetup>b__0(float x)
			{
			}

			[Token(Token = "0x60013F2")]
			[Address(RVA = "0x92B350", Offset = "0x92B350", VA = "0x92B350")]
			internal void <Placemaker.Ui.UiMaster.IUiSetup.OnSetup>b__1(float x)
			{
			}
		}

		[Token(Token = "0x40010C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private UiMaster master;

		[Token(Token = "0x40010C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private CanvasGroup tick;

		[Token(Token = "0x40010C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private UpdateState state;

		[Token(Token = "0x40010C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject palettePinTarget;

		[Token(Token = "0x40010C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GameObject sideMenuPinTarget;

		[Token(Token = "0x40010CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private GameObject undoRedoPinTarget;

		[Token(Token = "0x60013EC")]
		[Address(RVA = "0xE07D00", Offset = "0xE07D00", VA = "0xE07D00", Slot = "17")]
		private void Placemaker.Ui.UiMaster.IUiSetup.OnStart(UiMaster master)
		{
		}

		[Token(Token = "0x60013ED")]
		[Address(RVA = "0xE07D74", Offset = "0xE07D74", VA = "0xE07D74", Slot = "18")]
		private void Placemaker.Ui.UiMaster.IUiSetup.OnSetup(UiMaster master)
		{
		}

		[Token(Token = "0x60013EE")]
		[Address(RVA = "0xE080B0", Offset = "0xE080B0", VA = "0xE080B0")]
		public void Button_Toggle0()
		{
		}

		[Token(Token = "0x60013EF")]
		[Address(RVA = "0xE080F0", Offset = "0xE080F0", VA = "0xE080F0")]
		public PinUiButton()
		{
		}
	}
	[Token(Token = "0x20002AB")]
	public class PinnedUi : UIBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
	{
		[Token(Token = "0x20002AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F0F44", Offset = "0x6F0F44")]
		private sealed class <>c__DisplayClass3_0
		{
			[Token(Token = "0x40010D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public CanvasGroup canvasGroup;

			[Token(Token = "0x60013F9")]
			[Address(RVA = "0x92B3CC", Offset = "0x92B3CC", VA = "0x92B3CC")]
			public <>c__DisplayClass3_0()
			{
			}

			[Token(Token = "0x60013FA")]
			[Address(RVA = "0x92B3D4", Offset = "0x92B3D4", VA = "0x92B3D4")]
			internal void <Setup>b__0(float x)
			{
			}
		}

		[Token(Token = "0x40010CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private UpdateState state;

		[Token(Token = "0x40010D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool pinned;

		[Token(Token = "0x40010D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool hovered;

		[Token(Token = "0x60013F3")]
		[Address(RVA = "0xE07F70", Offset = "0xE07F70", VA = "0xE07F70")]
		public void Setup()
		{
		}

		[Token(Token = "0x60013F4")]
		[Address(RVA = "0xE08194", Offset = "0xE08194", VA = "0xE08194", Slot = "17")]
		private void UnityEngine.EventSystems.IPointerEnterHandler.OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60013F5")]
		[Address(RVA = "0xE081A0", Offset = "0xE081A0", VA = "0xE081A0", Slot = "18")]
		private void UnityEngine.EventSystems.IPointerExitHandler.OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60013F6")]
		[Address(RVA = "0xE08158", Offset = "0xE08158", VA = "0xE08158")]
		public void Check()
		{
		}

		[Token(Token = "0x60013F7")]
		[Address(RVA = "0xE081A8", Offset = "0xE081A8", VA = "0xE081A8")]
		public void SetPinned(bool pinned)
		{
		}

		[Token(Token = "0x60013F8")]
		[Address(RVA = "0xE081B4", Offset = "0xE081B4", VA = "0xE081B4")]
		public PinnedUi()
		{
		}
	}
	[Token(Token = "0x20002AD")]
	public class PinnedUiMobile : UIBehaviour, UiMaster.IUiSetup
	{
		[Token(Token = "0x40010D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private UiMaster master;

		[Token(Token = "0x40010D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject palettePinTarget;

		[Token(Token = "0x40010D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private PinnedUi palettePin;

		[Token(Token = "0x40010D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private SideMenu sideMenu;

		[Token(Token = "0x40010D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private PinnedUi sidePin;

		[Token(Token = "0x40010D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private GameObject undoRedoPinTarget;

		[Token(Token = "0x40010D9")]
		private const float PIN_UI_SECONDS = 3f;

		[Token(Token = "0x40010DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float pinUiTimer;

		[Token(Token = "0x60013FB")]
		[Address(RVA = "0xE08224", Offset = "0xE08224", VA = "0xE08224", Slot = "17")]
		public void OnStart(UiMaster master)
		{
		}

		[Token(Token = "0x60013FC")]
		[Address(RVA = "0xE082BC", Offset = "0xE082BC", VA = "0xE082BC", Slot = "18")]
		public void OnSetup(UiMaster master)
		{
		}

		[Token(Token = "0x60013FD")]
		[Address(RVA = "0xE082F4", Offset = "0xE082F4", VA = "0xE082F4")]
		private void Update()
		{
		}

		[Token(Token = "0x60013FE")]
		[Address(RVA = "0xE0840C", Offset = "0xE0840C", VA = "0xE0840C")]
		private void SetPinnedUi(bool pinned)
		{
		}

		[Token(Token = "0x60013FF")]
		[Address(RVA = "0xE083A0", Offset = "0xE083A0", VA = "0xE083A0")]
		private bool isInputReceived()
		{
			return default(bool);
		}

		[Token(Token = "0x6001400")]
		[Address(RVA = "0xE08478", Offset = "0xE08478", VA = "0xE08478")]
		public PinnedUiMobile()
		{
		}
	}
	[Token(Token = "0x20002AE")]
	public class ProgressBarButton : MonoBehaviour, UiMaster.IUiSetup
	{
		[Token(Token = "0x40010DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float holdTime;

		[Token(Token = "0x40010DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private UnityEvent onFull;

		[Token(Token = "0x40010DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private CornerImage bar;

		[Token(Token = "0x40010DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public UpdateState pressed;

		[Token(Token = "0x40010DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private BaseButton baseButton;

		[Token(Token = "0x40010E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool pressedByMouse;

		[Token(Token = "0x40010E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		private bool pressedByGamepad;

		[Token(Token = "0x40010E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
		private bool hasBeenInvoked;

		[Token(Token = "0x40010E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float gamepadPressTime;

		[Token(Token = "0x40010E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int gamepadPressFrame;

		[Token(Token = "0x6001401")]
		[Address(RVA = "0xE0C614", Offset = "0xE0C614", VA = "0xE0C614", Slot = "4")]
		private void Placemaker.Ui.UiMaster.IUiSetup.OnStart(UiMaster master)
		{
		}

		[Token(Token = "0x6001402")]
		[Address(RVA = "0xE0C620", Offset = "0xE0C620", VA = "0xE0C620", Slot = "5")]
		private void Placemaker.Ui.UiMaster.IUiSetup.OnSetup(UiMaster master)
		{
		}

		[Token(Token = "0x6001403")]
		[Address(RVA = "0xE0C73C", Offset = "0xE0C73C", VA = "0xE0C73C")]
		public void GamepadPress()
		{
		}

		[Token(Token = "0x6001404")]
		[Address(RVA = "0xE0C7BC", Offset = "0xE0C7BC", VA = "0xE0C7BC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001405")]
		[Address(RVA = "0xE0C898", Offset = "0xE0C898", VA = "0xE0C898")]
		public ProgressBarButton()
		{
		}

		[Token(Token = "0x6001406")]
		[Address(RVA = "0xE0C918", Offset = "0xE0C918", VA = "0xE0C918")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FCB1C", Offset = "0x6FCB1C")]
		private void <Placemaker.Ui.UiMaster.IUiSetup.OnSetup>b__11_0(BaseButton.State state)
		{
		}
	}
	[Token(Token = "0x20002AF")]
	public class SaveCard : MonoBehaviour, IComparable<SaveCard>
	{
		[Token(Token = "0x40010E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public RawImage image;

		[Token(Token = "0x40010E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Texture2D bigTexture;

		[Token(Token = "0x40010E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public CanvasGroup canvasGroup;

		[Token(Token = "0x40010E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public BaseButton baseButton;

		[Token(Token = "0x40010E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public SaveData saveData;

		[Token(Token = "0x40010EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public CanvasGroup sideButtonsCanvasGroup;

		[Token(Token = "0x40010EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public BaseButton deleteButton;

		[Token(Token = "0x40010EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public MetaSave metaSave;

		[Token(Token = "0x40010ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public string filePath;

		[Token(Token = "0x40010EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public UpdateState scaleZ;

		[Token(Token = "0x40010EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public UpdateState scaleXY;

		[Token(Token = "0x40010F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public UpdateState sideButtons;

		[Token(Token = "0x40010F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public float hoverTime;

		[NonSerialized]
		[Token(Token = "0x40010F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public bool hasBeenEnabled;

		[Token(Token = "0x6001407")]
		[Address(RVA = "0x109C124", Offset = "0x109C124", VA = "0x109C124", Slot = "4")]
		private int System.IComparable<Placemaker.Ui.SaveCard>.CompareTo(SaveCard other)
		{
			return default(int);
		}

		[Token(Token = "0x6001408")]
		[Address(RVA = "0x109C1AC", Offset = "0x109C1AC", VA = "0x109C1AC")]
		public SaveCard()
		{
		}
	}
	[Token(Token = "0x20002B0")]
	public class SaveMenu : UIBehaviour, UiMaster.IUiSetup, IOnScenePostProcess
	{
		[Token(Token = "0x20002B1")]
		public enum StatusUIState : byte
		{
			[Token(Token = "0x4001122")]
			Closed,
			[Token(Token = "0x4001123")]
			Open,
			[Token(Token = "0x4001124")]
			Focus
		}

		[Token(Token = "0x20002B2")]
		private enum MenuInitState : byte
		{
			[Token(Token = "0x4001126")]
			Begin,
			[Token(Token = "0x4001127")]
			RefreshFiles,
			[Token(Token = "0x4001128")]
			SaveCards,
			[Token(Token = "0x4001129")]
			Done
		}

		[Token(Token = "0x20002B3")]
		private enum OpenSaveMenuState : byte
		{
			[Token(Token = "0x400112B")]
			Begin,
			[Token(Token = "0x400112C")]
			StartSavingGame,
			[Token(Token = "0x400112D")]
			SavingGame,
			[Token(Token = "0x400112E")]
			SetLastCard,
			[Token(Token = "0x400112F")]
			SortCards,
			[Token(Token = "0x4001130")]
			OpenUI,
			[Token(Token = "0x4001131")]
			Done
		}

		[Token(Token = "0x20002B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F0F54", Offset = "0x6F0F54")]
		private sealed class <>c__DisplayClass51_0
		{
			[Token(Token = "0x4001132")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SaveMenu <>4__this;

			[Token(Token = "0x4001133")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public UiMaster master;

			[Token(Token = "0x600142C")]
			[Address(RVA = "0x92C0C4", Offset = "0x92C0C4", VA = "0x92C0C4")]
			public <>c__DisplayClass51_0()
			{
			}

			[Token(Token = "0x600142D")]
			[Address(RVA = "0x92C0CC", Offset = "0x92C0CC", VA = "0x92C0CC")]
			internal void <Placemaker.Ui.UiMaster.IUiSetup.OnSetup>b__6(float x)
			{
			}

			[Token(Token = "0x600142E")]
			[Address(RVA = "0x92C110", Offset = "0x92C110", VA = "0x92C110")]
			internal void <Placemaker.Ui.UiMaster.IUiSetup.OnSetup>b__7(float x)
			{
			}

			[Token(Token = "0x600142F")]
			[Address(RVA = "0x92C138", Offset = "0x92C138", VA = "0x92C138")]
			internal void <Placemaker.Ui.UiMaster.IUiSetup.OnSetup>b__8(float x)
			{
			}

			[Token(Token = "0x6001430")]
			[Address(RVA = "0x92C1EC", Offset = "0x92C1EC", VA = "0x92C1EC")]
			internal void <Placemaker.Ui.UiMaster.IUiSetup.OnSetup>g__SetupCard|0(SaveCard saveCard)
			{
			}

			[Token(Token = "0x6001431")]
			[Address(RVA = "0x92C7E0", Offset = "0x92C7E0", VA = "0x92C7E0")]
			internal void <Placemaker.Ui.UiMaster.IUiSetup.OnSetup>b__14(MetaSave metaSave)
			{
			}

			[Token(Token = "0x6001432")]
			[Address(RVA = "0x92C904", Offset = "0x92C904", VA = "0x92C904")]
			internal void <Placemaker.Ui.UiMaster.IUiSetup.OnSetup>b__1(float x)
			{
			}

			[Token(Token = "0x6001433")]
			[Address(RVA = "0x92CA34", Offset = "0x92CA34", VA = "0x92CA34")]
			internal void <Placemaker.Ui.UiMaster.IUiSetup.OnSetup>b__2(float x)
			{
			}

			[Token(Token = "0x6001434")]
			[Address(RVA = "0x92CAEC", Offset = "0x92CAEC", VA = "0x92CAEC")]
			internal void <Placemaker.Ui.UiMaster.IUiSetup.OnSetup>g__CheckGamepad|3(float x)
			{
			}

			[Token(Token = "0x6001435")]
			[Address(RVA = "0x92CB88", Offset = "0x92CB88", VA = "0x92CB88")]
			internal void <Placemaker.Ui.UiMaster.IUiSetup.OnSetup>g__CheckFocusGamepad|4(float x)
			{
			}

			[Token(Token = "0x6001436")]
			[Address(RVA = "0x92CC04", Offset = "0x92CC04", VA = "0x92CC04")]
			internal void <Placemaker.Ui.UiMaster.IUiSetup.OnSetup>b__5(int count)
			{
			}
		}

		[Token(Token = "0x20002B5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F0F64", Offset = "0x6F0F64")]
		private sealed class <>c__DisplayClass51_1
		{
			[Token(Token = "0x4001134")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SaveCard saveCard;

			[Token(Token = "0x4001135")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public <>c__DisplayClass51_0 CS$<>8__locals1;

			[Token(Token = "0x6001437")]
			[Address(RVA = "0x92C77C", Offset = "0x92C77C", VA = "0x92C77C")]
			public <>c__DisplayClass51_1()
			{
			}

			[Token(Token = "0x6001438")]
			[Address(RVA = "0x92CCF0", Offset = "0x92CCF0", VA = "0x92CCF0")]
			internal void <Placemaker.Ui.UiMaster.IUiSetup.OnSetup>b__10(BaseButton.State state)
			{
			}

			[Token(Token = "0x6001439")]
			[Address(RVA = "0x92C78C", Offset = "0x92C78C", VA = "0x92C78C")]
			internal void <Placemaker.Ui.UiMaster.IUiSetup.OnSetup>g__SetIndex|11(int index)
			{
			}

			[Token(Token = "0x600143A")]
			[Address(RVA = "0x92CDE0", Offset = "0x92CDE0", VA = "0x92CDE0")]
			internal void <Placemaker.Ui.UiMaster.IUiSetup.OnSetup>b__13(int x)
			{
			}
		}

		[Token(Token = "0x20002B6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F0F74", Offset = "0x6F0F74")]
		private sealed class <>c__DisplayClass51_2
		{
			[Token(Token = "0x4001136")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public DistanceFieldSettings settings0;

			[Token(Token = "0x4001137")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public DistanceFieldSettings settings1;

			[Token(Token = "0x4001138")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MetaSave metaSave;

			[Token(Token = "0x4001139")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public <>c__DisplayClass51_1 CS$<>8__locals2;

			[Token(Token = "0x600143B")]
			[Address(RVA = "0x92C784", Offset = "0x92C784", VA = "0x92C784")]
			public <>c__DisplayClass51_2()
			{
			}

			[Token(Token = "0x600143C")]
			[Address(RVA = "0x92CDE4", Offset = "0x92CDE4", VA = "0x92CDE4")]
			internal void <Placemaker.Ui.UiMaster.IUiSetup.OnSetup>b__9(float x)
			{
			}

			[Token(Token = "0x600143D")]
			[Address(RVA = "0x92CE60", Offset = "0x92CE60", VA = "0x92CE60")]
			internal void <Placemaker.Ui.UiMaster.IUiSetup.OnSetup>b__12()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20002B7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F0F84", Offset = "0x6F0F84")]
		private sealed class <>c
		{
			[Token(Token = "0x400113A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400113B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action<int> <>9__82_0;

			[Token(Token = "0x600143F")]
			[Address(RVA = "0x92C0B8", Offset = "0x92C0B8", VA = "0x92C0B8")]
			public <>c()
			{
			}

			[Token(Token = "0x6001440")]
			[Address(RVA = "0x92C0C0", Offset = "0x92C0C0", VA = "0x92C0C0")]
			internal void <.ctor>b__82_0(int <p0>)
			{
			}
		}

		[Token(Token = "0x40010F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private UiMaster master;

		[Token(Token = "0x40010F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private BetterScrollRect cardsListScrollRect;

		[Token(Token = "0x40010F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform scaleAnim;

		[Token(Token = "0x40010F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private RectTransform gridSizeScaling;

		[Token(Token = "0x40010F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private CanvasGroup canvasGroup;

		[Token(Token = "0x40010F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x6F822C", Offset = "0x6F822C")]
		private RawImage tallFocusedImage;

		[Token(Token = "0x40010F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private RawImage wideFocusedImage;

		[Token(Token = "0x40010FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private CanvasGroup focusCanvasGroup;

		[Token(Token = "0x40010FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private RectTransform focusFrame;

		[Token(Token = "0x40010FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Transform focusScaleAnim;

		[Token(Token = "0x40010FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private RectTransform saveCardContainer;

		[Token(Token = "0x40010FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private RectTransform focusPlacement;

		[Token(Token = "0x40010FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private RectTransform tallFocusFrame;

		[Token(Token = "0x4001100")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private RectTransform wideFocusFrame;

		[Token(Token = "0x4001101")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private RectTransform tallFocusButtonContainer;

		[Token(Token = "0x4001102")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private RectTransform wideFocusButtonContainer;

		[Token(Token = "0x4001103")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private RectTransform focusCopy;

		[Token(Token = "0x4001104")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private SaveCard focusedCard;

		[Token(Token = "0x4001105")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private Graphic focusGamepadCursor0;

		[Token(Token = "0x4001106")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private Graphic focusGamepadCursor1;

		[Token(Token = "0x4001107")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private BaseButton selectedFocusButton;

		[Token(Token = "0x4001108")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private RectTransform focusButtonContainer;

		[Token(Token = "0x4001109")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private List<BaseButton> focusButtons;

		[Token(Token = "0x400110A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x6F8364", Offset = "0x6F8364")]
		private SaveCard srcSaveCard;

		[Token(Token = "0x400110B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private SaveCard gamepadCard;

		[Token(Token = "0x400110C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private CanvasGroup gamepadCursor;

		[Token(Token = "0x400110D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		public MenuMusic menuMusic;

		[Token(Token = "0x400110E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private RapidButton rapidGamepadButton;

		[Token(Token = "0x400110F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[SerializeField]
		private GridLayoutGroup grid;

		[Token(Token = "0x4001110")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[SerializeField]
		private List<SaveCard> saveCards;

		[Token(Token = "0x4001111")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public UpdateState visibleState;

		[Token(Token = "0x4001112")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public UpdateState openState;

		[Token(Token = "0x4001113")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public UpdateState focusCardState;

		[Token(Token = "0x4001114")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public UpdateState menuScaleState;

		[Token(Token = "0x4001115")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public UpdateState gamepadState;

		[Token(Token = "0x4001116")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public UpdateState focusGamepadState;

		[Token(Token = "0x4001117")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private bool snapFocusGamepad;

		[Token(Token = "0x4001118")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x149")]
		private bool gridSizeDirty;

		[Token(Token = "0x4001119")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14A")]
		[SerializeField]
		private MenuInitState menuInitState;

		[Token(Token = "0x400111A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[SerializeField]
		private SimpleMessage focusedCardDuplicateMessage;

		[Token(Token = "0x400111B")]
		private const float focusedCardHeldTime = 0.8f;

		[Token(Token = "0x400111C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private Stopwatch stopwatch;

		[Token(Token = "0x400111D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		[SerializeField]
		private MaxSavesCounter maxSavesCounter;

		[Token(Token = "0x400111E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		public Action<int> onTotalSaveGameCountUpdate;

		[Token(Token = "0x400111F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private int index;

		[Token(Token = "0x4001120")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
		private int count;

		[Token(Token = "0x6001409")]
		[Address(RVA = "0x109C588", Offset = "0x109C588", VA = "0x109C588")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x6FCB2C", Offset = "0x6FCB2C")]
		public void Toggle()
		{
		}

		[Token(Token = "0x600140A")]
		[Address(RVA = "0x109C660", Offset = "0x109C660", VA = "0x109C660")]
		public void SnapScrolls()
		{
		}

		[Token(Token = "0x600140B")]
		[Address(RVA = "0x109C690", Offset = "0x109C690", VA = "0x109C690")]
		public void SetUIState(StatusUIState state)
		{
		}

		[Token(Token = "0x600140C")]
		[Address(RVA = "0x109C92C", Offset = "0x109C92C", VA = "0x109C92C", Slot = "17")]
		private void Placemaker.Ui.UiMaster.IUiSetup.OnStart(UiMaster master)
		{
		}

		[Token(Token = "0x600140D")]
		[Address(RVA = "0x109C95C", Offset = "0x109C95C", VA = "0x109C95C", Slot = "18")]
		private void Placemaker.Ui.UiMaster.IUiSetup.OnSetup(UiMaster master)
		{
		}

		[Token(Token = "0x600140E")]
		[Address(RVA = "0x109C8EC", Offset = "0x109C8EC", VA = "0x109C8EC")]
		private void OnDimensionsChange()
		{
		}

		[Token(Token = "0x600140F")]
		[Address(RVA = "0x109D114", Offset = "0x109D114", VA = "0x109D114")]
		private void SetGridRect()
		{
		}

		[Token(Token = "0x6001410")]
		[Address(RVA = "0x109D47C", Offset = "0x109D47C", VA = "0x109D47C")]
		public void SetGridRectSizeDirty()
		{
		}

		[Token(Token = "0x6001411")]
		[Address(RVA = "0x109D488", Offset = "0x109D488", VA = "0x109D488")]
		private void MaybeUpdateGridRectSize()
		{
		}

		[Token(Token = "0x6001412")]
		[Address(RVA = "0x109D280", Offset = "0x109D280", VA = "0x109D280")]
		private void SetFocusFrameScale()
		{
		}

		[Token(Token = "0x6001413")]
		[Address(RVA = "0x109D5EC", Offset = "0x109D5EC", VA = "0x109D5EC")]
		public void OpenWithoutRefresh()
		{
		}

		[Token(Token = "0x6001414")]
		[Address(RVA = "0x109C60C", Offset = "0x109C60C", VA = "0x109C60C")]
		public void Open()
		{
		}

		[Token(Token = "0x6001415")]
		[Address(RVA = "0x109C5D0", Offset = "0x109C5D0", VA = "0x109C5D0")]
		public void Close()
		{
		}

		[Token(Token = "0x6001416")]
		[Address(RVA = "0x109D7B4", Offset = "0x109D7B4", VA = "0x109D7B4")]
		public void Button_SideCancel(BaseButton button)
		{
		}

		[Token(Token = "0x6001417")]
		[Address(RVA = "0x109D844", Offset = "0x109D844", VA = "0x109D844")]
		private void Update()
		{
		}

		[Token(Token = "0x6001418")]
		[Address(RVA = "0x109E4B4", Offset = "0x109E4B4", VA = "0x109E4B4")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001419")]
		[Address(RVA = "0x109DB7C", Offset = "0x109DB7C", VA = "0x109DB7C")]
		private bool KeepGoing()
		{
			return default(bool);
		}

		[Token(Token = "0x600141A")]
		[Address(RVA = "0x109D978", Offset = "0x109D978", VA = "0x109D978")]
		private bool MenuInit(Func<bool> keepGoing)
		{
			return default(bool);
		}

		[Token(Token = "0x600141B")]
		[Address(RVA = "0x109E05C", Offset = "0x109E05C", VA = "0x109E05C")]
		private void GamepadUpdate()
		{
		}

		[Token(Token = "0x600141C")]
		[Address(RVA = "0x109DBA8", Offset = "0x109DBA8", VA = "0x109DBA8")]
		private void FocusGamepadUpdate()
		{
		}

		[Token(Token = "0x600141D")]
		[Address(RVA = "0x109F174", Offset = "0x109F174", VA = "0x109F174")]
		public void Clicked(SaveCard card)
		{
		}

		[Token(Token = "0x600141E")]
		[Address(RVA = "0x109F2F4", Offset = "0x109F2F4", VA = "0x109F2F4")]
		public void CancelFocusClicked()
		{
		}

		[Token(Token = "0x600141F")]
		[Address(RVA = "0x109F32C", Offset = "0x109F32C", VA = "0x109F32C")]
		private void ExecuteIfSaveSystemAllows(System.Action methodToExecute, SimpleMessage infoMessageElement)
		{
		}

		[Token(Token = "0x6001420")]
		[Address(RVA = "0x109F518", Offset = "0x109F518", VA = "0x109F518")]
		public void NewButton(BaseButton button)
		{
		}

		[Token(Token = "0x6001421")]
		[Address(RVA = "0x109F5B8", Offset = "0x109F5B8", VA = "0x109F5B8")]
		public void Button_Focus_Load()
		{
		}

		[Token(Token = "0x6001422")]
		[Address(RVA = "0x109F5E4", Offset = "0x109F5E4", VA = "0x109F5E4")]
		public void Button_Focus_CopyToClipboard()
		{
		}

		[Token(Token = "0x6001423")]
		[Address(RVA = "0x109F618", Offset = "0x109F618", VA = "0x109F618")]
		public void Button_Focus_Duplicate()
		{
		}

		[Token(Token = "0x6001424")]
		[Address(RVA = "0x109F698", Offset = "0x109F698", VA = "0x109F698")]
		public void Button_Focus_Delete_Down()
		{
		}

		[Token(Token = "0x6001425")]
		[Address(RVA = "0x109F69C", Offset = "0x109F69C", VA = "0x109F69C")]
		public void Button_Focus_Delete_Full(BaseButton button)
		{
		}

		[Token(Token = "0x6001426")]
		[Address(RVA = "0x109FBC0", Offset = "0x109FBC0", VA = "0x109FBC0", Slot = "19")]
		private void Placemaker.SceneProcessing.IOnScenePostProcess.OnScenePostProcess(bool isBuild, TargetPlatformFlags platform)
		{
		}

		[Token(Token = "0x6001427")]
		[Address(RVA = "0x109FC70", Offset = "0x109FC70", VA = "0x109FC70")]
		private void SortAllCards()
		{
		}

		[Token(Token = "0x6001428")]
		[Address(RVA = "0x109FD28", Offset = "0x109FD28", VA = "0x109FD28")]
		public void ResetNavigation()
		{
		}

		[Token(Token = "0x6001429")]
		[Address(RVA = "0x109FE2C", Offset = "0x109FE2C", VA = "0x109FE2C")]
		public void ResetSaveCardOrder()
		{
		}

		[Token(Token = "0x600142A")]
		[Address(RVA = "0x109FEB8", Offset = "0x109FEB8", VA = "0x109FEB8")]
		public SaveMenu()
		{
		}

		[Token(Token = "0x600142B")]
		[Address(RVA = "0x10A0174", Offset = "0x10A0174", VA = "0x10A0174")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FCB64", Offset = "0x6FCB64")]
		private void <Button_Focus_Duplicate>g__Duplicate|75_0()
		{
		}
	}
	[Token(Token = "0x20002B8")]
	public class SavingIndicator : MonoBehaviour, UiMaster.IUiSetup
	{
		[Token(Token = "0x400113C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float alpha;

		[Token(Token = "0x400113D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform anchor;

		[Token(Token = "0x400113E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Graphic graphic;

		[Token(Token = "0x400113F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private bool on;

		[Token(Token = "0x6001441")]
		[Address(RVA = "0x10A2D7C", Offset = "0x10A2D7C", VA = "0x10A2D7C", Slot = "5")]
		private void Placemaker.Ui.UiMaster.IUiSetup.OnSetup(UiMaster master)
		{
		}

		[Token(Token = "0x6001442")]
		[Address(RVA = "0x10A2D80", Offset = "0x10A2D80", VA = "0x10A2D80", Slot = "4")]
		private void Placemaker.Ui.UiMaster.IUiSetup.OnStart(UiMaster master)
		{
		}

		[Token(Token = "0x6001443")]
		[Address(RVA = "0x10A2DA0", Offset = "0x10A2DA0", VA = "0x10A2DA0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001444")]
		[Address(RVA = "0x10A2F7C", Offset = "0x10A2F7C", VA = "0x10A2F7C")]
		public SavingIndicator()
		{
		}
	}
	[Token(Token = "0x20002B9")]
	public class ScreenshotButtons : UIBehaviour, UiMaster.IUiSetup
	{
		[Token(Token = "0x20002BA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F0F94", Offset = "0x6F0F94")]
		private sealed class <>c__DisplayClass20_0
		{
			[Token(Token = "0x4001153")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ScreenshotButtons <>4__this;

			[Token(Token = "0x4001154")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public UiMaster master;

			[Token(Token = "0x4001155")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public NavigableButton navigable;

			[Token(Token = "0x600144E")]
			[Address(RVA = "0x92DFF8", Offset = "0x92DFF8", VA = "0x92DFF8")]
			public <>c__DisplayClass20_0()
			{
			}

			[Token(Token = "0x600144F")]
			[Address(RVA = "0x92E000", Offset = "0x92E000", VA = "0x92E000")]
			internal void <Placemaker.Ui.UiMaster.IUiSetup.OnSetup>g__CheckFrameState|0(float x)
			{
			}

			[Token(Token = "0x6001450")]
			[Address(RVA = "0x92E134", Offset = "0x92E134", VA = "0x92E134")]
			internal void <Placemaker.Ui.UiMaster.IUiSetup.OnSetup>b__4()
			{
			}
		}

		[Token(Token = "0x20002BB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F0FA4", Offset = "0x6F0FA4")]
		private sealed class <>c__DisplayClass20_1
		{
			[Token(Token = "0x4001156")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Graphic widthGraphic;

			[Token(Token = "0x4001157")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Color defaultInputColor;

			[Token(Token = "0x4001158")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Graphic heightGraphic;

			[Token(Token = "0x4001159")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Graphic pathGraphic;

			[Token(Token = "0x6001451")]
			[Address(RVA = "0x92E374", Offset = "0x92E374", VA = "0x92E374")]
			public <>c__DisplayClass20_1()
			{
			}

			[Token(Token = "0x6001452")]
			[Address(RVA = "0x92E37C", Offset = "0x92E37C", VA = "0x92E37C")]
			internal void <Placemaker.Ui.UiMaster.IUiSetup.OnSetup>b__1(float x)
			{
			}

			[Token(Token = "0x6001453")]
			[Address(RVA = "0x92E424", Offset = "0x92E424", VA = "0x92E424")]
			internal void <Placemaker.Ui.UiMaster.IUiSetup.OnSetup>b__2(float x)
			{
			}

			[Token(Token = "0x6001454")]
			[Address(RVA = "0x92E4CC", Offset = "0x92E4CC", VA = "0x92E4CC")]
			internal void <Placemaker.Ui.UiMaster.IUiSetup.OnSetup>b__3(float x)
			{
			}
		}

		[Token(Token = "0x4001140")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private UiMaster master;

		[Token(Token = "0x4001141")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private CanvasGroup frameCanvasGroup;

		[Token(Token = "0x4001142")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private CanvasGroup frameCanvasGroup1;

		[Token(Token = "0x4001143")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private CanvasGroup tick;

		[Token(Token = "0x4001144")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private CanvasGroup cornersCanvasGroup;

		[Token(Token = "0x4001145")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private ScreenshotFrame frame;

		[Token(Token = "0x4001146")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private UpdateState frameState;

		[Token(Token = "0x4001147")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private UpdateState sideDimState;

		[Token(Token = "0x4001148")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private UpdateState errorWidth;

		[Token(Token = "0x4001149")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private UpdateState errorHeight;

		[Token(Token = "0x400114A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private UpdateState errorPath;

		[Token(Token = "0x400114B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private BaseButton screenshotButton;

		[Token(Token = "0x400114C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private TMP_InputField widthInput;

		[Token(Token = "0x400114D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private TMP_InputField heightInput;

		[Token(Token = "0x400114E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private TMP_InputField pathInput;

		[Token(Token = "0x400114F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private int width;

		[Token(Token = "0x4001150")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[SerializeField]
		private int height;

		[Token(Token = "0x4001151")]
		private const int minSize = 16;

		[Token(Token = "0x4001152")]
		private const int maxSize = 4096;

		[Token(Token = "0x6001445")]
		[Address(RVA = "0x10A3544", Offset = "0x10A3544", VA = "0x10A3544", Slot = "17")]
		private void Placemaker.Ui.UiMaster.IUiSetup.OnStart(UiMaster master)
		{
		}

		[Token(Token = "0x6001446")]
		[Address(RVA = "0x10A354C", Offset = "0x10A354C", VA = "0x10A354C", Slot = "18")]
		private void Placemaker.Ui.UiMaster.IUiSetup.OnSetup(UiMaster master)
		{
		}

		[Token(Token = "0x6001447")]
		[Address(RVA = "0x10A39D0", Offset = "0x10A39D0", VA = "0x10A39D0")]
		public void Button_ScreenshotPNG()
		{
		}

		[Token(Token = "0x6001448")]
		[Address(RVA = "0x10A4AA8", Offset = "0x10A4AA8", VA = "0x10A4AA8")]
		public void Button_InputUpdated()
		{
		}

		[Token(Token = "0x6001449")]
		[Address(RVA = "0x10A4C54", Offset = "0x10A4C54", VA = "0x10A4C54")]
		public void Button_PathUpdated()
		{
		}

		[Token(Token = "0x600144A")]
		[Address(RVA = "0x10A4E48", Offset = "0x10A4E48", VA = "0x10A4E48")]
		public void Button_SetPath()
		{
		}

		[Token(Token = "0x600144B")]
		[Address(RVA = "0x10A4F48", Offset = "0x10A4F48", VA = "0x10A4F48")]
		private void OnFolderBrowsingComplete(bool selected, string singleFolder, string[] folders)
		{
		}

		[Token(Token = "0x600144C")]
		[Address(RVA = "0x10A4DCC", Offset = "0x10A4DCC", VA = "0x10A4DCC")]
		private string ResetPath()
		{
			return null;
		}

		[Token(Token = "0x600144D")]
		[Address(RVA = "0x10A50A0", Offset = "0x10A50A0", VA = "0x10A50A0")]
		public ScreenshotButtons()
		{
		}
	}
	[Token(Token = "0x20002BC")]
	public class ScreenshotFrame : UIBehaviour, UiMaster.IUiSetup
	{
		[Token(Token = "0x400115A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private UiMaster master;

		[Token(Token = "0x400115B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private RectTransform masterRt;

		[Token(Token = "0x400115C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public RectTransform center;

		[Token(Token = "0x400115D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public RectTransform margins;

		[Token(Token = "0x400115E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private RectTransform top;

		[Token(Token = "0x400115F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private RectTransform bottom;

		[Token(Token = "0x4001160")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private RectTransform left;

		[Token(Token = "0x4001161")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private RectTransform right;

		[Token(Token = "0x4001162")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private int width;

		[Token(Token = "0x4001163")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[SerializeField]
		private int height;

		[Token(Token = "0x6001455")]
		[Address(RVA = "0x10A5254", Offset = "0x10A5254", VA = "0x10A5254", Slot = "17")]
		private void Placemaker.Ui.UiMaster.IUiSetup.OnStart(UiMaster master)
		{
		}

		[Token(Token = "0x6001456")]
		[Address(RVA = "0x10A525C", Offset = "0x10A525C", VA = "0x10A525C", Slot = "18")]
		private void Placemaker.Ui.UiMaster.IUiSetup.OnSetup(UiMaster master)
		{
		}

		[Token(Token = "0x6001457")]
		[Address(RVA = "0x10A4C4C", Offset = "0x10A4C4C", VA = "0x10A4C4C")]
		public void SetSize(int width, int height)
		{
		}

		[Token(Token = "0x6001458")]
		[Address(RVA = "0x10A5358", Offset = "0x10A5358", VA = "0x10A5358")]
		public void UpdateSize()
		{
		}

		[Token(Token = "0x6001459")]
		[Address(RVA = "0x10A55E0", Offset = "0x10A55E0", VA = "0x10A55E0")]
		private void SetRect(RectTransform rt, float minX, float maxX, float minY, float maxY)
		{
		}

		[Token(Token = "0x600145A")]
		[Address(RVA = "0x10A5684", Offset = "0x10A5684", VA = "0x10A5684")]
		public ScreenshotFrame()
		{
		}
	}
	[Token(Token = "0x20002BD")]
	public class ScreenshotSwitch : UIBehaviour, UiMaster.IUiSetup
	{
		[Token(Token = "0x20002BE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F0FB4", Offset = "0x6F0FB4")]
		private sealed class <>c__DisplayClass21_0
		{
			[Token(Token = "0x4001177")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform child;

			[Token(Token = "0x4001178")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector3 minScale;

			[Token(Token = "0x4001179")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public Vector3 maxScale;

			[Token(Token = "0x400117A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Graphic graphic;

			[Token(Token = "0x600146B")]
			[Address(RVA = "0x92E574", Offset = "0x92E574", VA = "0x92E574")]
			public <>c__DisplayClass21_0()
			{
			}

			[Token(Token = "0x600146C")]
			[Address(RVA = "0x92E57C", Offset = "0x92E57C", VA = "0x92E57C")]
			internal void <SubscribeButton>b__0(float x)
			{
			}
		}

		[Token(Token = "0x4001164")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private UiMaster master;

		[Token(Token = "0x4001165")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private CanvasGroup frameCanvasGroup;

		[Token(Token = "0x4001166")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private CanvasGroup frameCanvasGroup1;

		[Token(Token = "0x4001167")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private CanvasGroup cornersCanvasGroup;

		[Token(Token = "0x4001168")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private ScreenshotFrame frame;

		[Token(Token = "0x4001169")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private UpdateState frameState;

		[Token(Token = "0x400116A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private BaseButton screenshotButton;

		[Token(Token = "0x400116B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private RectTransform selector;

		[Token(Token = "0x400116C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private BaseButton frameButtonOne;

		[Token(Token = "0x400116D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private BaseButton frameButtonTwo;

		[Token(Token = "0x400116E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private BaseButton frameButtonThree;

		[Token(Token = "0x400116F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private UpdateState frameOneState;

		[Token(Token = "0x4001170")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private UpdateState frameTwoState;

		[Token(Token = "0x4001171")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private UpdateState frameThreeState;

		[Token(Token = "0x4001172")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private Vector4 buttonsCurrent;

		[Token(Token = "0x4001173")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private Vector4 buttonsTarget;

		[Token(Token = "0x4001174")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private bool isUpdating;

		[Token(Token = "0x4001175")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private Vector2Int[] frameSizes;

		[Token(Token = "0x4001176")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private Vector2 frameTarget;

		[Token(Token = "0x600145B")]
		[Address(RVA = "0x10A5698", Offset = "0x10A5698", VA = "0x10A5698", Slot = "17")]
		private void Placemaker.Ui.UiMaster.IUiSetup.OnStart(UiMaster master)
		{
		}

		[Token(Token = "0x600145C")]
		[Address(RVA = "0x10A5724", Offset = "0x10A5724", VA = "0x10A5724")]
		private void SetFrameSizes()
		{
		}

		[Token(Token = "0x600145D")]
		[Address(RVA = "0x10A5728", Offset = "0x10A5728", VA = "0x10A5728")]
		private void SubscribeButton(BaseButton button, UpdateState updateState)
		{
		}

		[Token(Token = "0x600145E")]
		[Address(RVA = "0x10A5864", Offset = "0x10A5864", VA = "0x10A5864", Slot = "18")]
		private void Placemaker.Ui.UiMaster.IUiSetup.OnSetup(UiMaster master)
		{
		}

		[Token(Token = "0x600145F")]
		[Address(RVA = "0x10A5AE4", Offset = "0x10A5AE4", VA = "0x10A5AE4")]
		public void Button_One()
		{
		}

		[Token(Token = "0x6001460")]
		[Address(RVA = "0x10A5B04", Offset = "0x10A5B04", VA = "0x10A5B04")]
		public void Button_Two()
		{
		}

		[Token(Token = "0x6001461")]
		[Address(RVA = "0x10A5B24", Offset = "0x10A5B24", VA = "0x10A5B24")]
		public void Button_Three()
		{
		}

		[Token(Token = "0x6001462")]
		[Address(RVA = "0x10A5B44", Offset = "0x10A5B44", VA = "0x10A5B44")]
		public void OnUpdate()
		{
		}

		[Token(Token = "0x6001463")]
		[Address(RVA = "0x10A5D20", Offset = "0x10A5D20", VA = "0x10A5D20")]
		public void SetFrameTarget(float buttonOne, float buttonTwo, float buttonThree)
		{
		}

		[Token(Token = "0x6001464")]
		[Address(RVA = "0x10A5E68", Offset = "0x10A5E68", VA = "0x10A5E68")]
		public void Button_ToggleFrame()
		{
		}

		[Token(Token = "0x6001465")]
		[Address(RVA = "0x10A5E6C", Offset = "0x10A5E6C", VA = "0x10A5E6C")]
		public void Button_ScreenshotPNG()
		{
		}

		[Token(Token = "0x6001466")]
		[Address(RVA = "0x10A5E70", Offset = "0x10A5E70", VA = "0x10A5E70")]
		public ScreenshotSwitch()
		{
		}

		[Token(Token = "0x6001467")]
		[Address(RVA = "0x10A5F34", Offset = "0x10A5F34", VA = "0x10A5F34")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FCB74", Offset = "0x6FCB74")]
		private void <Placemaker.Ui.UiMaster.IUiSetup.OnSetup>b__22_0(float x)
		{
		}

		[Token(Token = "0x6001468")]
		[Address(RVA = "0x10A5FC8", Offset = "0x10A5FC8", VA = "0x10A5FC8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FCB84", Offset = "0x6FCB84")]
		private void <Placemaker.Ui.UiMaster.IUiSetup.OnSetup>b__22_1(float x)
		{
		}

		[Token(Token = "0x6001469")]
		[Address(RVA = "0x10A6060", Offset = "0x10A6060", VA = "0x10A6060")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FCB94", Offset = "0x6FCB94")]
		private void <Placemaker.Ui.UiMaster.IUiSetup.OnSetup>b__22_2(float x)
		{
		}

		[Token(Token = "0x600146A")]
		[Address(RVA = "0x10A60F8", Offset = "0x10A60F8", VA = "0x10A60F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FCBA4", Offset = "0x6FCBA4")]
		private void <Placemaker.Ui.UiMaster.IUiSetup.OnSetup>b__22_3(BaseButton.State x)
		{
		}
	}
	[Token(Token = "0x20002BF")]
	public class SettingsMenu : MonoBehaviour, UiMaster.IUiSetup, GenericMenuNavigator.INavigableMenu
	{
		[Token(Token = "0x400117B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private UiMaster master;

		[Token(Token = "0x400117C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UpdateState openState;

		[Token(Token = "0x400117D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GenericMenuNavigator navigator;

		[Token(Token = "0x600146D")]
		[Address(RVA = "0x10A6A88", Offset = "0x10A6A88", VA = "0x10A6A88", Slot = "5")]
		private void Placemaker.Ui.UiMaster.IUiSetup.OnSetup(UiMaster master)
		{
		}

		[Token(Token = "0x600146E")]
		[Address(RVA = "0x10A6BB0", Offset = "0x10A6BB0", VA = "0x10A6BB0", Slot = "4")]
		private void Placemaker.Ui.UiMaster.IUiSetup.OnStart(UiMaster master)
		{
		}

		[Token(Token = "0x600146F")]
		[Address(RVA = "0x10A6BB4", Offset = "0x10A6BB4", VA = "0x10A6BB4")]
		public void Open()
		{
		}

		[Token(Token = "0x6001470")]
		[Address(RVA = "0x10A6C34", Offset = "0x10A6C34", VA = "0x10A6C34", Slot = "6")]
		public void Close(bool openSideMenu)
		{
		}

		[Token(Token = "0x6001471")]
		[Address(RVA = "0x10A6CA8", Offset = "0x10A6CA8", VA = "0x10A6CA8", Slot = "7")]
		private UpdateState Placemaker.Ui.GenericMenuNavigator.INavigableMenu.GetMainUpdateState()
		{
			return null;
		}

		[Token(Token = "0x6001472")]
		[Address(RVA = "0x10A6CB0", Offset = "0x10A6CB0", VA = "0x10A6CB0")]
		public SettingsMenu()
		{
		}
	}
	[Token(Token = "0x20002C0")]
	public class ShadingButtons : UIBehaviour, UiMaster.IUiSetup
	{
		[Token(Token = "0x20002C1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F0FC4", Offset = "0x6F0FC4")]
		private sealed class <>c__DisplayClass15_0
		{
			[Token(Token = "0x400118C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform child;

			[Token(Token = "0x400118D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector3 minScale;

			[Token(Token = "0x400118E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public Vector3 maxScale;

			[Token(Token = "0x400118F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Graphic graphic;

			[Token(Token = "0x6001488")]
			[Address(RVA = "0x92E6AC", Offset = "0x92E6AC", VA = "0x92E6AC")]
			public <>c__DisplayClass15_0()
			{
			}

			[Token(Token = "0x6001489")]
			[Address(RVA = "0x92E6B4", Offset = "0x92E6B4", VA = "0x92E6B4")]
			internal void <SubscribeButton>b__0(float x)
			{
			}
		}

		[Token(Token = "0x400117E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private UiMaster master;

		[Token(Token = "0x400117F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private RectTransform selector;

		[Token(Token = "0x4001180")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private BaseButton textureButton;

		[Token(Token = "0x4001181")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private BaseButton litButton;

		[Token(Token = "0x4001182")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private BaseButton lightButton;

		[Token(Token = "0x4001183")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private BaseButton stackButton;

		[Token(Token = "0x4001184")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private UpdateState texState;

		[Token(Token = "0x4001185")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private UpdateState litState;

		[Token(Token = "0x4001186")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private UpdateState lightState;

		[Token(Token = "0x4001187")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private UpdateState stackState;

		[Token(Token = "0x4001188")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Vector4 shadingCurrent;

		[Token(Token = "0x4001189")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private Vector4 shadingTarget;

		[Token(Token = "0x400118A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private bool isUpdating;

		[Token(Token = "0x400118B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public ShadingButtons otherShadingButtons;

		[Token(Token = "0x6001473")]
		[Address(RVA = "0x10A6E30", Offset = "0x10A6E30", VA = "0x10A6E30", Slot = "17")]
		private void Placemaker.Ui.UiMaster.IUiSetup.OnStart(UiMaster master)
		{
		}

		[Token(Token = "0x6001474")]
		[Address(RVA = "0x10A6E38", Offset = "0x10A6E38", VA = "0x10A6E38")]
		private void SubscribeButton(BaseButton button, UpdateState updateState)
		{
		}

		[Token(Token = "0x6001475")]
		[Address(RVA = "0x10A6F74", Offset = "0x10A6F74", VA = "0x10A6F74", Slot = "18")]
		private void Placemaker.Ui.UiMaster.IUiSetup.OnSetup(UiMaster master)
		{
		}

		[Token(Token = "0x6001476")]
		[Address(RVA = "0x10A72AC", Offset = "0x10A72AC", VA = "0x10A72AC")]
		public void Button_Texture()
		{
		}

		[Token(Token = "0x6001477")]
		[Address(RVA = "0x10A72E8", Offset = "0x10A72E8", VA = "0x10A72E8")]
		public void Button_TextureByOther()
		{
		}

		[Token(Token = "0x6001478")]
		[Address(RVA = "0x10A7308", Offset = "0x10A7308", VA = "0x10A7308")]
		public void Button_Lit()
		{
		}

		[Token(Token = "0x6001479")]
		[Address(RVA = "0x10A7344", Offset = "0x10A7344", VA = "0x10A7344")]
		public void Button_LitByOther()
		{
		}

		[Token(Token = "0x600147A")]
		[Address(RVA = "0x10A7364", Offset = "0x10A7364", VA = "0x10A7364")]
		public void Button_Light()
		{
		}

		[Token(Token = "0x600147B")]
		[Address(RVA = "0x10A73A0", Offset = "0x10A73A0", VA = "0x10A73A0")]
		public void Button_LightByOther()
		{
		}

		[Token(Token = "0x600147C")]
		[Address(RVA = "0x10A73C0", Offset = "0x10A73C0", VA = "0x10A73C0")]
		public void Button_Stack()
		{
		}

		[Token(Token = "0x600147D")]
		[Address(RVA = "0x10A73FC", Offset = "0x10A73FC", VA = "0x10A73FC")]
		public void Button_StackByOther()
		{
		}

		[Token(Token = "0x600147E")]
		[Address(RVA = "0x10A741C", Offset = "0x10A741C", VA = "0x10A741C")]
		public void OnUpdate()
		{
		}

		[Token(Token = "0x600147F")]
		[Address(RVA = "0x10A763C", Offset = "0x10A763C", VA = "0x10A763C")]
		public void SetShadingTarget(float tex, float light, float stack)
		{
		}

		[Token(Token = "0x6001480")]
		[Address(RVA = "0x10A77DC", Offset = "0x10A77DC", VA = "0x10A77DC")]
		private void StepNavigateHorizontal(Vector2 dir)
		{
		}

		[Token(Token = "0x6001481")]
		[Address(RVA = "0x10A77E0", Offset = "0x10A77E0", VA = "0x10A77E0")]
		public ShadingButtons()
		{
		}

		[Token(Token = "0x6001482")]
		[Address(RVA = "0x10A78A4", Offset = "0x10A78A4", VA = "0x10A78A4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FCBB4", Offset = "0x6FCBB4")]
		private void <Placemaker.Ui.UiMaster.IUiSetup.OnSetup>b__16_0(float x)
		{
		}

		[Token(Token = "0x6001483")]
		[Address(RVA = "0x10A7928", Offset = "0x10A7928", VA = "0x10A7928")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FCBC4", Offset = "0x6FCBC4")]
		private void <Placemaker.Ui.UiMaster.IUiSetup.OnSetup>b__16_1(float x)
		{
		}

		[Token(Token = "0x6001484")]
		[Address(RVA = "0x10A79AC", Offset = "0x10A79AC", VA = "0x10A79AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FCBD4", Offset = "0x6FCBD4")]
		private void <Placemaker.Ui.UiMaster.IUiSetup.OnSetup>b__16_2(float x)
		{
		}

		[Token(Token = "0x6001485")]
		[Address(RVA = "0x10A7A30", Offset = "0x10A7A30", VA = "0x10A7A30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FCBE4", Offset = "0x6FCBE4")]
		private void <Placemaker.Ui.UiMaster.IUiSetup.OnSetup>b__16_3(float x)
		{
		}

		[Token(Token = "0x6001486")]
		[Address(RVA = "0x10A7AB4", Offset = "0x10A7AB4", VA = "0x10A7AB4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FCBF4", Offset = "0x6FCBF4")]
		private void <Placemaker.Ui.UiMaster.IUiSetup.OnSetup>b__16_4(int step, float axis)
		{
		}

		[Token(Token = "0x6001487")]
		[Address(RVA = "0x10A7BA0", Offset = "0x10A7BA0", VA = "0x10A7BA0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FCC04", Offset = "0x6FCC04")]
		private void <Placemaker.Ui.UiMaster.IUiSetup.OnSetup>b__16_5()
		{
		}
	}
	[Token(Token = "0x20002C2")]
	public class SideMenu : UIBehaviour, UiMaster.IUiSetup
	{
		[Token(Token = "0x20002C3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F0FD4", Offset = "0x6F0FD4")]
		private sealed class <>c__DisplayClass17_0
		{
			[Token(Token = "0x40011A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SideMenu <>4__this;

			[Token(Token = "0x40011A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public UiMaster master;

			[Token(Token = "0x40011A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public System.Action openStateFunc;

			[Token(Token = "0x40011A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public CanvasGroup rootCanvasGroup;

			[Token(Token = "0x6001497")]
			[Address(RVA = "0x92E850", Offset = "0x92E850", VA = "0x92E850")]
			public <>c__DisplayClass17_0()
			{
			}

			[Token(Token = "0x6001498")]
			[Address(RVA = "0x92E858", Offset = "0x92E858", VA = "0x92E858")]
			internal void <Placemaker.Ui.UiMaster.IUiSetup.OnSetup>b__0()
			{
			}

			[Token(Token = "0x6001499")]
			[Address(RVA = "0x92EB4C", Offset = "0x92EB4C", VA = "0x92EB4C")]
			internal void <Placemaker.Ui.UiMaster.IUiSetup.OnSetup>b__1(float x)
			{
			}

			[Token(Token = "0x600149A")]
			[Address(RVA = "0x92EB68", Offset = "0x92EB68", VA = "0x92EB68")]
			internal void <Placemaker.Ui.UiMaster.IUiSetup.OnSetup>b__7(float x)
			{
			}

			[Token(Token = "0x600149B")]
			[Address(RVA = "0x92EC3C", Offset = "0x92EC3C", VA = "0x92EC3C")]
			internal void <Placemaker.Ui.UiMaster.IUiSetup.OnSetup>b__2(float x)
			{
			}

			[Token(Token = "0x600149C")]
			[Address(RVA = "0x92EF48", Offset = "0x92EF48", VA = "0x92EF48")]
			internal void <Placemaker.Ui.UiMaster.IUiSetup.OnSetup>b__3(float x)
			{
			}

			[Token(Token = "0x600149D")]
			[Address(RVA = "0x92EFB4", Offset = "0x92EFB4", VA = "0x92EFB4")]
			internal void <Placemaker.Ui.UiMaster.IUiSetup.OnSetup>b__4(float x)
			{
			}

			[Token(Token = "0x600149E")]
			[Address(RVA = "0x92EFDC", Offset = "0x92EFDC", VA = "0x92EFDC")]
			internal void <Placemaker.Ui.UiMaster.IUiSetup.OnSetup>b__5()
			{
			}

			[Token(Token = "0x600149F")]
			[Address(RVA = "0x92F044", Offset = "0x92F044", VA = "0x92F044")]
			internal void <Placemaker.Ui.UiMaster.IUiSetup.OnSetup>b__6(float x)
			{
			}
		}

		[Token(Token = "0x20002C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F0FE4", Offset = "0x6F0FE4")]
		private sealed class <>c__DisplayClass22_0
		{
			[Token(Token = "0x40011A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SideMenu <>4__this;

			[Token(Token = "0x40011A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public BaseButton button;

			[Token(Token = "0x60014A0")]
			[Address(RVA = "0x92F130", Offset = "0x92F130", VA = "0x92F130")]
			public <>c__DisplayClass22_0()
			{
			}

			[Token(Token = "0x60014A1")]
			[Address(RVA = "0x92F138", Offset = "0x92F138", VA = "0x92F138")]
			internal void <Button_Quit_Full>b__0()
			{
			}
		}

		[Token(Token = "0x4001190")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private UiMaster master;

		[Token(Token = "0x4001191")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		public RectTransform sideTransform;

		[Token(Token = "0x4001192")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		public RectTransform iconNotch;

		[Token(Token = "0x4001193")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		public UpdateState openState;

		[Token(Token = "0x4001194")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private UpdateState sideButtonState;

		[Token(Token = "0x4001195")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Graphic sideButtonOpen;

		[Token(Token = "0x4001196")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Graphic sideButtonClose;

		[Token(Token = "0x4001197")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private CanvasGroup tabCanvasGroup;

		[Token(Token = "0x4001198")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private CanvasGroup sideCanvasGroup;

		[Token(Token = "0x4001199")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private AudioClip openClip;

		[Token(Token = "0x400119A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private AudioClip closeClip;

		[Token(Token = "0x400119B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private ButtonAudio_Clip openCloseButtonAudio;

		[Token(Token = "0x400119C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private RectTransform trimAndIconContainer;

		[Token(Token = "0x400119D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public SimpleMessage newSaveGameMessage;

		[Token(Token = "0x400119E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float iconNotchDefaultSize;

		[Token(Token = "0x400119F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public SideMenuNavigator navigator;

		[Token(Token = "0x600148A")]
		[Address(RVA = "0x10A9418", Offset = "0x10A9418", VA = "0x10A9418", Slot = "17")]
		private void Placemaker.Ui.UiMaster.IUiSetup.OnStart(UiMaster master)
		{
		}

		[Token(Token = "0x600148B")]
		[Address(RVA = "0x10A944C", Offset = "0x10A944C", VA = "0x10A944C", Slot = "18")]
		private void Placemaker.Ui.UiMaster.IUiSetup.OnSetup(UiMaster master)
		{
		}

		[Token(Token = "0x600148C")]
		[Address(RVA = "0x10A98A0", Offset = "0x10A98A0", VA = "0x10A98A0")]
		public void Button_ExportObj(BaseButton button)
		{
		}

		[Token(Token = "0x600148D")]
		[Address(RVA = "0x10A98D0", Offset = "0x10A98D0", VA = "0x10A98D0")]
		public void Button_Load()
		{
		}

		[Token(Token = "0x600148E")]
		[Address(RVA = "0x10A9908", Offset = "0x10A9908", VA = "0x10A9908")]
		public void Button_New(BaseButton button)
		{
		}

		[Token(Token = "0x600148F")]
		[Address(RVA = "0x10A992C", Offset = "0x10A992C", VA = "0x10A992C")]
		public void Button_Quit_Down()
		{
		}

		[Token(Token = "0x6001490")]
		[Address(RVA = "0x10A9930", Offset = "0x10A9930", VA = "0x10A9930")]
		public void Button_Quit_Full(BaseButton button)
		{
		}

		[Token(Token = "0x6001491")]
		[Address(RVA = "0x10A9AB4", Offset = "0x10A9AB4", VA = "0x10A9AB4")]
		public void Button_SideButton()
		{
		}

		[Token(Token = "0x6001492")]
		[Address(RVA = "0x10A9AFC", Offset = "0x10A9AFC", VA = "0x10A9AFC")]
		public void Toggle()
		{
		}

		[Token(Token = "0x6001493")]
		[Address(RVA = "0x109D824", Offset = "0x109D824", VA = "0x109D824")]
		public void Open()
		{
		}

		[Token(Token = "0x6001494")]
		[Address(RVA = "0x10A6C14", Offset = "0x10A6C14", VA = "0x10A6C14")]
		public void Close()
		{
		}

		[Token(Token = "0x6001495")]
		[Address(RVA = "0x10A9B3C", Offset = "0x10A9B3C", VA = "0x10A9B3C")]
		public void RemoveLayouts(bool isBuild)
		{
		}

		[Token(Token = "0x6001496")]
		[Address(RVA = "0x10A9B40", Offset = "0x10A9B40", VA = "0x10A9B40")]
		public SideMenu()
		{
		}
	}
	[Token(Token = "0x20002C5")]
	public class SideMenuNavigator : UIBehaviour, UiMaster.IUiSetup
	{
		[Token(Token = "0x20002C6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F0FF4", Offset = "0x6F0FF4")]
		private sealed class <>c__DisplayClass11_0
		{
			[Token(Token = "0x40011B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SideMenuNavigator <>4__this;

			[Token(Token = "0x40011B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float startArrowX;

			[Token(Token = "0x60014AE")]
			[Address(RVA = "0x92F1A8", Offset = "0x92F1A8", VA = "0x92F1A8")]
			public <>c__DisplayClass11_0()
			{
			}

			[Token(Token = "0x60014AF")]
			[Address(RVA = "0x92F1B0", Offset = "0x92F1B0", VA = "0x92F1B0")]
			internal void <Placemaker.Ui.UiMaster.IUiSetup.OnSetup>b__0(float x)
			{
			}

			[Token(Token = "0x60014B0")]
			[Address(RVA = "0x92F26C", Offset = "0x92F26C", VA = "0x92F26C")]
			internal void <Placemaker.Ui.UiMaster.IUiSetup.OnSetup>b__1(UiMaster.MenuState oldState, UiMaster.MenuState newState)
			{
			}

			[Token(Token = "0x60014B1")]
			[Address(RVA = "0x92F2A4", Offset = "0x92F2A4", VA = "0x92F2A4")]
			internal void <Placemaker.Ui.UiMaster.IUiSetup.OnSetup>b__2(float x)
			{
			}

			[Token(Token = "0x60014B2")]
			[Address(RVA = "0x92F338", Offset = "0x92F338", VA = "0x92F338")]
			internal void <Placemaker.Ui.UiMaster.IUiSetup.OnSetup>b__3(float x)
			{
			}
		}

		[Token(Token = "0x40011A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public UiMaster master;

		[Token(Token = "0x40011A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private NavigableButton selectedButton;

		[Token(Token = "0x40011A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private RectTransform selectorTransform;

		[Token(Token = "0x40011A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private List<NavigableButton> navigableButtons;

		[Token(Token = "0x40011AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public UpdateState targetArrowY;

		[Token(Token = "0x40011AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public UpdateState targetArrowX;

		[Token(Token = "0x40011AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public UpdateState openState;

		[Token(Token = "0x40011AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private BetterScrollRect scrollRect;

		[Token(Token = "0x40011AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private RapidButton rapidY;

		[Token(Token = "0x40011AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private RapidButton rapidX;

		[Token(Token = "0x40011B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private bool isPanning;

		[Token(Token = "0x60014A2")]
		[Address(RVA = "0x10A9BCC", Offset = "0x10A9BCC", VA = "0x10A9BCC", Slot = "18")]
		private void Placemaker.Ui.UiMaster.IUiSetup.OnSetup(UiMaster master)
		{
		}

		[Token(Token = "0x60014A3")]
		[Address(RVA = "0x10AA258", Offset = "0x10AA258", VA = "0x10AA258", Slot = "17")]
		private void Placemaker.Ui.UiMaster.IUiSetup.OnStart(UiMaster master)
		{
		}

		[Token(Token = "0x60014A4")]
		[Address(RVA = "0x10AA268", Offset = "0x10AA268", VA = "0x10AA268")]
		private void SelectButton(NavigableButton button)
		{
		}

		[Token(Token = "0x60014A5")]
		[Address(RVA = "0x10AA374", Offset = "0x10AA374", VA = "0x10AA374")]
		private void Update()
		{
		}

		[Token(Token = "0x60014A6")]
		[Address(RVA = "0x10AA638", Offset = "0x10AA638", VA = "0x10AA638")]
		private void UpdateScroll()
		{
		}

		[Token(Token = "0x60014A7")]
		[Address(RVA = "0x10AA398", Offset = "0x10AA398", VA = "0x10AA398")]
		private void UpdateControls()
		{
		}

		[Token(Token = "0x60014A8")]
		[Address(RVA = "0x10AA260", Offset = "0x10AA260", VA = "0x10AA260")]
		private void SetTargetsToButton()
		{
		}

		[Token(Token = "0x60014A9")]
		[Address(RVA = "0x10AA7E8", Offset = "0x10AA7E8", VA = "0x10AA7E8")]
		private void SetTargetsToButton(NavigableButton button)
		{
		}

		[Token(Token = "0x60014AA")]
		[Address(RVA = "0x10AA9D4", Offset = "0x10AA9D4", VA = "0x10AA9D4", Slot = "10")]
		protected override void OnRectTransformDimensionsChange()
		{
		}

		[Token(Token = "0x60014AB")]
		[Address(RVA = "0x10AA1E0", Offset = "0x10AA1E0", VA = "0x10AA1E0")]
		public void ResetNavigation()
		{
		}

		[Token(Token = "0x60014AC")]
		[Address(RVA = "0x10AAA10", Offset = "0x10AAA10", VA = "0x10AAA10")]
		public SideMenuNavigator()
		{
		}

		[Token(Token = "0x60014AD")]
		[Address(RVA = "0x10AA6D4", Offset = "0x10AA6D4", VA = "0x10AA6D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FCC14", Offset = "0x6FCC14")]
		private void <UpdateControls>g__Move|16_0(int delta)
		{
		}
	}
	[Token(Token = "0x20002C7")]
	public class SimpleMessage : UIBehaviour, UiMaster.IUiSetup
	{
		[Token(Token = "0x40011B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TMP_Text text;

		[Token(Token = "0x40011B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private UpdateState openState;

		[Token(Token = "0x40011B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float timer;

		[Token(Token = "0x40011B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private Vector3 startPos;

		[Token(Token = "0x40011B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Color defaultColor;

		[Token(Token = "0x40011B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private List<CornerImage> backgrounds;

		[Token(Token = "0x60014B3")]
		[Address(RVA = "0xAE4230", Offset = "0xAE4230", VA = "0xAE4230", Slot = "17")]
		private void Placemaker.Ui.UiMaster.IUiSetup.OnStart(UiMaster master)
		{
		}

		[Token(Token = "0x60014B4")]
		[Address(RVA = "0xAE42CC", Offset = "0xAE42CC", VA = "0xAE42CC", Slot = "18")]
		private void Placemaker.Ui.UiMaster.IUiSetup.OnSetup(UiMaster master)
		{
		}

		[Token(Token = "0x60014B5")]
		[Address(RVA = "0xAE4370", Offset = "0xAE4370", VA = "0xAE4370")]
		public void SetParam(string param, string value)
		{
		}

		[Token(Token = "0x60014B6")]
		[Address(RVA = "0xAE4444", Offset = "0xAE4444", VA = "0xAE4444")]
		private void SetBackgroundColor(Color color)
		{
		}

		[Token(Token = "0x60014B7")]
		[Address(RVA = "0xAE4594", Offset = "0xAE4594", VA = "0xAE4594")]
		public void ShowMessage(string message, float time = 2f)
		{
		}

		[Token(Token = "0x60014B8")]
		[Address(RVA = "0xAE46B0", Offset = "0xAE46B0", VA = "0xAE46B0")]
		public void ShowTerm(string message, float time = 2f)
		{
		}

		[Token(Token = "0x60014B9")]
		[Address(RVA = "0xAE483C", Offset = "0xAE483C", VA = "0xAE483C")]
		public void ShowTerm(string message, Color color, float time = 2f)
		{
		}

		[Token(Token = "0x60014BA")]
		[Address(RVA = "0xAE49F0", Offset = "0xAE49F0", VA = "0xAE49F0", Slot = "5")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x60014BB")]
		[Address(RVA = "0xAE49F8", Offset = "0xAE49F8", VA = "0xAE49F8")]
		public void Update()
		{
		}

		[Token(Token = "0x60014BC")]
		[Address(RVA = "0xAE4ACC", Offset = "0xAE4ACC", VA = "0xAE4ACC")]
		public SimpleMessage()
		{
		}
	}
	[Token(Token = "0x20002C8")]
	public class Slider : UIBehaviour, IPointerDownHandler, IEventSystemHandler, IPointerUpHandler, IPointerEnterHandler, IPointerExitHandler, IPointerClickHandler, IDragHandler, IBeginDragHandler, IEndDragHandler, UiMaster.IUiSetup
	{
		[Token(Token = "0x20002C9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F1004", Offset = "0x6F1004")]
		private sealed class <>c__DisplayClass24_0
		{
			[Token(Token = "0x40011C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Slider <>4__this;

			[Token(Token = "0x40011C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector3 scale;

			[Token(Token = "0x60014CC")]
			[Address(RVA = "0x107BF98", Offset = "0x107BF98", VA = "0x107BF98")]
			public <>c__DisplayClass24_0()
			{
			}

			[Token(Token = "0x60014CD")]
			[Address(RVA = "0x107BFA0", Offset = "0x107BFA0", VA = "0x107BFA0")]
			internal void <Placemaker.Ui.UiMaster.IUiSetup.OnSetup>b__0(float x)
			{
			}
		}

		[Token(Token = "0x40011B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public UnityEvent_Float onValueChange;

		[Token(Token = "0x40011BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool pointerInside;

		[Token(Token = "0x40011BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool buttonDown;

		[Token(Token = "0x40011BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
		public bool dragging;

		[Token(Token = "0x40011BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public RectTransform sliderContainer;

		[Token(Token = "0x40011BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public RectTransform sliderHandle;

		[Token(Token = "0x40011BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public RectTransform sliderBackground0;

		[Token(Token = "0x40011C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public RectTransform sliderBackground1;

		[Token(Token = "0x40011C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float oldValue;

		[Token(Token = "0x40011C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float newValue;

		[Token(Token = "0x40011C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private UpdateState pressedState;

		[Token(Token = "0x60014BD")]
		[Address(RVA = "0xAE588C", Offset = "0xAE588C", VA = "0xAE588C", Slot = "17")]
		private void UnityEngine.EventSystems.IPointerDownHandler.OnPointerDown(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60014BE")]
		[Address(RVA = "0xAE58DC", Offset = "0xAE58DC", VA = "0xAE58DC", Slot = "18")]
		private void UnityEngine.EventSystems.IPointerUpHandler.OnPointerUp(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60014BF")]
		[Address(RVA = "0xAE5960", Offset = "0xAE5960", VA = "0xAE5960", Slot = "21")]
		private void UnityEngine.EventSystems.IPointerClickHandler.OnPointerClick(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60014C0")]
		[Address(RVA = "0xAE5C70", Offset = "0xAE5C70", VA = "0xAE5C70", Slot = "19")]
		private void UnityEngine.EventSystems.IPointerEnterHandler.OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60014C1")]
		[Address(RVA = "0xAE5C7C", Offset = "0xAE5C7C", VA = "0xAE5C7C", Slot = "20")]
		private void UnityEngine.EventSystems.IPointerExitHandler.OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60014C2")]
		[Address(RVA = "0xAE5C84", Offset = "0xAE5C84", VA = "0xAE5C84", Slot = "22")]
		private void UnityEngine.EventSystems.IDragHandler.OnDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60014C3")]
		[Address(RVA = "0xAE5F30", Offset = "0xAE5F30", VA = "0xAE5F30", Slot = "23")]
		private void UnityEngine.EventSystems.IBeginDragHandler.OnBeginDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60014C4")]
		[Address(RVA = "0xAE5F3C", Offset = "0xAE5F3C", VA = "0xAE5F3C", Slot = "24")]
		private void UnityEngine.EventSystems.IEndDragHandler.OnEndDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60014C5")]
		[Address(RVA = "0xAE5F6C", Offset = "0xAE5F6C", VA = "0xAE5F6C")]
		public float GetValue()
		{
			return default(float);
		}

		[Token(Token = "0x60014C6")]
		[Address(RVA = "0xAE5F74", Offset = "0xAE5F74", VA = "0xAE5F74")]
		public void SetValue(float value)
		{
		}

		[Token(Token = "0x60014C7")]
		[Address(RVA = "0xAE61B0", Offset = "0xAE61B0", VA = "0xAE61B0")]
		public void SetValueManual(float value)
		{
		}

		[Token(Token = "0x60014C8")]
		[Address(RVA = "0xAE63C4", Offset = "0xAE63C4", VA = "0xAE63C4", Slot = "10")]
		protected override void OnRectTransformDimensionsChange()
		{
		}

		[Token(Token = "0x60014C9")]
		[Address(RVA = "0xAE6408", Offset = "0xAE6408", VA = "0xAE6408", Slot = "25")]
		private void Placemaker.Ui.UiMaster.IUiSetup.OnStart(UiMaster master)
		{
		}

		[Token(Token = "0x60014CA")]
		[Address(RVA = "0xAE640C", Offset = "0xAE640C", VA = "0xAE640C", Slot = "26")]
		private void Placemaker.Ui.UiMaster.IUiSetup.OnSetup(UiMaster master)
		{
		}

		[Token(Token = "0x60014CB")]
		[Address(RVA = "0xAE6538", Offset = "0xAE6538", VA = "0xAE6538")]
		public Slider()
		{
		}
	}
	[Token(Token = "0x20002CA")]
	public class SoundButton : UIBehaviour, UiMaster.IUiSetup
	{
		[Token(Token = "0x20002CB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F1014", Offset = "0x6F1014")]
		private sealed class <>c__DisplayClass10_0
		{
			[Token(Token = "0x40011CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SoundButton <>4__this;

			[Token(Token = "0x40011D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public DistanceFieldSettings bg0;

			[Token(Token = "0x40011D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public DistanceFieldSettings bg1;

			[Token(Token = "0x40011D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public UiMaster master;

			[Token(Token = "0x60014D5")]
			[Address(RVA = "0x107C044", Offset = "0x107C044", VA = "0x107C044")]
			public <>c__DisplayClass10_0()
			{
			}

			[Token(Token = "0x60014D6")]
			[Address(RVA = "0x107C04C", Offset = "0x107C04C", VA = "0x107C04C")]
			internal void <Placemaker.Ui.UiMaster.IUiSetup.OnSetup>b__0(float x)
			{
			}

			[Token(Token = "0x60014D7")]
			[Address(RVA = "0x107C314", Offset = "0x107C314", VA = "0x107C314")]
			internal void <Placemaker.Ui.UiMaster.IUiSetup.OnSetup>b__1(int step, float axis)
			{
			}

			[Token(Token = "0x60014D8")]
			[Address(RVA = "0x107C380", Offset = "0x107C380", VA = "0x107C380")]
			internal void <Placemaker.Ui.UiMaster.IUiSetup.OnSetup>b__2()
			{
			}

			[Token(Token = "0x60014D9")]
			[Address(RVA = "0x107C39C", Offset = "0x107C39C", VA = "0x107C39C")]
			internal void <Placemaker.Ui.UiMaster.IUiSetup.OnSetup>b__3()
			{
			}
		}

		[Token(Token = "0x40011C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private UiMaster master;

		[Token(Token = "0x40011C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private DistanceFieldSettings distanceField0;

		[Token(Token = "0x40011C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private DistanceFieldSettings distanceField1;

		[Token(Token = "0x40011C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private UpdateState soundState;

		[Token(Token = "0x40011CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public SoundButton otherSoundButton;

		[Token(Token = "0x40011CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Slider slider;

		[Token(Token = "0x40011CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public AudioMixer mixer;

		[Token(Token = "0x40011CD")]
		private const float floatToByte = 127f;

		[Token(Token = "0x40011CE")]
		private const float byteToFloat = 1f / 127f;

		[Token(Token = "0x60014CE")]
		[Address(RVA = "0xAE65A8", Offset = "0xAE65A8", VA = "0xAE65A8", Slot = "17")]
		private void Placemaker.Ui.UiMaster.IUiSetup.OnStart(UiMaster master)
		{
		}

		[Token(Token = "0x60014CF")]
		[Address(RVA = "0xAE65B0", Offset = "0xAE65B0", VA = "0xAE65B0", Slot = "18")]
		private void Placemaker.Ui.UiMaster.IUiSetup.OnSetup(UiMaster master)
		{
		}

		[Token(Token = "0x60014D0")]
		[Address(RVA = "0xAE6974", Offset = "0xAE6974", VA = "0xAE6974")]
		public void Button_Toggle()
		{
		}

		[Token(Token = "0x60014D1")]
		[Address(RVA = "0xAE6A14", Offset = "0xAE6A14", VA = "0xAE6A14")]
		public void Button_ToggledByOther()
		{
		}

		[Token(Token = "0x60014D2")]
		[Address(RVA = "0xAE6B28", Offset = "0xAE6B28", VA = "0xAE6B28")]
		public void Button_Slider(float value)
		{
		}

		[Token(Token = "0x60014D3")]
		[Address(RVA = "0xAE6A54", Offset = "0xAE6A54", VA = "0xAE6A54")]
		public void UpdateVolume()
		{
		}

		[Token(Token = "0x60014D4")]
		[Address(RVA = "0xAE6C18", Offset = "0xAE6C18", VA = "0xAE6C18")]
		public SoundButton()
		{
		}
	}
	[Token(Token = "0x20002CC")]
	public class StandardButton : MonoBehaviour, UiMaster.IUiSetup
	{
		[Token(Token = "0x20002CD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F1024", Offset = "0x6F1024")]
		private sealed class <>c__DisplayClass3_0
		{
			[Token(Token = "0x40011D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public StandardButton <>4__this;

			[Token(Token = "0x40011D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public BaseButton baseButton;

			[Token(Token = "0x60014DD")]
			[Address(RVA = "0x107C590", Offset = "0x107C590", VA = "0x107C590")]
			public <>c__DisplayClass3_0()
			{
			}

			[Token(Token = "0x60014DE")]
			[Address(RVA = "0x107C598", Offset = "0x107C598", VA = "0x107C598")]
			internal void <Placemaker.Ui.UiMaster.IUiSetup.OnSetup>b__0(float x)
			{
			}

			[Token(Token = "0x60014DF")]
			[Address(RVA = "0x107C630", Offset = "0x107C630", VA = "0x107C630")]
			internal void <Placemaker.Ui.UiMaster.IUiSetup.OnSetup>b__1(BaseButton.State state)
			{
			}

			[Token(Token = "0x60014E0")]
			[Address(RVA = "0x107C790", Offset = "0x107C790", VA = "0x107C790")]
			internal void <Placemaker.Ui.UiMaster.IUiSetup.OnSetup>b__2()
			{
			}
		}

		[Token(Token = "0x40011D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UpdateState scaleZ;

		[Token(Token = "0x40011D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UpdateState scaleXY;

		[Token(Token = "0x60014DA")]
		[Address(RVA = "0xAE8A10", Offset = "0xAE8A10", VA = "0xAE8A10", Slot = "4")]
		private void Placemaker.Ui.UiMaster.IUiSetup.OnStart(UiMaster master)
		{
		}

		[Token(Token = "0x60014DB")]
		[Address(RVA = "0xAE8A14", Offset = "0xAE8A14", VA = "0xAE8A14", Slot = "5")]
		private void Placemaker.Ui.UiMaster.IUiSetup.OnSetup(UiMaster master)
		{
		}

		[Token(Token = "0x60014DC")]
		[Address(RVA = "0xAE8CEC", Offset = "0xAE8CEC", VA = "0xAE8CEC")]
		public StandardButton()
		{
		}
	}
	[Token(Token = "0x20002CE")]
	public class SunButton : UIBehaviour, UiMaster.IUiSetup
	{
		[Token(Token = "0x20002CF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F1034", Offset = "0x6F1034")]
		private sealed class <>c__DisplayClass23_0
		{
			[Token(Token = "0x40011ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SunButton <>4__this;

			[Token(Token = "0x40011EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public CanvasGroup circle0Canvas;

			[Token(Token = "0x40011EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CanvasGroup circle1Canvas;

			[Token(Token = "0x60014EF")]
			[Address(RVA = "0x107C7EC", Offset = "0x107C7EC", VA = "0x107C7EC")]
			public <>c__DisplayClass23_0()
			{
			}

			[Token(Token = "0x60014F0")]
			[Address(RVA = "0x107C7F4", Offset = "0x107C7F4", VA = "0x107C7F4")]
			internal void <Placemaker.Ui.UiMaster.IUiSetup.OnSetup>b__0(float x)
			{
			}

			[Token(Token = "0x60014F1")]
			[Address(RVA = "0x107C898", Offset = "0x107C898", VA = "0x107C898")]
			internal void <Placemaker.Ui.UiMaster.IUiSetup.OnSetup>b__1(float x)
			{
			}
		}

		[Token(Token = "0x40011D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public UiMaster master;

		[Token(Token = "0x40011D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private RectTransform handleX;

		[Token(Token = "0x40011D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private RectTransform handleX1;

		[Token(Token = "0x40011DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private RectTransform handleY;

		[Token(Token = "0x40011DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private RectTransform handleBoth;

		[Token(Token = "0x40011DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private RectTransform handleBoth1;

		[Token(Token = "0x40011DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private RectTransform circle0;

		[Token(Token = "0x40011DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private RectTransform circle1;

		[Token(Token = "0x40011DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private RectTransform horizontalLine;

		[Token(Token = "0x40011E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private RectTransform bothContainer;

		[Token(Token = "0x40011E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private SunSlider sliderX;

		[Token(Token = "0x40011E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private SunSlider sliderY;

		[Token(Token = "0x40011E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		public SunSlider sliderBoth;

		[Token(Token = "0x40011E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private Vector2 current;

		[Token(Token = "0x40011E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private Vector2 start;

		[Token(Token = "0x40011E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private UpdateState handle0scale;

		[Token(Token = "0x40011E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private UpdateState handle1scale;

		[Token(Token = "0x40011E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private UpdateState sunX;

		[Token(Token = "0x40011E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private UpdateState sunY;

		[Token(Token = "0x40011EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private Gradient bulbColor;

		[Token(Token = "0x40011EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private SunSlider currentSlider;

		[Token(Token = "0x40011EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private float scale1;

		[Token(Token = "0x60014E1")]
		[Address(RVA = "0xAE92C4", Offset = "0xAE92C4", VA = "0xAE92C4", Slot = "17")]
		private void Placemaker.Ui.UiMaster.IUiSetup.OnStart(UiMaster master)
		{
		}

		[Token(Token = "0x60014E2")]
		[Address(RVA = "0xAE93C8", Offset = "0xAE93C8", VA = "0xAE93C8", Slot = "18")]
		private void Placemaker.Ui.UiMaster.IUiSetup.OnSetup(UiMaster master)
		{
		}

		[Token(Token = "0x60014E3")]
		[Address(RVA = "0xAE9594", Offset = "0xAE9594", VA = "0xAE9594")]
		public void OnClick(PointerEventData eventData, SunSlider slider)
		{
		}

		[Token(Token = "0x60014E4")]
		[Address(RVA = "0xAE9774", Offset = "0xAE9774", VA = "0xAE9774")]
		public void OnBeginDrag(PointerEventData eventData, SunSlider slider)
		{
		}

		[Token(Token = "0x60014E5")]
		[Address(RVA = "0xAE9904", Offset = "0xAE9904", VA = "0xAE9904")]
		public void OnDrag(PointerEventData eventData, SunSlider slider)
		{
		}

		[Token(Token = "0x60014E6")]
		[Address(RVA = "0xAE9B60", Offset = "0xAE9B60", VA = "0xAE9B60")]
		private void PushValues()
		{
		}

		[Token(Token = "0x60014E7")]
		[Address(RVA = "0xAE9B98", Offset = "0xAE9B98", VA = "0xAE9B98")]
		private void PushBulbColors()
		{
		}

		[Token(Token = "0x60014E8")]
		[Address(RVA = "0xAE9C80", Offset = "0xAE9C80", VA = "0xAE9C80")]
		public void SetGamepad(bool isEnabled)
		{
		}

		[Token(Token = "0x60014E9")]
		[Address(RVA = "0xAE9CA8", Offset = "0xAE9CA8", VA = "0xAE9CA8")]
		public void OnEndDrag(PointerEventData eventData, SunSlider slider)
		{
		}

		[Token(Token = "0x60014EA")]
		[Address(RVA = "0xAE9CFC", Offset = "0xAE9CFC", VA = "0xAE9CFC")]
		public void ImportSunValues()
		{
		}

		[Token(Token = "0x60014EB")]
		[Address(RVA = "0xAEA38C", Offset = "0xAEA38C", VA = "0xAEA38C")]
		private void Update()
		{
		}

		[Token(Token = "0x60014EC")]
		[Address(RVA = "0xAEA410", Offset = "0xAEA410", VA = "0xAEA410")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x6FCC24", Offset = "0x6FCC24")]
		private void ResetSun()
		{
		}

		[Token(Token = "0x60014ED")]
		[Address(RVA = "0xAEA44C", Offset = "0xAEA44C", VA = "0xAEA44C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x6FCC5C", Offset = "0x6FCC5C")]
		private void SetToNight()
		{
		}

		[Token(Token = "0x60014EE")]
		[Address(RVA = "0xAEA484", Offset = "0xAEA484", VA = "0xAEA484")]
		public SunButton()
		{
		}
	}
	[Token(Token = "0x20002D0")]
	public class SunButtonGamepad : UIBehaviour, UiMaster.IUiSetup
	{
		[Token(Token = "0x20002D1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F1044", Offset = "0x6F1044")]
		private sealed class <>c__DisplayClass7_0
		{
			[Token(Token = "0x40011F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SunButtonGamepad <>4__this;

			[Token(Token = "0x40011F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public SunButton sunButton;

			[Token(Token = "0x40011F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UiMaster master;

			[Token(Token = "0x60014F7")]
			[Address(RVA = "0x107C934", Offset = "0x107C934", VA = "0x107C934")]
			public <>c__DisplayClass7_0()
			{
			}

			[Token(Token = "0x60014F8")]
			[Address(RVA = "0x107C93C", Offset = "0x107C93C", VA = "0x107C93C")]
			internal void <Placemaker.Ui.UiMaster.IUiSetup.OnSetup>b__0(float x)
			{
			}

			[Token(Token = "0x60014F9")]
			[Address(RVA = "0x107CC6C", Offset = "0x107CC6C", VA = "0x107CC6C")]
			internal void <Placemaker.Ui.UiMaster.IUiSetup.OnSetup>b__1(float x)
			{
			}

			[Token(Token = "0x60014FA")]
			[Address(RVA = "0x107CD20", Offset = "0x107CD20", VA = "0x107CD20")]
			internal void <Placemaker.Ui.UiMaster.IUiSetup.OnSetup>b__3(int x, float y)
			{
			}

			[Token(Token = "0x60014FB")]
			[Address(RVA = "0x107CD58", Offset = "0x107CD58", VA = "0x107CD58")]
			internal void <Placemaker.Ui.UiMaster.IUiSetup.OnSetup>b__4()
			{
			}

			[Token(Token = "0x60014FC")]
			[Address(RVA = "0x107CD74", Offset = "0x107CD74", VA = "0x107CD74")]
			internal void <Placemaker.Ui.UiMaster.IUiSetup.OnSetup>b__2(UiMaster.MenuState oldState, UiMaster.MenuState newState)
			{
			}
		}

		[Token(Token = "0x40011F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public UiMaster master;

		[Token(Token = "0x40011F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private UpdateState focusedState;

		[Token(Token = "0x40011F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform sideMenuTransform;

		[Token(Token = "0x40011F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Transform translateTransform;

		[Token(Token = "0x40011F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Graphic selector;

		[Token(Token = "0x40011F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private AudioClip openClip;

		[Token(Token = "0x40011F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private AudioClip closeClip;

		[Token(Token = "0x60014F2")]
		[Address(RVA = "0xAEA53C", Offset = "0xAEA53C", VA = "0xAEA53C", Slot = "18")]
		private void Placemaker.Ui.UiMaster.IUiSetup.OnSetup(UiMaster master)
		{
		}

		[Token(Token = "0x60014F3")]
		[Address(RVA = "0xAEA878", Offset = "0xAEA878", VA = "0xAEA878", Slot = "17")]
		private void Placemaker.Ui.UiMaster.IUiSetup.OnStart(UiMaster master)
		{
		}

		[Token(Token = "0x60014F4")]
		[Address(RVA = "0xAEA87C", Offset = "0xAEA87C", VA = "0xAEA87C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x6FCC94", Offset = "0x6FCC94")]
		public void Toggle()
		{
		}

		[Token(Token = "0x60014F5")]
		[Address(RVA = "0xAEA8BC", Offset = "0xAEA8BC", VA = "0xAEA8BC")]
		private void Update()
		{
		}

		[Token(Token = "0x60014F6")]
		[Address(RVA = "0xAEAA98", Offset = "0xAEAA98", VA = "0xAEAA98")]
		public SunButtonGamepad()
		{
		}
	}
	[Token(Token = "0x20002D2")]
	public class SunSlider : UIBehaviour, UiMaster.IUiSetup, IPointerUpHandler, IEventSystemHandler, IPointerEnterHandler, IPointerExitHandler, IPointerClickHandler, IDragHandler, IBeginDragHandler, IEndDragHandler, IPointerDownHandler
	{
		[Token(Token = "0x40011FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private SunButton sunButton;

		[Token(Token = "0x40011FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x6F8B9C", Offset = "0x6F8B9C")]
		[SerializeField]
		private AudioClip buttonDownClip;

		[Token(Token = "0x40011FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AudioClip buttonUpClip;

		[Token(Token = "0x40011FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x6F8BE4", Offset = "0x6F8BE4")]
		[SerializeField]
		private Transform[] handlesToScale;

		[Token(Token = "0x40011FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public UpdateState scaleZ;

		[Token(Token = "0x40011FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public UpdateState scaleXY;

		[Token(Token = "0x4001200")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool hover;

		[Token(Token = "0x4001201")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		private bool pressed;

		[Token(Token = "0x60014FD")]
		[Address(RVA = "0xAEAAFC", Offset = "0xAEAAFC", VA = "0xAEAAFC", Slot = "17")]
		private void Placemaker.Ui.UiMaster.IUiSetup.OnStart(UiMaster master)
		{
		}

		[Token(Token = "0x60014FE")]
		[Address(RVA = "0xAEAB00", Offset = "0xAEAB00", VA = "0xAEAB00", Slot = "18")]
		private void Placemaker.Ui.UiMaster.IUiSetup.OnSetup(UiMaster master)
		{
		}

		[Token(Token = "0x60014FF")]
		[Address(RVA = "0xAEAC68", Offset = "0xAEAC68", VA = "0xAEAC68", Slot = "26")]
		private void UnityEngine.EventSystems.IPointerDownHandler.OnPointerDown(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001500")]
		[Address(RVA = "0xAEAD64", Offset = "0xAEAD64", VA = "0xAEAD64", Slot = "19")]
		private void UnityEngine.EventSystems.IPointerUpHandler.OnPointerUp(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001501")]
		[Address(RVA = "0xAEADC8", Offset = "0xAEADC8", VA = "0xAEADC8", Slot = "20")]
		private void UnityEngine.EventSystems.IPointerEnterHandler.OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001502")]
		[Address(RVA = "0xAEADCC", Offset = "0xAEADCC", VA = "0xAEADCC", Slot = "21")]
		private void UnityEngine.EventSystems.IPointerExitHandler.OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001503")]
		[Address(RVA = "0xAEACC4", Offset = "0xAEACC4", VA = "0xAEACC4")]
		private void UpdateAnim()
		{
		}

		[Token(Token = "0x6001504")]
		[Address(RVA = "0xAEADD0", Offset = "0xAEADD0", VA = "0xAEADD0", Slot = "22")]
		private void UnityEngine.EventSystems.IPointerClickHandler.OnPointerClick(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001505")]
		[Address(RVA = "0xAEAE04", Offset = "0xAEAE04", VA = "0xAEAE04", Slot = "23")]
		private void UnityEngine.EventSystems.IDragHandler.OnDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001506")]
		[Address(RVA = "0xAEAE20", Offset = "0xAEAE20", VA = "0xAEAE20", Slot = "24")]
		private void UnityEngine.EventSystems.IBeginDragHandler.OnBeginDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001507")]
		[Address(RVA = "0xAEAE3C", Offset = "0xAEAE3C", VA = "0xAEAE3C", Slot = "25")]
		private void UnityEngine.EventSystems.IEndDragHandler.OnEndDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001508")]
		[Address(RVA = "0xAEAE54", Offset = "0xAEAE54", VA = "0xAEAE54")]
		public void SetHover(bool isActive)
		{
		}

		[Token(Token = "0x6001509")]
		[Address(RVA = "0xAEAE60", Offset = "0xAEAE60", VA = "0xAEAE60")]
		public SunSlider()
		{
		}
	}
	[Token(Token = "0x20002D3")]
	public class TextSaveButtons : UIBehaviour, UiMaster.IUiSetup
	{
		[Token(Token = "0x4001202")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private UiMaster master;

		[Token(Token = "0x4001203")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private string lastSaveString;

		[Token(Token = "0x4001204")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private SimpleMessage copyMessage;

		[Token(Token = "0x4001205")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private SimpleMessage loadMessage;

		[Token(Token = "0x600150A")]
		[Address(RVA = "0xAECA54", Offset = "0xAECA54", VA = "0xAECA54", Slot = "17")]
		private void Placemaker.Ui.UiMaster.IUiSetup.OnStart(UiMaster master)
		{
		}

		[Token(Token = "0x600150B")]
		[Address(RVA = "0xAECA5C", Offset = "0xAECA5C", VA = "0xAECA5C", Slot = "18")]
		private void Placemaker.Ui.UiMaster.IUiSetup.OnSetup(UiMaster master)
		{
		}

		[Token(Token = "0x600150C")]
		[Address(RVA = "0xAECA64", Offset = "0xAECA64", VA = "0xAECA64")]
		public void Button_CopyToClipboard()
		{
		}

		[Token(Token = "0x600150D")]
		[Address(RVA = "0xAECB1C", Offset = "0xAECB1C", VA = "0xAECB1C")]
		public void Button_LoadFromClipboard(BaseButton button)
		{
		}

		[Token(Token = "0x600150E")]
		[Address(RVA = "0xAECD14", Offset = "0xAECD14", VA = "0xAECD14")]
		public TextSaveButtons()
		{
		}
	}
	[Token(Token = "0x20002D4")]
	public class ToggleButton : UIBehaviour, UiMaster.IUiSetup, ButtonAudio.IButtonAudioModifier
	{
		[Token(Token = "0x20002D5")]
		public enum Function
		{
			[Token(Token = "0x400120D")]
			Unclear,
			[Token(Token = "0x400120E")]
			InvertRotationX,
			[Token(Token = "0x400120F")]
			InvertRotationY,
			[Token(Token = "0x4001210")]
			PinUIMobile,
			[Token(Token = "0x4001211")]
			Fullscreen,
			[Token(Token = "0x4001212")]
			vSync,
			[Token(Token = "0x4001213")]
			antiAliasing
		}

		[Token(Token = "0x4001206")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private UiMaster master;

		[Token(Token = "0x4001207")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private UpdateState enabledState;

		[Token(Token = "0x4001208")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject tick;

		[Token(Token = "0x4001209")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AudioClip onClip;

		[Token(Token = "0x400120A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private AudioClip offClip;

		[Token(Token = "0x400120B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Function function;

		[Token(Token = "0x600150F")]
		[Address(RVA = "0xAF036C", Offset = "0xAF036C", VA = "0xAF036C", Slot = "17")]
		public void OnStart(UiMaster master)
		{
		}

		[Token(Token = "0x6001510")]
		[Address(RVA = "0xAF0374", Offset = "0xAF0374", VA = "0xAF0374", Slot = "18")]
		public void OnSetup(UiMaster master)
		{
		}

		[Token(Token = "0x6001511")]
		[Address(RVA = "0xAF0518", Offset = "0xAF0518", VA = "0xAF0518")]
		public void Toggle()
		{
		}

		[Token(Token = "0x6001512")]
		[Address(RVA = "0xAF07FC", Offset = "0xAF07FC", VA = "0xAF07FC")]
		public void ImportValue()
		{
		}

		[Token(Token = "0x6001513")]
		[Address(RVA = "0xAF09D8", Offset = "0xAF09D8", VA = "0xAF09D8", Slot = "19")]
		private void Placemaker.Ui.ButtonAudio.IButtonAudioModifier.ModifyAudioData(ref ButtonAudio.AudioData audioData, ButtonAudio.SoundType soundType)
		{
		}

		[Token(Token = "0x6001514")]
		[Address(RVA = "0xAF0A2C", Offset = "0xAF0A2C", VA = "0xAF0A2C")]
		public ToggleButton()
		{
		}

		[Token(Token = "0x6001515")]
		[Address(RVA = "0xAF0A94", Offset = "0xAF0A94", VA = "0xAF0A94")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FCCCC", Offset = "0x6FCCCC")]
		private void <OnSetup>b__8_0()
		{
		}
	}
	[Token(Token = "0x20002D6")]
	public class ToolsButton : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler, IPointerClickHandler, IPointerDownHandler, IPointerUpHandler, IDropHandler
	{
		[Token(Token = "0x4001214")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public bool hovered;

		[Token(Token = "0x4001215")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[SerializeField]
		public bool down;

		[Token(Token = "0x4001216")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		[SerializeField]
		public bool selected;

		[Token(Token = "0x4001217")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
		[SerializeField]
		public bool disabled;

		[Token(Token = "0x4001218")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float hoverLerp;

		[Token(Token = "0x4001219")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float downLerp;

		[Token(Token = "0x400121A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float selectedLerp;

		[Token(Token = "0x400121B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float disabledLerp;

		[Token(Token = "0x400121C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private DistanceFieldSettings backround;

		[Token(Token = "0x400121D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private DistanceFieldSettings foreground;

		[Token(Token = "0x400121E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public System.Action onClicked;

		[Token(Token = "0x6001516")]
		[Address(RVA = "0xAF0AA0", Offset = "0xAF0AA0", VA = "0xAF0AA0", Slot = "9")]
		private void UnityEngine.EventSystems.IDropHandler.OnDrop(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001517")]
		[Address(RVA = "0xAF0AAC", Offset = "0xAF0AAC", VA = "0xAF0AAC", Slot = "6")]
		private void UnityEngine.EventSystems.IPointerClickHandler.OnPointerClick(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001518")]
		[Address(RVA = "0xAF0AB8", Offset = "0xAF0AB8", VA = "0xAF0AB8", Slot = "7")]
		private void UnityEngine.EventSystems.IPointerDownHandler.OnPointerDown(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001519")]
		[Address(RVA = "0xAF0AC4", Offset = "0xAF0AC4", VA = "0xAF0AC4", Slot = "4")]
		private void UnityEngine.EventSystems.IPointerEnterHandler.OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600151A")]
		[Address(RVA = "0xAF0AEC", Offset = "0xAF0AEC", VA = "0xAF0AEC", Slot = "5")]
		private void UnityEngine.EventSystems.IPointerExitHandler.OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600151B")]
		[Address(RVA = "0xAF0AF4", Offset = "0xAF0AF4", VA = "0xAF0AF4", Slot = "8")]
		private void UnityEngine.EventSystems.IPointerUpHandler.OnPointerUp(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600151C")]
		[Address(RVA = "0xAF0B3C", Offset = "0xAF0B3C", VA = "0xAF0B3C")]
		private void Start()
		{
		}

		[Token(Token = "0x600151D")]
		[Address(RVA = "0xAF0B40", Offset = "0xAF0B40", VA = "0xAF0B40")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x6FCCDC", Offset = "0x6FCCDC")]
		private void Setup()
		{
		}

		[Token(Token = "0x600151E")]
		[Address(RVA = "0xAF0D28", Offset = "0xAF0D28", VA = "0xAF0D28")]
		private void Update()
		{
		}

		[Token(Token = "0x600151F")]
		[Address(RVA = "0xAF1004", Offset = "0xAF1004", VA = "0xAF1004")]
		public ToolsButton()
		{
		}
	}
	[Token(Token = "0x20002D7")]
	public class Toucher : MonoBehaviour, UiMaster.IUiSetup
	{
		[Serializable]
		[Token(Token = "0x20002D8")]
		public class Tracker
		{
			[Serializable]
			[Token(Token = "0x20002D9")]
			public struct Data
			{
				[Token(Token = "0x4001230")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public Vector2 delta;

				[Token(Token = "0x4001231")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
				public Vector2 smoothDelta;

				[Token(Token = "0x4001232")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public Vector2 pos;

				[Token(Token = "0x4001233")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				public Vector2 invYPos;

				[Token(Token = "0x4001234")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				public Vector2 smoothPos;

				[Token(Token = "0x4001235")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
				public int frame;

				[Token(Token = "0x4001236")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
				public float time;
			}

			[Token(Token = "0x4001229")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int id;

			[Token(Token = "0x400122A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public bool active;

			[Token(Token = "0x400122B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Data startData;

			[Token(Token = "0x400122C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public Data lastData;

			[Token(Token = "0x400122D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			public GameObject startHitObject;

			[Token(Token = "0x400122E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			public bool draggable;

			[Token(Token = "0x400122F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			public List<Data> datas;

			[Token(Token = "0x6001525")]
			[Address(RVA = "0x107E154", Offset = "0x107E154", VA = "0x107E154")]
			public Tracker()
			{
			}
		}

		[Token(Token = "0x20002DA")]
		public enum State
		{
			[Token(Token = "0x4001238")]
			Idle = 0,
			[Token(Token = "0x4001239")]
			Rotating = 1,
			[Token(Token = "0x400123A")]
			Zooming = 2,
			[Token(Token = "0x400123B")]
			Panning = 4,
			[Token(Token = "0x400123C")]
			Pressing = 16,
			[Token(Token = "0x400123D")]
			Dragging = 7,
			[Token(Token = "0x400123E")]
			ZoomingAndPanning = 6
		}

		[Token(Token = "0x20002DB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F1054", Offset = "0x6F1054")]
		private sealed class <>c__DisplayClass15_0
		{
			[Token(Token = "0x400123F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Toucher <>4__this;

			[Token(Token = "0x4001240")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public UiMaster master;

			[Token(Token = "0x6001526")]
			[Address(RVA = "0x107E094", Offset = "0x107E094", VA = "0x107E094")]
			public <>c__DisplayClass15_0()
			{
			}

			[Token(Token = "0x6001527")]
			[Address(RVA = "0x107E09C", Offset = "0x107E09C", VA = "0x107E09C")]
			internal void <Placemaker.Ui.UiMaster.IUiSetup.OnSetup>b__0(UiMaster.MenuState oldState, UiMaster.MenuState newState)
			{
			}
		}

		[Token(Token = "0x400121F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GraphicRaycaster graphicRaycaster;

		[Token(Token = "0x4001220")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GameObject draggableArea;

		[Token(Token = "0x4001221")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private UiMaster master;

		[Token(Token = "0x4001222")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private PointerEventData pointerEventData;

		[Token(Token = "0x4001223")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public State state;

		[Token(Token = "0x4001224")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public List<Tracker> trackers;

		[Token(Token = "0x4001225")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public List<int> draggables;

		[Token(Token = "0x4001226")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int lastRotator;

		[Token(Token = "0x4001227")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float lastPanTime;

		[Token(Token = "0x4001228")]
		private const float rotationMultiplier = 0.15f;

		[Token(Token = "0x6001520")]
		[Address(RVA = "0xAF14B4", Offset = "0xAF14B4", VA = "0xAF14B4")]
		private void EndRotation()
		{
		}

		[Token(Token = "0x6001521")]
		[Address(RVA = "0xAF1664", Offset = "0xAF1664", VA = "0xAF1664")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001522")]
		[Address(RVA = "0xAF2318", Offset = "0xAF2318", VA = "0xAF2318", Slot = "4")]
		private void Placemaker.Ui.UiMaster.IUiSetup.OnStart(UiMaster master)
		{
		}

		[Token(Token = "0x6001523")]
		[Address(RVA = "0xAF2354", Offset = "0xAF2354", VA = "0xAF2354", Slot = "5")]
		private void Placemaker.Ui.UiMaster.IUiSetup.OnSetup(UiMaster master)
		{
		}

		[Token(Token = "0x6001524")]
		[Address(RVA = "0xAF249C", Offset = "0xAF249C", VA = "0xAF249C")]
		public Toucher()
		{
		}
	}
	[Token(Token = "0x20002DC")]
	public class UiElementScaler : UIBehaviour, UiMaster.IUiSetup
	{
		[Token(Token = "0x4001241")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private UiMaster master;

		[Token(Token = "0x4001242")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private RectTransform childRectTransform;

		[Token(Token = "0x6001528")]
		[Address(RVA = "0x1BD0C14", Offset = "0x1BD0C14", VA = "0x1BD0C14", Slot = "18")]
		public void OnSetup(UiMaster master)
		{
		}

		[Token(Token = "0x6001529")]
		[Address(RVA = "0x1BD0D14", Offset = "0x1BD0D14", VA = "0x1BD0D14", Slot = "17")]
		public void OnStart(UiMaster master)
		{
		}

		[Token(Token = "0x600152A")]
		[Address(RVA = "0x1BD0D18", Offset = "0x1BD0D18", VA = "0x1BD0D18")]
		private new void OnEnable()
		{
		}

		[Token(Token = "0x600152B")]
		[Address(RVA = "0x1BD0D10", Offset = "0x1BD0D10", VA = "0x1BD0D10")]
		private void OnDimensionsChange()
		{
		}

		[Token(Token = "0x600152C")]
		[Address(RVA = "0x1BD0D1C", Offset = "0x1BD0D1C", VA = "0x1BD0D1C")]
		private void SetRect()
		{
		}

		[Token(Token = "0x600152D")]
		[Address(RVA = "0x1BD0E10", Offset = "0x1BD0E10", VA = "0x1BD0E10")]
		public UiElementScaler()
		{
		}
	}
	[Token(Token = "0x20002DD")]
	public class UiMaster : UIBehaviour, IOnScenePostProcess
	{
		[Token(Token = "0x20002DE")]
		public enum MenuState
		{
			[Token(Token = "0x400127A")]
			Nothing = 0,
			[Token(Token = "0x400127B")]
			Loading = 1,
			[Token(Token = "0x400127C")]
			SideMenu = 2,
			[Token(Token = "0x400127D")]
			SaveMenu = 4,
			[Token(Token = "0x400127E")]
			FocusCard = 8,
			[Token(Token = "0x400127F")]
			SunButton = 16,
			[Token(Token = "0x4001280")]
			MouseAndTouch = 32,
			[Token(Token = "0x4001281")]
			Gamepad = 64,
			[Token(Token = "0x4001282")]
			Credits = 128,
			[Token(Token = "0x4001283")]
			ControlLegend = 256,
			[Token(Token = "0x4001284")]
			Settings = 512,
			[Token(Token = "0x4001285")]
			ControlBinding = 1024,
			[Token(Token = "0x4001286")]
			ControlListening = 2048,
			[Token(Token = "0x4001287")]
			DialogWindow = 4096,
			[Token(Token = "0x4001288")]
			VRController = 8192,
			[Token(Token = "0x4001289")]
			KeyInputBlockingMask = 6029,
			[Token(Token = "0x400128A")]
			CloseWhenClosingEverything = 8094
		}

		[Token(Token = "0x20002DF")]
		public interface IUiSetup
		{
			[Token(Token = "0x6001555")]
			void OnStart(UiMaster master);

			[Token(Token = "0x6001556")]
			void OnSetup(UiMaster master);
		}

		[Token(Token = "0x20002E0")]
		public interface IUiDimensionsChange
		{
			[Token(Token = "0x6001557")]
			void OnDimensionsChange(UiMaster master);
		}

		[Token(Token = "0x20002E1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F1064", Offset = "0x6F1064")]
		private sealed class <>c__DisplayClass71_0
		{
			[Token(Token = "0x400128B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform fullRect;

			[Token(Token = "0x6001558")]
			[Address(RVA = "0x107EB64", Offset = "0x107EB64", VA = "0x107EB64")]
			public <>c__DisplayClass71_0()
			{
			}

			[Token(Token = "0x6001559")]
			[Address(RVA = "0x107EB6C", Offset = "0x107EB6C", VA = "0x107EB6C")]
			internal void <SubscribeToSafeArea>b__0()
			{
			}
		}

		[Token(Token = "0x20002E2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F1074", Offset = "0x6F1074")]
		private sealed class <>c__DisplayClass76_0
		{
			[Token(Token = "0x400128C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public UpdateState state;

			[Token(Token = "0x600155A")]
			[Address(RVA = "0x107EBD4", Offset = "0x107EBD4", VA = "0x107EBD4")]
			public <>c__DisplayClass76_0()
			{
			}

			[Token(Token = "0x600155B")]
			[Address(RVA = "0x107EBDC", Offset = "0x107EBDC", VA = "0x107EBDC")]
			internal void <AddState>b__0()
			{
			}

			[Token(Token = "0x600155C")]
			[Address(RVA = "0x107EC68", Offset = "0x107EC68", VA = "0x107EC68")]
			internal void <AddState>b__1()
			{
			}
		}

		[Token(Token = "0x20002E3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F1084", Offset = "0x6F1084")]
		private sealed class <>c__DisplayClass80_0
		{
			[Token(Token = "0x400128D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public UiMaster <>4__this;

			[Token(Token = "0x400128E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public MenuState menuState;

			[Token(Token = "0x400128F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UpdateState updateState;

			[Token(Token = "0x600155D")]
			[Address(RVA = "0x107ECF4", Offset = "0x107ECF4", VA = "0x107ECF4")]
			public <>c__DisplayClass80_0()
			{
			}

			[Token(Token = "0x600155E")]
			[Address(RVA = "0x107ECFC", Offset = "0x107ECFC", VA = "0x107ECFC")]
			internal void <AddMenuStateState>b__0(float x)
			{
			}

			[Token(Token = "0x600155F")]
			[Address(RVA = "0x107EDA4", Offset = "0x107EDA4", VA = "0x107EDA4")]
			internal void <AddMenuStateState>b__1(MenuState oldState, MenuState newState)
			{
			}
		}

		[Token(Token = "0x20002E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F1094", Offset = "0x6F1094")]
		private sealed class <>c__DisplayClass87_0
		{
			[Token(Token = "0x20002E5")]
			private sealed class <<LoadString>g__Routine|0>d : IEnumerator<object>, IEnumerator, IDisposable
			{
				[Token(Token = "0x4001292")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				private int <>1__state;

				[Token(Token = "0x4001293")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				private object <>2__current;

				[Token(Token = "0x4001294")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				public <>c__DisplayClass87_0 <>4__this;

				[Token(Token = "0x170004BB")]
				private object System.Collections.Generic.IEnumerator<System.Object>.Current
				{
					[Token(Token = "0x6001565")]
					[Address(RVA = "0x10840EC", Offset = "0x10840EC", VA = "0x10840EC", Slot = "4")]
					[DebuggerHidden]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x170004BC")]
				private object System.Collections.IEnumerator.Current
				{
					[Token(Token = "0x6001567")]
					[Address(RVA = "0x1084134", Offset = "0x1084134", VA = "0x1084134", Slot = "7")]
					[DebuggerHidden]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x6001562")]
				[Address(RVA = "0x107EE78", Offset = "0x107EE78", VA = "0x107EE78")]
				[DebuggerHidden]
				public <<LoadString>g__Routine|0>d(int <>1__state)
				{
				}

				[Token(Token = "0x6001563")]
				[Address(RVA = "0x1083F1C", Offset = "0x1083F1C", VA = "0x1083F1C", Slot = "5")]
				[DebuggerHidden]
				private void System.IDisposable.Dispose()
				{
				}

				[Token(Token = "0x6001564")]
				[Address(RVA = "0x1083F20", Offset = "0x1083F20", VA = "0x1083F20", Slot = "6")]
				private bool MoveNext()
				{
					return default(bool);
				}

				[Token(Token = "0x6001566")]
				[Address(RVA = "0x10840F4", Offset = "0x10840F4", VA = "0x10840F4", Slot = "8")]
				[DebuggerHidden]
				private void System.Collections.IEnumerator.Reset()
				{
				}
			}

			[Token(Token = "0x4001290")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public UiMaster <>4__this;

			[Token(Token = "0x4001291")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public SaveData saveData;

			[Token(Token = "0x6001560")]
			[Address(RVA = "0x107EE04", Offset = "0x107EE04", VA = "0x107EE04")]
			public <>c__DisplayClass87_0()
			{
			}

			[Token(Token = "0x6001561")]
			[Address(RVA = "0x107EE0C", Offset = "0x107EE0C", VA = "0x107EE0C")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6FCE4C", Offset = "0x6FCE4C")]
			internal IEnumerator <LoadString>g__Routine|0()
			{
				return null;
			}
		}

		[Token(Token = "0x20002E6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F10A4", Offset = "0x6F10A4")]
		private sealed class <>c__DisplayClass88_0
		{
			[Token(Token = "0x20002E7")]
			private sealed class <<StartFinishLoading>g__Routine|0>d : IEnumerator<object>, IEnumerator, IDisposable
			{
				[Token(Token = "0x4001297")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				private int <>1__state;

				[Token(Token = "0x4001298")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				private object <>2__current;

				[Token(Token = "0x4001299")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				public <>c__DisplayClass88_0 <>4__this;

				[Token(Token = "0x170004BD")]
				private object System.Collections.Generic.IEnumerator<System.Object>.Current
				{
					[Token(Token = "0x600156D")]
					[Address(RVA = "0x10842F8", Offset = "0x10842F8", VA = "0x10842F8", Slot = "4")]
					[DebuggerHidden]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x170004BE")]
				private object System.Collections.IEnumerator.Current
				{
					[Token(Token = "0x600156F")]
					[Address(RVA = "0x1084340", Offset = "0x1084340", VA = "0x1084340", Slot = "7")]
					[DebuggerHidden]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x600156A")]
				[Address(RVA = "0x107EF18", Offset = "0x107EF18", VA = "0x107EF18")]
				[DebuggerHidden]
				public <<StartFinishLoading>g__Routine|0>d(int <>1__state)
				{
				}

				[Token(Token = "0x600156B")]
				[Address(RVA = "0x108413C", Offset = "0x108413C", VA = "0x108413C", Slot = "5")]
				[DebuggerHidden]
				private void System.IDisposable.Dispose()
				{
				}

				[Token(Token = "0x600156C")]
				[Address(RVA = "0x1084140", Offset = "0x1084140", VA = "0x1084140", Slot = "6")]
				private bool MoveNext()
				{
					return default(bool);
				}

				[Token(Token = "0x600156E")]
				[Address(RVA = "0x1084300", Offset = "0x1084300", VA = "0x1084300", Slot = "8")]
				[DebuggerHidden]
				private void System.Collections.IEnumerator.Reset()
				{
				}
			}

			[Token(Token = "0x4001295")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public UiMaster <>4__this;

			[Token(Token = "0x4001296")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public bool playNewSound;

			[Token(Token = "0x6001568")]
			[Address(RVA = "0x107EEA4", Offset = "0x107EEA4", VA = "0x107EEA4")]
			public <>c__DisplayClass88_0()
			{
			}

			[Token(Token = "0x6001569")]
			[Address(RVA = "0x107EEAC", Offset = "0x107EEAC", VA = "0x107EEAC")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6FCEFC", Offset = "0x6FCEFC")]
			internal IEnumerator <StartFinishLoading>g__Routine|0()
			{
				return null;
			}
		}

		[Serializable]
		[Token(Token = "0x20002E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F10B4", Offset = "0x6F10B4")]
		private sealed class <>c
		{
			[Token(Token = "0x400129A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400129B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action<MenuState, MenuState> <>9__95_0;

			[Token(Token = "0x400129C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static System.Action <>9__95_1;

			[Token(Token = "0x6001571")]
			[Address(RVA = "0x107EB48", Offset = "0x107EB48", VA = "0x107EB48")]
			public <>c()
			{
			}

			[Token(Token = "0x6001572")]
			[Address(RVA = "0x107EB50", Offset = "0x107EB50", VA = "0x107EB50")]
			internal void <.ctor>b__95_0(MenuState <p0>, MenuState <p1>)
			{
			}

			[Token(Token = "0x6001573")]
			[Address(RVA = "0x107EB54", Offset = "0x107EB54", VA = "0x107EB54")]
			internal void <.ctor>b__95_1()
			{
			}

			[Token(Token = "0x6001574")]
			[Address(RVA = "0x107EB58", Offset = "0x107EB58", VA = "0x107EB58")]
			internal void <.cctor>b__96_0()
			{
			}

			[Token(Token = "0x6001575")]
			[Address(RVA = "0x107EB5C", Offset = "0x107EB5C", VA = "0x107EB5C")]
			internal void <.cctor>b__96_1()
			{
			}

			[Token(Token = "0x6001576")]
			[Address(RVA = "0x107EB60", Offset = "0x107EB60", VA = "0x107EB60")]
			internal void <.cctor>b__96_2()
			{
			}
		}

		[Token(Token = "0x20002E9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F10C4", Offset = "0x6F10C4")]
		private sealed class <<LoadMetaSave>g__LoadMetaSaveRoutine|82_0>d : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400129D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400129E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400129F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UiMaster <>4__this;

			[Token(Token = "0x40012A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public MetaSave metaSave;

			[Token(Token = "0x170004BF")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600157A")]
				[Address(RVA = "0x107E81C", Offset = "0x107E81C", VA = "0x107E81C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004C0")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600157C")]
				[Address(RVA = "0x107E864", Offset = "0x107E864", VA = "0x107E864", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001577")]
			[Address(RVA = "0x107E5B0", Offset = "0x107E5B0", VA = "0x107E5B0")]
			[DebuggerHidden]
			public <<LoadMetaSave>g__LoadMetaSaveRoutine|82_0>d(int <>1__state)
			{
			}

			[Token(Token = "0x6001578")]
			[Address(RVA = "0x107E5DC", Offset = "0x107E5DC", VA = "0x107E5DC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001579")]
			[Address(RVA = "0x107E5E0", Offset = "0x107E5E0", VA = "0x107E5E0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600157B")]
			[Address(RVA = "0x107E824", Offset = "0x107E824", VA = "0x107E824", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20002EA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F10D4", Offset = "0x6F10D4")]
		private sealed class <<StartNew>g__Routine|86_0>d : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40012A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40012A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40012A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UiMaster <>4__this;

			[Token(Token = "0x170004C1")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001580")]
				[Address(RVA = "0x107EA98", Offset = "0x107EA98", VA = "0x107EA98", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004C2")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001582")]
				[Address(RVA = "0x107EAE0", Offset = "0x107EAE0", VA = "0x107EAE0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600157D")]
			[Address(RVA = "0x107E86C", Offset = "0x107E86C", VA = "0x107E86C")]
			[DebuggerHidden]
			public <<StartNew>g__Routine|86_0>d(int <>1__state)
			{
			}

			[Token(Token = "0x600157E")]
			[Address(RVA = "0x107E898", Offset = "0x107E898", VA = "0x107E898", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600157F")]
			[Address(RVA = "0x107E89C", Offset = "0x107E89C", VA = "0x107E89C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001581")]
			[Address(RVA = "0x107EAA0", Offset = "0x107EAA0", VA = "0x107EAA0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001243")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static UiMaster instance;

		[Token(Token = "0x4001244")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public WorldMaster worldMaster;

		[Token(Token = "0x4001245")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SaveMenu saveMenu;

		[Token(Token = "0x4001246")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SettingsMenu settingsMenu;

		[Token(Token = "0x4001247")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public SideMenu sideMenu;

		[Token(Token = "0x4001248")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public PaletteMenu paletteMenu;

		[Token(Token = "0x4001249")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Dim dim;

		[Token(Token = "0x400124A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameViewRect gameViewRect;

		[Token(Token = "0x400124B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public LoadingUi loadingUi;

		[Token(Token = "0x400124C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public EventSystem eventSystem;

		[Token(Token = "0x400124D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public PinnedUiMobile pinnedUiMobile;

		[Token(Token = "0x400124E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public FuryStudios.FurySDK.Settings.PlatformSettings furyPlatformSettings;

		[Token(Token = "0x400124F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public OrbitalCamera orbitalCamera;

		[Token(Token = "0x4001250")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public MasterClicker masterClicker;

		[Token(Token = "0x4001251")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public ActionInputManager actionInputManager;

		[Token(Token = "0x4001252")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public GamepadScreenCursor gamepadScreenCursor;

		[Token(Token = "0x4001253")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public InputModeManager inputModeManager;

		[Token(Token = "0x4001254")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public ControlLegend controlLegend;

		[Token(Token = "0x4001255")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public CommandFeedbacker undoFeedbacker;

		[Token(Token = "0x4001256")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public CommandFeedbacker redoFeedbacker;

		[Token(Token = "0x4001257")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public GamepadXboxDialog gamepadDisconnected;

		[Token(Token = "0x4001258")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public GamepadXboxDialog gamepadConnected;

		[Token(Token = "0x4001259")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public GamepadXboxDialog gamepadSuspended;

		[Token(Token = "0x400125A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private GridButtons gridButton;

		[Token(Token = "0x400125B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private ShadingButtons shadingButtons;

		[Token(Token = "0x400125C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private Transform dimSibling;

		[Token(Token = "0x400125D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private Transform loadingUiSibling;

		[Token(Token = "0x400125E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		private MenuMusic newGameMusic;

		[Token(Token = "0x400125F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		private MenuMusic loadGameMusic;

		[NonSerialized]
		[Token(Token = "0x4001260")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private List<IUiSetup> uiSetups;

		[Token(Token = "0x4001261")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		private bool hasStarted;

		[NonSerialized]
		[Token(Token = "0x4001262")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x101")]
		private bool hasSetup;

		[Token(Token = "0x4001263")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public VrRig vrRig;

		[Token(Token = "0x4001264")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public VrManager vrManager;

		[Token(Token = "0x4001265")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public MenuState menuState;

		[Token(Token = "0x4001266")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public Action<MenuState, MenuState> onMenuStateChange;

		[NonSerialized]
		[Token(Token = "0x4001267")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static List<UpdateState> states;

		[Token(Token = "0x4001268")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static System.Action onUpdate;

		[Token(Token = "0x4001269")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static System.Action onDimensionsChange0;

		[Token(Token = "0x400126A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static System.Action onDimensionsChange1;

		[Token(Token = "0x400126B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private Rect lastSafeArea;

		[Token(Token = "0x400126C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private int lastScreenWidth;

		[Token(Token = "0x400126D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		private int lastScreenHeight;

		[Token(Token = "0x400126E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private float lastDpi;

		[Token(Token = "0x400126F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		private ScreenOrientation lastOrientation;

		[Token(Token = "0x4001270")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		public float gamepadCursorSensitivity;

		[Token(Token = "0x4001271")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		public List<BaseButton> lockedButtons;

		[Token(Token = "0x4001272")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		public Player player;

		[Token(Token = "0x4001273")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		[SerializeField]
		private bool reinitializing;

		[Token(Token = "0x4001274")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		public GameObject prefabRewiredInputManager;

		[Token(Token = "0x4001275")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		public System.Action onSettingsLoaded;

		[Token(Token = "0x4001276")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		public Color messageColorWarning;

		[Token(Token = "0x4001277")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		public Color messageColorInfo;

		[Token(Token = "0x4001278")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		[SerializeField]
		private TextMeshProUGUI xboxUsername;

		[Token(Token = "0x170004B6")]
		public HoverData hoverData
		{
			[Token(Token = "0x600152E")]
			[Address(RVA = "0x1BD0E18", Offset = "0x1BD0E18", VA = "0x1BD0E18")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004B7")]
		public ClickEffect clickEffect
		{
			[Token(Token = "0x600152F")]
			[Address(RVA = "0x1BD0E34", Offset = "0x1BD0E34", VA = "0x1BD0E34")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004B8")]
		public Maker maker
		{
			[Token(Token = "0x6001530")]
			[Address(RVA = "0x1BD0E50", Offset = "0x1BD0E50", VA = "0x1BD0E50")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004B9")]
		public Graph graph
		{
			[Token(Token = "0x6001531")]
			[Address(RVA = "0x1BD0E6C", Offset = "0x1BD0E6C", VA = "0x1BD0E6C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004BA")]
		public VoxelBobEffect voxelBobEffect
		{
			[Token(Token = "0x6001532")]
			[Address(RVA = "0x1BD0E88", Offset = "0x1BD0E88", VA = "0x1BD0E88")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001533")]
		[Address(RVA = "0x1BD0EA4", Offset = "0x1BD0EA4", VA = "0x1BD0EA4")]
		public bool CanTakeKeyInput()
		{
			return default(bool);
		}

		[Token(Token = "0x6001534")]
		[Address(RVA = "0x1BD0EB8", Offset = "0x1BD0EB8", VA = "0x1BD0EB8")]
		public bool GamepadCursorShouldWork()
		{
			return default(bool);
		}

		[Token(Token = "0x6001535")]
		[Address(RVA = "0x1BD0EC8", Offset = "0x1BD0EC8", VA = "0x1BD0EC8")]
		public void MaybeSetup()
		{
		}

		[Token(Token = "0x6001536")]
		[Address(RVA = "0x1BD17EC", Offset = "0x1BD17EC", VA = "0x1BD17EC")]
		private void OnControllerConnected(ControllerStatusChangedEventArgs args)
		{
		}

		[Token(Token = "0x6001537")]
		[Address(RVA = "0x1BD17F0", Offset = "0x1BD17F0", VA = "0x1BD17F0")]
		private void OnControllerDisconnect(ControllerStatusChangedEventArgs args)
		{
		}

		[Token(Token = "0x6001538")]
		[Address(RVA = "0x1BD1734", Offset = "0x1BD1734", VA = "0x1BD1734")]
		private void ControllerSetup(out bool joystickFound)
		{
		}

		[Token(Token = "0x6001539")]
		[Address(RVA = "0x1BD17F4", Offset = "0x1BD17F4", VA = "0x1BD17F4")]
		public static void SubscribeToSafeArea(RectTransform fullRect)
		{
		}

		[Token(Token = "0x600153A")]
		[Address(RVA = "0x1BD191C", Offset = "0x1BD191C", VA = "0x1BD191C")]
		private static void ApplySafeAreaToRt(RectTransform rt)
		{
		}

		[Token(Token = "0x600153B")]
		[Address(RVA = "0x1BD1A30", Offset = "0x1BD1A30", VA = "0x1BD1A30")]
		public void Update()
		{
		}

		[Token(Token = "0x600153C")]
		[Address(RVA = "0x1BD1B98", Offset = "0x1BD1B98", VA = "0x1BD1B98")]
		private void MaybeOnScreenChange()
		{
		}

		[Token(Token = "0x600153D")]
		[Address(RVA = "0x1BD16D0", Offset = "0x1BD16D0", VA = "0x1BD16D0")]
		private void UpdateLastScreenValues()
		{
		}

		[Token(Token = "0x600153E")]
		[Address(RVA = "0x1BD1D68", Offset = "0x1BD1D68", VA = "0x1BD1D68")]
		public static void AddState(UpdateState state)
		{
		}

		[Token(Token = "0x600153F")]
		[Address(RVA = "0x1BD1FA0", Offset = "0x1BD1FA0", VA = "0x1BD1FA0", Slot = "17")]
		private void Placemaker.SceneProcessing.IOnScenePostProcess.OnScenePostProcess(bool isBuild, TargetPlatformFlags platform)
		{
		}

		[Token(Token = "0x6001540")]
		[Address(RVA = "0x1BD1FC8", Offset = "0x1BD1FC8", VA = "0x1BD1FC8")]
		public void AddMenuStateState(UpdateState updateState, MenuState menuState)
		{
		}

		[Token(Token = "0x6001541")]
		[Address(RVA = "0x1BD21E8", Offset = "0x1BD21E8", VA = "0x1BD21E8")]
		public void SubscribeToMenuState(Action<MenuState, MenuState> onMenuStateChange)
		{
		}

		[Token(Token = "0x6001542")]
		[Address(RVA = "0x1BD2294", Offset = "0x1BD2294", VA = "0x1BD2294")]
		public void LoadMetaSave(MetaSave metaSave)
		{
		}

		[Token(Token = "0x6001543")]
		[Address(RVA = "0x1BD2338", Offset = "0x1BD2338", VA = "0x1BD2338")]
		public void CloseEverything()
		{
		}

		[Token(Token = "0x6001544")]
		[Address(RVA = "0x1BD23A4", Offset = "0x1BD23A4", VA = "0x1BD23A4")]
		public void ResetUsersUIChoises()
		{
		}

		[Token(Token = "0x6001545")]
		[Address(RVA = "0x1BD2420", Offset = "0x1BD2420", VA = "0x1BD2420")]
		public void SetupTransform(Transform t)
		{
		}

		[Token(Token = "0x6001546")]
		[Address(RVA = "0x1BD2658", Offset = "0x1BD2658", VA = "0x1BD2658")]
		public void StartNew()
		{
		}

		[Token(Token = "0x6001547")]
		[Address(RVA = "0x1BD26F0", Offset = "0x1BD26F0", VA = "0x1BD26F0")]
		public bool LoadString(string saveString)
		{
			return default(bool);
		}

		[Token(Token = "0x6001548")]
		[Address(RVA = "0x1BD27FC", Offset = "0x1BD27FC", VA = "0x1BD27FC")]
		public void StartFinishLoading(bool playNewSound = false)
		{
		}

		[Token(Token = "0x6001549")]
		[Address(RVA = "0x1BD288C", Offset = "0x1BD288C", VA = "0x1BD288C")]
		public Vector2 GetSmoothAxis2D(string nameX, string nameY)
		{
			return default(Vector2);
		}

		[Token(Token = "0x600154A")]
		[Address(RVA = "0x1BD173C", Offset = "0x1BD173C", VA = "0x1BD173C")]
		public void UpdateAntialiasing()
		{
		}

		[Token(Token = "0x600154B")]
		[Address(RVA = "0x1BD2954", Offset = "0x1BD2954", VA = "0x1BD2954")]
		public void UpdateVSync()
		{
		}

		[Token(Token = "0x600154C")]
		[Address(RVA = "0x1BD2994", Offset = "0x1BD2994", VA = "0x1BD2994")]
		public void UpdateFullScreen()
		{
		}

		[Token(Token = "0x600154D")]
		[Address(RVA = "0x1BD2A58", Offset = "0x1BD2A58", VA = "0x1BD2A58")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x6FCD14", Offset = "0x6FCD14")]
		private void CheckForNonLocalizedText()
		{
		}

		[Token(Token = "0x600154E")]
		[Address(RVA = "0x1BD2C30", Offset = "0x1BD2C30", VA = "0x1BD2C30")]
		public string DefaultPath(string folderName)
		{
			return null;
		}

		[Token(Token = "0x600154F")]
		[Address(RVA = "0x1BD2C74", Offset = "0x1BD2C74", VA = "0x1BD2C74")]
		public UiMaster()
		{
		}

		[Token(Token = "0x6001551")]
		[Address(RVA = "0x1BD3044", Offset = "0x1BD3044", VA = "0x1BD3044")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FCD4C", Offset = "0x6FCD4C")]
		private void <MaybeSetup>b__67_0()
		{
		}

		[Token(Token = "0x6001552")]
		[Address(RVA = "0x1BD306C", Offset = "0x1BD306C", VA = "0x1BD306C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FCD5C", Offset = "0x6FCD5C")]
		private void <MaybeSetup>b__67_1(float x)
		{
		}

		[Token(Token = "0x6001553")]
		[Address(RVA = "0x1BD22C0", Offset = "0x1BD22C0", VA = "0x1BD22C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FCD6C", Offset = "0x6FCD6C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6FCD6C", Offset = "0x6FCD6C")]
		private IEnumerator <LoadMetaSave>g__LoadMetaSaveRoutine|82_0(MetaSave metaSave)
		{
			return null;
		}

		[Token(Token = "0x6001554")]
		[Address(RVA = "0x1BD2684", Offset = "0x1BD2684", VA = "0x1BD2684")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6FCDDC", Offset = "0x6FCDDC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FCDDC", Offset = "0x6FCDDC")]
		private IEnumerator <StartNew>g__Routine|86_0()
		{
			return null;
		}
	}
	[Token(Token = "0x20002EB")]
	public class UiScaler : MonoBehaviour
	{
		[Token(Token = "0x6001583")]
		[Address(RVA = "0x1BD30B8", Offset = "0x1BD30B8", VA = "0x1BD30B8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001584")]
		[Address(RVA = "0x1BD30BC", Offset = "0x1BD30BC", VA = "0x1BD30BC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001585")]
		[Address(RVA = "0x1BD30C0", Offset = "0x1BD30C0", VA = "0x1BD30C0")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x6FD04C", Offset = "0x6FD04C")]
		private void SetScale()
		{
		}

		[Token(Token = "0x6001586")]
		[Address(RVA = "0x1BD3128", Offset = "0x1BD3128", VA = "0x1BD3128")]
		public static float GetScale()
		{
			return default(float);
		}

		[Token(Token = "0x6001587")]
		[Address(RVA = "0x1BD294C", Offset = "0x1BD294C", VA = "0x1BD294C")]
		public static int GetDefaultAntiAliasing()
		{
			return default(int);
		}

		[Token(Token = "0x6001588")]
		[Address(RVA = "0x1BD3214", Offset = "0x1BD3214", VA = "0x1BD3214")]
		public UiScaler()
		{
		}
	}
	[Token(Token = "0x20002EC")]
	public class UndoRedoButtons : UIBehaviour, UiMaster.IUiSetup
	{
		[Token(Token = "0x20002ED")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F10E4", Offset = "0x6F10E4")]
		private sealed class <>c__DisplayClass16_0
		{
			[Token(Token = "0x40012B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public UndoRedoButtons <>4__this;

			[Token(Token = "0x40012B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public StandardButton undoB;

			[Token(Token = "0x40012B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public StandardButton redoB;

			[Token(Token = "0x40012B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public UiMaster master;

			[Token(Token = "0x6001590")]
			[Address(RVA = "0x107EF44", Offset = "0x107EF44", VA = "0x107EF44")]
			public <>c__DisplayClass16_0()
			{
			}

			[Token(Token = "0x6001591")]
			[Address(RVA = "0x107EF4C", Offset = "0x107EF4C", VA = "0x107EF4C")]
			internal void <Placemaker.Ui.UiMaster.IUiSetup.OnSetup>b__0()
			{
			}

			[Token(Token = "0x6001592")]
			[Address(RVA = "0x107EFE0", Offset = "0x107EFE0", VA = "0x107EFE0")]
			internal void <Placemaker.Ui.UiMaster.IUiSetup.OnSetup>b__1()
			{
			}

			[Token(Token = "0x6001593")]
			[Address(RVA = "0x107F074", Offset = "0x107F074", VA = "0x107F074")]
			internal void <Placemaker.Ui.UiMaster.IUiSetup.OnSetup>b__2(bool x)
			{
			}

			[Token(Token = "0x6001594")]
			[Address(RVA = "0x107F0FC", Offset = "0x107F0FC", VA = "0x107F0FC")]
			internal void <Placemaker.Ui.UiMaster.IUiSetup.OnSetup>b__3(bool x)
			{
			}

			[Token(Token = "0x6001595")]
			[Address(RVA = "0x107F184", Offset = "0x107F184", VA = "0x107F184")]
			internal void <Placemaker.Ui.UiMaster.IUiSetup.OnSetup>b__4()
			{
			}

			[Token(Token = "0x6001596")]
			[Address(RVA = "0x107F250", Offset = "0x107F250", VA = "0x107F250")]
			internal void <Placemaker.Ui.UiMaster.IUiSetup.OnSetup>b__5()
			{
			}

			[Token(Token = "0x6001597")]
			[Address(RVA = "0x107F31C", Offset = "0x107F31C", VA = "0x107F31C")]
			internal void <Placemaker.Ui.UiMaster.IUiSetup.OnSetup>b__6(int step, float axis)
			{
			}

			[Token(Token = "0x6001598")]
			[Address(RVA = "0x107F35C", Offset = "0x107F35C", VA = "0x107F35C")]
			internal void <Placemaker.Ui.UiMaster.IUiSetup.OnSetup>b__7()
			{
			}
		}

		[Token(Token = "0x40012A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private UiMaster master;

		[Token(Token = "0x40012A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private TMP_Text undoSteps;

		[Token(Token = "0x40012A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private TMP_Text redoSteps;

		[Token(Token = "0x40012A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		public BaseButton undoButton;

		[Token(Token = "0x40012A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		public BaseButton redoButton;

		[Token(Token = "0x40012A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private bool isUndoDown;

		[Token(Token = "0x40012AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		[SerializeField]
		private bool isRedoDown;

		[Token(Token = "0x40012AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private System.Action undoDown;

		[Token(Token = "0x40012AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private System.Action redoDown;

		[Token(Token = "0x40012AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float undoDownTime;

		[Token(Token = "0x40012AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float redoDownTime;

		[Token(Token = "0x40012AF")]
		private const float initialDelay = 1f;

		[Token(Token = "0x40012B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool hasUndone;

		[Token(Token = "0x40012B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private bool hasRedone;

		[Token(Token = "0x6001589")]
		[Address(RVA = "0x1BD321C", Offset = "0x1BD321C", VA = "0x1BD321C", Slot = "17")]
		private void Placemaker.Ui.UiMaster.IUiSetup.OnStart(UiMaster master)
		{
		}

		[Token(Token = "0x600158A")]
		[Address(RVA = "0x1BD3274", Offset = "0x1BD3274", VA = "0x1BD3274")]
		private void OnQueueChange(int undoCount, int redoCount)
		{
		}

		[Token(Token = "0x600158B")]
		[Address(RVA = "0x1BD3440", Offset = "0x1BD3440", VA = "0x1BD3440", Slot = "18")]
		private void Placemaker.Ui.UiMaster.IUiSetup.OnSetup(UiMaster master)
		{
		}

		[Token(Token = "0x600158C")]
		[Address(RVA = "0x1BD3920", Offset = "0x1BD3920", VA = "0x1BD3920")]
		public void Button_Undo()
		{
		}

		[Token(Token = "0x600158D")]
		[Address(RVA = "0x1BD3924", Offset = "0x1BD3924", VA = "0x1BD3924")]
		public void Button_Redo()
		{
		}

		[Token(Token = "0x600158E")]
		[Address(RVA = "0x1BD3928", Offset = "0x1BD3928", VA = "0x1BD3928")]
		private void Update()
		{
		}

		[Token(Token = "0x600158F")]
		[Address(RVA = "0x1BD3A9C", Offset = "0x1BD3A9C", VA = "0x1BD3A9C")]
		public UndoRedoButtons()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002EE")]
	public class UpdateState
	{
		[Token(Token = "0x20002EF")]
		public enum Axis : byte
		{
			[Token(Token = "0x40012BF")]
			X = 1,
			[Token(Token = "0x40012C0")]
			Y = 2,
			[Token(Token = "0x40012C1")]
			Z = 4,
			[Token(Token = "0x40012C2")]
			XY = 3,
			[Token(Token = "0x40012C3")]
			XZ = 5,
			[Token(Token = "0x40012C4")]
			YZ = 6,
			[Token(Token = "0x40012C5")]
			XYZ = 7
		}

		[Serializable]
		[Token(Token = "0x20002F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F10F4", Offset = "0x6F10F4")]
		private sealed class <>c
		{
			[Token(Token = "0x40012C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40012C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action<float> <>9__14_0;

			[Token(Token = "0x40012C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Action<float> <>9__14_1;

			[Token(Token = "0x40012C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static System.Action <>9__14_2;

			[Token(Token = "0x40012CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static System.Action <>9__14_3;

			[Token(Token = "0x40012CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public static Action<float> <>9__15_0;

			[Token(Token = "0x40012CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public static Action<float> <>9__15_1;

			[Token(Token = "0x40012CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public static System.Action <>9__15_2;

			[Token(Token = "0x40012CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public static System.Action <>9__15_3;

			[Token(Token = "0x60015B5")]
			[Address(RVA = "0x107FA10", Offset = "0x107FA10", VA = "0x107FA10")]
			public <>c()
			{
			}

			[Token(Token = "0x60015B6")]
			[Address(RVA = "0x107FA18", Offset = "0x107FA18", VA = "0x107FA18")]
			internal void <.ctor>b__14_0(float <p0>)
			{
			}

			[Token(Token = "0x60015B7")]
			[Address(RVA = "0x107FA1C", Offset = "0x107FA1C", VA = "0x107FA1C")]
			internal void <.ctor>b__14_1(float <p0>)
			{
			}

			[Token(Token = "0x60015B8")]
			[Address(RVA = "0x107FA20", Offset = "0x107FA20", VA = "0x107FA20")]
			internal void <.ctor>b__14_2()
			{
			}

			[Token(Token = "0x60015B9")]
			[Address(RVA = "0x107FA24", Offset = "0x107FA24", VA = "0x107FA24")]
			internal void <.ctor>b__14_3()
			{
			}

			[Token(Token = "0x60015BA")]
			[Address(RVA = "0x107FA28", Offset = "0x107FA28", VA = "0x107FA28")]
			internal void <.ctor>b__15_0(float <p0>)
			{
			}

			[Token(Token = "0x60015BB")]
			[Address(RVA = "0x107FA2C", Offset = "0x107FA2C", VA = "0x107FA2C")]
			internal void <.ctor>b__15_1(float <p0>)
			{
			}

			[Token(Token = "0x60015BC")]
			[Address(RVA = "0x107FA30", Offset = "0x107FA30", VA = "0x107FA30")]
			internal void <.ctor>b__15_2()
			{
			}

			[Token(Token = "0x60015BD")]
			[Address(RVA = "0x107FA34", Offset = "0x107FA34", VA = "0x107FA34")]
			internal void <.ctor>b__15_3()
			{
			}
		}

		[Token(Token = "0x20002F1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F1104", Offset = "0x6F1104")]
		private sealed class <>c__DisplayClass30_0
		{
			[Token(Token = "0x40012CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Animator animator;

			[Token(Token = "0x40012D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int hash;

			[Token(Token = "0x60015BE")]
			[Address(RVA = "0x107FA38", Offset = "0x107FA38", VA = "0x107FA38")]
			public <>c__DisplayClass30_0()
			{
			}

			[Token(Token = "0x60015BF")]
			[Address(RVA = "0x107FA40", Offset = "0x107FA40", VA = "0x107FA40")]
			internal void <SubscribeAnimationParameter>b__0(float x)
			{
			}
		}

		[Token(Token = "0x20002F2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F1114", Offset = "0x6F1114")]
		private sealed class <>c__DisplayClass31_0
		{
			[Token(Token = "0x40012D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject gameObject;

			[Token(Token = "0x40012D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Transform transform;

			[Token(Token = "0x40012D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CanvasGroup canvasGroup;

			[Token(Token = "0x60015C0")]
			[Address(RVA = "0x107FA64", Offset = "0x107FA64", VA = "0x107FA64")]
			public <>c__DisplayClass31_0()
			{
			}

			[Token(Token = "0x60015C1")]
			[Address(RVA = "0x107FA6C", Offset = "0x107FA6C", VA = "0x107FA6C")]
			internal void <SubscribeTick>b__0(float x)
			{
			}

			[Token(Token = "0x60015C2")]
			[Address(RVA = "0x107FB14", Offset = "0x107FB14", VA = "0x107FB14")]
			internal void <SubscribeTick>b__1(float x)
			{
			}
		}

		[Token(Token = "0x20002F3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F1124", Offset = "0x6F1124")]
		private sealed class <>c__DisplayClass33_0
		{
			[Token(Token = "0x40012D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public MonoBehaviour monoBehaviour;

			[Token(Token = "0x60015C3")]
			[Address(RVA = "0x107FB60", Offset = "0x107FB60", VA = "0x107FB60")]
			public <>c__DisplayClass33_0()
			{
			}

			[Token(Token = "0x60015C4")]
			[Address(RVA = "0x107FB68", Offset = "0x107FB68", VA = "0x107FB68")]
			internal void <SubscribeToTarget>b__0(float x)
			{
			}
		}

		[Token(Token = "0x20002F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F1134", Offset = "0x6F1134")]
		private sealed class <>c__DisplayClass34_0
		{
			[Token(Token = "0x40012D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject gameObject;

			[Token(Token = "0x60015C5")]
			[Address(RVA = "0x107FB90", Offset = "0x107FB90", VA = "0x107FB90")]
			public <>c__DisplayClass34_0()
			{
			}

			[Token(Token = "0x60015C6")]
			[Address(RVA = "0x107FB98", Offset = "0x107FB98", VA = "0x107FB98")]
			internal void <SubscribeToTarget>b__0(float x)
			{
			}
		}

		[Token(Token = "0x20002F5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F1144", Offset = "0x6F1144")]
		private sealed class <>c__DisplayClass35_0
		{
			[Token(Token = "0x40012D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public CanvasGroup canvasGroup;

			[Token(Token = "0x40012D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Canvas canvas;

			[Token(Token = "0x60015C7")]
			[Address(RVA = "0x107FBC0", Offset = "0x107FBC0", VA = "0x107FBC0")]
			public <>c__DisplayClass35_0()
			{
			}

			[Token(Token = "0x60015C8")]
			[Address(RVA = "0x107FBC8", Offset = "0x107FBC8", VA = "0x107FBC8")]
			internal void <Subscribe>b__0(float x)
			{
			}

			[Token(Token = "0x60015C9")]
			[Address(RVA = "0x107FCA0", Offset = "0x107FCA0", VA = "0x107FCA0")]
			internal void <Subscribe>b__1(float x)
			{
			}
		}

		[Token(Token = "0x20002F6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F1154", Offset = "0x6F1154")]
		private sealed class <>c__DisplayClass36_0
		{
			[Token(Token = "0x40012D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Graphic graphic;

			[Token(Token = "0x60015CA")]
			[Address(RVA = "0x107FCC4", Offset = "0x107FCC4", VA = "0x107FCC4")]
			public <>c__DisplayClass36_0()
			{
			}

			[Token(Token = "0x60015CB")]
			[Address(RVA = "0x107FCCC", Offset = "0x107FCCC", VA = "0x107FCCC")]
			internal void <Subscribe>b__0(float x)
			{
			}
		}

		[Token(Token = "0x20002F7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F1164", Offset = "0x6F1164")]
		private sealed class <>c__DisplayClass37_0
		{
			[Token(Token = "0x40012D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public AudioSource audioSource;

			[Token(Token = "0x60015CC")]
			[Address(RVA = "0x107FDC4", Offset = "0x107FDC4", VA = "0x107FDC4")]
			public <>c__DisplayClass37_0()
			{
			}

			[Token(Token = "0x60015CD")]
			[Address(RVA = "0x107FDCC", Offset = "0x107FDCC", VA = "0x107FDCC")]
			internal void <Subscribe>b__0(float x)
			{
			}
		}

		[Token(Token = "0x20002F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F1174", Offset = "0x6F1174")]
		private sealed class <>c__DisplayClass39_0
		{
			[Token(Token = "0x40012DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform transform;

			[Token(Token = "0x40012DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float scale0;

			[Token(Token = "0x40012DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public float scale1;

			[Token(Token = "0x40012DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool x;

			[Token(Token = "0x40012DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
			public bool y;

			[Token(Token = "0x40012DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
			public bool z;

			[Token(Token = "0x60015CE")]
			[Address(RVA = "0x107FE6C", Offset = "0x107FE6C", VA = "0x107FE6C")]
			public <>c__DisplayClass39_0()
			{
			}

			[Token(Token = "0x60015CF")]
			[Address(RVA = "0x107FE74", Offset = "0x107FE74", VA = "0x107FE74")]
			internal void <SubscribeScale>b__0(float v)
			{
			}
		}

		[Token(Token = "0x40012B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private float _current;

		[Token(Token = "0x40012B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private float _target;

		[Token(Token = "0x40012B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public bool isUpdating;

		[Token(Token = "0x40012B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Action<float> onValueChanged;

		[Token(Token = "0x40012BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action<float> onTargetChange;

		[Token(Token = "0x40012BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public System.Action onStart;

		[Token(Token = "0x40012BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public System.Action onStop;

		[Token(Token = "0x40012BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float speed;

		[Token(Token = "0x170004C3")]
		public bool targetBool
		{
			[Token(Token = "0x6001599")]
			[Address(RVA = "0x1BD3F40", Offset = "0x1BD3F40", VA = "0x1BD3F40")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600159A")]
			[Address(RVA = "0x1BD3F54", Offset = "0x1BD3F54", VA = "0x1BD3F54")]
			set
			{
			}
		}

		[Token(Token = "0x170004C4")]
		public bool currentBool
		{
			[Token(Token = "0x600159B")]
			[Address(RVA = "0x1BD4004", Offset = "0x1BD4004", VA = "0x1BD4004")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600159C")]
			[Address(RVA = "0x1BD4018", Offset = "0x1BD4018", VA = "0x1BD4018")]
			set
			{
			}
		}

		[Token(Token = "0x170004C5")]
		public float current
		{
			[Token(Token = "0x600159F")]
			[Address(RVA = "0x1BD4614", Offset = "0x1BD4614", VA = "0x1BD4614")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60015A0")]
			[Address(RVA = "0x1BD4050", Offset = "0x1BD4050", VA = "0x1BD4050")]
			set
			{
			}
		}

		[Token(Token = "0x170004C6")]
		public float target
		{
			[Token(Token = "0x60015A1")]
			[Address(RVA = "0x1BD470C", Offset = "0x1BD470C", VA = "0x1BD470C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60015A2")]
			[Address(RVA = "0x1BD3F78", Offset = "0x1BD3F78", VA = "0x1BD3F78")]
			set
			{
			}
		}

		[Token(Token = "0x600159D")]
		[Address(RVA = "0x1BD4068", Offset = "0x1BD4068", VA = "0x1BD4068")]
		public UpdateState()
		{
		}

		[Token(Token = "0x600159E")]
		[Address(RVA = "0x1BD4334", Offset = "0x1BD4334", VA = "0x1BD4334")]
		public UpdateState(float value)
		{
		}

		[Token(Token = "0x60015A3")]
		[Address(RVA = "0x1BD4714", Offset = "0x1BD4714", VA = "0x1BD4714")]
		public UpdateState SnapTo(float newValue)
		{
			return null;
		}

		[Token(Token = "0x60015A4")]
		[Address(RVA = "0x1BD4750", Offset = "0x1BD4750", VA = "0x1BD4750")]
		public UpdateState Follow(float newValue)
		{
			return null;
		}

		[Token(Token = "0x60015A5")]
		[Address(RVA = "0x1BD47AC", Offset = "0x1BD47AC", VA = "0x1BD47AC")]
		public UpdateState Snap()
		{
			return null;
		}

		[Token(Token = "0x60015A6")]
		[Address(RVA = "0x1BD1F2C", Offset = "0x1BD1F2C", VA = "0x1BD1F2C")]
		public UpdateState PushValue()
		{
			return null;
		}

		[Token(Token = "0x60015A7")]
		[Address(RVA = "0x1BD47E4", Offset = "0x1BD47E4", VA = "0x1BD47E4")]
		public void SetCurrentOrTarget(float value)
		{
		}

		[Token(Token = "0x60015A8")]
		[Address(RVA = "0x1BD1CF8", Offset = "0x1BD1CF8", VA = "0x1BD1CF8")]
		public void Update()
		{
		}

		[Token(Token = "0x60015A9")]
		[Address(RVA = "0x1BD461C", Offset = "0x1BD461C", VA = "0x1BD461C")]
		private void CheckUpdating()
		{
		}

		[Token(Token = "0x60015AA")]
		[Address(RVA = "0x1BD4834", Offset = "0x1BD4834", VA = "0x1BD4834")]
		public UpdateState Subscribe(Action<float> action)
		{
			return null;
		}

		[Token(Token = "0x60015AB")]
		[Address(RVA = "0x1BD48E0", Offset = "0x1BD48E0", VA = "0x1BD48E0")]
		public UpdateState SubscribeAnimationParameter(Animator animator, string name)
		{
			return null;
		}

		[Token(Token = "0x60015AC")]
		[Address(RVA = "0x1BD49C4", Offset = "0x1BD49C4", VA = "0x1BD49C4")]
		public UpdateState SubscribeTick(GameObject gameObject)
		{
			return null;
		}

		[Token(Token = "0x60015AD")]
		[Address(RVA = "0x1BD213C", Offset = "0x1BD213C", VA = "0x1BD213C")]
		public UpdateState SubscribeToTarget(Action<float> action)
		{
			return null;
		}

		[Token(Token = "0x60015AE")]
		[Address(RVA = "0x1BD4B24", Offset = "0x1BD4B24", VA = "0x1BD4B24")]
		public UpdateState SubscribeToTarget(MonoBehaviour monoBehaviour)
		{
			return null;
		}

		[Token(Token = "0x60015AF")]
		[Address(RVA = "0x1BD4BF4", Offset = "0x1BD4BF4", VA = "0x1BD4BF4")]
		public UpdateState SubscribeToTarget(GameObject gameObject)
		{
			return null;
		}

		[Token(Token = "0x60015B0")]
		[Address(RVA = "0x1BD4CC4", Offset = "0x1BD4CC4", VA = "0x1BD4CC4")]
		public UpdateState Subscribe(CanvasGroup canvasGroup)
		{
			return null;
		}

		[Token(Token = "0x60015B1")]
		[Address(RVA = "0x1BD4ED0", Offset = "0x1BD4ED0", VA = "0x1BD4ED0")]
		public UpdateState Subscribe(Graphic graphic)
		{
			return null;
		}

		[Token(Token = "0x60015B2")]
		[Address(RVA = "0x1BD4FA0", Offset = "0x1BD4FA0", VA = "0x1BD4FA0")]
		public UpdateState Subscribe(AudioSource audioSource)
		{
			return null;
		}

		[Token(Token = "0x60015B3")]
		[Address(RVA = "0x1BD5070", Offset = "0x1BD5070", VA = "0x1BD5070")]
		public UpdateState SubscribeScale(Transform transform, Axis axis = Axis.XY, float scale0 = 0f, float scale1 = 1f)
		{
			return null;
		}
	}
	[Token(Token = "0x20002F9")]
	public class Username : MonoBehaviour, UiMaster.IUiSetup
	{
		[Token(Token = "0x40012E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private UiMaster master;

		[Token(Token = "0x40012E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private TextMeshProUGUI userNameText;

		[Token(Token = "0x60015D0")]
		[Address(RVA = "0x1BDC1A8", Offset = "0x1BDC1A8", VA = "0x1BDC1A8", Slot = "5")]
		public void OnSetup(UiMaster master)
		{
		}

		[Token(Token = "0x60015D1")]
		[Address(RVA = "0x1BDC290", Offset = "0x1BDC290", VA = "0x1BDC290")]
		private void Update()
		{
		}

		[Token(Token = "0x60015D2")]
		[Address(RVA = "0x1BDC294", Offset = "0x1BDC294", VA = "0x1BDC294", Slot = "4")]
		public void OnStart(UiMaster master)
		{
		}

		[Token(Token = "0x60015D3")]
		[Address(RVA = "0x1BDC298", Offset = "0x1BDC298", VA = "0x1BDC298")]
		public Username()
		{
		}

		[Token(Token = "0x60015D4")]
		[Address(RVA = "0x1BDC2A0", Offset = "0x1BDC2A0", VA = "0x1BDC2A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FD084", Offset = "0x6FD084")]
		private void <OnSetup>b__2_0(float x)
		{
		}
	}
	[Token(Token = "0x20002FA")]
	public class WebLinkButton : MonoBehaviour, UiMaster.IUiSetup
	{
		[Token(Token = "0x20002FB")]
		public enum Link
		{
			[Token(Token = "0x40012E4")]
			Steam,
			[Token(Token = "0x40012E5")]
			GoG,
			[Token(Token = "0x40012E6")]
			NintendoSwitch,
			[Token(Token = "0x40012E7")]
			AppStore,
			[Token(Token = "0x40012E8")]
			GooglePlay,
			[Token(Token = "0x40012E9")]
			EpicGamesStore,
			[Token(Token = "0x40012EA")]
			XboxStore
		}

		[Token(Token = "0x20002FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F1184", Offset = "0x6F1184")]
		private sealed class <>c__DisplayClass3_0
		{
			[Token(Token = "0x40012EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public WebLinkButton <>4__this;

			[Token(Token = "0x40012EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string s;

			[Token(Token = "0x60015D9")]
			[Address(RVA = "0x1081D24", Offset = "0x1081D24", VA = "0x1081D24")]
			public <>c__DisplayClass3_0()
			{
			}

			[Token(Token = "0x60015DA")]
			[Address(RVA = "0x1081D2C", Offset = "0x1081D2C", VA = "0x1081D2C")]
			internal void <Placemaker.Ui.UiMaster.IUiSetup.OnSetup>b__0(bool x)
			{
			}
		}

		[Token(Token = "0x40012E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Link link;

		[Token(Token = "0x60015D5")]
		[Address(RVA = "0xBAA760", Offset = "0xBAA760", VA = "0xBAA760", Slot = "4")]
		private void Placemaker.Ui.UiMaster.IUiSetup.OnStart(UiMaster master)
		{
		}

		[Token(Token = "0x60015D6")]
		[Address(RVA = "0xBAA764", Offset = "0xBAA764", VA = "0xBAA764", Slot = "5")]
		private void Placemaker.Ui.UiMaster.IUiSetup.OnSetup(UiMaster master)
		{
		}

		[Token(Token = "0x60015D7")]
		[Address(RVA = "0xBAA96C", Offset = "0xBAA96C", VA = "0xBAA96C")]
		public void OpenUrl(string str)
		{
		}

		[Token(Token = "0x60015D8")]
		[Address(RVA = "0xBAA9E0", Offset = "0xBAA9E0", VA = "0xBAA9E0")]
		public WebLinkButton()
		{
		}
	}
	[Token(Token = "0x20002FD")]
	public class XBoxSignoutButton : MonoBehaviour, UiMaster.IUiSetup
	{
		[Token(Token = "0x40012ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private UiMaster master;

		[Token(Token = "0x60015DB")]
		[Address(RVA = "0xBAE89C", Offset = "0xBAE89C", VA = "0xBAE89C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x6FD094", Offset = "0x6FD094")]
		public void SignOut()
		{
		}

		[Token(Token = "0x60015DC")]
		[Address(RVA = "0xBAE99C", Offset = "0xBAE99C", VA = "0xBAE99C", Slot = "5")]
		private void Placemaker.Ui.UiMaster.IUiSetup.OnSetup(UiMaster master)
		{
		}

		[Token(Token = "0x60015DD")]
		[Address(RVA = "0xBAE9A4", Offset = "0xBAE9A4", VA = "0xBAE9A4", Slot = "4")]
		private void Placemaker.Ui.UiMaster.IUiSetup.OnStart(UiMaster master)
		{
		}

		[Token(Token = "0x60015DE")]
		[Address(RVA = "0xBAE9A8", Offset = "0xBAE9A8", VA = "0xBAE9A8")]
		public XBoxSignoutButton()
		{
		}
	}
	[Token(Token = "0x20002FE")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x6F1194", Offset = "0x6F1194")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x6F1194", Offset = "0x6F1194")]
	public class UiBoxCollider : UIBehaviour
	{
		[Token(Token = "0x60015DF")]
		[Address(RVA = "0x1BCFC90", Offset = "0x1BCFC90", VA = "0x1BCFC90", Slot = "10")]
		protected override void OnRectTransformDimensionsChange()
		{
		}

		[Token(Token = "0x60015E0")]
		[Address(RVA = "0x1BCFC94", Offset = "0x1BCFC94", VA = "0x1BCFC94")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x6FD0CC", Offset = "0x6FD0CC")]
		private void UpdateBox()
		{
		}

		[Token(Token = "0x60015E1")]
		[Address(RVA = "0x1BCFED0", Offset = "0x1BCFED0", VA = "0x1BCFED0")]
		public UiBoxCollider()
		{
		}
	}
}
namespace Os.Hex
{
	[Token(Token = "0x20002FF")]
	public static class HexMath
	{
		[Token(Token = "0x40012EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly float hexAxisLength;

		[Token(Token = "0x40012EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static readonly float2 hexAxisX;

		[Token(Token = "0x40012F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public static readonly float2 hexAxisY;

		[Token(Token = "0x40012F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public static readonly float2 hexAxisZ;

		[Token(Token = "0x40012F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public static readonly Matrix4x4 hexToPlane;

		[Token(Token = "0x40012F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public static readonly Matrix4x4 hexToWorld;

		[Token(Token = "0x40012F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public static readonly Matrix4x4 planeToWorld;

		[Token(Token = "0x40012F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		public static readonly float2 skewAxisX;

		[Token(Token = "0x40012F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		public static readonly float2 skewAxisY;

		[Token(Token = "0x40012F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		public static readonly Matrix4x4 skewToPlane;

		[Token(Token = "0x40012F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		public static readonly Matrix4x4 planeToSkew;

		[Token(Token = "0x40012F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
		public static readonly Matrix4x4 hexToSkew;

		[Token(Token = "0x40012FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
		public static readonly Matrix4x4 skewToHex;

		[Token(Token = "0x60015E2")]
		[Address(RVA = "0xB10BBC", Offset = "0xB10BBC", VA = "0xB10BBC")]
		public static int3 GetHex3(this int2 hex2)
		{
			return default(int3);
		}

		[Token(Token = "0x60015E3")]
		[Address(RVA = "0xB10BCC", Offset = "0xB10BCC", VA = "0xB10BCC")]
		public static float3 GetHex3(this float2 hex2)
		{
			return default(float3);
		}

		[Token(Token = "0x60015E4")]
		[Address(RVA = "0xB10BD8", Offset = "0xB10BD8", VA = "0xB10BD8")]
		public static int2 GetHex2(this int3 hexPos)
		{
			return default(int2);
		}

		[Token(Token = "0x60015E5")]
		[Address(RVA = "0xB10BDC", Offset = "0xB10BDC", VA = "0xB10BDC")]
		public static float2 GetHex2(this float3 hexPos)
		{
			return default(float2);
		}

		[Token(Token = "0x60015E6")]
		[Address(RVA = "0xB10BE0", Offset = "0xB10BE0", VA = "0xB10BE0")]
		public static float2 HexToPlane(float3 hexPos)
		{
			return default(float2);
		}

		[Token(Token = "0x60015E7")]
		[Address(RVA = "0xB10C90", Offset = "0xB10C90", VA = "0xB10C90")]
		public static float2 HexToPlane(float2 hexPos)
		{
			return default(float2);
		}

		[Token(Token = "0x60015E8")]
		[Address(RVA = "0xB10D08", Offset = "0xB10D08", VA = "0xB10D08")]
		public static float3 PlaneToHex(float2 planePos)
		{
			return default(float3);
		}

		[Token(Token = "0x60015E9")]
		[Address(RVA = "0xB10DB4", Offset = "0xB10DB4", VA = "0xB10DB4")]
		public static float3 PlaneToWorld(float2 planePos, float y = 0f)
		{
			return default(float3);
		}

		[Token(Token = "0x60015EA")]
		[Address(RVA = "0xB10DC4", Offset = "0xB10DC4", VA = "0xB10DC4")]
		public static float2 WorldToPlane(float3 worldPos)
		{
			return default(float2);
		}

		[Token(Token = "0x60015EB")]
		[Address(RVA = "0xB10DCC", Offset = "0xB10DCC", VA = "0xB10DCC")]
		public static float3 RotateCW(float3 hexPos)
		{
			return default(float3);
		}

		[Token(Token = "0x60015EC")]
		[Address(RVA = "0xB10DE4", Offset = "0xB10DE4", VA = "0xB10DE4")]
		public static float3 RotateCCW(float3 hexPos)
		{
			return default(float3);
		}

		[Token(Token = "0x60015ED")]
		[Address(RVA = "0xB10DF8", Offset = "0xB10DF8", VA = "0xB10DF8")]
		public static int2 RotateCW(int2 hexPos)
		{
			return default(int2);
		}

		[Token(Token = "0x60015EE")]
		[Address(RVA = "0xB10E0C", Offset = "0xB10E0C", VA = "0xB10E0C")]
		public static int3 RotateCW(int3 hexPos)
		{
			return default(int3);
		}

		[Token(Token = "0x60015EF")]
		[Address(RVA = "0xB10E24", Offset = "0xB10E24", VA = "0xB10E24")]
		public static int2 RotateCCW(int2 hexPos)
		{
			return default(int2);
		}

		[Token(Token = "0x60015F0")]
		[Address(RVA = "0xB10E3C", Offset = "0xB10E3C", VA = "0xB10E3C")]
		public static int3 RotateCCW(int3 hexPos)
		{
			return default(int3);
		}

		[Token(Token = "0x60015F1")]
		[Address(RVA = "0xB10E58", Offset = "0xB10E58", VA = "0xB10E58")]
		public static int2 RotateCW2(int2 hexPos)
		{
			return default(int2);
		}

		[Token(Token = "0x60015F2")]
		[Address(RVA = "0xB10E70", Offset = "0xB10E70", VA = "0xB10E70")]
		public static int2 RotateCCW2(int2 hexPos)
		{
			return default(int2);
		}

		[Token(Token = "0x60015F3")]
		[Address(RVA = "0xB10E88", Offset = "0xB10E88", VA = "0xB10E88")]
		public static int3 HexRound(float3 hexPos)
		{
			return default(int3);
		}

		[Token(Token = "0x60015F4")]
		[Address(RVA = "0xB10F40", Offset = "0xB10F40", VA = "0xB10F40")]
		public static int3 HexRoundX(float3 hexPos)
		{
			return default(int3);
		}

		[Token(Token = "0x60015F5")]
		[Address(RVA = "0xB10FA0", Offset = "0xB10FA0", VA = "0xB10FA0")]
		public static float3 HexClamp(float3 hexPos, float3 min, float3 max)
		{
			return default(float3);
		}
	}
	[Token(Token = "0x2000300")]
	internal class HexOnionVisualizer : MonoBehaviour
	{
		[Token(Token = "0x60015F7")]
		[Address(RVA = "0xB12034", Offset = "0xB12034", VA = "0xB12034")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x60015F8")]
		[Address(RVA = "0xB121EC", Offset = "0xB121EC", VA = "0xB121EC")]
		public HexOnionVisualizer()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000301")]
	public struct HexOnionIterator
	{
		[Token(Token = "0x40012FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private uint _vertIndex;

		[Token(Token = "0x40012FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		[SerializeField]
		private uint _sideIndex;

		[Token(Token = "0x40012FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[SerializeField]
		private uint _layerIndex;

		[Token(Token = "0x40012FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[SerializeField]
		private uint _vertIndexInSide;

		[Token(Token = "0x40012FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private uint _vertCountInSide;

		[Token(Token = "0x4001300")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private int3 _hexPos;

		[Token(Token = "0x4001301")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private int3 delta;

		[Token(Token = "0x170004C7")]
		public uint layerIndex
		{
			[Token(Token = "0x60015F9")]
			[Address(RVA = "0xB1190C", Offset = "0xB1190C", VA = "0xB1190C")]
			get
			{
				return default(uint);
			}
		}

		[Token(Token = "0x170004C8")]
		public uint vertCountInSide
		{
			[Token(Token = "0x60015FA")]
			[Address(RVA = "0xB11914", Offset = "0xB11914", VA = "0xB11914")]
			get
			{
				return default(uint);
			}
		}

		[Token(Token = "0x170004C9")]
		public uint vertIndexInSide
		{
			[Token(Token = "0x60015FB")]
			[Address(RVA = "0xB1191C", Offset = "0xB1191C", VA = "0xB1191C")]
			get
			{
				return default(uint);
			}
		}

		[Token(Token = "0x170004CA")]
		public uint sideIndex
		{
			[Token(Token = "0x60015FC")]
			[Address(RVA = "0xB11924", Offset = "0xB11924", VA = "0xB11924")]
			get
			{
				return default(uint);
			}
		}

		[Token(Token = "0x170004CB")]
		public uint vertIndex
		{
			[Token(Token = "0x60015FD")]
			[Address(RVA = "0xB1192C", Offset = "0xB1192C", VA = "0xB1192C")]
			get
			{
				return default(uint);
			}
			[Token(Token = "0x60015FE")]
			[Address(RVA = "0xB11934", Offset = "0xB11934", VA = "0xB11934")]
			set
			{
			}
		}

		[Token(Token = "0x170004CC")]
		public int3 hexPos3
		{
			[Token(Token = "0x60015FF")]
			[Address(RVA = "0xB11B44", Offset = "0xB11B44", VA = "0xB11B44")]
			get
			{
				return default(int3);
			}
		}

		[Token(Token = "0x170004CD")]
		public int2 hexPos2
		{
			[Token(Token = "0x6001600")]
			[Address(RVA = "0xB11B50", Offset = "0xB11B50", VA = "0xB11B50")]
			get
			{
				return default(int2);
			}
		}

		[Token(Token = "0x170004CE")]
		public int2 dualPos2
		{
			[Token(Token = "0x6001601")]
			[Address(RVA = "0xB11B58", Offset = "0xB11B58", VA = "0xB11B58")]
			get
			{
				return default(int2);
			}
		}

		[Token(Token = "0x6001602")]
		[Address(RVA = "0xB11B70", Offset = "0xB11B70", VA = "0xB11B70")]
		public int3 GetAndIncrement()
		{
			return default(int3);
		}

		[Token(Token = "0x6001603")]
		[Address(RVA = "0xB11B9C", Offset = "0xB11B9C", VA = "0xB11B9C")]
		public static HexOnionIterator GetWidthDelta(int3 delta)
		{
			return default(HexOnionIterator);
		}

		[Token(Token = "0x6001604")]
		[Address(RVA = "0xB11BB0", Offset = "0xB11BB0", VA = "0xB11BB0")]
		public static HexOnionIterator GetAt(uint vertIndex)
		{
			return default(HexOnionIterator);
		}

		[Token(Token = "0x6001605")]
		[Address(RVA = "0xB1198C", Offset = "0xB1198C", VA = "0xB1198C")]
		public int3 Increment()
		{
			return default(int3);
		}

		[Token(Token = "0x6001606")]
		[Address(RVA = "0xB11C00", Offset = "0xB11C00", VA = "0xB11C00")]
		public int3 Decrement()
		{
			return default(int3);
		}
	}
	[Token(Token = "0x2000302")]
	internal class HexOnionIteratorGizmo : MonoBehaviour
	{
		[Token(Token = "0x6001607")]
		[Address(RVA = "0xB11D88", Offset = "0xB11D88", VA = "0xB11D88")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6001608")]
		[Address(RVA = "0xB1202C", Offset = "0xB1202C", VA = "0xB1202C")]
		public HexOnionIteratorGizmo()
		{
		}
	}
}
namespace Os.Utils
{
	[Token(Token = "0x2000303")]
	public static class Bitwise
	{
		[Token(Token = "0x6001609")]
		[Address(RVA = "0xFB19F8", Offset = "0xFB19F8", VA = "0xFB19F8")]
		public static bool IsBitSet(byte b, int index)
		{
			return default(bool);
		}

		[Token(Token = "0x600160A")]
		[Address(RVA = "0xFB1A10", Offset = "0xFB1A10", VA = "0xFB1A10")]
		public static bool IsBitSet(int b, int index)
		{
			return default(bool);
		}

		[Token(Token = "0x600160B")]
		[Address(RVA = "0xFB1A24", Offset = "0xFB1A24", VA = "0xFB1A24")]
		public static void SetBit(ref byte b, int index, bool value)
		{
		}

		[Token(Token = "0x600160C")]
		[Address(RVA = "0xFB1A48", Offset = "0xFB1A48", VA = "0xFB1A48")]
		public static byte GetByte(bool bit0 = false, bool bit1 = false, bool bit2 = false, bool bit3 = false, bool bit4 = false, bool bit5 = false, bool bit6 = false, bool bit7 = false)
		{
			return default(byte);
		}
	}
	[Serializable]
	[Token(Token = "0x2000304")]
	public struct ByteFloat
	{
		[Token(Token = "0x4001302")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public byte value;

		[Token(Token = "0x4001303")]
		public const byte max = byte.MaxValue;

		[Token(Token = "0x4001304")]
		public const int factor = 256;

		[Token(Token = "0x4001305")]
		public const byte half = 127;

		[Token(Token = "0x170004CF")]
		public float f
		{
			[Token(Token = "0x600160D")]
			[Address(RVA = "0x8DFC60", Offset = "0x8DFC60", VA = "0x8DFC60")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600160E")]
			[Address(RVA = "0x8DFC90", Offset = "0x8DFC90", VA = "0x8DFC90")]
			set
			{
			}
		}

		[Token(Token = "0x600160F")]
		[Address(RVA = "0x8DFD00", Offset = "0x8DFD00", VA = "0x8DFD00")]
		public ByteFloat(float value)
		{
		}

		[Token(Token = "0x6001610")]
		[Address(RVA = "0x8DFC78", Offset = "0x8DFC78", VA = "0x8DFC78")]
		public static float ByteToFloat(byte b)
		{
			return default(float);
		}

		[Token(Token = "0x6001611")]
		[Address(RVA = "0x8DFCD0", Offset = "0x8DFCD0", VA = "0x8DFCD0")]
		public static byte FloatToByte(float f)
		{
			return default(byte);
		}

		[Token(Token = "0x6001612")]
		[Address(RVA = "0x8DFD40", Offset = "0x8DFD40", VA = "0x8DFD40")]
		public static explicit operator float(ByteFloat b)
		{
			return default(float);
		}

		[Token(Token = "0x6001613")]
		[Address(RVA = "0x8DFD58", Offset = "0x8DFD58", VA = "0x8DFD58")]
		public static explicit operator ByteFloat(float f)
		{
			return default(ByteFloat);
		}

		[Token(Token = "0x6001614")]
		[Address(RVA = "0x8DFD8C", Offset = "0x8DFD8C", VA = "0x8DFD8C", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6001615")]
		[Address(RVA = "0x8DFE10", Offset = "0x8DFE10", VA = "0x8DFE10")]
		public static bool operator ==(ByteFloat a, ByteFloat b)
		{
			return default(bool);
		}

		[Token(Token = "0x6001616")]
		[Address(RVA = "0x8DFE20", Offset = "0x8DFE20", VA = "0x8DFE20")]
		public static bool operator !=(ByteFloat a, ByteFloat b)
		{
			return default(bool);
		}

		[Token(Token = "0x6001617")]
		[Address(RVA = "0x8DFE30", Offset = "0x8DFE30", VA = "0x8DFE30", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}
	}
	[Serializable]
	[Token(Token = "0x2000305")]
	public struct ByteFloat2
	{
		[Token(Token = "0x4001306")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public byte x;

		[Token(Token = "0x4001307")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		public byte y;

		[Token(Token = "0x170004D0")]
		public float fx
		{
			[Token(Token = "0x6001618")]
			[Address(RVA = "0x8DFE38", Offset = "0x8DFE38", VA = "0x8DFE38")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001619")]
			[Address(RVA = "0x8DFE50", Offset = "0x8DFE50", VA = "0x8DFE50")]
			set
			{
			}
		}

		[Token(Token = "0x170004D1")]
		public float fy
		{
			[Token(Token = "0x600161A")]
			[Address(RVA = "0x8DFE90", Offset = "0x8DFE90", VA = "0x8DFE90")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600161B")]
			[Address(RVA = "0x8DFEA8", Offset = "0x8DFEA8", VA = "0x8DFEA8")]
			set
			{
			}
		}

		[Token(Token = "0x600161C")]
		[Address(RVA = "0x8DFEE8", Offset = "0x8DFEE8", VA = "0x8DFEE8")]
		public ByteFloat2(float fx, float fy)
		{
		}

		[Token(Token = "0x600161D")]
		[Address(RVA = "0x8DFF50", Offset = "0x8DFF50", VA = "0x8DFF50")]
		public static explicit operator Vector2(ByteFloat2 b)
		{
			return default(Vector2);
		}

		[Token(Token = "0x600161E")]
		[Address(RVA = "0x8DFF74", Offset = "0x8DFF74", VA = "0x8DFF74")]
		public static explicit operator int2(ByteFloat2 b)
		{
			return default(int2);
		}

		[Token(Token = "0x600161F")]
		[Address(RVA = "0x8DFF84", Offset = "0x8DFF84", VA = "0x8DFF84")]
		public static explicit operator ByteFloat2(Vector2 f)
		{
			return default(ByteFloat2);
		}

		[Token(Token = "0x6001620")]
		[Address(RVA = "0x8DFFAC", Offset = "0x8DFFAC", VA = "0x8DFFAC")]
		public static explicit operator ByteFloat2(int2 f)
		{
			return default(ByteFloat2);
		}

		[Token(Token = "0x6001621")]
		[Address(RVA = "0x8DFFC0", Offset = "0x8DFFC0", VA = "0x8DFFC0", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6001622")]
		[Address(RVA = "0x8E0058", Offset = "0x8E0058", VA = "0x8E0058")]
		public static bool operator ==(ByteFloat2 a, ByteFloat2 b)
		{
			return default(bool);
		}

		[Token(Token = "0x6001623")]
		[Address(RVA = "0x8E007C", Offset = "0x8E007C", VA = "0x8E007C")]
		public static bool operator !=(ByteFloat2 a, ByteFloat2 b)
		{
			return default(bool);
		}

		[Token(Token = "0x6001624")]
		[Address(RVA = "0x8E00A0", Offset = "0x8E00A0", VA = "0x8E00A0", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}
	}
	[Serializable]
	[Token(Token = "0x2000306")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x6F1238", Offset = "0x6F1238")]
	public struct ByteFloat3
	{
		[Token(Token = "0x4001308")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public byte x;

		[Token(Token = "0x4001309")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		public byte y;

		[Token(Token = "0x400130A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
		public byte z;

		[Token(Token = "0x170004D2")]
		public float fx
		{
			[Token(Token = "0x6001625")]
			[Address(RVA = "0x8E00BC", Offset = "0x8E00BC", VA = "0x8E00BC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001626")]
			[Address(RVA = "0x8E00D4", Offset = "0x8E00D4", VA = "0x8E00D4")]
			set
			{
			}
		}

		[Token(Token = "0x170004D3")]
		public float fy
		{
			[Token(Token = "0x6001627")]
			[Address(RVA = "0x8E0114", Offset = "0x8E0114", VA = "0x8E0114")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001628")]
			[Address(RVA = "0x8E012C", Offset = "0x8E012C", VA = "0x8E012C")]
			set
			{
			}
		}

		[Token(Token = "0x170004D4")]
		public float fz
		{
			[Token(Token = "0x6001629")]
			[Address(RVA = "0x8E016C", Offset = "0x8E016C", VA = "0x8E016C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600162A")]
			[Address(RVA = "0x8E0184", Offset = "0x8E0184", VA = "0x8E0184")]
			set
			{
			}
		}

		[Token(Token = "0x170004D5")]
		public byte Item
		{
			[Token(Token = "0x600162B")]
			[Address(RVA = "0x8E01C4", Offset = "0x8E01C4", VA = "0x8E01C4")]
			get
			{
				return default(byte);
			}
			[Token(Token = "0x600162C")]
			[Address(RVA = "0x8E022C", Offset = "0x8E022C", VA = "0x8E022C")]
			set
			{
			}
		}

		[Token(Token = "0x170004D6")]
		public Vector3 normal
		{
			[Token(Token = "0x600162D")]
			[Address(RVA = "0x8E0294", Offset = "0x8E0294", VA = "0x8E0294")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x600162E")]
		[Address(RVA = "0x8E02E0", Offset = "0x8E02E0", VA = "0x8E02E0")]
		public ByteFloat3(float fx, float fy, float fz)
		{
		}

		[Token(Token = "0x600162F")]
		[Address(RVA = "0x8E0370", Offset = "0x8E0370", VA = "0x8E0370")]
		public static explicit operator Vector3(ByteFloat3 b)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001630")]
		[Address(RVA = "0x8E03A4", Offset = "0x8E03A4", VA = "0x8E03A4")]
		public static explicit operator ByteFloat3(Vector3 f)
		{
			return default(ByteFloat3);
		}

		[Token(Token = "0x6001631")]
		[Address(RVA = "0x8E03D8", Offset = "0x8E03D8", VA = "0x8E03D8", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6001632")]
		[Address(RVA = "0x8E048C", Offset = "0x8E048C", VA = "0x8E048C")]
		public static bool operator ==(ByteFloat3 a, ByteFloat3 b)
		{
			return default(bool);
		}

		[Token(Token = "0x6001633")]
		[Address(RVA = "0x8E04C4", Offset = "0x8E04C4", VA = "0x8E04C4")]
		public static bool operator !=(ByteFloat3 a, ByteFloat3 b)
		{
			return default(bool);
		}

		[Token(Token = "0x6001634")]
		[Address(RVA = "0x8E04FC", Offset = "0x8E04FC", VA = "0x8E04FC", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}
	}
	[Serializable]
	[Token(Token = "0x2000307")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x6F1270", Offset = "0x6F1270")]
	public struct SbyteFloat3
	{
		[Token(Token = "0x400130B")]
		public const int max = 254;

		[Token(Token = "0x400130C")]
		public const float maxf = 254f;

		[Token(Token = "0x400130D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public sbyte x;

		[Token(Token = "0x400130E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		public sbyte y;

		[Token(Token = "0x400130F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
		public sbyte z;

		[Token(Token = "0x170004D7")]
		public float fx
		{
			[Token(Token = "0x6001635")]
			[Address(RVA = "0x10A2F8C", Offset = "0x10A2F8C", VA = "0x10A2F8C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001636")]
			[Address(RVA = "0x10A2FA4", Offset = "0x10A2FA4", VA = "0x10A2FA4")]
			set
			{
			}
		}

		[Token(Token = "0x170004D8")]
		public float fy
		{
			[Token(Token = "0x6001637")]
			[Address(RVA = "0x10A2FD8", Offset = "0x10A2FD8", VA = "0x10A2FD8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001638")]
			[Address(RVA = "0x10A2FF0", Offset = "0x10A2FF0", VA = "0x10A2FF0")]
			set
			{
			}
		}

		[Token(Token = "0x170004D9")]
		public float fz
		{
			[Token(Token = "0x6001639")]
			[Address(RVA = "0x10A3024", Offset = "0x10A3024", VA = "0x10A3024")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600163A")]
			[Address(RVA = "0x10A303C", Offset = "0x10A303C", VA = "0x10A303C")]
			set
			{
			}
		}

		[Token(Token = "0x170004DA")]
		public sbyte Item
		{
			[Token(Token = "0x600163B")]
			[Address(RVA = "0x10A3070", Offset = "0x10A3070", VA = "0x10A3070")]
			get
			{
				return default(sbyte);
			}
			[Token(Token = "0x600163C")]
			[Address(RVA = "0x10A30D8", Offset = "0x10A30D8", VA = "0x10A30D8")]
			set
			{
			}
		}

		[Token(Token = "0x170004DB")]
		public Vector3 normal
		{
			[Token(Token = "0x600163D")]
			[Address(RVA = "0x10A3140", Offset = "0x10A3140", VA = "0x10A3140")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x600163E")]
		[Address(RVA = "0x10A317C", Offset = "0x10A317C", VA = "0x10A317C")]
		public SbyteFloat3(float fx, float fy, float fz)
		{
		}

		[Token(Token = "0x600163F")]
		[Address(RVA = "0x10A31E8", Offset = "0x10A31E8", VA = "0x10A31E8")]
		public SbyteFloat3(int x, int y, int z)
		{
		}

		[Token(Token = "0x6001640")]
		[Address(RVA = "0x10A31F8", Offset = "0x10A31F8", VA = "0x10A31F8")]
		public static explicit operator Vector3(SbyteFloat3 b)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001641")]
		[Address(RVA = "0x10A322C", Offset = "0x10A322C", VA = "0x10A322C")]
		public static explicit operator float3(SbyteFloat3 b)
		{
			return default(float3);
		}

		[Token(Token = "0x6001642")]
		[Address(RVA = "0x10A3260", Offset = "0x10A3260", VA = "0x10A3260")]
		public static explicit operator int3(SbyteFloat3 b)
		{
			return default(int3);
		}

		[Token(Token = "0x6001643")]
		[Address(RVA = "0x10A3278", Offset = "0x10A3278", VA = "0x10A3278")]
		public static explicit operator SbyteFloat3(Vector3 f)
		{
			return default(SbyteFloat3);
		}

		[Token(Token = "0x6001644")]
		[Address(RVA = "0x10A32AC", Offset = "0x10A32AC", VA = "0x10A32AC")]
		public static explicit operator SbyteFloat3(int3 f)
		{
			return default(SbyteFloat3);
		}

		[Token(Token = "0x6001645")]
		[Address(RVA = "0x10A32C4", Offset = "0x10A32C4", VA = "0x10A32C4", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6001646")]
		[Address(RVA = "0x10A3378", Offset = "0x10A3378", VA = "0x10A3378")]
		public static bool operator ==(SbyteFloat3 a, SbyteFloat3 b)
		{
			return default(bool);
		}

		[Token(Token = "0x6001647")]
		[Address(RVA = "0x10A33B0", Offset = "0x10A33B0", VA = "0x10A33B0")]
		public static bool operator !=(SbyteFloat3 a, SbyteFloat3 b)
		{
			return default(bool);
		}

		[Token(Token = "0x6001648")]
		[Address(RVA = "0x10A33E8", Offset = "0x10A33E8", VA = "0x10A33E8")]
		public static SbyteFloat3 operator *(int3x3 a, SbyteFloat3 b)
		{
			return default(SbyteFloat3);
		}

		[Token(Token = "0x6001649")]
		[Address(RVA = "0x10A3450", Offset = "0x10A3450", VA = "0x10A3450", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x600164A")]
		[Address(RVA = "0x10A3478", Offset = "0x10A3478", VA = "0x10A3478", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000308")]
	public static class DictPool<TKey, TValue>
	{
		[Token(Token = "0x4001310")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<Dictionary<TKey, TValue>> pool;

		[Token(Token = "0x600164B")]
		public static Dictionary<TKey, TValue> Get(int capacity = 4)
		{
			return null;
		}

		[Token(Token = "0x600164C")]
		public static void Return(ref Dictionary<TKey, TValue> list)
		{
		}
	}
	[Token(Token = "0x2000309")]
	public static class DictPoolExtension
	{
		[Token(Token = "0x600164E")]
		public static void ReturnToPool<K, V>(this Dictionary<K, V> list)
		{
		}
	}
	[Token(Token = "0x200030A")]
	public static class Extensions
	{
		[Token(Token = "0x600164F")]
		[Address(RVA = "0xE7A5DC", Offset = "0xE7A5DC", VA = "0xE7A5DC")]
		public static void SetSingleLayer(this Camera camera, string layerName, bool enabled)
		{
		}

		[Token(Token = "0x6001650")]
		[Address(RVA = "0xE7A6BC", Offset = "0xE7A6BC", VA = "0xE7A6BC")]
		public static bool KeepGoing(this Stopwatch stopwatch, int milliseconds)
		{
			return default(bool);
		}

		[Token(Token = "0x6001651")]
		public static T GetOrAddComponent<T>(this Component g) where T : Component
		{
			return null;
		}
	}
	[Token(Token = "0x200030B")]
	public static class ExtraMath
	{
		[Token(Token = "0x4001311")]
		public const float third = 1f / 3f;

		[Token(Token = "0x4001312")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly float toneScale;

		[Token(Token = "0x4001313")]
		public const float invMaxByte = 0.003921569f;

		[Token(Token = "0x6001652")]
		public static void Swap<T>(ref T a, ref T b)
		{
		}

		[Token(Token = "0x6001653")]
		public static void Swap<T>(ref T a, ref T b, ref T c)
		{
		}

		[Token(Token = "0x6001654")]
		public static void Swap<T>(ref T a, ref T b, ref T c, ref T d)
		{
		}

		[Token(Token = "0x6001655")]
		[Address(RVA = "0xE7BB6C", Offset = "0xE7BB6C", VA = "0xE7BB6C")]
		public static float2 Rotate2D90(this float2 vector)
		{
			return default(float2);
		}

		[Token(Token = "0x6001656")]
		[Address(RVA = "0xE7BB7C", Offset = "0xE7BB7C", VA = "0xE7BB7C")]
		public static float2 Rotate2D180(this float2 vector)
		{
			return default(float2);
		}

		[Token(Token = "0x6001657")]
		[Address(RVA = "0xE7BB88", Offset = "0xE7BB88", VA = "0xE7BB88")]
		public static float2 Rotate2D270(this float2 vector)
		{
			return default(float2);
		}

		[Token(Token = "0x6001658")]
		[Address(RVA = "0xE7BB9C", Offset = "0xE7BB9C", VA = "0xE7BB9C")]
		public static Vector2 Rotate2D90(this Vector2 vector)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001659")]
		[Address(RVA = "0xE7BBAC", Offset = "0xE7BBAC", VA = "0xE7BBAC")]
		public static Vector2 Rotate2D180(this Vector2 vector)
		{
			return default(Vector2);
		}

		[Token(Token = "0x600165A")]
		[Address(RVA = "0xE7BBB8", Offset = "0xE7BBB8", VA = "0xE7BBB8")]
		public static Vector2 Rotate2D270(this Vector2 vector)
		{
			return default(Vector2);
		}

		[Token(Token = "0x600165B")]
		[Address(RVA = "0xE7BBCC", Offset = "0xE7BBCC", VA = "0xE7BBCC")]
		public static float2 Rotate2D(float2 vector, float degrees)
		{
			return default(float2);
		}

		[Token(Token = "0x600165C")]
		[Address(RVA = "0xE7BD48", Offset = "0xE7BD48", VA = "0xE7BD48")]
		public static Vector3 Rotate90Y(this Vector3 vector)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600165D")]
		[Address(RVA = "0xE7BC6C", Offset = "0xE7BC6C", VA = "0xE7BC6C")]
		public static float2 GetRotate2DFactors(float radians)
		{
			return default(float2);
		}

		[Token(Token = "0x600165E")]
		[Address(RVA = "0xE7BD2C", Offset = "0xE7BD2C", VA = "0xE7BD2C")]
		public static float2 ApplyRotate2DFactors(float2 vector, float2 factors)
		{
			return default(float2);
		}

		[Token(Token = "0x600165F")]
		[Address(RVA = "0xE7BD58", Offset = "0xE7BD58", VA = "0xE7BD58")]
		public static Vector3 XZtoXYZ(Vector2 xz, float y = 0f)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001660")]
		[Address(RVA = "0xE7BD68", Offset = "0xE7BD68", VA = "0xE7BD68")]
		public static float3 XZtoXYZ(float2 xz, float y = 0f)
		{
			return default(float3);
		}

		[Token(Token = "0x6001661")]
		[Address(RVA = "0xE7BD78", Offset = "0xE7BD78", VA = "0xE7BD78")]
		public static Vector3 GetXYZfromXZ(this Vector2 xz, float y = 0f)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001662")]
		[Address(RVA = "0xE7BD88", Offset = "0xE7BD88", VA = "0xE7BD88")]
		public static float3 GetXYZfromXZ(this float2 xz, float y = 0f)
		{
			return default(float3);
		}

		[Token(Token = "0x6001663")]
		[Address(RVA = "0xE7BD98", Offset = "0xE7BD98", VA = "0xE7BD98")]
		public static float4 GetXYZWfromXZ(this float2 xz, float y = 0f, float w = 0f)
		{
			return default(float4);
		}

		[Token(Token = "0x6001664")]
		[Address(RVA = "0xE7BDA8", Offset = "0xE7BDA8", VA = "0xE7BDA8")]
		public static float4 SetW(this float3 xyz, float w = 0f)
		{
			return default(float4);
		}

		[Token(Token = "0x6001665")]
		[Address(RVA = "0xE7BDAC", Offset = "0xE7BDAC", VA = "0xE7BDAC")]
		public static float3 SetX(this float3 vector, float x = 0f)
		{
			return default(float3);
		}

		[Token(Token = "0x6001666")]
		[Address(RVA = "0xE7BDB4", Offset = "0xE7BDB4", VA = "0xE7BDB4")]
		public static float3 SetY(this float3 vector, float y = 0f)
		{
			return default(float3);
		}

		[Token(Token = "0x6001667")]
		[Address(RVA = "0xE7BDBC", Offset = "0xE7BDBC", VA = "0xE7BDBC")]
		public static float3 SetZ(this float3 vector, float z = 0f)
		{
			return default(float3);
		}

		[Token(Token = "0x6001668")]
		[Address(RVA = "0xE7BDC4", Offset = "0xE7BDC4", VA = "0xE7BDC4")]
		public static Vector3 SetX(this Vector3 vector, float x = 0f)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001669")]
		[Address(RVA = "0xE7BDCC", Offset = "0xE7BDCC", VA = "0xE7BDCC")]
		public static Vector3 SetY(this Vector3 vector, float y = 0f)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600166A")]
		[Address(RVA = "0xE7BDD4", Offset = "0xE7BDD4", VA = "0xE7BDD4")]
		public static Vector3 SetZ(this Vector3 vector, float z = 0f)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600166B")]
		[Address(RVA = "0xE7BDDC", Offset = "0xE7BDDC", VA = "0xE7BDDC")]
		public static Vector4 SetW(this Vector3 vector, float w = 0f)
		{
			return default(Vector4);
		}

		[Token(Token = "0x600166C")]
		[Address(RVA = "0xE7BE0C", Offset = "0xE7BE0C", VA = "0xE7BE0C")]
		public static Color SetA(this Color color, float a = 0f)
		{
			return default(Color);
		}

		[Token(Token = "0x600166D")]
		[Address(RVA = "0xE7BE40", Offset = "0xE7BE40", VA = "0xE7BE40")]
		public static Vector2 SetX(this Vector2 vector, float x = 0f)
		{
			return default(Vector2);
		}

		[Token(Token = "0x600166E")]
		[Address(RVA = "0xE7BE48", Offset = "0xE7BE48", VA = "0xE7BE48")]
		public static Vector2 SetY(this Vector2 vector, float y = 0f)
		{
			return default(Vector2);
		}

		[Token(Token = "0x600166F")]
		[Address(RVA = "0xE7BE50", Offset = "0xE7BE50", VA = "0xE7BE50")]
		public static Vector3 SetZ(this Vector2 vector, float z = 0f)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001670")]
		[Address(RVA = "0xE7BE54", Offset = "0xE7BE54", VA = "0xE7BE54")]
		public static float2 GetXZ(this float3 xyz)
		{
			return default(float2);
		}

		[Token(Token = "0x6001671")]
		[Address(RVA = "0xE7BE5C", Offset = "0xE7BE5C", VA = "0xE7BE5C")]
		public static Vector2 GetXZ(this Vector3 xyz)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001672")]
		[Address(RVA = "0xE7BE64", Offset = "0xE7BE64", VA = "0xE7BE64")]
		public static Vector3 GetClampedMagnitude(this Vector3 vector, float maxMagnitude)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001673")]
		[Address(RVA = "0xE7BEF0", Offset = "0xE7BEF0", VA = "0xE7BEF0")]
		public static Vector3 GetClampedMagnitudeOne(this Vector3 vector)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001674")]
		[Address(RVA = "0xE7BF6C", Offset = "0xE7BF6C", VA = "0xE7BF6C")]
		public static Vector2 Clamp01(Vector2 vector)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001675")]
		[Address(RVA = "0xE7BFA8", Offset = "0xE7BFA8", VA = "0xE7BFA8")]
		public static float Abs(this float x)
		{
			return default(float);
		}

		[Token(Token = "0x6001676")]
		[Address(RVA = "0xE7BFB0", Offset = "0xE7BFB0", VA = "0xE7BFB0")]
		public static float Pow2(this float x)
		{
			return default(float);
		}

		[Token(Token = "0x6001677")]
		[Address(RVA = "0xE7BFB8", Offset = "0xE7BFB8", VA = "0xE7BFB8")]
		public static int Pow2(this int x)
		{
			return default(int);
		}

		[Token(Token = "0x6001678")]
		[Address(RVA = "0xE7BFC0", Offset = "0xE7BFC0", VA = "0xE7BFC0")]
		public static bool OnEdge(this int3x2 bounds, int3 pos)
		{
			return default(bool);
		}

		[Token(Token = "0x6001679")]
		[Address(RVA = "0xE7C094", Offset = "0xE7C094", VA = "0xE7C094")]
		public static bool Contains(this int3x2 bounds, int3 pos)
		{
			return default(bool);
		}

		[Token(Token = "0x600167A")]
		[Address(RVA = "0xE7C0F0", Offset = "0xE7C0F0", VA = "0xE7C0F0")]
		public static bool Contains(this int3x2 bounds, float3 pos)
		{
			return default(bool);
		}

		[Token(Token = "0x600167B")]
		[Address(RVA = "0xE7C164", Offset = "0xE7C164", VA = "0xE7C164")]
		public static bool Contains(this int3x2 bounds0, int3x2 bounds1)
		{
			return default(bool);
		}

		[Token(Token = "0x600167C")]
		[Address(RVA = "0xE7C1D4", Offset = "0xE7C1D4", VA = "0xE7C1D4")]
		public static bool Intersects(this int3x2 bounds0, int3x2 bounds1)
		{
			return default(bool);
		}

		[Token(Token = "0x600167D")]
		[Address(RVA = "0xE7C244", Offset = "0xE7C244", VA = "0xE7C244")]
		public static int3x2 Encapsulate(this int3x2 bounds, int3 hexPos3)
		{
			return default(int3x2);
		}

		[Token(Token = "0x600167E")]
		[Address(RVA = "0xE7C2AC", Offset = "0xE7C2AC", VA = "0xE7C2AC")]
		public static int3x2 Encapsulate(this int3x2 bounds0, int3x2 bounds1)
		{
			return default(int3x2);
		}

		[Token(Token = "0x600167F")]
		[Address(RVA = "0xE7C328", Offset = "0xE7C328", VA = "0xE7C328")]
		public static Vector2 Encapsulate(this Vector2 minMax, float value)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001680")]
		[Address(RVA = "0xE7C378", Offset = "0xE7C378", VA = "0xE7C378")]
		public static int3 ClosestPoint(this int3x2 bounds0, int3 pos)
		{
			return default(int3);
		}

		[Token(Token = "0x6001681")]
		[Address(RVA = "0xE7C3D0", Offset = "0xE7C3D0", VA = "0xE7C3D0")]
		public static int3 Center(this int3x2 bounds0)
		{
			return default(int3);
		}

		[Token(Token = "0x6001682")]
		[Address(RVA = "0xE7C420", Offset = "0xE7C420", VA = "0xE7C420")]
		public static int Pow(int x, uint pow)
		{
			return default(int);
		}

		[Token(Token = "0x6001683")]
		[Address(RVA = "0xE7C450", Offset = "0xE7C450", VA = "0xE7C450")]
		public static float InverseLerpUnclamped(float min, float max, float value)
		{
			return default(float);
		}

		[Token(Token = "0x6001684")]
		[Address(RVA = "0xE7C470", Offset = "0xE7C470", VA = "0xE7C470")]
		public static Vector3 GetBarycentric(Vector3 point, Vector3 p0, Vector3 p1, Vector3 p2)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001685")]
		[Address(RVA = "0xE7C5A4", Offset = "0xE7C5A4", VA = "0xE7C5A4")]
		public static Vector3 ClosestPointOnTriangle(Vector3 point, Vector3 p0, Vector3 p1, Vector3 p2)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001686")]
		[Address(RVA = "0xE7C6D4", Offset = "0xE7C6D4", VA = "0xE7C6D4")]
		public static float Cross2(in Vector2 v0, in Vector2 v1)
		{
			return default(float);
		}

		[Token(Token = "0x6001687")]
		[Address(RVA = "0xE7C6EC", Offset = "0xE7C6EC", VA = "0xE7C6EC")]
		public static Vector2 InvBilinear(Vector2 p0, Vector2 p1, Vector2 p2, Vector2 p3, Vector2 p)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001688")]
		public static int BinarySearch<T, Y>(this List<T> list, Y value) where T : IComparable<Y>
		{
			return default(int);
		}

		[Token(Token = "0x6001689")]
		public static int BinarySearchComponent<T, Y>(this Transform transform, Y item, int marginMin = 0, int marginMax = 0) where T : Component, IComparable<Y>
		{
			return default(int);
		}

		[Token(Token = "0x600168A")]
		public static int BinarySearchComponent<T>(this Transform transform, T item, int marginMin = 0, int marginMax = 0) where T : Component, IComparable<T>
		{
			return default(int);
		}

		[Token(Token = "0x600168B")]
		[Address(RVA = "0xE7C8FC", Offset = "0xE7C8FC", VA = "0xE7C8FC")]
		public static int BinarySearchTransformX(this Transform transform, float x, int marginMin = 0, int marginMax = 0)
		{
			return default(int);
		}

		[Token(Token = "0x600168C")]
		[Address(RVA = "0xE7C9EC", Offset = "0xE7C9EC", VA = "0xE7C9EC")]
		public static float ToneOffsetToPitch(float tone)
		{
			return default(float);
		}

		[Token(Token = "0x600168D")]
		public static void Add<T>(this List<T> list, T t0, T t1, T t2)
		{
		}

		[Token(Token = "0x600168E")]
		[Address(RVA = "0xE7CA60", Offset = "0xE7CA60", VA = "0xE7CA60")]
		public static (Vector3, float) GetDirectionAndDistanceTo(this Vector3 srcPos, Vector3 dstPos)
		{
			return default((Vector3, float));
		}

		[Token(Token = "0x600168F")]
		[Address(RVA = "0xE7CB84", Offset = "0xE7CB84", VA = "0xE7CB84")]
		public static float GetInverseSelfMultiply(this float f)
		{
			return default(float);
		}

		[Token(Token = "0x6001690")]
		[Address(RVA = "0xE7CBF8", Offset = "0xE7CBF8", VA = "0xE7CBF8")]
		public static Color GetLinearOrGamma(this Color color)
		{
			return default(Color);
		}

		[Token(Token = "0x6001691")]
		[Address(RVA = "0xE7CC74", Offset = "0xE7CC74", VA = "0xE7CC74")]
		public static Matrix4x4 Lerp(Matrix4x4 m0, Matrix4x4 m1, float t)
		{
			return default(Matrix4x4);
		}
	}
	[Token(Token = "0x200030C")]
	public static class Intersections
	{
		[Token(Token = "0x4001314")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Vector3[] corners;

		[Token(Token = "0x4001315")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Stack<HashSet<Vector3>> axisHashSets;

		[Token(Token = "0x6001693")]
		[Address(RVA = "0xB1AE2C", Offset = "0xB1AE2C", VA = "0xB1AE2C")]
		public static bool TriangleRay(Vector3 p1, Vector3 p2, Vector3 p3, Ray ray)
		{
			return default(bool);
		}

		[Token(Token = "0x6001694")]
		[Address(RVA = "0xB1AFF0", Offset = "0xB1AFF0", VA = "0xB1AFF0")]
		public static bool BoxBox(Vector3 min0, Vector3 max0, Vector3 min1, Vector3 max1)
		{
			return default(bool);
		}

		[Token(Token = "0x6001695")]
		[Address(RVA = "0xB1B048", Offset = "0xB1B048", VA = "0xB1B048")]
		public static bool TriangleTriangle(Vector3 p0, Vector3 p1, Vector3 p2, Vector3 v0, Vector3 v1, Vector3 v2, float minDistance = 0f)
		{
			return default(bool);
		}

		[Token(Token = "0x6001696")]
		[Address(RVA = "0xB1B508", Offset = "0xB1B508", VA = "0xB1B508")]
		private static bool TriangleTriangleInternal(Vector3 p0, Vector3 p1, Vector3 p2, Vector3 v0, Vector3 v1, Vector3 v2, float minDistance)
		{
			return default(bool);
		}

		[Token(Token = "0x6001697")]
		[Address(RVA = "0xB1B948", Offset = "0xB1B948", VA = "0xB1B948")]
		public static bool OrientedBoxOrientedBox(Matrix4x4 box0, Matrix4x4 box1)
		{
			return default(bool);
		}

		[Token(Token = "0x6001698")]
		[Address(RVA = "0xB1BB18", Offset = "0xB1BB18", VA = "0xB1BB18")]
		private static bool OrientedBoxOrientedBoxInternal(Matrix4x4 box0, Matrix4x4 box1, HashSet<Vector3> axisList)
		{
			return default(bool);
		}

		[Token(Token = "0x6001699")]
		[Address(RVA = "0xB1C850", Offset = "0xB1C850", VA = "0xB1C850")]
		public static bool OrientedBoxTriangle(Matrix4x4 box0, Vector3 p0, Vector3 p1, Vector3 p2)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200030D")]
	public static class NumberStrings
	{
		[Token(Token = "0x4001316")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<int, string> dict;

		[Token(Token = "0x600169B")]
		[Address(RVA = "0x9EE034", Offset = "0x9EE034", VA = "0x9EE034")]
		public static string Get(int number)
		{
			return null;
		}
	}
	[Token(Token = "0x200030E")]
	public static class ListPool<T>
	{
		[Token(Token = "0x4001317")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<List<T>> pool;

		[Token(Token = "0x600169D")]
		public static List<T> Get()
		{
			return null;
		}

		[Token(Token = "0x600169E")]
		public static List<T> Get(int capacity)
		{
			return null;
		}

		[Token(Token = "0x600169F")]
		public static void Return(ref List<T> list)
		{
		}
	}
	[Token(Token = "0x200030F")]
	public static class ListPoolExtension
	{
		[Token(Token = "0x60016A1")]
		public static void ReturnToPool<T>(this List<T> list)
		{
		}

		[Token(Token = "0x60016A2")]
		public static List<T> GetListOfComponentsInChildren<T>(this GameObject gameObject) where T : Component
		{
			return null;
		}

		[Token(Token = "0x60016A3")]
		public static T Pop<T>(this List<T> list, int index)
		{
			return (T)null;
		}
	}
	[Token(Token = "0x2000310")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x6F12E8", Offset = "0x6F12E8")]
	public struct PooledList<T> : IDisposable, IList<T>, ICollection<T>, IEnumerable<T>, IEnumerable
	{
		[Token(Token = "0x4001318")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public List<T> list;

		[Token(Token = "0x170004DC")]
		public T Item
		{
			[Token(Token = "0x60016A6")]
			get
			{
				return (T)null;
			}
			[Token(Token = "0x60016A7")]
			set
			{
			}
		}

		[Token(Token = "0x170004DD")]
		public int Count
		{
			[Token(Token = "0x60016A8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170004DE")]
		public bool IsReadOnly
		{
			[Token(Token = "0x60016A9")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60016A4")]
		public PooledList(int capacity)
		{
		}

		[Token(Token = "0x60016A5")]
		public void Dispose()
		{
		}

		[Token(Token = "0x60016AA")]
		public void Add(T item)
		{
		}

		[Token(Token = "0x60016AB")]
		public void Clear()
		{
		}

		[Token(Token = "0x60016AC")]
		public bool Contains(T item)
		{
			return default(bool);
		}

		[Token(Token = "0x60016AD")]
		public void CopyTo(T[] array, int arrayIndex)
		{
		}

		[Token(Token = "0x60016AE")]
		public IEnumerator<T> GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x60016AF")]
		public int IndexOf(T item)
		{
			return default(int);
		}

		[Token(Token = "0x60016B0")]
		public void Insert(int index, T item)
		{
		}

		[Token(Token = "0x60016B1")]
		public bool Remove(T item)
		{
			return default(bool);
		}

		[Token(Token = "0x60016B2")]
		public void RemoveAt(int index)
		{
		}

		[Token(Token = "0x60016B3")]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}
	}
	[Token(Token = "0x2000311")]
	public struct ScopedProfiler : IDisposable
	{
		[Token(Token = "0x60016B4")]
		[Address(RVA = "0x10A14B8", Offset = "0x10A14B8", VA = "0x10A14B8")]
		public ScopedProfiler(string name)
		{
		}

		[Token(Token = "0x60016B5")]
		[Address(RVA = "0x10A3540", Offset = "0x10A3540", VA = "0x10A3540")]
		public ScopedProfiler(string name, UnityEngine.Object targetObject)
		{
		}

		[Token(Token = "0x60016B6")]
		[Address(RVA = "0x10A19E8", Offset = "0x10A19E8", VA = "0x10A19E8", Slot = "4")]
		private void System.IDisposable.Dispose()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000312")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x6F1320", Offset = "0x6F1320")]
	public struct Triplet<T>
	{
		[Token(Token = "0x4001319")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public T v0;

		[Token(Token = "0x400131A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public T v1;

		[Token(Token = "0x400131B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public T v2;

		[Token(Token = "0x170004DF")]
		public T Item
		{
			[Token(Token = "0x60016B8")]
			get
			{
				return (T)null;
			}
			[Token(Token = "0x60016B9")]
			set
			{
			}
		}

		[Token(Token = "0x60016B7")]
		public Triplet(T v0, T v1, T v2)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000313")]
	public class UnityEvent_Float : UnityEvent<float>
	{
		[Token(Token = "0x60016BA")]
		[Address(RVA = "0x1BD3B54", Offset = "0x1BD3B54", VA = "0x1BD3B54")]
		public UnityEvent_Float()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000314")]
	public class UnityEvent_Int : UnityEvent<int>
	{
		[Token(Token = "0x60016BB")]
		[Address(RVA = "0x1BD3BA0", Offset = "0x1BD3BA0", VA = "0x1BD3BA0")]
		public UnityEvent_Int()
		{
		}
	}
	[Token(Token = "0x2000315")]
	public static class UnityFunctions
	{
		[Token(Token = "0x2000316")]
		private struct HirearchyEnumerator : IEnumerator<Transform>, IEnumerator, IDisposable, IEnumerable<Transform>, IEnumerable
		{
			[Token(Token = "0x400131C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int siblingIndex;

			[Token(Token = "0x400131D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			private int siblingCount;

			[Token(Token = "0x400131E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private int depth;

			[Token(Token = "0x400131F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private bool includeInactive;

			[Token(Token = "0x4001320")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform transform;

			[Token(Token = "0x4001321")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Transform parent;

			[Token(Token = "0x170004E0")]
			public Transform Current
			{
				[Token(Token = "0x60016C1")]
				[Address(RVA = "0x107F38C", Offset = "0x107F38C", VA = "0x107F38C", Slot = "4")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004E1")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60016C2")]
				[Address(RVA = "0x107F394", Offset = "0x107F394", VA = "0x107F394", Slot = "7")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60016C3")]
			[Address(RVA = "0x107F39C", Offset = "0x107F39C", VA = "0x107F39C")]
			public HirearchyEnumerator(Transform t, bool includeInactive)
			{
			}

			[Token(Token = "0x60016C4")]
			[Address(RVA = "0x107F3B4", Offset = "0x107F3B4", VA = "0x107F3B4", Slot = "5")]
			public void Dispose()
			{
			}

			[Token(Token = "0x60016C5")]
			[Address(RVA = "0x107F3BC", Offset = "0x107F3BC", VA = "0x107F3BC", Slot = "6")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60016C6")]
			[Address(RVA = "0x107F5DC", Offset = "0x107F5DC", VA = "0x107F5DC", Slot = "8")]
			public void Reset()
			{
			}

			[Token(Token = "0x60016C7")]
			[Address(RVA = "0x107F650", Offset = "0x107F650", VA = "0x107F650", Slot = "9")]
			private IEnumerator<Transform> System.Collections.Generic.IEnumerable<UnityEngine.Transform>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x60016C8")]
			[Address(RVA = "0x107F6B0", Offset = "0x107F6B0", VA = "0x107F6B0", Slot = "10")]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x60016C9")]
			[Address(RVA = "0x107F710", Offset = "0x107F710", VA = "0x107F710", Slot = "3")]
			public override string ToString()
			{
				return null;
			}
		}

		[Token(Token = "0x60016BC")]
		public static T GetNewObject<T>(string name, Transform parent) where T : Component
		{
			return null;
		}

		[Token(Token = "0x60016BD")]
		public static T GetNewObject<T>(Transform parent) where T : Component
		{
			return null;
		}

		[Token(Token = "0x60016BE")]
		[Address(RVA = "0x1BD3BEC", Offset = "0x1BD3BEC", VA = "0x1BD3BEC")]
		public static GameObject GetNewGameObject(string name, Transform parent)
		{
			return null;
		}

		[Token(Token = "0x60016BF")]
		[Address(RVA = "0x1BD3C70", Offset = "0x1BD3C70", VA = "0x1BD3C70")]
		public static bool InView(this Camera camera, Vector3 worldPos, float margin = 0f)
		{
			return default(bool);
		}

		[Token(Token = "0x60016C0")]
		[Address(RVA = "0x1BD3CDC", Offset = "0x1BD3CDC", VA = "0x1BD3CDC")]
		public static IEnumerable<Transform> EnumerateHirearchy(this Transform t, bool includeInactive)
		{
			return null;
		}
	}
}
namespace Os.Utils.InEditor
{
	[Token(Token = "0x2000317")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x6F1368", Offset = "0x6F1368")]
	public sealed class EditorRoutineAttribute : Attribute
	{
		[Token(Token = "0x60016CA")]
		[Address(RVA = "0xE7913C", Offset = "0xE7913C", VA = "0xE7913C")]
		public EditorRoutineAttribute()
		{
		}
	}
}
namespace CielaSpike
{
	[Token(Token = "0x2000318")]
	public static class Ninja
	{
		[Token(Token = "0x4001322")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly object JumpToUnity;

		[Token(Token = "0x4001323")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly object JumpBack;

		[Token(Token = "0x60016CB")]
		[Address(RVA = "0x9EDF28", Offset = "0x9EDF28", VA = "0x9EDF28")]
		static Ninja()
		{
		}
	}
	[Token(Token = "0x2000319")]
	public class Task : IEnumerator
	{
		[Token(Token = "0x200031A")]
		private enum RunningState
		{
			[Token(Token = "0x400132B")]
			Init,
			[Token(Token = "0x400132C")]
			RunningAsync,
			[Token(Token = "0x400132D")]
			PendingYield,
			[Token(Token = "0x400132E")]
			ToBackground,
			[Token(Token = "0x400132F")]
			RunningSync,
			[Token(Token = "0x4001330")]
			CancellationRequested,
			[Token(Token = "0x4001331")]
			Done,
			[Token(Token = "0x4001332")]
			Error
		}

		[Token(Token = "0x200031B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F13A0", Offset = "0x6F13A0")]
		private sealed class <Wait>d__19 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001333")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001334")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001335")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Task <>4__this;

			[Token(Token = "0x170004E5")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60016DF")]
				[Address(RVA = "0x107CE40", Offset = "0x107CE40", VA = "0x107CE40", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004E6")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60016E1")]
				[Address(RVA = "0x107CE88", Offset = "0x107CE88", VA = "0x107CE88", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60016DC")]
			[Address(RVA = "0x107CDB4", Offset = "0x107CDB4", VA = "0x107CDB4")]
			[DebuggerHidden]
			public <Wait>d__19(int <>1__state)
			{
			}

			[Token(Token = "0x60016DD")]
			[Address(RVA = "0x107CDE0", Offset = "0x107CDE0", VA = "0x107CDE0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60016DE")]
			[Address(RVA = "0x107CDE4", Offset = "0x107CDE4", VA = "0x107CDE4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60016E0")]
			[Address(RVA = "0x107CE48", Offset = "0x107CE48", VA = "0x107CE48", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001324")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F8F1C", Offset = "0x6F8F1C")]
		private object <Current>k__BackingField;

		[Token(Token = "0x4001325")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly IEnumerator _innerRoutine;

		[Token(Token = "0x4001326")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private RunningState _state;

		[Token(Token = "0x4001327")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private RunningState _previousState;

		[Token(Token = "0x4001328")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private object _pendingCurrent;

		[Token(Token = "0x4001329")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F8F2C", Offset = "0x6F8F2C")]
		private Exception <Exception>k__BackingField;

		[Token(Token = "0x170004E2")]
		public object Current
		{
			[Token(Token = "0x60016CC")]
			[Address(RVA = "0xAEB6BC", Offset = "0xAEB6BC", VA = "0xAEB6BC", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FD4C4", Offset = "0x6FD4C4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60016CD")]
			[Address(RVA = "0xAEB6C4", Offset = "0xAEB6C4", VA = "0xAEB6C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FD4D4", Offset = "0x6FD4D4")]
			private set
			{
			}
		}

		[Token(Token = "0x170004E3")]
		public TaskState State
		{
			[Token(Token = "0x60016D0")]
			[Address(RVA = "0xAEB8B0", Offset = "0xAEB8B0", VA = "0xAEB8B0")]
			get
			{
				return default(TaskState);
			}
		}

		[Token(Token = "0x170004E4")]
		public Exception Exception
		{
			[Token(Token = "0x60016D1")]
			[Address(RVA = "0xAEB8D4", Offset = "0xAEB8D4", VA = "0xAEB8D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FD4E4", Offset = "0x6FD4E4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60016D2")]
			[Address(RVA = "0xAEB8DC", Offset = "0xAEB8DC", VA = "0xAEB8DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FD4F4", Offset = "0x6FD4F4")]
			private set
			{
			}
		}

		[Token(Token = "0x60016CE")]
		[Address(RVA = "0xAEB6CC", Offset = "0xAEB6CC", VA = "0xAEB6CC", Slot = "4")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60016CF")]
		[Address(RVA = "0xAEB85C", Offset = "0xAEB85C", VA = "0xAEB85C", Slot = "6")]
		public void Reset()
		{
		}

		[Token(Token = "0x60016D3")]
		[Address(RVA = "0xAEB8E4", Offset = "0xAEB8E4", VA = "0xAEB8E4")]
		public Task(IEnumerator routine)
		{
		}

		[Token(Token = "0x60016D4")]
		[Address(RVA = "0xAEB914", Offset = "0xAEB914", VA = "0xAEB914")]
		public void Cancel()
		{
		}

		[Token(Token = "0x60016D5")]
		[Address(RVA = "0xAEBA10", Offset = "0xAEBA10", VA = "0xAEBA10")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6FD504", Offset = "0x6FD504")]
		public IEnumerator Wait()
		{
			return null;
		}

		[Token(Token = "0x60016D6")]
		[Address(RVA = "0xAEB940", Offset = "0xAEB940", VA = "0xAEB940")]
		private void GotoState(RunningState state)
		{
		}

		[Token(Token = "0x60016D7")]
		[Address(RVA = "0xAEBA7C", Offset = "0xAEBA7C", VA = "0xAEBA7C")]
		private void SetPendingCurrentObject(object current)
		{
		}

		[Token(Token = "0x60016D8")]
		[Address(RVA = "0xAEB6D0", Offset = "0xAEB6D0", VA = "0xAEB6D0")]
		private bool OnMoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60016D9")]
		[Address(RVA = "0xAEBDBC", Offset = "0xAEBDBC", VA = "0xAEBDBC")]
		private void MoveNextAsync()
		{
		}

		[Token(Token = "0x60016DA")]
		[Address(RVA = "0xAEBE38", Offset = "0xAEBE38", VA = "0xAEBE38")]
		private void BackgroundRunner(object state)
		{
		}

		[Token(Token = "0x60016DB")]
		[Address(RVA = "0xAEBB38", Offset = "0xAEBB38", VA = "0xAEBB38")]
		private void MoveNextUnity()
		{
		}
	}
	[Token(Token = "0x200031C")]
	public enum TaskState
	{
		[Token(Token = "0x4001337")]
		Init,
		[Token(Token = "0x4001338")]
		Running,
		[Token(Token = "0x4001339")]
		Done,
		[Token(Token = "0x400133A")]
		Cancelled,
		[Token(Token = "0x400133B")]
		Error
	}
	[Token(Token = "0x200031D")]
	public static class ThreadNinjaMonoBehaviourExtensions
	{
		[Token(Token = "0x60016E2")]
		[Address(RVA = "0xAEFF04", Offset = "0xAEFF04", VA = "0xAEFF04")]
		public static Coroutine StartCoroutineAsync(this MonoBehaviour behaviour, IEnumerator routine, out Task task)
		{
			return null;
		}

		[Token(Token = "0x60016E3")]
		[Address(RVA = "0xAEFF8C", Offset = "0xAEFF8C", VA = "0xAEFF8C")]
		public static Coroutine StartCoroutineAsync(this MonoBehaviour behaviour, IEnumerator routine)
		{
			return null;
		}
	}
}
